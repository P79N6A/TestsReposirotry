@Test public void testSingleCommandRemoveListener(){
  HystrixTimer timer=HystrixTimer.getInstance();
  TestListener l1=new TestListener(50,"A");
  timer.addTimerListener(l1);
  TestListener l2=new TestListener(50,"B");
  Reference<TimerListener> l2ref=timer.addTimerListener(l2);
  try {
    Thread.sleep(500);
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
  System.out.println("l1 ticks: " + l1.tickCount.get());
  System.out.println("l2 ticks: " + l2.tickCount.get());
  assertTrue(l1.tickCount.get() > 7);
  assertTrue(l2.tickCount.get() > 7);
  l2ref.clear();
  l1.tickCount.set(0);
  l2.tickCount.set(0);
  try {
    Thread.sleep(500);
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
  System.out.println("l1 ticks: " + l1.tickCount.get());
  System.out.println("l2 ticks: " + l2.tickCount.get());
  assertTrue(l1.tickCount.get() > 7);
  System.out.println("tickCount.get(): " + l2.tickCount.get() + " on l2: "+ l2);
  assertEquals(0,l2.tickCount.get());
}
