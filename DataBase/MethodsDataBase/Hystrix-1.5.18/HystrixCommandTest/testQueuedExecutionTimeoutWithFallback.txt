/** 
 * Test a queued command execution timeout where the command implemented getFallback. <p> We specifically want to protect against developers queuing commands and using queue().get() without a timeout (such as queue().get(3000, TimeUnit.Milliseconds)) and ending up blocking indefinitely by skipping the timeout protection of the execute() command.
 */
@Test public void testQueuedExecutionTimeoutWithFallback() throws Exception {
  TestHystrixCommand<Integer> command=getCommand(ExecutionIsolationStrategy.THREAD,AbstractTestHystrixCommand.ExecutionResult.SUCCESS,200,AbstractTestHystrixCommand.FallbackResult.SUCCESS,50);
  assertEquals(FlexibleTestHystrixCommand.FALLBACK_VALUE,command.queue().get());
  assertCommandExecutionEvents(command,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_SUCCESS);
  assertNotNull(command.getExecutionException());
  assertEquals(0,command.getBuilder().metrics.getCurrentConcurrentExecutionCount());
  assertSaneHystrixRequestLog(1);
}
