/** 
 * Test that the command finishing AFTER a timeout (because thread continues in background) does not register a SUCCESS
 */
@Test public void testCountersOnExecutionTimeout() throws Exception {
  TestHystrixCommand<Integer> command=getCommand(ExecutionIsolationStrategy.THREAD,AbstractTestHystrixCommand.ExecutionResult.SUCCESS,200,AbstractTestHystrixCommand.FallbackResult.SUCCESS,50);
  command.execute();
  Thread.sleep(200);
  assertTrue(command.isResponseFromFallback());
  assertFalse(command.isCircuitBreakerOpen());
  assertFalse(command.isResponseShortCircuited());
  assertTrue(command.getExecutionTimeInMilliseconds() > -1);
  assertTrue(command.isResponseTimedOut());
  assertFalse(command.isSuccessfulExecution());
  assertNotNull(command.getExecutionException());
  assertCommandExecutionEvents(command,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_SUCCESS);
  assertEquals(0,command.getBuilder().metrics.getCurrentConcurrentExecutionCount());
  assertSaneHystrixRequestLog(1);
}
