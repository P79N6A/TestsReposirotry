/** 
 * Test a command execution (asynchronously) that fails, has getFallback implemented but that fails as well.
 */
@Test public void testQueueFailureWithFallbackFailure(){
  TestHystrixCommand<Integer> command=getCommand(ExecutionIsolationStrategy.THREAD,AbstractTestHystrixCommand.ExecutionResult.FAILURE,AbstractTestHystrixCommand.FallbackResult.FAILURE);
  try {
    command.queue().get();
    fail("we shouldn't get here");
  }
 catch (  Exception e) {
    if (e.getCause() instanceof HystrixRuntimeException) {
      HystrixRuntimeException de=(HystrixRuntimeException)e.getCause();
      e.printStackTrace();
      assertNotNull(de.getFallbackException());
    }
 else {
      fail("the cause should be HystrixRuntimeException");
    }
  }
  assertTrue(command.getExecutionTimeInMilliseconds() > -1);
  assertTrue(command.isFailedExecution());
  assertCommandExecutionEvents(command,HystrixEventType.FAILURE,HystrixEventType.FALLBACK_FAILURE);
  assertNotNull(command.getExecutionException());
  assertEquals(0,command.getBuilder().metrics.getCurrentConcurrentExecutionCount());
  assertSaneHystrixRequestLog(1);
}
