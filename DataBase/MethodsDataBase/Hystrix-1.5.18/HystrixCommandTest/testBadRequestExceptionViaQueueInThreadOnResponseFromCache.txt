/** 
 * Test that BadRequestException behavior works the same on a cached response.
 */
@Test public void testBadRequestExceptionViaQueueInThreadOnResponseFromCache() throws Exception {
  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();
  BadRequestCommand command1=null;
  try {
    command1=new BadRequestCommand(circuitBreaker,ExecutionIsolationStrategy.THREAD);
    command1.execute();
  }
 catch (  Throwable e) {
  }
  BadRequestCommand command2=null;
  try {
    command2=new BadRequestCommand(circuitBreaker,ExecutionIsolationStrategy.THREAD);
    command2.queue().get();
    fail("we expect to receive a " + HystrixBadRequestException.class.getSimpleName());
  }
 catch (  ExecutionException e) {
    e.printStackTrace();
    if (e.getCause() instanceof HystrixBadRequestException) {
    }
 else {
      fail("We expect a " + HystrixBadRequestException.class.getSimpleName() + " but got a "+ e.getClass().getSimpleName());
    }
  }
  assertCommandExecutionEvents(command1,HystrixEventType.BAD_REQUEST);
  assertCommandExecutionEvents(command2,HystrixEventType.BAD_REQUEST,HystrixEventType.RESPONSE_FROM_CACHE);
  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());
  assertSaneHystrixRequestLog(2);
}
