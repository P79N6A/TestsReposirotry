/** 
 * Test Request scoped caching with a mixture of commands
 */
@Test public void testNoRequestCacheViaQueueSemaphore1() throws Exception {
  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();
  SuccessfulCacheableCommandViaSemaphore command1=new SuccessfulCacheableCommandViaSemaphore(circuitBreaker,false,"A");
  SuccessfulCacheableCommandViaSemaphore command2=new SuccessfulCacheableCommandViaSemaphore(circuitBreaker,false,"B");
  SuccessfulCacheableCommandViaSemaphore command3=new SuccessfulCacheableCommandViaSemaphore(circuitBreaker,false,"A");
  assertFalse(command1.isCommandRunningInThread());
  Future<String> f1=command1.queue();
  Future<String> f2=command2.queue();
  Future<String> f3=command3.queue();
  assertEquals("A",f1.get());
  assertEquals("B",f2.get());
  assertEquals("A",f3.get());
  assertTrue(command1.executed);
  assertTrue(command2.executed);
  assertTrue(command3.executed);
  assertCommandExecutionEvents(command1,HystrixEventType.SUCCESS);
  assertCommandExecutionEvents(command2,HystrixEventType.SUCCESS);
  assertCommandExecutionEvents(command3,HystrixEventType.SUCCESS);
  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());
  assertSaneHystrixRequestLog(3);
}
