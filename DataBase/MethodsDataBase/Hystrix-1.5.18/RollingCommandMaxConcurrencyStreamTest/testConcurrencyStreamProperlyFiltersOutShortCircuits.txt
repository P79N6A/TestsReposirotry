@Test public void testConcurrencyStreamProperlyFiltersOutShortCircuits() throws InterruptedException {
  HystrixCommandKey key=HystrixCommandKey.Factory.asKey("CMD-Concurrency-G");
  stream=RollingCommandMaxConcurrencyStream.getInstance(key,10,100);
  stream.startCachingStreamValuesIfUnstarted();
  final CountDownLatch latch=new CountDownLatch(1);
  stream.observe().take(10).subscribe(getSubscriber(latch));
  Command failure1=Command.from(groupKey,key,HystrixEventType.FAILURE);
  Command failure2=Command.from(groupKey,key,HystrixEventType.FAILURE);
  Command failure3=Command.from(groupKey,key,HystrixEventType.FAILURE);
  List<Command> shortCircuited=new ArrayList<Command>();
  for (int i=0; i < 20; i++) {
    shortCircuited.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,100));
  }
  failure1.execute();
  failure2.execute();
  failure3.execute();
  Thread.sleep(150);
  for (  Command cmd : shortCircuited) {
    cmd.observe();
  }
  assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));
  System.out.println("ReqLog : " + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());
  assertEquals(1,stream.getLatestRollingMax());
}
