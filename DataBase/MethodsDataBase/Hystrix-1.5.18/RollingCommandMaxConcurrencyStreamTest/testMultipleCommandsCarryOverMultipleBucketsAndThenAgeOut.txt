/** 
 * BUCKETS A    |    B    |    C    |    D    |    E    | 1:  [-------------------------------] 2:          [-------------------------------] 3:                      [--] 4:                              [--] Max concurrency should be 3, but by waiting for 30 bucket rolls, final max concurrency should be 0
 */
@Test public void testMultipleCommandsCarryOverMultipleBucketsAndThenAgeOut() throws InterruptedException {
  HystrixCommandKey key=HystrixCommandKey.Factory.asKey("CMD-Concurrency-E");
  stream=RollingCommandMaxConcurrencyStream.getInstance(key,10,100);
  stream.startCachingStreamValuesIfUnstarted();
  final CountDownLatch latch=new CountDownLatch(1);
  stream.observe().take(30).subscribe(getSubscriber(latch));
  Command cmd1=Command.from(groupKey,key,HystrixEventType.SUCCESS,300);
  Command cmd2=Command.from(groupKey,key,HystrixEventType.SUCCESS,300);
  Command cmd3=Command.from(groupKey,key,HystrixEventType.SUCCESS,10);
  Command cmd4=Command.from(groupKey,key,HystrixEventType.SUCCESS,10);
  cmd1.observe();
  Thread.sleep(100);
  cmd2.observe();
  Thread.sleep(100);
  cmd3.observe();
  Thread.sleep(100);
  cmd4.observe();
  assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));
  assertEquals(0,stream.getLatestRollingMax());
}
