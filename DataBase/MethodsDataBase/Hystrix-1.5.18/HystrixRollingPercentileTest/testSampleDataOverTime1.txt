@Test public void testSampleDataOverTime1(){
  System.out.println("\n\n***************************** testSampleDataOverTime1 \n");
  MockedTime time=new MockedTime();
  HystrixRollingPercentile p=new HystrixRollingPercentile(time,timeInMilliseconds,numberOfBuckets,bucketDataLength,enabled);
  int previousTime=0;
  for (int i=0; i < SampleDataHolder1.data.length; i++) {
    int timeInMillisecondsSinceStart=SampleDataHolder1.data[i][0];
    int latency=SampleDataHolder1.data[i][1];
    time.increment(timeInMillisecondsSinceStart - previousTime);
    previousTime=timeInMillisecondsSinceStart;
    p.addValue(latency);
  }
  System.out.println("0.01: " + p.getPercentile(0.01));
  System.out.println("Median: " + p.getPercentile(50));
  System.out.println("90th: " + p.getPercentile(90));
  System.out.println("99th: " + p.getPercentile(99));
  System.out.println("99.5th: " + p.getPercentile(99.5));
  System.out.println("99.99: " + p.getPercentile(99.99));
  System.out.println("Median: " + p.getPercentile(50));
  System.out.println("Median: " + p.getPercentile(50));
  System.out.println("Median: " + p.getPercentile(50));
  for (int i=0; i < 10; i++) {
    if (p.getPercentile(50) > 5) {
      fail("We expect around 2 but got: " + p.getPercentile(50));
    }
    if (p.getPercentile(99.5) < 20) {
      fail("We expect to see some high values over 20 but got: " + p.getPercentile(99.5));
    }
  }
}
