@Test public void testRolling(){
  MockedTime time=new MockedTime();
  HystrixRollingPercentile p=new HystrixRollingPercentile(time,timeInMilliseconds,numberOfBuckets,bucketDataLength,enabled);
  p.addValue(1000);
  p.addValue(1000);
  p.addValue(1000);
  p.addValue(2000);
  assertEquals(1,p.buckets.size());
  assertEquals(0,p.getPercentile(50));
  time.increment(6000);
  assertEquals(1,p.buckets.size());
  assertEquals(1000,p.getPercentile(50));
  assertEquals(2,p.buckets.size());
  p.addValue(1000);
  p.addValue(500);
  assertEquals(2,p.buckets.size());
  p.addValue(200);
  p.addValue(200);
  p.addValue(1600);
  p.addValue(200);
  p.addValue(1600);
  p.addValue(1600);
  assertEquals(1000,p.getPercentile(50));
  time.increment(6000);
  PercentileSnapshot ps=new PercentileSnapshot(1000,1000,1000,2000,1000,500,200,200,1600,200,1600,1600);
  assertEquals(ps.getPercentile(0.15),p.getPercentile(0.15));
  assertEquals(ps.getPercentile(0.50),p.getPercentile(0.50));
  assertEquals(ps.getPercentile(0.90),p.getPercentile(0.90));
  assertEquals(ps.getPercentile(0.995),p.getPercentile(0.995));
  System.out.println("100th: " + ps.getPercentile(100) + "  "+ p.getPercentile(100));
  System.out.println("99.5th: " + ps.getPercentile(99.5) + "  "+ p.getPercentile(99.5));
  System.out.println("99th: " + ps.getPercentile(99) + "  "+ p.getPercentile(99));
  System.out.println("90th: " + ps.getPercentile(90) + "  "+ p.getPercentile(90));
  System.out.println("50th: " + ps.getPercentile(50) + "  "+ p.getPercentile(50));
  System.out.println("10th: " + ps.getPercentile(10) + "  "+ p.getPercentile(10));
  assertEquals(991,ps.getMean());
}
