/** 
 * Test that the circuit-breaker will 'trip' and prevent command execution on subsequent calls.
 */
@Test public void testCircuitBreakerTripsAfterFailures() throws InterruptedException {
  HystrixCommandKey commandKey=HystrixCommandKey.Factory.asKey("KnownFailureTestCommandWithFallback");
  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker(commandKey);
  KnownFailureTestCommandWithFallback attempt1=new KnownFailureTestCommandWithFallback(circuitBreaker,ExecutionIsolationStrategy.SEMAPHORE,true);
  attempt1.observe().toBlocking().single();
  Thread.sleep(100);
  assertTrue(attempt1.isResponseFromFallback());
  assertFalse(attempt1.isCircuitBreakerOpen());
  assertFalse(attempt1.isResponseShortCircuited());
  KnownFailureTestCommandWithFallback attempt2=new KnownFailureTestCommandWithFallback(circuitBreaker,ExecutionIsolationStrategy.SEMAPHORE,true);
  attempt2.observe().toBlocking().single();
  Thread.sleep(100);
  assertTrue(attempt2.isResponseFromFallback());
  assertFalse(attempt2.isCircuitBreakerOpen());
  assertFalse(attempt2.isResponseShortCircuited());
  KnownFailureTestCommandWithFallback attempt3=new KnownFailureTestCommandWithFallback(circuitBreaker,ExecutionIsolationStrategy.SEMAPHORE,true);
  attempt3.observe().toBlocking().single();
  Thread.sleep(100);
  assertTrue(attempt3.isResponseFromFallback());
  assertFalse(attempt3.isResponseShortCircuited());
  assertTrue(attempt3.isCircuitBreakerOpen());
  KnownFailureTestCommandWithFallback attempt4=new KnownFailureTestCommandWithFallback(circuitBreaker,ExecutionIsolationStrategy.SEMAPHORE,true);
  attempt4.observe().toBlocking().single();
  Thread.sleep(100);
  assertTrue(attempt4.isResponseFromFallback());
  assertTrue(attempt4.isResponseShortCircuited());
  assertTrue(attempt4.isCircuitBreakerOpen());
  assertCommandExecutionEvents(attempt1,HystrixEventType.FAILURE,HystrixEventType.FALLBACK_EMIT,HystrixEventType.FALLBACK_SUCCESS);
  assertCommandExecutionEvents(attempt2,HystrixEventType.FAILURE,HystrixEventType.FALLBACK_EMIT,HystrixEventType.FALLBACK_SUCCESS);
  assertCommandExecutionEvents(attempt3,HystrixEventType.FAILURE,HystrixEventType.FALLBACK_EMIT,HystrixEventType.FALLBACK_SUCCESS);
  assertCommandExecutionEvents(attempt4,HystrixEventType.SHORT_CIRCUITED,HystrixEventType.FALLBACK_EMIT,HystrixEventType.FALLBACK_SUCCESS);
  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());
  assertEquals(4,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());
}
