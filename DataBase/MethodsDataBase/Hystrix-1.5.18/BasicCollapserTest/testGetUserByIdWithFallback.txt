@Test public void testGetUserByIdWithFallback() throws ExecutionException, InterruptedException {
  Future<User> f1=userService.getUserByIdWithFallback("1");
  Future<User> f2=userService.getUserByIdWithFallback("2");
  Future<User> f3=userService.getUserByIdWithFallback("3");
  Future<User> f4=userService.getUserByIdWithFallback("4");
  Future<User> f5=userService.getUserByIdWithFallback("5");
  assertEquals("name: 1",f1.get().getName());
  assertEquals("name: 2",f2.get().getName());
  assertEquals("name: 3",f3.get().getName());
  assertEquals("name: 4",f4.get().getName());
  assertEquals("name: 5",f5.get().getName());
  assertEquals(2,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());
  HystrixInvokableInfo<?> getUserByIdsWithFallback=getHystrixCommandByKey("getUserByIdsWithFallback");
  com.netflix.hystrix.HystrixInvokableInfo getUserByIdsFallback=getHystrixCommandByKey("getUserByIdsFallback");
  assertTrue(getUserByIdsWithFallback.getExecutionEvents().contains(HystrixEventType.FAILURE));
  assertTrue(getUserByIdsWithFallback.getExecutionEvents().contains(HystrixEventType.FALLBACK_SUCCESS));
  assertTrue(getUserByIdsFallback.getExecutionEvents().contains(HystrixEventType.SUCCESS));
}
