@Test public void testSemaphoreIsolatedSynchronousHystrixObservableCommand(){
  HystrixObservableCommand<Integer> observableCmd=new SynchronousObservableCommand();
  assertNull(Hystrix.getCurrentThreadExecutingCommand());
  final CountDownLatch latch=new CountDownLatch(1);
  observableCmd.observe().subscribe(new Subscriber<Integer>(){
    @Override public void onCompleted(){
      latch.countDown();
    }
    @Override public void onError(    Throwable e){
      fail(e.getMessage());
      latch.countDown();
    }
    @Override public void onNext(    Integer value){
      System.out.println(Thread.currentThread().getName() + " : " + System.currentTimeMillis()+ " SyncObservable latched Subscriber OnNext : "+ value);
    }
  }
);
  try {
    assertNull(Hystrix.getCurrentThreadExecutingCommand());
    assertEquals(0,Hystrix.getCommandCount());
    latch.await();
  }
 catch (  InterruptedException ex) {
    fail(ex.getMessage());
  }
  assertNull(Hystrix.getCurrentThreadExecutingCommand());
  assertEquals(0,Hystrix.getCommandCount());
}
