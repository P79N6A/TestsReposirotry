@Test public void testHystrixCommandProperties(){
  User u1=userService.getUsingAllCommandProperties("1","name: ");
  assertEquals("name: 1",u1.getName());
  assertEquals(1,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());
  HystrixInvokableInfo<?> command=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().iterator().next();
  assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));
  assertEquals(HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE,command.getProperties().executionIsolationStrategy().get());
  assertEquals(500,command.getProperties().executionTimeoutInMilliseconds().get().intValue());
  assertEquals(true,command.getProperties().executionTimeoutEnabled().get().booleanValue());
  assertEquals(false,command.getProperties().executionIsolationThreadInterruptOnTimeout().get().booleanValue());
  assertEquals(10,command.getProperties().executionIsolationSemaphoreMaxConcurrentRequests().get().intValue());
  assertEquals(15,command.getProperties().fallbackIsolationSemaphoreMaxConcurrentRequests().get().intValue());
  assertEquals(false,command.getProperties().fallbackEnabled().get().booleanValue());
  assertEquals(false,command.getProperties().circuitBreakerEnabled().get().booleanValue());
  assertEquals(30,command.getProperties().circuitBreakerRequestVolumeThreshold().get().intValue());
  assertEquals(250,command.getProperties().circuitBreakerSleepWindowInMilliseconds().get().intValue());
  assertEquals(60,command.getProperties().circuitBreakerErrorThresholdPercentage().get().intValue());
  assertEquals(false,command.getProperties().circuitBreakerForceOpen().get().booleanValue());
  assertEquals(true,command.getProperties().circuitBreakerForceClosed().get().booleanValue());
  assertEquals(false,command.getProperties().metricsRollingPercentileEnabled().get().booleanValue());
  assertEquals(400,command.getProperties().metricsRollingPercentileWindowInMilliseconds().get().intValue());
  assertEquals(5,command.getProperties().metricsRollingPercentileWindowBuckets().get().intValue());
  assertEquals(6,command.getProperties().metricsRollingPercentileBucketSize().get().intValue());
  assertEquals(10,command.getProperties().metricsRollingStatisticalWindowBuckets().get().intValue());
  assertEquals(500,command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue());
  assertEquals(312,command.getProperties().metricsHealthSnapshotIntervalInMilliseconds().get().intValue());
  assertEquals(false,command.getProperties().requestCacheEnabled().get().booleanValue());
  assertEquals(true,command.getProperties().requestLogEnabled().get().booleanValue());
}
