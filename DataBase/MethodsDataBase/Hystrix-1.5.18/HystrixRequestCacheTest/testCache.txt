@Test public void testCache(){
  HystrixConcurrencyStrategy strategy=HystrixConcurrencyStrategyDefault.getInstance();
  HystrixRequestContext context=HystrixRequestContext.initializeContext();
  try {
    HystrixRequestCache cache1=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey("command1"),strategy);
    cache1.putIfAbsent("valueA",new TestObservable("a1"));
    cache1.putIfAbsent("valueA",new TestObservable("a2"));
    cache1.putIfAbsent("valueB",new TestObservable("b1"));
    HystrixRequestCache cache2=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey("command2"),strategy);
    cache2.putIfAbsent("valueA",new TestObservable("a3"));
    assertEquals("a1",cache1.get("valueA").toObservable().toBlocking().last());
    assertEquals("b1",cache1.get("valueB").toObservable().toBlocking().last());
    assertEquals("a3",cache2.get("valueA").toObservable().toBlocking().last());
    assertNull(cache2.get("valueB"));
  }
 catch (  Exception e) {
    fail("Exception: " + e.getMessage());
    e.printStackTrace();
  }
 finally {
    context.shutdown();
  }
  context=HystrixRequestContext.initializeContext();
  try {
    HystrixRequestCache cache=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey("command1"),strategy);
    assertNull(cache.get("valueA"));
    assertNull(cache.get("valueB"));
  }
  finally {
    context.shutdown();
  }
}
