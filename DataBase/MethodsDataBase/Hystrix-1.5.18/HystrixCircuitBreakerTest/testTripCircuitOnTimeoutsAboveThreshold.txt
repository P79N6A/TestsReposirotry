/** 
 * Test that if the % of timeouts is higher than the threshold that the circuit trips.
 */
@Test public void testTripCircuitOnTimeoutsAboveThreshold(){
  String key="cmd-E";
  try {
    HystrixCommand<Boolean> cmd1=new SuccessCommand(key,60);
    HystrixCircuitBreaker cb=cmd1.circuitBreaker;
    assertTrue(cb.allowRequest());
    assertFalse(cb.isOpen());
    cmd1.execute();
    HystrixCommand<Boolean> cmd2=new SuccessCommand(key,1);
    cmd2.execute();
    HystrixCommand<Boolean> cmd3=new TimeoutCommand(key);
    cmd3.execute();
    HystrixCommand<Boolean> cmd4=new SuccessCommand(key,1);
    cmd4.execute();
    HystrixCommand<Boolean> cmd5=new TimeoutCommand(key);
    cmd5.execute();
    HystrixCommand<Boolean> cmd6=new TimeoutCommand(key);
    cmd6.execute();
    HystrixCommand<Boolean> cmd7=new SuccessCommand(key,1);
    cmd7.execute();
    HystrixCommand<Boolean> cmd8=new TimeoutCommand(key);
    cmd8.execute();
    HystrixCommand<Boolean> cmd9=new TimeoutCommand(key);
    cmd9.execute();
    Thread.sleep(100);
    assertFalse(cb.allowRequest());
    assertTrue(cb.isOpen());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Error occurred: " + e.getMessage());
  }
}
