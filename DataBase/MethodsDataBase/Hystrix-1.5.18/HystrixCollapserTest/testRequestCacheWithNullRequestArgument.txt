/** 
 * Test command that uses a null request argument
 */
@Test public void testRequestCacheWithNullRequestArgument() throws Exception {
  ConcurrentLinkedQueue<HystrixCommand<List<String>>> commands=new ConcurrentLinkedQueue<HystrixCommand<List<String>>>();
  final TestCollapserTimer timer=new TestCollapserTimer();
  SuccessfulCacheableCollapsedCommand command1=new SuccessfulCacheableCollapsedCommand(timer,null,true,commands);
  SuccessfulCacheableCollapsedCommand command2=new SuccessfulCacheableCollapsedCommand(timer,null,true,commands);
  Future<String> f1=command1.queue();
  Future<String> f2=command2.queue();
  timer.incrementTime(15);
  assertEquals("NULL",f1.get(1000,TimeUnit.MILLISECONDS));
  assertEquals("NULL",f2.get(1000,TimeUnit.MILLISECONDS));
  assertEquals(1,commands.size());
  assertTrue(commands.peek().getExecutionEvents().contains(HystrixEventType.SUCCESS));
  assertTrue(commands.peek().getExecutionEvents().contains(HystrixEventType.COLLAPSED));
  Future<String> f3=command1.queue();
  timer.incrementTime(15);
  assertEquals("NULL",f3.get(1000,TimeUnit.MILLISECONDS));
  assertEquals(1,commands.size());
  assertEquals(1,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());
  Iterator<HystrixInvokableInfo<?>> cmdIterator=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().iterator();
  assertEquals(1,cmdIterator.next().getNumberCollapsed());
}
