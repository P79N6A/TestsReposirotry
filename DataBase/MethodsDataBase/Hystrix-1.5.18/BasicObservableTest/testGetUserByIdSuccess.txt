@Test public void testGetUserByIdSuccess(){
  Observable<User> observable=userService.getUser("1","name: ");
  assertEquals("name: 1",observable.toBlocking().single().getName());
  Observable<User> fUser=userService.getUser("1","name: ");
  fUser.subscribe(new Observer<User>(){
    @Override public void onCompleted(){
    }
    @Override public void onError(    Throwable e){
      e.printStackTrace();
    }
    @Override public void onNext(    User v){
      System.out.println("onNext: " + v);
    }
  }
);
  Observable<User> fs=userService.getUser("1","name: ");
  fs.subscribe(new Action1<User>(){
    @Override public void call(    User user){
      assertEquals("name: 1",user.getName());
    }
  }
);
  assertEquals(3,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());
  com.netflix.hystrix.HystrixInvokableInfo getUserCommand=getHystrixCommandByKey("getUser");
  assertTrue(getUserCommand.getExecutionEvents().contains(HystrixEventType.SUCCESS));
}
