/** 
 * Short-circuit? : YES Thread/semaphore: SEMAPHORE Fallback: synchronous HystrixRuntimeException
 */
@Test public void testExecutionHookSemaphoreShortCircuitUnsuccessfulFallback(){
  assertHooksOnFailFast(new Func0<C>(){
    @Override public C call(){
      return getCircuitOpenCommand(ExecutionIsolationStrategy.SEMAPHORE,FallbackResult.FAILURE);
    }
  }
,new Action1<C>(){
    @Override public void call(    C command){
      TestableExecutionHook hook=command.getBuilder().executionHook;
      assertTrue(hook.commandEmissionsMatch(0,1,0));
      assertTrue(hook.executionEventsMatch(0,0,0));
      assertTrue(hook.fallbackEventsMatch(0,1,0));
      assertEquals(RuntimeException.class,hook.getCommandException().getClass());
      assertEquals(RuntimeException.class,hook.getFallbackException().getClass());
      assertEquals("onStart - onFallbackStart - onFallbackError - onError - ",hook.executionSequence.toString());
    }
  }
);
}
