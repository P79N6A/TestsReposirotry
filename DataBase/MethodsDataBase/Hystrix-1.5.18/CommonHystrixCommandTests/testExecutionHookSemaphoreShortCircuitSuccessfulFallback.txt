/** 
 * Short-circuit? : YES Thread/semaphore: SEMAPHORE Fallback: SUCCESS
 */
@Test public void testExecutionHookSemaphoreShortCircuitSuccessfulFallback(){
  assertHooksOnSuccess(new Func0<C>(){
    @Override public C call(){
      return getCircuitOpenCommand(ExecutionIsolationStrategy.SEMAPHORE,FallbackResult.SUCCESS);
    }
  }
,new Action1<C>(){
    @Override public void call(    C command){
      TestableExecutionHook hook=command.getBuilder().executionHook;
      assertTrue(hook.commandEmissionsMatch(1,0,1));
      assertTrue(hook.executionEventsMatch(0,0,0));
      assertTrue(hook.fallbackEventsMatch(1,0,1));
      assertEquals("onStart - onFallbackStart - onFallbackEmit - !onFallbackSuccess - !onComplete - onEmit - onFallbackSuccess - onSuccess - ",hook.executionSequence.toString());
    }
  }
);
}
