/** 
 * Short-circuit? : NO Thread/semaphore: SEMAPHORE Semaphore Permit reached? : NO Execution Result: synchronous HystrixBadRequestException
 */
@Test public void testExecutionHookSemaphoreBadRequestException(){
  assertHooksOnFailure(new Func0<C>(){
    @Override public C call(){
      return getCommand(ExecutionIsolationStrategy.SEMAPHORE,ExecutionResult.BAD_REQUEST,FallbackResult.SUCCESS);
    }
  }
,new Action1<C>(){
    @Override public void call(    C command){
      TestableExecutionHook hook=command.getBuilder().executionHook;
      assertTrue(hook.commandEmissionsMatch(0,1,0));
      assertTrue(hook.executionEventsMatch(0,1,0));
      assertTrue(hook.fallbackEventsMatch(0,0,0));
      assertEquals(HystrixBadRequestException.class,hook.getCommandException().getClass());
      assertEquals(HystrixBadRequestException.class,hook.getExecutionException().getClass());
      assertEquals("onStart - !onRunStart - onExecutionStart - onExecutionError - !onRunError - onError - ",hook.executionSequence.toString());
    }
  }
);
}
