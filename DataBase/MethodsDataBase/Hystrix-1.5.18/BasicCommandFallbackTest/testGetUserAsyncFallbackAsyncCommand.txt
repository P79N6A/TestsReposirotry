@Test public void testGetUserAsyncFallbackAsyncCommand() throws ExecutionException, InterruptedException {
  Future<User> f1=userService.getUserAsyncFallbackAsyncCommand(" ","name: ");
  assertEquals("def",f1.get().getName());
  assertEquals(4,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());
  HystrixInvokableInfo<?> getUserAsyncFallbackAsyncCommand=getHystrixCommandByKey("getUserAsyncFallbackAsyncCommand");
  com.netflix.hystrix.HystrixInvokableInfo firstAsyncFallbackCommand=getHystrixCommandByKey("firstAsyncFallbackCommand");
  com.netflix.hystrix.HystrixInvokableInfo secondAsyncFallbackCommand=getHystrixCommandByKey("secondAsyncFallbackCommand");
  com.netflix.hystrix.HystrixInvokableInfo thirdAsyncFallbackCommand=getHystrixCommandByKey("thirdAsyncFallbackCommand");
  assertEquals("getUserAsyncFallbackAsyncCommand",getUserAsyncFallbackAsyncCommand.getCommandKey().name());
  assertTrue(getUserAsyncFallbackAsyncCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));
  assertTrue(firstAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));
  assertTrue(secondAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));
  assertTrue(thirdAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));
  assertTrue(thirdAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FALLBACK_SUCCESS));
}
