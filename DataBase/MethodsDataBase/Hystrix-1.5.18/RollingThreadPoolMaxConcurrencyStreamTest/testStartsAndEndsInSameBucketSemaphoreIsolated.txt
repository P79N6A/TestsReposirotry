@Test public void testStartsAndEndsInSameBucketSemaphoreIsolated() throws InterruptedException {
  HystrixCommandGroupKey groupKey=HystrixCommandGroupKey.Factory.asKey("ThreadPool-Concurrency-C");
  HystrixThreadPoolKey threadPoolKey=HystrixThreadPoolKey.Factory.asKey("ThreadPool-Concurrency-C");
  HystrixCommandKey key=HystrixCommandKey.Factory.asKey("RollingConcurrency-C");
  stream=RollingThreadPoolMaxConcurrencyStream.getInstance(threadPoolKey,10,100);
  stream.startCachingStreamValuesIfUnstarted();
  final CountDownLatch latch=new CountDownLatch(1);
  stream.observe().take(10).subscribe(getSubscriber(latch));
  Command cmd1=Command.from(groupKey,key,HystrixEventType.SUCCESS,10,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE);
  Command cmd2=Command.from(groupKey,key,HystrixEventType.SUCCESS,14,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE);
  cmd1.observe();
  Thread.sleep(1);
  cmd2.observe();
  assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));
  assertEquals(0,stream.getLatestRollingMax());
}
