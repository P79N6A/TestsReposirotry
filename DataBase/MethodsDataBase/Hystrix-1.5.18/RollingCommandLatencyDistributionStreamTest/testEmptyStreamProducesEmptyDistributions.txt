@Test public void testEmptyStreamProducesEmptyDistributions(){
  HystrixCommandKey key=HystrixCommandKey.Factory.asKey("CMD-Latency-A");
  stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);
  stream.startCachingStreamValuesIfUnstarted();
  final CountDownLatch latch=new CountDownLatch(1);
  stream.observe().take(10).subscribe(new Subscriber<CachedValuesHistogram>(){
    @Override public void onCompleted(){
      latch.countDown();
    }
    @Override public void onError(    Throwable e){
      fail(e.getMessage());
    }
    @Override public void onNext(    CachedValuesHistogram distribution){
      System.out.println("OnNext @ " + System.currentTimeMillis());
      assertEquals(0,distribution.getTotalCount());
    }
  }
);
  try {
    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));
  }
 catch (  InterruptedException ex) {
    fail("Interrupted ex");
  }
  assertEquals(0,stream.getLatest().getTotalCount());
}
