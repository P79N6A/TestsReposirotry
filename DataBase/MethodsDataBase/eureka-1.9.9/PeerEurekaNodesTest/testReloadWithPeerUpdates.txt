@Test public void testReloadWithPeerUpdates() throws Exception {
  peerEurekaNodes.withPeerUrls(PEER_EUREKA_URL_A);
  peerEurekaNodes.start();
  PeerEurekaNode peerNodeA=getPeerNode(PEER_EUREKA_URL_A);
  peerEurekaNodes.withPeerUrls(PEER_EUREKA_URL_A,PEER_EUREKA_URL_B);
  assertThat(peerEurekaNodes.awaitNextReload(60,TimeUnit.SECONDS),is(true));
  assertThat(getPeerNode(PEER_EUREKA_URL_A),is(notNullValue()));
  assertThat(getPeerNode(PEER_EUREKA_URL_B),is(notNullValue()));
  peerEurekaNodes.withPeerUrls(PEER_EUREKA_URL_B,PEER_EUREKA_URL_C);
  assertThat(peerEurekaNodes.awaitNextReload(60,TimeUnit.SECONDS),is(true));
  assertThat(getPeerNode(PEER_EUREKA_URL_A),is(nullValue()));
  assertThat(getPeerNode(PEER_EUREKA_URL_B),is(notNullValue()));
  assertThat(getPeerNode(PEER_EUREKA_URL_C),is(notNullValue()));
  verify(peerNodeA,times(1)).shutDown();
}
