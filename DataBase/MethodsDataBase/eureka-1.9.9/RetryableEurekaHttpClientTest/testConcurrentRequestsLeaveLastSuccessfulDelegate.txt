@Test(timeout=10000) public void testConcurrentRequestsLeaveLastSuccessfulDelegate() throws Exception {
  when(clientFactory.newClient(Matchers.<EurekaEndpoint>anyVararg())).thenReturn(clusterDelegates.get(0),clusterDelegates.get(1));
  BlockingRequestExecutor executor0=new BlockingRequestExecutor();
  BlockingRequestExecutor executor1=new BlockingRequestExecutor();
  Thread thread0=new Thread(new RequestExecutorRunner(executor0));
  Thread thread1=new Thread(new RequestExecutorRunner(executor1));
  thread0.start();
  executor0.awaitReady();
  thread1.start();
  executor1.awaitReady();
  executor0.complete();
  thread0.join();
  executor1.complete();
  thread1.join();
  when(requestExecutor.execute(clusterDelegates.get(1))).thenReturn(EurekaHttpResponse.status(200));
  EurekaHttpResponse<Void> httpResponse=retryableClient.execute(requestExecutor);
  assertThat(httpResponse.getStatusCode(),is(equalTo(200)));
  verify(clientFactory,times(2)).newClient(Matchers.<EurekaEndpoint>anyVararg());
  verify(requestExecutor,times(0)).execute(clusterDelegates.get(0));
  verify(requestExecutor,times(1)).execute(clusterDelegates.get(1));
}
