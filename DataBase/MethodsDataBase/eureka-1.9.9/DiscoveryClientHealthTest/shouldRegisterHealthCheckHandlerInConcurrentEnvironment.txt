@Test public void shouldRegisterHealthCheckHandlerInConcurrentEnvironment() throws Exception {
  HealthCheckHandler myHealthCheckHandler=new MyHealthCheckHandler(InstanceInfo.InstanceStatus.UP);
  int testsCount=20;
  int threadsCount=testsCount * 2;
  CountDownLatch starterLatch=new CountDownLatch(threadsCount);
  CountDownLatch finishLatch=new CountDownLatch(threadsCount);
  List<DiscoveryClient> discoveryClients=range(0,testsCount).mapToObj(i -> (DiscoveryClient)getSetupDiscoveryClient()).collect(toList());
  Stream<Thread> registerCustomHandlerThreads=discoveryClients.stream().map(client -> new SimultaneousStarter(starterLatch,finishLatch,() -> client.registerHealthCheck(myHealthCheckHandler)));
  Stream<Thread> lazyInitOfDefaultHandlerThreads=discoveryClients.stream().map(client -> new SimultaneousStarter(starterLatch,finishLatch,client::getHealthCheckHandler));
  List<Thread> threads=Stream.concat(registerCustomHandlerThreads,lazyInitOfDefaultHandlerThreads).collect(toList());
  Collections.shuffle(threads);
  threads.forEach(Thread::start);
  try {
    finishLatch.await();
    discoveryClients.forEach(client -> Assert.assertSame("Healthcheck handler should be custom.",myHealthCheckHandler,client.getHealthCheckHandler()));
  }
  finally {
    discoveryClients.forEach(DiscoveryClient::shutdown);
  }
}
