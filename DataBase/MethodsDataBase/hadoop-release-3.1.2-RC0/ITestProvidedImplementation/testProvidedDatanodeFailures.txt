@Test(timeout=30000) public void testProvidedDatanodeFailures() throws Exception {
  createImage(new FSTreeWalk(providedPath,conf),nnDirPath,FixedBlockResolver.class);
  startCluster(nnDirPath,3,null,new StorageType[][]{{StorageType.PROVIDED,StorageType.DISK},{StorageType.PROVIDED,StorageType.DISK},{StorageType.DISK}},false);
  DataNode providedDatanode1=cluster.getDataNodes().get(0);
  DataNode providedDatanode2=cluster.getDataNodes().get(1);
  DFSClient client=new DFSClient(new InetSocketAddress("localhost",cluster.getNameNodePort()),cluster.getConfiguration(0));
  DatanodeStorageInfo providedDNInfo=getProvidedDatanodeStorageInfo();
  if (numFiles >= 1) {
    String filename="/" + filePrefix + (numFiles - 1)+ fileSuffix;
    DatanodeInfo[] dnInfos=getAndCheckBlockLocations(client,filename,baseFileLen,1,2);
    assertTrue(dnInfos[0].getDatanodeUuid().equals(providedDatanode1.getDatanodeUuid()) || dnInfos[0].getDatanodeUuid().equals(providedDatanode2.getDatanodeUuid()));
    MiniDFSCluster.DataNodeProperties providedDNProperties1=cluster.stopDataNode(0);
    BlockManagerTestUtil.noticeDeadDatanode(cluster.getNameNode(),providedDatanode1.getDatanodeId().getXferAddr());
    dnInfos=getAndCheckBlockLocations(client,filename,baseFileLen,1,1);
    assertEquals(providedDatanode2.getDatanodeUuid(),dnInfos[0].getDatanodeUuid());
    MiniDFSCluster.DataNodeProperties providedDNProperties2=cluster.stopDataNode(0);
    BlockManagerTestUtil.noticeDeadDatanode(cluster.getNameNode(),providedDatanode2.getDatanodeId().getXferAddr());
    getAndCheckBlockLocations(client,filename,baseFileLen,1,0);
    assertEquals(0,providedDNInfo.getBlockReportCount());
    cluster.restartDataNode(providedDNProperties1,true);
    cluster.waitActive();
    assertEquals(1,providedDNInfo.getBlockReportCount());
    dnInfos=getAndCheckBlockLocations(client,filename,baseFileLen,1,1);
    assertEquals(providedDatanode1.getDatanodeId().getXferAddr(),dnInfos[0].getXferAddr());
  }
}
