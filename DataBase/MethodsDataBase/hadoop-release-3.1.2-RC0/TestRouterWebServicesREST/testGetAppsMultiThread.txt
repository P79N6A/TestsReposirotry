@Test(timeout=60000) public void testGetAppsMultiThread() throws Exception {
  final int iniNumApps=getNumApps();
  testGetContainersXML();
  testAppsXML();
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      try {
        return getNumApps() == iniNumApps + 2;
      }
 catch (      Exception e) {
        fail();
      }
      return false;
    }
  }
,100,10 * 1000);
  ExecutorService threadpool=HadoopExecutors.newCachedThreadPool(new ThreadFactoryBuilder().setNameFormat("REST Tester #%d").build());
  CompletionService<Void> svc=new ExecutorCompletionService<>(threadpool);
  try {
    for (int i=0; i < NUM_THREADS_TESTS; i++) {
      svc.submit(new Callable<Void>(){
        @Override public Void call() throws Exception {
          assertEquals(iniNumApps + 2,getNumApps());
          return null;
        }
      }
);
    }
  }
  finally {
    threadpool.shutdown();
  }
  assertEquals(iniNumApps + 2,getNumApps());
}
