@Test public void testSetTimelineToken() throws Exception {
  UserGroupInformation ugi=UserGroupInformation.getCurrentUser();
  assertEquals(0,ugi.getTokens().size());
  assertNull("Timeline token in v2 client should not be set",client.currentTimelineToken);
  Token token=Token.newInstance(new byte[0],"kind",new byte[0],"service");
  client.setTimelineCollectorInfo(CollectorInfo.newInstance(null,token));
  assertNull("Timeline token in v2 client should not be set as token kind " + "is unexepcted.",client.currentTimelineToken);
  assertEquals(0,ugi.getTokens().size());
  token=Token.newInstance(new byte[0],TimelineDelegationTokenIdentifier.KIND_NAME.toString(),new byte[0],null);
  client.setTimelineCollectorInfo(CollectorInfo.newInstance(null,token));
  assertNull("Timeline token in v2 client should not be set as serice is " + "not set.",client.currentTimelineToken);
  assertEquals(0,ugi.getTokens().size());
  TimelineDelegationTokenIdentifier ident=new TimelineDelegationTokenIdentifier(new Text(ugi.getUserName()),new Text("renewer"),null);
  ident.setSequenceNumber(1);
  token=Token.newInstance(ident.getBytes(),TimelineDelegationTokenIdentifier.KIND_NAME.toString(),new byte[0],"localhost:1234");
  client.setTimelineCollectorInfo(CollectorInfo.newInstance(null,token));
  assertEquals(1,ugi.getTokens().size());
  assertNotNull("Timeline token should be set in v2 client.",client.currentTimelineToken);
  assertEquals(token,client.currentTimelineToken);
  ident.setSequenceNumber(20);
  Token newToken=Token.newInstance(ident.getBytes(),TimelineDelegationTokenIdentifier.KIND_NAME.toString(),new byte[0],"localhost:1234");
  client.setTimelineCollectorInfo(CollectorInfo.newInstance(null,newToken));
  assertEquals(1,ugi.getTokens().size());
  assertNotEquals(token,client.currentTimelineToken);
  assertEquals(newToken,client.currentTimelineToken);
}
