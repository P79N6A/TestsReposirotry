@Test public void testTargetExpressionParser() throws PlacementConstraintParseException {
  String expressionStr;
  ConstraintParser parser;
  AbstractConstraint constraint;
  SingleConstraint single;
  expressionStr="NOTIN, NODE, foo";
  parser=new TargetConstraintParser(expressionStr);
  constraint=parser.parse();
  Assert.assertTrue(constraint instanceof SingleConstraint);
  single=(SingleConstraint)constraint;
  Assert.assertEquals("node",single.getScope());
  Assert.assertEquals(0,single.getMinCardinality());
  Assert.assertEquals(0,single.getMaxCardinality());
  verifyConstraintToString(expressionStr,constraint);
  expressionStr="notin, node, foo";
  parser=new TargetConstraintParser(expressionStr);
  constraint=parser.parse();
  Assert.assertTrue(constraint instanceof SingleConstraint);
  single=(SingleConstraint)constraint;
  Assert.assertEquals("node",single.getScope());
  Assert.assertEquals(0,single.getMinCardinality());
  Assert.assertEquals(0,single.getMaxCardinality());
  verifyConstraintToString(expressionStr,constraint);
  expressionStr="IN, NODE, foo";
  parser=new TargetConstraintParser(expressionStr);
  constraint=parser.parse();
  Assert.assertTrue(constraint instanceof SingleConstraint);
  single=(SingleConstraint)constraint;
  Assert.assertEquals("node",single.getScope());
  Assert.assertEquals(1,single.getMinCardinality());
  Assert.assertEquals(Integer.MAX_VALUE,single.getMaxCardinality());
  verifyConstraintToString(expressionStr,constraint);
  expressionStr="NOTIN, NODE, foo, bar, exp";
  parser=new TargetConstraintParser(expressionStr);
  constraint=parser.parse();
  Assert.assertTrue(constraint instanceof SingleConstraint);
  single=(SingleConstraint)constraint;
  Assert.assertEquals("node",single.getScope());
  Assert.assertEquals(0,single.getMinCardinality());
  Assert.assertEquals(0,single.getMaxCardinality());
  Assert.assertEquals(1,single.getTargetExpressions().size());
  TargetExpression exp=single.getTargetExpressions().iterator().next();
  Assert.assertEquals("ALLOCATION_TAG",exp.getTargetType().toString());
  Assert.assertEquals(3,exp.getTargetValues().size());
  verifyConstraintToString(expressionStr,constraint);
  parser=new TargetConstraintParser("XYZ, NODE, foo");
  try {
    parser.parse();
  }
 catch (  Exception e) {
    Assert.assertTrue(e instanceof PlacementConstraintParseException);
    Assert.assertTrue(e.getMessage().contains("expecting in or notin"));
  }
}
