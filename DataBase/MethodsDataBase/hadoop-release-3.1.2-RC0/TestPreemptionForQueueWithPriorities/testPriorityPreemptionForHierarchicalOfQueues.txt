@Test public void testPriorityPreemptionForHierarchicalOfQueues() throws IOException {
  String labelsConfig="=100,true";
  String nodesConfig="n1=";
  String queuesConfig="root(=[100 100 100 100]);" + "-a(=[29 100 40 50]){priority=1};" + "--a1(=[12 100 20 50]){priority=1};"+ "--a2(=[17 100 20 50]){priority=1};"+ "-b(=[31 100 59 50]){priority=1};"+ "--b1(=[16 100 30 50]){priority=1};"+ "--b2(=[15 100 29 50]){priority=2};"+ "-c(=[40 100 1 30]){priority=1}";
  String appsConfig="a1\t(1,1,n1,,20,false);" + "a2\t(1,1,n1,,20,false);" + "b1\t(1,1,n1,,30,false);"+ "b2\t(1,1,n1,,29,false);"+ "c\t(1,1,n1,,1,false)";
  buildEnv(labelsConfig,nodesConfig,queuesConfig,appsConfig);
  policy.editSchedule();
  verify(mDisp,times(6)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(1))));
  verify(mDisp,times(1)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(2))));
  verify(mDisp,times(13)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(3))));
  verify(mDisp,times(10)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(4))));
}
