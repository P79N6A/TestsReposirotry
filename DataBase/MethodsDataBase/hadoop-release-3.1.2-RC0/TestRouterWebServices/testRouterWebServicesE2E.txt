/** 
 * Test that all requests get forwarded to the last interceptor in the chain get back the responses.
 */
@Test public void testRouterWebServicesE2E() throws Exception {
  ClusterInfo clusterInfo=get(user);
  Assert.assertNotNull(clusterInfo);
  ClusterInfo clusterInfo2=getClusterInfo(user);
  Assert.assertNotNull(clusterInfo2);
  ClusterMetricsInfo clusterMetricsInfo=getClusterMetricsInfo(user);
  Assert.assertNotNull(clusterMetricsInfo);
  SchedulerTypeInfo schedulerTypeInfo=getSchedulerInfo(user);
  Assert.assertNotNull(schedulerTypeInfo);
  String dumpResult=dumpSchedulerLogs(user);
  Assert.assertNotNull(dumpResult);
  NodesInfo nodesInfo=getNodes(user);
  Assert.assertNotNull(nodesInfo);
  NodeInfo nodeInfo=getNode(user);
  Assert.assertNotNull(nodeInfo);
  AppsInfo appsInfo=getApps(user);
  Assert.assertNotNull(appsInfo);
  ActivitiesInfo activitiesInfo=getActivities(user);
  Assert.assertNotNull(activitiesInfo);
  AppActivitiesInfo appActiviesInfo=getAppActivities(user);
  Assert.assertNotNull(appActiviesInfo);
  ApplicationStatisticsInfo applicationStatisticsInfo=getAppStatistics(user);
  Assert.assertNotNull(applicationStatisticsInfo);
  AppInfo appInfo=getApp(user);
  Assert.assertNotNull(appInfo);
  AppState appState=getAppState(user);
  Assert.assertNotNull(appState);
  Response response=updateAppState(user);
  Assert.assertNotNull(response);
  NodeToLabelsInfo nodeToLabelsInfo=getNodeToLabels(user);
  Assert.assertNotNull(nodeToLabelsInfo);
  LabelsToNodesInfo labelsToNodesInfo=getLabelsToNodes(user);
  Assert.assertNotNull(labelsToNodesInfo);
  Response response2=replaceLabelsOnNodes(user);
  Assert.assertNotNull(response2);
  Response response3=replaceLabelsOnNode(user);
  Assert.assertNotNull(response3);
  NodeLabelsInfo nodeLabelsInfo=getClusterNodeLabels(user);
  Assert.assertNotNull(nodeLabelsInfo);
  Response response4=addToClusterNodeLabels(user);
  Assert.assertNotNull(response4);
  Response response5=removeFromCluserNodeLabels(user);
  Assert.assertNotNull(response5);
  NodeLabelsInfo nodeLabelsInfo2=getLabelsOnNode(user);
  Assert.assertNotNull(nodeLabelsInfo2);
  AppPriority appPriority=getAppPriority(user);
  Assert.assertNotNull(appPriority);
  Response response6=updateApplicationPriority(user);
  Assert.assertNotNull(response6);
  AppQueue appQueue=getAppQueue(user);
  Assert.assertNotNull(appQueue);
  Response response7=updateAppQueue(user);
  Assert.assertNotNull(response7);
  Response response8=createNewApplication(user);
  Assert.assertNotNull(response8);
  Response response9=submitApplication(user);
  Assert.assertNotNull(response9);
  Response response10=postDelegationToken(user);
  Assert.assertNotNull(response10);
  Response response11=postDelegationTokenExpiration(user);
  Assert.assertNotNull(response11);
  Response response12=cancelDelegationToken(user);
  Assert.assertNotNull(response12);
  Response response13=createNewReservation(user);
  Assert.assertNotNull(response13);
  Response response14=submitReservation(user);
  Assert.assertNotNull(response14);
  Response response15=updateReservation(user);
  Assert.assertNotNull(response15);
  Response response16=deleteReservation(user);
  Assert.assertNotNull(response16);
  Response response17=listReservation(user);
  Assert.assertNotNull(response17);
  AppTimeoutInfo appTimeoutInfo=getAppTimeout(user);
  Assert.assertNotNull(appTimeoutInfo);
  AppTimeoutsInfo appTimeoutsInfo=getAppTimeouts(user);
  Assert.assertNotNull(appTimeoutsInfo);
  Response response18=updateApplicationTimeout(user);
  Assert.assertNotNull(response18);
  AppAttemptsInfo appAttemptsInfo=getAppAttempts(user);
  Assert.assertNotNull(appAttemptsInfo);
  AppAttemptInfo appAttemptInfo=getAppAttempt(user);
  Assert.assertNotNull(appAttemptInfo);
  ContainersInfo containersInfo=getContainers(user);
  Assert.assertNotNull(containersInfo);
  ContainerInfo containerInfo=getContainer(user);
  Assert.assertNotNull(containerInfo);
}
