/** 
 * Test changing the number of volumes does not impact the disk failure tolerance.
 */
@Test public void testTolerateVolumeFailuresAfterAddingMoreVolumes() throws Exception {
  assumeNotWindows();
  final File dn0Vol1=cluster.getInstanceStorageDir(0,0);
  final File dn0Vol2=cluster.getInstanceStorageDir(0,1);
  final File dn0VolNew=new File(dataDir,"data_new");
  final DataNode dn0=cluster.getDataNodes().get(0);
  final String oldDataDirs=dn0.getConf().get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY);
  assertThat(dn0.reconfigurePropertyImpl(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY,oldDataDirs + "," + dn0VolNew.getAbsolutePath()),is(dn0.getConf().get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY)));
  DataNodeTestUtils.injectDataDirFailure(dn0Vol1);
  DataNodeTestUtils.waitForDiskError(dn0,DataNodeTestUtils.getVolume(dn0,dn0Vol1));
  assertTrue(dn0.shouldRun());
  DataNodeTestUtils.injectDataDirFailure(dn0Vol2);
  DataNodeTestUtils.waitForDiskError(dn0,DataNodeTestUtils.getVolume(dn0,dn0Vol2));
  assertFalse(dn0.shouldRun());
}
