@Test public void testComplexValidateAbsoluteResourceConfig() throws Exception {
  CapacitySchedulerConfiguration csConf=setupComplexQueueConfiguration(false);
  setupComplexMinMaxResourceConfig(csConf);
  csConf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  @SuppressWarnings("resource") MockRM rm=new MockRM(csConf);
  rm.start();
  rm.registerNode("127.0.0.1:1234",250 * GB,40);
  csConf.setCapacity(QUEUEA_FULL,50f);
  csConf.setCapacity(QUEUEB_FULL,25f);
  csConf.setCapacity(QUEUEC_FULL,25f);
  CapacityScheduler cs=(CapacityScheduler)rm.getResourceScheduler();
  try {
    cs.reinitialize(csConf,rm.getRMContext());
    Assert.fail();
  }
 catch (  IOException e) {
    Assert.assertTrue(e instanceof IOException);
    Assert.assertEquals("Failed to re-init queues : Parent queue 'queueA' " + "and child queue 'queueA1' should use either percentage based" + " capacity configuration or absolute resource together.",e.getMessage());
  }
  CapacitySchedulerConfiguration csConf1=setupComplexQueueConfiguration(false);
  setupComplexMinMaxResourceConfig(csConf1);
  csConf1.setMinimumResourceRequirement("",QUEUEA_FULL,QUEUE_A1_MINRES);
  try {
    cs.reinitialize(csConf1,rm.getRMContext());
    Assert.fail();
  }
 catch (  IOException e) {
    Assert.assertTrue(e instanceof IOException);
    Assert.assertEquals("Failed to re-init queues : Parent Queues capacity: " + "<memory:51200, vCores:5> is less than to its children:" + "<memory:102400, vCores:10> for queue:queueA",e.getMessage());
  }
}
