@Test public void testEffectiveMinMaxResourceConfigurartionPerQueue() throws Exception {
  CapacitySchedulerConfiguration csConf=setupSimpleQueueConfiguration(false);
  setupMinMaxResourceConfiguration(csConf);
  csConf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  @SuppressWarnings("resource") MockRM rm=new MockRM(csConf);
  rm.start();
  rm.registerNode("127.0.0.1:1234",250 * GB,40);
  CapacityScheduler cs=(CapacityScheduler)rm.getResourceScheduler();
  LeafQueue qA=(LeafQueue)cs.getQueue(QUEUEA);
  Assert.assertNotNull(qA);
  Assert.assertEquals("Min resource configured for QUEUEA is not correct",QUEUE_A_MINRES,qA.queueResourceQuotas.getConfiguredMinResource());
  Assert.assertEquals("Max resource configured for QUEUEA is not correct",QUEUE_A_MAXRES,qA.queueResourceQuotas.getConfiguredMaxResource());
  Assert.assertEquals("Effective Min resource for QUEUEA is not correct",QUEUE_A_MINRES,qA.queueResourceQuotas.getEffectiveMinResource());
  Assert.assertEquals("Effective Max resource for QUEUEA is not correct",QUEUE_A_MAXRES,qA.queueResourceQuotas.getEffectiveMaxResource());
  LeafQueue qB=(LeafQueue)cs.getQueue(QUEUEB);
  Assert.assertNotNull(qB);
  Assert.assertEquals("Min resource configured for QUEUEB is not correct",QUEUE_B_MINRES,qB.queueResourceQuotas.getConfiguredMinResource());
  Assert.assertEquals("Max resource configured for QUEUEB is not correct",QUEUE_B_MAXRES,qB.queueResourceQuotas.getConfiguredMaxResource());
  Assert.assertEquals("Effective Min resource for QUEUEB is not correct",QUEUE_B_MINRES,qB.queueResourceQuotas.getEffectiveMinResource());
  Assert.assertEquals("Effective Max resource for QUEUEB is not correct",QUEUE_B_MAXRES,qB.queueResourceQuotas.getEffectiveMaxResource());
  LeafQueue qC=(LeafQueue)cs.getQueue(QUEUEC);
  Assert.assertNotNull(qC);
  Assert.assertEquals("Min resource configured for QUEUEC is not correct",QUEUE_C_MINRES,qC.queueResourceQuotas.getConfiguredMinResource());
  Assert.assertEquals("Max resource configured for QUEUEC is not correct",QUEUE_C_MAXRES,qC.queueResourceQuotas.getConfiguredMaxResource());
  Assert.assertEquals("Effective Min resource for QUEUEC is not correct",QUEUE_C_MINRES,qC.queueResourceQuotas.getEffectiveMinResource());
  Assert.assertEquals("Effective Max resource for QUEUEC is not correct",QUEUE_C_MAXRES,qC.queueResourceQuotas.getEffectiveMaxResource());
  rm.stop();
}
