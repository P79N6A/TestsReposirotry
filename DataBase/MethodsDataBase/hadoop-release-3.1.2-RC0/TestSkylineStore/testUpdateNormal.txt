@Test public final void testUpdateNormal() throws SkylineStoreException {
  final RecurrenceId recurrenceId1=new RecurrenceId("FraudDetection","17/06/20 00:00:00");
  final ResourceSkyline resourceSkyline1=getSkyline(1);
  addToStore(recurrenceId1,resourceSkyline1);
  final ArrayList<ResourceSkyline> resourceSkylines=new ArrayList<ResourceSkyline>();
  final ResourceSkyline resourceSkyline2=getSkyline(2);
  resourceSkylines.add(resourceSkyline1);
  resourceSkylines.add(resourceSkyline2);
  skylineStore.updateHistory(recurrenceId1,resourceSkylines);
  final Map<RecurrenceId,List<ResourceSkyline>> jobHistory=skylineStore.getHistory(recurrenceId1);
  Assert.assertEquals(1,jobHistory.size());
  for (  final Map.Entry<RecurrenceId,List<ResourceSkyline>> entry : jobHistory.entrySet()) {
    Assert.assertEquals(recurrenceId1,entry.getKey());
    final List<ResourceSkyline> getSkylines=entry.getValue();
    Assert.assertEquals(2,getSkylines.size());
    compare(resourceSkyline1,getSkylines.get(0));
    compare(resourceSkyline2,getSkylines.get(1));
  }
}
