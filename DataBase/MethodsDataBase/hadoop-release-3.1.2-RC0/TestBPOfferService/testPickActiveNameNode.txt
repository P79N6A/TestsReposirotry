/** 
 * Test that the DataNode determines the active NameNode correctly based on the HA-related information in heartbeat responses. See HDFS-2627.
 */
@Test public void testPickActiveNameNode() throws Exception {
  BPOfferService bpos=setupBPOSForNNs(mockNN1,mockNN2);
  bpos.start();
  try {
    waitForInitialization(bpos);
    assertNull(bpos.getActiveNN());
    mockHaStatuses[0]=new NNHAStatusHeartbeat(HAServiceState.ACTIVE,1);
    bpos.triggerHeartbeatForTests();
    assertSame(mockNN1,bpos.getActiveNN());
    mockHaStatuses[1]=new NNHAStatusHeartbeat(HAServiceState.ACTIVE,2);
    bpos.triggerHeartbeatForTests();
    assertSame(mockNN2,bpos.getActiveNN());
    bpos.triggerHeartbeatForTests();
    assertSame(mockNN2,bpos.getActiveNN());
    mockHaStatuses[1]=new NNHAStatusHeartbeat(HAServiceState.STANDBY,2);
    bpos.triggerHeartbeatForTests();
    assertNull(bpos.getActiveNN());
    mockHaStatuses[0]=new NNHAStatusHeartbeat(HAServiceState.ACTIVE,3);
    bpos.triggerHeartbeatForTests();
    assertSame(mockNN1,bpos.getActiveNN());
  }
  finally {
    bpos.stop();
    bpos.join();
  }
}
