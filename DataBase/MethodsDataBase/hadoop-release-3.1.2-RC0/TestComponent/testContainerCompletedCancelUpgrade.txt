@Test public void testContainerCompletedCancelUpgrade() throws Exception {
  String serviceName="testContainerCompletedCancelUpgrade";
  MockRunningServiceContext context=createTestContext(rule,serviceName);
  Component comp=context.scheduler.getAllComponents().entrySet().iterator().next().getValue();
  comp.handle(new ComponentEvent(comp.getName(),ComponentEventType.UPGRADE).setTargetSpec(createSpecWithEnv(serviceName,comp.getName(),"key1","val1")).setUpgradeVersion("v2"));
  comp.getAllComponentInstances().forEach(instance -> instance.handle(new ComponentInstanceEvent(instance.getContainer().getId(),ComponentInstanceEventType.UPGRADE)));
  for (  ComponentInstance instance : comp.getAllComponentInstances()) {
    instance.handle(new ComponentInstanceEvent(instance.getContainer().getId(),START));
    instance.handle(new ComponentInstanceEvent(instance.getContainer().getId(),BECOME_READY));
  }
  comp.handle(new ComponentEvent(comp.getName(),ComponentEventType.CANCEL_UPGRADE).setTargetSpec(createSpecWithEnv(serviceName,comp.getName(),"key1","val0")).setUpgradeVersion("v1"));
  comp.getAllComponentInstances().forEach(instance -> instance.handle(new ComponentInstanceEvent(instance.getContainer().getId(),ComponentInstanceEventType.CANCEL_UPGRADE)));
  Iterator<ComponentInstance> iter=comp.getAllComponentInstances().iterator();
  ComponentInstance instance1=iter.next();
  ComponentEvent stopEvent=new ComponentEvent(comp.getName(),ComponentEventType.CONTAINER_COMPLETED).setInstance(instance1).setContainerId(instance1.getContainer().getId());
  comp.handle(stopEvent);
  instance1.handle(new ComponentInstanceEvent(instance1.getContainer().getId(),STOP));
  Assert.assertEquals(org.apache.hadoop.yarn.service.component.ComponentState.CANCEL_UPGRADING,comp.getState());
  comp.handle(new ComponentEvent(comp.getName(),ComponentEventType.CHECK_STABLE));
  Assert.assertEquals("component not in needs upgrade state",ComponentState.NEEDS_UPGRADE,comp.getComponentSpec().getState());
  Assert.assertEquals(org.apache.hadoop.yarn.service.component.ComponentState.CANCEL_UPGRADING,comp.getState());
  ComponentInstance instance2=iter.next();
  instance2.handle(new ComponentInstanceEvent(instance2.getContainer().getId(),ComponentInstanceEventType.START));
  instance2.handle(new ComponentInstanceEvent(instance2.getContainer().getId(),ComponentInstanceEventType.BECOME_READY));
  comp.handle(new ComponentEvent(comp.getName(),ComponentEventType.CHECK_STABLE));
  Assert.assertEquals("component not in flexing state",ComponentState.FLEXING,comp.getComponentSpec().getState());
  context.assignNewContainer(context.attemptId,10,comp);
  comp.handle(new ComponentEvent(comp.getName(),ComponentEventType.CHECK_STABLE));
  Assert.assertEquals("component not in stable state",ComponentState.STABLE,comp.getComponentSpec().getState());
  Assert.assertEquals("cancel upgrade failed","val0",comp.getComponentSpec().getConfiguration().getEnv("key1"));
}
