@Test public void checkFilterAllowNoOneWhenAdminAclsEmptyAndUserAclsEmpty() throws ServletException, IOException, InterruptedException {
  Map<String,String> map=new HashMap<String,String>();
  map.put(YarnConfiguration.TIMELINE_SERVICE_READ_AUTH_ENABLED,"true");
  TimelineReaderWhitelistAuthorizationFilter f=new TimelineReaderWhitelistAuthorizationFilter();
  FilterConfig fc=new DummyFilterConfig(map);
  f.init(fc);
  HttpServletRequest mockHsr=Mockito.mock(HttpServletRequest.class);
  String userName="user88";
  Mockito.when(mockHsr.getUserPrincipal()).thenReturn(new Principal(){
    @Override public String getName(){
      return userName;
    }
  }
);
  HttpServletResponse r=Mockito.mock(HttpServletResponse.class);
  UserGroupInformation user1=UserGroupInformation.createUserForTesting(userName,GROUP_NAMES);
  user1.doAs(new PrivilegedExceptionAction<Object>(){
    @Override public Object run() throws Exception {
      f.doFilter(mockHsr,r,null);
      return null;
    }
  }
);
  String msg="User " + userName + " is not allowed to read TimelineService V2 data.";
  Mockito.verify(r).sendError(eq(HttpServletResponse.SC_FORBIDDEN),eq(msg));
}
