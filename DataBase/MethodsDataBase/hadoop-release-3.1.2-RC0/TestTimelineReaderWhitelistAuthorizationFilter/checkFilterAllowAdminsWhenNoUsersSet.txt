@Test public void checkFilterAllowAdminsWhenNoUsersSet() throws ServletException, IOException, InterruptedException {
  Map<String,String> map=new HashMap<String,String>();
  map.put(YarnConfiguration.TIMELINE_SERVICE_READ_AUTH_ENABLED,"true");
  map.put(YarnConfiguration.YARN_ADMIN_ACL," group1,group2");
  TimelineReaderWhitelistAuthorizationFilter f=new TimelineReaderWhitelistAuthorizationFilter();
  FilterConfig fc=new DummyFilterConfig(map);
  f.init(fc);
  HttpServletRequest mockHsr=Mockito.mock(HttpServletRequest.class);
  Mockito.when(mockHsr.getUserPrincipal()).thenReturn(new Principal(){
    @Override public String getName(){
      return "user90";
    }
  }
);
  HttpServletResponse r=Mockito.mock(HttpServletResponse.class);
  UserGroupInformation user1=UserGroupInformation.createUserForTesting("user90",GROUP_NAMES);
  user1.doAs(new PrivilegedExceptionAction<Object>(){
    @Override public Object run() throws Exception {
      f.doFilter(mockHsr,r,null);
      return null;
    }
  }
);
}
