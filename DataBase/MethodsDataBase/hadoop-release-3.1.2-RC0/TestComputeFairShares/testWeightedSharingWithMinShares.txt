/** 
 * Weighted fair sharing test with min shares. As in the min share test above, pool 1 has a min share greater than its demand so it only gets its demand. Pool 3 has a min share of 15 even though its weight is very small, so it gets 15 slots. The remaining pools share the remaining 20 slots equally, getting 10 each. Pool 3's min share of 5 slots doesn't affect this.
 */
@Test public void testWeightedSharingWithMinShares(){
  scheds.add(new FakeSchedulable(20,2.0f));
  scheds.add(new FakeSchedulable(0,1.0f));
  scheds.add(new FakeSchedulable(5,1.0f));
  scheds.add(new FakeSchedulable(15,0.5f));
  ComputeFairShares.computeShares(scheds,Resources.createResource(45),ResourceInformation.MEMORY_MB.getName());
  verifyMemoryShares(20,5,5,15);
}
