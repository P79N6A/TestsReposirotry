/** 
 * In this test, some pools have minimum shares set. Pool 1 has a min share of 20 so it gets 20 slots. Pool 2 also has a min share of 20, but its demand is only 10 so it can only get 10 slots. The remaining pools have 10 slots to split between them. Pool 4 gets 3 slots because its demand is only 3, and pool 3 gets the remaining 7 slots. Pool 4 also had a min share of 2 slots but this should not affect the outcome.
 */
@Test public void testMinShares(){
  scheds.add(new FakeSchedulable(20));
  scheds.add(new FakeSchedulable(18));
  scheds.add(new FakeSchedulable(0));
  scheds.add(new FakeSchedulable(2));
  ComputeFairShares.computeShares(scheds,Resources.createResource(40),ResourceInformation.MEMORY_MB.getName());
  verifyMemoryShares(20,18,0,2);
}
