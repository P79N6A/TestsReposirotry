/** 
 * In this test, pool 4 has a smaller demand than the 40 / 4 = 10 slots that it would be assigned with equal sharing. It should only get the 3 slots it demands. The other pools must then split the remaining 37 slots, but pool 3, with 11 slots demanded, is now below its share of 37/3 ~= 12.3, so it only gets 11 slots. Pools 1 and 2 split the rest and get 13 each. 
 */
@Test public void testLowMaxShares(){
  scheds.add(new FakeSchedulable(0,100));
  scheds.add(new FakeSchedulable(0,50));
  scheds.add(new FakeSchedulable(0,11));
  scheds.add(new FakeSchedulable(0,3));
  ComputeFairShares.computeShares(scheds,Resources.createResource(40),ResourceInformation.MEMORY_MB.getName());
  verifyMemoryShares(13,13,11,3);
}
