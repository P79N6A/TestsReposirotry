@Test public void testScheduleWithMultipleResourceTypes() throws TimeoutException, InterruptedException, IOException {
  ApplicationId applicationId=ApplicationId.newInstance(123456,1);
  Service exampleApp=new Service();
  exampleApp.setId(applicationId.toString());
  exampleApp.setName("testScheduleWithMultipleResourceTypes");
  exampleApp.setVersion("v1");
  List<ResourceTypeInfo> resourceTypeInfos=new ArrayList<>(ResourceUtils.getResourcesTypeInfo());
  resourceTypeInfos.add(ResourceTypeInfo.newInstance("resource-1","",ResourceTypes.COUNTABLE));
  ResourceUtils.reinitializeResources(resourceTypeInfos);
  Component serviceCompoent=createComponent("compa",1,"pwd");
  serviceCompoent.getResource().setResourceInformations(ImmutableMap.of("resource-1",new ResourceInformation().value(3333L).unit("Gi")));
  exampleApp.addComponent(serviceCompoent);
  MockServiceAM am=new MockServiceAM(exampleApp);
  am.init(conf);
  am.start();
  ServiceScheduler serviceScheduler=am.context.scheduler;
  AMRMClientAsync<AMRMClient.ContainerRequest> amrmClientAsync=serviceScheduler.getAmRMClient();
  Collection<AMRMClient.ContainerRequest> rr=amrmClientAsync.getMatchingRequests(0);
  Assert.assertEquals(1,rr.size());
  org.apache.hadoop.yarn.api.records.Resource capability=rr.iterator().next().getCapability();
  Assert.assertEquals(3333L,capability.getResourceValue("resource-1"));
  Assert.assertEquals("Gi",capability.getResourceInformation("resource-1").getUnits());
  am.stop();
}
