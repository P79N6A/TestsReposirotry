@Test public void testIPChange() throws TimeoutException, InterruptedException {
  ApplicationId applicationId=ApplicationId.newInstance(123456,1);
  String comp1Name="comp1";
  String comp1InstName="comp1-0";
  Service exampleApp=new Service();
  exampleApp.setId(applicationId.toString());
  exampleApp.setVersion("v1");
  exampleApp.setName("testIPChange");
  Component comp1=createComponent(comp1Name,1,"sleep 60");
  comp1.setArtifact(new Artifact().type(Artifact.TypeEnum.DOCKER));
  exampleApp.addComponent(comp1);
  MockServiceAM am=new MockServiceAM(exampleApp);
  am.init(conf);
  am.start();
  ComponentInstance comp1inst0=am.getCompInstance(comp1Name,comp1InstName);
  am.feedContainerToComp(exampleApp,1,comp1Name);
  GenericTestUtils.waitFor(() -> comp1inst0.getContainerStatus() != null,2000,200000);
  Assert.assertEquals("localhost",comp1inst0.getContainerStatus().getHost());
  LOG.info("Change the IP and host");
  am.updateContainerStatus(exampleApp,1,comp1Name,"new.host");
  GenericTestUtils.waitFor(() -> comp1inst0.getContainerStatus().getHost().equals("new.host"),2000,200000);
  LOG.info("Change the IP and host again");
  am.updateContainerStatus(exampleApp,1,comp1Name,"newer.host");
  GenericTestUtils.waitFor(() -> comp1inst0.getContainerStatus().getHost().equals("newer.host"),2000,200000);
  am.stop();
}
