/** 
 * Test that a very slow peer is detected as an outlier.
 */
@Test public void testOutlierIsDetected() throws Exception {
  final String slowNodeName="SlowNode";
  DataNodePeerMetrics peerMetrics=new DataNodePeerMetrics("PeerMetrics-For-Test");
  MetricsTestHelper.replaceRollingAveragesScheduler(peerMetrics.getSendPacketDownstreamRollingAverages(),ROLLING_AVERAGE_WINDOWS,WINDOW_INTERVAL_SECONDS,TimeUnit.SECONDS);
  injectFastNodesSamples(peerMetrics);
  injectSlowNodeSamples(peerMetrics,slowNodeName);
  peerMetrics.dumpSendPacketDownstreamAvgInfoAsJson();
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return peerMetrics.getOutliers().size() > 0;
    }
  }
,500,100_000);
  final Map<String,Double> outliers=peerMetrics.getOutliers();
  LOG.info("Got back outlier nodes: {}",outliers);
  assertThat(outliers.size(),is(1));
  assertTrue(outliers.containsKey(slowNodeName));
}
