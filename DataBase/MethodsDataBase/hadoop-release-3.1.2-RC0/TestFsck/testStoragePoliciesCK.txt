/** 
 * Test storage policy display.
 */
@Test public void testStoragePoliciesCK() throws Exception {
  File builderBaseDir=new File(GenericTestUtils.getRandomizedTempPath());
  cluster=new MiniDFSCluster.Builder(conf,builderBaseDir).numDataNodes(3).storageTypes(new StorageType[]{StorageType.DISK,StorageType.ARCHIVE}).build();
  cluster.waitActive();
  final DistributedFileSystem dfs=cluster.getFileSystem();
  writeFile(dfs,"/testhot","file","HOT");
  writeFile(dfs,"/testwarm","file","WARM");
  writeFile(dfs,"/testcold","file","COLD");
  String outStr=runFsck(conf,0,true,"/","-storagepolicies");
  assertTrue(outStr.contains("DISK:3(HOT)"));
  assertTrue(outStr.contains("DISK:1,ARCHIVE:2(WARM)"));
  assertTrue(outStr.contains("ARCHIVE:3(COLD)"));
  assertTrue(outStr.contains("All blocks satisfy specified storage policy."));
  dfs.setStoragePolicy(new Path("/testhot"),"COLD");
  dfs.setStoragePolicy(new Path("/testwarm"),"COLD");
  outStr=runFsck(conf,0,true,"/","-storagepolicies");
  assertTrue(outStr.contains("DISK:3(HOT)"));
  assertTrue(outStr.contains("DISK:1,ARCHIVE:2(WARM)"));
  assertTrue(outStr.contains("ARCHIVE:3(COLD)"));
  assertFalse(outStr.contains("All blocks satisfy specified storage policy."));
}
