@Test public void testNamenodeMetrics() throws Exception {
  final NamenodeBeanMetrics metrics=router.getRouter().getNamenodeMetrics();
  final String jsonString0=metrics.getLiveNodes();
  JSONObject jsonObject=new JSONObject(jsonString0);
  assertEquals(12,jsonObject.names().length());
  String jsonString1=metrics.getLiveNodes();
  assertEquals(jsonString0,jsonString1);
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return !jsonString0.equals(metrics.getLiveNodes());
    }
  }
,500,5 * 1000);
  final String jsonString2=metrics.getLiveNodes();
  assertNotEquals(jsonString0,jsonString2);
  MockResolver resolver=(MockResolver)router.getRouter().getNamenodeResolver();
  resolver.cleanRegistrations();
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return !jsonString2.equals(metrics.getLiveNodes());
    }
  }
,500,5 * 1000);
  assertEquals("{}",metrics.getLiveNodes());
  cluster.registerNamenodes();
  cluster.waitNamenodeRegistration();
}
