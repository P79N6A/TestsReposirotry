@Test public void testProxyExceptionMessages() throws IOException {
  MockResolver resolver=(MockResolver)router.getRouter().getSubclusterResolver();
  String ns0=cluster.getNameservices().get(0);
  resolver.addLocation("/mnt",ns0,"/");
  try {
    FsPermission permission=new FsPermission("777");
    routerProtocol.mkdirs("/mnt/folder0/folder1",permission,false);
    fail("mkdirs for non-existing parent folder should have failed");
  }
 catch (  IOException ioe) {
    assertExceptionContains("/mnt/folder0",ioe,"Wrong path in exception for mkdirs");
  }
  try {
    FsPermission permission=new FsPermission("777");
    routerProtocol.setPermission("/mnt/testfile.txt",permission);
    fail("setPermission for non-existing file should have failed");
  }
 catch (  IOException ioe) {
    assertExceptionContains("/mnt/testfile.txt",ioe,"Wrong path in exception for setPermission");
  }
  try {
    FsPermission permission=new FsPermission("777");
    routerProtocol.mkdirs("/mnt/folder0/folder1",permission,false);
    routerProtocol.delete("/mnt/folder0",false);
    fail("delete for non-existing file should have failed");
  }
 catch (  IOException ioe) {
    assertExceptionContains("/mnt/folder0",ioe,"Wrong path in exception for delete");
  }
  resolver.cleanRegistrations();
  assertEquals("Parent directory doesn't exist: /ns1/a/a/b",RouterRpcClient.processExceptionMsg("Parent directory doesn't exist: /a/a/b","/a","/ns1/a"));
}
