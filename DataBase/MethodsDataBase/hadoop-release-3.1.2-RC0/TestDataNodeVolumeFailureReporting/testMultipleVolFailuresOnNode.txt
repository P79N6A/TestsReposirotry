@Test public void testMultipleVolFailuresOnNode() throws Exception {
  tearDown();
  initCluster(3,4,2);
  Thread.sleep(WAIT_FOR_HEARTBEATS);
  DatanodeManager dm=cluster.getNamesystem().getBlockManager().getDatanodeManager();
  long origCapacity=DFSTestUtil.getLiveDatanodeCapacity(dm);
  long dnCapacity=DFSTestUtil.getDatanodeCapacity(dm,0);
  File dn1Vol1=cluster.getInstanceStorageDir(0,0);
  File dn1Vol2=cluster.getInstanceStorageDir(0,1);
  File dn2Vol1=cluster.getInstanceStorageDir(1,0);
  File dn2Vol2=cluster.getInstanceStorageDir(1,1);
  DataNodeTestUtils.injectDataDirFailure(dn1Vol1,dn1Vol2,dn2Vol1,dn2Vol2);
  Path file1=new Path("/test1");
  DFSTestUtil.createFile(fs,file1,1024,(short)3,1L);
  DFSTestUtil.waitReplication(fs,file1,(short)3);
  Path file2=new Path("/test2");
  DFSTestUtil.createFile(fs,file2,1024,(short)3,1L);
  DFSTestUtil.waitReplication(fs,file2,(short)3);
  ArrayList<DataNode> dns=cluster.getDataNodes();
  assertTrue("DN1 should be up",dns.get(0).isDatanodeUp());
  assertTrue("DN2 should be up",dns.get(1).isDatanodeUp());
  assertTrue("DN3 should be up",dns.get(2).isDatanodeUp());
  checkFailuresAtDataNode(dns.get(0),1,true,dn1Vol1.getAbsolutePath(),dn1Vol2.getAbsolutePath());
  checkFailuresAtDataNode(dns.get(1),1,true,dn2Vol1.getAbsolutePath(),dn2Vol2.getAbsolutePath());
  checkFailuresAtDataNode(dns.get(2),0,true);
  assert (WAIT_FOR_HEARTBEATS * 10) > WAIT_FOR_DEATH;
  DFSTestUtil.waitForDatanodeStatus(dm,3,0,4,origCapacity - (1 * dnCapacity),WAIT_FOR_HEARTBEATS);
  checkAggregateFailuresAtNameNode(true,4);
  checkFailuresAtNameNode(dm,dns.get(0),true,dn1Vol1.getAbsolutePath(),dn1Vol2.getAbsolutePath());
  checkFailuresAtNameNode(dm,dns.get(1),true,dn2Vol1.getAbsolutePath(),dn2Vol2.getAbsolutePath());
  checkFailuresAtNameNode(dm,dns.get(2),true);
}
