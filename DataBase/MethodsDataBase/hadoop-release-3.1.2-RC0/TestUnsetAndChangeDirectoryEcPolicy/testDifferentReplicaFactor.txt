@Test public void testDifferentReplicaFactor() throws Exception {
  final int numBlocks=1;
  final int fileLen=blockGroupSize * numBlocks;
  final Path ecDirPath=new Path("/striped");
  final Path ecFilePath=new Path(ecDirPath,"ec_file");
  final Path replicateFilePath=new Path(ecDirPath,"rep_file");
  final Path replicateFilePath2=new Path(ecDirPath,"rep_file2");
  fs.mkdirs(ecDirPath);
  fs.setErasureCodingPolicy(ecDirPath,ecPolicy.getName());
  DFSTestUtil.createFile(fs,ecFilePath,fileLen,(short)1,0L);
  fs.unsetErasureCodingPolicy(ecDirPath);
  DFSTestUtil.createFile(fs,replicateFilePath,fileLen,(short)3,0L);
  DFSTestUtil.createFile(fs,replicateFilePath2,fileLen,(short)2,0L);
  ErasureCodingPolicy tempEcPolicy=fs.getErasureCodingPolicy(ecFilePath);
  Assert.assertTrue("Erasure coding policy mismatch!",tempEcPolicy.getName().equals(ecPolicy.getName()));
  tempEcPolicy=fs.getErasureCodingPolicy(replicateFilePath);
  Assert.assertNull("Replicate file should not have erasure coding policy!",tempEcPolicy);
  tempEcPolicy=fs.getErasureCodingPolicy(replicateFilePath2);
  Assert.assertNull("Replicate file should not have erasure coding policy!",tempEcPolicy);
  tempEcPolicy=fs.getErasureCodingPolicy(ecDirPath);
  Assert.assertNull("Directory should not have erasure coding policy set!",tempEcPolicy);
  fs.delete(ecDirPath,true);
}
