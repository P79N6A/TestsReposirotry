@Test public void testIncreaseContainerUnreservedWhenApplicationCompleted() throws Exception {
  conf.setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,1);
  MockRM rm1=new MockRM(conf){
    @Override public RMNodeLabelsManager createNodeLabelManager(){
      return mgr;
    }
  }
;
  rm1.start();
  MockNM nm1=rm1.registerNode("h1:1234",8 * GB);
  MockNM nm2=rm1.registerNode("h2:1234",8 * GB);
  RMApp app1=rm1.submitApp(1 * GB,"app","user",null,"default");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  FiCaSchedulerApp app=TestUtils.getFiCaSchedulerApp(rm1,app1.getApplicationId());
  am1.allocate(Arrays.asList(ResourceRequest.newInstance(Priority.newInstance(1),"*",Resources.createResource(2 * GB),1)),null);
  ContainerId containerId2=ContainerId.newContainerId(am1.getApplicationAttemptId(),2);
  Assert.assertTrue(rm1.waitForState(nm1,containerId2,RMContainerState.ALLOCATED));
  am1.allocate(null,null);
  sentRMContainerLaunched(rm1,containerId2);
  am1.sendContainerResizingRequest(Arrays.asList(UpdateContainerRequest.newInstance(0,containerId2,ContainerUpdateType.INCREASE_RESOURCE,Resources.createResource(8 * GB),null)));
  checkPendingResource(rm1,"default",6 * GB,null);
  Assert.assertEquals(6 * GB,app.getAppAttemptResourceUsage().getPending().getMemorySize());
  CapacityScheduler cs=(CapacityScheduler)rm1.getResourceScheduler();
  RMNode rmNode1=rm1.getRMContext().getRMNodes().get(nm1.getNodeId());
  cs.handle(new NodeUpdateSchedulerEvent(rmNode1));
  Assert.assertFalse(app.getReservedContainers().isEmpty());
  Assert.assertNotNull(cs.getNode(nm1.getNodeId()).getReservedContainer());
  checkPendingResource(rm1,"default",6 * GB,null);
  Assert.assertEquals(6 * GB,app.getAppAttemptResourceUsage().getPending().getMemorySize());
  checkUsedResource(rm1,"default",9 * GB,null);
  Assert.assertEquals(9 * GB,((LeafQueue)cs.getQueue("default")).getUser("user").getUsed().getMemorySize());
  Assert.assertEquals(3 * GB,app.getAppAttemptResourceUsage().getUsed().getMemorySize());
  Assert.assertEquals(6 * GB,app.getAppAttemptResourceUsage().getReserved().getMemorySize());
  ContainerId amContainer=ContainerId.newContainerId(am1.getApplicationAttemptId(),1);
  cs.killContainer(cs.getRMContainer(amContainer));
  rm1.waitForState(am1.getApplicationAttemptId(),RMAppAttemptState.FAILED);
  rm1.waitForState(am1.getApplicationAttemptId().getApplicationId(),RMAppState.FAILED);
  Assert.assertTrue(app.getReservedContainers().isEmpty());
  Assert.assertNull(cs.getNode(nm1.getNodeId()).getReservedContainer());
  cs.handle(new NodeUpdateSchedulerEvent(rmNode1));
  checkPendingResource(rm1,"default",0 * GB,null);
  checkUsedResource(rm1,"default",0 * GB,null);
  Assert.assertNull(((LeafQueue)cs.getQueue("default")).getUser("user"));
  Assert.assertEquals(0 * GB,app.getAppAttemptResourceUsage().getReserved().getMemorySize());
  Assert.assertEquals(0 * GB,app.getAppAttemptResourceUsage().getUsed().getMemorySize());
  rm1.close();
}
