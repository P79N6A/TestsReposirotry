@Test public void testNameserviceManagerUnauthorized() throws Exception {
  final String username="baduser";
  UserGroupInformation user=UserGroupInformation.createRemoteUser(username);
  user.doAs(new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      RouterClient client=routerContext.getAdminClient();
      NameserviceManager nameservices=client.getNameserviceManager();
      DisableNameserviceRequest disableReq=DisableNameserviceRequest.newInstance("ns0");
      try {
        nameservices.disableNameservice(disableReq);
        fail("We should not be able to disable nameservices");
      }
 catch (      IOException ioe) {
        assertExceptionContains(username + " is not a super user",ioe);
      }
      return null;
    }
  }
);
}
