/** 
 * After blocking all write verbs used by S3A, try to write data (fail) and read data (succeed).
 */
@Test public void testReadOnlyOperations() throws Throwable {
  describe("Restrict role to read only");
  Configuration conf=createAssumedRoleConfig();
  bindRolePolicy(conf,policy(statement(false,S3_ALL_BUCKETS,S3_PATH_WRITE_OPERATIONS),STATEMENT_ALL_S3,STATEMENT_ALL_DDB));
  Path path=methodPath();
  roleFS=(S3AFileSystem)path.getFileSystem(conf);
  roleFS.listStatus(ROOT);
  assertTouchForbidden(roleFS,path);
  roleFS.delete(path,true);
  getFileSystem().mkdirs(path);
  assertDeleteForbidden(this.roleFS,path);
  int counter=0;
  MultipartUtils.UploadIterator iterator=roleFS.listUploads("/");
  while (iterator.hasNext()) {
    counter++;
    iterator.next();
  }
  LOG.info("Found {} outstanding MPUs",counter);
}
