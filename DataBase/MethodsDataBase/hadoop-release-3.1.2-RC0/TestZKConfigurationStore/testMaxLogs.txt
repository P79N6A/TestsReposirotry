@Test public void testMaxLogs() throws Exception {
  conf.setLong(YarnConfiguration.RM_SCHEDCONF_MAX_LOGS,2);
  confStore.initialize(conf,schedConf,rmContext);
  LinkedList<YarnConfigurationStore.LogMutation> logs=((ZKConfigurationStore)confStore).getLogs();
  assertEquals(0,logs.size());
  Map<String,String> update1=new HashMap<>();
  update1.put("key1","val1");
  YarnConfigurationStore.LogMutation mutation=new YarnConfigurationStore.LogMutation(update1,TEST_USER);
  confStore.logMutation(mutation);
  logs=((ZKConfigurationStore)confStore).getLogs();
  assertEquals(1,logs.size());
  assertEquals("val1",logs.get(0).getUpdates().get("key1"));
  confStore.confirmMutation(true);
  assertEquals(1,logs.size());
  assertEquals("val1",logs.get(0).getUpdates().get("key1"));
  Map<String,String> update2=new HashMap<>();
  update2.put("key2","val2");
  mutation=new YarnConfigurationStore.LogMutation(update2,TEST_USER);
  confStore.logMutation(mutation);
  logs=((ZKConfigurationStore)confStore).getLogs();
  assertEquals(2,logs.size());
  assertEquals("val1",logs.get(0).getUpdates().get("key1"));
  assertEquals("val2",logs.get(1).getUpdates().get("key2"));
  confStore.confirmMutation(true);
  assertEquals(2,logs.size());
  assertEquals("val1",logs.get(0).getUpdates().get("key1"));
  assertEquals("val2",logs.get(1).getUpdates().get("key2"));
  Map<String,String> update3=new HashMap<>();
  update3.put("key3","val3");
  mutation=new YarnConfigurationStore.LogMutation(update3,TEST_USER);
  confStore.logMutation(mutation);
  logs=((ZKConfigurationStore)confStore).getLogs();
  assertEquals(2,logs.size());
  assertEquals("val2",logs.get(0).getUpdates().get("key2"));
  assertEquals("val3",logs.get(1).getUpdates().get("key3"));
  confStore.confirmMutation(true);
  assertEquals(2,logs.size());
  assertEquals("val2",logs.get(0).getUpdates().get("key2"));
  assertEquals("val3",logs.get(1).getUpdates().get("key3"));
}
