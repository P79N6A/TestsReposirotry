@Test public void testDataIntegrity() throws IOException {
  Path path=new Path("/test/dataIntegrityCheck/" + UUID.randomUUID().toString());
  FileSystem fs=null;
  AdlStorageConfiguration.getConfiguration().setInt(WRITE_BUFFER_SIZE_KEY,4 * 1024);
  try {
    fs=AdlStorageConfiguration.createStorageConnector();
  }
 catch (  URISyntaxException e) {
    throw new IllegalStateException("Can not initialize ADL FileSystem. " + "Please check test.fs.adl.name property.",e);
  }
  byte[] expectedData=getRandomByteArrayData(totalSize);
  FSDataOutputStream out=fs.create(path,true);
  int iteration=totalSize / chunkSize;
  int reminderIteration=totalSize % chunkSize;
  int offset=0;
  for (int i=0; i < iteration; ++i) {
    out.write(expectedData,offset,chunkSize);
    offset+=chunkSize;
  }
  out.write(expectedData,offset,reminderIteration);
  out.close();
  byte[] actualData=new byte[totalSize];
  FSDataInputStream in=fs.open(path);
  in.readFully(0,actualData);
  in.close();
  Assert.assertArrayEquals(expectedData,actualData);
  Assert.assertTrue(fs.delete(path,true));
}
