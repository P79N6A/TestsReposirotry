@Test public void testSendJobConf() throws IOException {
  JobConf jobConf=new JobConf();
  jobConf.set("dfs.nameservices","mycluster1,mycluster2");
  jobConf.set("dfs.namenode.rpc-address.mycluster2.nn1","123.0.0.1");
  jobConf.set("dfs.namenode.rpc-address.mycluster2.nn2","123.0.0.2");
  jobConf.set("dfs.ha.namenodes.mycluster2","nn1,nn2");
  jobConf.set("dfs.client.failover.proxy.provider.mycluster2","provider");
  jobConf.set("hadoop.tmp.dir","testconfdir");
  jobConf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
  jobConf.set("mapreduce.job.send-token-conf","dfs.nameservices|^dfs.namenode.rpc-address.*$|^dfs.ha.namenodes.*$" + "|^dfs.client.failover.proxy.provider.*$" + "|dfs.namenode.kerberos.principal");
  UserGroupInformation.setConfiguration(jobConf);
  YARNRunner yarnRunner=new YARNRunner(jobConf);
  ApplicationSubmissionContext submissionContext=buildSubmitContext(yarnRunner,jobConf);
  Configuration confSent=BuilderUtils.parseTokensConf(submissionContext);
  Assert.assertEquals("123.0.0.1",confSent.get("dfs.namenode.rpc-address.mycluster2.nn1"));
  Assert.assertEquals("123.0.0.2",confSent.get("dfs.namenode.rpc-address.mycluster2.nn2"));
  Assert.assertTrue(confSent.get("hadoop.tmp.dir") == null || !confSent.get("hadoop.tmp.dir").equals("testconfdir"));
  UserGroupInformation.reset();
}
