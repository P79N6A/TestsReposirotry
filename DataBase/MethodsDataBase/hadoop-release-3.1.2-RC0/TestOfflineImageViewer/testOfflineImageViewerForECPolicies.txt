@Test public void testOfflineImageViewerForECPolicies() throws Exception {
  ByteArrayOutputStream output=new ByteArrayOutputStream();
  PrintStream o=new PrintStream(output);
  PBImageXmlWriter v=new PBImageXmlWriter(new Configuration(),o);
  v.visit(new RandomAccessFile(originalFsimage,"r"));
  final String xml=output.toString();
  DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
  DocumentBuilder db=dbf.newDocumentBuilder();
  InputSource is=new InputSource();
  is.setCharacterStream(new StringReader(xml));
  Document dom=db.parse(is);
  NodeList ecSection=dom.getElementsByTagName(ERASURE_CODING_SECTION_NAME);
  assertEquals(1,ecSection.getLength());
  NodeList policies=dom.getElementsByTagName(ERASURE_CODING_SECTION_POLICY);
  assertEquals(1 + SystemErasureCodingPolicies.getPolicies().size(),policies.getLength());
  for (int i=0; i < policies.getLength(); i++) {
    Element policy=(Element)policies.item(i);
    String name=getXmlString(policy,ERASURE_CODING_SECTION_POLICY_NAME);
    if (name.equals(addedErasureCodingPolicyName)) {
      String cellSize=getXmlString(policy,ERASURE_CODING_SECTION_POLICY_CELL_SIZE);
      assertEquals("1024",cellSize);
      String state=getXmlString(policy,ERASURE_CODING_SECTION_POLICY_STATE);
      assertEquals(ErasureCodingPolicyState.ENABLED.toString(),state);
      Element schema=(Element)policy.getElementsByTagName(ERASURE_CODING_SECTION_SCHEMA).item(0);
      String codecName=getXmlString(schema,ERASURE_CODING_SECTION_SCHEMA_CODEC_NAME);
      assertEquals(ErasureCodeConstants.RS_CODEC_NAME,codecName);
      NodeList options=schema.getElementsByTagName(ERASURE_CODING_SECTION_SCHEMA_OPTION);
      assertEquals(2,options.getLength());
      Element option1=(Element)options.item(0);
      assertEquals("k1",getXmlString(option1,"key"));
      assertEquals("v1",getXmlString(option1,"value"));
      Element option2=(Element)options.item(1);
      assertEquals("k2",getXmlString(option2,"key"));
      assertEquals("v2",getXmlString(option2,"value"));
    }
  }
}
