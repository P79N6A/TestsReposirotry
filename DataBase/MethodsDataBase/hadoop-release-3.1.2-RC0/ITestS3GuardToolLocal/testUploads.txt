@Test public void testUploads() throws Throwable {
  S3AFileSystem fs=getFileSystem();
  Path path=path(UPLOAD_PREFIX + "/" + UPLOAD_NAME);
  describe("Cleaning up any leftover uploads from previous runs.");
  clearAnyUploads(fs,path);
  assertNoUploadsAt(fs,path.getParent());
  describe("Confirming CLI lists nothing.");
  assertNumUploads(path,0);
  describe("Uploading single part.");
  createPartUpload(fs,fs.pathToKey(path),128,1);
  try {
    LambdaTestUtils.eventually(5000,1000,() -> {
      assertEquals("Should be one upload",1,countUploadsAt(fs,path));
    }
);
    describe("Confirming CLI lists one part");
    LambdaTestUtils.eventually(5000,1000,() -> {
      assertNumUploads(path,1);
    }
);
    LambdaTestUtils.eventually(5000,1000,() -> {
      assertNumUploads(path.getParent(),1);
    }
);
    describe("Deleting part via CLI");
    assertNumDeleted(fs,path,1);
    describe("Confirming deletion via API");
    assertEquals("Should be no uploads",0,countUploadsAt(fs,path));
    describe("Confirming CLI lists nothing.");
    assertNumUploads(path,0);
  }
 catch (  Throwable t) {
    clearAnyUploads(fs,path);
    throw t;
  }
}
