/** 
 * FileSystem.[addErasureCodingPolicies, disableErasureCodingPolicy, getErasureCodingPolicy, removeErasureCodingPolicy, setErasureCodingPolicy unsetErasureCodingPolicy] API call still should be succeed without failure.
 * @throws IOException if any IO operation failed.
 */
@Test public void testErasureCodingPolicy() throws IOException {
  final Path tDir=new Path("/ecpDir");
  fs.mkdirs(tDir);
  ErasureCodingPolicy defaultPolicy=SystemErasureCodingPolicies.getPolicies().get(0);
  fs.setErasureCodingPolicy(tDir,defaultPolicy.getName());
  ErasureCodingPolicy fPolicy=fs.getErasureCodingPolicy(tDir);
  assertEquals(defaultPolicy,fPolicy);
  final int cellSize=1024 * 1024;
  final ECSchema schema=new ECSchema("rs",5,3);
  ErasureCodingPolicy newPolicy=new ErasureCodingPolicy(schema,cellSize);
  fs.addErasureCodingPolicies(new ErasureCodingPolicy[]{newPolicy});
  assertEquals(SystemErasureCodingPolicies.getPolicies().size() + 1,fs.getAllErasureCodingPolicies().size());
  fs.disableErasureCodingPolicy(ErasureCodingPolicy.composePolicyName(schema,cellSize));
  assertEquals(SystemErasureCodingPolicies.getPolicies().size() + 1,fs.getAllErasureCodingPolicies().size());
  fs.unsetErasureCodingPolicy(tDir);
  fPolicy=fs.getErasureCodingPolicy(tDir);
  assertNotNull(fPolicy);
  fs.removeErasureCodingPolicy(ErasureCodingPolicy.composePolicyName(schema,cellSize));
  assertEquals(SystemErasureCodingPolicies.getPolicies().size() + 1,fs.getAllErasureCodingPolicies().size());
}
