@Test(timeout=100000) public void testNodeBlacklistingOnAMFailureStrictNodeLocality() throws Exception {
  YarnConfiguration conf=new YarnConfiguration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  conf.setBoolean(YarnConfiguration.AM_SCHEDULING_NODE_BLACKLISTING_ENABLED,true);
  MockRM rm=startRM(conf);
  CapacityScheduler scheduler=(CapacityScheduler)rm.getResourceScheduler();
  MockNM nm1=new MockNM("127.0.0.1:1234",8000,rm.getResourceTrackerService());
  nm1.registerNode();
  MockNM nm2=new MockNM("127.0.0.2:2345",8000,rm.getResourceTrackerService());
  nm2.registerNode();
  MockNM nm3=new MockNM("127.0.0.3:2345",8000,rm.getResourceTrackerService());
  nm3.registerNode();
  MockNM nm4=new MockNM("127.0.0.4:2345",8000,rm.getResourceTrackerService());
  nm4.registerNode();
  MockNM nm5=new MockNM("127.0.0.5:2345",8000,rm.getResourceTrackerService());
  nm5.registerNode();
  List<ResourceRequest> reqs=new ArrayList<>();
  ResourceRequest nodeReq=ResourceRequest.newInstance(Priority.newInstance(0),nm2.getNodeId().getHost(),Resource.newInstance(200,1),1,true);
  ResourceRequest rackReq=ResourceRequest.newInstance(Priority.newInstance(0),"/default-rack",Resource.newInstance(200,1),1,false);
  ResourceRequest anyReq=ResourceRequest.newInstance(Priority.newInstance(0),ResourceRequest.ANY,Resource.newInstance(200,1),1,false);
  reqs.add(anyReq);
  reqs.add(rackReq);
  reqs.add(nodeReq);
  RMApp app=rm.submitApp(reqs);
  MockAM am1=MockRM.launchAndRegisterAM(app,rm,nm2);
  ContainerId amContainerId=ContainerId.newContainerId(am1.getApplicationAttemptId(),1);
  RMContainer rmContainer=scheduler.getRMContainer(amContainerId);
  NodeId nodeWhereAMRan=rmContainer.getAllocatedNode();
  Assert.assertEquals(nm2.getNodeId(),nodeWhereAMRan);
  makeAMContainerExit(rm,amContainerId,nm2,ContainerExitStatus.INVALID);
  RMAppAttempt attempt=MockRM.waitForAttemptScheduled(app,rm);
  System.out.println("New AppAttempt launched " + attempt.getAppAttemptId());
  nm2.nodeHeartbeat(true);
  rm.drainEvents();
  MockRM.waitForState(attempt,RMAppAttemptState.ALLOCATED,20000);
  MockAM am2=rm.sendAMLaunched(attempt.getAppAttemptId());
  rm.waitForState(attempt.getAppAttemptId(),RMAppAttemptState.LAUNCHED);
  amContainerId=ContainerId.newContainerId(am2.getApplicationAttemptId(),1);
  rmContainer=scheduler.getRMContainer(amContainerId);
  nodeWhereAMRan=rmContainer.getAllocatedNode();
  System.out.println("AM ran on " + nodeWhereAMRan);
  Assert.assertEquals(nm2.getNodeId(),nodeWhereAMRan);
  am2.registerAppAttempt();
  rm.waitForState(app.getApplicationId(),RMAppState.RUNNING);
}
