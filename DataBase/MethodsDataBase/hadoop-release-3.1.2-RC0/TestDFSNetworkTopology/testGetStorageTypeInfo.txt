/** 
 * Test getting the storage type info of subtree.
 * @throws Exception
 */
@Test public void testGetStorageTypeInfo() throws Exception {
  DFSTopologyNodeImpl d1=(DFSTopologyNodeImpl)CLUSTER.getNode("/l1/d1");
  HashMap<String,EnumMap<StorageType,Integer>> d1info=d1.getChildrenStorageInfo();
  assertEquals(2,d1info.keySet().size());
  assertTrue(d1info.get("r1").size() == 2 && d1info.get("r2").size() == 2);
  assertEquals(1,(int)d1info.get("r1").get(StorageType.DISK));
  assertEquals(1,(int)d1info.get("r1").get(StorageType.ARCHIVE));
  assertEquals(2,(int)d1info.get("r2").get(StorageType.DISK));
  assertEquals(1,(int)d1info.get("r2").get(StorageType.ARCHIVE));
  DFSTopologyNodeImpl d2=(DFSTopologyNodeImpl)CLUSTER.getNode("/l1/d2");
  HashMap<String,EnumMap<StorageType,Integer>> d2info=d2.getChildrenStorageInfo();
  assertEquals(1,d2info.keySet().size());
  assertTrue(d2info.get("r3").size() == 3);
  assertEquals(1,(int)d2info.get("r3").get(StorageType.DISK));
  assertEquals(1,(int)d2info.get("r3").get(StorageType.RAM_DISK));
  assertEquals(1,(int)d2info.get("r3").get(StorageType.SSD));
  DFSTopologyNodeImpl d3=(DFSTopologyNodeImpl)CLUSTER.getNode("/l2/d3");
  HashMap<String,EnumMap<StorageType,Integer>> d3info=d3.getChildrenStorageInfo();
  assertEquals(5,d3info.keySet().size());
  assertEquals(1,(int)d3info.get("r1").get(StorageType.DISK));
  assertEquals(1,(int)d3info.get("r2").get(StorageType.RAM_DISK));
  assertEquals(1,(int)d3info.get("r3").get(StorageType.DISK));
  assertEquals(1,(int)d3info.get("r4").get(StorageType.ARCHIVE));
  assertEquals(1,(int)d3info.get("r5").get(StorageType.ARCHIVE));
  DFSTopologyNodeImpl d4=(DFSTopologyNodeImpl)CLUSTER.getNode("/l2/d4");
  HashMap<String,EnumMap<StorageType,Integer>> d4info=d4.getChildrenStorageInfo();
  assertEquals(1,d4info.keySet().size());
  assertEquals(2,(int)d4info.get("r1").get(StorageType.DISK));
  assertEquals(2,(int)d4info.get("r1").get(StorageType.RAM_DISK));
  assertEquals(2,(int)d4info.get("r1").get(StorageType.ARCHIVE));
  assertEquals(1,(int)d4info.get("r1").get(StorageType.SSD));
  DFSTopologyNodeImpl l1=(DFSTopologyNodeImpl)CLUSTER.getNode("/l1");
  HashMap<String,EnumMap<StorageType,Integer>> l1info=l1.getChildrenStorageInfo();
  assertEquals(2,l1info.keySet().size());
  assertTrue(l1info.get("d1").size() == 2 && l1info.get("d2").size() == 3);
  assertEquals(2,(int)l1info.get("d1").get(StorageType.ARCHIVE));
  assertEquals(3,(int)l1info.get("d1").get(StorageType.DISK));
  assertEquals(1,(int)l1info.get("d2").get(StorageType.DISK));
  assertEquals(1,(int)l1info.get("d2").get(StorageType.RAM_DISK));
  assertEquals(1,(int)l1info.get("d2").get(StorageType.SSD));
  DFSTopologyNodeImpl l2=(DFSTopologyNodeImpl)CLUSTER.getNode("/l2");
  HashMap<String,EnumMap<StorageType,Integer>> l2info=l2.getChildrenStorageInfo();
  assertTrue(l2info.get("d3").size() == 3 && l2info.get("d4").size() == 4);
  assertEquals(2,l2info.keySet().size());
  assertEquals(2,(int)l2info.get("d3").get(StorageType.DISK));
  assertEquals(2,(int)l2info.get("d3").get(StorageType.ARCHIVE));
  assertEquals(1,(int)l2info.get("d3").get(StorageType.RAM_DISK));
  assertEquals(2,(int)l2info.get("d4").get(StorageType.DISK));
  assertEquals(2,(int)l2info.get("d4").get(StorageType.ARCHIVE));
  assertEquals(2,(int)l2info.get("d4").get(StorageType.RAM_DISK));
  assertEquals(1,(int)l2info.get("d4").get(StorageType.SSD));
}
