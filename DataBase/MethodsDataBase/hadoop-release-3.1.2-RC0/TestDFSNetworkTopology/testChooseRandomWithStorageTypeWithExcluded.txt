@Test public void testChooseRandomWithStorageTypeWithExcluded() throws Exception {
  Node n;
  DatanodeDescriptor dd;
  n=CLUSTER.chooseRandomWithStorageType("/l2/d3/r4",null,null,StorageType.ARCHIVE);
  HashSet<Node> excluded=new HashSet<>();
  excluded.add(n);
  for (int i=0; i < 10; i++) {
    n=CLUSTER.chooseRandomWithStorageType("/l2/d3",null,null,StorageType.ARCHIVE);
    assertTrue(n instanceof DatanodeDescriptor);
    dd=(DatanodeDescriptor)n;
    assertTrue(dd.getHostName().equals("host12") || dd.getHostName().equals("host13"));
  }
  for (int i=0; i < 10; i++) {
    n=CLUSTER.chooseRandomWithStorageType("/l2/d3",null,excluded,StorageType.ARCHIVE);
    assertTrue(n instanceof DatanodeDescriptor);
    dd=(DatanodeDescriptor)n;
    assertTrue(dd.getHostName().equals("host13"));
  }
  for (int i=0; i < 10; i++) {
    n=CLUSTER.chooseRandomWithStorageType("/l2/d3","/l2/d3/r4",null,StorageType.ARCHIVE);
    assertTrue(n instanceof DatanodeDescriptor);
    dd=(DatanodeDescriptor)n;
    assertTrue(dd.getHostName().equals("host13"));
  }
  for (int i=0; i < 10; i++) {
    n=CLUSTER.chooseRandomWithStorageType("/l2/d3","/l2/d3/r5",excluded,StorageType.ARCHIVE);
    assertNull(n);
  }
  n=CLUSTER.chooseRandomWithStorageType("/l1/d2",null,null,StorageType.DISK);
  dd=(DatanodeDescriptor)n;
  assertEquals("host6",dd.getHostName());
  excluded.add(n);
  Set<String> expectedSet=Sets.newHashSet("host4","host5");
  for (int i=0; i < 10; i++) {
    n=CLUSTER.chooseRandomWithStorageType("/l1","/l1/d1/r1",excluded,StorageType.DISK);
    dd=(DatanodeDescriptor)n;
    assertTrue(expectedSet.contains(dd.getHostName()));
  }
}
