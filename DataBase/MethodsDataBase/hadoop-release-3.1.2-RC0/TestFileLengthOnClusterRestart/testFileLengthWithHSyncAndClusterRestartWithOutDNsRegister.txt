/** 
 * Tests the fileLength when we sync the file and restart the cluster and Datanodes not report to Namenode yet.
 */
@Test(timeout=60000) public void testFileLengthWithHSyncAndClusterRestartWithOutDNsRegister() throws Exception {
  final Configuration conf=new HdfsConfiguration();
  conf.setInt(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,512);
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
  HdfsDataInputStream in=null;
  try {
    Path path=new Path("/tmp/TestFileLengthOnClusterRestart","test");
    DistributedFileSystem dfs=cluster.getFileSystem();
    FSDataOutputStream out=dfs.create(path);
    int fileLength=1030;
    out.write(new byte[fileLength]);
    out.hsync();
    cluster.restartNameNode();
    cluster.waitActive();
    in=(HdfsDataInputStream)dfs.open(path,1024);
    Assert.assertEquals(fileLength,in.getVisibleLength());
    cluster.shutdownDataNodes();
    cluster.restartNameNode(false);
    verifyNNIsInSafeMode(dfs);
    try {
      in=(HdfsDataInputStream)dfs.open(path);
      Assert.fail("Expected IOException");
    }
 catch (    IOException e) {
      Assert.assertTrue(e.getLocalizedMessage().indexOf("Name node is in safe mode") >= 0);
    }
  }
  finally {
    if (null != in) {
      in.close();
    }
    cluster.shutdown();
  }
}
