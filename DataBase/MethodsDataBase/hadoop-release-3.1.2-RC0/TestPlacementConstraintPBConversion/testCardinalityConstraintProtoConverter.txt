@Test public void testCardinalityConstraintProtoConverter(){
  AbstractConstraint sConstraintExpr=cardinality(RACK,3,10);
  Assert.assertTrue(sConstraintExpr instanceof SingleConstraint);
  SingleConstraint single=(SingleConstraint)sConstraintExpr;
  PlacementConstraint sConstraint=PlacementConstraints.build(sConstraintExpr);
  PlacementConstraintToProtoConverter toProtoConverter=new PlacementConstraintToProtoConverter(sConstraint);
  PlacementConstraintProto protoConstraint=toProtoConverter.convert();
  compareSimpleConstraintToProto(single,protoConstraint);
  PlacementConstraintFromProtoConverter fromProtoConverter=new PlacementConstraintFromProtoConverter(protoConstraint);
  PlacementConstraint newConstraint=fromProtoConverter.convert();
  AbstractConstraint newConstraintExpr=newConstraint.getConstraintExpr();
  Assert.assertTrue(newConstraintExpr instanceof SingleConstraint);
  SingleConstraint newSingle=(SingleConstraint)newConstraintExpr;
  compareSimpleConstraints(single,newSingle);
}
