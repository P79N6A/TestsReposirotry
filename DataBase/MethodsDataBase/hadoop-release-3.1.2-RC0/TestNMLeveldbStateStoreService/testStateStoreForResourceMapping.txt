@Test public void testStateStoreForResourceMapping() throws IOException {
  List<RecoveredContainerState> recoveredContainers=loadContainersState(stateStore.getContainerStateIterator());
  assertTrue(recoveredContainers.isEmpty());
  ApplicationId appId=ApplicationId.newInstance(1234,3);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,4);
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,5);
  storeMockContainer(containerId);
  Container container=mock(Container.class);
  when(container.getContainerId()).thenReturn(containerId);
  ResourceMappings resourceMappings=new ResourceMappings();
  when(container.getResourceMappings()).thenReturn(resourceMappings);
  stateStore.storeAssignedResources(container,"gpu",Arrays.asList("1","2","3"));
  List<Serializable> gpuRes1=Arrays.asList("1","2","4");
  stateStore.storeAssignedResources(container,"gpu",gpuRes1);
  List<Serializable> fpgaRes=Arrays.asList("3","4","5","6");
  stateStore.storeAssignedResources(container,"fpga",fpgaRes);
  List<Serializable> numaRes=Arrays.asList("numa1");
  stateStore.storeAssignedResources(container,"numa",numaRes);
  restartStateStore();
  recoveredContainers=loadContainersState(stateStore.getContainerStateIterator());
  assertEquals(1,recoveredContainers.size());
  RecoveredContainerState rcs=recoveredContainers.get(0);
  List<Serializable> res=rcs.getResourceMappings().getAssignedResources("gpu");
  Assert.assertTrue(res.equals(gpuRes1));
  Assert.assertTrue(resourceMappings.getAssignedResources("gpu").equals(gpuRes1));
  res=rcs.getResourceMappings().getAssignedResources("fpga");
  Assert.assertTrue(res.equals(fpgaRes));
  Assert.assertTrue(resourceMappings.getAssignedResources("fpga").equals(fpgaRes));
  res=rcs.getResourceMappings().getAssignedResources("numa");
  Assert.assertTrue(res.equals(numaRes));
  Assert.assertTrue(resourceMappings.getAssignedResources("numa").equals(numaRes));
}
