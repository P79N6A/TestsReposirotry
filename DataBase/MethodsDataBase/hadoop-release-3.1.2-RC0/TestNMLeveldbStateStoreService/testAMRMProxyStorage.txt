@Test public void testAMRMProxyStorage() throws IOException {
  RecoveredAMRMProxyState state=stateStore.loadAMRMProxyState();
  assertEquals(state.getCurrentMasterKey(),null);
  assertEquals(state.getNextMasterKey(),null);
  assertEquals(state.getAppContexts().size(),0);
  ApplicationId appId1=ApplicationId.newInstance(1,1);
  ApplicationId appId2=ApplicationId.newInstance(1,2);
  ApplicationAttemptId attemptId1=ApplicationAttemptId.newInstance(appId1,1);
  ApplicationAttemptId attemptId2=ApplicationAttemptId.newInstance(appId2,2);
  String key1="key1";
  String key2="key2";
  byte[] data1="data1".getBytes();
  byte[] data2="data2".getBytes();
  AMRMProxyTokenSecretManager secretManager=new AMRMProxyTokenSecretManager(stateStore);
  secretManager.init(conf);
  secretManager.start();
  try {
    stateStore.storeAMRMProxyAppContextEntry(attemptId1,key1,data1);
    stateStore.storeAMRMProxyAppContextEntry(attemptId2,key1,data1);
    stateStore.storeAMRMProxyAppContextEntry(attemptId1,key2,data2);
    stateStore.storeAMRMProxyAppContextEntry(attemptId2,key2,data2);
    restartStateStore();
    secretManager.setNMStateStoreService(stateStore);
    state=stateStore.loadAMRMProxyState();
    assertEquals(state.getCurrentMasterKey(),secretManager.getCurrentMasterKeyData().getMasterKey());
    assertEquals(state.getNextMasterKey(),null);
    assertEquals(state.getAppContexts().size(),2);
    Map<String,byte[]> map=state.getAppContexts().get(attemptId1);
    assertNotEquals(map,null);
    assertEquals(map.size(),2);
    assertTrue(Arrays.equals(map.get(key1),data1));
    assertTrue(Arrays.equals(map.get(key2),data2));
    map=state.getAppContexts().get(attemptId2);
    assertNotEquals(map,null);
    assertEquals(map.size(),2);
    assertTrue(Arrays.equals(map.get(key1),data1));
    assertTrue(Arrays.equals(map.get(key2),data2));
    secretManager.rollMasterKey();
    stateStore.removeAMRMProxyAppContextEntry(attemptId2,key1);
    restartStateStore();
    secretManager.setNMStateStoreService(stateStore);
    state=stateStore.loadAMRMProxyState();
    assertEquals(state.getCurrentMasterKey(),secretManager.getCurrentMasterKeyData().getMasterKey());
    assertEquals(state.getNextMasterKey(),secretManager.getNextMasterKeyData().getMasterKey());
    assertEquals(state.getAppContexts().size(),2);
    map=state.getAppContexts().get(attemptId1);
    assertNotEquals(map,null);
    assertEquals(map.size(),2);
    assertTrue(Arrays.equals(map.get(key1),data1));
    assertTrue(Arrays.equals(map.get(key2),data2));
    map=state.getAppContexts().get(attemptId2);
    assertNotEquals(map,null);
    assertEquals(map.size(),1);
    assertTrue(Arrays.equals(map.get(key2),data2));
    secretManager.activateNextMasterKey();
    stateStore.removeAMRMProxyAppContext(attemptId1);
    restartStateStore();
    secretManager.setNMStateStoreService(stateStore);
    state=stateStore.loadAMRMProxyState();
    assertEquals(state.getCurrentMasterKey(),secretManager.getCurrentMasterKeyData().getMasterKey());
    assertEquals(state.getNextMasterKey(),null);
    assertEquals(state.getAppContexts().size(),1);
    map=state.getAppContexts().get(attemptId2);
    assertNotEquals(map,null);
    assertEquals(map.size(),1);
    assertTrue(Arrays.equals(map.get(key2),data2));
  }
  finally {
    secretManager.stop();
  }
}
