/** 
 * This test validates the correctness of RouterWebServiceUtil#mergeAppsInfo in case we want to merge 2 UAMs and their own AM. The status of the AM is FINISHED, so we check the correctness of the merging of the historical values. The expected result would be 1 report with the merged information.
 */
@Test public void testMergeAppsFinished(){
  AppsInfo apps=new AppsInfo();
  String amHost="http://i_am_the_AM1:1234";
  AppInfo am=new AppInfo();
  am.setAppId(APPID1.toString());
  am.setAMHostHttpAddress(amHost);
  am.setState(YarnApplicationState.FINISHED);
  int value=1000;
  setAppInfoFinished(am,value);
  apps.add(am);
  AppInfo uam1=new AppInfo();
  uam1.setAppId(APPID1.toString());
  apps.add(uam1);
  setAppInfoFinished(uam1,value);
  AppInfo uam2=new AppInfo();
  uam2.setAppId(APPID1.toString());
  apps.add(uam2);
  setAppInfoFinished(uam2,value);
  AppsInfo result=RouterWebServiceUtil.mergeAppsInfo(apps.getApps(),false);
  Assert.assertNotNull(result);
  Assert.assertEquals(1,result.getApps().size());
  AppInfo app=result.getApps().get(0);
  Assert.assertEquals(APPID1.toString(),app.getAppId());
  Assert.assertEquals(amHost,app.getAMHostHttpAddress());
  Assert.assertEquals(value * 3,app.getPreemptedResourceMB());
  Assert.assertEquals(value * 3,app.getPreemptedResourceVCores());
  Assert.assertEquals(value * 3,app.getNumNonAMContainerPreempted());
  Assert.assertEquals(value * 3,app.getNumAMContainerPreempted());
  Assert.assertEquals(value * 3,app.getPreemptedMemorySeconds());
  Assert.assertEquals(value * 3,app.getPreemptedVcoreSeconds());
}
