@Test public void testReadNumaTopologyFromCmdOutput() throws Exception {
  conf.setBoolean(YarnConfiguration.NM_NUMA_AWARENESS_READ_TOPOLOGY,true);
  String cmdOutput="available: 2 nodes (0-1)\n\t" + "node 0 cpus: 0 2 4 6\n\t" + "node 0 size: 73717 MB\n\t"+ "node 0 free: 17272 MB\n\t"+ "node 1 cpus: 1 3 5 7\n\t"+ "node 1 size: 73727 MB\n\t"+ "node 1 free: 10699 MB\n\t"+ "node distances:\n\t"+ "node 0 1\n\t"+ "0: 10 20\n\t"+ "1: 20 10";
  numaResourceAllocator=new NumaResourceAllocator(mock(Context.class)){
    @Override String executeNGetCmdOutput(    Configuration config) throws YarnRuntimeException {
      return cmdOutput;
    }
  }
;
  numaResourceAllocator.init(conf);
  Collection<NumaNodeResource> nodesList=numaResourceAllocator.getNumaNodesList();
  Collection<NumaNodeResource> expectedNodesList=getExpectedNumaNodesList();
  Assert.assertEquals(expectedNodesList,nodesList);
}
