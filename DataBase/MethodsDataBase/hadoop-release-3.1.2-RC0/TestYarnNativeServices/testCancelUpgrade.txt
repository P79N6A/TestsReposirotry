@Test(timeout=200000) public void testCancelUpgrade() throws Exception {
  setupInternal(NUM_NMS);
  getConf().setBoolean(YARN_SERVICE_UPGRADE_ENABLED,true);
  ServiceClient client=createClient(getConf());
  Service service=createExampleApplication();
  Component component=service.getComponents().iterator().next();
  component.getConfiguration().getEnv().put("key1","val0");
  client.actionCreate(service);
  waitForServiceToBeStable(client,service);
  service.setState(ServiceState.UPGRADING);
  service.setVersion("v2");
  component.getConfiguration().getEnv().put("key1","val1");
  client.initiateUpgrade(service);
  waitForServiceToBeInState(client,service,ServiceState.UPGRADING);
  Service liveService=client.getStatus(service.getName());
  Container container=liveService.getComponent(component.getName()).getContainers().iterator().next();
  client.actionUpgrade(service,Lists.newArrayList(container));
  Thread.sleep(500);
  client.actionCancelUpgrade(service.getName());
  waitForServiceToBeStable(client,service);
  Service active=client.getStatus(service.getName());
  Assert.assertEquals("component not stable",ComponentState.STABLE,active.getComponent(component.getName()).getState());
  Assert.assertEquals("comp does not have new env","val0",active.getComponent(component.getName()).getConfiguration().getEnv("key1"));
  LOG.info("Stop/destroy service {}",service);
  client.actionStop(service.getName(),true);
  client.actionDestroy(service.getName());
}
