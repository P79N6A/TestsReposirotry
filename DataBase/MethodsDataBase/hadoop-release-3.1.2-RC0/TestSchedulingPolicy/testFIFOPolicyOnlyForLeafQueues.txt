@Test public void testFIFOPolicyOnlyForLeafQueues() throws IOException {
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<queue name=\"root\">");
  out.println("  <queue name=\"intermediate\">");
  out.println("    <schedulingPolicy>fifo</schedulingPolicy>");
  out.println("    <queue name=\"leaf\">");
  out.println("    <schedulingPolicy>fair</schedulingPolicy>");
  out.println("    </queue>");
  out.println("  </queue>");
  out.println("</queue>");
  out.println("</allocations>");
  out.close();
  scheduler.init(conf);
  FSQueue intermediate=scheduler.getQueueManager().getQueue("intermediate");
  assertNull("Queue 'intermediate' should be null since 'fifo' is only for " + "leaf queue.",intermediate);
  out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<queue name=\"root\">");
  out.println("  <queue name=\"intermediate\">");
  out.println("    <schedulingPolicy>fair</schedulingPolicy>");
  out.println("    <queue name=\"leaf\">");
  out.println("    <schedulingPolicy>fifo</schedulingPolicy>");
  out.println("    </queue>");
  out.println("  </queue>");
  out.println("</queue>");
  out.println("</allocations>");
  out.close();
  scheduler.reinitialize(conf,null);
  assertNotNull(scheduler.getQueueManager().getQueue("intermediate"));
  FSQueue leaf=scheduler.getQueueManager().getQueue("intermediate.leaf");
  assertNotNull("Queue 'leaf' should be null since 'fifo' is only for " + "leaf queue.",leaf);
}
