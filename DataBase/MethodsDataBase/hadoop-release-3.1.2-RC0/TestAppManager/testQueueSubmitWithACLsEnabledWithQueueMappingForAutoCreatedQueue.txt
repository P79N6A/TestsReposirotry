@Test public void testQueueSubmitWithACLsEnabledWithQueueMappingForAutoCreatedQueue() throws IOException, YarnException, InterruptedException {
  YarnConfiguration conf=new YarnConfiguration();
  conf.set(YarnConfiguration.YARN_ACL_ENABLE,"true");
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  CapacitySchedulerConfiguration csConf=new CapacitySchedulerConfiguration(conf,false);
  csConf.set(PREFIX + "root.queues","default,managedparent");
  csConf.setFloat(PREFIX + "root.default.capacity",50.0f);
  csConf.setFloat(PREFIX + "root.default.maximum-capacity",100.0f);
  csConf.set(PREFIX + "root.acl_submit_applications"," ");
  csConf.set(PREFIX + "root.acl_administer_queue"," ");
  csConf.set(PREFIX + "root.default.acl_submit_applications"," ");
  csConf.set(PREFIX + "root.default.acl_administer_queue"," ");
  csConf.set(PREFIX + "root.managedparent.acl_administer_queue","admin");
  csConf.set(PREFIX + "root.managedparent.acl_submit_applications","user1");
  csConf.setAutoCreateChildQueueEnabled("root.managedparent",true);
  csConf.setAutoCreatedLeafQueueConfigCapacity("root.managedparent",30f);
  csConf.setAutoCreatedLeafQueueConfigMaxCapacity("root.managedparent",100f);
  PlacementManager placementMgr=mock(PlacementManager.class);
  doAnswer(new Answer<ApplicationPlacementContext>(){
    @Override public ApplicationPlacementContext answer(    InvocationOnMock invocation) throws Throwable {
      return new ApplicationPlacementContext("user1","managedparent");
    }
  }
).when(placementMgr).placeApplication(any(ApplicationSubmissionContext.class),matches("user1|user2"));
  asContext.setQueue("oldQueue");
  MockRM newMockRM=new MockRM(conf);
  CapacityScheduler cs=((CapacityScheduler)newMockRM.getResourceScheduler());
  ManagedParentQueue managedParentQueue=new ManagedParentQueue(cs,"managedparent",cs.getQueue("root"),null);
  cs.getCapacitySchedulerQueueManager().addQueue("managedparent",managedParentQueue);
  RMContext newMockRMContext=newMockRM.getRMContext();
  newMockRMContext.setQueuePlacementManager(placementMgr);
  ApplicationMasterService masterService=new ApplicationMasterService(newMockRMContext,newMockRMContext.getScheduler());
  TestRMAppManager newAppMonitor=new TestRMAppManager(newMockRMContext,new ClientToAMTokenSecretManagerInRM(),newMockRMContext.getScheduler(),masterService,new ApplicationACLsManager(conf),conf);
  newAppMonitor.submitApplication(asContext,"user1");
  try {
    asContext.setApplicationId(appId=MockApps.newAppID(2));
    newAppMonitor.submitApplication(asContext,"user2");
  }
 catch (  YarnException e) {
    assertTrue(e.getCause() instanceof AccessControlException);
  }
}
