@Test public void testReinitializeStoppedAutoCreatedLeafQueue() throws Exception {
  try {
    String host="127.0.0.1";
    RMNode node=MockNodes.newNodeInfo(0,MockNodes.newResource(4 * GB),1,host);
    cs.handle(new NodeAddedSchedulerEvent(node));
    RMApp app1=mockRM.submitApp(GB,"test-auto-queue-creation-1",USER0,null,USER0);
    RMApp app2=mockRM.submitApp(GB,"test-auto-queue-creation-2",USER1,null,USER1);
    List<ApplicationAttemptId> appsInC=cs.getAppsInQueue(PARENT_QUEUE);
    assertEquals(2,appsInC.size());
    assertNotNull(cs.getQueue(USER0));
    assertNotNull(cs.getQueue(USER1));
    AutoCreatedLeafQueue user0Queue=(AutoCreatedLeafQueue)cs.getQueue(USER0);
    AutoCreatedLeafQueue user1Queue=(AutoCreatedLeafQueue)cs.getQueue(USER0);
    ManagedParentQueue parentQueue=(ManagedParentQueue)cs.getQueue(PARENT_QUEUE);
    assertEquals(parentQueue,user0Queue.getParent());
    assertEquals(parentQueue,user1Queue.getParent());
    Map<String,Float> expectedAbsChildQueueCapacity=populateExpectedAbsCapacityByLabelForParentQueue(2);
    validateInitialQueueEntitlement(parentQueue,USER0,expectedAbsChildQueueCapacity,accessibleNodeLabelsOnC);
    validateInitialQueueEntitlement(parentQueue,USER1,expectedAbsChildQueueCapacity,accessibleNodeLabelsOnC);
    ApplicationAttemptId appAttemptId=appsInC.get(0);
    Priority priority=TestUtils.createMockPriority(1);
    RecordFactory recordFactory=RecordFactoryProvider.getRecordFactory(null);
    ResourceRequest r1=TestUtils.createResourceRequest(ResourceRequest.ANY,1 * GB,1,true,priority,recordFactory);
    cs.allocate(appAttemptId,Collections.<ResourceRequest>singletonList(r1),null,Collections.<ContainerId>emptyList(),Collections.singletonList(host),null,NULL_UPDATE_REQUESTS);
    CapacityScheduler.schedule(cs);
    user0Queue.stopQueue();
    cs.killAllAppsInQueue(USER0);
    mockRM.waitForState(appAttemptId,RMAppAttemptState.KILLED);
    mockRM.waitForState(appAttemptId.getApplicationId(),RMAppState.KILLED);
    user0Queue.stopQueue();
    assertEquals(QueueState.STOPPED,user0Queue.getQueueInfo().getQueueState());
    cs.reinitialize(cs.getConf(),mockRM.getRMContext());
    AutoCreatedLeafQueue user0QueueReinited=(AutoCreatedLeafQueue)cs.getQueue(USER0);
    validateCapacities(user0QueueReinited,0.0f,0.0f,1.0f,1.0f);
    AutoCreatedLeafQueue leafQueue=(AutoCreatedLeafQueue)cs.getQueue(USER1);
    expectedAbsChildQueueCapacity=populateExpectedAbsCapacityByLabelForParentQueue(1);
    validateInitialQueueEntitlement(parentQueue,leafQueue.getQueueName(),expectedAbsChildQueueCapacity,accessibleNodeLabelsOnC);
  }
  finally {
    cleanupQueue(USER0);
  }
}
