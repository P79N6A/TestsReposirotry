@Test(timeout=30000) public void testCapacityLeafQueueBecomesParentOnRecovery() throws Exception {
  if (getSchedulerType() != SchedulerType.CAPACITY) {
    return;
  }
  conf.setBoolean(CapacitySchedulerConfiguration.ENABLE_USER_METRICS,true);
  conf.set(CapacitySchedulerConfiguration.RESOURCE_CALCULATOR_CLASS,DominantResourceCalculator.class.getName());
  CapacitySchedulerConfiguration csConf=new CapacitySchedulerConfiguration(conf);
  setupQueueConfiguration(csConf);
  rm1=new MockRM(csConf);
  rm1.start();
  MockMemoryRMStateStore memStore=(MockMemoryRMStateStore)rm1.getRMStateStore();
  MockNM nm=new MockNM("127.1.1.1:4321",8192,rm1.getResourceTrackerService());
  nm.registerNode();
  RMApp app=rm1.submitApp(1024,"app",USER_2,null,B);
  MockRM.launchAndRegisterAM(app,rm1,nm);
  assertEquals(rm1.getApplicationReport(app.getApplicationId()).getYarnApplicationState(),YarnApplicationState.RUNNING);
  RMState state=rm1.getRMStateStore().loadState();
  csConf=new CapacitySchedulerConfiguration(conf);
  setupQueueConfigurationChildOfB(csConf);
  String diags="Application killed on recovery as it was submitted to " + "queue QueueB which is no longer a leaf queue after restart.";
  verifyAppRecoveryWithWrongQueueConfig(csConf,app,diags,memStore,state);
}
