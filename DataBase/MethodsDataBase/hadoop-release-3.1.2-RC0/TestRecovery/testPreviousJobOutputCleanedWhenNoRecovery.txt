@Test public void testPreviousJobOutputCleanedWhenNoRecovery() throws Exception {
  int runCount=0;
  MRApp app=new MRAppWithHistory(1,2,false,this.getClass().getName(),true,++runCount);
  Configuration conf=new Configuration();
  conf.setBoolean(MRJobConfig.MR_AM_JOB_RECOVERY_ENABLE,false);
  conf.setClass("mapred.output.committer.class",TestFileOutputCommitter.class,org.apache.hadoop.mapred.OutputCommitter.class);
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,false);
  conf.set(FileOutputFormat.OUTDIR,outputDir.toString());
  Job job=app.submit(conf);
  app.waitForState(job,JobState.RUNNING);
  Assert.assertEquals("No of tasks not correct",3,job.getTasks().size());
  app.stop();
  app.close();
  app=new MRAppWithHistory(1,2,false,this.getClass().getName(),false,++runCount);
  job=app.submit(conf);
  app.waitForState(job,JobState.RUNNING);
  Assert.assertEquals("No of tasks not correct",3,job.getTasks().size());
  TestFileOutputCommitter committer=(TestFileOutputCommitter)app.getCommitter();
  assertTrue("commiter.abortJob() has not been called",committer.isAbortJobCalled());
  app.close();
}
