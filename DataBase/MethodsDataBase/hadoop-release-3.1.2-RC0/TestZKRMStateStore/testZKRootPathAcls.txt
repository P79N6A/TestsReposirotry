/** 
 * Test if RM can successfully start in HA disabled mode if it was previously running in HA enabled mode. And then start it in HA mode after running it with HA disabled. NoAuth Exception should not be sent by zookeeper and RM should start successfully.
 */
@Test public void testZKRootPathAcls() throws Exception {
  StateChangeRequestInfo req=new StateChangeRequestInfo(HAServiceProtocol.RequestSource.REQUEST_BY_USER);
  String parentPath=YarnConfiguration.DEFAULT_ZK_RM_STATE_STORE_PARENT_PATH;
  String rootPath=parentPath + "/" + ZKRMStateStore.ROOT_ZNODE_NAME;
  Configuration conf=createHARMConf("rm1,rm2","rm1",1234,false,curatorTestingServer);
  conf.set(YarnConfiguration.RM_ZK_ACL,"world:anyone:rwca");
  int perm=23;
  ResourceManager rm=new MockRM(conf);
  rm.start();
  rm.getRMContext().getRMAdminService().transitionToActive(req);
  ZKRMStateStore stateStore=(ZKRMStateStore)rm.getRMContext().getStateStore();
  List<ACL> acls=stateStore.getACL(rootPath);
  assertEquals(acls.size(),2);
  verifyZKACL("digest","localhost",Perms.CREATE | Perms.DELETE,acls);
  verifyZKACL("world","anyone",Perms.ALL ^ (Perms.CREATE | Perms.DELETE),acls);
  acls=stateStore.getACL(parentPath);
  assertEquals(1,acls.size());
  assertEquals(perm,acls.get(0).getPerms());
  rm.close();
  conf.setBoolean(YarnConfiguration.RM_HA_ENABLED,false);
  conf.set(YarnConfiguration.RM_ZK_ACL,YarnConfiguration.DEFAULT_RM_ZK_ACL);
  rm=new MockRM(conf);
  rm.start();
  rm.getRMContext().getRMAdminService().transitionToActive(req);
  acls=stateStore.getACL(rootPath);
  assertEquals(acls.size(),1);
  verifyZKACL("world","anyone",Perms.ALL,acls);
  rm.close();
  conf.setBoolean(YarnConfiguration.RM_HA_ENABLED,true);
  rm=new MockRM(conf);
  rm.start();
  rm.getRMContext().getRMAdminService().transitionToActive(req);
  acls=stateStore.getACL(rootPath);
  assertEquals(acls.size(),2);
  verifyZKACL("digest","localhost",Perms.CREATE | Perms.DELETE,acls);
  verifyZKACL("world","anyone",Perms.ALL ^ (Perms.CREATE | Perms.DELETE),acls);
  rm.close();
}
