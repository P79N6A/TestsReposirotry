@Test public void testAppNodeSplitChangeAcrossRestarts() throws Exception {
  TestZKRMStateStoreTester zkTester=new TestZKRMStateStoreTester();
  long submitTime=System.currentTimeMillis();
  long startTime=submitTime + 1234;
  Configuration conf=new YarnConfiguration();
  RMStateStore store=zkTester.getRMStateStore(createConfForAppNodeSplit(1));
  TestDispatcher dispatcher=new TestDispatcher();
  store.setRMDispatcher(dispatcher);
  RMContext rmContext=mock(RMContext.class);
  when(rmContext.getStateStore()).thenReturn(store);
  AMRMTokenSecretManager appTokenMgr=spy(new AMRMTokenSecretManager(conf,rmContext));
  MasterKeyData masterKeyData=appTokenMgr.createNewMasterKey();
  when(appTokenMgr.getMasterKey()).thenReturn(masterKeyData);
  ClientToAMTokenSecretManagerInRM clientToAMTokenMgr=new ClientToAMTokenSecretManagerInRM();
  ApplicationId appId1=ApplicationId.newInstance(1442994194053L,1);
  ApplicationAttemptId attemptId1=ApplicationAttemptId.newInstance(appId1,1);
  ApplicationAttemptId attemptId2=ApplicationAttemptId.newInstance(appId1,2);
  storeAppWithAttempts(store,dispatcher,submitTime,startTime,appTokenMgr,clientToAMTokenMgr,attemptId1,attemptId2);
  ApplicationId appId11=ApplicationId.newInstance(1442994194053L,2);
  ApplicationAttemptId attemptId11=ApplicationAttemptId.newInstance(appId11,1);
  storeAppWithAttempts(store,dispatcher,attemptId11,submitTime,startTime);
  store.close();
  store=zkTester.getRMStateStore(createConfForAppNodeSplit(2));
  store.setRMDispatcher(dispatcher);
  RMState state=store.loadState();
  ApplicationId appId21=ApplicationId.newInstance(1442994194053L,120213);
  storeApp(store,dispatcher,appId21,submitTime,startTime);
  verifyLoadedApp(state,appId1,submitTime,startTime,0,false,Lists.newArrayList(attemptId1,attemptId2),Lists.newArrayList(-1000,-1000),Lists.newArrayList((FinalApplicationStatus)null,null));
  finishAppWithAttempts(state,store,dispatcher,attemptId2,submitTime,startTime,100,1234,false);
  ApplicationId dummyAppId=ApplicationId.newInstance(1234,10);
  ApplicationAttemptId dummyAttemptId=ApplicationAttemptId.newInstance(dummyAppId,6);
  finishAppWithAttempts(state,store,dispatcher,dummyAttemptId,submitTime,startTime,111,1234,true);
  store.close();
  store=zkTester.getRMStateStore(createConfForAppNodeSplit(0));
  store.setRMDispatcher(dispatcher);
  state=store.loadState();
  assertEquals("Number of Apps loaded should be 4.",4,state.getApplicationState().size());
  verifyLoadedApp(state,appId1,submitTime,startTime,1234,true,Lists.newArrayList(attemptId1,attemptId2),Lists.newArrayList(-1000,100),Lists.newArrayList(null,FinalApplicationStatus.SUCCEEDED));
  store.removeApplicationAttempt(attemptId1);
  ApplicationId appId31=ApplicationId.newInstance(1442994195071L,45);
  storeApp(store,dispatcher,appId31,submitTime,startTime);
  store.close();
  store=zkTester.getRMStateStore(createConfForAppNodeSplit(3));
  store.setRMDispatcher(dispatcher);
  state=store.loadState();
  assertEquals("Number of apps loaded should be 5.",5,state.getApplicationState().size());
  verifyLoadedApp(state,dummyAppId,submitTime,startTime,1234,true,Lists.newArrayList(dummyAttemptId),Lists.newArrayList(111),Lists.newArrayList(FinalApplicationStatus.SUCCEEDED));
  verifyLoadedApp(state,appId31,submitTime,startTime,0,false,null);
  verifyLoadedApp(state,appId21,submitTime,startTime,0,false,null);
  verifyLoadedApp(state,appId11,submitTime,startTime,0,false,Lists.newArrayList(attemptId11),Lists.newArrayList(-1000),Lists.newArrayList((FinalApplicationStatus)null));
  verifyLoadedApp(state,appId1,submitTime,startTime,1234,true,Lists.newArrayList(attemptId2),Lists.newArrayList(100),Lists.newArrayList(FinalApplicationStatus.SUCCEEDED));
  ApplicationId appId41=ApplicationId.newInstance(1442994195087L,1);
  storeApp(store,dispatcher,appId41,submitTime,startTime);
  assertHierarchicalPaths(store,ImmutableMap.of(0,2,1,1,2,2,3,1,4,0));
  verifyAppInHierarchicalPath(store,"application_1442994195087_0001",3);
  ApplicationId appId71=ApplicationId.newInstance(1442994195087L,7);
  storeApp(store,appId71,submitTime,startTime);
  waitNotify(dispatcher);
  ApplicationAttemptId attemptId71=ApplicationAttemptId.newInstance(appId71,1);
  storeAttempt(store,ApplicationAttemptId.newInstance(appId71,1),ContainerId.newContainerId(attemptId71,1).toString(),null,null,dispatcher);
  removeApps(store,ImmutableMap.of(appId11,new ApplicationAttemptId[]{attemptId11},appId71,new ApplicationAttemptId[]{attemptId71},appId41,new ApplicationAttemptId[0],appId31,new ApplicationAttemptId[0],appId21,new ApplicationAttemptId[0]));
  removeApps(store,ImmutableMap.of(dummyAppId,new ApplicationAttemptId[]{dummyAttemptId},appId1,new ApplicationAttemptId[]{attemptId1,attemptId2}));
  store.close();
  store=zkTester.getRMStateStore(createConfForAppNodeSplit(3));
  store.setRMDispatcher(dispatcher);
  state=store.loadState();
  assertEquals("Number of apps loaded should be 0.",0,state.getApplicationState().size());
  store.close();
}
