@Test public void testWebhfsEZRedirectLocation() throws Exception {
  Path zonePath=new Path("/TestEncryptionZone");
  fsWrapper.mkdir(zonePath,FsPermission.getDirDefault(),false);
  dfsAdmin.createEncryptionZone(zonePath,TEST_KEY,NO_TRASH);
  final Path encryptedFilePath=new Path("/TestEncryptionZone/foo");
  final String content="hello world";
  DFSTestUtil.writeFile(fs,encryptedFilePath,content);
  InetSocketAddress addr=cluster.getNameNode().getHttpAddress();
  URL url=new URL("http",addr.getHostString(),addr.getPort(),WebHdfsFileSystem.PATH_PREFIX + encryptedFilePath.toString() + "?op=OPEN");
  HttpURLConnection namenodeConnection=returnConnection(url,"GET",false);
  Assert.assertNotNull(namenodeConnection.getHeaderField("Location"));
  URL datanodeUrl=new URL(namenodeConnection.getHeaderField("Location"));
  Assert.assertNotNull(datanodeUrl);
  String path=datanodeUrl.getPath();
  Assert.assertEquals(WebHdfsFileSystem.PATH_PREFIX + encryptedFilePath.toString(),path);
  url=new URL("http",addr.getHostString(),addr.getPort(),WebHdfsFileSystem.PATH_PREFIX + encryptedFilePath.toString() + "?op=OPEN");
  namenodeConnection=returnConnection(url,"GET",true);
  Assert.assertNotNull(namenodeConnection.getHeaderField("Location"));
  datanodeUrl=new URL(namenodeConnection.getHeaderField("Location"));
  Assert.assertNotNull(datanodeUrl);
  path=datanodeUrl.getPath();
  Assert.assertEquals(WebHdfsFileSystem.PATH_PREFIX + "/.reserved/raw" + encryptedFilePath.toString(),path);
}
