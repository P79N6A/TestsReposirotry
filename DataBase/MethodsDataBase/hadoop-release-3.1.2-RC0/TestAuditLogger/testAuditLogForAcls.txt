/** 
 * Verify Audit log entries for the successful ACL API calls and ACL commands over FS Shell.
 */
@Test(timeout=60000) public void testAuditLogForAcls() throws Exception {
  final Configuration conf=new HdfsConfiguration();
  conf.setBoolean(DFS_NAMENODE_ACLS_ENABLED_KEY,true);
  conf.set(DFS_NAMENODE_AUDIT_LOGGERS_KEY,DummyAuditLogger.class.getName());
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
  try {
    cluster.waitClusterUp();
    assertTrue(DummyAuditLogger.initialized);
    final FileSystem fs=cluster.getFileSystem();
    final Path p=new Path("/debug.log");
    DFSTestUtil.createFile(fs,p,1024,(short)1,0L);
    DummyAuditLogger.resetLogCount();
    fs.getAclStatus(p);
    assertEquals(1,DummyAuditLogger.logCount);
    DFSTestUtil.FsShellRun("-getfacl " + p.toUri().getPath(),0,null,conf);
    assertEquals(2,DummyAuditLogger.logCount);
    final List<AclEntry> acls=Lists.newArrayList();
    acls.add(AclTestHelpers.aclEntry(ACCESS,USER,ALL));
    acls.add(AclTestHelpers.aclEntry(ACCESS,USER,"user1",ALL));
    acls.add(AclTestHelpers.aclEntry(ACCESS,GROUP,READ_EXECUTE));
    acls.add(AclTestHelpers.aclEntry(ACCESS,OTHER,EXECUTE));
    fs.setAcl(p,acls);
    assertEquals(3,DummyAuditLogger.logCount);
    DFSTestUtil.FsShellRun("-getfacl " + p.toUri().getPath(),0,null,conf);
    assertEquals(5,DummyAuditLogger.logCount);
    fs.removeAcl(p);
    assertEquals(6,DummyAuditLogger.logCount);
    List<AclEntry> aclsToRemove=Lists.newArrayList();
    aclsToRemove.add(AclTestHelpers.aclEntry(DEFAULT,USER,"user1",ALL));
    fs.removeAclEntries(p,aclsToRemove);
    fs.removeDefaultAcl(p);
    assertEquals(8,DummyAuditLogger.logCount);
    DFSTestUtil.FsShellRun("-getfacl " + p.toUri().getPath(),0,null,conf);
    assertEquals(9,DummyAuditLogger.logCount);
    assertEquals(0,DummyAuditLogger.unsuccessfulCount);
  }
  finally {
    cluster.shutdown();
  }
}
