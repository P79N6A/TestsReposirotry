@Test public void testGetFlowsForPagination() throws Exception {
  Client client=createClient();
  int noOfEntities=3;
  int limit=2;
  try {
    String flowURI="http://localhost:" + getServerPort() + "/ws/v2/"+ "timeline/clusters/cluster1/flows";
    URI uri=URI.create(flowURI);
    List<FlowActivityEntity> flowEntites=verifyFlowEntites(client,uri,3,new int[]{3,2,1},new String[]{"flow1","flow_name","flow_name2"});
    FlowActivityEntity fEntity1=flowEntites.get(0);
    FlowActivityEntity fEntity3=flowEntites.get(noOfEntities - 1);
    uri=URI.create(flowURI + "?limit=" + limit);
    flowEntites=verifyFlowEntites(client,uri,limit);
    assertEquals(fEntity1,flowEntites.get(0));
    FlowActivityEntity fEntity2=flowEntites.get(limit - 1);
    uri=URI.create(flowURI + "?limit=" + limit+ "&fromid="+ fEntity2.getInfo().get(TimelineReaderUtils.FROMID_KEY));
    flowEntites=verifyFlowEntites(client,uri,noOfEntities - limit + 1);
    assertEquals(fEntity2,flowEntites.get(0));
    assertEquals(fEntity3,flowEntites.get(noOfEntities - limit));
    uri=URI.create(flowURI + "?limit=" + limit+ "&fromid="+ fEntity3.getInfo().get(TimelineReaderUtils.FROMID_KEY));
    flowEntites=verifyFlowEntites(client,uri,1);
    assertEquals(fEntity3,flowEntites.get(0));
  }
  finally {
    client.destroy();
  }
}
