/** 
 * Tests when choosing blocks on file creation of EC striped mode should ignore storage policy if that is not suitable. Supported storage policies for EC Striped mode are HOT, COLD and ALL_SSD. For all other policies set will be ignored and considered default policy.
 */
@Test(timeout=60000) public void testUnsuitableStoragePoliciesWithECStripedMode() throws Exception {
  final Configuration conf=new HdfsConfiguration();
  int defaultStripedBlockSize=testECPolicy.getCellSize() * 4;
  conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,defaultStripedBlockSize);
  conf.setLong(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,1L);
  conf.setLong(DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_INTERVAL_SECONDS_KEY,1L);
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_KEY,false);
  int numOfDatanodes=10;
  int storagesPerDatanode=2;
  long capacity=10 * defaultStripedBlockSize;
  long[][] capacities=new long[numOfDatanodes][storagesPerDatanode];
  for (int i=0; i < numOfDatanodes; i++) {
    for (int j=0; j < storagesPerDatanode; j++) {
      capacities[i][j]=capacity;
    }
  }
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numOfDatanodes).storagesPerDatanode(storagesPerDatanode).storageTypes(new StorageType[][]{{StorageType.SSD,StorageType.DISK},{StorageType.SSD,StorageType.DISK},{StorageType.SSD,StorageType.DISK},{StorageType.SSD,StorageType.DISK},{StorageType.SSD,StorageType.DISK},{StorageType.DISK,StorageType.SSD},{StorageType.DISK,StorageType.SSD},{StorageType.DISK,StorageType.SSD},{StorageType.DISK,StorageType.SSD},{StorageType.DISK,StorageType.SSD}}).storageCapacities(capacities).build();
  try {
    cluster.waitActive();
    cluster.getFileSystem().enableErasureCodingPolicy(StripedFileTestUtil.getDefaultECPolicy().getName());
    ClientProtocol client=NameNodeProxies.createProxy(conf,cluster.getFileSystem(0).getUri(),ClientProtocol.class).getProxy();
    String fooDir="/foo";
    client.mkdirs(fooDir,new FsPermission((short)777),true);
    client.setStoragePolicy(fooDir,HdfsConstants.ONESSD_STORAGE_POLICY_NAME);
    client.setErasureCodingPolicy(fooDir,StripedFileTestUtil.getDefaultECPolicy().getName());
    final String barFile="/foo/bar";
    long fileLen=20 * defaultStripedBlockSize;
    DFSTestUtil.createFile(cluster.getFileSystem(),new Path(barFile),fileLen,(short)3,0);
    LocatedBlocks locatedBlocks=client.getBlockLocations(barFile,0,fileLen);
    for (    LocatedBlock lb : locatedBlocks.getLocatedBlocks()) {
      for (      StorageType type : lb.getStorageTypes()) {
        Assert.assertEquals(StorageType.DISK,type);
      }
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
