/** 
 * Positive test to verify file delete access check, with intermediate folders Uses wildcard recursive permissions.
 * @throws Throwable
 */
@Test public void testFileDeleteAccessWithIntermediateFoldersCheckPositive() throws Throwable {
  Path parentDir=new Path("/testDeleteIntermediateFolder");
  Path childPath=new Path(parentDir,"1/2");
  Path testPath=new Path(childPath,"test.dat");
  authorizer.addAuthRuleForOwner("/",WRITE,true);
  authorizer.addAuthRuleForOwner("/testDeleteIntermediateFolder*",WRITE,true);
  fs.updateWasbAuthorizer(authorizer);
  try {
    fs.create(testPath);
    ContractTestUtils.assertPathExists(fs,"testPath was not created",testPath);
    fs.delete(parentDir,true);
    ContractTestUtils.assertPathDoesNotExist(fs,"testPath exists after deletion!",parentDir);
  }
  finally {
    allowRecursiveDelete(fs,parentDir.toString());
    fs.delete(parentDir,true);
  }
}
