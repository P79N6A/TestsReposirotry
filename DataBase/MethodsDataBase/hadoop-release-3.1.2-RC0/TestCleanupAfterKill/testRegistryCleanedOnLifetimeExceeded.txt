@Test(timeout=200000) public void testRegistryCleanedOnLifetimeExceeded() throws Exception {
  setupInternal(NUM_NMS);
  ServiceClient client=createClient(getConf());
  Service exampleApp=createExampleApplication();
  exampleApp.setLifetime(30L);
  client.actionCreate(exampleApp);
  waitForServiceToBeStable(client,exampleApp);
  String serviceZKPath=RegistryUtils.servicePath(RegistryUtils.currentUser(),YarnServiceConstants.APP_TYPE,exampleApp.getName());
  Assert.assertTrue("Registry ZK service path doesn't exist",getCuratorService().zkPathExists(serviceZKPath));
  ApplicationId exampleAppId=ApplicationId.fromString(exampleApp.getId());
  GenericTestUtils.waitFor(() -> {
    try {
      ApplicationReport ar=client.getYarnClient().getApplicationReport(exampleAppId);
      return ar.getYarnApplicationState() == YarnApplicationState.KILLED;
    }
 catch (    YarnException|IOException e) {
      throw new RuntimeException("while waiting",e);
    }
  }
,2000,200000);
  Assert.assertFalse("Registry ZK service path still exists after killed",getCuratorService().zkPathExists(serviceZKPath));
  LOG.info("Destroy the service");
  Assert.assertEquals(0,client.actionDestroy(exampleApp.getName()));
}
