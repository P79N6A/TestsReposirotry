@Test public void testDiskCheckTimeoutInvokesOneCallbackOnly() throws Exception {
  LOG.info("Executing {}",testName.getMethodName());
  final DummyCheckable target=new DummyCheckable();
  final FakeTimer timer=new FakeTimer();
  ThrottledAsyncChecker<Boolean,Boolean> checker=new ThrottledAsyncChecker<>(timer,0,DISK_CHECK_TIMEOUT,getExecutorService());
  FutureCallback<Boolean> futureCallback=mock(FutureCallback.class);
  lock.lock();
  final Optional<ListenableFuture<Boolean>> olf1=checker.schedule(target,true);
  assertTrue(olf1.isPresent());
  Futures.addCallback(olf1.get(),futureCallback);
  verify(futureCallback,timeout((int)DISK_CHECK_TIMEOUT * 10).times(1)).onFailure(any());
  verify(futureCallback,timeout((int)DISK_CHECK_TIMEOUT * 10).times(0)).onSuccess(any());
  lock.unlock();
  final Optional<ListenableFuture<Boolean>> olf2=checker.schedule(target,true);
  assertTrue(olf2.isPresent());
  Futures.addCallback(olf2.get(),futureCallback);
  verify(futureCallback,timeout((int)DISK_CHECK_TIMEOUT * 10).times(1)).onFailure(any());
  verify(futureCallback,timeout((int)DISK_CHECK_TIMEOUT * 10).times(1)).onSuccess(any());
}
