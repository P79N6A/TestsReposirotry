/** 
 * Test that -tail -f outputs appended data as the file grows.
 */
@Test(timeout=30000) public void testTailWithFresh() throws Exception {
  final Path testFile=new Path("testTailWithFresh","file1");
  dfs.create(testFile);
  final ByteArrayOutputStream out=new ByteArrayOutputStream();
  System.setOut(new PrintStream(out));
  final Thread tailer=new Thread(){
    @Override public void run(){
      final String[] argv=new String[]{"-tail","-f",testFile.toString()};
      try {
        ToolRunner.run(new FsShell(dfs.getConf()),argv);
      }
 catch (      Exception e) {
        LOG.error("Client that tails the test file fails",e);
      }
 finally {
        out.reset();
      }
    }
  }
;
  tailer.start();
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return tailer.getState() == Thread.State.TIMED_WAITING;
    }
  }
,100,10000);
  final String text=RandomStringUtils.randomAscii(BLOCK_SIZE / 2);
  try (OutputStream pout=dfs.create(testFile)){
    pout.write(text.getBytes());
  }
   GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return Arrays.equals(text.getBytes(),out.toByteArray());
    }
  }
,100,10000);
}
