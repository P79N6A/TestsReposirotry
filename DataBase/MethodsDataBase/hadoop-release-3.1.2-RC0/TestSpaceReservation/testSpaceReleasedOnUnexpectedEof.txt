/** 
 * Ensure that reserved space is released when the client goes away unexpectedly. The verification is done for each replica in the write pipeline.
 * @throws IOException
 */
@Test(timeout=300000) public void testSpaceReleasedOnUnexpectedEof() throws IOException, InterruptedException, TimeoutException {
  final short replication=3;
  startCluster(BLOCK_SIZE,replication,-1);
  final String methodName=GenericTestUtils.getMethodName();
  final Path file=new Path("/" + methodName + ".01.dat");
  FSDataOutputStream os=fs.create(file,replication);
  os.write(new byte[1]);
  os.hsync();
  DFSTestUtil.abortStream((DFSOutputStream)os.getWrappedStream());
  for (  DataNode dn : cluster.getDataNodes()) {
    try (FsDatasetSpi.FsVolumeReferences volumes=dn.getFSDataset().getFsVolumeReferences()){
      final FsVolumeImpl volume=(FsVolumeImpl)volumes.get(0);
      GenericTestUtils.waitFor(new Supplier<Boolean>(){
        @Override public Boolean get(){
          return (volume.getReservedForReplicas() == 0);
        }
      }
,500,Integer.MAX_VALUE);
    }
   }
}
