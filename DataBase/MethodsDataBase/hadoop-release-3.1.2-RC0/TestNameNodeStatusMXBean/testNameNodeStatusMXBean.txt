@Test(timeout=120000L) public void testNameNodeStatusMXBean() throws Exception {
  Configuration conf=new Configuration();
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster.Builder(conf).build();
    cluster.waitActive();
    NameNode nn=cluster.getNameNode();
    MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();
    ObjectName mxbeanName=new ObjectName("Hadoop:service=NameNode,name=NameNodeStatus");
    String nnRole=(String)mbs.getAttribute(mxbeanName,"NNRole");
    Assert.assertEquals(nn.getNNRole(),nnRole);
    String state=(String)mbs.getAttribute(mxbeanName,"State");
    Assert.assertEquals(nn.getState(),state);
    String hostAndPort=(String)mbs.getAttribute(mxbeanName,"HostAndPort");
    Assert.assertEquals(nn.getHostAndPort(),hostAndPort);
    boolean securityEnabled=(boolean)mbs.getAttribute(mxbeanName,"SecurityEnabled");
    Assert.assertEquals(nn.isSecurityEnabled(),securityEnabled);
    long lastHATransitionTime=(long)mbs.getAttribute(mxbeanName,"LastHATransitionTime");
    Assert.assertEquals(nn.getLastHATransitionTime(),lastHATransitionTime);
    long bytesWithFutureGenerationStamps=(long)mbs.getAttribute(mxbeanName,"BytesWithFutureGenerationStamps");
    Assert.assertEquals(nn.getBytesWithFutureGenerationStamps(),bytesWithFutureGenerationStamps);
    String slowPeersReport=(String)mbs.getAttribute(mxbeanName,"SlowPeersReport");
    Assert.assertEquals(nn.getSlowPeersReport(),slowPeersReport);
    String slowDisksReport=(String)mbs.getAttribute(mxbeanName,"SlowDisksReport");
    Assert.assertEquals(nn.getSlowDisksReport(),slowDisksReport);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
