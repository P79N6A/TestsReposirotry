@Test(timeout=20000) public void testWriteEnvOrder() throws Exception {
  assumeNotWindows();
  List<String> commands=new ArrayList<String>();
  Map<String,String> env=new HashMap<String,String>();
  env.put("USER_VAR_1","1");
  env.put("USER_VAR_2","2");
  env.put("NM_MODIFIED_VAR_1","nm 1");
  env.put("NM_MODIFIED_VAR_2","nm 2");
  LinkedHashSet<String> trackedNmVars=new LinkedHashSet<>();
  trackedNmVars.add("NM_MODIFIED_VAR_1");
  trackedNmVars.add("NM_MODIFIED_VAR_2");
  final Map<String,String> nmEnv=new HashMap<>();
  nmEnv.put("WHITELIST_VAR_1","wl 1");
  nmEnv.put("WHITELIST_VAR_2","wl 2");
  nmEnv.put("NON_WHITELIST_VAR_1","nwl 1");
  nmEnv.put("NON_WHITELIST_VAR_2","nwl 2");
  DefaultContainerExecutor defaultContainerExecutor=new DefaultContainerExecutor(){
    @Override protected String getNMEnvVar(    String varname){
      return nmEnv.get(varname);
    }
  }
;
  ArrayList<String> whitelistVars=new ArrayList<>();
  whitelistVars.add("WHITELIST_VAR_1");
  whitelistVars.add("WHITELIST_VAR_2");
  YarnConfiguration conf=new YarnConfiguration();
  conf.set(YarnConfiguration.NM_ENV_WHITELIST,whitelistVars.get(0) + "," + whitelistVars.get(1));
  ArrayList<String> nonWhiteListEnv=new ArrayList<>();
  nonWhiteListEnv.add("NON_WHITELIST_VAR_1");
  nonWhiteListEnv.add("NON_WHITELIST_VAR_2");
  File shellFile=Shell.appendScriptExtension(tmpDir,"hello");
  Map<Path,List<String>> resources=new HashMap<Path,List<String>>();
  FileOutputStream fos=new FileOutputStream(shellFile);
  defaultContainerExecutor.setConf(conf);
  defaultContainerExecutor.writeLaunchEnv(fos,env,resources,commands,new Path(localLogDir.getAbsolutePath()),"user",trackedNmVars);
  fos.flush();
  fos.close();
  String shellContent=new String(Files.readAllBytes(Paths.get(shellFile.getAbsolutePath())),StandardCharsets.UTF_8);
  for (  String envVar : env.keySet()) {
    Assert.assertTrue(shellContent.contains(envVar + "="));
  }
  for (  String wlVar : whitelistVars) {
    Assert.assertTrue(shellContent.contains(wlVar + "="));
  }
  for (  String nwlVar : nonWhiteListEnv) {
    Assert.assertFalse(shellContent.contains(nwlVar + "="));
  }
  for (  String nmVar : trackedNmVars) {
    for (    String userVar : env.keySet()) {
      if (!trackedNmVars.contains(userVar) && !whitelistVars.contains(userVar)) {
        Assert.assertTrue(shellContent.indexOf(nmVar + "=") < shellContent.indexOf(userVar + "="));
      }
    }
  }
  for (  String wlVar : whitelistVars) {
    for (    String nmVar : trackedNmVars) {
      Assert.assertTrue(shellContent.indexOf(wlVar + "=") < shellContent.indexOf(nmVar + "="));
    }
  }
}
