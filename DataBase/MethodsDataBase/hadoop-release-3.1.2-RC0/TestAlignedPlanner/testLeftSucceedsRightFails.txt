@Test public void testLeftSucceedsRightFails() throws PlanningException {
  int numJobsInScenario=initializeScenario2();
  ReservationDefinition rr1=createReservationDefinition(7 * step,16 * step,new ReservationRequest[]{ReservationRequest.newInstance(Resource.newInstance(1024,1),20,20,2 * step),ReservationRequest.newInstance(Resource.newInstance(1024,1),20,20,2 * step)},ReservationRequestInterpreter.R_ORDER,"u1");
  ReservationDefinition rr2=createReservationDefinition(14 * step,16 * step,new ReservationRequest[]{ReservationRequest.newInstance(Resource.newInstance(1024,1),100,100,2 * step)},ReservationRequestInterpreter.R_ORDER,"u2");
  ReservationId reservationID1=ReservationSystemTestUtil.getNewReservationId();
  agentLeft.createReservation(reservationID1,"u1",plan,rr1);
  assertTrue("Agent-based allocation failed",reservationID1 != null);
  assertTrue("Agent-based allocation failed",plan.getAllReservations().size() == numJobsInScenario + 1);
  ReservationAllocation alloc1=plan.getReservationById(reservationID1);
  assertTrue(alloc1.toString(),check(alloc1,7 * step,11 * step,20,1024,1));
  ReservationId reservationID2=ReservationSystemTestUtil.getNewReservationId();
  agentLeft.createReservation(reservationID2,"u2",plan,rr2);
  assertTrue("Agent-based allocation failed",reservationID2 != null);
  assertTrue("Agent-based allocation failed",plan.getAllReservations().size() == numJobsInScenario + 2);
  ReservationAllocation alloc2=plan.getReservationById(reservationID2);
  assertTrue(alloc2.toString(),check(alloc2,14 * step,16 * step,100,1024,1));
  agentLeft.deleteReservation(reservationID1,"u1",plan);
  agentLeft.deleteReservation(reservationID2,"u2",plan);
  ReservationId reservationID3=ReservationSystemTestUtil.getNewReservationId();
  agentRight.createReservation(reservationID3,"u1",plan,rr1);
  assertTrue("Agent-based allocation failed",reservationID3 != null);
  assertTrue("Agent-based allocation failed",plan.getAllReservations().size() == numJobsInScenario + 1);
  try {
    ReservationId reservationID4=ReservationSystemTestUtil.getNewReservationId();
    agentRight.createReservation(reservationID4,"u2",plan,rr2);
    fail();
  }
 catch (  PlanningException e) {
  }
}
