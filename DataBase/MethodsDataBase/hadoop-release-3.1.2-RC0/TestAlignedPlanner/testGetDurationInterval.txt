@Test public void testGetDurationInterval() throws PlanningException {
  DurationInterval durationInterval=null;
  RLESparseResourceAllocation netRLERes=new RLESparseResourceAllocation(res);
  netRLERes.addInterval(new ReservationInterval(10 * step,40 * step),Resource.newInstance(4096,4));
  netRLERes.addInterval(new ReservationInterval(20 * step,30 * step),Resource.newInstance(4096,4));
  RLESparseResourceAllocation planLoads=new RLESparseResourceAllocation(res);
  planLoads.addInterval(new ReservationInterval(20 * step,30 * step),Resource.newInstance(5120,5));
  RLESparseResourceAllocation planModifications=new RLESparseResourceAllocation(res);
  planModifications.addInterval(new ReservationInterval(25 * step,35 * step),Resource.newInstance(1024,1));
  Resource requestedResources=Resource.newInstance(1024,1);
  durationInterval=StageAllocatorLowCostAligned.getDurationInterval(10 * step,30 * step,planLoads,planModifications,clusterCapacity,netRLERes,res,step,requestedResources);
  assertEquals(durationInterval.numCanFit(),4);
  assertEquals(durationInterval.getTotalCost(),0.55,0.00001);
  durationInterval=StageAllocatorLowCostAligned.getDurationInterval(10 * step,31 * step,planLoads,planModifications,clusterCapacity,netRLERes,res,step,requestedResources);
  System.out.println(durationInterval);
  assertEquals(durationInterval.numCanFit(),3);
  assertEquals(durationInterval.getTotalCost(),0.56,0.00001);
  durationInterval=StageAllocatorLowCostAligned.getDurationInterval(15 * step,30 * step,planLoads,planModifications,clusterCapacity,netRLERes,res,step,requestedResources);
  assertEquals(durationInterval.numCanFit(),4);
  assertEquals(durationInterval.getTotalCost(),0.55,0.00001);
  durationInterval=StageAllocatorLowCostAligned.getDurationInterval(15 * step,31 * step,planLoads,planModifications,clusterCapacity,netRLERes,res,step,requestedResources);
  System.out.println(durationInterval);
  assertEquals(durationInterval.numCanFit(),3);
  assertEquals(durationInterval.getTotalCost(),0.56,0.00001);
  durationInterval=StageAllocatorLowCostAligned.getDurationInterval(22 * step,23 * step,planLoads,planModifications,clusterCapacity,netRLERes,res,step,requestedResources);
  System.out.println(durationInterval);
  assertEquals(durationInterval.numCanFit(),8);
  assertEquals(durationInterval.getTotalCost(),0.05,0.00001);
  durationInterval=StageAllocatorLowCostAligned.getDurationInterval(39 * step,41 * step,planLoads,planModifications,clusterCapacity,netRLERes,res,step,requestedResources);
  System.out.println(durationInterval);
  assertEquals(durationInterval.numCanFit(),0);
  assertEquals(durationInterval.getTotalCost(),0,0.00001);
}
