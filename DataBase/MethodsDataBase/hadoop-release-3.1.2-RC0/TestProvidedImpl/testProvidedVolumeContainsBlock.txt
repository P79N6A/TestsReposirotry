@Test public void testProvidedVolumeContainsBlock() throws URISyntaxException {
  assertEquals(true,ProvidedVolumeImpl.containsBlock(null,null));
  assertEquals(false,ProvidedVolumeImpl.containsBlock(new URI("file:/a"),null));
  assertEquals(true,ProvidedVolumeImpl.containsBlock(new URI("file:/a/b/c/"),new URI("file:/a/b/c/d/e.file")));
  assertEquals(true,ProvidedVolumeImpl.containsBlock(new URI("/a/b/c/"),new URI("file:/a/b/c/d/e.file")));
  assertEquals(true,ProvidedVolumeImpl.containsBlock(new URI("/a/b/c"),new URI("file:/a/b/c/d/e.file")));
  assertEquals(true,ProvidedVolumeImpl.containsBlock(new URI("/a/b/c/"),new URI("/a/b/c/d/e.file")));
  assertEquals(true,ProvidedVolumeImpl.containsBlock(new URI("file:/a/b/c/"),new URI("/a/b/c/d/e.file")));
  assertEquals(false,ProvidedVolumeImpl.containsBlock(new URI("/a/b/e"),new URI("file:/a/b/c/d/e.file")));
  assertEquals(false,ProvidedVolumeImpl.containsBlock(new URI("file:/a/b/e"),new URI("file:/a/b/c/d/e.file")));
  assertEquals(true,ProvidedVolumeImpl.containsBlock(new URI("s3a:/bucket1/dir1/"),new URI("s3a:/bucket1/dir1/temp.txt")));
  assertEquals(false,ProvidedVolumeImpl.containsBlock(new URI("s3a:/bucket2/dir1/"),new URI("s3a:/bucket1/dir1/temp.txt")));
  assertEquals(false,ProvidedVolumeImpl.containsBlock(new URI("s3a:/bucket1/dir1/"),new URI("s3a:/bucket1/temp.txt")));
  assertEquals(false,ProvidedVolumeImpl.containsBlock(new URI("/bucket1/dir1/"),new URI("s3a:/bucket1/dir1/temp.txt")));
}
