/** 
 * Reformatted DataNodes will replace the original UUID in the {@link DatanodeManager#datanodeMap}. This tests if block invalidation work on the original DataNode can be skipped.
 */
@Test(timeout=120000) public void testDatanodeReformat() throws Exception {
  namesystem.writeLock();
  try {
    String poolId=cluster.getNamesystem().getBlockPoolId();
    DatanodeRegistration dnr=cluster.getDataNode(nodes[0].getIpcPort()).getDNRegistrationForBP(poolId);
    dnr=new DatanodeRegistration(UUID.randomUUID().toString(),dnr);
    cluster.stopDataNode(nodes[0].getXferAddr());
    Block block=new Block(0,0,GenerationStamp.LAST_RESERVED_STAMP);
    bm.addToInvalidates(block,nodes[0]);
    Block stripedBlock=new Block(locatedStripedBlock.getBlock().getBlockId() + 100,stripesPerBlock * cellSize,locatedStripedBlock.getBlock().getGenerationStamp());
    bm.addToInvalidates(stripedBlock,nodes[0]);
    bm.getDatanodeManager().registerDatanode(dnr);
    assertEquals(0,bm.computeInvalidateWork(1));
    assertEquals(0,bm.getPendingDeletionBlocksCount());
  }
  finally {
    namesystem.writeUnlock();
  }
}
