@Test(timeout=120000) public void testApplicationLimitSubmit() throws Exception {
  YarnConfiguration conf=new YarnConfiguration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  RMNodeLabelsManager mgr=new NullRMNodeLabelsManager();
  mgr.init(conf);
  mgr.addToCluserNodeLabelsWithDefaultExclusivity(ImmutableSet.of("x","y","z"));
  mgr.addLabelsToNode(ImmutableMap.of(NodeId.newInstance("h1",0),toSet("x")));
  mgr.addLabelsToNode(ImmutableMap.of(NodeId.newInstance("h2",0),toSet("y")));
  MockRM rm=new MockRM(getConfigurationWithQueueLabels(conf)){
    @Override public RMNodeLabelsManager createNodeLabelManager(){
      return mgr;
    }
  }
;
  rm.getRMContext().setNodeLabelManager(mgr);
  rm.start();
  MockNM nm1=rm.registerNode("h1:1234",4096);
  MockNM nm2=rm.registerNode("h2:1234",4096);
  MockNM nm3=rm.registerNode("h3:1234",4096);
  RMApp app1=rm.submitApp(GB,"app","user",null,"c",false);
  rm.drainEvents();
  rm.waitForState(app1.getApplicationId(),RMAppState.ACCEPTED);
  assertEquals(RMAppState.ACCEPTED,app1.getState());
  rm.killApp(app1.getApplicationId());
  RMApp app2=rm.submitApp(GB,"app","user",null,"a1",false);
  rm.drainEvents();
  rm.waitForState(app2.getApplicationId(),RMAppState.ACCEPTED);
  assertEquals(RMAppState.ACCEPTED,app2.getState());
  RMApp app3=rm.submitApp(GB,"app","user",null,"a1",false);
  rm.drainEvents();
  rm.waitForState(app3.getApplicationId(),RMAppState.FAILED);
  assertEquals(RMAppState.FAILED,app3.getState());
  assertEquals("org.apache.hadoop.security.AccessControlException: " + "Queue root.a.a1 already has 1 applications, cannot accept " + "submission of application: "+ app3.getApplicationId(),app3.getDiagnostics().toString());
  RMApp app11=rm.submitApp(GB,"app","user",null,"d",false);
  rm.drainEvents();
  rm.waitForState(app11.getApplicationId(),RMAppState.ACCEPTED);
  assertEquals(RMAppState.ACCEPTED,app11.getState());
  RMApp app12=rm.submitApp(GB,"app","user",null,"d",false);
  rm.drainEvents();
  rm.waitForState(app12.getApplicationId(),RMAppState.ACCEPTED);
  assertEquals(RMAppState.ACCEPTED,app12.getState());
  RMApp app13=rm.submitApp(GB,"app","user",null,"d",false);
  rm.drainEvents();
  rm.waitForState(app13.getApplicationId(),RMAppState.FAILED);
  assertEquals(RMAppState.FAILED,app13.getState());
  assertEquals("org.apache.hadoop.security.AccessControlException: Queue" + " root.d already has 2 applications from user user cannot" + " accept submission of application: "+ app13.getApplicationId(),app13.getDiagnostics().toString());
  RMApp app14=rm.submitApp(GB,"app","user2",null,"a2",false);
  rm.drainEvents();
  rm.waitForState(app14.getApplicationId(),RMAppState.ACCEPTED);
  RMApp app15=rm.submitApp(GB,"app","user2",null,"a2",false);
  rm.drainEvents();
  rm.waitForState(app15.getApplicationId(),RMAppState.FAILED);
  assertEquals(RMAppState.FAILED,app15.getState());
  assertEquals("Maximum system application limit reached,cannot" + " accept submission of application: " + app15.getApplicationId(),app15.getDiagnostics().toString());
  rm.killApp(app2.getApplicationId());
  rm.killApp(app11.getApplicationId());
  rm.killApp(app13.getApplicationId());
  rm.killApp(app14.getApplicationId());
  rm.stop();
}
