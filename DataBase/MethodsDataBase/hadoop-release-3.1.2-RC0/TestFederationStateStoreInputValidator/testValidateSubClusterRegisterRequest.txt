@Test public void testValidateSubClusterRegisterRequest(){
  SubClusterInfo subClusterInfo=SubClusterInfo.newInstance(subClusterId,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNew,lastStartTime,capability);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
  }
 catch (  FederationStateStoreInvalidInputException e) {
    Assert.fail(e.getMessage());
  }
  try {
    SubClusterRegisterRequest request=null;
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubClusterRegister Request."));
  }
  subClusterInfo=null;
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubCluster Information."));
  }
  subClusterInfo=SubClusterInfo.newInstance(subClusterIdNull,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNew,lastStartTime,capability);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubCluster Id information."));
  }
  subClusterInfo=SubClusterInfo.newInstance(subClusterIdInvalid,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNew,lastStartTime,capability);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Invalid SubCluster Id information."));
  }
  subClusterInfo=SubClusterInfo.newInstance(subClusterId,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNull,lastStartTime,capability);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubCluster State information."));
  }
  subClusterInfo=SubClusterInfo.newInstance(subClusterId,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNew,lastStartTime,capabilityNull);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
  }
 catch (  FederationStateStoreInvalidInputException e) {
    Assert.fail(e.getMessage());
  }
  subClusterInfo=SubClusterInfo.newInstance(subClusterId,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNew,lastStartTime,capabilityEmpty);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
  }
 catch (  FederationStateStoreInvalidInputException e) {
    Assert.fail(e.getMessage());
  }
}
