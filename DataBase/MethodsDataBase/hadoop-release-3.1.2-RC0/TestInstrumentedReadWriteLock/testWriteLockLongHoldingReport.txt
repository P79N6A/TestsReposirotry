/** 
 * Tests the warning when the write lock is held longer than threshold.
 * @throws Exception
 */
@Test(timeout=10000) public void testWriteLockLongHoldingReport() throws Exception {
  String testname=name.getMethodName();
  final AtomicLong time=new AtomicLong(0);
  Timer mclock=new Timer(){
    @Override public long monotonicNow(){
      return time.get();
    }
  }
;
  final AtomicLong wlogged=new AtomicLong(0);
  final AtomicLong wsuppresed=new AtomicLong(0);
  ReentrantReadWriteLock readWriteLock=new ReentrantReadWriteLock(true);
  InstrumentedWriteLock writeLock=new InstrumentedWriteLock(testname,LOG,readWriteLock,2000,300,mclock){
    @Override protected void logWarning(    long lockHeldTime,    long suppressed){
      wlogged.incrementAndGet();
      wsuppresed.set(suppressed);
    }
  }
;
  writeLock.lock();
  time.set(100);
  writeLock.unlock();
  assertEquals(0,wlogged.get());
  assertEquals(0,wsuppresed.get());
  writeLock.lock();
  time.set(500);
  writeLock.unlock();
  assertEquals(1,wlogged.get());
  assertEquals(0,wsuppresed.get());
  writeLock.lock();
  time.set(900);
  writeLock.unlock();
  assertEquals(1,wlogged.get());
  assertEquals(0,wsuppresed.get());
  writeLock.lock();
  time.set(3000);
  writeLock.unlock();
  assertEquals(2,wlogged.get());
  assertEquals(1,wsuppresed.get());
}
