@Test public void testRebuildCollectorDataOnFailover() throws Exception {
  startRMs();
  MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm2.getResourceTrackerService());
  MockNM nm2=new MockNM("127.0.0.1:5678",15121,rm2.getResourceTrackerService());
  RMApp app1=rm1.submitApp(1024);
  String collectorAddr1="1.2.3.4:5";
  AppCollectorData data1=AppCollectorData.newInstance(app1.getApplicationId(),collectorAddr1);
  nm1.addRegisteringCollector(app1.getApplicationId(),data1);
  String collectorAddr2="5.4.3.2:1";
  RMApp app2=rm1.submitApp(1024);
  AppCollectorData data2=AppCollectorData.newInstance(app2.getApplicationId(),collectorAddr2,rm1.getStartTime(),1);
  nm1.addRegisteringCollector(app2.getApplicationId(),data2);
  explicitFailover();
  List<ApplicationId> runningApps=new ArrayList<>();
  runningApps.add(app1.getApplicationId());
  runningApps.add(app2.getApplicationId());
  nm1.registerNode(runningApps);
  nm2.registerNode(runningApps);
  String collectorAddr12="1.2.3.4:56";
  AppCollectorData data12=AppCollectorData.newInstance(app1.getApplicationId(),collectorAddr12,rm1.getStartTime(),0);
  nm2.addRegisteringCollector(app1.getApplicationId(),data12);
  String collectorAddr22="5.4.3.2:10";
  AppCollectorData data22=AppCollectorData.newInstance(app2.getApplicationId(),collectorAddr22,rm1.getStartTime(),2);
  nm2.addRegisteringCollector(app2.getApplicationId(),data22);
  Map<ApplicationId,AppCollectorData> results1=nm1.nodeHeartbeat(true).getAppCollectors();
  assertEquals(collectorAddr1,results1.get(app1.getApplicationId()).getCollectorAddr());
  assertEquals(collectorAddr2,results1.get(app2.getApplicationId()).getCollectorAddr());
  Map<ApplicationId,AppCollectorData> results2=nm2.nodeHeartbeat(true).getAppCollectors();
  assertEquals(collectorAddr1,results2.get(app1.getApplicationId()).getCollectorAddr());
  assertEquals(collectorAddr22,results2.get(app2.getApplicationId()).getCollectorAddr());
  nm1.getRegisteringCollectors().clear();
  Map<ApplicationId,AppCollectorData> results12=nm1.nodeHeartbeat(true).getAppCollectors();
  assertEquals(collectorAddr1,results12.get(app1.getApplicationId()).getCollectorAddr());
  assertEquals(collectorAddr22,results12.get(app2.getApplicationId()).getCollectorAddr());
}
