/** 
 * Test the basic functionality.
 */
@Test public void testSync() throws Exception {
  if (isSrcNotSameAsTgt) {
    initData(source);
  }
  initData(target);
  enableAndCreateFirstSnapshot();
  final FsShell shell=new FsShell(conf);
  lsrSource("Before source: ",shell,source);
  lsr("Before target: ",shell,target);
  int numDeletedModified=changeData(target);
  createSecondSnapshotAtTarget();
  SnapshotDiffReport report=dfs.getSnapshotDiffReport(target,"s2","s1");
  System.out.println(report);
  final DistCpSync distCpSync=new DistCpSync(distCpContext,conf);
  lsr("Before sync target: ",shell,target);
  Assert.assertTrue(distCpSync.sync());
  lsr("After sync target: ",shell,target);
  final Path spath=new Path(source,HdfsConstants.DOT_SNAPSHOT_DIR + Path.SEPARATOR + "s1");
  Assert.assertEquals(spath,distCpContext.getSourcePaths().get(0));
  final Path listingPath=new Path("/tmp/META/fileList.seq");
  CopyListing listing=new SimpleCopyListing(conf,new Credentials(),distCpSync);
  listing.buildListing(listingPath,distCpContext);
  Map<Text,CopyListingFileStatus> copyListing=getListing(listingPath);
  CopyMapper copyMapper=new CopyMapper();
  StubContext stubContext=new StubContext(conf,null,0);
  Mapper<Text,CopyListingFileStatus,Text,Text>.Context context=stubContext.getContext();
  context.getConfiguration().setBoolean(DistCpOptionSwitch.APPEND.getConfigLabel(),true);
  copyMapper.setup(context);
  for (  Map.Entry<Text,CopyListingFileStatus> entry : copyListing.entrySet()) {
    copyMapper.map(entry.getKey(),entry.getValue(),context);
  }
  lsrSource("After mapper source: ",shell,source);
  lsr("After mapper target: ",shell,target);
  Assert.assertEquals(numDeletedModified,copyListing.size());
  Assert.assertEquals(blockSize * 3,stubContext.getReporter().getCounter(CopyMapper.Counter.BYTESCOPIED).getValue());
  verifyCopy(dfs.getFileStatus(spath),dfs.getFileStatus(target),false);
}
