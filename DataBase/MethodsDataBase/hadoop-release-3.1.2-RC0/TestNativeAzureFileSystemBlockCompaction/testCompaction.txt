@Test public void testCompaction() throws Throwable {
  final int n2=2;
  final int n4=4;
  final int n10=10;
  final int n12=12;
  final int n14=14;
  final int n16=16;
  final int maxBlockSize=16;
  final int compactionBlockCount=4;
  ByteArrayOutputStream memStream=new ByteArrayOutputStream();
  try (FSDataOutputStream appendStream=fs.create(TEST_PATH)){
    BlockBlobAppendStream blockBlobStream=getBlockBlobAppendStream(appendStream);
    blockBlobStream.setMaxBlockSize(maxBlockSize);
    blockBlobStream.setCompactionBlockCount(compactionBlockCount);
    appendBlockList(appendStream,memStream,new int[]{n2});
    verifyBlockList(blockBlobStream,new int[]{n2});
    appendStream.hflush();
    verifyBlockList(blockBlobStream,new int[]{n2});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n2,n4});
    appendStream.hsync();
    verifyBlockList(blockBlobStream,new int[]{n2,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n2,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n2,n4,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n4,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n2,n4,n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n10});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n10,n4});
    appendBlockList(appendStream,memStream,new int[]{n4,n4,n4,n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16});
    appendBlockList(appendStream,memStream,new int[]{n4,n4,n4,n4,n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n4,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n4,n4,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    appendStream.close();
    ContractTestUtils.verifyFileContents(fs,TEST_PATH,memStream.toByteArray());
  }
   try (FSDataOutputStream appendStream=fs.append(TEST_PATH)){
    BlockBlobAppendStream blockBlobStream=getBlockBlobAppendStream(appendStream);
    blockBlobStream.setMaxBlockSize(maxBlockSize);
    blockBlobStream.setCompactionBlockCount(compactionBlockCount);
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n16,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n16,n4,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n16,n4,n4,n4,n4});
    appendBlockList(appendStream,memStream,new int[]{n4});
    verifyBlockList(blockBlobStream,new int[]{n14,n12,n14,n16,n16,n16,n16,n4});
    appendStream.close();
    ContractTestUtils.verifyFileContents(fs,TEST_PATH,memStream.toByteArray());
  }
 }
