@Test public void testApplicationRecoveryAfterFlowContextUpdated() throws Exception {
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,true);
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_SUPERVISED,true);
  conf.setBoolean(YarnConfiguration.YARN_ACL_ENABLE,true);
  conf.set(YarnConfiguration.YARN_ADMIN_ACL,"yarn_admin_user");
  NMStateStoreService stateStore=new NMMemoryStateStoreService();
  stateStore.init(conf);
  stateStore.start();
  Context context=createContext(conf,stateStore);
  ContainerManagerImpl cm=createContainerManager(context);
  cm.init(conf);
  cm.start();
  String appName="app_name1";
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId attemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId cid=ContainerId.newContainerId(attemptId,2);
  Map<String,LocalResource> localResources=Collections.emptyMap();
  Map<String,String> containerEnv=new HashMap<>();
  List<String> containerCmds=Collections.emptyList();
  Map<String,ByteBuffer> serviceData=Collections.emptyMap();
  Credentials containerCreds=new Credentials();
  DataOutputBuffer dob=new DataOutputBuffer();
  containerCreds.writeTokenStorageToStream(dob);
  ByteBuffer containerTokens=ByteBuffer.wrap(dob.getData(),0,dob.getLength());
  Map<ApplicationAccessType,String> acls=new HashMap<ApplicationAccessType,String>();
  ContainerLaunchContext clc=ContainerLaunchContext.newInstance(localResources,containerEnv,containerCmds,serviceData,containerTokens,acls);
  LogAggregationContext logAggregationContext=LogAggregationContext.newInstance("includePattern","excludePattern","includePatternInRollingAggregation","excludePatternInRollingAggregation");
  StartContainersResponse startResponse=startContainer(context,cm,cid,clc,logAggregationContext,ContainerType.TASK);
  assertTrue(startResponse.getFailedRequests().isEmpty());
  assertEquals(1,context.getApplications().size());
  ApplicationImpl app=(ApplicationImpl)context.getApplications().get(appId);
  assertNotNull(app);
  waitForAppState(app,ApplicationState.INITING);
  assertNull(app.getFlowName());
  ApplicationAttemptId attemptId2=ApplicationAttemptId.newInstance(appId,2);
  ContainerId cid2=ContainerId.newContainerId(attemptId,1);
  setFlowContext(containerEnv,appName,appId);
  clc=ContainerLaunchContext.newInstance(localResources,containerEnv,containerCmds,serviceData,containerTokens,acls);
  startResponse=startContainer(context,cm,cid2,clc,logAggregationContext,ContainerType.APPLICATION_MASTER);
  assertTrue(startResponse.getFailedRequests().isEmpty());
  assertEquals(1,context.getApplications().size());
  waitForAppState(app,ApplicationState.INITING);
  assertEquals(appName,app.getFlowName());
  cm.stop();
  context=createContext(conf,stateStore);
  cm=createContainerManager(context);
  cm.init(conf);
  cm.start();
  assertEquals(1,context.getApplications().size());
  app=(ApplicationImpl)context.getApplications().get(appId);
  assertNotNull(app);
  assertEquals(appName,app.getFlowName());
  waitForAppState(app,ApplicationState.INITING);
  cm.stop();
}
