@Test public void testResourceMappingRecoveryForContainer() throws Exception {
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,true);
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_SUPERVISED,true);
  NMStateStoreService stateStore=new NMMemoryStateStoreService();
  stateStore.init(conf);
  stateStore.start();
  context=createContext(conf,stateStore);
  ContainerManagerImpl cm=createContainerManager(context,delSrvc);
  ((NMContext)context).setContainerManager(cm);
  cm.init(conf);
  cm.start();
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId attemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId cid=ContainerId.newContainerId(attemptId,1);
  commonLaunchContainer(appId,cid,cm);
  Container nmContainer=context.getContainers().get(cid);
  Application app=context.getApplications().get(appId);
  assertNotNull(app);
  List<Serializable> gpuResources=Arrays.asList("1","2","3");
  stateStore.storeAssignedResources(nmContainer,"gpu",gpuResources);
  List<Serializable> numaResources=Arrays.asList("numa1");
  stateStore.storeAssignedResources(nmContainer,"numa",numaResources);
  List<Serializable> fpgaResources=Arrays.asList("fpga1","fpga2");
  stateStore.storeAssignedResources(nmContainer,"fpga",fpgaResources);
  cm.stop();
  context=createContext(conf,stateStore);
  cm=createContainerManager(context);
  ((NMContext)context).setContainerManager(cm);
  cm.init(conf);
  cm.start();
  assertEquals(1,context.getApplications().size());
  app=context.getApplications().get(appId);
  assertNotNull(app);
  Assert.assertNotNull(nmContainer);
  ResourceMappings resourceMappings=nmContainer.getResourceMappings();
  List<Serializable> assignedResource=resourceMappings.getAssignedResources("gpu");
  Assert.assertTrue(assignedResource.equals(gpuResources));
  Assert.assertTrue(resourceMappings.getAssignedResources("numa").equals(numaResources));
  Assert.assertTrue(resourceMappings.getAssignedResources("fpga").equals(fpgaResources));
  cm.stop();
}
