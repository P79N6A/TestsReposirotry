@Test public void testContainerResizeRecovery() throws Exception {
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,true);
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_SUPERVISED,true);
  NMStateStoreService stateStore=new NMMemoryStateStoreService();
  stateStore.init(conf);
  stateStore.start();
  context=createContext(conf,stateStore);
  ContainerManagerImpl cm=createContainerManager(context,delSrvc);
  ((NMContext)context).setContainerManager(cm);
  cm.init(conf);
  cm.start();
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId attemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId cid=ContainerId.newContainerId(attemptId,1);
  commonLaunchContainer(appId,cid,cm);
  Application app=context.getApplications().get(appId);
  assertNotNull(app);
  Resource targetResource=Resource.newInstance(2048,2);
  ContainerUpdateResponse updateResponse=updateContainers(context,cm,cid,targetResource);
  assertTrue(updateResponse.getFailedRequests().isEmpty());
  ContainerStatus containerStatus=getContainerStatus(context,cm,cid);
  assertEquals(targetResource,containerStatus.getCapability());
  cm.stop();
  context=createContext(conf,stateStore);
  cm=createContainerManager(context);
  ((NMContext)context).setContainerManager(cm);
  cm.init(conf);
  cm.start();
  assertEquals(1,context.getApplications().size());
  app=context.getApplications().get(appId);
  assertNotNull(app);
  containerStatus=getContainerStatus(context,cm,cid);
  assertEquals(targetResource,containerStatus.getCapability());
  cm.stop();
}
