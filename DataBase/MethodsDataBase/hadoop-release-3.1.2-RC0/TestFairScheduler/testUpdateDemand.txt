@Test public void testUpdateDemand() throws IOException {
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  Resource maxResource=Resources.createResource(1024 * 8);
  ConfigurableResource maxResourceConf=new ConfigurableResource(maxResource);
  FSAppAttempt app1=mock(FSAppAttempt.class);
  Mockito.when(app1.getDemand()).thenReturn(maxResource);
  Mockito.when(app1.getResourceUsage()).thenReturn(Resources.none());
  FSAppAttempt app2=mock(FSAppAttempt.class);
  Mockito.when(app2.getDemand()).thenReturn(maxResource);
  Mockito.when(app2.getResourceUsage()).thenReturn(Resources.none());
  QueueManager queueManager=scheduler.getQueueManager();
  FSParentQueue queue1=queueManager.getParentQueue("queue1",true);
  FSLeafQueue aQueue=new FSLeafQueue("root.queue1.a",scheduler,queue1);
  aQueue.setMaxShare(maxResourceConf);
  aQueue.addApp(app1,true);
  FSLeafQueue bQueue=new FSLeafQueue("root.queue1.b",scheduler,queue1);
  bQueue.setMaxShare(maxResourceConf);
  bQueue.addApp(app2,true);
  queue1.setMaxShare(maxResourceConf);
  queue1.addChildQueue(aQueue);
  queue1.addChildQueue(bQueue);
  queue1.updateDemand();
  assertTrue("Demand is greater than max allowed ",Resources.equals(queue1.getDemand(),maxResource));
  assertTrue("Demand of child queue not updated ",Resources.equals(aQueue.getDemand(),maxResource) && Resources.equals(bQueue.getDemand(),maxResource));
}
