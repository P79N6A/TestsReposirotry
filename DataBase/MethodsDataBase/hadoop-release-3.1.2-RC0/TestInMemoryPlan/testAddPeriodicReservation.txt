@Test public void testAddPeriodicReservation() throws PlanningException {
  maxPeriodicity=100;
  Plan plan=new InMemoryPlan(queueMetrics,policy,agent,totalCapacity,1L,resCalc,minAlloc,maxAlloc,planName,replanner,true,maxPeriodicity,context,new UTCClock());
  ReservationId reservationID=ReservationSystemTestUtil.getNewReservationId();
  int[] alloc={10,50};
  int start=10;
  long period=20;
  ReservationAllocation rAllocation=createReservationAllocation(reservationID,start,alloc,String.valueOf(period));
  rAllocation.setPeriodicity(period);
  Assert.assertNull(plan.getReservationById(reservationID));
  try {
    plan.addReservation(rAllocation,false);
  }
 catch (  PlanningException e) {
    Assert.fail(e.getMessage());
  }
  doAssertions(plan,rAllocation);
  checkAllocation(plan,alloc,start,period);
  RLESparseResourceAllocation available=plan.getAvailableResourceOverTime(user,null,130,170,50);
  assertEquals(92160,available.getCapacityAtTime(130).getMemorySize());
  assertEquals(92160,available.getCapacityAtTime(140).getMemorySize());
  assertEquals(92160,available.getCapacityAtTime(150).getMemorySize());
}
