@Test public void testDeletePeriodicReservation(){
  Plan plan=new InMemoryPlan(queueMetrics,policy,agent,totalCapacity,1L,resCalc,minAlloc,maxAlloc,planName,replanner,true,context);
  ReservationId reservationID=ReservationSystemTestUtil.getNewReservationId();
  int[] alloc={10,20};
  int start=100;
  ReservationAllocation rAllocation=createReservationAllocation(reservationID,start,alloc);
  long period=3600000;
  rAllocation.getReservationDefinition().setRecurrenceExpression(String.valueOf(period));
  rAllocation.setPeriodicity(period);
  Assert.assertNull(plan.getReservationById(reservationID));
  try {
    plan.addReservation(rAllocation,false);
  }
 catch (  PlanningException e) {
    Assert.fail(e.getMessage());
  }
  System.out.println(plan.toString());
  doAssertions(plan,rAllocation);
  checkAllocation(plan,alloc,start,period);
  try {
    plan.deleteReservation(reservationID);
  }
 catch (  PlanningException e) {
    Assert.fail(e.getMessage());
  }
  Assert.assertNull(plan.getReservationById(reservationID));
  System.out.print(plan);
  checkAllocation(plan,new int[]{0,0},start,period);
}
