@Test public void testForHandlingDuplicatedCompltedContainers(){
  node.handle(new RMNodeStartedEvent(null,null,null));
  node.setNextHeartBeat(false);
  ContainerId completedContainerId1=BuilderUtils.newContainerId(BuilderUtils.newApplicationAttemptId(BuilderUtils.newApplicationId(0,0),0),0);
  RMNodeStatusEvent statusEvent1=getMockRMNodeStatusEvent(null);
  ContainerStatus containerStatus1=mock(ContainerStatus.class);
  doReturn(completedContainerId1).when(containerStatus1).getContainerId();
  doReturn(Collections.singletonList(containerStatus1)).when(statusEvent1).getContainers();
  verify(scheduler,times(1)).handle(any(NodeUpdateSchedulerEvent.class));
  node.handle(statusEvent1);
  verify(scheduler,times(1)).handle(any(NodeUpdateSchedulerEvent.class));
  Assert.assertEquals(1,node.getQueueSize());
  Assert.assertEquals(1,node.getCompletedContainers().size());
  node.handle(statusEvent1);
  Assert.assertEquals(1,node.getQueueSize());
  node.handle(new RMNodeFinishedContainersPulledByAMEvent(node.getNodeID(),Collections.singletonList(completedContainerId1)));
  NodeHeartbeatResponse hbrsp=Records.newRecord(NodeHeartbeatResponse.class);
  node.setAndUpdateNodeHeartbeatResponse(hbrsp);
  Assert.assertEquals(1,hbrsp.getContainersToBeRemovedFromNM().size());
  Assert.assertEquals(0,node.getCompletedContainers().size());
}
