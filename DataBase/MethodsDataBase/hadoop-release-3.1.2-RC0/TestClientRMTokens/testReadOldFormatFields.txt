@Test public void testReadOldFormatFields() throws IOException {
  RMDelegationTokenIdentifier token=new RMDelegationTokenIdentifier(new Text("alice"),new Text("bob"),new Text("colin"));
  token.setIssueDate(123);
  token.setMasterKeyId(321);
  token.setMaxDate(314);
  token.setSequenceNumber(12345);
  DataInputBuffer inBuf=new DataInputBuffer();
  DataOutputBuffer outBuf=new DataOutputBuffer();
  token.writeInOldFormat(outBuf);
  outBuf.writeLong(42);
  inBuf.reset(outBuf.getData(),0,outBuf.getLength());
  RMDelegationTokenIdentifier identifier=null;
  try {
    RMDelegationTokenIdentifierData identifierData=new RMDelegationTokenIdentifierData();
    identifierData.readFields(inBuf);
    fail("Should have thrown a " + InvalidProtocolBufferException.class.getName() + " because the token is not a protobuf");
  }
 catch (  InvalidProtocolBufferException e) {
    identifier=new RMDelegationTokenIdentifier();
    inBuf.reset();
    identifier.readFieldsInOldFormat(inBuf);
    assertEquals(42,inBuf.readLong());
  }
  assertEquals("alice",identifier.getUser().getUserName());
  assertEquals(new Text("bob"),identifier.getRenewer());
  assertEquals("colin",identifier.getUser().getRealUser().getUserName());
  assertEquals(123,identifier.getIssueDate());
  assertEquals(321,identifier.getMasterKeyId());
  assertEquals(314,identifier.getMaxDate());
  assertEquals(12345,identifier.getSequenceNumber());
}
