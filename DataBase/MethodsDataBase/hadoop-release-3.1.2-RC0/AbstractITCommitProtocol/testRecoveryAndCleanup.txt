/** 
 * Verify that recovery doesn't work for these committers.
 */
@Test @SuppressWarnings("deprecation") public void testRecoveryAndCleanup() throws Exception {
  describe("Test (unsupported) task recovery.");
  JobData jobData=startJob(true);
  TaskAttemptContext tContext=jobData.tContext;
  AbstractS3ACommitter committer=jobData.committer;
  assertNotNull("null workPath in committer " + committer,committer.getWorkPath());
  assertNotNull("null outputPath in committer " + committer,committer.getOutputPath());
  committer.commitTask(tContext);
  assertTaskAttemptPathDoesNotExist(committer,tContext);
  Configuration conf2=jobData.job.getConfiguration();
  conf2.set(MRJobConfig.TASK_ATTEMPT_ID,attempt0);
  conf2.setInt(MRJobConfig.APPLICATION_ATTEMPT_ID,2);
  JobContext jContext2=new JobContextImpl(conf2,taskAttempt0.getJobID());
  TaskAttemptContext tContext2=new TaskAttemptContextImpl(conf2,taskAttempt0);
  AbstractS3ACommitter committer2=createCommitter(tContext2);
  committer2.setupJob(tContext2);
  assertFalse("recoverySupported in " + committer2,committer2.isRecoverySupported());
  intercept(PathCommitException.class,"recover",() -> committer2.recoverTask(tContext2));
  describe("aborting task attempt 2; expect nothing to clean up");
  committer2.abortTask(tContext2);
  describe("Aborting job 2; expect pending commits to be aborted");
  committer2.abortJob(jContext2,JobStatus.State.KILLED);
  assertNoMultipartUploadsPending(outDir);
}
