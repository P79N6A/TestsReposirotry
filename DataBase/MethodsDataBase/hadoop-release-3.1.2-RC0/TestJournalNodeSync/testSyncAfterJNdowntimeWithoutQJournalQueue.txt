/** 
 * Test JournalNode Sync when a JN id down while NN is actively writing logs and comes back up after some time with no edit log queueing. Queuing disabled during the cluster setup  {@link #setUpMiniCluster()}
 * @throws Exception
 */
@Test(timeout=300_000) public void testSyncAfterJNdowntimeWithoutQJournalQueue() throws Exception {
  File firstJournalDir=jCluster.getJournalDir(0,jid);
  File firstJournalCurrentDir=new StorageDirectory(firstJournalDir).getCurrentDir();
  File secondJournalDir=jCluster.getJournalDir(1,jid);
  File secondJournalCurrentDir=new StorageDirectory(secondJournalDir).getCurrentDir();
  long[] startTxIds=new long[10];
  startTxIds[0]=generateEditLog();
  startTxIds[1]=generateEditLog(2);
  jCluster.getJournalNode(0).stop(0);
  for (int i=2; i < 10; i++) {
    startTxIds[i]=generateEditLog(5);
  }
  jCluster.restartJournalNode(0);
  generateEditLog(2);
  List<File> missingLogs=Lists.newArrayList();
  for (int i=2; i < 10; i++) {
    EditLogFile logFile=getLogFile(secondJournalCurrentDir,startTxIds[i],false);
    missingLogs.add(new File(firstJournalCurrentDir,logFile.getFile().getName()));
  }
  GenericTestUtils.waitFor(editLogExists(missingLogs),500,30000);
  long numEditLogsSynced=jCluster.getJournalNode(0).getOrCreateJournal(jid).getMetrics().getNumEditLogsSynced().value();
  Assert.assertTrue("Edit logs downloaded outside syncer. Expected 8 or " + "more downloads, got " + numEditLogsSynced + " downloads instead",numEditLogsSynced >= 8);
}
