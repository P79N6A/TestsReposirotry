@Test public void testRmEmptyRootDirNonRecursive() throws Throwable {
  skipIfUnsupported(TEST_ROOT_TESTS_ENABLED);
  final Path root=new Path("/");
  assertIsDirectory(root);
  final FileSystem fs=getFileSystem();
  final AtomicInteger iterations=new AtomicInteger(0);
  final FileStatus[] originalChildren=listChildren(fs,root);
  LambdaTestUtils.eventually(OBJECTSTORE_RETRY_TIMEOUT,new Callable<Void>(){
    @Override public Void call() throws Exception {
      FileStatus[] deleted=deleteChildren(fs,root,true);
      FileStatus[] children=listChildren(fs,root);
      if (children.length > 0) {
        fail(String.format("After %d attempts: listing after rm /* not empty" + "\n%s\n%s\n%s",iterations.incrementAndGet(),dumpStats("final",children),dumpStats("deleted",deleted),dumpStats("original",originalChildren)));
      }
      return null;
    }
  }
,new LambdaTestUtils.ProportionalRetryInterval(50,1000));
  boolean deleted=fs.delete(root,false);
  LOG.info("rm / of empty dir result is {}",deleted);
  assertIsDirectory(root);
}
