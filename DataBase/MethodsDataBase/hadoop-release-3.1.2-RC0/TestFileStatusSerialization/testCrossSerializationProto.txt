@Test public void testCrossSerializationProto() throws Exception {
  for (  FileType t : FileType.values()) {
    HdfsFileStatusProto.Builder hspb=baseStatus().setFileType(t);
    if (FileType.IS_SYMLINK.equals(t)) {
      hspb.setSymlink(ByteString.copyFromUtf8("hdfs://yaks/dingos"));
    }
    if (FileType.IS_FILE.equals(t)) {
      hspb.setFileId(4544);
    }
    HdfsFileStatusProto hsp=hspb.build();
    byte[] src=hsp.toByteArray();
    FileStatusProto fsp=FileStatusProto.parseFrom(src);
    assertEquals(hsp.getPath().toStringUtf8(),fsp.getPath());
    assertEquals(hsp.getLength(),fsp.getLength());
    assertEquals(hsp.getPermission().getPerm(),fsp.getPermission().getPerm());
    assertEquals(hsp.getOwner(),fsp.getOwner());
    assertEquals(hsp.getGroup(),fsp.getGroup());
    assertEquals(hsp.getModificationTime(),fsp.getModificationTime());
    assertEquals(hsp.getAccessTime(),fsp.getAccessTime());
    assertEquals(hsp.getSymlink().toStringUtf8(),fsp.getSymlink());
    assertEquals(hsp.getBlockReplication(),fsp.getBlockReplication());
    assertEquals(hsp.getBlocksize(),fsp.getBlockSize());
    assertEquals(hsp.getFileType().ordinal(),fsp.getFileType().ordinal());
    byte[] dst=fsp.toByteArray();
    HdfsFileStatusProto hsp2=HdfsFileStatusProto.parseFrom(dst);
    assertEquals(hsp,hsp2);
    FileStatus hstat=(FileStatus)PBHelperClient.convert(hsp);
    FileStatus hstat2=(FileStatus)PBHelperClient.convert(hsp2);
    checkFields(hstat,hstat2);
  }
}
