/** 
 * Test API backwards-compatibility with 2.x applications w.r.t. FsPermission.
 */
@Test @SuppressWarnings("deprecation") public void testFsPermissionCompatibility() throws Exception {
  final int flagmask=0x8;
  for (int i=0; i < flagmask; ++i) {
    FsPermission perm=FsPermission.createImmutable((short)0013);
    HdfsFileStatusProto.Builder hspb=baseStatus().setPermission(PBHelperClient.convert(perm)).setFlags(i);
    HdfsFileStatus stat=PBHelperClient.convert(hspb.build());
    stat.makeQualified(BASEURI,BASEPATH);
    assertEquals(FULLPATH,stat.getPath());
    FsPermission sp=stat.getPermission();
    assertEquals(sp.getAclBit(),stat.hasAcl());
    assertEquals(sp.getEncryptedBit(),stat.isEncrypted());
    assertEquals(sp.getErasureCodedBit(),stat.isErasureCoded());
    DataOutputBuffer dob=new DataOutputBuffer();
    stat.write(dob);
    DataInputBuffer dib=new DataInputBuffer();
    dib.reset(dob.getData(),0,dob.getLength());
    FileStatus fstat=new FileStatus();
    fstat.readFields(dib);
    checkFields((FileStatus)stat,fstat);
    assertEquals(sp.getAclBit(),fstat.hasAcl());
    assertEquals(sp.getEncryptedBit(),fstat.isEncrypted());
    assertEquals(sp.getErasureCodedBit(),fstat.isErasureCoded());
  }
}
