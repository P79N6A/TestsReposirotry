@Test public void testSingleTaskMultiFileCommit() throws Exception {
  int numFiles=3;
  Set<String> files=commitTask(committer,tac,numFiles);
  List<String> uploads=results.getUploads();
  assertEquals("Should initiate multiple uploads",numFiles,uploads.size());
  Path committedPath=committer.getCommittedTaskPath(tac);
  FileSystem dfs=committedPath.getFileSystem(conf);
  assertEquals("Should commit to HDFS",getDFS(),dfs);
  assertIsFile(dfs,committedPath);
  FileStatus[] stats=dfs.listStatus(committedPath);
  assertEquals("Should produce one commit file",1,stats.length);
  assertEquals("Should name the commits file with the task ID","task_job_0001_r_000002",stats[0].getPath().getName());
  List<SinglePendingCommit> pending=PendingSet.load(dfs,stats[0].getPath()).getCommits();
  assertEquals("Should have correct number of pending commits",files.size(),pending.size());
  Set<String> keys=Sets.newHashSet();
  for (  SinglePendingCommit commit : pending) {
    assertEquals("Should write to the correct bucket: " + commit,BUCKET,commit.getBucket());
    assertValidUpload(results.getTagsByUpload(),commit);
    keys.add(commit.getDestinationKey());
  }
  assertEquals("Should write to the correct key",files,keys);
}
