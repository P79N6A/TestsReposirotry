/** 
 * Tests that the LISTSTATUS ang GETFILESTATUS WebHDFS calls return the ecPolicy for EC files.
 */
@Test(timeout=300000) public void testECPolicyInFileStatus() throws Exception {
  final Configuration conf=WebHdfsTestUtil.createConf();
  final ErasureCodingPolicy ecPolicy=SystemErasureCodingPolicies.getByID(SystemErasureCodingPolicies.RS_3_2_POLICY_ID);
  final String ecPolicyName=ecPolicy.getName();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(5).build();
  cluster.waitActive();
  final DistributedFileSystem fs=cluster.getFileSystem();
  final Path ecDir=new Path("/ec");
  Path ecFile=new Path(ecDir,"ec_file.txt");
  Path nonEcFile=new Path(ecDir,"non_ec_file.txt");
  fs.mkdirs(ecDir);
  DFSTestUtil.createFile(fs,nonEcFile,1024,(short)1,0);
  fs.enableErasureCodingPolicy(ecPolicyName);
  fs.setErasureCodingPolicy(ecDir,ecPolicyName);
  DFSTestUtil.createFile(fs,ecFile,1024,(short)1,0);
  InetSocketAddress addr=cluster.getNameNode().getHttpAddress();
  URL listStatusUrl=new URL("http",addr.getHostString(),addr.getPort(),WebHdfsFileSystem.PATH_PREFIX + ecDir.toString() + "?op=LISTSTATUS");
  HttpURLConnection conn=(HttpURLConnection)listStatusUrl.openConnection();
  conn.setRequestMethod("GET");
  conn.setInstanceFollowRedirects(false);
  String listStatusResponse=IOUtils.toString(conn.getInputStream(),StandardCharsets.UTF_8);
  Assert.assertEquals("Response wasn't " + HttpURLConnection.HTTP_OK,HttpURLConnection.HTTP_OK,conn.getResponseCode());
  String ecpolicyForECfile=getECPolicyFromFileStatusJson(getFileStatusJson(listStatusResponse,ecFile.getName()));
  assertEquals("EC policy for ecFile should match the set EC policy",ecpolicyForECfile,ecPolicyName);
  String ecPolicyForNonECfile=getECPolicyFromFileStatusJson(getFileStatusJson(listStatusResponse,nonEcFile.getName()));
  assertEquals("EC policy for nonEcFile should be null (not set)",ecPolicyForNonECfile,null);
  URL getFileStatusUrl=new URL("http",addr.getHostString(),addr.getPort(),WebHdfsFileSystem.PATH_PREFIX + ecFile.toString() + "?op=GETFILESTATUS");
  conn=(HttpURLConnection)getFileStatusUrl.openConnection();
  conn.setRequestMethod("GET");
  conn.setInstanceFollowRedirects(false);
  String getFileStatusResponse=IOUtils.toString(conn.getInputStream(),StandardCharsets.UTF_8);
  Assert.assertEquals("Response wasn't " + HttpURLConnection.HTTP_OK,HttpURLConnection.HTTP_OK,conn.getResponseCode());
  JSONObject fileStatusObject=new JSONObject(getFileStatusResponse).getJSONObject("FileStatus");
  ecpolicyForECfile=getECPolicyFromFileStatusJson(fileStatusObject);
  assertEquals("EC policy for ecFile should match the set EC policy",ecpolicyForECfile,ecPolicyName);
}
