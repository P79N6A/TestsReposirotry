/** 
 * This test specifically checks whether the flusher thread is automatically flushing the files.  It unfortunately can only test with the alternative flushing schedule (because of test timing), but it's better than nothing.
 * @throws Exception thrown if something breaks
 */
@Test public void testFlushThread() throws Exception {
  RollingFileSystemSink.forceFlush=true;
  String path="hdfs://" + cluster.getNameNode().getHostAndPort() + "/tmp";
  MetricsSystem ms=initMetricsSystem(path,true,false,false);
  new MyMetrics1().registerWith(ms);
  ms.publishMetricsNow();
  ms.publishMetricsNow();
  int count=0;
  try {
    while (!RollingFileSystemSink.hasFlushed) {
      Thread.sleep(10L);
      if (++count > 1000) {
        fail("Flush thread did not run within 10 seconds");
      }
    }
    Calendar now=Calendar.getInstance();
    Path currentDir=new Path(path,DATE_FORMAT.format(now.getTime()) + "00");
    FileSystem fs=FileSystem.newInstance(new URI(path),new Configuration());
    Path currentFile=findMostRecentLogFile(fs,new Path(currentDir,getLogFilename()));
    FileStatus status=fs.getFileStatus(currentFile);
    assertTrue("The flusher thread didn't flush the log contents. Expected " + "at least 236 bytes in the log file, but got " + status.getLen(),status.getLen() >= 236);
  }
  finally {
    RollingFileSystemSink.forceFlush=false;
    try {
      ms.stop();
    }
  finally {
      ms.shutdown();
    }
  }
}
