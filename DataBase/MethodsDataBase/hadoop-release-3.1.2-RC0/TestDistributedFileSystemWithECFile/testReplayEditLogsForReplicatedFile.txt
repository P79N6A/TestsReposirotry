@Test(timeout=60000) public void testReplayEditLogsForReplicatedFile() throws Exception {
  cluster.shutdown();
  ErasureCodingPolicy rs63=SystemErasureCodingPolicies.getByID(SystemErasureCodingPolicies.RS_6_3_POLICY_ID);
  ErasureCodingPolicy rs32=SystemErasureCodingPolicies.getByID(SystemErasureCodingPolicies.RS_3_2_POLICY_ID);
  int numDataNodes=rs63.getNumDataUnits() + rs63.getNumParityUnits();
  cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(numDataNodes).build();
  cluster.transitionToActive(0);
  fs=cluster.getFileSystem(0);
  fs.enableErasureCodingPolicy(rs63.getName());
  fs.enableErasureCodingPolicy(rs32.getName());
  Path dir=new Path("/ec");
  fs.mkdirs(dir);
  fs.setErasureCodingPolicy(dir,rs63.getName());
  Path ecFile=new Path(dir,"ecFile");
  createFile(ecFile.toString(),10);
  Path replicatedFile=new Path(dir,"replicated");
  try (FSDataOutputStream out=fs.createFile(replicatedFile).replicate().build()){
    out.write(123);
  }
   Path ecFile2=new Path(dir,"RS-3-2");
  try (FSDataOutputStream out=fs.createFile(ecFile2).ecPolicyName(rs32.getName()).build()){
    out.write(456);
  }
   cluster.transitionToStandby(0);
  cluster.transitionToActive(1);
  fs=cluster.getFileSystem(1);
  assertNull(fs.getErasureCodingPolicy(replicatedFile));
  assertEquals(rs63,fs.getErasureCodingPolicy(ecFile));
  assertEquals(rs32,fs.getErasureCodingPolicy(ecFile2));
}
