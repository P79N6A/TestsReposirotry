@Test public void testRaceDeleteCurrentDirUpdater() throws Exception {
  final int len=8196;
  final Path zone=new Path("/dir");
  fsWrapper.mkdir(zone,FsPermission.getDirDefault(),true);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  final Path subdir=new Path(zone,"subdir");
  int expected=15;
  for (int i=0; i < 10; ++i) {
    DFSTestUtil.createFile(fs,new Path(subdir,"file" + i),len,(short)1,0xFEED);
  }
  final Path subdir2=new Path(zone,"subdir2");
  fsWrapper.mkdir(subdir,FsPermission.getDirDefault(),true);
  for (int i=10; i < 15; ++i) {
    DFSTestUtil.createFile(fs,new Path(subdir2,"file" + i),len,(short)1,0xFEED);
  }
  rollKey(TEST_KEY);
  getEzManager().pauseReencryptForTesting();
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForQueuedZones(1);
  getEzManager().pauseForTestingAfterNthCheckpoint(zone.toString(),1);
  getEzManager().pauseForTestingAfterNthSubmission(1);
  getEzManager().resumeReencryptForTesting();
  waitForReencryptedFiles(zone.toString(),5);
  getEzManager().resumeReencryptForTesting();
  Thread.sleep(3000);
  fsWrapper.delete(subdir,true);
  expected-=5;
  getEzManager().resumeReencryptUpdaterForTesting();
  waitForZoneCompletes(zone.toString());
  assertEquals(expected,getZoneStatus(zone.toString()).getFilesReencrypted());
}
