@Test public void testReencryptCancel() throws Exception {
  final int len=8196;
  final Path zoneParent=new Path("/zones");
  final Path zone=new Path(zoneParent,"zone");
  fsWrapper.mkdir(zone,FsPermission.getDirDefault(),true);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  for (int i=0; i < 10; ++i) {
    DFSTestUtil.createFile(fs,new Path(zone,Integer.toString(i)),len,(short)1,0xFEED);
  }
  final Path subdir=new Path("/dir");
  fsWrapper.mkdir(subdir,FsPermission.getDirDefault(),true);
  DFSTestUtil.createFile(fs,new Path(subdir,"f"),len,(short)1,0xFEED);
  rollKey(TEST_KEY);
  getEzManager().pauseReencryptForTesting();
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForQueuedZones(1);
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.CANCEL);
  getEzManager().resumeReencryptForTesting();
  waitForZoneCompletes(zone.toString());
  assertEquals(0,getZoneStatus(zone.toString()).getFilesReencrypted());
  try {
    dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.CANCEL);
  }
 catch (  RemoteException expected) {
    assertExceptionContains("not under re-encryption",expected);
  }
  rollKey(TEST_KEY);
  getEzManager().pauseForTestingAfterNthSubmission(1);
  getEzManager().resumeReencryptForTesting();
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForReencryptedFiles(zone.toString(),5);
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.CANCEL);
  getEzManager().resumeReencryptForTesting();
  waitForZoneCompletes(zone.toString());
  assertEquals(5,getZoneStatus(zone.toString()).getFilesReencrypted());
  assertNull(getEzManager().getZoneStatus(zone.toString()).getLastCheckpointFile());
  assertNull(getReencryptionStatus().getNextUnprocessedZone());
  try {
    dfsAdmin.reencryptEncryptionZone(subdir,ReencryptAction.CANCEL);
    fail("Re-encrypting non-EZ should fail");
  }
 catch (  RemoteException expected) {
    LOG.info("Expected exception caught.",expected);
    assertExceptionContains("not the root of an encryption zone",expected);
  }
  try {
    dfsAdmin.reencryptEncryptionZone(new Path(zone,"notexist"),ReencryptAction.CANCEL);
    fail("Re-encrypting non-existing dir should fail");
  }
 catch (  RemoteException expected) {
    LOG.info("Expected exception caught.",expected);
    assertTrue(expected.unwrapRemoteException() instanceof FileNotFoundException);
  }
  final Path encFile=new Path(zone,"0");
  try {
    dfsAdmin.reencryptEncryptionZone(encFile,ReencryptAction.CANCEL);
    fail("Re-encrypting on a file should fail");
  }
 catch (  RemoteException expected) {
    LOG.info("Expected exception caught.",expected);
    assertExceptionContains("not the root of an encryption zone",expected);
  }
  assertEquals(5,getZoneStatus(zone.toString()).getFilesReencrypted());
}
