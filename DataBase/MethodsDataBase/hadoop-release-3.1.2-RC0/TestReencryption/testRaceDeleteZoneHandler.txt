@Test public void testRaceDeleteZoneHandler() throws Exception {
  final int len=8196;
  final Path zone=new Path("/dir");
  fsWrapper.mkdir(zone,FsPermission.getDirDefault(),true);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  for (int i=0; i < 11; ++i) {
    DFSTestUtil.createFile(fs,new Path(zone,"file" + i),len,(short)1,0xFEED);
  }
  rollKey(TEST_KEY);
  getEzManager().pauseReencryptForTesting();
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForQueuedZones(1);
  getEzManager().pauseForTestingAfterNthSubmission(1);
  getEzManager().pauseForTestingAfterNthCheckpoint(zone.toString(),1);
  getEzManager().resumeReencryptForTesting();
  waitForReencryptedFiles(zone.toString(),5);
  getEzManager().pauseForTestingAfterNthSubmission(1);
  getEzManager().resumeReencryptForTesting();
  Thread.sleep(3000);
  Map<Long,ZoneSubmissionTracker> tasks=(Map<Long,ZoneSubmissionTracker>)Whitebox.getInternalState(getHandler(),"submissions");
  List<Future> futures=new LinkedList<>();
  for (  ZoneSubmissionTracker zst : tasks.values()) {
    for (    Future f : zst.getTasks()) {
      futures.add(f);
    }
  }
  fsWrapper.delete(zone,true);
  getEzManager().resumeReencryptForTesting();
  for (  Future f : futures) {
    assertTrue(f.isDone());
  }
  waitForTotalZones(0);
}
