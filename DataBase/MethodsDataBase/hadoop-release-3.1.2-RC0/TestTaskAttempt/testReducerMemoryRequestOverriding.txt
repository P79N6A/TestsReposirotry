@Test public void testReducerMemoryRequestOverriding(){
  for (  String memoryName : ImmutableList.of(MRJobConfig.RESOURCE_TYPE_NAME_MEMORY,MRJobConfig.RESOURCE_TYPE_ALTERNATIVE_NAME_MEMORY)) {
    TestAppender testAppender=new TestAppender();
    final Logger logger=Logger.getLogger(TaskAttemptImpl.class);
    try {
      logger.addAppender(testAppender);
      EventHandler eventHandler=mock(EventHandler.class);
      Clock clock=SystemClock.getInstance();
      JobConf jobConf=new JobConf();
      jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX + memoryName,"3Gi");
      jobConf.setInt(MRJobConfig.REDUCE_MEMORY_MB,2048);
      TaskAttemptImpl taImpl=createReduceTaskAttemptImplForTest(eventHandler,clock,jobConf);
      long memorySize=getResourceInfoFromContainerRequest(taImpl,eventHandler).getMemorySize();
      assertEquals(3072,memorySize);
      assertTrue(testAppender.getLogEvents().stream().anyMatch(e -> e.getLevel() == Level.WARN && ("Configuration " + "mapreduce.reduce.resource." + memoryName + "=3Gi is "+ "overriding the mapreduce.reduce.memory.mb=2048 configuration").equals(e.getMessage())));
    }
  finally {
      logger.removeAppender(testAppender);
    }
  }
}
