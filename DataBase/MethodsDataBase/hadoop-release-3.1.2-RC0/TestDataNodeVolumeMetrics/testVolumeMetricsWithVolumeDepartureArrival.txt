@Test public void testVolumeMetricsWithVolumeDepartureArrival() throws Exception {
  MiniDFSCluster cluster=setupClusterForVolumeMetrics();
  try {
    FileSystem fs=cluster.getFileSystem();
    final Path fileName=new Path("/test.dat");
    final long fileLen=Integer.MAX_VALUE + 1L;
    DFSTestUtil.createFile(fs,fileName,false,BLOCK_SIZE,fileLen,fs.getDefaultBlockSize(fileName),REPL,1L,true);
    try (FSDataOutputStream out=fs.append(fileName)){
      out.writeBytes("hello world");
      ((DFSOutputStream)out.getWrappedStream()).hsync();
    }
     ArrayList<DataNode> dns=cluster.getDataNodes();
    assertTrue("DN1 should be up",dns.get(0).isDatanodeUp());
    final File dn1Vol2=cluster.getInstanceStorageDir(0,1);
    DataNodeTestUtils.injectDataDirFailure(dn1Vol2);
    verifyDataNodeVolumeMetrics(fs,cluster,fileName);
    DataNodeTestUtils.restoreDataDirFromFailure(dn1Vol2);
    DataNodeTestUtils.reconfigureDataNode(dns.get(0),dn1Vol2);
    verifyDataNodeVolumeMetrics(fs,cluster,fileName);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
