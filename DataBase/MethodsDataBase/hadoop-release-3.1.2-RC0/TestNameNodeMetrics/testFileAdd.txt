/** 
 * Test metrics associated with addition of a file 
 */
@Test public void testFileAdd() throws Exception {
  final long blockCount=32;
  final Path normalFile=getTestPath("testFileAdd");
  createFile(normalFile,blockCount * BLOCK_SIZE,(short)3);
  final Path ecFile=new Path(ecDir,"ecFile.log");
  DFSTestUtil.createStripedFile(cluster,ecFile,null,(int)blockCount,1,false,EC_POLICY);
  int blockCapacity=namesystem.getBlockCapacity();
  assertGauge("BlockCapacity",blockCapacity,getMetrics(NS_METRICS));
  MetricsRecordBuilder rb=getMetrics(NN_METRICS);
  assertCounter("CreateFileOps",2L,rb);
  assertCounter("FilesCreated",(long)(normalFile.depth() + ecFile.depth()),rb);
  long filesTotal=normalFile.depth() + ecFile.depth() + 1;
  rb=getMetrics(NS_METRICS);
  assertGauge("FilesTotal",filesTotal,rb);
  assertGauge("BlocksTotal",blockCount * 2,rb);
  fs.delete(normalFile,true);
  filesTotal--;
  rb=waitForDnMetricValue(NS_METRICS,"FilesTotal",filesTotal);
  assertGauge("BlocksTotal",blockCount,rb);
  assertGauge("PendingDeletionBlocks",0L,rb);
  fs.delete(ecFile,true);
  filesTotal--;
  rb=waitForDnMetricValue(NS_METRICS,"FilesTotal",filesTotal);
  assertGauge("BlocksTotal",0L,rb);
  assertGauge("PendingDeletionBlocks",0L,rb);
  rb=getMetrics(NN_METRICS);
  assertCounter("DeleteFileOps",2L,rb);
  assertCounter("FilesDeleted",2L,rb);
}
