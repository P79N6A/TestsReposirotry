@Test public void testDfsReservedPercentageForDifferentStorageTypes() throws IOException {
  conf.setClass(DFSConfigKeys.DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY,ReservedSpaceCalculator.ReservedSpaceCalculatorPercentage.class,ReservedSpaceCalculator.class);
  conf.setLong(DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY,15);
  File volDir=new File(baseDir,"volume-0");
  volDir.mkdirs();
  DF usage=mock(DF.class);
  when(usage.getCapacity()).thenReturn(4000L);
  when(usage.getAvailable()).thenReturn(1000L);
  FsVolumeImpl volume=new FsVolumeImplBuilder().setConf(conf).setDataset(dataset).setStorageID("storage-id").setStorageDirectory(new StorageDirectory(StorageLocation.parse("[RAM_DISK]" + volDir.getPath()))).setUsage(usage).build();
  assertEquals(600,volume.getReserved());
  assertEquals(3400,volume.getCapacity());
  assertEquals(400,volume.getAvailable());
  conf.setLong(DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY + "." + StringUtils.toLowerCase(StorageType.RAM_DISK.toString()),10);
  conf.setLong(DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY + "." + StringUtils.toLowerCase(StorageType.SSD.toString()),50);
  FsVolumeImpl volume1=new FsVolumeImplBuilder().setConf(conf).setDataset(dataset).setStorageID("storage-id").setStorageDirectory(new StorageDirectory(StorageLocation.parse("[RAM_DISK]" + volDir.getPath()))).setUsage(usage).build();
  assertEquals(400,volume1.getReserved());
  assertEquals(3600,volume1.getCapacity());
  assertEquals(600,volume1.getAvailable());
  FsVolumeImpl volume2=new FsVolumeImplBuilder().setConf(conf).setDataset(dataset).setStorageID("storage-id").setStorageDirectory(new StorageDirectory(StorageLocation.parse("[SSD]" + volDir.getPath()))).setUsage(usage).build();
  assertEquals(2000,volume2.getReserved());
  assertEquals(2000,volume2.getCapacity());
  assertEquals(0,volume2.getAvailable());
  FsVolumeImpl volume3=new FsVolumeImplBuilder().setConf(conf).setDataset(dataset).setStorageID("storage-id").setStorageDirectory(new StorageDirectory(StorageLocation.parse("[DISK]" + volDir.getPath()))).setUsage(usage).build();
  assertEquals(600,volume3.getReserved());
  FsVolumeImpl volume4=new FsVolumeImplBuilder().setConf(conf).setDataset(dataset).setStorageID("storage-id").setStorageDirectory(new StorageDirectory(StorageLocation.parse(volDir.getPath()))).setUsage(usage).build();
  assertEquals(600,volume4.getReserved());
}
