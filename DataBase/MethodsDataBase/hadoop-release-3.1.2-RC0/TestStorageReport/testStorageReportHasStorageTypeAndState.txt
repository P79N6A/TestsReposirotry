/** 
 * Ensure that storage type and storage state are propagated in Storage Reports.
 */
@Test public void testStorageReportHasStorageTypeAndState() throws IOException {
  assertNotSame(storageType,StorageType.DEFAULT);
  NameNode nn=cluster.getNameNode();
  DataNode dn=cluster.getDataNodes().get(0);
  DatanodeProtocolClientSideTranslatorPB nnSpy=InternalDataNodeTestUtils.spyOnBposToNN(dn,nn);
  DataNodeTestUtils.triggerHeartbeat(dn);
  ArgumentCaptor<StorageReport[]> captor=ArgumentCaptor.forClass(StorageReport[].class);
  Mockito.verify(nnSpy).sendHeartbeat(any(DatanodeRegistration.class),captor.capture(),anyLong(),anyLong(),anyInt(),anyInt(),anyInt(),Mockito.any(VolumeFailureSummary.class),Mockito.anyBoolean(),Mockito.any(SlowPeerReports.class),Mockito.any(SlowDiskReports.class));
  StorageReport[] reports=captor.getValue();
  for (  StorageReport report : reports) {
    assertThat(report.getStorage().getStorageType(),is(storageType));
    assertThat(report.getStorage().getState(),is(DatanodeStorage.State.NORMAL));
  }
}
