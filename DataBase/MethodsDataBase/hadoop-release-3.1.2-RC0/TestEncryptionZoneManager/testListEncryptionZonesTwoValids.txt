@Test public void testListEncryptionZonesTwoValids() throws Exception {
  this.ezManager=new EncryptionZoneManager(mockedDir,new Configuration());
  this.ezManager.addEncryptionZone(1L,CipherSuite.AES_CTR_NOPADDING,CryptoProtocolVersion.ENCRYPTION_ZONES,"test_key");
  this.ezManager.addEncryptionZone(2L,CipherSuite.AES_CTR_NOPADDING,CryptoProtocolVersion.ENCRYPTION_ZONES,"test_key");
  this.firstINode.setParent(rootINode);
  this.secondINode.setParent(rootINode);
  when(mockedDir.getINodesInPath("/first",DirOp.READ_LINK)).thenReturn(mockedINodesInPath);
  when(mockedINodesInPath.getLastINode()).thenReturn(firstINode);
  INodesInPath mockedINodesInPathForSecond=mock(INodesInPath.class);
  when(mockedDir.getINodesInPath("/second",DirOp.READ_LINK)).thenReturn(mockedINodesInPathForSecond);
  when(mockedINodesInPathForSecond.getLastINode()).thenReturn(secondINode);
  BatchedListEntries<EncryptionZone> result=ezManager.listEncryptionZones(0);
  assertEquals(2,result.size());
  assertEquals(1L,result.get(0).getId());
  assertEquals("/first",result.get(0).getPath());
  assertEquals(2L,result.get(1).getId());
  assertEquals("/second",result.get(1).getPath());
}
