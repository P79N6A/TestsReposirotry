@Test public void testAddNestedQueue() throws Exception {
  CapacitySchedulerConfiguration orgConf=getSchedulerConf();
  assertNotNull(orgConf);
  assertEquals(3,orgConf.getQueues("root").length);
  WebResource r=resource();
  ClientResponse response;
  SchedConfUpdateInfo updateInfo=new SchedConfUpdateInfo();
  Map<String,String> d1Capacity=new HashMap<>();
  d1Capacity.put(CapacitySchedulerConfiguration.CAPACITY,"25");
  d1Capacity.put(CapacitySchedulerConfiguration.MAXIMUM_CAPACITY,"25");
  Map<String,String> nearEmptyCapacity=new HashMap<>();
  nearEmptyCapacity.put(CapacitySchedulerConfiguration.CAPACITY,"1E-4");
  nearEmptyCapacity.put(CapacitySchedulerConfiguration.MAXIMUM_CAPACITY,"1E-4");
  Map<String,String> d2Capacity=new HashMap<>();
  d2Capacity.put(CapacitySchedulerConfiguration.CAPACITY,"75");
  d2Capacity.put(CapacitySchedulerConfiguration.MAXIMUM_CAPACITY,"75");
  QueueConfigInfo d1=new QueueConfigInfo("root.d.d1",d1Capacity);
  QueueConfigInfo d2=new QueueConfigInfo("root.d.d2",d2Capacity);
  QueueConfigInfo d=new QueueConfigInfo("root.d",nearEmptyCapacity);
  updateInfo.getAddQueueInfo().add(d1);
  updateInfo.getAddQueueInfo().add(d2);
  updateInfo.getAddQueueInfo().add(d);
  response=r.path("ws").path("v1").path("cluster").path("scheduler-conf").queryParam("user.name",userName).accept(MediaType.APPLICATION_JSON).entity(YarnWebServiceUtils.toJson(updateInfo,SchedConfUpdateInfo.class),MediaType.APPLICATION_JSON).put(ClientResponse.class);
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  CapacitySchedulerConfiguration newCSConf=((CapacityScheduler)rm.getResourceScheduler()).getConfiguration();
  assertEquals(4,newCSConf.getQueues("root").length);
  assertEquals(2,newCSConf.getQueues("root.d").length);
  assertEquals(25.0f,newCSConf.getNonLabeledQueueCapacity("root.d.d1"),0.01f);
  assertEquals(75.0f,newCSConf.getNonLabeledQueueCapacity("root.d.d2"),0.01f);
  CapacitySchedulerConfiguration newConf=getSchedulerConf();
  assertNotNull(newConf);
  assertEquals(4,newConf.getQueues("root").length);
}
