@Test public void testUpdateQueue() throws Exception {
  WebResource r=resource();
  ClientResponse response;
  SchedConfUpdateInfo updateInfo=new SchedConfUpdateInfo();
  Map<String,String> updateParam=new HashMap<>();
  updateParam.put(CapacitySchedulerConfiguration.MAXIMUM_AM_RESOURCE_SUFFIX,"0.2");
  QueueConfigInfo aUpdateInfo=new QueueConfigInfo("root.a",updateParam);
  updateInfo.getUpdateQueueInfo().add(aUpdateInfo);
  CapacityScheduler cs=(CapacityScheduler)rm.getResourceScheduler();
  assertEquals(CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_APPLICATIONMASTERS_RESOURCE_PERCENT,cs.getConfiguration().getMaximumApplicationMasterResourcePerQueuePercent("root.a"),0.001f);
  response=r.path("ws").path("v1").path("cluster").path("scheduler-conf").queryParam("user.name",userName).accept(MediaType.APPLICATION_JSON).entity(YarnWebServiceUtils.toJson(updateInfo,SchedConfUpdateInfo.class),MediaType.APPLICATION_JSON).put(ClientResponse.class);
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  CapacitySchedulerConfiguration newCSConf=cs.getConfiguration();
  assertEquals(0.2f,newCSConf.getMaximumApplicationMasterResourcePerQueuePercent("root.a"),0.001f);
  updateParam.put(CapacitySchedulerConfiguration.MAXIMUM_AM_RESOURCE_SUFFIX,null);
  aUpdateInfo=new QueueConfigInfo("root.a",updateParam);
  updateInfo.getUpdateQueueInfo().clear();
  updateInfo.getUpdateQueueInfo().add(aUpdateInfo);
  response=r.path("ws").path("v1").path("cluster").path("scheduler-conf").queryParam("user.name",userName).accept(MediaType.APPLICATION_JSON).entity(YarnWebServiceUtils.toJson(updateInfo,SchedConfUpdateInfo.class),MediaType.APPLICATION_JSON).put(ClientResponse.class);
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  newCSConf=cs.getConfiguration();
  assertEquals(CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_APPLICATIONMASTERS_RESOURCE_PERCENT,newCSConf.getMaximumApplicationMasterResourcePerQueuePercent("root.a"),0.001f);
}
