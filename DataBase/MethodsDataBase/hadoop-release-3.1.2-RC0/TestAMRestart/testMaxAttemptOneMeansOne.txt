@Test(timeout=100000) public void testMaxAttemptOneMeansOne() throws Exception {
  getConf().setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,1);
  getConf().setBoolean(YarnConfiguration.RECOVERY_ENABLED,true);
  getConf().set(YarnConfiguration.RM_STORE,MemoryRMStateStore.class.getName());
  MockRM rm1=new MockRM(getConf());
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",8000,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app1=rm1.submitApp(200);
  RMAppAttempt attempt1=app1.getCurrentAppAttempt();
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  AbstractYarnScheduler scheduler=(AbstractYarnScheduler)rm1.getResourceScheduler();
  ContainerId amContainer=ContainerId.newContainerId(am1.getApplicationAttemptId(),1);
  scheduler.killContainer(scheduler.getRMContainer(amContainer));
  rm1.waitForState(am1.getApplicationAttemptId(),RMAppAttemptState.FAILED);
  TestSchedulerUtils.waitSchedulerApplicationAttemptStopped(scheduler,am1.getApplicationAttemptId());
  rm1.waitForState(app1.getApplicationId(),RMAppState.FAILED);
  Assert.assertEquals(1,app1.getAppAttempts().size());
  rm1.stop();
}
