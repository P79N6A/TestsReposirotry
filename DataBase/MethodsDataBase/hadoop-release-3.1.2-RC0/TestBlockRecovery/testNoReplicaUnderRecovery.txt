/** 
 * BlockRecoveryFI_10. DN has no ReplicaUnderRecovery.
 * @throws IOException in case of an error
 */
@Test(timeout=60000) public void testNoReplicaUnderRecovery() throws IOException {
  if (LOG.isDebugEnabled()) {
    LOG.debug("Running " + GenericTestUtils.getMethodName());
  }
  dn.data.createRbw(StorageType.DEFAULT,null,block,false);
  BlockRecoveryWorker.RecoveryTaskContiguous RecoveryTaskContiguous=recoveryWorker.new RecoveryTaskContiguous(rBlock);
  try {
    RecoveryTaskContiguous.syncBlock(initBlockRecords(dn));
    fail("Sync should fail");
  }
 catch (  IOException e) {
    e.getMessage().startsWith("Cannot recover ");
  }
  DatanodeProtocol namenode=recoveryWorker.getActiveNamenodeForBP(POOL_ID);
  verify(namenode,never()).commitBlockSynchronization(any(ExtendedBlock.class),anyLong(),anyLong(),anyBoolean(),anyBoolean(),any(DatanodeID[].class),any(String[].class));
}
