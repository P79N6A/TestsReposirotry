@Test(timeout=60000) public void testSafeLength() throws Exception {
  ErasureCodingPolicy ecPolicy=StripedFileTestUtil.getDefaultECPolicy();
  RecoveringStripedBlock rBlockStriped=new RecoveringStripedBlock(rBlock,new byte[9],ecPolicy);
  BlockRecoveryWorker recoveryWorker=new BlockRecoveryWorker(dn);
  BlockRecoveryWorker.RecoveryTaskStriped recoveryTask=recoveryWorker.new RecoveryTaskStriped(rBlockStriped);
  for (int i=0; i < blockLengthsSuite.length; i++) {
    int[] blockLengths=blockLengthsSuite[i][0];
    int safeLength=blockLengthsSuite[i][1][0];
    Map<Long,BlockRecord> syncList=new HashMap<>();
    for (int id=0; id < blockLengths.length; id++) {
      ReplicaRecoveryInfo rInfo=new ReplicaRecoveryInfo(id,blockLengths[id],0,null);
      syncList.put((long)id,new BlockRecord(null,null,rInfo));
    }
    Assert.assertEquals("BLOCK_LENGTHS_SUITE[" + i + "]",safeLength,recoveryTask.getSafeLength(syncList));
  }
}
