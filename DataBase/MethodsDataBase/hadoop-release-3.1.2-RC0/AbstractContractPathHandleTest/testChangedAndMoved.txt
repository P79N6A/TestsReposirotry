@Test public void testChangedAndMoved() throws IOException {
  describe("verify open(PathHandle, changed(*), moved(*))");
  assumeSupportsFileReference();
  assumeSupportsContentCheck();
  HandleOpt.Data data=HandleOpt.getOpt(HandleOpt.Data.class,opts).orElseThrow(IllegalArgumentException::new);
  HandleOpt.Location loc=HandleOpt.getOpt(HandleOpt.Location.class,opts).orElseThrow(IllegalArgumentException::new);
  FileStatus stat=testFile(B1);
  Path dst=path(stat.getPath() + "2");
  ContractTestUtils.rename(getFileSystem(),stat.getPath(),dst);
  appendFile(getFileSystem(),dst,B2);
  PathHandle fd=getHandleOrSkip(stat);
  byte[] b12=Arrays.copyOf(B1,B1.length + B2.length);
  System.arraycopy(B2,0,b12,B1.length,B2.length);
  try (FSDataInputStream in=getFileSystem().open(fd)){
    assertTrue("Failed to detect location change",loc.allowChange());
    assertTrue("Failed to detect content change",data.allowChange());
    verifyRead(in,b12,0,b12.length);
  }
 catch (  InvalidPathHandleException e) {
    if (data.allowChange()) {
      assertFalse("Failed to allow location change",loc.allowChange());
    }
    if (loc.allowChange()) {
      assertFalse("Failed to allow content change",data.allowChange());
    }
  }
}
