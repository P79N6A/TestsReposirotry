/** 
 * When a dead node is put to maintenance, it transitions directly to AdminStates.IN_MAINTENANCE. Then AdminStates.IN_MAINTENANCE expires and transitions to AdminStates.NORMAL.
 */
@Test(timeout=360000) public void testPutDeadNodeToMaintenanceWithExpiration() throws Exception {
  LOG.info("Starting testPutDeadNodeToMaintenanceWithExpiration");
  final Path file=new Path("/testPutDeadNodeToMaintenanceWithExpiration.dat");
  startCluster(1,1);
  FileSystem fileSys=getCluster().getFileSystem(0);
  FSNamesystem ns=getCluster().getNamesystem(0);
  writeFile(fileSys,file,1,1);
  MiniDFSCluster.DataNodeProperties dnProp=getCluster().stopDataNode(0);
  DFSTestUtil.waitForDatanodeState(getCluster(),dnProp.datanode.getDatanodeUuid(),false,20000);
  int deadInMaintenance=ns.getNumInMaintenanceDeadDataNodes();
  int liveInMaintenance=ns.getNumInMaintenanceLiveDataNodes();
  DatanodeInfo nodeOutofService=takeNodeOutofService(0,dnProp.datanode.getDatanodeUuid(),Long.MAX_VALUE,null,AdminStates.IN_MAINTENANCE);
  takeNodeOutofService(0,nodeOutofService.getDatanodeUuid(),Time.now() + EXPIRATION_IN_MS,null,AdminStates.NORMAL);
  assertEquals(deadInMaintenance,ns.getNumInMaintenanceDeadDataNodes());
  assertEquals(liveInMaintenance,ns.getNumInMaintenanceLiveDataNodes());
  cleanupFile(fileSys,file);
}
