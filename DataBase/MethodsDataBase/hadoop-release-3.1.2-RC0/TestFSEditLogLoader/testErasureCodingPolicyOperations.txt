@Test public void testErasureCodingPolicyOperations() throws IOException {
  Configuration conf=new HdfsConfiguration();
  final int blockSize=16 * 1024;
  conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,blockSize);
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(9).build();
    cluster.waitActive();
    DistributedFileSystem fs=cluster.getFileSystem();
    ECSchema schema=new ECSchema("rs",5,3);
    int cellSize=2 * 1024;
    ErasureCodingPolicy newPolicy=new ErasureCodingPolicy(schema,cellSize,(byte)0);
    ErasureCodingPolicy[] policyArray=new ErasureCodingPolicy[]{newPolicy};
    AddErasureCodingPolicyResponse[] responses=fs.addErasureCodingPolicies(policyArray);
    assertEquals(1,responses.length);
    assertTrue(responses[0].isSucceed());
    newPolicy=responses[0].getPolicy();
    cluster.restartNameNodes();
    cluster.waitActive();
    ErasureCodingPolicy ecPolicy=ErasureCodingPolicyManager.getInstance().getByID(newPolicy.getId());
    assertEquals(ErasureCodingPolicyState.DISABLED,DFSTestUtil.getECPolicyState(ecPolicy));
    fs.enableErasureCodingPolicy(newPolicy.getName());
    cluster.restartNameNodes();
    cluster.waitActive();
    ecPolicy=ErasureCodingPolicyManager.getInstance().getByID(newPolicy.getId());
    assertEquals(ErasureCodingPolicyState.ENABLED,DFSTestUtil.getECPolicyState(ecPolicy));
    final Path dirPath=new Path("/striped");
    final Path filePath=new Path(dirPath,"file");
    final int fileLength=blockSize * newPolicy.getNumDataUnits();
    fs.mkdirs(dirPath);
    fs.setErasureCodingPolicy(dirPath,newPolicy.getName());
    final byte[] bytes=StripedFileTestUtil.generateBytes(fileLength);
    DFSTestUtil.writeFile(fs,filePath,bytes);
    fs.disableErasureCodingPolicy(newPolicy.getName());
    cluster.restartNameNodes();
    cluster.waitActive();
    ecPolicy=ErasureCodingPolicyManager.getInstance().getByID(newPolicy.getId());
    assertEquals(ErasureCodingPolicyState.DISABLED,DFSTestUtil.getECPolicyState(ecPolicy));
    DFSTestUtil.readFileAsBytes(fs,filePath);
    fs.removeErasureCodingPolicy(newPolicy.getName());
    cluster.restartNameNodes();
    cluster.waitActive();
    ecPolicy=ErasureCodingPolicyManager.getInstance().getByID(newPolicy.getId());
    assertEquals(ErasureCodingPolicyState.REMOVED,DFSTestUtil.getECPolicyState(ecPolicy));
    DFSTestUtil.readFileAsBytes(fs,filePath);
    cluster.shutdown();
    cluster=null;
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
