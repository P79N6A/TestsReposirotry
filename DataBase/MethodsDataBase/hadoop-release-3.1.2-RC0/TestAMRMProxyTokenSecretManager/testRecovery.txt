@Test public void testRecovery() throws IOException {
  ApplicationId appId=ApplicationId.newInstance(1,1);
  ApplicationAttemptId attemptId=ApplicationAttemptId.newInstance(appId,1);
  Token<AMRMTokenIdentifier> localToken=secretManager.createAndGetAMRMToken(attemptId);
  AMRMTokenIdentifier identifier=secretManager.createIdentifier();
  identifier.readFields(new DataInputStream(new ByteArrayInputStream(localToken.getIdentifier())));
  secretManager.retrievePassword(identifier);
  secretManager.rollMasterKey();
  secretManager.stop();
  secretManager=new AMRMProxyTokenSecretManager(stateStore);
  secretManager.init(conf);
  secretManager.recover(stateStore.loadAMRMProxyState());
  secretManager.start();
  secretManager.createAndGetAMRMToken(attemptId);
  secretManager.retrievePassword(identifier);
  secretManager.activateNextMasterKey();
  secretManager.stop();
  secretManager=new AMRMProxyTokenSecretManager(stateStore);
  secretManager.init(conf);
  secretManager.recover(stateStore.loadAMRMProxyState());
  secretManager.start();
  secretManager.createAndGetAMRMToken(attemptId);
  try {
    secretManager.retrievePassword(identifier);
    Assert.fail("Expect InvalidToken exception because the " + "old master key should have expired");
  }
 catch (  InvalidToken e) {
  }
}
