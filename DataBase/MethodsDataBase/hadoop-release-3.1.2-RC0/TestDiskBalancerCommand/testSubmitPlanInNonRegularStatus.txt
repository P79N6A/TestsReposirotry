/** 
 * Tests if it's allowed to submit and execute plan when Datanode is in status other than REGULAR.
 */
@Test(timeout=60000) public void testSubmitPlanInNonRegularStatus() throws Exception {
  final int numDatanodes=1;
  MiniDFSCluster miniCluster=null;
  final Configuration hdfsConf=new HdfsConfiguration();
  try {
    miniCluster=DiskBalancerTestUtil.newImbalancedCluster(hdfsConf,numDatanodes,CAPACITIES,DEFAULT_BLOCK_SIZE,FILE_LEN,StartupOption.ROLLBACK);
    final String planFileFullName=runAndVerifyPlan(miniCluster,hdfsConf);
    try {
      final String cmdLine=String.format("hdfs diskbalancer -%s %s",EXECUTE,planFileFullName);
      runCommand(cmdLine,hdfsConf,miniCluster);
    }
 catch (    RemoteException e) {
      assertThat(e.getClassName(),containsString("DiskBalancerException"));
      assertThat(e.toString(),is(allOf(containsString("Datanode is in special state"),containsString("Disk balancing not permitted."))));
    }
  }
  finally {
    if (miniCluster != null) {
      miniCluster.shutdown();
    }
  }
}
