@Test public void testAppsRunning() throws JSONException, Exception {
  rm.start();
  MockNM nm1=rm.registerNode("h1:1234",2048);
  MockNM nm2=rm.registerNode("h2:1235",2048);
  nodeLabelManager.addLabelsToNode(ImmutableMap.of(NodeId.newInstance("h2",1235),toSet("X")));
  RMApp app1=rm.submitApp(AM_CONTAINER_MB,"app","user",null,"default");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm,nm1);
  nm1.nodeHeartbeat(true);
  am1.allocate("*",1024,1,new ArrayList<ContainerId>(),"X");
  nm2.nodeHeartbeat(true);
  WebResource r=resource();
  ClientResponse response=r.path("ws").path("v1").path("cluster").path("apps").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  JSONObject json=response.getEntity(JSONObject.class);
  JSONObject apps=json.getJSONObject("apps");
  assertEquals("incorrect number of elements",1,apps.length());
  JSONObject jsonObject=apps.getJSONArray("app").getJSONObject(0).getJSONObject("resourceInfo");
  JSONArray jsonArray=jsonObject.getJSONArray("resourceUsagesByPartition");
  assertEquals("Partition expected is 2",2,jsonArray.length());
  JSONObject defaultPartition=jsonArray.getJSONObject(0);
  verifyResource(defaultPartition,"",getResource(1024,1),getResource(1024,1),getResource(0,0));
  JSONObject paritionX=jsonArray.getJSONObject(1);
  verifyResource(paritionX,"X",getResource(0,0),getResource(1024,1),getResource(0,0));
  rm.stop();
}
