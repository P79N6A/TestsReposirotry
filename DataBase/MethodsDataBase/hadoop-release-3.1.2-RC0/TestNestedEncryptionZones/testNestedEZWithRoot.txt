@Test(timeout=60000) public void testNestedEZWithRoot() throws Exception {
  initTopEZDirAndNestedEZDir(rootDir);
  verifyEncryption();
  renameChildrenOfEZ();
  final String currentUser=UserGroupInformation.getCurrentUser().getShortUserName();
  final Path suffixTrashPath=new Path(FileSystem.TRASH_PREFIX,currentUser);
  final Path rootTrash=fs.getTrashRoot(rootDir);
  final Path topEZTrash=fs.getTrashRoot(topEZFile);
  final Path nestedEZTrash=fs.getTrashRoot(nestedEZFile);
  final Path expectedTopEZTrash=fs.makeQualified(new Path(topEZDir,suffixTrashPath));
  final Path expectedNestedEZTrash=fs.makeQualified(new Path(nestedEZDir,suffixTrashPath));
  assertEquals("Top ez trash should be " + expectedTopEZTrash,expectedTopEZTrash,topEZTrash);
  assertEquals("Root trash should be equal with TopEZFile trash",topEZTrash,rootTrash);
  assertEquals("Nested ez Trash should be " + expectedNestedEZTrash,expectedNestedEZTrash,nestedEZTrash);
  FsShell shell=new FsShell(fs.getConf());
  final Path topTrashFile=new Path(shell.getCurrentTrashDir(topEZFile) + "/" + topEZFile);
  final Path nestedTrashFile=new Path(shell.getCurrentTrashDir(nestedEZFile) + "/" + nestedEZFile);
  ToolRunner.run(shell,new String[]{"-rm",topEZFile.toString()});
  ToolRunner.run(shell,new String[]{"-rm",nestedEZFile.toString()});
  assertTrue("File not in trash : " + topTrashFile,fs.exists(topTrashFile));
  assertTrue("File not in trash : " + nestedTrashFile,fs.exists(nestedTrashFile));
}
