@Test public void testHttpOpParams(){
  try {
    new PostOpParam("TEST");
    Assert.fail("Construct the PostOpParam with param value 'TEST' should be" + " failed.");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("TEST is not a valid POST operation.",e);
  }
  try {
    new PutOpParam("TEST");
    Assert.fail("Construct the PutOpParam with param value 'TEST' should be" + " failed.");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("TEST is not a valid PUT operation.",e);
  }
  try {
    new DeleteOpParam("TEST");
    Assert.fail("Construct the DeleteOpParam with param value 'TEST' should be" + " failed.");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("TEST is not a valid DELETE operation.",e);
  }
  try {
    new GetOpParam("TEST");
    Assert.fail("Construct the GetOpParam with param value 'TEST' should be" + " failed.");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("TEST is not a valid GET operation.",e);
  }
}
