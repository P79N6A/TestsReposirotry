/** 
 * While each object has its own key and should be distinct, this verifies that hadoop treats object keys as a filesystem path.  So if a top level dir is encrypted with keyA, a sublevel dir cannot be accessed with a different keyB. This is expected AWS S3 SSE-C behavior.
 * @throws Exception
 */
@Test public void testCreateSubdirWithDifferentKey() throws Exception {
  assumeEnabled();
  skipIfEncryptionTestsDisabled(getConfiguration());
  assumeS3GuardState(false,getConfiguration());
  intercept(AccessDeniedException.class,SERVICE_AMAZON_S3_STATUS_CODE_403,() -> {
    Path base=path("testCreateSubdirWithDifferentKey");
    Path nestedDirectory=new Path(base,"nestedDir");
    fsKeyB=createNewFileSystemWithSSECKey(KEY_2);
    getFileSystem().mkdirs(base);
    fsKeyB.mkdirs(nestedDirectory);
    return fsKeyB.getFileStatus(nestedDirectory);
  }
);
}
