@Test public void testStartup() throws Exception {
  Configuration conf=new Configuration();
  HAUtil.setAllowStandbyReads(conf,true);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(0).build();
  try {
    List<URI> allDirs=Lists.newArrayList();
    allDirs.addAll(cluster.getNameDirs(0));
    allDirs.addAll(cluster.getNameDirs(1));
    allDirs.add(cluster.getSharedEditsDir(0,1));
    assertNoEditFiles(allDirs);
    cluster.transitionToActive(0);
    assertEditFiles(cluster.getNameDirs(0),NNStorage.getInProgressEditsFileName(1));
    assertEditFiles(Collections.singletonList(cluster.getSharedEditsDir(0,1)),NNStorage.getInProgressEditsFileName(1));
    assertNoEditFiles(cluster.getNameDirs(1));
    cluster.getNameNode(0).getRpcServer().mkdirs("/test",FsPermission.createImmutable((short)0755),true);
    cluster.restartNameNode(1);
    assertEditFiles(cluster.getNameDirs(0),NNStorage.getInProgressEditsFileName(1));
    assertEditFiles(Collections.singletonList(cluster.getSharedEditsDir(0,1)),NNStorage.getInProgressEditsFileName(1));
    assertNoEditFiles(cluster.getNameDirs(1));
    assertNull(getFileInfo(cluster.getNameNode(1),"/test",true,false,false));
    cluster.getNameNode(0).getRpcServer().mkdirs("/test2",FsPermission.createImmutable((short)0755),true);
    cluster.restartNameNode(0);
    cluster.transitionToActive(1);
    assertNotNull(getFileInfo(cluster.getNameNode(1),"/test",true,false,false));
    assertNotNull(getFileInfo(cluster.getNameNode(1),"/test2",true,false,false));
  }
  finally {
    cluster.shutdown();
  }
}
