@Test public void duplicateOutcomes(){
  AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext(DuplicateConfig.class);
  ConditionEvaluationReport report=ConditionEvaluationReport.get(context.getBeanFactory());
  String autoconfigKey=MultipartAutoConfiguration.class.getName();
  ConditionAndOutcomes outcomes=report.getConditionAndOutcomesBySource().get(autoconfigKey);
  assertThat(outcomes).isNotEqualTo(nullValue());
  assertThat(getNumberOfOutcomes(outcomes)).isEqualTo(2);
  List<String> messages=new ArrayList<>();
  for (  ConditionAndOutcome outcome : outcomes) {
    messages.add(outcome.getOutcome().getMessage());
  }
  assertThat(messages).areAtLeastOne(Matched.by(containsString("@ConditionalOnClass found required classes " + "'javax.servlet.Servlet', 'org.springframework.web.multipart." + "support.StandardServletMultipartResolver', "+ "'javax.servlet.MultipartConfigElement'")));
  context.close();
}
