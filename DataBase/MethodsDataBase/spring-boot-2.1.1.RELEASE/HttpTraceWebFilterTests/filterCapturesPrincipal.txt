@Test public void filterCapturesPrincipal() throws ServletException, IOException {
  Principal principal=mock(Principal.class);
  given(principal.getName()).willReturn("alice");
  this.filter.filter(new ServerWebExchangeDecorator(MockServerWebExchange.from(MockServerHttpRequest.get("https://api.example.com"))){
    @Override public Mono<Principal> getPrincipal(){
      return Mono.just(principal);
    }
  }
,new WebFilterChain(){
    @Override public Mono<Void> filter(    ServerWebExchange exchange){
      exchange.getSession().block().getAttributes().put("a","alpha");
      return Mono.empty();
    }
  }
).block();
  assertThat(this.repository.findAll()).hasSize(1);
  org.springframework.boot.actuate.trace.http.HttpTrace.Principal tracedPrincipal=this.repository.findAll().get(0).getPrincipal();
  assertThat(tracedPrincipal).isNotNull();
  assertThat(tracedPrincipal.getName()).isEqualTo("alice");
}
