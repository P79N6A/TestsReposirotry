@Test public void parseProjectOptions() throws Exception {
  this.handler.disableProjectGeneration();
  this.command.run("-g=org.demo","-a=acme","-v=1.2.3-SNAPSHOT","-n=acme-sample","--description=Acme sample project","--package-name=demo.foo","-t=ant-project","--build=grunt","--format=web","-p=war","-j=1.9","-l=groovy","-b=1.2.0.RELEASE","-d=web,data-jpa");
  assertThat(this.handler.lastRequest.getGroupId()).isEqualTo("org.demo");
  assertThat(this.handler.lastRequest.getArtifactId()).isEqualTo("acme");
  assertThat(this.handler.lastRequest.getVersion()).isEqualTo("1.2.3-SNAPSHOT");
  assertThat(this.handler.lastRequest.getName()).isEqualTo("acme-sample");
  assertThat(this.handler.lastRequest.getDescription()).isEqualTo("Acme sample project");
  assertThat(this.handler.lastRequest.getPackageName()).isEqualTo("demo.foo");
  assertThat(this.handler.lastRequest.getType()).isEqualTo("ant-project");
  assertThat(this.handler.lastRequest.getBuild()).isEqualTo("grunt");
  assertThat(this.handler.lastRequest.getFormat()).isEqualTo("web");
  assertThat(this.handler.lastRequest.getPackaging()).isEqualTo("war");
  assertThat(this.handler.lastRequest.getJavaVersion()).isEqualTo("1.9");
  assertThat(this.handler.lastRequest.getLanguage()).isEqualTo("groovy");
  assertThat(this.handler.lastRequest.getBootVersion()).isEqualTo("1.2.0.RELEASE");
  List<String> dependencies=this.handler.lastRequest.getDependencies();
  assertThat(dependencies).hasSize(2);
  assertThat(dependencies.contains("web")).isTrue();
  assertThat(dependencies.contains("data-jpa")).isTrue();
}
