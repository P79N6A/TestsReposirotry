@Test public void exceptionFromRefreshIsHandledGracefully(){
  final SpringBootExceptionHandler handler=mock(SpringBootExceptionHandler.class);
  SpringApplication application=new SpringApplication(RefreshFailureConfig.class){
    @Override SpringBootExceptionHandler getSpringBootExceptionHandler(){
      return handler;
    }
  }
;
  ExitCodeListener listener=new ExitCodeListener();
  application.addListeners(listener);
  application.setWebApplicationType(WebApplicationType.NONE);
  try {
    application.run();
    fail("Did not throw");
  }
 catch (  RuntimeException ex) {
  }
  ArgumentCaptor<RuntimeException> exceptionCaptor=ArgumentCaptor.forClass(RuntimeException.class);
  verify(handler).registerLoggedException(exceptionCaptor.capture());
  assertThat(exceptionCaptor.getValue()).hasCauseInstanceOf(RefreshFailureException.class);
  assertThat(this.output.toString()).doesNotContain("NullPointerException");
}
