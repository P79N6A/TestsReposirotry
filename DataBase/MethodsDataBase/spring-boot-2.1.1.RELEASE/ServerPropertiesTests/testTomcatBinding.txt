@Test public void testTomcatBinding(){
  Map<String,String> map=new HashMap<>();
  map.put("server.tomcat.accesslog.pattern","%h %t '%r' %s %b");
  map.put("server.tomcat.accesslog.prefix","foo");
  map.put("server.tomcat.accesslog.rotate","false");
  map.put("server.tomcat.accesslog.rename-on-rotate","true");
  map.put("server.tomcat.accesslog.request-attributes-enabled","true");
  map.put("server.tomcat.accesslog.suffix","-bar.log");
  map.put("server.tomcat.protocol-header","X-Forwarded-Protocol");
  map.put("server.tomcat.remote-ip-header","Remote-Ip");
  map.put("server.tomcat.internal-proxies","10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}");
  map.put("server.tomcat.background-processor-delay","10");
  bind(map);
  ServerProperties.Tomcat tomcat=this.properties.getTomcat();
  assertThat(tomcat.getAccesslog().getPattern()).isEqualTo("%h %t '%r' %s %b");
  assertThat(tomcat.getAccesslog().getPrefix()).isEqualTo("foo");
  assertThat(tomcat.getAccesslog().isRotate()).isFalse();
  assertThat(tomcat.getAccesslog().isRenameOnRotate()).isTrue();
  assertThat(tomcat.getAccesslog().isRequestAttributesEnabled()).isTrue();
  assertThat(tomcat.getAccesslog().getSuffix()).isEqualTo("-bar.log");
  assertThat(tomcat.getRemoteIpHeader()).isEqualTo("Remote-Ip");
  assertThat(tomcat.getProtocolHeader()).isEqualTo("X-Forwarded-Protocol");
  assertThat(tomcat.getInternalProxies()).isEqualTo("10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}");
  assertThat(tomcat.getBackgroundProcessorDelay()).isEqualTo(Duration.ofSeconds(10));
}
