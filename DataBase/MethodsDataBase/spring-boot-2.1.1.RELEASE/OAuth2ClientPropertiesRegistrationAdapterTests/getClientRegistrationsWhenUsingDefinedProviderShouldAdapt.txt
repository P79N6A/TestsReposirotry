@Test public void getClientRegistrationsWhenUsingDefinedProviderShouldAdapt(){
  OAuth2ClientProperties properties=new OAuth2ClientProperties();
  Provider provider=new Provider();
  provider.setAuthorizationUri("http://example.com/auth");
  provider.setTokenUri("http://example.com/token");
  provider.setUserInfoUri("http://example.com/info");
  provider.setUserInfoAuthenticationMethod("form");
  provider.setUserNameAttribute("sub");
  provider.setJwkSetUri("http://example.com/jwk");
  OAuth2ClientProperties.Registration registration=new OAuth2ClientProperties.Registration();
  registration.setProvider("provider");
  registration.setClientId("clientId");
  registration.setClientSecret("clientSecret");
  registration.setClientAuthenticationMethod("post");
  registration.setAuthorizationGrantType("authorization_code");
  registration.setRedirectUri("http://example.com/redirect");
  registration.setScope(Collections.singleton("scope"));
  registration.setClientName("clientName");
  properties.getRegistration().put("registration",registration);
  properties.getProvider().put("provider",provider);
  Map<String,ClientRegistration> registrations=OAuth2ClientPropertiesRegistrationAdapter.getClientRegistrations(properties);
  ClientRegistration adapted=registrations.get("registration");
  ProviderDetails adaptedProvider=adapted.getProviderDetails();
  assertThat(adaptedProvider.getAuthorizationUri()).isEqualTo("http://example.com/auth");
  assertThat(adaptedProvider.getTokenUri()).isEqualTo("http://example.com/token");
  assertThat(adaptedProvider.getUserInfoEndpoint().getUri()).isEqualTo("http://example.com/info");
  assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()).isEqualTo(org.springframework.security.oauth2.core.AuthenticationMethod.FORM);
  assertThat(adaptedProvider.getUserInfoEndpoint().getUserNameAttributeName()).isEqualTo("sub");
  assertThat(adaptedProvider.getJwkSetUri()).isEqualTo("http://example.com/jwk");
  assertThat(adapted.getRegistrationId()).isEqualTo("registration");
  assertThat(adapted.getClientId()).isEqualTo("clientId");
  assertThat(adapted.getClientSecret()).isEqualTo("clientSecret");
  assertThat(adapted.getClientAuthenticationMethod()).isEqualTo(org.springframework.security.oauth2.core.ClientAuthenticationMethod.POST);
  assertThat(adapted.getAuthorizationGrantType()).isEqualTo(org.springframework.security.oauth2.core.AuthorizationGrantType.AUTHORIZATION_CODE);
  assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");
  assertThat(adapted.getScopes()).containsExactly("scope");
  assertThat(adapted.getClientName()).isEqualTo("clientName");
}
