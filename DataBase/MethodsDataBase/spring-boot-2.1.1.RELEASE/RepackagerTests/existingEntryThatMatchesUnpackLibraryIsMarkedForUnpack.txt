@Test public void existingEntryThatMatchesUnpackLibraryIsMarkedForUnpack() throws IOException {
  File library=createLibrary();
  this.testJarFile.addClass("WEB-INF/classes/com/example/Application.class",ClassWithMainMethod.class);
  this.testJarFile.addFile("WEB-INF/lib/" + library.getName(),library);
  File source=this.testJarFile.getFile("war");
  File dest=this.temporaryFolder.newFile("dest.war");
  Repackager repackager=new Repackager(source);
  repackager.setLayout(new Layouts.War());
  repackager.repackage(dest,(callback) -> callback.library(new Library(library,LibraryScope.COMPILE,true)));
  assertThat(getEntryNames(dest)).containsSubsequence("org/springframework/boot/loader/","WEB-INF/classes/com/example/Application.class","WEB-INF/lib/" + library.getName());
  JarEntry unpackLibrary=getEntry(dest,"WEB-INF/lib/" + library.getName());
  assertThat(unpackLibrary.getComment()).startsWith("UNPACK:");
}
