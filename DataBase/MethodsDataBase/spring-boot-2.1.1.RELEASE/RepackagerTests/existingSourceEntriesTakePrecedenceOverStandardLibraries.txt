@Test public void existingSourceEntriesTakePrecedenceOverStandardLibraries() throws Exception {
  TestJarFile nested=new TestJarFile(this.temporaryFolder);
  nested.addClass("a/b/C.class",ClassWithoutMainMethod.class);
  File nestedFile=nested.getFile();
  this.testJarFile.addFile("BOOT-INF/lib/" + nestedFile.getName(),nested.getFile());
  this.testJarFile.addClass("A.class",ClassWithMainMethod.class);
  File file=this.testJarFile.getFile();
  Repackager repackager=new Repackager(file);
  long sourceLength=nestedFile.length();
  repackager.repackage((callback) -> {
    nestedFile.delete();
    File toZip=RepackagerTests.this.temporaryFolder.newFile();
    ZipUtil.packEntry(toZip,nestedFile);
    callback.library(new Library(nestedFile,LibraryScope.COMPILE));
  }
);
  try (JarFile jarFile=new JarFile(file)){
    assertThat(jarFile.getEntry("BOOT-INF/lib/" + nestedFile.getName()).getSize()).isEqualTo(sourceLength);
  }
 }
