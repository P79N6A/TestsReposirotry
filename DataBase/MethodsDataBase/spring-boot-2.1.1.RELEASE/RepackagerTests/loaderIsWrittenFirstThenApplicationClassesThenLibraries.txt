@Test public void loaderIsWrittenFirstThenApplicationClassesThenLibraries() throws IOException {
  this.testJarFile.addClass("com/example/Application.class",ClassWithMainMethod.class);
  File source=this.testJarFile.getFile();
  File dest=this.temporaryFolder.newFile("dest.jar");
  File libraryOne=createLibrary();
  File libraryTwo=createLibrary();
  File libraryThree=createLibrary();
  Repackager repackager=new Repackager(source);
  repackager.repackage(dest,(callback) -> {
    callback.library(new Library(libraryOne,LibraryScope.COMPILE,false));
    callback.library(new Library(libraryTwo,LibraryScope.COMPILE,true));
    callback.library(new Library(libraryThree,LibraryScope.COMPILE,false));
  }
);
  assertThat(getEntryNames(dest)).containsSubsequence("org/springframework/boot/loader/","BOOT-INF/classes/com/example/Application.class","BOOT-INF/lib/" + libraryOne.getName(),"BOOT-INF/lib/" + libraryTwo.getName(),"BOOT-INF/lib/" + libraryThree.getName());
}
