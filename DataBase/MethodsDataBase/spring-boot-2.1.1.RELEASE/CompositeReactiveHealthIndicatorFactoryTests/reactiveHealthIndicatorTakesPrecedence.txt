@Test public void reactiveHealthIndicatorTakesPrecedence(){
  ReactiveHealthIndicator reactiveHealthIndicator=mock(ReactiveHealthIndicator.class);
  given(reactiveHealthIndicator.health()).willReturn(Mono.just(UP));
  HealthIndicator regularHealthIndicator=mock(HealthIndicator.class);
  given(regularHealthIndicator.health()).willReturn(UP);
  ReactiveHealthIndicator healthIndicator=createHealthIndicator(Collections.singletonMap("test",reactiveHealthIndicator),Collections.singletonMap("test",regularHealthIndicator));
  StepVerifier.create(healthIndicator.health()).consumeNextWith((h) -> {
    assertThat(h.getStatus()).isEqualTo(Status.UP);
    assertThat(h.getDetails()).containsOnlyKeys("test");
  }
).verifyComplete();
  verify(reactiveHealthIndicator,times(1)).health();
  verify(regularHealthIndicator,never()).health();
}
