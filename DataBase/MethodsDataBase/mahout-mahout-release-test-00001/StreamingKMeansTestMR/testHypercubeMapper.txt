@Test public void testHypercubeMapper() throws IOException {
  MapDriver<Writable,VectorWritable,IntWritable,CentroidWritable> mapDriver=MapDriver.newMapDriver(new StreamingKMeansMapper());
  configure(mapDriver.getConfiguration());
  System.out.printf("%s mapper test\n",mapDriver.getConfiguration().get(StreamingKMeansDriver.SEARCHER_CLASS_OPTION));
  for (  Centroid datapoint : syntheticData.getFirst()) {
    mapDriver.addInput(new IntWritable(0),new VectorWritable(datapoint));
  }
  List<org.apache.hadoop.mrunit.types.Pair<IntWritable,CentroidWritable>> results=mapDriver.run();
  BruteSearch resultSearcher=new BruteSearch(new SquaredEuclideanDistanceMeasure());
  for (  org.apache.hadoop.mrunit.types.Pair<IntWritable,CentroidWritable> result : results) {
    resultSearcher.add(result.getSecond().getCentroid());
  }
  System.out.printf("Clustered the data into %d clusters\n",results.size());
  for (  Vector mean : syntheticData.getSecond()) {
    WeightedThing<Vector> closest=resultSearcher.search(mean,1).get(0);
    assertTrue("Weight " + closest.getWeight() + " not less than 0.5",closest.getWeight() < 0.5);
  }
}
