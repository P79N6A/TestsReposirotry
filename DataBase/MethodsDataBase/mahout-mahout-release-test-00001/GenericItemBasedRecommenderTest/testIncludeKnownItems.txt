@Test public void testIncludeKnownItems() throws Exception {
  DataModel dataModel=getDataModel(new long[]{1,2,3},new Double[][]{{0.1,0.2},{0.2,0.3,0.3,0.6},{0.4,0.4,0.5,0.9}});
  Collection<GenericItemSimilarity.ItemItemSimilarity> similarities=Lists.newArrayList();
  similarities.add(new GenericItemSimilarity.ItemItemSimilarity(0,1,0.8));
  similarities.add(new GenericItemSimilarity.ItemItemSimilarity(0,2,0.5));
  similarities.add(new GenericItemSimilarity.ItemItemSimilarity(0,3,0.2));
  similarities.add(new GenericItemSimilarity.ItemItemSimilarity(1,2,0.7));
  similarities.add(new GenericItemSimilarity.ItemItemSimilarity(1,3,0.5));
  similarities.add(new GenericItemSimilarity.ItemItemSimilarity(2,3,0.9));
  ItemSimilarity similarity=new GenericItemSimilarity(similarities);
  Recommender recommender=new GenericItemBasedRecommender(dataModel,similarity);
  List<RecommendedItem> originalRecommended=recommender.recommend(1,4,null,true);
  List<RecommendedItem> rescoredRecommended=recommender.recommend(1,4,new ReversingRescorer<Long>(),true);
  assertNotNull(originalRecommended);
  assertNotNull(rescoredRecommended);
  assertEquals(4,originalRecommended.size());
  assertEquals(4,rescoredRecommended.size());
  assertEquals(originalRecommended.get(0).getItemID(),rescoredRecommended.get(3).getItemID());
  assertEquals(originalRecommended.get(3).getItemID(),rescoredRecommended.get(0).getItemID());
}
