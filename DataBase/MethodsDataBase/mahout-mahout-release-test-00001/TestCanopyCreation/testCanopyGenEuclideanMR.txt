/** 
 * Story: User can produce final canopy centers using a Hadoop map/reduce job and a EuclideanDistanceMeasure.
 */
@Test public void testCanopyGenEuclideanMR() throws Exception {
  List<VectorWritable> points=getPointsWritable();
  Configuration config=getConfiguration();
  ClusteringTestUtils.writePointsToFile(points,getTestTempFilePath("testdata/file1"),fs,config);
  ClusteringTestUtils.writePointsToFile(points,getTestTempFilePath("testdata/file2"),fs,config);
  Path output=getTestTempDirPath("output");
  CanopyDriver.run(config,getTestTempDirPath("testdata"),output,euclideanDistanceMeasure,3.1,2.1,false,0.0,false);
  Path path=new Path(output,"clusters-0-final/part-r-00000");
  FileSystem fs=FileSystem.get(path.toUri(),config);
  SequenceFile.Reader reader=new SequenceFile.Reader(fs,path,config);
  try {
    Writable key=new Text();
    ClusterWritable clusterWritable=new ClusterWritable();
    assertTrue("more to come",reader.next(key,clusterWritable));
    assertEquals("1st key","C-0",key.toString());
    List<Pair<Double,Double>> refCenters=Lists.newArrayList();
    refCenters.add(new Pair<>(1.8,1.8));
    refCenters.add(new Pair<>(4.433333333333334,4.433333333333334));
    Pair<Double,Double> c=new Pair<>(clusterWritable.getValue().getCenter().get(0),clusterWritable.getValue().getCenter().get(1));
    assertTrue("center " + c + " not found",findAndRemove(c,refCenters,EPSILON));
    assertTrue("more to come",reader.next(key,clusterWritable));
    assertEquals("2nd key","C-1",key.toString());
    c=new Pair<>(clusterWritable.getValue().getCenter().get(0),clusterWritable.getValue().getCenter().get(1));
    assertTrue("center " + c + " not found",findAndRemove(c,refCenters,EPSILON));
    assertFalse("more to come",reader.next(key,clusterWritable));
  }
  finally {
    Closeables.close(reader,true);
  }
}
