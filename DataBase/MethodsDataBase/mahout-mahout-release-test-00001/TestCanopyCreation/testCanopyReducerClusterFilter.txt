/** 
 * Story: User can specify a cluster filter that limits the minimum size of canopies produced by the reducer
 */
@Test public void testCanopyReducerClusterFilter() throws Exception {
  CanopyReducer reducer=new CanopyReducer();
  Configuration conf=getConfiguration();
  conf.set(CanopyConfigKeys.DISTANCE_MEASURE_KEY,"org.apache.mahout.common.distance.ManhattanDistanceMeasure");
  conf.set(CanopyConfigKeys.T1_KEY,String.valueOf(3.1));
  conf.set(CanopyConfigKeys.T2_KEY,String.valueOf(2.1));
  conf.set(CanopyConfigKeys.CF_KEY,"3");
  DummyRecordWriter<Text,ClusterWritable> writer=new DummyRecordWriter<>();
  Reducer<Text,VectorWritable,Text,ClusterWritable>.Context context=DummyRecordWriter.build(reducer,conf,writer,Text.class,VectorWritable.class);
  reducer.setup(context);
  List<VectorWritable> points=getPointsWritable();
  reducer.reduce(new Text("centroid"),points,context);
  Set<Text> keys=writer.getKeys();
  assertEquals("Number of centroids",2,keys.size());
}
