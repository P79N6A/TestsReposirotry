/** 
 * Story: User can cluster points using a ManhattanDistanceMeasure and a reference implementation
 */
@Test public void testReferenceManhattan() throws Exception {
  printCanopies(referenceManhattan);
  assertEquals("number of canopies",3,referenceManhattan.size());
  for (int canopyIx=0; canopyIx < referenceManhattan.size(); canopyIx++) {
    Canopy testCanopy=referenceManhattan.get(canopyIx);
    int[] expectedNumPoints={4,4,3};
    double[][] expectedCentroids={{1.5,1.5},{4.0,4.0},{4.666666666666667,4.6666666666666667}};
    assertEquals("canopy points " + canopyIx,testCanopy.getNumObservations(),expectedNumPoints[canopyIx]);
    double[] refCentroid=expectedCentroids[canopyIx];
    Vector testCentroid=testCanopy.computeCentroid();
    for (int pointIx=0; pointIx < refCentroid.length; pointIx++) {
      assertEquals("canopy centroid " + canopyIx + '['+ pointIx+ ']',refCentroid[pointIx],testCentroid.get(pointIx),EPSILON);
    }
  }
}
