@Test public void testAddToVector(){
  RecordFactory csv=new CsvRecordFactory("y",ImmutableMap.of("x1","n","x2","w","x3","t"));
  csv.firstLine("z,x1,y,x2,x3,q");
  csv.maxTargetValue(2);
  Vector v=new DenseVector(2000);
  int t=csv.processLine("ignore,3.1,yes,tiger, \"this is text\",ignore",v);
  assertEquals(0,t);
  assertEquals(9.0,v.norm(0),0);
  assertEquals(3.1,v.maxValue(),0);
  v.set(v.maxValueIndex(),0);
  assertEquals(8.0,v.norm(0),0);
  assertEquals(8.0,v.norm(1),0);
  assertEquals(1.0,v.maxValue(),0);
  v.assign(0);
  t=csv.processLine("ignore,5.3,no,line, \"and more text and more\",ignore",v);
  assertEquals(1,t);
  assertEquals(9.0,v.norm(0),0);
  assertEquals(5.3,v.maxValue(),0);
  v.set(v.maxValueIndex(),0);
  assertEquals(8.0,v.norm(0),0);
  assertEquals(10.339850002884626,v.norm(1),1.0e-6);
  assertEquals(1.5849625007211563,v.maxValue(),1.0e-6);
  v.assign(0);
  t=csv.processLine("ignore,5.3,invalid,line, \"and more text and more\",ignore",v);
  assertEquals(1,t);
  assertEquals(9.0,v.norm(0),0);
  assertEquals(5.3,v.maxValue(),0);
  v.set(v.maxValueIndex(),0);
  assertEquals(8.0,v.norm(0),0);
  assertEquals(10.339850002884626,v.norm(1),1.0e-6);
  assertEquals(1.5849625007211563,v.maxValue(),1.0e-6);
}
