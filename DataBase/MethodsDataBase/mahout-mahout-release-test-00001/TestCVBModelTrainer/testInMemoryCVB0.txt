@Test public void testInMemoryCVB0() throws Exception {
  String[] terms=new String[26];
  for (int i=0; i < terms.length; i++) {
    terms[i]=String.valueOf((char)(i + 'a'));
  }
  int numGeneratingTopics=3;
  int numTerms=26;
  Matrix matrix=ClusteringTestUtils.randomStructuredModel(numGeneratingTopics,numTerms,new DoubleFunction(){
    @Override public double apply(    double d){
      return 1.0 / Math.pow(d + 1.0,2);
    }
  }
);
  int numDocs=100;
  int numSamples=20;
  int numTopicsPerDoc=1;
  Matrix sampledCorpus=ClusteringTestUtils.sampledCorpus(matrix,RandomUtils.getRandom(),numDocs,numSamples,numTopicsPerDoc);
  List<Double> perplexities=Lists.newArrayList();
  int numTrials=1;
  for (int numTestTopics=1; numTestTopics < 2 * numGeneratingTopics; numTestTopics++) {
    double[] perps=new double[numTrials];
    for (int trial=0; trial < numTrials; trial++) {
      InMemoryCollapsedVariationalBayes0 cvb=new InMemoryCollapsedVariationalBayes0(sampledCorpus,terms,numTestTopics,ALPHA,ETA,2,1,0);
      cvb.setVerbose(true);
      perps[trial]=cvb.iterateUntilConvergence(0,5,0,0.2);
      System.out.println(perps[trial]);
    }
    Arrays.sort(perps);
    System.out.println(Arrays.toString(perps));
    perplexities.add(perps[0]);
  }
  System.out.println(Joiner.on(",").join(perplexities));
}
