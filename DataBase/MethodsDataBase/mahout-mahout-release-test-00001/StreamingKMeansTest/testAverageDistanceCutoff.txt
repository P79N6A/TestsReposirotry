@Test public void testAverageDistanceCutoff(){
  double avgDistanceCutoff=0;
  double avgNumClusters=0;
  int numTests=1;
  System.out.printf("Distance cutoff for %s\n",searcher.getClass().getName());
  for (int i=0; i < numTests; ++i) {
    searcher.clear();
    int numStreamingClusters=(int)Math.log(syntheticData.getFirst().size()) * (1 << NUM_DIMENSIONS);
    double distanceCutoff=1.0e-6;
    double estimatedCutoff=ClusteringUtils.estimateDistanceCutoff(syntheticData.getFirst(),searcher.getDistanceMeasure(),100);
    System.out.printf("[%d] Generated synthetic data [magic] %f [estimate] %f\n",i,distanceCutoff,estimatedCutoff);
    StreamingKMeans clusterer=new StreamingKMeans(searcher,numStreamingClusters,estimatedCutoff);
    clusterer.cluster(syntheticData.getFirst());
    avgDistanceCutoff+=clusterer.getDistanceCutoff();
    avgNumClusters+=clusterer.getNumClusters();
    System.out.printf("[%d] %f\n",i,clusterer.getDistanceCutoff());
  }
  avgDistanceCutoff/=numTests;
  avgNumClusters/=numTests;
  System.out.printf("Final: distanceCutoff: %f estNumClusters: %f\n",avgDistanceCutoff,avgNumClusters);
}
