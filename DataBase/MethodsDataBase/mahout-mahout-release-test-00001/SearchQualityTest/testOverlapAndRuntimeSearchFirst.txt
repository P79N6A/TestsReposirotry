@Test public void testOverlapAndRuntimeSearchFirst(){
  searcher.clear();
  searcher.addAll(dataPoints);
  Pair<List<WeightedThing<Vector>>,Long> results=getResultsAndRuntimeSearchFirst(searcher,queries);
  int numFirstMatches=0;
  for (int i=0; i < queries.numRows(); ++i) {
    WeightedThing<Vector> referenceVector=referenceSearchFirst.getFirst().get(i);
    WeightedThing<Vector> resultVector=results.getFirst().get(i);
    if (referenceVector.getValue().equals(resultVector.getValue())) {
      ++numFirstMatches;
    }
  }
  double bruteSearchAvgTime=reference.getSecond() / (queries.numRows() * 1.0);
  double searcherAvgTime=results.getSecond() / (queries.numRows() * 1.0);
  System.out.printf("%s: first matches %d [%d]; avg_time(1 query) %f(s) [%f]\n",searcher.getClass().getName(),numFirstMatches,queries.numRows(),searcherAvgTime,bruteSearchAvgTime);
  assertEquals("Closest vector returned doesn't match",queries.numRows(),numFirstMatches);
  assertTrue("Searcher " + searcher.getClass().getName() + " slower than brute",bruteSearchAvgTime > searcherAvgTime);
}
