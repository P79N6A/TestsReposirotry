@Test public void testOverlapAndRuntime(){
  searcher.clear();
  searcher.addAll(dataPoints);
  Pair<List<List<WeightedThing<Vector>>>,Long> results=getResultsAndRuntime(searcher,queries);
  int numFirstMatches=0;
  int numMatches=0;
  StripWeight stripWeight=new StripWeight();
  for (int i=0; i < queries.numRows(); ++i) {
    List<WeightedThing<Vector>> referenceVectors=reference.getFirst().get(i);
    List<WeightedThing<Vector>> resultVectors=results.getFirst().get(i);
    if (referenceVectors.get(0).getValue().equals(resultVectors.get(0).getValue())) {
      ++numFirstMatches;
    }
    for (    Vector v : Iterables.transform(referenceVectors,stripWeight)) {
      for (      Vector w : Iterables.transform(resultVectors,stripWeight)) {
        if (v.equals(w)) {
          ++numMatches;
        }
      }
    }
  }
  double bruteSearchAvgTime=reference.getSecond() / (queries.numRows() * 1.0);
  double searcherAvgTime=results.getSecond() / (queries.numRows() * 1.0);
  System.out.printf("%s: first matches %d [%d]; total matches %d [%d]; avg_time(1 query) %f(s) [%f]\n",searcher.getClass().getName(),numFirstMatches,queries.numRows(),numMatches,queries.numRows() * NUM_RESULTS,searcherAvgTime,bruteSearchAvgTime);
  assertEquals("Closest vector returned doesn't match",queries.numRows(),numFirstMatches);
  assertTrue("Searcher " + searcher.getClass().getName() + " slower than brute",bruteSearchAvgTime > searcherAvgTime);
}
