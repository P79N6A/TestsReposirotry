@Test public void iris() throws IOException {
  RandomUtils.useTestSeed();
  Splitter onComma=Splitter.on(",");
  List<String> raw=Resources.readLines(Resources.getResource("iris.csv"),Charsets.UTF_8);
  List<Vector> data=Lists.newArrayList();
  List<Integer> target=Lists.newArrayList();
  Dictionary dict=new Dictionary();
  List<Integer> order=Lists.newArrayList();
  for (  String line : raw.subList(1,raw.size())) {
    order.add(order.size());
    Vector v=new DenseVector(5);
    v.set(0,1);
    int i=1;
    Iterable<String> values=onComma.split(line);
    for (    String value : Iterables.limit(values,4)) {
      v.set(i++,Double.parseDouble(value));
    }
    data.add(v);
    target.add(dict.intern(Iterables.get(values,4)));
  }
  Random random=RandomUtils.getRandom();
  Collections.shuffle(order,random);
  List<Integer> train=order.subList(0,100);
  List<Integer> test=order.subList(100,150);
  logger.warn("Training set = {}",train);
  logger.warn("Test set = {}",test);
  int[] correct=new int[test.size() + 1];
  for (int run=0; run < 200; run++) {
    OnlineLogisticRegression lr=new OnlineLogisticRegression(3,5,new L2(1));
    for (int pass=0; pass < 30; pass++) {
      Collections.shuffle(train,random);
      for (      int k : train) {
        lr.train(target.get(k),data.get(k));
      }
    }
    int x=0;
    int[] count=new int[3];
    for (    Integer k : test) {
      int r=lr.classifyFull(data.get(k)).maxValueIndex();
      count[r]++;
      x+=r == target.get(k) ? 1 : 0;
    }
    correct[x]++;
  }
  for (int i=0; i < Math.floor(0.95 * test.size()); i++) {
    assertEquals(String.format("%d trials had unacceptable accuracy of only %.0f%%: ",correct[i],100.0 * i / test.size()),0,correct[i]);
  }
  assertEquals(String.format("%d trials had unrealistic accuracy of 100%%",correct[test.size() - 1]),0,correct[test.size()]);
}
