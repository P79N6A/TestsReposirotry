/** 
 * Verifies that a classifier with known coefficients does the right thing.
 */
@Test public void testClassify(){
  OnlineLogisticRegression lr=new OnlineLogisticRegression(3,2,new L2(1));
  lr.setBeta(0,0,-1);
  lr.setBeta(1,0,-2);
  Vector v=lr.classify(new DenseVector(new double[]{0,0}));
  assertEquals(1 / 3.0,v.get(0),1.0e-8);
  assertEquals(1 / 3.0,v.get(1),1.0e-8);
  v=lr.classifyFull(new DenseVector(new double[]{0,0}));
  assertEquals(1.0,v.zSum(),1.0e-8);
  assertEquals(1 / 3.0,v.get(0),1.0e-8);
  assertEquals(1 / 3.0,v.get(1),1.0e-8);
  assertEquals(1 / 3.0,v.get(2),1.0e-8);
  v=lr.classify(new DenseVector(new double[]{0,1}));
  assertEquals(1 / 3.0,v.get(0),1.0e-3);
  assertEquals(1 / 3.0,v.get(1),1.0e-3);
  v=lr.classifyFull(new DenseVector(new double[]{0,1}));
  assertEquals(1.0,v.zSum(),1.0e-8);
  assertEquals(1 / 3.0,v.get(0),1.0e-3);
  assertEquals(1 / 3.0,v.get(1),1.0e-3);
  assertEquals(1 / 3.0,v.get(2),1.0e-3);
  v=lr.classify(new DenseVector(new double[]{1,0}));
  assertEquals(Math.exp(-1) / (1 + Math.exp(-1) + Math.exp(-2)),v.get(0),1.0e-8);
  assertEquals(Math.exp(-2) / (1 + Math.exp(-1) + Math.exp(-2)),v.get(1),1.0e-8);
  v=lr.classifyFull(new DenseVector(new double[]{1,0}));
  assertEquals(1.0,v.zSum(),1.0e-8);
  assertEquals(1 / (1 + Math.exp(-1) + Math.exp(-2)),v.get(0),1.0e-8);
  assertEquals(Math.exp(-1) / (1 + Math.exp(-1) + Math.exp(-2)),v.get(1),1.0e-8);
  assertEquals(Math.exp(-2) / (1 + Math.exp(-1) + Math.exp(-2)),v.get(2),1.0e-8);
  lr.setBeta(0,1,1);
  v=lr.classifyFull(new DenseVector(new double[]{1,1}));
  assertEquals(1.0,v.zSum(),1.0e-8);
  assertEquals(Math.exp(0) / (1 + Math.exp(0) + Math.exp(-2)),v.get(1),1.0e-3);
  assertEquals(Math.exp(-2) / (1 + Math.exp(0) + Math.exp(-2)),v.get(2),1.0e-3);
  assertEquals(1 / (1 + Math.exp(0) + Math.exp(-2)),v.get(0),1.0e-3);
  lr.setBeta(1,1,3);
  v=lr.classifyFull(new DenseVector(new double[]{1,1}));
  assertEquals(1.0,v.zSum(),1.0e-8);
  assertEquals(Math.exp(0) / (1 + Math.exp(0) + Math.exp(1)),v.get(1),1.0e-8);
  assertEquals(Math.exp(1) / (1 + Math.exp(0) + Math.exp(1)),v.get(2),1.0e-8);
  assertEquals(1 / (1 + Math.exp(0) + Math.exp(1)),v.get(0),1.0e-8);
}
