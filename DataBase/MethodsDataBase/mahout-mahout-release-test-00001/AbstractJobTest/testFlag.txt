@Test public void testFlag() throws Exception {
  final Map<String,List<String>> testMap=Maps.newHashMap();
  AbstractJobFactory fact=new AbstractJobFactory(){
    @Override public AbstractJob getJob(){
      return new AbstractJob(){
        @Override public int run(        String[] args) throws IOException {
          addFlag("testFlag","t","a simple test flag");
          Map<String,List<String>> argMap=parseArguments(args);
          testMap.clear();
          testMap.putAll(argMap);
          return 1;
        }
      }
;
    }
  }
;
  ToolRunner.run(fact.getJob(),new String[0]);
  assertFalse("test map for absent flag",testMap.containsKey("--testFlag"));
  String[] withFlag={"--testFlag"};
  ToolRunner.run(fact.getJob(),withFlag);
  assertTrue("test map for present flag",testMap.containsKey("--testFlag"));
}
