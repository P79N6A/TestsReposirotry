@Test public void testDeleteAndUpdate(){
  Random rand=RandomUtils.getRandom();
  Multinomial<Integer> table=new Multinomial<>();
  assertEquals(0,table.getWeight(),1.0e-9);
  double total=0;
  double[] p=new double[10];
  for (int i=0; i < 10; i++) {
    p[i]=rand.nextDouble();
    table.add(i,p[i]);
    total+=p[i];
    assertEquals(total,table.getWeight(),1.0e-9);
  }
  assertEquals(total,table.getWeight(),1.0e-9);
  checkSelfConsistent(table);
  double delta=p[7] + p[8];
  table.delete(7);
  p[7]=0;
  table.set(8,0);
  p[8]=0;
  total-=delta;
  checkSelfConsistent(table);
  assertEquals(total,table.getWeight(),1.0e-9);
  for (int i=0; i < 10; i++) {
    assertEquals(p[i],table.getWeight(i),0);
    assertEquals(p[i] / total,table.getProbability(i),1.0e-10);
  }
  table.set(9,5.1);
  total-=p[9];
  p[9]=5.1;
  total+=5.1;
  assertEquals(total,table.getWeight(),1.0e-9);
  for (int i=0; i < 10; i++) {
    assertEquals(p[i],table.getWeight(i),0);
    assertEquals(p[i] / total,table.getProbability(i),1.0e-10);
  }
  checkSelfConsistent(table);
  for (int i=0; i < 10; i++) {
    assertEquals(p[i],table.getWeight(i),0);
  }
}
