@Test public void testGramKeySort(){
  byte[] foo={1};
  byte[] empty=new byte[0];
  GramKey[] input={new GramKey(new Gram("bar",1,Gram.Type.UNIGRAM),empty),new GramKey(new Gram("bar",1,Gram.Type.UNIGRAM),empty),new GramKey(new Gram("bar",1,Gram.Type.UNIGRAM),foo),new GramKey(new Gram("bar",8,Gram.Type.NGRAM),foo),new GramKey(new Gram("bar",8,Gram.Type.NGRAM),empty),new GramKey(new Gram("foo",2,Gram.Type.HEAD),foo),new GramKey(new Gram("foo",3,Gram.Type.HEAD),empty),new GramKey(new Gram("foo",4,Gram.Type.TAIL),foo),new GramKey(new Gram("foo",5,Gram.Type.TAIL),foo),new GramKey(new Gram("bar",6,Gram.Type.HEAD),foo),new GramKey(new Gram("bar",7,Gram.Type.TAIL),empty)};
  int[] expect={9,6,5,10,7,8,0,1,2,4,3};
  GramKey[] sorted=new GramKey[input.length];
  System.arraycopy(input,0,sorted,0,input.length);
  Arrays.sort(sorted);
  for (int i=0; i < input.length; i++) {
    assertSame(input[expect[i]],sorted[i]);
  }
}
