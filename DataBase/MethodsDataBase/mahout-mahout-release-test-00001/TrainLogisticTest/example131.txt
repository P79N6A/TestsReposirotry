@Test public void example131() throws Exception {
  String outputFile=getTestTempFile("model").getAbsolutePath();
  StringWriter sw=new StringWriter();
  PrintWriter pw=new PrintWriter(sw,true);
  TrainLogistic.mainToOutput(new String[]{"--input","donut.csv","--output",outputFile,"--target","color","--categories","2","--predictors","x","y","--types","numeric","--features","20","--passes","100","--rate","50"},pw);
  String trainOut=sw.toString();
  assertTrue(trainOut.contains("x -0.7"));
  assertTrue(trainOut.contains("y -0.4"));
  LogisticModelParameters lmp=TrainLogistic.getParameters();
  assertEquals(1.0e-4,lmp.getLambda(),1.0e-9);
  assertEquals(20,lmp.getNumFeatures());
  assertTrue(lmp.useBias());
  assertEquals("color",lmp.getTargetVariable());
  CsvRecordFactory csv=lmp.getCsvRecordFactory();
  assertEquals("[1, 2]",new TreeSet<>(csv.getTargetCategories()).toString());
  assertEquals("[Intercept Term, x, y]",Sets.newTreeSet(csv.getPredictors()).toString());
  AbstractVectorClassifier model=TrainLogistic.getModel();
  List<String> data=Resources.readLines(Resources.getResource("donut.csv"),Charsets.UTF_8);
  Map<String,Double> expectedValues=ImmutableMap.of("x",-0.7,"y",-0.43,"Intercept Term",-0.15);
  verifyModel(lmp,csv,data,model,expectedValues);
  try (InputStream in=new FileInputStream(new File(outputFile))){
    LogisticModelParameters lmpOut=LogisticModelParameters.loadFrom(in);
    CsvRecordFactory csvOut=lmpOut.getCsvRecordFactory();
    csvOut.firstLine(data.get(0));
    OnlineLogisticRegression lrOut=lmpOut.createRegression();
    verifyModel(lmpOut,csvOut,data,lrOut,expectedValues);
  }
   sw=new StringWriter();
  pw=new PrintWriter(sw,true);
  RunLogistic.mainToOutput(new String[]{"--input","donut.csv","--model",outputFile,"--auc","--confusion"},pw);
  trainOut=sw.toString();
  assertTrue(trainOut.contains("AUC = 0.57"));
  assertTrue(trainOut.contains("confusion: [[27.0, 13.0], [0.0, 0.0]]"));
}
