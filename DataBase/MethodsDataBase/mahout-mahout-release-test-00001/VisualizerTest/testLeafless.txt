@Test public void testLeafless() throws Exception {
  List<Instance> instances=new ArrayList<>();
  for (int i=0; i < trainingData.size(); i++) {
    if (trainingData.get(i).get(0) != 0.0d) {
      instances.add(trainingData.get(i));
    }
  }
  Data lessData=new Data(trainingData.getDataset(),instances);
  DecisionTreeBuilder builder=new DecisionTreeBuilder();
  builder.setM(trainingData.getDataset().nbAttributes() - 1);
  builder.setMinSplitNum(0);
  builder.setComplemented(false);
  Node tree=builder.build(randomNumberGenerator,lessData);
  String visualization=TreeVisualizer.toString(tree,trainingData.getDataset(),ATTRIBUTE_NAMES);
  assertTrue((String.format("\noutlook = sunny\n" + "|   humidity < 77%s5 : yes\n" + "|   humidity >= 77%s5 : no\n"+ "outlook = overcast : yes",DECIMAL_SEPARATOR,DECIMAL_SEPARATOR)).equals(visualization) || (String.format("\noutlook = overcast : yes\n" + "outlook = sunny\n" + "|   humidity < 77%s5 : yes\n"+ "|   humidity >= 77%s5 : no",DECIMAL_SEPARATOR,DECIMAL_SEPARATOR)).equals(visualization));
}
