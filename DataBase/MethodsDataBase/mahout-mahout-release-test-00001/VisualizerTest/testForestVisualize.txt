@Test public void testForestVisualize() throws Exception {
  NumericalNode root=new NumericalNode(2,90,new Leaf(0),new CategoricalNode(0,new double[]{0,1,2},new Node[]{new NumericalNode(1,71,new Leaf(0),new Leaf(1)),new Leaf(1),new Leaf(0)}));
  List<Node> trees=new ArrayList<>();
  trees.add(root);
  DecisionForest forest=new DecisionForest(trees);
  String visualization=ForestVisualizer.toString(forest,trainingData.getDataset(),null);
  assertTrue(("Tree[1]:\n2 < 90 : yes\n2 >= 90\n" + "|   0 = rainy\n" + "|   |   1 < 71 : yes\n"+ "|   |   1 >= 71 : no\n"+ "|   0 = sunny : no\n"+ "|   0 = overcast : yes\n").equals(visualization) || ("Tree[1]:\n" + "2 < 90 : no\n" + "2 >= 90\n"+ "|   0 = rainy\n"+ "|   |   1 < 71 : no\n"+ "|   |   1 >= 71 : yes\n"+ "|   0 = overcast : yes\n"+ "|   0 = sunny : no\n").equals(visualization));
  visualization=ForestVisualizer.toString(forest,trainingData.getDataset(),ATTRIBUTE_NAMES);
  assertTrue(("Tree[1]:\n" + "humidity < 90 : yes\n" + "humidity >= 90\n"+ "|   outlook = rainy\n"+ "|   |   temperature < 71 : yes\n"+ "|   |   temperature >= 71 : no\n"+ "|   outlook = sunny : no\n"+ "|   outlook = overcast : yes\n").equals(visualization) || ("Tree[1]:\n" + "humidity < 90 : no\n" + "humidity >= 90\n"+ "|   outlook = rainy\n"+ "|   |   temperature < 71 : no\n"+ "|   |   temperature >= 71 : yes\n"+ "|   outlook = overcast : yes\n"+ "|   outlook = sunny : no\n").equals(visualization));
}
