@Test public void testRemoval(){
  searcher.clear();
  searcher.addAllMatrixSlices(dataPoints);
  if (searcher instanceof UpdatableSearcher) {
    List<Vector> x=Lists.newArrayList(Iterables.limit(searcher,2));
    int size0=searcher.size();
    List<WeightedThing<Vector>> r0=searcher.search(x.get(0),2);
    searcher.remove(x.get(0),1.0e-7);
    assertEquals(size0 - 1,searcher.size());
    List<WeightedThing<Vector>> r=searcher.search(x.get(0),1);
    assertTrue("Vector should be gone",r.get(0).getWeight() > 0);
    assertEquals("Previous second neighbor should be first",0,r.get(0).getValue().minus(r0.get(1).getValue()).norm(1),1.0e-8);
    searcher.remove(x.get(1),1.0e-7);
    assertEquals(size0 - 2,searcher.size());
    r=searcher.search(x.get(1),1);
    assertTrue("Vector should be gone",r.get(0).getWeight() > 0);
    for (    Vector v : searcher) {
      assertTrue(x.get(0).minus(v).norm(1) > 1.0e-6);
      assertTrue(x.get(1).minus(v).norm(1) > 1.0e-6);
    }
  }
 else {
    try {
      List<Vector> x=Lists.newArrayList(Iterables.limit(searcher,2));
      searcher.remove(x.get(0),1.0e-7);
      fail("Shouldn't be able to delete from " + searcher.getClass().getName());
    }
 catch (    UnsupportedOperationException e) {
    }
  }
}
