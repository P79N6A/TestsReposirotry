@Test public void testChangingAccessTokenSendsBroadcast(){
  AccessTokenManager accessTokenManager=createAccessTokenManager();
  AccessToken accessToken=createAccessToken();
  accessTokenManager.setCurrentAccessToken(accessToken);
  final Intent intents[]=new Intent[1];
  final BroadcastReceiver broadcastReceiver=new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      intents[0]=intent;
    }
  }
;
  localBroadcastManager.registerReceiver(broadcastReceiver,new IntentFilter(AccessTokenManager.ACTION_CURRENT_ACCESS_TOKEN_CHANGED));
  AccessToken anotherAccessToken=createAccessToken("another string","1000");
  accessTokenManager.setCurrentAccessToken(anotherAccessToken);
  localBroadcastManager.unregisterReceiver(broadcastReceiver);
  Intent intent=intents[0];
  assertNotNull(intent);
  AccessToken oldAccessToken=intent.getParcelableExtra(AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN);
  AccessToken newAccessToken=intent.getParcelableExtra(AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN);
  assertEquals(accessToken.getToken(),oldAccessToken.getToken());
  assertEquals(anotherAccessToken.getToken(),newAccessToken.getToken());
}
