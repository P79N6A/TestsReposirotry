@Test public void testGetTokenHandlesSuccessWithAllPermissions(){
  Bundle bundle=new Bundle();
  bundle.putStringArrayList(NativeProtocol.EXTRA_PERMISSIONS,new ArrayList<String>(PERMISSIONS));
  bundle.putLong(NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH,new Date().getTime() / 1000 + EXPIRES_IN_DELTA);
  bundle.putString(NativeProtocol.EXTRA_ACCESS_TOKEN,ACCESS_TOKEN);
  bundle.putString(NativeProtocol.EXTRA_USER_ID,USER_ID);
  GetTokenLoginMethodHandler handler=new GetTokenLoginMethodHandler(mockLoginClient);
  LoginClient.Request request=createRequest();
  handler.getTokenCompleted(request,bundle);
  ArgumentCaptor<LoginClient.Result> resultArgumentCaptor=ArgumentCaptor.forClass(LoginClient.Result.class);
  verify(mockLoginClient,times(1)).completeAndValidate(resultArgumentCaptor.capture());
  LoginClient.Result result=resultArgumentCaptor.getValue();
  assertNotNull(result);
  assertEquals(LoginClient.Result.Code.SUCCESS,result.code);
  AccessToken token=result.token;
  assertNotNull(token);
  assertEquals(ACCESS_TOKEN,token.getToken());
  assertDateDiffersWithinDelta(new Date(),token.getExpires(),EXPIRES_IN_DELTA * 1000,1000);
  TestUtils.assertSamePermissions(PERMISSIONS,token.getPermissions());
}
