@Test public void testFinishShareToMessengerWith20150314Protocol() throws Exception {
  Intent originalIntent=new Intent();
  originalIntent.addCategory("com.facebook.orca.category.PLATFORM_THREAD_20150314");
  Bundle extrasBundle=setupIntentWithAppLinkExtrasBundle(originalIntent);
  extrasBundle.putString("com.facebook.orca.extra.THREAD_TOKEN","thread_token");
  extrasBundle.putString("com.facebook.orca.extra.METADATA","{}");
  extrasBundle.putString("com.facebook.orca.extra.PARTICIPANTS","100,400,500");
  when(mMockActivity.getIntent()).thenReturn(originalIntent);
  Uri uri=Uri.parse("file:///foo.jpeg");
  Uri externalUri=Uri.parse("http://example.com/foo.jpeg");
  ShareToMessengerParams params=ShareToMessengerParams.newBuilder(uri,"image/jpeg").setMetaData("{}").setExternalUri(externalUri).build();
  MessengerUtils.finishShareToMessenger(mMockActivity,params);
  ArgumentCaptor<Intent> intentArgumentCaptor=ArgumentCaptor.forClass(Intent.class);
  verify(mMockActivity).setResult(eq(Activity.RESULT_OK),intentArgumentCaptor.capture());
  verify(mMockActivity).finish();
  Intent intent=intentArgumentCaptor.getValue();
  assertNotNull(intent);
  assertEquals(Intent.FLAG_GRANT_READ_URI_PERMISSION,intent.getFlags());
  assertEquals(20150314,intent.getIntExtra("com.facebook.orca.extra.PROTOCOL_VERSION",-1));
  assertEquals("thread_token",intent.getStringExtra("com.facebook.orca.extra.THREAD_TOKEN"));
  assertEquals(uri,intent.getData());
  assertEquals("image/jpeg",intent.getType());
  assertEquals("200",intent.getStringExtra("com.facebook.orca.extra.APPLICATION_ID"));
  assertEquals("{}",intent.getStringExtra("com.facebook.orca.extra.METADATA"));
  assertEquals(externalUri,intent.getParcelableExtra("com.facebook.orca.extra.EXTERNAL_URI"));
}
