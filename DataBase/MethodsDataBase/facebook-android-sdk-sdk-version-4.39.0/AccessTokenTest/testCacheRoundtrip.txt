@Test public void testCacheRoundtrip(){
  Set<String> permissions=Utility.hashSet("stream_publish","go_outside_and_play");
  Set<String> declinedPermissions=Utility.hashSet("no you may not","no soup for you");
  String token="AnImaginaryTokenValue";
  Date later=TestUtils.nowPlusSeconds(60);
  Date earlier=TestUtils.nowPlusSeconds(-60);
  String applicationId="1234";
  Bundle bundle=new Bundle();
  LegacyTokenHelper.putToken(bundle,token);
  LegacyTokenHelper.putExpirationDate(bundle,later);
  LegacyTokenHelper.putSource(bundle,AccessTokenSource.FACEBOOK_APPLICATION_WEB);
  LegacyTokenHelper.putLastRefreshDate(bundle,earlier);
  LegacyTokenHelper.putPermissions(bundle,permissions);
  LegacyTokenHelper.putDeclinedPermissions(bundle,declinedPermissions);
  LegacyTokenHelper.putApplicationId(bundle,applicationId);
  AccessToken accessToken=AccessToken.createFromLegacyCache(bundle);
  TestUtils.assertSamePermissions(permissions,accessToken);
  assertEquals(token,accessToken.getToken());
  assertEquals(AccessTokenSource.FACEBOOK_APPLICATION_WEB,accessToken.getSource());
  assertTrue(!accessToken.isExpired());
  Bundle cache=AccessTokenTestHelper.toLegacyCacheBundle(accessToken);
  TestUtils.assertEqualContentsWithoutOrder(bundle,cache);
}
