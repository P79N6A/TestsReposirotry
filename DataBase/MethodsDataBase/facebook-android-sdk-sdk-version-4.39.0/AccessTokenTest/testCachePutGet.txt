@Test public void testCachePutGet(){
  Bundle bundle=new Bundle();
  for (  String token : new String[]{"","A completely random token value"}) {
    LegacyTokenHelper.putToken(bundle,token);
    assertEquals(token,LegacyTokenHelper.getToken(bundle));
  }
  for (  Date date : new Date[]{new Date(42),new Date()}) {
    LegacyTokenHelper.putExpirationDate(bundle,date);
    assertEquals(date,LegacyTokenHelper.getExpirationDate(bundle));
    LegacyTokenHelper.putLastRefreshDate(bundle,date);
    assertEquals(date,LegacyTokenHelper.getLastRefreshDate(bundle));
  }
  for (  long milliseconds : new long[]{0,-1,System.currentTimeMillis()}) {
    LegacyTokenHelper.putExpirationMilliseconds(bundle,milliseconds);
    assertEquals(milliseconds,LegacyTokenHelper.getExpirationMilliseconds(bundle));
    LegacyTokenHelper.putLastRefreshMilliseconds(bundle,milliseconds);
    assertEquals(milliseconds,LegacyTokenHelper.getLastRefreshMilliseconds(bundle));
  }
  for (  AccessTokenSource source : AccessTokenSource.values()) {
    LegacyTokenHelper.putSource(bundle,source);
    assertEquals(source,LegacyTokenHelper.getSource(bundle));
  }
  String userId="1000";
  List<String> normalList=Arrays.asList("","Another completely random token value");
  List<String> emptyList=Collections.emptyList();
  HashSet<String> normalArrayList=new HashSet<String>(normalList);
  HashSet<String> emptyArrayList=new HashSet<String>();
  @SuppressWarnings("unchecked") List<Collection<String>> permissionLists=Arrays.asList(normalList,emptyList,normalArrayList,emptyArrayList);
  for (  Collection<String> list : permissionLists) {
    LegacyTokenHelper.putPermissions(bundle,list);
    TestUtils.assertSamePermissions(list,LegacyTokenHelper.getPermissions(bundle));
  }
  normalArrayList.add(null);
}
