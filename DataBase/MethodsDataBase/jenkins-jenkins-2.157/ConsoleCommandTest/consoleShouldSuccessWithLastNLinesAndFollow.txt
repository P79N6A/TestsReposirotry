@Test public void consoleShouldSuccessWithLastNLinesAndFollow() throws Exception {
  FreeStyleProject project=j.createFreeStyleProject("aProject");
  if (Functions.isWindows()) {
    project.getBuildersList().add(new BatchFile("echo 1\r\necho 2\r\necho 3\r\necho 4\r\necho 5\r\n" + "ping -n 10 127.0.0.1 >nul\r\necho 6\r\necho 7\r\necho 8\r\necho 9"));
  }
 else {
    project.getBuildersList().add(new Shell("echo 1\necho 2\necho 3\necho 4\necho 5\n" + "sleep 10s\n" + "echo 6\necho 7\necho 8\necho 9"));
  }
  if (!project.scheduleBuild(0)) {
    fail("Job wasn't scheduled properly");
  }
  while (!project.isBuilding()) {
    System.out.println("Waiting for build to start and sleep 1s...");
    Thread.sleep(1000);
  }
  if (!project.getBuildByNumber(1).getLog().contains("echo 5")) {
    Thread.sleep(1000);
  }
  assertThat(project.getBuildByNumber(1).getLog(),containsString("echo 5"));
  assertThat(project.getBuildByNumber(1).getLog(),not(containsString("echo 6")));
  CLICommandInvoker.Result result=command.authorizedTo(Jenkins.READ,Job.READ,Item.BUILD).invokeWithArgs("aProject","1","-f","-n",Functions.isWindows() ? "5" : "4");
  assertThat(result,succeeded());
  assertThat(result.stdout(),not(containsString("echo 1")));
  assertThat(result.stdout(),containsString("echo 5"));
  assertThat(result.stdout(),containsString("echo 6"));
  assertThat(result.stdout(),containsString("echo 9"));
  assertThat(project.getBuildByNumber(1).isBuilding(),equalTo(false));
  assertThat(project.getBuildByNumber(1).getResult(),equalTo(Result.SUCCESS));
  assertThat(project.getBuildByNumber(1).getLog(),containsString("echo 9"));
}
