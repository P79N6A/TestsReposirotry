/** 
 * Test newerThan (page up) mid range nearer the newest build in the list. This works a little different in that it will put the 2 builds newer than newerThan on the page and then fill the remaining slots on the page with builds equal to and older i.e. it return the newest/latest builds.
 */
@Test public void test_newerThan_near_newest() throws IOException {
  HistoryPageFilter<ModelObject> historyPageFilter=newPage(5,8L,null);
  List<ModelObject> itemList=newRuns(1,10);
  historyPageFilter.add(itemList);
  Assert.assertEquals(false,historyPageFilter.hasUpPage);
  Assert.assertEquals(true,historyPageFilter.hasDownPage);
  Assert.assertEquals(5,historyPageFilter.runs.size());
  Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.newestOnPage);
  Assert.assertEquals(HistoryPageEntry.getEntryId(6),historyPageFilter.oldestOnPage);
}
