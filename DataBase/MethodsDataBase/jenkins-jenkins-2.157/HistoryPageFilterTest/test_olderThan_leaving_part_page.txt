/** 
 * Test olderThan (page down) when set to an id close to the oldest in the list (where there's less than a full page older than the supplied olderThan arg).
 */
@Test public void test_olderThan_leaving_part_page() throws IOException {
  HistoryPageFilter<ModelObject> historyPageFilter=newPage(5,null,4L);
  List<ModelObject> itemList=newRuns(1,10);
  historyPageFilter.add(itemList);
  Assert.assertEquals(true,historyPageFilter.hasUpPage);
  Assert.assertEquals(false,historyPageFilter.hasDownPage);
  Assert.assertEquals(3,historyPageFilter.runs.size());
  Assert.assertEquals(HistoryPageEntry.getEntryId(3),historyPageFilter.newestOnPage);
  Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage);
}
