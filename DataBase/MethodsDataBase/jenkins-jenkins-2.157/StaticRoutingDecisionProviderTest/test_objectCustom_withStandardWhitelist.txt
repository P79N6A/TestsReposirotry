@Test public void test_objectCustom_withStandardWhitelist() throws Exception {
  assertNotReachable("contentProvider/objectString/");
  assertFalse(ContentProvider.called);
  assertGetMethodRequestWasBlockedAndResetFlag();
  assertNotReachable("contentProvider/objectCustom/");
  assertFalse(ContentProvider.called);
  StaticRoutingDecisionProvider whitelist=ExtensionList.lookupSingleton(StaticRoutingDecisionProvider.class);
{
    Method resetMetaClassCache=StaticRoutingDecisionProvider.class.getDeclaredMethod("resetMetaClassCache");
    resetMetaClassCache.setAccessible(true);
    Field field=StaticRoutingDecisionProvider.class.getDeclaredField("whitelistSignaturesFromFixedList");
    field.setAccessible(true);
    @SuppressWarnings("unchecked") Set<String> standardWhitelist=(Set<String>)field.get(whitelist);
    standardWhitelist.add(ContentProvider.OBJECT_CUSTOM_SIGNATURE);
    resetMetaClassCache.invoke(whitelist);
  }
  assertNotReachable("contentProvider/objectString/");
  assertFalse(ContentProvider.called);
  assertFalse(ContentProvider.called2);
  assertGetMethodRequestWasBlockedAndResetFlag();
  assertReachable("contentProvider/objectCustom/");
  assertTrue(ContentProvider.called);
  assertTrue(ContentProvider.called2);
{
    ContentProvider.called=false;
    ContentProvider.called2=false;
    whitelist.reload();
  }
  assertNotReachable("contentProvider/objectString/");
  assertFalse(ContentProvider.called);
  assertNotReachable("contentProvider/objectCustom/");
  assertFalse(ContentProvider.called);
}
