@Test public void deleteBuildsShouldSuccessEvenTheBuildIsStuckInTheQueue() throws Exception {
  FreeStyleProject project=j.createFreeStyleProject("aProject");
  project.getBuildersList().add(new Shell("echo 1"));
  project.setAssignedLabel(new LabelAtom("never_created"));
  assertThat("Job wasn't scheduled properly",project.scheduleBuild(0),equalTo(true));
  Thread.sleep(1000);
  assertThat("Job wasn't scheduled properly - it isn't in the queue",project.isInQueue(),equalTo(true));
  assertThat("Job wasn't scheduled properly - it is running on non-exist node",project.isBuilding(),equalTo(false));
  final CLICommandInvoker.Result result=command.authorizedTo(Jenkins.READ,Job.READ,Run.DELETE).invokeWithArgs("aProject","1");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Deleted 0 builds"));
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).getBuilds(),hasSize(0));
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).isBuilding(),equalTo(false));
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).isInQueue(),equalTo(true));
  Jenkins.getInstance().getQueue().cancel(project);
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).getBuilds(),hasSize(0));
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).isBuilding(),equalTo(false));
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).isInQueue(),equalTo(false));
}
