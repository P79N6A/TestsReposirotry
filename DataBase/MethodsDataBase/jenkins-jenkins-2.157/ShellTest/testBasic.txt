@Test public void testBasic() throws Exception {
  Assume.assumeFalse("If we're on Windows, don't bother doing this",Functions.isWindows());
  PretendSlave s=rule.createPretendSlave(new FakeLauncher(){
    public Proc onLaunch(    ProcStarter p) throws IOException {
      List<String> cmds=p.cmds();
      rule.assertStringContains("/bin/sh",cmds.get(0));
      rule.assertStringContains("-xe",cmds.get(1));
      assertTrue(new File(cmds.get(2)).exists());
      PrintStream ps=new PrintStream(p.stdout());
      ps.println("Hudson was here");
      ps.close();
      return new FinishedProc(0);
    }
  }
);
  FreeStyleProject p=rule.createFreeStyleProject();
  p.getBuildersList().add(new Shell("echo abc"));
  p.setAssignedNode(s);
  FreeStyleBuild b=rule.assertBuildStatusSuccess(p.scheduleBuild2(0).get());
  assertEquals(1,s.numLaunch);
  assertTrue(FileUtils.readFileToString(b.getLogFile()).contains("Hudson was here"));
}
