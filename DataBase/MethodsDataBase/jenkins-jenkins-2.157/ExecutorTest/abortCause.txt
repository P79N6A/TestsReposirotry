/** 
 * Makes sure that the cause of interruption is properly recorded.
 */
@Test public void abortCause() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject();
  Future<FreeStyleBuild> r=startBlockingBuild(p);
  User johnny=User.get("Johnny");
  p.getLastBuild().getExecutor().interrupt(Result.FAILURE,new UserInterruption(johnny),new UserInterruption(johnny));
  FreeStyleBuild b=r.get();
  assertEquals(b.getResult(),Result.FAILURE);
  InterruptedBuildAction iba=b.getAction(InterruptedBuildAction.class);
  assertEquals(1,iba.getCauses().size());
  assertEquals(((UserInterruption)iba.getCauses().get(0)).getUser(),johnny);
  assertTrue(b.getLog().contains(johnny.getId()));
}
