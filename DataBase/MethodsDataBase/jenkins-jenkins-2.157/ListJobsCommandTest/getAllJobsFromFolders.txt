@Ignore("TODO enable when you figure out why ListJobsCommandTest$1Folder$$EnhancerByMockitoWithCGLIB$$f124784a calls ReturnsEmptyValues, or just use MockFolder and move to the test module with JenkinsRule") @Test public void getAllJobsFromFolders() throws Exception {
abstract class Folder implements ModifiableTopLevelItemGroup, TopLevelItem {
  }
  final Folder folder=mock(Folder.class);
  final Folder nestedFolder=mock(Folder.class);
  when(folder.getDisplayName()).thenReturn("Folder");
  when(nestedFolder.getDisplayName()).thenReturn("NestedFolder");
  final TopLevelItem job=job("job");
  final TopLevelItem nestedJob=job("nestedJob");
  when(job.hasPermission(Item.READ)).thenReturn(true);
  when(nestedJob.hasPermission(Item.READ)).thenReturn(true);
  when(job.getRelativeNameFrom((ItemGroup<TopLevelItem>)folder)).thenReturn("job");
  when(nestedJob.getRelativeNameFrom((ItemGroup<TopLevelItem>)folder)).thenReturn("nestedJob");
  when(folder.getItems()).thenReturn(Arrays.asList(nestedFolder,job));
  when(nestedFolder.getItems()).thenReturn(Arrays.asList(nestedJob));
  when(jenkins.getView("OuterFolder")).thenReturn(null);
  when(jenkins.getItemByFullName("OuterFolder")).thenReturn(folder);
  assertThat(runWith("OuterFolder"),equalTo(0));
  assertThat(stdout,listsJobs("job","nestedJob"));
  assertThat(stderr,is(empty()));
}
