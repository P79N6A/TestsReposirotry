@Test public void testSymlink() throws Exception {
  Assume.assumeFalse(Functions.isWindows());
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  StreamTaskListener l=new StreamTaskListener(baos);
  File d=tmp.getRoot();
  try {
    new FilePath(new File(d,"a")).touch(0);
    assertNull(Util.resolveSymlink(new File(d,"a")));
    Util.createSymlink(d,"a","x",l);
    assertEquals("a",Util.resolveSymlink(new File(d,"x")));
    StringBuilder buf=new StringBuilder(768);
    for (int i=0; i < 768; i++)     buf.append((char)('0' + (i % 10)));
    Util.createSymlink(d,buf.toString(),"x",l);
    String log=baos.toString();
    if (log.length() > 0)     System.err.println("log output: " + log);
    assertEquals(buf.toString(),Util.resolveSymlink(new File(d,"x")));
    File anotherDir=new File(d,"anotherDir");
    assertTrue("Couldn't create " + anotherDir,anotherDir.mkdir());
    Util.createSymlink(d,"a","anotherDir/link",l);
    assertEquals("a",Util.resolveSymlink(new File(d,"anotherDir/link")));
    File external=File.createTempFile("something","");
    try {
      Util.createSymlink(d,external.getAbsolutePath(),"outside",l);
      assertEquals(external.getAbsolutePath(),Util.resolveSymlink(new File(d,"outside")));
    }
  finally {
      assertTrue(external.delete());
    }
  }
  finally {
    Util.deleteRecursive(d);
  }
}
