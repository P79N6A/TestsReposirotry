@Test public void testRestInterfaceFailure() throws Exception {
  ApiTokenTestHelper.enableLegacyBehavior();
  Items.XSTREAM2.addCriticalField(KeywordProperty.class,"criticalField");
  User test=User.getById("test",true);
{
    FreeStyleProject p=r.createFreeStyleProject();
    p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)));
    p.save();
    r.jenkins.setSecurityRealm(r.createDummySecurityRealm());
    WebClient wc=r.createWebClient();
    wc.withBasicApiToken(test);
    WebRequest req=new WebRequest(new URL(wc.getContextPath() + String.format("%s/config.xml",p.getUrl())),HttpMethod.POST);
    req.setEncodingType(null);
    req.setRequestBody(String.format(CONFIGURATION_TEMPLATE,"badvalue",AcceptOnlySpecificKeyword.ACCEPT_KEYWORD));
    wc.getPage(req);
    assertNull(p.getProperty(KeywordProperty.class).getNonCriticalField());
    assertEquals(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,p.getProperty(KeywordProperty.class).getCriticalField().getKeyword());
    r.jenkins.reload();
    p=r.jenkins.getItemByFullName(p.getFullName(),FreeStyleProject.class);
    assertEquals("badvalue",p.getProperty(KeywordProperty.class).getNonCriticalField().getKeyword());
    assertEquals(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,p.getProperty(KeywordProperty.class).getCriticalField().getKeyword());
  }
{
    FreeStyleProject p=r.createFreeStyleProject();
    p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)));
    p.save();
    r.jenkins.setSecurityRealm(r.createDummySecurityRealm());
    WebClient wc=r.createWebClient();
    wc.withBasicApiToken(test);
    WebRequest req=new WebRequest(new URL(wc.getContextPath() + String.format("%s/config.xml",p.getUrl())),HttpMethod.POST);
    req.setEncodingType(null);
    req.setRequestBody(String.format(CONFIGURATION_TEMPLATE,AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,"badvalue"));
    try {
      wc.getPage(req);
      fail("Submitting unacceptable configuration via REST should fail.");
    }
 catch (    FailingHttpStatusCodeException e) {
    }
    assertNotEquals("badvalue",p.getProperty(KeywordProperty.class).getCriticalField().getKeyword());
    r.jenkins.reload();
    p=r.jenkins.getItemByFullName(p.getFullName(),FreeStyleProject.class);
    assertNotEquals("badvalue",p.getProperty(KeywordProperty.class).getCriticalField().getKeyword());
  }
}
