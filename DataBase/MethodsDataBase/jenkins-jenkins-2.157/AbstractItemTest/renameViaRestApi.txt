@Test public void renameViaRestApi() throws Exception {
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  MockAuthorizationStrategy mas=new MockAuthorizationStrategy();
  mas.grant(Item.READ,Jenkins.READ).everywhere().to("alice","bob");
  mas.grant(Item.CONFIGURE).everywhere().to("alice");
  j.jenkins.setAuthorizationStrategy(mas);
  FreeStyleProject p=j.createFreeStyleProject("foo");
  WebClient w=j.createWebClient();
  WebRequest wr=new WebRequest(w.createCrumbedUrl(p.getUrl() + "confirmRename"),HttpMethod.POST);
  wr.setRequestParameters(Arrays.asList(new NameValuePair("newName","bar")));
  w.login("alice","alice");
  assertThat(getPath(w.getPage(wr).getUrl()),equalTo(p.getUrl()));
  assertThat(p.getName(),equalTo("bar"));
  wr=new WebRequest(w.createCrumbedUrl(p.getUrl() + "confirmRename"),HttpMethod.POST);
  wr.setRequestParameters(Arrays.asList(new NameValuePair("newName","baz")));
  w.login("bob","bob");
  try {
    assertThat(getPath(w.getPage(wr).getUrl()),equalTo(p.getUrl()));
    fail("Expecting HTTP 403 Forbidden");
  }
 catch (  FailingHttpStatusCodeException e) {
    assertThat(e.getStatusCode(),equalTo(403));
  }
  assertThat(p.getName(),equalTo("bar"));
}
