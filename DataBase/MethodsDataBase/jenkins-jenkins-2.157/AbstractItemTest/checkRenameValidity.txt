@Test public void checkRenameValidity() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject("foo");
  p.getBuildersList().add(new SleepBuilder(10));
  j.createFreeStyleProject("foo-exists");
  assertThat(checkNameAndReturnError(p,""),equalTo(Messages.Hudson_NoName()));
  assertThat(checkNameAndReturnError(p,".."),equalTo(Messages.Jenkins_NotAllowedName("..")));
  assertThat(checkNameAndReturnError(p,"50%"),equalTo(Messages.Hudson_UnsafeChar('%')));
  assertThat(checkNameAndReturnError(p,"foo"),equalTo(Messages.AbstractItem_NewNameUnchanged()));
  assertThat(checkNameAndReturnError(p,"foo-exists"),equalTo(Messages.AbstractItem_NewNameInUse("foo-exists")));
  j.jenkins.setProjectNamingStrategy(new ProjectNamingStrategy.PatternProjectNamingStrategy("bar","",false));
  assertThat(checkNameAndReturnError(p,"foo1"),equalTo(jenkins.model.Messages.Hudson_JobNameConventionNotApplyed("foo1","bar")));
  p.scheduleBuild2(0).waitForStart();
  assertThat(checkNameAndReturnError(p,"bar"),equalTo(Messages.Job_NoRenameWhileBuilding()));
}
