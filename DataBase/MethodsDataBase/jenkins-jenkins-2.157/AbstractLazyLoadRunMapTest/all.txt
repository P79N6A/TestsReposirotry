@Issue("JENKINS-18065") @Test public void all() throws Exception {
  assertEquals("[]",a.getLoadedBuilds().keySet().toString());
  Set<Map.Entry<Integer,Build>> entries=a.entrySet();
  assertEquals("[]",a.getLoadedBuilds().keySet().toString());
  assertFalse(entries.isEmpty());
  assertEquals("5 since it is the latest","[5]",a.getLoadedBuilds().keySet().toString());
  assertEquals(5,a.getById("5").n);
  assertEquals("[5]",a.getLoadedBuilds().keySet().toString());
  assertEquals(1,a.getByNumber(1).n);
  assertEquals("[5, 1]",a.getLoadedBuilds().keySet().toString());
  a.purgeCache();
  assertEquals("[]",a.getLoadedBuilds().keySet().toString());
  Iterator<Map.Entry<Integer,Build>> iterator=entries.iterator();
  assertEquals("[5]",a.getLoadedBuilds().keySet().toString());
  assertTrue(iterator.hasNext());
  assertEquals("[5]",a.getLoadedBuilds().keySet().toString());
  Map.Entry<Integer,Build> entry=iterator.next();
  assertEquals("[5, 3]",a.getLoadedBuilds().keySet().toString());
  assertEquals(5,entry.getKey().intValue());
  assertEquals("[5, 3]",a.getLoadedBuilds().keySet().toString());
  assertEquals(5,entry.getValue().n);
  assertEquals("[5, 3]",a.getLoadedBuilds().keySet().toString());
  assertTrue(iterator.hasNext());
  entry=iterator.next();
  assertEquals(3,entry.getKey().intValue());
  assertEquals(".next() precomputes the one after that too","[5, 3, 1]",a.getLoadedBuilds().keySet().toString());
  assertEquals(3,entry.getValue().n);
  assertEquals("[5, 3, 1]",a.getLoadedBuilds().keySet().toString());
  assertTrue(iterator.hasNext());
  entry=iterator.next();
  assertEquals(1,entry.getKey().intValue());
  assertEquals("[5, 3, 1]",a.getLoadedBuilds().keySet().toString());
  assertEquals(1,entry.getValue().n);
  assertEquals("[5, 3, 1]",a.getLoadedBuilds().keySet().toString());
  assertFalse(iterator.hasNext());
}
