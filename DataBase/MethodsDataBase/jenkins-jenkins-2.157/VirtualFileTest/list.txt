@Issue("JENKINS-26810") @Test public void list() throws Exception {
  File root=tmp.getRoot();
  FilePath rootF=new FilePath(root);
  Set<String> paths=ImmutableSet.of("top.txt","sub/mid.txt","sub/subsub/lowest.txt",".hg/config.txt","very/deep/path/here");
  for (  String path : paths) {
    rootF.child(path).write("",null);
  }
  for (  VirtualFile vf : new VirtualFile[]{VirtualFile.forFile(root),VirtualFile.forFilePath(rootF),new Ram(paths.stream().map(p -> "/" + p).collect(Collectors.toSet()),"")}) {
    System.err.println("testing " + vf.getClass().getName());
    assertEquals("[.hg/config.txt, sub/mid.txt, sub/subsub/lowest.txt, top.txt]",new TreeSet<>(vf.list("**/*.txt",null,false)).toString());
    assertEquals("[sub/mid.txt, sub/subsub/lowest.txt, top.txt]",new TreeSet<>(vf.list("**/*.txt",null,true)).toString());
    assertEquals("[.hg/config.txt, sub/mid.txt, sub/subsub/lowest.txt, top.txt, very/deep/path/here]",new TreeSet<>(vf.list("**",null,false)).toString());
    assertEquals("[]",new TreeSet<>(vf.list("",null,false)).toString());
    assertEquals("[sub/mid.txt, sub/subsub/lowest.txt]",new TreeSet<>(vf.list("sub/",null,false)).toString());
    assertEquals("[sub/mid.txt]",new TreeSet<>(vf.list("sub/","sub/subsub/",false)).toString());
    assertEquals("[sub/mid.txt]",new TreeSet<>(vf.list("sub/","sub/subsub/**",false)).toString());
    assertEquals("[sub/mid.txt]",new TreeSet<>(vf.list("sub/","**/subsub/",false)).toString());
    assertEquals("[.hg/config.txt, sub/mid.txt]",new TreeSet<>(vf.list("**/mid*,**/conf*",null,false)).toString());
    assertEquals("[sub/mid.txt, sub/subsub/lowest.txt]",new TreeSet<>(vf.list("sub/","**/notthere/",false)).toString());
    assertEquals("[top.txt]",new TreeSet<>(vf.list("*.txt",null,false)).toString());
    assertEquals("[sub/subsub/lowest.txt, top.txt, very/deep/path/here]",new TreeSet<>(vf.list("**","**/mid*,**/conf*",false)).toString());
  }
}
