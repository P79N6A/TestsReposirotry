@PresetData(PresetData.DataSet.ANONYMOUS_READONLY) @Test public void apiXml() throws Exception {
  WebClient wc=r.createWebClient();
  r.assertXPathValue(wc.goToXml("crumbIssuer/api/xml"),"//crumbRequestField",r.jenkins.getCrumbIssuer().getCrumbRequestField());
  String text=wc.goTo("crumbIssuer/api/xml?xpath=concat(//crumbRequestField,'=',//crumb)","text/plain").getWebResponse().getContentAsString();
  assertTrue(text,text.matches("\\Q" + r.jenkins.getCrumbIssuer().getCrumbRequestField() + "\\E=[0-9a-f]+"));
  text=wc.goTo("crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)","text/plain").getWebResponse().getContentAsString();
  assertTrue(text,text.matches("\\Q" + r.jenkins.getCrumbIssuer().getCrumbRequestField() + "\\E:[0-9a-f]+"));
  text=wc.goTo("crumbIssuer/api/xml?xpath=/*/crumbRequestField/text()","text/plain").getWebResponse().getContentAsString();
  assertEquals(r.jenkins.getCrumbIssuer().getCrumbRequestField(),text);
  text=wc.goTo("crumbIssuer/api/xml?xpath=/*/crumb/text()","text/plain").getWebResponse().getContentAsString();
  assertTrue(text,text.matches("[0-9a-f]+"));
  wc.assertFails("crumbIssuer/api/xml?xpath=concat('hack=\"',//crumb,'\"')",HttpURLConnection.HTTP_FORBIDDEN);
  wc.assertFails("crumbIssuer/api/xml?xpath=concat(\"hack='\",//crumb,\"'\")",HttpURLConnection.HTTP_FORBIDDEN);
  wc.assertFails("crumbIssuer/api/xml?xpath=concat('{',//crumb,':1}')",HttpURLConnection.HTTP_FORBIDDEN);
  wc.assertFails("crumbIssuer/api/xml?xpath=concat('hack.',//crumb,'=1')",HttpURLConnection.HTTP_FORBIDDEN);
  r.jenkins.getCrumbIssuer().getDescriptor().setCrumbRequestField("_crumb");
  wc.assertFails("crumbIssuer/api/xml?xpath=concat(//crumbRequestField,'=',//crumb)",HttpURLConnection.HTTP_FORBIDDEN);
}
