@Test public void cli() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject();
  p.getBuildersList().add(new TestBuilder(){
    @Override public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      URL jar=j.jenkins.servletContext.getResource("/WEB-INF/jenkins-cli.jar");
      build.getWorkspace().child("cli.jar").copyFrom(jar);
      return true;
    }
  }
);
  List<ParameterDefinition> pd=Arrays.asList(new StringParameterDefinition("a",""),new StringParameterDefinition("b",""));
  p.addProperty(new ParametersDefinitionProperty(pd));
  p.getBuildersList().add(createScriptBuilder("java -jar cli.jar -remoting -noKeyAuth set-build-parameter a b"));
  p.getBuildersList().add(createScriptBuilder("java -jar cli.jar -remoting -noKeyAuth set-build-parameter a x"));
  p.getBuildersList().add(createScriptBuilder("java -jar cli.jar -remoting -noKeyAuth set-build-parameter b y"));
  Map<String,Object> r=new TreeMap<>();
  FreeStyleBuild b=j.assertBuildStatusSuccess(p.scheduleBuild2(0));
  b.getAction(ParametersAction.class).getParameters().forEach(v -> r.put(v.getName(),v.getValue()));
  assertEquals(ImmutableMap.of("a","x","b","y"),r);
  if (Functions.isWindows()) {
    p.getBuildersList().add(new BatchFile("set BUILD_NUMBER=1\r\njava -jar cli.jar -remoting -noKeyAuth set-build-parameter a b"));
  }
 else {
    p.getBuildersList().add(new Shell("BUILD_NUMBER=1 java -jar cli.jar -remoting -noKeyAuth set-build-parameter a b"));
  }
  FreeStyleBuild b2=j.assertBuildStatus(Result.FAILURE,p.scheduleBuild2(0).get());
  j.assertLogContains("#1 is not currently being built",b2);
  r.clear();
  b.getAction(ParametersAction.class).getParameters().forEach(v -> r.put(v.getName(),v.getValue()));
  assertEquals(ImmutableMap.of("a","x","b","y"),r);
}
