/** 
 * Test scenario is: - a computer with two executors, one is building something now - a future load of size 1 is predicted but it'll start after the currently building something is completed. - hence the currently available executor should be considered available (unlike in test1)
 */
@Test public void test2() throws Exception {
  Task t=mock(Task.class);
  when(t.getEstimatedDuration()).thenReturn(10000L);
  when(t.getSubTasks()).thenReturn((Collection)asList(t));
  Computer c=createMockComputer(2);
  Executor e=c.getExecutors().get(0);
  when(e.isIdle()).thenReturn(false);
  when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);
  JobOffer o=createMockOffer(c.getExecutors().get(1));
  MappingWorksheet mw=new MappingWorksheet(wrap(t),asList(o));
  assertEquals(1,mw.executors.size());
  assertEquals(1,mw.works.size());
}
