@Issue("JENKINS-14807") @Test public void use_slave_platform_path_separator_when_contribute_path() throws Throwable {
  Platform slavePlatform=Platform.current() == Platform.UNIX ? Platform.WINDOWS : Platform.UNIX;
  PowerMockito.mockStatic(Platform.class);
  Mockito.when(Platform.current()).thenReturn(slavePlatform);
  EnvVars emptyEnv=new EnvVars();
  EnvVars slaveEnv=new EnvVars(EnvVars.masterEnvVars);
  MockRepository.removeClassMethodInvocationControl(Platform.class);
  Job<?,?> job=Mockito.mock(FreeStyleProject.class);
  Mockito.when(job.getEnvironment(Mockito.any(Node.class),Mockito.any(TaskListener.class))).thenCallRealMethod();
  Mockito.when(job.getCharacteristicEnvVars()).thenReturn(emptyEnv);
  Computer c=Mockito.mock(Computer.class);
  if (!slaveEnv.containsKey("PATH")) {
    slaveEnv.put("PATH","/bin/bash");
  }
  Mockito.when(c.getEnvironment()).thenReturn(slaveEnv);
  Mockito.when(c.buildEnvironment(Mockito.any(TaskListener.class))).thenReturn(emptyEnv);
  Node node=PowerMockito.mock(Node.class);
  PowerMockito.doReturn(c).when(node).toComputer();
  EnvVars env=job.getEnvironment(node,TaskListener.NULL);
  String path="/test";
  env.override("PATH+TEST",path);
  assertThat("The contributed PATH was not joined using the path separator defined in slave node",env.get("PATH"),CoreMatchers.containsString(path + (slavePlatform == Platform.WINDOWS ? ';' : ':')));
}
