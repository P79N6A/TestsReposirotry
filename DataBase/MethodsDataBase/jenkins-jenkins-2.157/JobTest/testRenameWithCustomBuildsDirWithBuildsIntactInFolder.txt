@Issue("JENKINS-44657") @Test public void testRenameWithCustomBuildsDirWithBuildsIntactInFolder() throws Exception {
  j.jenkins.setRawBuildsDir("${JENKINS_HOME}/builds/${ITEM_FULL_NAME}/builds");
  final MockFolder f=j.createFolder("F");
  final FreeStyleProject p1=f.createProject(FreeStyleProject.class,"P1");
  j.buildAndAssertSuccess(p1);
  File oldP1BuildsDir=p1.getBuildDir();
  final String oldP1DirContent=dirContent(oldP1BuildsDir);
  f.renameTo("different-name");
  File newP1BuildDir=p1.getBuildDir();
  assertNotNull(newP1BuildDir);
  assertNotEquals(oldP1BuildsDir.getAbsolutePath(),newP1BuildDir.getAbsolutePath());
  String newP1DirContent=dirContent(newP1BuildDir);
  assertEquals(oldP1DirContent,newP1DirContent);
  final FreeStyleProject p2=f.createProject(FreeStyleProject.class,"P2");
  if (Functions.isWindows()) {
    p2.getBuildersList().add(new BatchFile("echo hello > hello.txt"));
  }
 else {
    p2.getBuildersList().add(new Shell("echo hello > hello.txt"));
  }
  p2.getPublishersList().add(new ArtifactArchiver("*.txt"));
  j.buildAndAssertSuccess(p2);
  File oldP2BuildsDir=p2.getBuildDir();
  final String oldP2DirContent=dirContent(oldP2BuildsDir);
  FreeStyleBuild b2=p2.getBuilds().getLastBuild();
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  b2.getLogText().writeRawLogTo(0,out);
  final String oldB2Log=new String(out.toByteArray());
  assertTrue(b2.getArtifactManager().root().child("hello.txt").exists());
  f.renameTo("something-else");
  newP1BuildDir=p1.getBuildDir();
  assertNotNull(newP1BuildDir);
  assertNotEquals(oldP1BuildsDir.getAbsolutePath(),newP1BuildDir.getAbsolutePath());
  newP1DirContent=dirContent(newP1BuildDir);
  assertEquals(oldP1DirContent,newP1DirContent);
  b2=p2.getBuilds().getLastBuild();
  assertNotNull(b2);
  out=new ByteArrayOutputStream();
  b2.getLogText().writeRawLogTo(0,out);
  final String newB2Log=new String(out.toByteArray());
  assertEquals(oldB2Log,newB2Log);
  assertTrue(b2.getArtifactManager().root().child("hello.txt").exists());
  File newP2BuildDir=p2.getBuildDir();
  assertNotNull(newP2BuildDir);
  assertNotEquals(oldP2BuildsDir.getAbsolutePath(),newP2BuildDir.getAbsolutePath());
  String newP2DirContent=dirContent(newP2BuildDir);
  assertEquals(oldP2DirContent,newP2DirContent);
}
