@Issue("JENKINS-15094") @Test public void executorsAliveOnParameterWithNullDefaultValue() throws Exception {
  DumbSlave slave=j.createSlave();
  FreeStyleProject project=j.createFreeStyleProject("foo");
  project.setAssignedNode(slave);
  NullDefaultValueParameterDefinition nullDefaultDefinition=new NullDefaultValueParameterDefinition();
  ParametersDefinitionProperty pdp=new ParametersDefinitionProperty(new StringParameterDefinition("string","defaultValue","description"),nullDefaultDefinition);
  project.addProperty(pdp);
  CaptureEnvironmentBuilder builder=new CaptureEnvironmentBuilder();
  project.getBuildersList().add(builder);
  j.buildAndAssertSuccess(project);
  for (  Executor exec : slave.toComputer().getExecutors()) {
    assertTrue("Executor has died before the test start: " + exec,exec.isActive());
  }
  CLICommandInvoker invoker=new CLICommandInvoker(j,new BuildCommand());
  CLICommandInvoker.Result result=invoker.invokeWithArgs("foo","-p","string=value");
  assertThat(result,failedWith(2));
  assertThat(result.stderr(),containsString("ERROR: No default value for the parameter \'FOO\'."));
  Thread.sleep(5000);
  assertNull("Build should not be scheduled",j.jenkins.getQueue().getItem(project));
  assertNull("Build should not be scheduled",project.getBuildByNumber(2));
  for (  Executor exec : slave.toComputer().getExecutors()) {
    assertTrue("Executor is dead: " + exec,exec.isActive());
  }
}
