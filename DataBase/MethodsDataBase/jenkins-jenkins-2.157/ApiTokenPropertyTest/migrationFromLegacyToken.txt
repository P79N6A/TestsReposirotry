@Test @LocalData @Issue("JENKINS-32776") public void migrationFromLegacyToken() throws Exception {
  j.jenkins.setCrumbIssuer(null);
  User admin=User.getById("admin",false);
  assertNotNull("Admin user not configured correctly in local data",admin);
  ApiTokenProperty apiTokenProperty=admin.getProperty(ApiTokenProperty.class);
  WebClient wc=j.createWebClient();
  wc.withBasicCredentials("admin","admin");
  checkUserIsConnected(wc);
  String localLegacyToken=apiTokenProperty.getApiTokenInsecure();
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",localLegacyToken);
  checkUserIsConnected(wc);
  assertEquals(1,apiTokenProperty.getTokenList().size());
  apiTokenProperty.changeApiToken();
  assertEquals(1,apiTokenProperty.getTokenList().size());
  String newLegacyToken=apiTokenProperty.getApiTokenInsecure();
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",newLegacyToken);
  checkUserIsConnected(wc);
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",localLegacyToken);
  checkUserIsNotConnected(wc);
  ApiTokenStore.HashedToken legacyToken=apiTokenProperty.getTokenStore().getLegacyToken();
  assertNotNull(legacyToken);
  String legacyUuid=legacyToken.getUuid();
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",newLegacyToken);
  revokeToken(wc,"admin",legacyUuid);
  assertEquals(0,apiTokenProperty.getTokenList().size());
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",newLegacyToken);
  checkUserIsNotConnected(wc);
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",localLegacyToken);
  checkUserIsNotConnected(wc);
  wc=j.createWebClient();
  wc.withBasicCredentials("admin","admin");
  checkUserIsConnected(wc);
  wc=j.createWebClient();
  wc.login("admin","admin");
  GenerateNewTokenResponse newToken=generateNewToken(wc,"admin","New Token");
  wc=j.createWebClient();
  wc.withBasicCredentials("admin",newToken.tokenValue);
  checkUserIsConnected(wc);
}
