@Issue("JENKINS-6034") @Test public void consoleAnnotationFilterOut() throws Exception {
  FreeStyleProject p=r.createFreeStyleProject();
  p.getBuildersList().add(new TestBuilder(){
    public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      listener.getLogger().print("abc\n");
      listener.getLogger().print(HyperlinkNote.encodeTo("http://infradna.com/","def") + "\n");
      return true;
    }
  }
);
  FreeStyleBuild b=r.buildAndAssertSuccess(p);
  HtmlPage rsp=r.createWebClient().getPage(b,"console");
  assertEquals(1,DomNodeUtil.selectNodes(rsp,"//A[@href='http://infradna.com/']").size());
  TextPage raw=(TextPage)r.createWebClient().goTo(b.getUrl() + "consoleText","text/plain");
  assertThat(raw.getContent(),containsString("\nabc\ndef\n"));
}
