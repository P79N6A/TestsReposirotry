@Test public void parentChildW3(){
  x.w(c1);
  x.w(c2);
  y.w(c3);
  y.w(c4);
  z.w(c);
  assertFalse("Sibling resources should not conflict",x.isCollidingWith(y));
  assertFalse("Sibling resources should not conflict",y.isCollidingWith(x));
  assertFalse("Using less than the limit of child resources should not be a problem",x.isCollidingWith(z));
  assertFalse("Using less than the limit of child resources should not be a problem",z.isCollidingWith(x));
  assertFalse("Using less than the limit of child resources should not be a problem",z.isCollidingWith(y));
  assertFalse("Using less than the limit of child resources should not be a problem",y.isCollidingWith(z));
  ResourceList w=ResourceList.union(x,y);
  assertFalse("Using less than the limit of child resources should not be a problem",w.isCollidingWith(z));
  assertFalse("Using less than the limit of child resources should not be a problem",z.isCollidingWith(w));
  assertFalse("Total count = 2, limit is 3",w.isCollidingWith(x));
  assertFalse("Total count = 2, limit is 3",x.isCollidingWith(w));
  ResourceList v=ResourceList.union(x,x);
  assertFalse("Total count = 3, limit is 3",v.isCollidingWith(x));
  assertFalse("Total count = 3, limit is 3",x.isCollidingWith(v));
  v=ResourceList.union(v,x);
  assertTrue("Total count = 4, limit is 3",v.isCollidingWith(x));
  assertTrue("Total count = 4, limit is 3",x.isCollidingWith(v));
}
