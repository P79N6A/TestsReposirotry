@Test public void disconnectNodeManyShouldFailIfANodeDoesNotExist() throws Exception {
  DumbSlave slave1=j.createSlave("aNode1","",null);
  DumbSlave slave2=j.createSlave("aNode2","",null);
  slave1.toComputer().waitUntilOnline();
  assertThat(slave1.toComputer().isOnline(),equalTo(true));
  assertThat(slave1.toComputer().getOfflineCause(),equalTo(null));
  slave2.toComputer().waitUntilOnline();
  assertThat(slave2.toComputer().isOnline(),equalTo(true));
  assertThat(slave2.toComputer().getOfflineCause(),equalTo(null));
  final CLICommandInvoker.Result result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs("aNode1","aNode2","never_created","-m","aCause");
  assertThat(result,failedWith(5));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("never_created: No such agent \"never_created\" exists. Did you mean \"aNode1\"?"));
  assertThat(result.stderr(),containsString("ERROR: " + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));
  assertThat(slave1.toComputer().isOffline(),equalTo(true));
  assertThat(slave1.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));
  assertThat(((OfflineCause.ByCLI)slave1.toComputer().getOfflineCause()).message,equalTo("aCause"));
  assertThat(slave2.toComputer().isOffline(),equalTo(true));
  assertThat(slave2.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));
  assertThat(((OfflineCause.ByCLI)slave2.toComputer().getOfflineCause()).message,equalTo("aCause"));
}
