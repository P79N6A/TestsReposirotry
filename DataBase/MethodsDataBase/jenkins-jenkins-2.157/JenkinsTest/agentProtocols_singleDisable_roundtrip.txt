@Test @Issue("JENKINS-39465") public void agentProtocols_singleDisable_roundtrip() throws Exception {
  final Set<String> defaultProtocols=Collections.unmodifiableSet(j.jenkins.getAgentProtocols());
  final String protocolToDisable1=MockOptOutProtocol1.NAME;
  final String protocolToDisable2=MockOptOutProtocol2.NAME;
  final Set<String> newProtocols=new HashSet<>(defaultProtocols);
  newProtocols.remove(protocolToDisable1);
  newProtocols.remove(protocolToDisable2);
  j.jenkins.setAgentProtocols(newProtocols);
  j.jenkins.save();
  assertProtocolDisabled(protocolToDisable1,"before the roundtrip");
  assertProtocolDisabled(protocolToDisable2,"before the roundtrip");
  final Set<String> agentProtocolsBeforeReload=j.jenkins.getAgentProtocols();
  j.jenkins.reload();
  assertFalse("The protocol list must have been really reloaded",agentProtocolsBeforeReload == j.jenkins.getAgentProtocols());
  assertThat("We should have disabled two protocols",j.jenkins.getAgentProtocols().size(),equalTo(defaultProtocols.size() - 2));
  assertProtocolDisabled(protocolToDisable1,"after the roundtrip");
  assertProtocolDisabled(protocolToDisable2,"after the roundtrip");
}
