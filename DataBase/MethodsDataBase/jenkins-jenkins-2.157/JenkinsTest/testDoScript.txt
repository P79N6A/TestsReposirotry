@Test public void testDoScript() throws Exception {
  ApiTokenTestHelper.enableLegacyBehavior();
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to("alice").grant(Jenkins.READ).everywhere().to("bob").grantWithoutImplication(Jenkins.ADMINISTER,Jenkins.READ).everywhere().to("charlie"));
  WebClient wc=j.createWebClient();
  wc.withBasicApiToken(User.getById("alice",true));
  wc.goTo("script");
  wc.assertFails("script?script=System.setProperty('hack','me')",HttpURLConnection.HTTP_BAD_METHOD);
  assertNull(System.getProperty("hack"));
  WebRequest req=new WebRequest(new URL(wc.getContextPath() + "script?script=System.setProperty('hack','me')"),HttpMethod.POST);
  wc.getPage(req);
  assertEquals("me",System.getProperty("hack"));
  wc.assertFails("scriptText?script=System.setProperty('hack','me')",HttpURLConnection.HTTP_BAD_METHOD);
  req=new WebRequest(new URL(wc.getContextPath() + "scriptText?script=System.setProperty('huck','you')"),HttpMethod.POST);
  wc.getPage(req);
  assertEquals("you",System.getProperty("huck"));
  wc.withBasicApiToken(User.getById("bob",true));
  wc.assertFails("script",HttpURLConnection.HTTP_FORBIDDEN);
  wc.withBasicApiToken(User.getById("charlie",true));
  wc.assertFails("script",HttpURLConnection.HTTP_FORBIDDEN);
}
