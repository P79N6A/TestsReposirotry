@Issue("JENKINS-45892") @Test public void badSerialization(){
  rr.addStep(new Statement(){
    @Override public void evaluate() throws Throwable {
      FreeStyleProject p1=rr.j.createFreeStyleProject("p1");
      p1.setDescription("this is p1");
      FreeStyleProject p2=rr.j.createFreeStyleProject("p2");
      p2.addProperty(new BadProperty(p1));
      String text=p2.getConfigFile().asString();
      assertThat(text,not(containsString("<description>this is p1</description>")));
      assertThat(text,containsString("<fullName>p1</fullName>"));
      assertThat(logging.getMessages().toString(),containsString(p1.toString()));
      assertThat(logging.getMessages().toString(),containsString(p2.getConfigFile().toString()));
    }
  }
);
  rr.addStep(new Statement(){
    @Override public void evaluate() throws Throwable {
      FreeStyleProject p1=rr.j.jenkins.getItemByFullName("p1",FreeStyleProject.class);
      FreeStyleProject p2=rr.j.jenkins.getItemByFullName("p2",FreeStyleProject.class);
      assertEquals(null,p2.getProperty(BadProperty.class).other);
    }
  }
);
}
