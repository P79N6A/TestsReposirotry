@Test public void regularUsage() throws Exception {
  final String ID_1=UUID.randomUUID().toString();
  final String ID_2="other-uuid";
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
    tokenStats.removeId(ID_1);
    tokenStats.save();
  }
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
    assertNotNull(tokenStats);
    ApiTokenStats.SingleTokenStats stats=tokenStats.findTokenStatsById(ID_1);
    assertEquals(0,stats.getUseCounter());
    assertNull(stats.getLastUseDate());
    assertEquals(0L,stats.getNumDaysUse());
  }
  Date lastUsage;
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
    ApiTokenStats.SingleTokenStats stats=tokenStats.updateUsageForId(ID_1);
    assertEquals(1,stats.getUseCounter());
    lastUsage=stats.getLastUseDate();
    assertNotNull(lastUsage);
    assertThat(stats.getNumDaysUse(),lessThanOrEqualTo(1L));
  }
  Thread.sleep(10);
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
    ApiTokenStats.SingleTokenStats stats=tokenStats.updateUsageForId(ID_1);
    assertEquals(2,stats.getUseCounter());
    assertThat(lastUsage,lessThan(stats.getLastUseDate()));
    assertThat(stats.getNumDaysUse(),lessThanOrEqualTo(1L));
  }
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
{
      ApiTokenStats.SingleTokenStats stats=tokenStats.findTokenStatsById(ID_2);
      assertEquals(0,stats.getUseCounter());
      assertNull(stats.getLastUseDate());
      assertEquals(0L,stats.getNumDaysUse());
    }
{
      ApiTokenStats.SingleTokenStats stats=tokenStats.updateUsageForId(ID_2);
      assertEquals(1,stats.getUseCounter());
      assertNotNull(lastUsage);
      assertThat(stats.getNumDaysUse(),lessThanOrEqualTo(1L));
    }
  }
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
    ApiTokenStats.SingleTokenStats stats_1=tokenStats.findTokenStatsById(ID_1);
    assertEquals(2,stats_1.getUseCounter());
    ApiTokenStats.SingleTokenStats stats_2=tokenStats.findTokenStatsById(ID_2);
    assertEquals(1,stats_2.getUseCounter());
    tokenStats.removeId(ID_1);
  }
{
    ApiTokenStats tokenStats=createFromFile(tmp.getRoot());
    ApiTokenStats.SingleTokenStats stats_1=tokenStats.findTokenStatsById(ID_1);
    assertEquals(0,stats_1.getUseCounter());
    ApiTokenStats.SingleTokenStats stats_2=tokenStats.findTokenStatsById(ID_2);
    assertEquals(1,stats_2.getUseCounter());
  }
}
