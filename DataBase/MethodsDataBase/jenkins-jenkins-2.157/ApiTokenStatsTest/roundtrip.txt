@Test public void roundtrip() throws Exception {
  j.jenkins.setCrumbIssuer(null);
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  User u=User.getById("foo",true);
  ApiTokenProperty t=u.getProperty(ApiTokenProperty.class);
  assertNotNull(t.getTokenStore());
  assertNotNull(t.getTokenStats());
  WebClient wc=j.createWebClient().withBasicCredentials(u.getId());
  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
  final String TOKEN_NAME="New Token Name";
  WebRequest request=new WebRequest(new URL(j.getURL() + "user/" + u.getId()+ "/descriptorByName/"+ ApiTokenProperty.class.getName()+ "/generateNewToken"),HttpMethod.POST);
  request.setRequestParameters(Arrays.asList(new NameValuePair("newTokenName",TOKEN_NAME)));
  Page page=wc.getPage(request);
  assertEquals(200,page.getWebResponse().getStatusCode());
  String responseContent=page.getWebResponse().getContentAsString();
  JSONObject jsonObject=JSONObject.fromObject(responseContent);
  JSONObject jsonData=jsonObject.getJSONObject("data");
  String tokenName=jsonData.getString("tokenName");
  String tokenValue=jsonData.getString("tokenValue");
  String tokenUuid=jsonData.getString("tokenUuid");
  assertEquals(TOKEN_NAME,tokenName);
  WebClient restWc=j.createWebClient().withBasicCredentials(u.getId(),tokenValue);
  checkUserIsConnected(restWc,u.getId());
  HtmlPage config=wc.goTo(u.getUrl() + "/configure");
  assertEquals(200,config.getWebResponse().getStatusCode());
  assertThat(config.getWebResponse().getContentAsString(),containsString(tokenUuid));
  assertThat(config.getWebResponse().getContentAsString(),containsString(tokenName));
  final int NUM_CALL_WITH_TOKEN=5;
  for (int i=1; i < NUM_CALL_WITH_TOKEN; i++) {
    restWc.goToXml("whoAmI/api/xml");
  }
  HtmlPage configWithStats=wc.goTo(u.getUrl() + "/configure");
  assertEquals(200,configWithStats.getWebResponse().getStatusCode());
  HtmlSpan useCounterSpan=configWithStats.getDocumentElement().getOneHtmlElementByAttribute("span","class","token-use-counter");
  assertThat(useCounterSpan.getTextContent(),containsString("" + NUM_CALL_WITH_TOKEN));
  revokeToken(wc,u.getId(),tokenUuid);
  checkUserIsNotConnected(restWc);
  HtmlPage configWithoutToken=wc.goTo(u.getUrl() + "/configure");
  assertEquals(200,configWithoutToken.getWebResponse().getStatusCode());
  assertThat(configWithoutToken.getWebResponse().getContentAsString(),not(containsString(tokenUuid)));
  assertThat(configWithoutToken.getWebResponse().getContentAsString(),not(containsString(tokenName)));
}
