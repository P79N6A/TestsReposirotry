@Test public void parameterTypes() throws Exception {
  FreeStyleProject otherProject=j.createFreeStyleProject();
  otherProject.scheduleBuild2(0).get();
  FreeStyleProject project=j.createFreeStyleProject();
  ParametersDefinitionProperty pdp=new ParametersDefinitionProperty(new StringParameterDefinition("string","defaultValue","string description"),new BooleanParameterDefinition("boolean",true,"boolean description"),new ChoiceParameterDefinition("choice","Choice 1\nChoice 2","choice description"),new RunParameterDefinition("run",otherProject.getName(),"run description",null));
  project.addProperty(pdp);
  CaptureEnvironmentBuilder builder=new CaptureEnvironmentBuilder();
  project.getBuildersList().add(builder);
  WebClient wc=j.createWebClient();
  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
  HtmlPage page=wc.goTo("job/" + project.getName() + "/build?delay=0sec");
  HtmlForm form=page.getFormByName("parameters");
  HtmlElement element=(HtmlElement)DomNodeUtil.selectSingleNode(form,"//tr[td/div/input/@value='string']");
  assertNotNull(element);
  assertEquals("string description",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),"td[@class='setting-description']")).getTextContent());
  HtmlTextInput stringParameterInput=(HtmlTextInput)DomNodeUtil.selectSingleNode(element,".//input[@name='value']");
  assertEquals("defaultValue",stringParameterInput.getAttribute("value"));
  assertEquals("string",((HtmlElement)DomNodeUtil.selectSingleNode(element,"td[@class='setting-name']")).getTextContent());
  stringParameterInput.setAttribute("value","newValue");
  element=(HtmlElement)DomNodeUtil.selectSingleNode(form,"//tr[td/div/input/@value='boolean']");
  assertNotNull(element);
  assertEquals("boolean description",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),"td[@class='setting-description']")).getTextContent());
  Object o=DomNodeUtil.selectSingleNode(element,".//input[@name='value']");
  System.out.println(o);
  HtmlCheckBoxInput booleanParameterInput=(HtmlCheckBoxInput)o;
  assertEquals(true,booleanParameterInput.isChecked());
  assertEquals("boolean",((HtmlElement)DomNodeUtil.selectSingleNode(element,"td[@class='setting-name']")).getTextContent());
  element=(HtmlElement)DomNodeUtil.selectSingleNode(form,".//tr[td/div/input/@value='choice']");
  assertNotNull(element);
  assertEquals("choice description",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),"td[@class='setting-description']")).getTextContent());
  assertEquals("choice",((HtmlElement)DomNodeUtil.selectSingleNode(element,"td[@class='setting-name']")).getTextContent());
  element=(HtmlElement)DomNodeUtil.selectSingleNode(form,".//tr[td/div/input/@value='run']");
  assertNotNull(element);
  assertEquals("run description",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),"td[@class='setting-description']")).getTextContent());
  assertEquals("run",((HtmlElement)DomNodeUtil.selectSingleNode(element,"td[@class='setting-name']")).getTextContent());
  j.submit(form);
  Queue.Item q=j.jenkins.getQueue().getItem(project);
  if (q != null)   q.getFuture().get();
 else   Thread.sleep(1000);
  assertEquals("newValue",builder.getEnvVars().get("STRING"));
  assertEquals("true",builder.getEnvVars().get("BOOLEAN"));
  assertEquals("Choice 1",builder.getEnvVars().get("CHOICE"));
  assertEquals(j.jenkins.getRootUrl() + otherProject.getLastBuild().getUrl(),builder.getEnvVars().get("RUN"));
}
