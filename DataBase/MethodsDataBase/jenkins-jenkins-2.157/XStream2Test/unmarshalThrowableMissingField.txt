/** 
 * Verify RobustReflectionConverter can handle missing fields in a class extending Throwable/Exception (default ThrowableConverter registered by XStream calls ReflectionConverter directly, rather than our RobustReflectionConverter replacement).
 */
@Issue("HUDSON-5769") @Test public void unmarshalThrowableMissingField(){
  Level oldLevel=disableLogging();
  Baz baz=new Baz();
  baz.myFailure=new Exception("foo");
  XStream2 xs=new XStream2();
  String xml=xs.toXML(baz);
  baz=(Baz)xs.fromXML(xml);
  assertEquals("foo",baz.myFailure.getMessage());
  baz=(Baz)xs.fromXML("<hudson.util.XStream2Test_-Baz><myFailure>" + "<missingField>true</missingField>" + "<detailMessage>hoho</detailMessage>"+ "<stackTrace><trace>"+ "hudson.util.XStream2Test.testUnmarshalThrowableMissingField(XStream2Test.java:97)"+ "</trace></stackTrace>"+ "</myFailure></hudson.util.XStream2Test_-Baz>");
  assertEquals("hoho",baz.myFailure.getMessage());
  enableLogging(oldLevel);
}
