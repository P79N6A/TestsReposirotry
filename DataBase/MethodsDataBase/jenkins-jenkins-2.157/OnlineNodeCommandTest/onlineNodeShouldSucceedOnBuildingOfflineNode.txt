@Test public void onlineNodeShouldSucceedOnBuildingOfflineNode() throws Exception {
  final OneShotEvent finish=new OneShotEvent();
  DumbSlave slave=j.createSlave("aNode","",null);
  if (!slave.toComputer().isOnline()) {
    System.out.println("Waiting until going online is in progress...");
    slave.toComputer().waitUntilOnline();
  }
  FreeStyleProject project=j.createFreeStyleProject("aProject");
  project.setAssignedNode(slave);
  final Future<FreeStyleBuild> build=startBlockingAndFinishingBuild(project,finish);
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).getBuilds(),hasSize(1));
  slave.toComputer().setTemporarilyOffline(true);
  slave.toComputer().waitUntilOffline();
  assertThat(slave.toComputer().isOffline(),equalTo(true));
  final CLICommandInvoker.Result result=command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs("aNode");
  assertThat(result,succeededSilently());
  if (slave.toComputer().isConnecting()) {
    System.out.println("Waiting until going online is in progress...");
    slave.toComputer().waitUntilOnline();
  }
  assertThat(slave.toComputer().isOnline(),equalTo(true));
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).getBuilds(),hasSize(1));
  assertThat(project.isBuilding(),equalTo(true));
  finish.signal();
  build.get();
  assertThat(((FreeStyleProject)j.jenkins.getItem("aProject")).getBuilds(),hasSize(1));
  assertThat(project.isBuilding(),equalTo(false));
  j.assertBuildStatusSuccess(build);
}
