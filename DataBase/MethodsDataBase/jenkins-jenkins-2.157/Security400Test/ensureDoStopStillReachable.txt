@Test @Issue("SECURITY-404") public void ensureDoStopStillReachable() throws Exception {
  j.jenkins.setCrumbIssuer(null);
  JenkinsRule.WebClient wc=j.createWebClient();
  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
  AtomicInteger atomicResult=new AtomicInteger(0);
  FreeStyleProject p=j.createFreeStyleProject();
  final Semaphore semaphore=new Semaphore(0);
  p.getBuildersList().add(new SemaphoredBuilder(semaphore,atomicResult));
  j.jenkins.setNumExecutors(1);
{
    WebRequest request=new WebRequest(new URL(j.getURL() + "computers/0/executors/0/stop"),HttpMethod.POST);
    Page page=wc.getPage(request);
    assertEquals(404,page.getWebResponse().getStatusCode());
    assertRequestWasNotBlocked();
  }
{
    QueueTaskFuture<FreeStyleBuild> futureBuild=p.scheduleBuild2(0);
    futureBuild.waitForStart();
    semaphore.release(1);
    j.assertBuildStatus(Result.SUCCESS,futureBuild);
    assertEquals(1,atomicResult.get());
  }
{
    atomicResult.set(0);
    assertEquals(0,atomicResult.get());
    QueueTaskFuture<FreeStyleBuild> futureBuild=p.scheduleBuild2(0);
    futureBuild.waitForStart();
    WebRequest request=new WebRequest(new URL(j.getURL() + "computers/0/executors/0/stop"),HttpMethod.POST);
    Page page=wc.getPage(request);
    assertEquals(404,page.getWebResponse().getStatusCode());
    assertRequestWasNotBlocked();
    j.assertBuildStatus(Result.FAILURE,futureBuild);
    assertEquals(3,atomicResult.get());
  }
}
