/** 
 * As we moved the I/O handling to another thread, there's a race condition in {@link FilePath#copyTo(OutputStream)} &mdash; this method can return beforeall the writes are delivered to  {@link OutputStream}. <p> To reproduce that problem, we use a large number of threads, so that we can maximize the chance of out-of-order execution, and make sure we are seeing the right byte count at the end. Also see JENKINS-7897
 */
@Issue("JENKINS-7871") @Test public void noRaceConditionInCopyTo() throws Exception {
  final File tmp=temp.newFile();
  int fileSize=90000;
  givenSomeContentInFile(tmp,fileSize);
  List<Future<Integer>> results=whenFileIsCopied100TimesConcurrently(tmp);
  for (  Future<Integer> f : results)   assertEquals(fileSize,f.get().intValue());
}
