@Test public void fromString() throws Exception {
  assertThat(RangeSet.fromString("1",true).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("1",false).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("+1",true).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("+1",false).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("0",true).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("0",false).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("+0",true).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("+0",false).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("-1",true).toString(),equalTo(""));
  assertThat(expectIAE("-1","Unable to parse '-1', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("2147483648",true).toString(),equalTo(""));
  assertThat(expectIAE("2147483648","Unable to parse '2147483648', expected number"),is(true));
  assertThat(RangeSet.fromString("1a",true).toString(),equalTo(""));
  assertThat(expectIAE("1a","Unable to parse '1a', expected number"),is(true));
  assertThat(RangeSet.fromString("aa",true).toString(),equalTo(""));
  assertThat(expectIAE("aa","Unable to parse 'aa', expected number"),is(true));
  assertThat(RangeSet.fromString("",true).toString(),equalTo(""));
  assertThat(RangeSet.fromString("",false).toString(),equalTo(""));
  assertThat(RangeSet.fromString(" ",true).toString(),equalTo(""));
  assertThat(expectIAE(" ","Unable to parse ' ', expected number"),is(true));
  assertThat(RangeSet.fromString(",",true).toString(),equalTo(""));
  assertThat(RangeSet.fromString(",",false).toString(),equalTo(""));
  assertThat(RangeSet.fromString("-",true).toString(),equalTo(""));
  assertThat(expectIAE("-","Unable to parse '-', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1,2",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(RangeSet.fromString("1,2",false).toString(),equalTo("[1,2),[2,3)"));
  assertThat(RangeSet.fromString("1,+2,5",true).toString(),equalTo("[1,2),[2,3),[5,6)"));
  assertThat(RangeSet.fromString("1,+2,5",false).toString(),equalTo("[1,2),[2,3),[5,6)"));
  assertThat(RangeSet.fromString("1,1",true).toString(),equalTo("[1,2),[1,2)"));
  assertThat(RangeSet.fromString("1,1",false).toString(),equalTo("[1,2),[1,2)"));
  assertThat(RangeSet.fromString("0,1,2",true).toString(),equalTo("[0,1),[1,2),[2,3)"));
  assertThat(RangeSet.fromString("0,1,2",false).toString(),equalTo("[0,1),[1,2),[2,3)"));
  assertThat(RangeSet.fromString("1,0,2",true).toString(),equalTo("[1,2),[0,1),[2,3)"));
  assertThat(RangeSet.fromString("1,0,2",false).toString(),equalTo("[1,2),[0,1),[2,3)"));
  assertThat(RangeSet.fromString("1,2,0",true).toString(),equalTo("[1,2),[2,3),[0,1)"));
  assertThat(RangeSet.fromString("1,2,0",false).toString(),equalTo("[1,2),[2,3),[0,1)"));
  assertThat(RangeSet.fromString("-1,2,3",true).toString(),equalTo("[2,3),[3,4)"));
  assertThat(expectIAE("-1,2,3","Unable to parse '-1,2,3', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1,-2,3",true).toString(),equalTo("[1,2),[3,4)"));
  assertThat(expectIAE("1,-2,3","Unable to parse '1,-2,3', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1,2,-3",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,2,-3","Unable to parse '1,2,-3', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("2147483648,2,3",true).toString(),equalTo("[2,3),[3,4)"));
  assertThat(expectIAE("2147483648,1,2","Unable to parse '2147483648,1,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,2147483648,3",true).toString(),equalTo("[1,2),[3,4)"));
  assertThat(expectIAE("1,2147483648,2","Unable to parse '1,2147483648,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,2,2147483648",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,2,2147483648","Unable to parse '1,2,2147483648', expected number"),is(true));
  assertThat(RangeSet.fromString("1a,2,3",true).toString(),equalTo("[2,3),[3,4)"));
  assertThat(expectIAE("1a,1,2","Unable to parse '1a,1,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,2a,3",true).toString(),equalTo("[1,2),[3,4)"));
  assertThat(expectIAE("1,2a,2","Unable to parse '1,2a,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,2,3a",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,2,3a","Unable to parse '1,2,3a', expected number"),is(true));
  assertThat(RangeSet.fromString("aa,2,3",true).toString(),equalTo("[2,3),[3,4)"));
  assertThat(expectIAE("aa,1,2","Unable to parse 'aa,1,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,aa,3",true).toString(),equalTo("[1,2),[3,4)"));
  assertThat(expectIAE("1,aa,2","Unable to parse '1,aa,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,2,aa",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,2,aa","Unable to parse '1,2,aa', expected number"),is(true));
  assertThat(RangeSet.fromString(",1,2",true).toString(),equalTo(""));
  assertThat(expectIAE(",1,2","Unable to parse ',1,2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1,,2",true).toString(),equalTo(""));
  assertThat(expectIAE("1,,2","Unable to parse '1,,2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1,2,",true).toString(),equalTo(""));
  assertThat(expectIAE("1,2,","Unable to parse '1,2,', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString(" ,1,2",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE(" ,1,2","Unable to parse ' ,1,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1, ,2",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1, ,2","Unable to parse '1, ,2', expected number"),is(true));
  assertThat(RangeSet.fromString("1,2, ",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,2, ","Unable to parse '1,2, ', expected number"),is(true));
  assertThat(RangeSet.fromString(",,1,2",true).toString(),equalTo(""));
  assertThat(expectIAE(",,1,2","Unable to parse ',,1,2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1,,,2",true).toString(),equalTo(""));
  assertThat(expectIAE("1,,,2","Unable to parse '1,,,2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1,2,,",true).toString(),equalTo(""));
  assertThat(expectIAE("1,2,,","Unable to parse '1,2,,', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-,1,2",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("-,1,2","Unable to parse '-,1,2', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1,-,2",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,-,2","Unable to parse '1,-,2', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1,2,-",true).toString(),equalTo("[1,2),[2,3)"));
  assertThat(expectIAE("1,2,-","Unable to parse '1,2,-', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1-2",true).toString(),equalTo("[1,3)"));
  assertThat(RangeSet.fromString("1-2",false).toString(),equalTo("[1,3)"));
  assertThat(RangeSet.fromString("+1-+2",true).toString(),equalTo("[1,3)"));
  assertThat(RangeSet.fromString("+1-+2",false).toString(),equalTo("[1,3)"));
  assertThat(RangeSet.fromString("1-1",true).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("1-1",false).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("+1-+1",true).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("+1-+1",false).toString(),equalTo("[1,2)"));
  assertThat(RangeSet.fromString("1-4",true).toString(),equalTo("[1,5)"));
  assertThat(RangeSet.fromString("1-4",false).toString(),equalTo("[1,5)"));
  assertThat(RangeSet.fromString("+1-+4",true).toString(),equalTo("[1,5)"));
  assertThat(RangeSet.fromString("+1-+4",false).toString(),equalTo("[1,5)"));
  assertThat(RangeSet.fromString("0-1",true).toString(),equalTo("[0,2)"));
  assertThat(RangeSet.fromString("0-1",false).toString(),equalTo("[0,2)"));
  assertThat(RangeSet.fromString("+0-+1",true).toString(),equalTo("[0,2)"));
  assertThat(RangeSet.fromString("+0-+1",false).toString(),equalTo("[0,2)"));
  assertThat(RangeSet.fromString("0-2",true).toString(),equalTo("[0,3)"));
  assertThat(RangeSet.fromString("0-2",false).toString(),equalTo("[0,3)"));
  assertThat(RangeSet.fromString("+0-+2",true).toString(),equalTo("[0,3)"));
  assertThat(RangeSet.fromString("+0-+2",false).toString(),equalTo("[0,3)"));
  assertThat(RangeSet.fromString("0--1",true).toString(),equalTo(""));
  assertThat(expectIAE("0--1","Unable to parse '0--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("+0--1",true).toString(),equalTo(""));
  assertThat(expectIAE("+0--1","Unable to parse '+0--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("0--2",true).toString(),equalTo(""));
  assertThat(expectIAE("0--2","Unable to parse '0--2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("+0--2",true).toString(),equalTo(""));
  assertThat(expectIAE("+0--2","Unable to parse '+0--2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1-0",true).toString(),equalTo(""));
  assertThat(expectIAE("1-0","Unable to parse '1-0', expected string with a range M-N where M<N"),is(true));
  assertThat(RangeSet.fromString("+1-+0",true).toString(),equalTo(""));
  assertThat(expectIAE("+1-+0","Unable to parse '+1-+0', expected string with a range M-N where M<N"),is(true));
  assertThat(RangeSet.fromString("2-0",true).toString(),equalTo(""));
  assertThat(expectIAE("2-0","Unable to parse '2-0', expected string with a range M-N where M<N"),is(true));
  assertThat(RangeSet.fromString("+2-+0",true).toString(),equalTo(""));
  assertThat(expectIAE("+2-+0","Unable to parse '+2-+0', expected string with a range M-N where M<N"),is(true));
  assertThat(RangeSet.fromString("-1-0",true).toString(),equalTo(""));
  assertThat(expectIAE("-1-0","Unable to parse '-1-0', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-1-+0",true).toString(),equalTo(""));
  assertThat(expectIAE("-1-+0","Unable to parse '-1-+0', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-2-0",true).toString(),equalTo(""));
  assertThat(expectIAE("-2-0","Unable to parse '-2-0', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-2-+0",true).toString(),equalTo(""));
  assertThat(expectIAE("-2-+0","Unable to parse '-2-+0', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("0-0",true).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("0-0",false).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("+0-+0",true).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("+0-+0",false).toString(),equalTo("[0,1)"));
  assertThat(RangeSet.fromString("-1-1",true).toString(),equalTo(""));
  assertThat(expectIAE("-1-1","Unable to parse '-1-1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-1-+1",true).toString(),equalTo(""));
  assertThat(expectIAE("-1-+1","Unable to parse '-1-+1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-1-2",true).toString(),equalTo(""));
  assertThat(expectIAE("-1-2","Unable to parse '-1-2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-1-+2",true).toString(),equalTo(""));
  assertThat(expectIAE("-1-+2","Unable to parse '-1-+2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1--1",true).toString(),equalTo(""));
  assertThat(expectIAE("1--1","Unable to parse '1--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("+1--1",true).toString(),equalTo(""));
  assertThat(expectIAE("+1--1","Unable to parse '+1--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1--2",true).toString(),equalTo(""));
  assertThat(expectIAE("1--2","Unable to parse '1--2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("+1--2",true).toString(),equalTo(""));
  assertThat(expectIAE("+1--2","Unable to parse '+1--2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-1--1",true).toString(),equalTo(""));
  assertThat(expectIAE("-1--1","Unable to parse '-1--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("-2--1",true).toString(),equalTo(""));
  assertThat(expectIAE("-2--1","Unable to parse '-2--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("0-2147483648",true).toString(),equalTo(""));
  assertThat(expectIAE("0-2147483648","Unable to parse '0-2147483648', expected number"),is(true));
  assertThat(RangeSet.fromString("2147483648-0",true).toString(),equalTo(""));
  assertThat(expectIAE("2147483648-0","Unable to parse '2147483648-0', expected number"),is(true));
  assertThat(RangeSet.fromString("2147483648-2147483648",true).toString(),equalTo(""));
  assertThat(expectIAE("2147483648-2147483648","Unable to parse '2147483648-2147483648', expected number"),is(true));
  assertThat(RangeSet.fromString("1-2a",true).toString(),equalTo(""));
  assertThat(expectIAE("1-2a","Unable to parse '1-2a', expected number"),is(true));
  assertThat(RangeSet.fromString("2a-2",true).toString(),equalTo(""));
  assertThat(expectIAE("2a-2","Unable to parse '2a-2', expected number"),is(true));
  assertThat(RangeSet.fromString("2a-2a",true).toString(),equalTo(""));
  assertThat(expectIAE("2a-2a","Unable to parse '2a-2a', expected number"),is(true));
  assertThat(RangeSet.fromString("aa-2",true).toString(),equalTo(""));
  assertThat(expectIAE("aa-2","Unable to parse 'aa-2', expected number"),is(true));
  assertThat(RangeSet.fromString("1-aa",true).toString(),equalTo(""));
  assertThat(expectIAE("1-aa","Unable to parse '1-aa', expected number"),is(true));
  assertThat(RangeSet.fromString("aa-aa",true).toString(),equalTo(""));
  assertThat(expectIAE("aa-aa","Unable to parse 'aa-aa', expected number"),is(true));
  assertThat(RangeSet.fromString("-1",true).toString(),equalTo(""));
  assertThat(expectIAE("-1","Unable to parse '-1', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1-",true).toString(),equalTo(""));
  assertThat(expectIAE("1-","Unable to parse '1-', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("-",true).toString(),equalTo(""));
  assertThat(expectIAE("-","Unable to parse '-', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString(" -1",true).toString(),equalTo(""));
  assertThat(expectIAE(" -1","Unable to parse ' -1', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1- ",true).toString(),equalTo(""));
  assertThat(expectIAE("1- ","Unable to parse '1- ', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString(" - ",true).toString(),equalTo(""));
  assertThat(expectIAE(" - ","Unable to parse ' - ', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString(",-1",true).toString(),equalTo(""));
  assertThat(expectIAE(",-1","Unable to parse ',-1', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("1-,",true).toString(),equalTo(""));
  assertThat(expectIAE("1-,","Unable to parse '1-,', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString(",-,",true).toString(),equalTo(""));
  assertThat(expectIAE(",-,","Unable to parse ',-,', expected string with a range M-N"),is(true));
  assertThat(RangeSet.fromString("--1",true).toString(),equalTo(""));
  assertThat(expectIAE("--1","Unable to parse '--1', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1--",true).toString(),equalTo(""));
  assertThat(expectIAE("1--","Unable to parse '1--', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("---",true).toString(),equalTo(""));
  assertThat(expectIAE("---","Unable to parse '---', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("2-1",true).toString(),equalTo(""));
  assertThat(expectIAE("2-1","Unable to parse '2-1', expected string with a range M-N where M<N"),is(true));
  assertThat(RangeSet.fromString("10-1",true).toString(),equalTo(""));
  assertThat(expectIAE("10-1","Unable to parse '10-1', expected string with a range M-N where M<N"),is(true));
  assertThat(RangeSet.fromString("-1--2",true).toString(),equalTo(""));
  assertThat(expectIAE("-1--2","Unable to parse '-1--2', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1-3-",true).toString(),equalTo(""));
  assertThat(expectIAE("1-3-","Unable to parse '1-3-', expected correct notation M,N or M-N"),is(true));
  assertThat(RangeSet.fromString("1-3,3-5",true).toString(),equalTo("[1,4),[3,6)"));
  assertThat(RangeSet.fromString("1-3,4-6",true).toString(),equalTo("[1,4),[4,7)"));
  assertThat(RangeSet.fromString("1-3,5-7",true).toString(),equalTo("[1,4),[5,8)"));
  assertThat(RangeSet.fromString("1-3,2-3",true).toString(),equalTo("[1,4),[2,4)"));
  assertThat(RangeSet.fromString("1-5,2-3",true).toString(),equalTo("[1,6),[2,4)"));
}
