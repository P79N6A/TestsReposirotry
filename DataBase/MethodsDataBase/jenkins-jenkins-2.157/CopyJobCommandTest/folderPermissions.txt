@Issue("JENKINS-22262") @Test public void folderPermissions() throws Exception {
  final MockFolder d1=j.createFolder("d1");
  final FreeStyleProject p=d1.createProject(FreeStyleProject.class,"p");
  final MockFolder d2=j.createFolder("d2");
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().toAuthenticated().grant(Item.READ).onItems(d1,p,d2).to("bob","charlie","debbie").grant(Item.CREATE).onItems(d2).to("charlie","debbie").grant(Item.EXTENDED_READ).onItems(p).to("debbie"));
  copyJobCommand.setTransportAuth(User.get("alice").impersonate());
  assertThat(command.invokeWithArgs("d1/p","d2/p"),failedWith(3));
  copyJobCommand.setTransportAuth(User.get("bob").impersonate());
  assertThat(command.invokeWithArgs("d1/p","d2/p"),failedWith(6));
  copyJobCommand.setTransportAuth(User.get("charlie").impersonate());
  assertThat(command.invokeWithArgs("d1/p","d2/p"),failedWith(6));
  copyJobCommand.setTransportAuth(User.get("debbie").impersonate());
  assertThat(command.invokeWithArgs("d1/p","d2/p"),succeededSilently());
  assertNotNull(d2.getItem("p"));
}
