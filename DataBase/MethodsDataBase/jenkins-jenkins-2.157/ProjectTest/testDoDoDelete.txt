@Test public void testDoDoDelete() throws Exception {
  FreeStyleProject project=j.createFreeStyleProject("project");
  GlobalMatrixAuthorizationStrategy auth=new GlobalMatrixAuthorizationStrategy();
  j.jenkins.setAuthorizationStrategy(auth);
  j.jenkins.setCrumbIssuer(null);
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  User user=User.getById("john",true);
  try (ACLContext as=ACL.as(user)){
    project.doDoDelete(null,null);
    fail("User should not have permission to build project");
  }
 catch (  Exception e) {
    if (!(e.getClass().isAssignableFrom(AccessDeniedException2.class))) {
      fail("AccessDeniedException should be thrown.");
    }
  }
  auth.add(Jenkins.READ,user.getId());
  auth.add(Job.READ,user.getId());
  auth.add(Job.DELETE,user.getId());
  JenkinsRule.WebClient wc=j.createWebClient();
  wc.withBasicCredentials(user.getId());
  HtmlPage p=wc.goTo(project.getUrl() + "delete");
  List<HtmlForm> forms=p.getForms();
  for (  HtmlForm form : forms) {
    if ("doDelete".equals(form.getAttribute("action"))) {
      j.submit(form);
    }
  }
  assertNull("Project should be deleted form memory.",j.jenkins.getItem(project.getDisplayName()));
  assertFalse("Project should be deleted form disk.",project.getRootDir().exists());
}
