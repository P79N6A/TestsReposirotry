@Test public void testGetCauseOfBlockage() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject("project");
  p.getBuildersList().add(Functions.isWindows() ? new BatchFile("ping -n 10 127.0.0.1 >nul") : new Shell("sleep 10"));
  QueueTaskFuture<FreeStyleBuild> b1=waitForStart(p);
  assertInstanceOf("Build can not start because previous build has not finished: " + p.getCauseOfBlockage(),p.getCauseOfBlockage(),BlockedBecauseOfBuildInProgress.class);
  p.getLastBuild().getExecutor().interrupt();
  b1.get();
  FreeStyleProject downstream=j.createFreeStyleProject("project-downstream");
  downstream.getBuildersList().add(Functions.isWindows() ? new BatchFile("ping -n 10 127.0.0.1 >nul") : new Shell("sleep 10"));
  p.getPublishersList().add(new BuildTrigger(Collections.singleton(downstream),Result.SUCCESS));
  Jenkins.getInstance().rebuildDependencyGraph();
  p.setBlockBuildWhenDownstreamBuilding(true);
  QueueTaskFuture<FreeStyleBuild> b2=waitForStart(downstream);
  assertInstanceOf("Build can not start because build of downstream project has not finished.",p.getCauseOfBlockage(),BecauseOfDownstreamBuildInProgress.class);
  downstream.getLastBuild().getExecutor().interrupt();
  b2.get();
  downstream.setBlockBuildWhenUpstreamBuilding(true);
  waitForStart(p);
  assertInstanceOf("Build can not start because build of upstream project has not finished.",downstream.getCauseOfBlockage(),BecauseOfUpstreamBuildInProgress.class);
}
