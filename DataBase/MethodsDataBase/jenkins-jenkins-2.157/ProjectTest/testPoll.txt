@Ignore("randomly failed: Project should have polling result no change expected:<NONE> but was:<INCOMPARABLE>") @Test public void testPoll() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject("project");
  SCM scm=new NullSCM();
  p.setScm(null);
  SCM alwaysChange=new AlwaysChangedSCM();
  assertEquals("Project with null scm should have have polling result no change.",PollingResult.Change.NONE,p.poll(TaskListener.NULL).change);
  p.setScm(scm);
  p.disable();
  assertEquals("Project which is disabled should have have polling result no change.",PollingResult.Change.NONE,p.poll(TaskListener.NULL).change);
  p.enable();
  assertEquals("Project which has no builds should have have polling result incomparable.",PollingResult.Change.INCOMPARABLE,p.poll(TaskListener.NULL).change);
  p.setAssignedLabel(j.jenkins.getLabel("nonExist"));
  p.scheduleBuild2(0);
  assertEquals("Project which build is building should have polling result result no change.",PollingResult.Change.NONE,p.poll(TaskListener.NULL).change);
  p.setAssignedLabel(null);
  while (p.getLastBuild() == null)   Thread.sleep(100);
  assertEquals("Project should have polling result no change",PollingResult.Change.NONE,p.poll(TaskListener.NULL).change);
  p.setScm(alwaysChange);
  j.buildAndAssertSuccess(p);
  assertEquals("Project should have polling result significant",PollingResult.Change.SIGNIFICANT,p.poll(TaskListener.NULL).change);
}
