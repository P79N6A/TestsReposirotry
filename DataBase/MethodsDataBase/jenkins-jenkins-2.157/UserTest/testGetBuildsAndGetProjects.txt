@Test public void testGetBuildsAndGetProjects() throws Exception {
  User user=User.get("John Smith",true,Collections.emptyMap());
  FreeStyleProject project=j.createFreeStyleProject("free");
  FreeStyleProject project2=j.createFreeStyleProject("free2");
  project.save();
  FakeChangeLogSCM scm=new FakeChangeLogSCM();
  scm.addChange().withAuthor(user.getId());
  project.setScm(scm);
  j.buildAndAssertSuccess(project);
  j.buildAndAssertSuccess(project2);
  Build build=project.getLastBuild();
  Build build2=project2.getLastBuild();
  assertTrue("User should participate in the last build of project free.",user.getBuilds().contains(build));
  assertFalse("User should not participate in the last build of project free2.",user.getBuilds().contains(build2));
  assertTrue("User should participate in the project free.",user.getProjects().contains(project));
  assertFalse("User should not participate in the project free2.",user.getProjects().contains(project2));
  build2.replaceAction(new CauseAction(new Cause.UserIdCause()));
  assertFalse("User should not participate in the last build of project free2.",user.getBuilds().contains(build2));
  assertFalse("Current user should not participate in the last build of project free.",User.current().getBuilds().contains(build));
  assertTrue("Current user should participate in the last build of project free2.",User.current().getBuilds().contains(build2));
}
