@Test public void testCanDelete() throws IOException {
  GlobalMatrixAuthorizationStrategy auth=new GlobalMatrixAuthorizationStrategy();
  j.jenkins.setAuthorizationStrategy(auth);
  j.jenkins.setCrumbIssuer(null);
  HudsonPrivateSecurityRealm realm=new HudsonPrivateSecurityRealm(false);
  j.jenkins.setSecurityRealm(realm);
  User user=realm.createAccount("John Smith","password");
  User user2=realm.createAccount("John Smith2","password");
  user2.save();
  SecurityContextHolder.getContext().setAuthentication(user.impersonate());
  assertFalse("Ordinary user cannot delete somebody else",user2.canDelete());
  auth.add(Jenkins.ADMINISTER,user.getId());
  assertTrue("Administrator can delete anybody else",user2.canDelete());
  assertFalse("User (even admin) cannot delete himself",user.canDelete());
  SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
  auth.add(Jenkins.ADMINISTER,user2.getId());
  User user3=User.get("Random Somebody");
  assertFalse("Storage-less temporary user cannot be deleted",user3.canDelete());
  user3.save();
  assertTrue("But once storage is allocated, he can be deleted",user3.canDelete());
}
