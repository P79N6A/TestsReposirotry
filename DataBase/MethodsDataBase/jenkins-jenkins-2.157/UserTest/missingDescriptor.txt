@Issue("JENKINS-45977") @Test public void missingDescriptor() throws Exception {
  ExtensionList.lookup(Descriptor.class).remove(j.jenkins.getDescriptor(SomeUserProperty.class));
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to("alice"));
  User alice=User.get("alice");
  alice.addProperty(new SomeUserProperty());
  assertThat(alice.getProperties().values(),not(empty()));
  JenkinsRule.WebClient wc=j.createWebClient();
  final List<URL> failingResources=new ArrayList<>();
  new WebConnectionWrapper(wc){
    @Override public WebResponse getResponse(    WebRequest request) throws IOException {
      WebResponse r=super.getResponse(request);
      if (r.getStatusCode() >= 400) {
        failingResources.add(request.getUrl());
      }
      return r;
    }
  }
;
  wc.login("alice").goTo("me/configure");
  assertThat(failingResources,empty());
}
