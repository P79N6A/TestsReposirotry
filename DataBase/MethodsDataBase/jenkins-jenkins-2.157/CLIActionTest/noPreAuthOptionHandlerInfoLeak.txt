@Issue("SECURITY-754") @Test public void noPreAuthOptionHandlerInfoLeak() throws Exception {
  File jar=tmp.newFile("jenkins-cli.jar");
  FileUtils.copyURLToFile(j.jenkins.getJnlpJars("jenkins-cli.jar").getURL(),jar);
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  j.jenkins.addView(new AllView("v1"));
  j.jenkins.addNode(j.createSlave("n1",null,null));
  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to(ADMIN));
  assertExitCode(6,false,jar,"get-view","v1");
  assertExitCode(6,false,jar,"get-view","v2");
  assertExitCode(6,false,jar,"get-node","n1");
  assertExitCode(6,false,jar,"get-node","n2");
  assertExitCode(6,false,jar,"-auth","user:user","get-view","v1");
  assertExitCode(6,false,jar,"-auth","user:user","get-view","v2");
  assertExitCode(6,false,jar,"-auth","user:user","get-node","n1");
  assertExitCode(6,false,jar,"-auth","user:user","get-node","n2");
  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to(ADMIN).grant(Jenkins.READ,Item.READ).everywhere().toEveryone());
  assertExitCode(6,false,jar,"get-view","v1");
  assertExitCode(6,false,jar,"get-view","v2");
}
