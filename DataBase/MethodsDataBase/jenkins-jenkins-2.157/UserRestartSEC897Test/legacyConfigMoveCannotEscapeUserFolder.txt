@Test public void legacyConfigMoveCannotEscapeUserFolder(){
  rr.addStep(new Statement(){
    @Override public void evaluate() throws Throwable {
      rr.j.jenkins.setSecurityRealm(rr.j.createDummySecurityRealm());
      assertThat(rr.j.jenkins.isUseSecurity(),equalTo(true));
      User.getById("admin",true).save();
{
        JenkinsRule.WebClient wc=rr.j.createWebClient();
        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
        WebRequest request=new WebRequest(new URL(rr.j.jenkins.getRootUrl() + "whoAmI/api/xml"));
        request.setAdditionalHeader("Authorization",base64("..","any-password"));
        wc.getPage(request);
      }
{
        JenkinsRule.WebClient wc=rr.j.createWebClient();
        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
        WebRequest request=new WebRequest(new URL(rr.j.jenkins.getRootUrl() + "whoAmI/api/xml"));
        request.setAdditionalHeader("Authorization",base64("../users/..","any-password"));
        wc.getPage(request);
      }
      assertThat(rr.j.jenkins.isUseSecurity(),equalTo(true));
      FilePath rootPath=rr.j.jenkins.getRootPath();
      assertThat(rootPath.child("config.xml").exists(),equalTo(true));
    }
  }
);
  rr.addStep(new Statement(){
    @Override public void evaluate() throws Throwable {
      assertThat(rr.j.jenkins.isUseSecurity(),equalTo(true));
      FilePath rootPath=rr.j.jenkins.getRootPath();
      assertThat(rootPath.child("config.xml").exists(),equalTo(true));
    }
  }
);
}
