@Test @Issue("SECURITY-304") @LocalData public void canReadPreSec304Secrets() throws Exception {
  FreeStyleProject project=j.jenkins.getItemByFullName("OldSecret",FreeStyleProject.class);
  String oldxml=project.getConfigFile().asString();
  assertThat(oldxml,containsString("<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>"));
  ParametersDefinitionProperty property=project.getProperty(ParametersDefinitionProperty.class);
  ParameterDefinition definition=property.getParameterDefinitions().get(0);
  assertTrue(definition instanceof PasswordParameterDefinition);
  Secret secret=((PasswordParameterDefinition)definition).getDefaultValueAsSecret();
  assertEquals("theSecret",secret.getPlainText());
  project=j.configRoundtrip(project);
  String newXml=project.getConfigFile().asString();
  assertNotEquals(oldxml,newXml);
  assertThat(newXml,not(containsString("<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>")));
  Pattern p=Pattern.compile("<defaultValue>\\{[A-Za-z0-9+/]+={0,2}}</defaultValue>");
  assertTrue(p.matcher(newXml).find());
  project=j.configRoundtrip(project);
  String round2=project.getConfigFile().asString();
  assertEquals(newXml,round2);
}
