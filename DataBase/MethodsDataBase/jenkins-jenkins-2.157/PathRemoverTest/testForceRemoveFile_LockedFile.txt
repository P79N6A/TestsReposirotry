@Test public void testForceRemoveFile_LockedFile() throws Exception {
  String filename="/var/lock/jenkins.lock";
  File file=mock(File.class);
  Path path=mock(Path.class);
  FileSystem fs=mock(FileSystem.class);
  FileSystemProvider fsProvider=mock(FileSystemProvider.class);
  BasicFileAttributes attributes=mock(BasicFileAttributes.class);
  given(file.getPath()).willReturn(filename);
  given(file.toPath()).willReturn(path);
  given(path.toString()).willReturn(filename);
  given(path.toFile()).willReturn(file);
  given(path.getFileSystem()).willReturn(fs);
  given(fs.provider()).willReturn(fsProvider);
  given(fsProvider.deleteIfExists(path)).willThrow(new FileSystemException(filename));
  given(fsProvider.readAttributes(path,BasicFileAttributes.class)).willReturn(attributes);
  given(attributes.isDirectory()).willReturn(false);
  PathRemover remover=PathRemover.newSimpleRemover();
  try {
    remover.forceRemoveFile(file.toPath());
    fail("Should not have been deleted: " + file);
  }
 catch (  IOException e) {
    assertThat(calcExceptionHierarchy(e),hasItem(FileSystemException.class));
    assertThat(e.getMessage(),containsString(filename));
  }
}
