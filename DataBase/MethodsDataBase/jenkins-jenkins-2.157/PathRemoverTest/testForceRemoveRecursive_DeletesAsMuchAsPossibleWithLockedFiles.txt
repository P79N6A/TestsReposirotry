@Test public void testForceRemoveRecursive_DeletesAsMuchAsPossibleWithLockedFiles() throws Exception {
  assumeTrue(Functions.isWindows());
  File dir=tmp.newFolder();
  File d1=new File(dir,"d1");
  File d2=new File(dir,"d2");
  File f1=new File(dir,"f1");
  File d1f1=new File(d1,"d1f1");
  File d2f2=new File(d2,"d1f2");
  mkdirs(d1,d2);
  touchWithFileName(f1,d1f1,d2f2);
  locker.acquireLock(d1f1);
  PathRemover remover=PathRemover.newSimpleRemover();
  expectedException.expectMessage(containsString(dir.getPath()));
  remover.forceRemoveRecursive(dir.toPath());
  assertTrue(dir.exists());
  assertTrue(d1.exists());
  assertTrue(d1f1.exists());
  assertFalse(d2.exists());
  assertFalse(d2f2.exists());
  assertFalse(f1.exists());
}
