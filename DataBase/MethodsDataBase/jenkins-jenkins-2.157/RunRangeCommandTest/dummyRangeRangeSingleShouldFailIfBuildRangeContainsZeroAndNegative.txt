@Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsZeroAndNegative() throws Exception {
  CLICommandInvoker.Result result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"0--1");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '0--1', expected correct notation M,N or M-N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+0--1");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '+0--1', expected correct notation M,N or M-N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"0--2");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '0--2', expected correct notation M,N or M-N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+0--2");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '+0--2', expected correct notation M,N or M-N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1-0");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '1-0', expected string with a range M-N where M<N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+1-+0");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '+1-+0', expected string with a range M-N where M<N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"2-0");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '2-0', expected string with a range M-N where M<N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+2-+0");
  assertThat(result,failedWith(3));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: Unable to parse '+2-+0', expected string with a range M-N where M<N"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"-1-0");
  assertThat(result,failedWith(2));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: \"-1-0\" is not a valid option"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"-1-+0");
  assertThat(result,failedWith(2));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: \"-1-+0\" is not a valid option"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"-2-0");
  assertThat(result,failedWith(2));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: \"-2-0\" is not a valid option"));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"-2-+0");
  assertThat(result,failedWith(2));
  assertThat(result,hasNoStandardOutput());
  assertThat(result.stderr(),containsString("ERROR: \"-2-+0\" is not a valid option"));
}
