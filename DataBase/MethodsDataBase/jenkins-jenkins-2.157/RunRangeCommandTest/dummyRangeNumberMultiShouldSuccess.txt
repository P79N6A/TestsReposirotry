@Test public void dummyRangeNumberMultiShouldSuccess() throws Exception {
  CLICommandInvoker.Result result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1,2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1,+2,4");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2,4" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1,1");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,1" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"0,1,2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1,0,2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1,2,0");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
}
