@Test public void dummyRangeRangeSingleShouldSuccess() throws Exception {
  CLICommandInvoker.Result result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1-2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+1-+2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1-1");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+1-+1");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"1-" + deleted[0]);
  assertThat(result,succeeded());
  String builds="";
  boolean next=false;
  for (int i=1; i < deleted[0]; i++) {
    if (next)     builds+=",";
    builds+=i;
    next=true;
  }
  assertThat(result.stdout(),containsString("Builds: " + builds + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+1-+" + deleted[0]);
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: " + builds + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"0-1");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+0-+1");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"0-2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+0-+2");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: 1,2" + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"0-0");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: " + System.lineSeparator()));
  result=command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,"+0-+0");
  assertThat(result,succeeded());
  assertThat(result.stdout(),containsString("Builds: " + System.lineSeparator()));
}
