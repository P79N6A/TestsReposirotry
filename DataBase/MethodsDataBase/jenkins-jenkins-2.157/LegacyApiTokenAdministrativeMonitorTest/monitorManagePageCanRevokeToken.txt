@Test public void monitorManagePageCanRevokeToken() throws Exception {
  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
  ApiTokenPropertyConfiguration config=ApiTokenPropertyConfiguration.get();
  config.setCreationOfLegacyTokenEnabled(true);
  config.setTokenGenerationOnCreationEnabled(false);
  prepareUsersForFilters();
  LegacyApiTokenAdministrativeMonitor monitor=j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);
  assertTrue(monitor.isActivated());
  JenkinsRule.WebClient wc=j.createWebClient();
  HtmlPage page=wc.goTo(monitor.getUrl() + "/manage");
  checkUserWithLegacyTokenListHasSizeOf(page,1 + 2 + 3+ 4,2 + 4,3 + 4);
{
    HtmlAnchor filterOnlyFresh=getFilterByIndex(page,SelectFilter.ONLY_FRESH);
    HtmlElementUtil.click(filterOnlyFresh);
  }
  HtmlButton revokeSelected=getRevokeSelected(page);
  HtmlElementUtil.click(revokeSelected);
  HtmlPage newPage=checkUserWithLegacyTokenListHasSizeOf(wc,monitor,1 + 3,0,3);
  assertTrue(monitor.isActivated());
{
    HtmlAnchor filterAll=getFilterByIndex(newPage,SelectFilter.ALL);
    HtmlElementUtil.click(filterAll);
  }
  revokeSelected=getRevokeSelected(newPage);
  HtmlElementUtil.click(revokeSelected);
  checkUserWithLegacyTokenListHasSizeOf(wc,monitor,0,0,0);
  assertFalse(monitor.isActivated());
}
