@Test @Issue("SECURITY-170") public void whitelistedParameterSameAfterChange() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject();
  String name=p.getFullName();
  p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(new StringParameterDefinition("foo","foo"),new StringParameterDefinition("bar","bar"))));
  try {
    System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME,"whitelisted1,whitelisted2");
    FreeStyleBuild build=j.assertBuildStatusSuccess(p.scheduleBuild2(0,new Cause.UserIdCause(),new ParametersAction(new StringParameterValue("foo","baz"),new StringParameterValue("bar","bar"),new StringParameterValue("whitelisted1","x"),new StringParameterValue("whitelisted2","y"),new StringParameterValue("whitelisted3","z"),new StringParameterValue("whitelisted4","w"))));
    assertTrue("whitelisted1 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted1"));
    assertTrue("whitelisted2 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted2"));
    assertFalse("whitelisted3 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted3"));
    assertFalse("whitelisted4 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted4"));
    System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME,"whitelisted3,whitelisted4");
    p=null;
    build=null;
    j.jenkins.reload();
    p=j.jenkins.getItemByFullName(name,FreeStyleProject.class);
    build=p.getLastBuild();
    assertTrue("whitelisted1 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted1"));
    assertTrue("whitelisted2 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted2"));
    assertFalse("whitelisted3 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted3"));
    assertFalse("whitelisted4 parameter is listed in getParameters",hasParameterWithName(build.getAction(ParametersAction.class),"whitelisted4"));
  }
  finally {
    System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);
  }
}
