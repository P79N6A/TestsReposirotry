@Test @Issue("SECURITY-904") public void directSymlink_forTestingZip() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject();
  assertEquals(Result.SUCCESS,p.scheduleBuild2(0).get().getResult());
  FilePath ws=p.getSomeWorkspace();
  File secretsFolder=new File(j.jenkins.getRootDir(),"secrets");
  FilePath a1=ws.child("a1");
  a1.mkdirs();
  a1.child("to_secrets1").symlinkTo(secretsFolder.getAbsolutePath(),TaskListener.NULL);
  FilePath b2=ws.child("b1").child("b2");
  b2.mkdirs();
  b2.child("to_secrets2").symlinkTo(secretsFolder.getAbsolutePath(),TaskListener.NULL);
  FilePath c3=ws.child("c1").child("c2").child("c3");
  c3.mkdirs();
  c3.child("to_secrets3").symlinkTo(secretsFolder.getAbsolutePath(),TaskListener.NULL);
  JenkinsRule.WebClient wc=j.createWebClient();
  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
{
    Page zipPage=wc.goTo(p.getUrl() + "ws/*zip*/ws.zip",null);
    assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK));
    List<String> entryNames=getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage);
    assertThat(entryNames,hasSize(0));
  }
{
    Page zipPage=wc.goTo(p.getUrl() + "ws/a1/*zip*/a1.zip",null);
    assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK));
    List<String> entryNames=getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage);
    assertThat(entryNames,hasSize(0));
  }
{
    Page zipPage=wc.goTo(p.getUrl() + "ws/b1/b2/*zip*/b2.zip",null);
    assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK));
    List<String> entryNames=getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage);
    assertThat(entryNames,hasSize(0));
  }
{
    Page zipPage=wc.goTo(p.getUrl() + "ws/c1/c2/c3/*zip*/c3.zip",null);
    assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK));
    List<String> entryNames=getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage);
    assertThat(entryNames,hasSize(0));
  }
}
