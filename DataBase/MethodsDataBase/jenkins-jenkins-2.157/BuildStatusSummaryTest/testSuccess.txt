@Test public void testSuccess(){
  when(this.build.getResult()).thenReturn(Result.SUCCESS);
  when(this.prevBuild.getResult()).thenReturn(Result.SUCCESS);
  Summary summary=this.build.getBuildStatusSummary();
  assertFalse(summary.isWorse);
  assertEquals(Messages.Run_Summary_Stable(),summary.message);
  when(this.build.getPreviousBuild()).thenReturn(null);
  summary=this.build.getBuildStatusSummary();
  assertFalse(summary.isWorse);
  assertEquals(Messages.Run_Summary_Stable(),summary.message);
  when(this.prevBuild.getResult()).thenReturn(Result.NOT_BUILT);
  summary=this.build.getBuildStatusSummary();
  assertFalse(summary.isWorse);
  assertEquals(Messages.Run_Summary_Stable(),summary.message);
  when(this.prevBuild.getResult()).thenReturn(Result.ABORTED);
  summary=this.build.getBuildStatusSummary();
  assertFalse(summary.isWorse);
  assertEquals(Messages.Run_Summary_Stable(),summary.message);
}
