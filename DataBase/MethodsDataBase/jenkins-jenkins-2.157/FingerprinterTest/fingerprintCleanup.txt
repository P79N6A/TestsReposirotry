@SuppressWarnings("unchecked") @Issue("JENKINS-18417") @Test public void fingerprintCleanup() throws Exception {
  FreeStyleProject p1=createFreeStyleProjectWithFingerprints(singleContents,singleFiles);
  FreeStyleProject p2=createFreeStyleProjectWithFingerprints(singleContents,singleFiles2);
  FreeStyleProject p3=createFreeStyleProjectWithFingerprints(singleContents,singleFiles);
  j.assertBuildStatusSuccess(p1.scheduleBuild2(0));
  j.assertBuildStatusSuccess(p2.scheduleBuild2(0));
  j.assertBuildStatusSuccess(p3.scheduleBuild2(0));
  Fingerprint f=j.jenkins._getFingerprint(Util.getDigestOf(singleContents[0] + System.lineSeparator()));
  assertNotNull(f);
  assertEquals(3,f.getUsages().size());
  j.jenkins.rebuildDependencyGraph();
  assertEquals(Arrays.asList(p1),p2.getUpstreamProjects());
  assertEquals(Arrays.asList(p1),p3.getUpstreamProjects());
  assertEquals(new HashSet(Arrays.asList(p2,p3)),new HashSet(p1.getDownstreamProjects()));
  p3.delete();
  new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());
  j.jenkins.rebuildDependencyGraph();
  assertEquals(2,f.getUsages().size());
  assertEquals(Arrays.asList(p1),p2.getUpstreamProjects());
  assertEquals(Arrays.asList(p2),p1.getDownstreamProjects());
  p2.getBuildersList().clear();
  p2.getPublishersList().clear();
  addFingerprinterToProject(p2,singleContents2,singleFiles2);
  j.assertBuildStatusSuccess(p2.scheduleBuild2(0));
  p2.getBuildByNumber(1).delete();
  new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());
  assertEquals(1,f.getUsages().size());
}
