/** 
 * {@link hudson.model.Queue.BlockedItem} is not static. Make sure its persistence doesn't end up re-persisting the whole Queue instance.
 */
@Test public void persistenceBlockedItem() throws Exception {
  Queue q=r.jenkins.getQueue();
  final SequenceLock seq=new SequenceLock();
  FreeStyleProject p=r.createFreeStyleProject();
  p.getBuildersList().add(new TestBuilder(){
    @Override public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      seq.phase(0);
      seq.phase(2);
      return true;
    }
  }
);
  Future<FreeStyleBuild> b1=p.scheduleBuild2(0);
  seq.phase(1);
  Future<FreeStyleBuild> b2=p.scheduleBuild2(0);
  q.scheduleMaintenance().get();
  Queue.Item[] items=q.getItems();
  assertEquals(1,items.length);
  assertTrue("Got " + items[0],items[0] instanceof BlockedItem);
  q.save();
}
