@Issue("JENKINS-33467") @Test public void foldableCauseAction() throws Exception {
  final OneShotEvent buildStarted=new OneShotEvent();
  final OneShotEvent buildShouldComplete=new OneShotEvent();
  r.setQuietPeriod(0);
  FreeStyleProject project=r.createFreeStyleProject();
  project.getBuildersList().add(new TestBuilder(){
    public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      buildStarted.signal();
      buildShouldComplete.block();
      return true;
    }
  }
);
  assertTrue(project.scheduleBuild(new UserIdCause()));
  buildStarted.block();
  Future<FreeStyleBuild> fb=project.scheduleBuild2(0,new UserIdCause());
  assertNotNull(fb);
  assertTrue(project.scheduleBuild(new SCMTriggerCause("")));
  assertTrue(project.scheduleBuild(new UserIdCause()));
  assertTrue(project.scheduleBuild(new TimerTriggerCause()));
  assertTrue(project.scheduleBuild(new RemoteCause("1.2.3.4","test")));
  assertTrue(project.scheduleBuild(new RemoteCause("4.3.2.1","test")));
  assertTrue(project.scheduleBuild(new SCMTriggerCause("")));
  assertTrue(project.scheduleBuild(new RemoteCause("1.2.3.4","test")));
  assertTrue(project.scheduleBuild(new RemoteCause("1.2.3.4","foo")));
  assertTrue(project.scheduleBuild(new SCMTriggerCause("")));
  assertTrue(project.scheduleBuild(new TimerTriggerCause()));
  buildShouldComplete.signal();
  FreeStyleBuild build=fb.get();
  CauseAction ca=build.getAction(CauseAction.class);
  assertNotNull(ca);
  StringBuilder causes=new StringBuilder();
  for (  Cause c : ca.getCauses())   causes.append(c.getShortDescription() + "\n");
  assertEquals("Build causes should have all items, even duplicates","Started by user SYSTEM\nStarted by user SYSTEM\n" + "Started by an SCM change\nStarted by an SCM change\nStarted by an SCM change\n" + "Started by timer\nStarted by timer\n"+ "Started by remote host 1.2.3.4 with note: test\n"+ "Started by remote host 1.2.3.4 with note: test\n"+ "Started by remote host 4.3.2.1 with note: test\n"+ "Started by remote host 1.2.3.4 with note: foo\n",causes.toString());
  JenkinsRule.WebClient wc=r.createWebClient();
  String nl=System.getProperty("line.separator");
  String buildPage=wc.getPage(build,"").asText().replace(nl," ");
  assertTrue("Build page should combine duplicates and show counts: " + buildPage,buildPage.contains("Started by user SYSTEM (2 times) " + "Started by an SCM change (3 times) " + "Started by timer (2 times) "+ "Started by remote host 1.2.3.4 with note: test (2 times) "+ "Started by remote host 4.3.2.1 with note: test "+ "Started by remote host 1.2.3.4 with note: foo"));
  System.out.println(new XmlFile(new File(build.getRootDir(),"build.xml")).asString());
}
