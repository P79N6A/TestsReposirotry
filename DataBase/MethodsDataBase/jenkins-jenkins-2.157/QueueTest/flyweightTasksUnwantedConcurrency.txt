@Issue("JENKINS-41127") @Test public void flyweightTasksUnwantedConcurrency() throws Exception {
  Label label=r.jenkins.getSelfLabel();
  AtomicInteger cnt=new AtomicInteger();
  TestFlyweightTask task1=new TestFlyweightTask(cnt,label);
  TestFlyweightTask task2=new TestFlyweightTask(cnt,label);
  assertFalse(task1.isConcurrentBuild());
  assertFalse(task2.isConcurrentBuild());
  Queue.withLock(() -> {
    r.jenkins.getQueue().schedule2(task1,0);
    r.jenkins.getQueue().maintain();
    Queue.Item item1=r.jenkins.getQueue().getItem(task1);
    assertThat(r.jenkins.getQueue().getPendingItems(),contains(item1));
    r.jenkins.getQueue().schedule2(task2,0);
    r.jenkins.getQueue().maintain();
    Queue.Item item2=r.jenkins.getQueue().getItem(task2);
    assertThat(r.jenkins.getQueue().getPendingItems(),contains(item1));
    assertTrue(item2.isBlocked());
  }
);
}
