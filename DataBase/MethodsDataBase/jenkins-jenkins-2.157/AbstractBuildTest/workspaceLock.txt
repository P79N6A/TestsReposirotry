@Test @Issue("JENKINS-10615") public void workspaceLock() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject();
  p.setConcurrentBuild(true);
  OneShotEvent e1=new OneShotEvent();
  OneShotEvent e2=new OneShotEvent();
  OneShotEvent done=new OneShotEvent();
  p.getPublishersList().add(new Recorder(){
    @Override public BuildStepMonitor getRequiredMonitorService(){
      return BuildStepMonitor.NONE;
    }
    @Override public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      if (build.number == 1) {
        e1.signal();
      }
 else {
        assert build.number == 2;
        e2.signal();
      }
      done.block();
      return true;
    }
    private Object writeReplace(){
      return new Object();
    }
  }
);
  QueueTaskFuture<FreeStyleBuild> b1=p.scheduleBuild2(0);
  e1.block();
  QueueTaskFuture<FreeStyleBuild> b2=p.scheduleBuild2(0);
  e2.block();
  assertNotEquals(b1.getStartCondition().get().getWorkspace(),b2.getStartCondition().get().getWorkspace());
  done.signal();
}
