@Test @PrepareForTest(Jenkins.class) public void testRecursionAvoidance(){
  PowerMockito.mockStatic(Jenkins.class);
  Jenkins mockJenkins=mock(Jenkins.class);
  PowerMockito.when(Jenkins.getInstance()).thenReturn(mockJenkins);
  DescriptorExtensionList<ComputerLauncher,Descriptor<ComputerLauncher>> mockList=mock(DescriptorExtensionList.class);
  doReturn(mockList).when(mockJenkins).getDescriptorList(eq(ComputerLauncher.class));
  ArrayList<Descriptor<ComputerLauncher>> returnedList=new ArrayList<>();
  returnedList.add(new DummyOne.DummyOneDescriptor());
  returnedList.add(new DummyTwo.DummyTwoDescriptor());
  when(mockList.iterator()).thenReturn(returnedList.iterator());
  assertTrue("DelegatingComputerLauncher should filter out other DelegatingComputerLauncher instances " + "from its descriptor's getApplicableDescriptors() method",new DummyTwo.DummyTwoDescriptor().applicableDescriptors(null,new DumbSlave.DescriptorImpl()).isEmpty());
}
