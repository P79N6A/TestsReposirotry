@Test public void testHasPermission() throws IOException {
  rule.jenkins.setSecurityRealm(rule.createDummySecurityRealm());
  User user=User.get("User");
  User user2=User.get("User2");
  MyViewsProperty property=new MyViewsProperty(AllView.DEFAULT_VIEW_NAME);
  property.readResolve();
  property.setUser(user);
  GlobalMatrixAuthorizationStrategy auth=new GlobalMatrixAuthorizationStrategy();
  rule.jenkins.setAuthorizationStrategy(auth);
  user.addProperty(property);
  SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
  assertFalse("User User2 should not configure permission for user User",property.hasPermission(Permission.CONFIGURE));
  SecurityContextHolder.getContext().setAuthentication(user.impersonate());
  assertTrue("User should control of himself.",property.hasPermission(Permission.CONFIGURE));
  auth.add(Jenkins.ADMINISTER,"User2");
  assertTrue("User User2 should configure permission for user User",property.hasPermission(Permission.CONFIGURE));
}
