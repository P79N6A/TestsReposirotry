@Issue("JENKINS-21958") @Test public void symlinks() throws Exception {
  FreeStyleProject p=j.createFreeStyleProject();
  p.getBuildersList().add(new TestBuilder(){
    @Override public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      FilePath ws=build.getWorkspace();
      if (ws == null) {
        return false;
      }
      FilePath dir=ws.child("dir");
      dir.mkdirs();
      dir.child("fizz").write("contents",null);
      dir.child("lodge").symlinkTo("fizz",listener);
      return true;
    }
  }
);
  ArtifactArchiver aa=new ArtifactArchiver("dir/lodge");
  aa.setAllowEmptyArchive(true);
  p.getPublishersList().add(aa);
  FreeStyleBuild b=j.assertBuildStatusSuccess(p.scheduleBuild2(0));
  FilePath ws=b.getWorkspace();
  assertNotNull(ws);
  assumeTrue("May not be testable on Windows:\n" + JenkinsRule.getLog(b),ws.child("dir/lodge").exists());
  List<FreeStyleBuild.Artifact> artifacts=b.getArtifacts();
  assertEquals(1,artifacts.size());
  FreeStyleBuild.Artifact artifact=artifacts.get(0);
  assertEquals("dir/lodge",artifact.relativePath);
  VirtualFile[] kids=b.getArtifactManager().root().child("dir").list();
  assertEquals(1,kids.length);
  assertEquals("lodge",kids[0].getName());
}
