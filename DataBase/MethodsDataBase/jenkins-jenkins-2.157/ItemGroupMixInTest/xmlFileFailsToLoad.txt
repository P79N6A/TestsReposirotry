/** 
 * This test unit makes sure that if part of the config.xml file is deleted it will still load everything else inside the folder. The test unit expects an IOException is thrown, and the one failed job fails to load.
 */
@Issue("JENKINS-22811") @Test public void xmlFileFailsToLoad() throws Exception {
  MockFolder folder=r.createFolder("folder");
  assertNotNull(folder);
  AbstractProject project=folder.createProject(FreeStyleProject.class,"job1");
  AbstractProject project2=folder.createProject(FreeStyleProject.class,"job2");
  AbstractProject project3=folder.createProject(FreeStyleProject.class,"job3");
  File configFile=project.getConfigFile().getFile();
  List<String> lines=FileUtils.readLines(configFile).subList(0,5);
  configFile.delete();
  FileUtils.writeByteArrayToFile(configFile,lines.toString().getBytes());
  for (int i=lines.size() / 2; i < lines.size(); i++) {
    FileUtils.writeStringToFile(configFile,lines.get(i),true);
  }
  r.jenkins.reload();
  assertNotNull("Folder failed to load.",r.jenkins.getItemByFullName("folder"));
  assertNull("Job should have failed to load.",r.jenkins.getItemByFullName("folder/job1"));
  assertNotNull("Other job in folder should have loaded.",r.jenkins.getItemByFullName("folder/job2"));
  assertNotNull("Other job in folder should have loaded.",r.jenkins.getItemByFullName("folder/job3"));
}
