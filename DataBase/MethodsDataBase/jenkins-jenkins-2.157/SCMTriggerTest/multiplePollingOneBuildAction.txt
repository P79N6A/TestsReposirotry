/** 
 * Make sure that only one polling result shows up per build.
 */
@Test @Issue("JENKINS-7649") public void multiplePollingOneBuildAction() throws Exception {
  final OneShotEvent buildStarted=new OneShotEvent();
  final OneShotEvent buildShouldComplete=new OneShotEvent();
  FreeStyleProject p=j.createFreeStyleProject();
  p.getBuildersList().add(new TestBuilder(){
    public boolean perform(    AbstractBuild<?,?> build,    Launcher launcher,    BuildListener listener) throws InterruptedException, IOException {
      buildStarted.signal();
      buildShouldComplete.block();
      return true;
    }
  }
);
  SCMTrigger t=new SCMTrigger("@daily");
  t.start(p,true);
  p.addTrigger(t);
  assertTrue(p.scheduleBuild(new UserCause()));
  buildStarted.block();
  Future<FreeStyleBuild> fb=p.scheduleBuild2(0,new UserCause());
  assertNotNull(fb);
  assertTrue(p.scheduleBuild(new SCMTriggerCause("First poll")));
  assertTrue(p.scheduleBuild(new SCMTriggerCause("Second poll")));
  assertTrue(p.scheduleBuild(new SCMTriggerCause("Third poll")));
  buildShouldComplete.signal();
  FreeStyleBuild build=fb.get();
  List<BuildAction> ba=build.getActions(BuildAction.class);
  assertFalse("There should only be one BuildAction.",ba.size() != 1);
}
