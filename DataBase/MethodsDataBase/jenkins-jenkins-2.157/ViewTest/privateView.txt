@Test public void privateView() throws Exception {
  j.createFreeStyleProject("project1");
  User user=User.get("me",true);
  WebClient wc=j.createWebClient();
  HtmlPage userPage=wc.goTo("user/me");
  HtmlAnchor privateViewsLink=userPage.getAnchorByText("My Views");
  assertNotNull("My Views link not available",privateViewsLink);
  HtmlPage privateViewsPage=(HtmlPage)privateViewsLink.click();
  Text viewLabel=(Text)privateViewsPage.getFirstByXPath("//div[@class='tabBar']//div[@class='tab active']/a/text()");
  assertTrue("'All' view should be selected",viewLabel.getTextContent().contains(Hudson_ViewName()));
  View listView=listView("listView");
  HtmlPage newViewPage=wc.goTo("user/me/my-views/newView");
  HtmlForm form=newViewPage.getFormByName("createItem");
  form.getInputByName("name").setValueAttribute("proxy-view");
  ((HtmlRadioButtonInput)form.getInputByValue("hudson.model.ProxyView")).setChecked(true);
  HtmlPage proxyViewConfigurePage=j.submit(form);
  View proxyView=user.getProperty(MyViewsProperty.class).getView("proxy-view");
  assertNotNull(proxyView);
  form=proxyViewConfigurePage.getFormByName("viewConfig");
  form.getSelectByName("proxiedViewName").setSelectedAttribute("listView",true);
  j.submit(form);
  assertTrue(proxyView instanceof ProxyView);
  assertEquals(((ProxyView)proxyView).getProxiedViewName(),"listView");
  assertEquals(((ProxyView)proxyView).getProxiedView(),listView);
}
