@Test public void testGetComputers() throws IOException, Exception {
  ListView view1=listView("view1");
  ListView view2=listView("view2");
  ListView view3=listView("view3");
  view1.filterExecutors=true;
  view2.filterExecutors=true;
  view3.filterExecutors=true;
  Slave slave0=j.createOnlineSlave(j.jenkins.getLabel("label0"));
  Slave slave1=j.createOnlineSlave(j.jenkins.getLabel("label1"));
  Slave slave2=j.createOnlineSlave(j.jenkins.getLabel("label2"));
  Slave slave3=j.createOnlineSlave(j.jenkins.getLabel("label0"));
  Slave slave4=j.createOnlineSlave(j.jenkins.getLabel("label4"));
  FreeStyleProject freestyleJob=j.createFreeStyleProject("free");
  view1.add(freestyleJob);
  freestyleJob.setAssignedLabel(j.jenkins.getLabel("label0||label2"));
  MatrixProject matrixJob=j.jenkins.createProject(MatrixProject.class,"matrix");
  view1.add(matrixJob);
  matrixJob.setAxes(new AxisList(new LabelAxis("label",Arrays.asList("label1"))));
  FreeStyleProject noLabelJob=j.createFreeStyleProject("not-assigned-label");
  view3.add(noLabelJob);
  noLabelJob.setAssignedLabel(null);
  FreeStyleProject foreignJob=j.createFreeStyleProject("in-other-view");
  view2.add(foreignJob);
  foreignJob.setAssignedLabel(j.jenkins.getLabel("label0||label1"));
  assertContainsNodes(view1,slave0,slave1,slave2,slave3);
  assertNotContainsNodes(view1,slave4);
  assertContainsNodes(view2,slave0,slave1,slave3);
  assertNotContainsNodes(view2,slave2,slave4);
  assertContainsNodes(view3,slave0,slave1,slave2,slave3,slave4);
}
