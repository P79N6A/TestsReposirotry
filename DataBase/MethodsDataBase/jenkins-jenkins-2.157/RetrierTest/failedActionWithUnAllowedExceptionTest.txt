@Test public void failedActionWithUnAllowedExceptionTest(){
  final int ATTEMPTS=1;
  final String ACTION="print";
  RingBufferLogHandler handler=new RingBufferLogHandler(20);
  Logger.getLogger(Retrier.class.getName()).addHandler(handler);
  Retrier<Boolean> r=new Retrier.Builder<>((Callable<Boolean>)() -> {
    throw new IOException("Unallowed exception breaks the process");
  }
,(currentAttempt,result) -> result,ACTION).withAttempts(ATTEMPTS).withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class}).build();
  try {
    r.start();
    fail("The process should be exited with an unexpected exception");
  }
 catch (  IOException e) {
    String testFailure=Messages.Retrier_ExceptionThrown(ATTEMPTS,ACTION);
    assertTrue(String.format("The log should contain '%s'",testFailure),handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));
  }
catch (  Exception e) {
    fail(String.format("Unexpected exception: %s",e));
  }
}
