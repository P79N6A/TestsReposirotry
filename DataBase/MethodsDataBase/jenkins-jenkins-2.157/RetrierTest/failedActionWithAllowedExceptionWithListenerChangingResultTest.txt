@Test public void failedActionWithAllowedExceptionWithListenerChangingResultTest() throws Exception {
  final int ATTEMPTS=1;
  final String ACTION="print";
  RingBufferLogHandler handler=new RingBufferLogHandler(20);
  Logger.getLogger(Retrier.class.getName()).addHandler(handler);
  Retrier<Boolean> r=new Retrier.Builder<>((Callable<Boolean>)() -> {
    throw new IndexOutOfBoundsException("Exception allowed considered as failure");
  }
,(currentAttempt,result) -> result,ACTION).withAttempts(ATTEMPTS).withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class}).withDuringActionExceptionListener((attempt,exception) -> true).build();
  Boolean finalResult=r.start();
  Assert.assertTrue(finalResult == null ? false : finalResult);
  String textSuccess=Messages.Retrier_Success(ACTION,ATTEMPTS);
  assertTrue(String.format("The log should contain '%s'",textSuccess),handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));
  String testException=Messages.Retrier_ExceptionFailed(ATTEMPTS,ACTION);
  assertTrue(String.format("The log should contain '%s'",testException),handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));
}
