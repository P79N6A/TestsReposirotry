/** 
 * Directory rewrite and recursion detection
 */
@Test public void recursionDetection() throws Exception {
  assumeFalse("Symlinks don't work on Windows very well",Functions.isWindows());
  SecretRewriter sw=new SecretRewriter();
  TaskListener st=StreamTaskListener.fromStdout();
  String o=encryptOld("Hello world");
  String n=encryptNew("Hello world");
  String payload="<msg>" + o + "</msg>";
  String answer="<msg>" + n + "</msg>";
  File t=tmp.newFolder("t");
  List<String> dirs=Arrays.asList("a","b","c","c/d","c/d/e");
  for (  String p : dirs) {
    File d=new File(t,p);
    d.mkdir();
    try {
      FileUtils.write(new File(d,"foo.xml"),payload);
    }
 catch (    IOException x) {
      assert false : x;
    }
  }
  File t2=tmp.newFolder("t2");
  FileUtils.write(new File(t2,"foo.xml"),payload);
  new FilePath(t).child("c/symlink").symlinkTo("..",st);
  new FilePath(t).child("b/symlink").symlinkTo(".",st);
  new FilePath(t).child("a/symlink").symlinkTo(t2.getAbsolutePath(),st);
  assertEquals(6,sw.rewriteRecursive(t,st));
  for (  String p : dirs) {
    assertTrue(MSG_PATTERN.matcher(FileUtils.readFileToString(new File(t,p + "/foo.xml")).trim()).matches());
  }
  assertTrue(MSG_PATTERN.matcher(FileUtils.readFileToString(new File(t2,"foo.xml")).trim()).matches());
}
