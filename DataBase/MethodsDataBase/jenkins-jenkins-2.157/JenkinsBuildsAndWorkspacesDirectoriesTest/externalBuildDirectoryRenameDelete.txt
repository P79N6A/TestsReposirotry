@Test @Issue("JENKINS-17138") public void externalBuildDirectoryRenameDelete() throws Exception {
  final List<String> builds=new ArrayList<>();
  story.then(steps -> {
    builds.add(story.j.createTmpDir().toString());
    assertTrue(story.j.getInstance().isDefaultBuildDir());
    setBuildsDirProperty(builds.get(0) + "/${ITEM_FULL_NAME}");
  }
);
  story.then(steps -> {
    assertEquals(builds.get(0) + "/${ITEM_FULL_NAME}",story.j.jenkins.getRawBuildsDir());
    FreeStyleProject p=story.j.jenkins.createProject(MockFolder.class,"d").createProject(FreeStyleProject.class,"prj");
    FreeStyleBuild b=p.scheduleBuild2(0).get();
    File oldBuildDir=new File(builds.get(0),"d/prj");
    assertEquals(new File(oldBuildDir,b.getId()),b.getRootDir());
    assertTrue(b.getRootDir().isDirectory());
    p.renameTo("proj");
    File newBuildDir=new File(builds.get(0),"d/proj");
    assertEquals(new File(newBuildDir,b.getId()),b.getRootDir());
    assertTrue(b.getRootDir().isDirectory());
    p.delete();
    assertFalse(b.getRootDir().isDirectory());
  }
);
}
