@Test @Issue("JENKINS-44361") public void redirectToEndpointShouldBeFollowed() throws Exception {
  home=tempHome();
  grabCliJar();
  SSHD sshd=GlobalConfiguration.all().get(SSHD.class);
  sshd.setPort(0);
  sshd.start();
  JenkinsRule.WebClient wc=r.createWebClient();
  wc.getOptions().setRedirectEnabled(false);
  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
  WebResponse rsp=wc.goTo("cli-proxy/").getWebResponse();
  assertEquals(rsp.getContentAsString(),302,rsp.getStatusCode());
  assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue("X-Jenkins"));
  assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue("X-Jenkins-CLI-Port"));
  assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue("X-SSH-Endpoint"));
  for (  String transport : Arrays.asList("-remoting","-http","-ssh")) {
    String url=r.getURL().toString() + "cli-proxy/";
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    int ret=new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds("java","-Duser.home=" + home,"-jar",jar.getAbsolutePath(),"-s",url,transport,"-user","asdf","who-am-i").stdout(baos).stderr(baos).join();
    assertThat(baos.toString(),containsString("Authenticated as: anonymous"));
    assertEquals(0,ret);
  }
}
