@Test public void newInstanceAmbiguity(){
  Test2 test;
  test=ReflectUtils.reflect(Test2.class).newInstance().get();
  assertEquals(null,test.n);
  assertEquals(Test2.ConstructorType.NO_ARGS,test.constructorType);
  test=ReflectUtils.reflect(Test2.class).newInstance("abc").get();
  assertEquals("abc",test.n);
  assertEquals(Test2.ConstructorType.OBJECT,test.constructorType);
  test=ReflectUtils.reflect(Test2.class).newInstance(new Long("1")).get();
  assertEquals(1L,test.n);
  assertEquals(Test2.ConstructorType.NUMBER,test.constructorType);
  test=ReflectUtils.reflect(Test2.class).newInstance(1).get();
  assertEquals(1,test.n);
  assertEquals(Test2.ConstructorType.INTEGER,test.constructorType);
  test=ReflectUtils.reflect(Test2.class).newInstance('a').get();
  assertEquals('a',test.n);
  assertEquals(Test2.ConstructorType.OBJECT,test.constructorType);
}
