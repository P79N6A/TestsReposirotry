@Test public void testMatch(){
  List<ServiceDefinition> definitions=new ArrayList<>();
  definitions.add(DefaultServiceDefinition.builder().withName("service-1").withHost("host-1.domain1.com").withPort(2001).build());
  definitions.add(DefaultServiceDefinition.builder().withName("service-2").withHost("host-2.domain1.com").withPort(2001).build());
  definitions.add(DefaultServiceDefinition.builder().withName("service-3").withHost("host-3.domain1.com").withPort(2001).build());
  definitions.add(DefaultServiceDefinition.builder().withName("service-4").withHost("host-3.domain2.com").withPort(2001).build());
  assertTrue(DefaultServiceDefinition.builder().withName("*").withHost(".*\\.domain1\\.com").withPort(2001).build().matches(definitions.get(0)));
  assertTrue(DefaultServiceDefinition.builder().withName("service-1").withHost("host-1.domain1.com").withPort(2001).build().matches(definitions.get(0)));
  assertTrue(DefaultServiceDefinition.builder().withName("service-.*").withHost("host-1.domain1.com").withPort(2001).build().matches(definitions.get(0)));
  assertTrue(DefaultServiceDefinition.builder().withName("service-.*").withHost("host-.*\\.domain.*\\.com").withPort(2001).build().matches(definitions.get(0)));
  assertTrue(DefaultServiceDefinition.builder().withName("service-.*").withHost("host-.*\\.domain.*\\.com").withPort(2001).build().matches(definitions.get(1)));
  assertTrue(DefaultServiceDefinition.builder().withName("service-.*").withHost("host-.*\\.domain.*\\.com").withPort(2001).build().matches(definitions.get(2)));
  assertTrue(DefaultServiceDefinition.builder().withName("service-.*").withHost("host-.*\\.domain.*\\.com").withPort(2001).build().matches(definitions.get(3)));
  assertFalse(DefaultServiceDefinition.builder().withName("service-.*").withHost("host-1.domain1.com").withPort(2001).build().matches(definitions.get(3)));
  assertFalse(DefaultServiceDefinition.builder().withName("*").withHost(".*\\.domain1\\.com").withPort(2001).build().matches(definitions.get(3)));
  assertFalse(DefaultServiceDefinition.builder().withName("*").withHost(".*\\.domain1\\.com").withPort(2002).build().matches(definitions.get(3)));
}
