@Test public void sendDefaultConfigurationShouldSucceed() throws Exception {
  mockGmond.setMinimumExpectedMessageCount(0);
  mockGmond.setAssertPeriod(100L);
  mockGmond.whenAnyExchangeReceived(new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      Ganglia_message gangliaMessage=exchange.getIn().getBody(Ganglia_message.class);
      assertNotNull("The gmond mock should only receive a non-null ganglia message",gangliaMessage);
      assertEquals(DEFAULT_METRIC_NAME,gangliaMessage.gmetric.name);
      assertEquals(DEFAULT_TYPE.getGangliaType(),gangliaMessage.gmetric.type);
      assertEquals(DEFAULT_SLOPE.getGangliaSlope(),gangliaMessage.gmetric.slope);
      assertEquals(DEFAULT_UNITS,gangliaMessage.gmetric.units);
      assertEquals(DEFAULT_TMAX,gangliaMessage.gmetric.tmax);
      assertEquals(DEFAULT_DMAX,gangliaMessage.gmetric.dmax);
      assertEquals("28.0",gangliaMessage.gmetric.value);
    }
  }
);
  template.sendBody(getTestUri(),"28.0");
  mockGmond.assertIsSatisfied();
}
