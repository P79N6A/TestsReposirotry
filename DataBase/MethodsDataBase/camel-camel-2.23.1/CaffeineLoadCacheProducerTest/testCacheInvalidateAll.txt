@Test public void testCacheInvalidateAll() throws Exception {
  final Cache<Object,Object> cache=getTestCache();
  final Map<Integer,Integer> map=new HashMap<>();
  map.put(1,1);
  map.put(2,2);
  map.put(3,3);
  final Set<Integer> keys=map.keySet().stream().limit(2).collect(Collectors.toSet());
  cache.putAll(map);
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMinimumMessageCount(1);
  mock.expectedHeaderReceived(CaffeineConstants.ACTION_HAS_RESULT,false);
  mock.expectedHeaderReceived(CaffeineConstants.ACTION_SUCCEEDED,true);
  fluentTemplate().withHeader(CaffeineConstants.ACTION,CaffeineConstants.ACTION_INVALIDATE_ALL).withHeader(CaffeineConstants.KEYS,keys).to("direct://start").send();
  assertMockEndpointsSatisfied();
  final Map<String,String> elements=getTestCache().getAllPresent(keys);
  keys.forEach(k -> {
    assertFalse(elements.containsKey(k));
  }
);
}
