@Test public void testCreateEndpoint() throws Exception {
  component.setCamelContext(camelContext);
  when(camelContext.getRegistry()).thenReturn(camelRegistry);
  when(camelContext.getTypeConverter()).thenReturn(typeConverter);
  when(typeConverter.convertTo(String.class,"key=value")).thenReturn("key=value");
  when(camelRegistry.lookupByNameAndType(MicrometerConstants.METRICS_REGISTRY_NAME,MeterRegistry.class)).thenReturn(metricRegistry);
  Map<String,Object> params=new HashMap<>();
  params.put("tags","key=value");
  Endpoint result=component.createEndpoint("micrometer:counter:counter","counter:counter",params);
  assertThat(result,is(notNullValue()));
  assertThat(result,is(instanceOf(MicrometerEndpoint.class)));
  MicrometerEndpoint me=(MicrometerEndpoint)result;
  assertThat(me.getMetricsName(),is("counter"));
  assertThat(me.getRegistry(),is(metricRegistry));
  inOrder.verify(camelContext,times(1)).getRegistry();
  inOrder.verify(camelRegistry,times(1)).lookupByNameAndType(MicrometerConstants.METRICS_REGISTRY_NAME,MeterRegistry.class);
  inOrder.verify(camelContext,times(1)).getTypeConverter();
  inOrder.verify(typeConverter,times(1)).convertTo(String.class,"key=value");
  inOrder.verify(camelContext,times(1)).getTypeConverter();
  inOrder.verifyNoMoreInteractions();
}
