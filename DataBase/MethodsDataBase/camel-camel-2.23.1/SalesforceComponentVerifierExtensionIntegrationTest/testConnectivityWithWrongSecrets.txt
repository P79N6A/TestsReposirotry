@Test public void testConnectivityWithWrongSecrets(){
  Map<String,Object> parameters=getParameters();
  parameters.put("clientId","wrong-client-id");
  parameters.put("clientSecret","wrong-client-secret");
  ComponentVerifierExtension.Result result=getExtension().verify(ComponentVerifierExtension.Scope.CONNECTIVITY,parameters);
  Assert.assertEquals(ComponentVerifier.Result.Status.ERROR,result.getStatus());
  Assert.assertEquals(ComponentVerifier.Result.Status.ERROR,result.getStatus());
  Assert.assertEquals(2,result.getErrors().size());
  Assert.assertEquals(ComponentVerifierExtension.VerificationError.StandardCode.EXCEPTION,result.getErrors().get(0).getCode());
  Assert.assertNotNull(result.getErrors().get(0).getDetails().get(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE));
  Assert.assertTrue(result.getErrors().get(0).getDetails().get(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof SalesforceException);
  Assert.assertEquals(400,result.getErrors().get(0).getDetails().get(ComponentVerifier.VerificationError.HttpAttribute.HTTP_CODE));
  Assert.assertEquals("invalid_client_id",result.getErrors().get(1).getDetail("salesforce_code"));
}
