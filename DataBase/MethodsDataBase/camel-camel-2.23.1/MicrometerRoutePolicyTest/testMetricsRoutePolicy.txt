@Test public void testMetricsRoutePolicy() throws Exception {
  int count=10;
  MockEndpoint mockEndpoint=getMockEndpoint("mock:result");
  mockEndpoint.expectedMessageCount(count);
  for (int i=0; i < count; i++) {
    if (i % 2 == 0) {
      template.sendBody("direct:foo","Hello " + i);
    }
 else {
      template.sendBody("direct:bar","Hello " + i);
    }
  }
  assertMockEndpointsSatisfied();
  Timer fooTimer=meterRegistry.find(DEFAULT_CAMEL_ROUTE_POLICY_METER_NAME).tag(ROUTE_ID_TAG,"foo").timer();
  assertEquals(count / 2,fooTimer.count());
  assertTrue(fooTimer.mean(TimeUnit.MILLISECONDS) > DELAY_FOO);
  assertTrue(fooTimer.max(TimeUnit.MILLISECONDS) > DELAY_FOO);
  assertTrue(fooTimer.totalTime(TimeUnit.MILLISECONDS) > DELAY_FOO * count / 2);
  Timer barTimer=meterRegistry.find(DEFAULT_CAMEL_ROUTE_POLICY_METER_NAME).tag(ROUTE_ID_TAG,"bar").timer();
  assertEquals(count / 2,barTimer.count());
  assertTrue(barTimer.mean(TimeUnit.MILLISECONDS) > DELAY_BAR);
  assertTrue(barTimer.max(TimeUnit.MILLISECONDS) > DELAY_BAR);
  assertTrue(barTimer.totalTime(TimeUnit.MILLISECONDS) > DELAY_BAR * count / 2);
}
