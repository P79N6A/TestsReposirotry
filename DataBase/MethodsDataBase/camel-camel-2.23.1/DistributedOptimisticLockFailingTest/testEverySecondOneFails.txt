@Test public void testEverySecondOneFails() throws Exception {
  int size=200;
  ExecutorService service=Executors.newFixedThreadPool(10);
  List<Callable<Object>> tasks=new ArrayList<>();
  for (int i=0; i < size; i++) {
    final int id=i % 25;
    final int choice=i % 2;
    final int count=i;
    tasks.add(new Callable<Object>(){
      public Object call() throws Exception {
        if (choice == 0) {
          template.sendBodyAndHeader("direct:everysecondone","" + count,"id",id);
        }
 else {
          template2.sendBodyAndHeader("direct:everysecondone","" + count,"id",id);
        }
        return null;
      }
    }
);
  }
  MockEndpoint mock=getMockEndpoint("mock:result");
  MockEndpoint mock2=getMockEndpoint2("mock:result");
  service.invokeAll(tasks);
  service.shutdown();
  service.awaitTermination(10,TimeUnit.SECONDS);
  int contextCount=mock.getReceivedCounter();
  int context2Count=mock2.getReceivedCounter();
  assertEquals(25,contextCount + context2Count);
}
