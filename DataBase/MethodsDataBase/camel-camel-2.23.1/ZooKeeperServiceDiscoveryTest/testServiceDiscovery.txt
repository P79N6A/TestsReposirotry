@Test public void testServiceDiscovery() throws Exception {
  ZooKeeperCuratorConfiguration configuration=new ZooKeeperCuratorConfiguration();
  ServiceDiscovery<ZooKeeperServiceDiscovery.MetaData> zkDiscovery=null;
  ZooKeeperTestSupport.TestZookeeperServer server=null;
  int port=AvailablePortFinder.getNextAvailable();
  try {
    server=new ZooKeeperTestSupport.TestZookeeperServer(port,true);
    ZooKeeperTestSupport.waitForServerUp("localhost:" + port,1000);
    configuration.setBasePath("/camel");
    configuration.setCuratorFramework(CuratorFrameworkFactory.builder().connectString("localhost:" + port).retryPolicy(new ExponentialBackoffRetry(1000,3)).build());
    zkDiscovery=ZooKeeperCuratorHelper.createServiceDiscovery(configuration,configuration.getCuratorFramework(),ZooKeeperServiceDiscovery.MetaData.class);
    configuration.getCuratorFramework().start();
    zkDiscovery.start();
    List<ServiceInstance<ZooKeeperServiceDiscovery.MetaData>> instances=new ArrayList<>();
    for (int i=0; i < 3; i++) {
      ServiceInstance<ZooKeeperServiceDiscovery.MetaData> instance=ServiceInstance.<ZooKeeperServiceDiscovery.MetaData>builder().address("127.0.0.1").port(AvailablePortFinder.getNextAvailable()).name("my-service").id("service-" + i).build();
      zkDiscovery.registerService(instance);
      instances.add(instance);
    }
    ZooKeeperServiceDiscovery discovery=new ZooKeeperServiceDiscovery(configuration);
    discovery.start();
    List<ServiceDefinition> services=discovery.getServices("my-service");
    assertNotNull(services);
    assertEquals(3,services.size());
    for (    ServiceDefinition service : services) {
      Assert.assertEquals(1,instances.stream().filter(i -> {
        return i.getPort() == service.getPort() && i.getAddress().equals(service.getHost()) && i.getId().equals(service.getMetadata().get(ServiceDefinition.SERVICE_META_ID)) && i.getName().equals(service.getName());
      }
).count());
    }
  }
  finally {
    CloseableUtils.closeQuietly(zkDiscovery);
    CloseableUtils.closeQuietly(configuration.getCuratorFramework());
    if (server != null) {
      server.shutdown();
    }
  }
}
