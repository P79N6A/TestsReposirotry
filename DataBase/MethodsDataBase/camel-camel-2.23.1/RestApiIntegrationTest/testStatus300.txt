@Test public void testStatus300() throws Exception {
  final Merchandise__c merchandise=template().requestBodyAndHeader("direct:getSObject",testId,"sObjectFields","Name,Description__c,Price__c,Total_Inventory__c",Merchandise__c.class);
  assertNotNull(merchandise);
  assertNotNull(merchandise.getName());
  assertNotNull(merchandise.getPrice__c());
  assertNotNull(merchandise.getTotal_Inventory__c());
  CreateSObjectResult result=null;
  try {
    merchandise.clearBaseFields();
    result=template().requestBody("direct:createSObject",merchandise,CreateSObjectResult.class);
    assertNotNull(result);
    assertNotNull(result.getId());
    try {
      template().requestBody("direct:getSObjectWithId",merchandise,Merchandise__c.class);
      fail("Expected SalesforceException with statusCode 300");
    }
 catch (    final CamelExecutionException e) {
      final Throwable cause=e.getCause();
      assertTrue(cause instanceof SalesforceMultipleChoicesException);
      final SalesforceMultipleChoicesException multipleChoices=(SalesforceMultipleChoicesException)cause;
      assertEquals(300,multipleChoices.getStatusCode());
      final List<String> choices=multipleChoices.getChoices();
      assertNotNull(choices);
      assertFalse(choices.isEmpty());
    }
  }
  finally {
    if (result != null) {
      template().requestBody("direct:deleteSObject",result.getId());
    }
  }
}
