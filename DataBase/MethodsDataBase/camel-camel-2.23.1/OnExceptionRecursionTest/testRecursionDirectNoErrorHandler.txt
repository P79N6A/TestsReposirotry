@Test public void testRecursionDirectNoErrorHandler() throws Exception {
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      onException(Throwable.class).to("mock:c").to("direct:handle");
      from("direct:test").to("mock:a").throwException(new IllegalStateException("Bad state")).to("mock:b");
      from("direct:handle").errorHandler(noErrorHandler()).to("mock:d").log("Handling exception").throwException(new NullPointerException("A NPE error here"));
    }
  }
);
  context.start();
  getMockEndpoint("mock:a").expectedMessageCount(1);
  getMockEndpoint("mock:b").expectedMessageCount(0);
  getMockEndpoint("mock:c").expectedMessageCount(1);
  getMockEndpoint("mock:d").expectedMessageCount(1);
  try {
    template.sendBody("direct:test","Hello World");
    fail("Should have thrown exception");
  }
 catch (  CamelExecutionException e) {
    NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
    assertEquals("A NPE error here",npe.getMessage());
    IllegalStateException ise=assertIsInstanceOf(IllegalStateException.class,npe.getSuppressed()[0]);
    assertEquals("Bad state",ise.getMessage());
  }
  assertMockEndpointsSatisfied();
}
