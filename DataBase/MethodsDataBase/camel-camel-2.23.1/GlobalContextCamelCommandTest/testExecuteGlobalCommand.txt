@Test public void testExecuteGlobalCommand() throws Exception {
  String camelEndpointId="testCamelRoute";
  String camelRouteUri="direct:" + camelEndpointId;
  String testReponse="testResponse";
  String runtimeManagerId="testRuntimeManager";
  when(producerTemplate.send(eq(camelRouteUri),any(Exchange.class))).thenReturn(outExchange);
  when(producerTemplate.getCamelContext()).thenReturn(camelContext);
  when(camelContext.createProducerTemplate()).thenReturn(producerTemplate);
  when(outExchange.getOut()).thenReturn(outMessage);
  when(outMessage.getBody()).thenReturn(testReponse);
  try {
    ServiceRegistry.get().register(JBPMConstants.GLOBAL_CAMEL_CONTEXT_SERVICE_KEY,camelContext);
    WorkItemImpl workItem=new WorkItemImpl();
    workItem.setParameter(JBPMConstants.CAMEL_ENDPOINT_ID_WI_PARAM,camelEndpointId);
    workItem.setParameter("Request","someRequest");
    when(commandContext.getData(anyString())).thenReturn(workItem);
    Command command=new GlobalContextCamelCommand();
    ExecutionResults results=command.execute(commandContext);
    assertNotNull(results);
    assertEquals(2,results.getData().size());
    assertEquals(testReponse,results.getData().get(JBPMConstants.RESPONSE_WI_PARAM));
  }
  finally {
    ServiceRegistry.get().remove(JBPMConstants.GLOBAL_CAMEL_CONTEXT_SERVICE_KEY);
  }
}
