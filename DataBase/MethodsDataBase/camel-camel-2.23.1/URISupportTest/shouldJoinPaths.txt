@Test public void shouldJoinPaths(){
  Assertions.assertThat(URISupport.joinPaths(null,null)).isEmpty();
  Assertions.assertThat(URISupport.joinPaths("",null)).isEmpty();
  Assertions.assertThat(URISupport.joinPaths(null,"")).isEmpty();
  Assertions.assertThat(URISupport.joinPaths("","")).isEmpty();
  Assertions.assertThat(URISupport.joinPaths("a","")).isEqualTo("a");
  Assertions.assertThat(URISupport.joinPaths("a","b")).isEqualTo("a/b");
  Assertions.assertThat(URISupport.joinPaths("/a","b")).isEqualTo("/a/b");
  Assertions.assertThat(URISupport.joinPaths("/a","b/")).isEqualTo("/a/b/");
  Assertions.assertThat(URISupport.joinPaths("/a/","b/")).isEqualTo("/a/b/");
  Assertions.assertThat(URISupport.joinPaths("/a/","/b/")).isEqualTo("/a/b/");
  Assertions.assertThat(URISupport.joinPaths("a","b","c")).isEqualTo("a/b/c");
  Assertions.assertThat(URISupport.joinPaths("a",null,"c")).isEqualTo("a/c");
  Assertions.assertThat(URISupport.joinPaths("/a/","/b","c/","/d/")).isEqualTo("/a/b/c/d/");
  Assertions.assertThat(URISupport.joinPaths("/a/","/b","c/",null)).isEqualTo("/a/b/c/");
  Assertions.assertThat(URISupport.joinPaths("/a/",null,null,null)).isEqualTo("/a/");
  Assertions.assertThat(URISupport.joinPaths("a/","/b",null,null)).isEqualTo("a/b");
}
