@Test public void testConnectivityWithWrongAuthentication(){
  Map<String,Object> parameters=getParameters();
  parameters.put("userName","unknown-user");
  parameters.remove("oauthClientId");
  parameters.remove("oauthClientSecret");
  ComponentVerifier.Result result=getVerifier().verify(ComponentVerifier.Scope.CONNECTIVITY,parameters);
  Assert.assertEquals(ComponentVerifier.Result.Status.ERROR,result.getStatus());
  Assert.assertEquals(1,result.getErrors().size());
  Assert.assertEquals(ComponentVerifier.VerificationError.StandardCode.AUTHENTICATION,result.getErrors().get(0).getCode());
  Assert.assertNotNull(result.getErrors().get(0).getDetails().get(ComponentVerifier.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE));
  Assert.assertEquals(401,result.getErrors().get(0).getDetails().get(ComponentVerifier.VerificationError.HttpAttribute.HTTP_CODE));
  Assert.assertTrue(result.getErrors().get(0).getDetails().get(ComponentVerifier.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof ServiceNowException);
  Assert.assertTrue(result.getErrors().get(0).getParameterKeys().contains("userName"));
  Assert.assertTrue(result.getErrors().get(0).getParameterKeys().contains("password"));
  Assert.assertTrue(result.getErrors().get(0).getParameterKeys().contains("oauthClientId"));
  Assert.assertTrue(result.getErrors().get(0).getParameterKeys().contains("oauthClientSecret"));
}
