/** 
 * As the correlationID should be unique when receiving the reply message,  now we just expect to get an exception here.
 */
@Test public void testRequestReplyCorrelationWithDuplicateId() throws Exception {
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMessageCount(1);
  NotifyBuilder notify=new NotifyBuilder(context).whenReceived(1).create();
  template.asyncSend("jms:queue:helloDelay",new Processor(){
    public void process(    Exchange exchange) throws Exception {
      exchange.setPattern(ExchangePattern.InOut);
      Message in=exchange.getIn();
      in.setBody("Hello World");
      in.setHeader("JMSCorrelationID","b");
    }
  }
);
  notify.matches(1,TimeUnit.SECONDS);
  Exchange out=template.send("jms:queue:helloDelay",ExchangePattern.InOut,new Processor(){
    public void process(    Exchange exchange) throws Exception {
      Message in=exchange.getIn();
      in.setBody("Hello World");
      in.setHeader("JMSCorrelationID","b");
    }
  }
);
  result.assertIsSatisfied();
  assertNotNull("We are expecting the exception here!",out.getException());
  assertTrue("Get a wrong exception",out.getException() instanceof IllegalArgumentException);
}
