@Test(expected=WorkItemHandlerRuntimeException.class) public void testSyncInOutException() throws Exception {
  String routeId="testSyncInOutExceptionRoute";
  RouteBuilder builder=new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").routeId(routeId).setBody(simple("${body.getParameter(\"Request\")}")).throwException(new IllegalArgumentException("Illegal contennt!")).to("mock:result");
    }
  }
;
  context.addRoutes(builder);
  try {
    ServiceRegistry.get().register(JBPMConstants.GLOBAL_CAMEL_CONTEXT_SERVICE_KEY,context);
    String expectedBody="helloRequest";
    resultEndpoint.expectedBodiesReceived(expectedBody);
    WorkItemImpl workItem=new WorkItemImpl();
    workItem.setParameter(JBPMConstants.CAMEL_ENDPOINT_ID_WI_PARAM,"start");
    workItem.setParameter("Request",expectedBody);
    TestWorkItemManager manager=new TestWorkItemManager();
    WorkItemHandler handler=new InOutCamelWorkItemHandler();
    handler.executeWorkItem(workItem,manager);
  }
  finally {
    context.removeRoute(routeId);
    ServiceRegistry.get().remove(JBPMConstants.GLOBAL_CAMEL_CONTEXT_SERVICE_KEY);
  }
}
