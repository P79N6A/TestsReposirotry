@Test public void testDynamicUri() throws Exception {
  StaticServiceDiscovery sd=new StaticServiceDiscovery();
  sd.addServer("scall@127.0.0.1:8080");
  sd.addServer("scall@127.0.0.1:8081");
  ServiceCallConfigurationDefinition conf=new ServiceCallConfigurationDefinition();
  conf.setServiceDiscovery(sd);
  conf.setComponent("mock");
  CamelContext context=new DefaultCamelContext();
  context.setServiceCallConfiguration(conf);
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").routeId("default").serviceCall("scall","scall/api/${header.customerId}");
    }
  }
);
  context.start();
  MockEndpoint mock=context.getEndpoint("mock:127.0.0.1:8080/api/123",MockEndpoint.class);
  mock.expectedMessageCount(1);
  DefaultServiceCallProcessor proc=findServiceCallProcessor(context.getRoute("default"));
  Assert.assertNotNull(proc);
  Assert.assertTrue(proc.getLoadBalancer() instanceof DefaultServiceLoadBalancer);
  DefaultServiceLoadBalancer loadBalancer=(DefaultServiceLoadBalancer)proc.getLoadBalancer();
  Assert.assertEquals(sd,loadBalancer.getServiceDiscovery());
  context.createFluentProducerTemplate().to("direct:start").withHeader("customerId","123").send();
  mock.assertIsSatisfied();
  context.stop();
}
