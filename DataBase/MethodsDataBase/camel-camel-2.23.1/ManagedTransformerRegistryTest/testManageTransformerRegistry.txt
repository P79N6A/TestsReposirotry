@Test public void testManageTransformerRegistry() throws Exception {
  if (isPlatform("aix")) {
    return;
  }
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=services,*"),null);
  List<ObjectName> list=new ArrayList<>(set);
  ObjectName on=null;
  for (  ObjectName name : list) {
    if (name.getCanonicalName().contains("DefaultTransformerRegistry")) {
      on=name;
      break;
    }
  }
  assertNotNull("Should have found TransformerRegistry",on);
  Integer max=(Integer)mbeanServer.getAttribute(on,"MaximumCacheSize");
  assertEquals(1000,max.intValue());
  Integer current=(Integer)mbeanServer.getAttribute(on,"Size");
  assertEquals(3,current.intValue());
  current=(Integer)mbeanServer.getAttribute(on,"StaticSize");
  assertEquals(0,current.intValue());
  current=(Integer)mbeanServer.getAttribute(on,"DynamicSize");
  assertEquals(3,current.intValue());
  String source=(String)mbeanServer.getAttribute(on,"Source");
  assertTrue(source.startsWith("TransformerRegistry"));
  assertTrue(source.endsWith("capacity: 1000"));
  TabularData data=(TabularData)mbeanServer.invoke(on,"listTransformers",null,null);
  for (  Object row : data.values()) {
    CompositeData composite=(CompositeData)row;
    String scheme=(String)composite.get("scheme");
    String from=(String)composite.get("from");
    String to=(String)composite.get("to");
    String description=(String)composite.get("description");
    boolean isStatic=(boolean)composite.get("static");
    boolean isDynamic=(boolean)composite.get("dynamic");
    LOG.info("[{}][{}][{}][{}][{}][{}]",scheme,from,to,isStatic,isDynamic,description);
    if (description.startsWith("ProcessorTransformer")) {
      assertEquals(null,scheme);
      assertEquals("xml:foo",from);
      assertEquals("json:bar",to);
    }
 else     if (description.startsWith("DataFormatTransformer")) {
      assertEquals(null,scheme);
      assertEquals("java:" + ManagedTransformerRegistryTest.class.getName(),from);
      assertEquals("xml:test",to);
    }
 else     if (description.startsWith("MyTransformer")) {
      assertEquals("custom",scheme);
      assertEquals(null,from);
      assertEquals(null,to);
    }
 else {
      fail("Unexpected transformer:" + description);
    }
  }
  assertEquals(3,data.size());
}
