@Test public void testManageThrottler() throws Exception {
  if (isPlatform("aix")) {
    return;
  }
  getMockEndpoint("mock:result").expectedMessageCount(10);
  for (int i=0; i < 10; i++) {
    template.sendBody("direct:start","Message " + i);
  }
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName throttlerName=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"mythrottler\"");
  ObjectName routeName=ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"route1\"");
  mbeanServer.invoke(routeName,"reset",null,null);
  for (int i=0; i < 10; i++) {
    template.sendBody("direct:start","Message " + i);
  }
  Long completed=(Long)mbeanServer.getAttribute(routeName,"ExchangesCompleted");
  assertEquals(10,completed.longValue());
  Long timePeriod=(Long)mbeanServer.getAttribute(throttlerName,"TimePeriodMillis");
  assertEquals(250,timePeriod.longValue());
  Long total=(Long)mbeanServer.getAttribute(routeName,"TotalProcessingTime");
  assertTrue("Should take at most 1.0 sec: was " + total,total < 1000);
  mbeanServer.setAttribute(throttlerName,new Attribute("MaximumRequestsPerPeriod",(long)2));
  mbeanServer.invoke(routeName,"reset",null,null);
  for (int i=0; i < 10; i++) {
    template.sendBody("direct:start","Message " + i);
  }
  Long period=(Long)mbeanServer.getAttribute(throttlerName,"MaximumRequestsPerPeriod");
  assertNotNull(period);
  assertEquals(2,period.longValue());
  completed=(Long)mbeanServer.getAttribute(routeName,"ExchangesCompleted");
  assertEquals(10,completed.longValue());
  total=(Long)mbeanServer.getAttribute(routeName,"TotalProcessingTime");
  assertTrue("Should be around 1 sec now: was " + total,total > 1000);
}
