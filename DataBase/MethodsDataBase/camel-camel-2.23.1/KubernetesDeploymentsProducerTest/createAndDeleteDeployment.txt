@Test public void createAndDeleteDeployment() throws Exception {
  Deployment de1=new DeploymentBuilder().withNewMetadata().withNamespace("test").withName("de1").withResourceVersion("1").withGeneration(2L).endMetadata().withNewSpec().withReplicas(0).endSpec().withNewStatus().withReplicas(1).withObservedGeneration(1L).endStatus().build();
  server.expect().withPath("/apis/extensions/v1beta1/namespaces/test/deployments/de1").andReturn(200,de1).once();
  server.expect().withPath("/apis/extensions/v1beta1/namespaces/test/deployments/de1").andReturn(200,new DeploymentBuilder(de1).editStatus().withReplicas(0).withObservedGeneration(2L).endStatus().build()).times(5);
  Exchange ex=template.request("direct:deleteDeployment",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_DEPLOYMENT_NAME,"de1");
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,"test");
    }
  }
);
  boolean deDeleted=ex.getOut().getBody(Boolean.class);
  assertTrue(deDeleted);
}
