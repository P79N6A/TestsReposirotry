@Test public void testPropagateCamelToCxf(){
  Exchange exchange=new DefaultExchange(context);
  exchange.getIn().setHeader("soapAction","urn:hello:world");
  exchange.getIn().setHeader("MyFruitHeader","peach");
  exchange.getIn().setHeader("MyBrewHeader",Arrays.asList("cappuccino","espresso"));
  exchange.getIn().setHeader(Exchange.CONTENT_TYPE,"text/xml");
  exchange.getIn().setHeader(Exchange.HTTP_RESPONSE_CODE,"200");
  exchange.getIn().setHeader(Exchange.HTTP_URI,"/hello/cxf");
  exchange.getIn().setHeader(Exchange.HTTP_METHOD,"GET");
  exchange.getIn().setHeader(Exchange.HTTP_PATH,"/hello/cxf");
  Map<String,Object> requestContext=Collections.singletonMap("request","true");
  Map<String,Object> responseContext=Collections.singletonMap("response","true");
  exchange.getIn().setHeader(Client.REQUEST_CONTEXT,requestContext);
  exchange.getIn().setHeader(Client.RESPONSE_CONTEXT,responseContext);
  org.apache.cxf.message.Message cxfMessage=new org.apache.cxf.message.MessageImpl();
  CxfHeaderHelper.propagateCamelToCxf(new DefaultHeaderFilterStrategy(),exchange.getIn().getHeaders(),cxfMessage,exchange);
  assertEquals("text/xml",cxfMessage.get(Message.CONTENT_TYPE));
  assertEquals("200",cxfMessage.get(Message.RESPONSE_CODE));
  assertEquals(requestContext,cxfMessage.get(Client.REQUEST_CONTEXT));
  assertEquals(responseContext,cxfMessage.get(Client.RESPONSE_CONTEXT));
  assertNull(cxfMessage.get(Exchange.HTTP_RESPONSE_CODE));
  Map<String,List<String>> cxfHeaders=CastUtils.cast((Map<?,?>)cxfMessage.get(org.apache.cxf.message.Message.PROTOCOL_HEADERS));
  assertNotNull(cxfHeaders);
  assertTrue(cxfHeaders.size() == 7);
  verifyHeader(cxfHeaders,"soapaction","urn:hello:world");
  verifyHeader(cxfHeaders,"SoapAction","urn:hello:world");
  verifyHeader(cxfHeaders,"SOAPAction","urn:hello:world");
  verifyHeader(cxfHeaders,"myfruitheader","peach");
  verifyHeader(cxfHeaders,"myFruitHeader","peach");
  verifyHeader(cxfHeaders,"MYFRUITHEADER","peach");
  verifyHeader(cxfHeaders,"MyBrewHeader",Arrays.asList("cappuccino","espresso"));
  verifyHeader(cxfHeaders,Message.CONTENT_TYPE,"text/xml");
  verifyHeader(cxfHeaders,Message.REQUEST_URI,"/hello/cxf");
  verifyHeader(cxfHeaders,Message.HTTP_REQUEST_METHOD,"GET");
  verifyHeader(cxfHeaders,Message.PATH_INFO,"/hello/cxf");
  assertNull(cxfHeaders.get(Exchange.HTTP_RESPONSE_CODE));
  assertNull(cxfHeaders.get(Exchange.HTTP_URI));
  assertNull(cxfHeaders.get(Exchange.HTTP_METHOD));
  assertNull(cxfHeaders.get(Exchange.HTTP_PATH));
}
