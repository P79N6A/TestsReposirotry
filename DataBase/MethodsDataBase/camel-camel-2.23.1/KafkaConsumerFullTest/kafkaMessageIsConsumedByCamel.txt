@Test public void kafkaMessageIsConsumedByCamel() throws InterruptedException, IOException {
  String propagatedHeaderKey="PropagatedCustomHeader";
  byte[] propagatedHeaderValue="propagated header value".getBytes();
  String skippedHeaderKey="CamelSkippedHeader";
  to.expectedMessageCount(5);
  to.expectedBodiesReceivedInAnyOrder("message-0","message-1","message-2","message-3","message-4");
  to.expectedHeaderValuesReceivedInAnyOrder(KafkaConstants.LAST_RECORD_BEFORE_COMMIT,null,null,null,null,null);
  to.expectedHeaderReceived(propagatedHeaderKey,propagatedHeaderValue);
  for (int k=0; k < 5; k++) {
    String msg="message-" + k;
    ProducerRecord<String,String> data=new ProducerRecord<>(TOPIC,"1",msg);
    data.headers().add(new RecordHeader("CamelSkippedHeader","skipped header value".getBytes()));
    data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue));
    producer.send(data);
  }
  to.assertIsSatisfied(3000);
  assertEquals(5,StreamSupport.stream(MockConsumerInterceptor.recordsCaptured.get(0).records(TOPIC).spliterator(),false).count());
  Map<String,Object> headers=to.getExchanges().get(0).getIn().getHeaders();
  assertFalse("Should not receive skipped header",headers.containsKey(skippedHeaderKey));
  assertTrue("Should receive propagated header",headers.containsKey(propagatedHeaderKey));
}
