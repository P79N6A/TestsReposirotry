@Test public void testOnErrorHeaderForwarded() throws Exception {
  new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("reactive-streams:numbers?forwardOnError=true").to("mock:endpoint");
    }
  }
.addRoutesToCamelContext(context);
  Subscriber<Integer> numbers=CamelReactiveStreams.get(context).streamSubscriber("numbers",Integer.class);
  context.start();
  RuntimeException ex=new RuntimeException("1");
  Flowable.just(1).map(n -> {
    if (n == 1) {
      throw ex;
    }
    return n;
  }
).subscribe(numbers);
  MockEndpoint endpoint=getMockEndpoint("mock:endpoint");
  endpoint.expectedMessageCount(1);
  endpoint.expectedHeaderReceived(ReactiveStreamsConstants.REACTIVE_STREAMS_EVENT_TYPE,"onError");
  endpoint.assertIsSatisfied();
  Exchange exch=endpoint.getExchanges().get(0);
  assertEquals(ex,exch.getIn().getBody());
}
