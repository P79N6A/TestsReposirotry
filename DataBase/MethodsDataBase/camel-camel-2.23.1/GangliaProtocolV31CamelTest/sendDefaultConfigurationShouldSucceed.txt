@Test public void sendDefaultConfigurationShouldSucceed() throws Exception {
  mockGmond.setMinimumExpectedMessageCount(0);
  mockGmond.setAssertPeriod(100L);
  mockGmond.whenAnyExchangeReceived(new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      Ganglia_metadata_msg metadataMessage=exchange.getIn().getBody(Ganglia_metadata_msg.class);
      if (metadataMessage != null) {
        assertEquals(DEFAULT_METRIC_NAME,metadataMessage.gfull.metric.name);
        assertEquals(DEFAULT_TYPE.getGangliaType(),metadataMessage.gfull.metric.type);
        assertEquals(DEFAULT_SLOPE.getGangliaSlope(),metadataMessage.gfull.metric.slope);
        assertEquals(DEFAULT_UNITS,metadataMessage.gfull.metric.units);
        assertEquals(DEFAULT_TMAX,metadataMessage.gfull.metric.tmax);
        assertEquals(DEFAULT_DMAX,metadataMessage.gfull.metric.dmax);
      }
 else {
        Ganglia_value_msg valueMessage=exchange.getIn().getBody(Ganglia_value_msg.class);
        if (valueMessage != null) {
          assertEquals("28.0",valueMessage.gstr.str);
          assertEquals("%s",valueMessage.gstr.fmt);
        }
 else {
          fail("The gmond mock should only receive non-null metadata or value messages");
        }
      }
    }
  }
);
  template.sendBody(getTestUri(),"28.0");
  mockGmond.assertIsSatisfied();
}
