@Test public void wsClientSingleBytesStreaming() throws Exception {
  AsyncHttpClient c=new DefaultAsyncHttpClient();
  WebSocket websocket=c.prepareGet("ws://localhost:" + getPort() + "/app2").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketListener(){
    @Override public void onBinaryFrame(    byte[] message,    boolean finalFragment,    int rsv){
      System.out.println("got message " + message);
    }
    @Override public void onOpen(    WebSocket webSocket){
    }
    @Override public void onClose(    WebSocket webSocket,    int code,    String reason){
    }
    @Override public void onError(    Throwable t){
      t.printStackTrace();
    }
  }
).build()).get();
  MockEndpoint result=getMockEndpoint("mock:result2");
  result.expectedMessageCount(1);
  final byte[] testmessage="Test".getBytes("utf-8");
  websocket.sendBinaryFrame(testmessage);
  result.await(60,TimeUnit.SECONDS);
  List<Exchange> exchanges=result.getReceivedExchanges();
  Assert.assertEquals(1,exchanges.size());
  Object body=result.getReceivedExchanges().get(0).getIn().getBody();
  Assert.assertTrue("body is " + body.getClass().getName(),body instanceof InputStream);
  InputStream in=(InputStream)body;
  Assert.assertArrayEquals(testmessage,IOConverter.toBytes(in));
  websocket.sendCloseFrame();
  c.close();
}
