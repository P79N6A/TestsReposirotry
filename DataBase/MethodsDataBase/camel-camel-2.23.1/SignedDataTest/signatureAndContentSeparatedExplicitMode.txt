@Test public void signatureAndContentSeparatedExplicitMode() throws Exception {
  String keystoreName="system.jks";
  String alias="rsa";
  KeyStoreParameters keystore=KeystoreUtil.getKeyStoreParameters(keystoreName);
  DefaultSignerInfo signerInfo=new DefaultSignerInfo();
  signerInfo.setIncludeCertificates(false);
  signerInfo.setSignatureAlgorithm("SHA1withRSA");
  signerInfo.setPrivateKeyAlias(alias);
  signerInfo.setKeyStoreParameters(keystore);
  SignedDataCreatorConfiguration config=new SignedDataCreatorConfiguration(new DefaultCamelContext());
  config.setSigner(signerInfo);
  config.setIncludeContent(false);
  config.setToBase64(Boolean.TRUE);
  config.init();
  SignedDataCreator signer=new SignedDataCreator(config);
  String message="Test Message";
  Exchange exchange=ExchangeUtil.getExchange();
  exchange.getIn().setBody(new ByteArrayInputStream(message.getBytes(StandardCharsets.UTF_8)));
  signer.process(exchange);
  byte[] signature=exchange.getOut().getHeader(CryptoCmsConstants.CAMEL_CRYPTO_CMS_SIGNED_DATA,byte[].class);
  DefaultSignedDataVerifierConfiguration verifierConf=getCryptoCmsSignedDataVerifierConf(keystoreName,Collections.singleton(alias),Boolean.FALSE);
  verifierConf.setSignedDataHeaderBase64(Boolean.TRUE);
  SignedDataVerifier verifier=new SignedDataVerifierFromHeader(verifierConf);
  exchange=ExchangeUtil.getExchange();
  exchange.getIn().setBody(new ByteArrayInputStream(message.getBytes(StandardCharsets.UTF_8)));
  exchange.getIn().setHeader(CryptoCmsConstants.CAMEL_CRYPTO_CMS_SIGNED_DATA,new ByteArrayInputStream(signature));
  verifier.process(exchange);
}
