@Test public void testSubscriber() throws Exception {
  int num=20;
  new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("reactive-streams:integers").to("mock:endpoint");
    }
  }
.addRoutesToCamelContext(context);
  CamelReactiveStreamsService camel=CamelReactiveStreams.get(context);
  List<Integer> elements=new LinkedList<>();
  for (int i=1; i <= num; i++) {
    elements.add(i);
  }
  changeSign(elements,camel.streamSubscriber("integers",Integer.class));
  context.start();
  MockEndpoint mock=getMockEndpoint("mock:endpoint");
  mock.expectedMessageCount(num);
  mock.assertIsSatisfied();
  for (  Exchange ex : mock.getExchanges()) {
    Integer number=ex.getIn().getBody(Integer.class);
    assertNotNull(number);
    assertTrue(number < 0);
  }
}
