@Test public void testPublisher() throws Exception {
  int num=20;
  new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:endpoint").to("reactive-streams:integers");
    }
  }
.addRoutesToCamelContext(context);
  CamelReactiveStreamsService camel=CamelReactiveStreams.get(context);
  List<Integer> elements=new LinkedList<>();
  CountDownLatch latch=new CountDownLatch(num);
  this.changeSign(camel.fromStream("integers",Integer.class),i -> {
    elements.add(i);
    latch.countDown();
  }
);
  context.start();
  for (int i=1; i <= num; i++) {
    template.sendBody("direct:endpoint",i);
  }
  assertTrue(latch.await(5,TimeUnit.SECONDS));
  for (  Integer number : elements) {
    assertTrue(number < 0);
  }
}
