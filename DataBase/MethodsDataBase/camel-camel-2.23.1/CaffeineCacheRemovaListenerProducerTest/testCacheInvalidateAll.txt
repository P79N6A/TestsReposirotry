@Test public void testCacheInvalidateAll() throws Exception {
  final Cache<Object,Object> cache=getTestRemovalListenerCache();
  final Map<String,String> map=generateRandomMapOfString(3);
  final Set<String> keys=map.keySet().stream().limit(2).collect(Collectors.toSet());
  cache.putAll(map);
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMinimumMessageCount(1);
  mock.expectedHeaderReceived(CaffeineConstants.ACTION_HAS_RESULT,false);
  mock.expectedHeaderReceived(CaffeineConstants.ACTION_SUCCEEDED,true);
  fluentTemplate().withHeader(CaffeineConstants.ACTION,CaffeineConstants.ACTION_INVALIDATE_ALL).withHeader(CaffeineConstants.KEYS,keys).to("direct://start").send();
  assertMockEndpointsSatisfied();
  final Map<String,String> elements=getTestRemovalListenerCache().getAllPresent(keys);
  keys.forEach(k -> {
    assertFalse(elements.containsKey(k));
  }
);
}
