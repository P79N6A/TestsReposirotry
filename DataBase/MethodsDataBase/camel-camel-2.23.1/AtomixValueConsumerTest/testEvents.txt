@Test public void testEvents() throws Exception {
  String val1=context().getUuidGenerator().generateUuid();
  String val2=context().getUuidGenerator().generateUuid();
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(2);
  mock.message(0).body().isEqualTo(val1);
  mock.message(0).header(AtomixClientConstants.EVENT_TYPE).isEqualTo(DistributedValue.Events.CHANGE);
  mock.message(1).body().isEqualTo(val2);
  mock.message(1).header(AtomixClientConstants.EVENT_TYPE).isEqualTo(DistributedValue.Events.CHANGE);
  value.set(val1).join();
  value.compareAndSet(val1,val2).join();
  mock.assertIsSatisfied();
}
