@Test public void testConversion() throws Exception {
  CountDownLatch latch=new CountDownLatch(3);
  List<Integer> integers=new LinkedList<>();
  Observable.fromPublisher(CamelReactiveStreams.get(context).fromStream("pub",Exchange.class)).map(x -> x.getIn().getBody(Integer.class)).subscribe(n -> {
    integers.add(n);
    latch.countDown();
  }
);
  Observable.fromPublisher(CamelReactiveStreams.get(context).fromStream("pub")).map(x -> x.getIn().getBody(Integer.class)).subscribe(n -> {
    integers.add(n);
    latch.countDown();
  }
);
  Observable.fromPublisher(CamelReactiveStreams.get(context).fromStream("pub",Integer.class)).subscribe(n -> {
    integers.add(n);
    latch.countDown();
  }
);
  context.start();
  latch.await(5,TimeUnit.SECONDS);
  assertEquals(3,integers.size());
  for (  int i : integers) {
    assertEquals(123,i);
  }
}
