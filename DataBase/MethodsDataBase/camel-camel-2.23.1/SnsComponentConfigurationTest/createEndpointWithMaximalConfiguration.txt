@Test public void createEndpointWithMaximalConfiguration() throws Exception {
  AmazonSNSClientMock mock=new AmazonSNSClientMock();
  ((JndiRegistry)((PropertyPlaceholderDelegateRegistry)context.getRegistry()).getRegistry()).bind("amazonSNSClient",mock);
  SnsComponent component=new SnsComponent(context);
  SnsEndpoint endpoint=(SnsEndpoint)component.createEndpoint("aws-sns://MyTopic?amazonSNSClient=#amazonSNSClient&accessKey=xxx&secretKey=yyy" + "&policy=%7B%22Version%22%3A%222008-10-17%22,%22Statement%22%3A%5B%7B%22Sid%22%3A%221%22,%22Effect%22%3A%22Allow%22,%22Principal%22%3A%7B%22AWS%22%3A%5B%22*%22%5D%7D," + "%22Action%22%3A%5B%22sns%3ASubscribe%22%5D%7D%5D%7D&subject=The+subject+message");
  assertEquals("MyTopic",endpoint.getConfiguration().getTopicName());
  assertEquals("xxx",endpoint.getConfiguration().getAccessKey());
  assertEquals("yyy",endpoint.getConfiguration().getSecretKey());
  assertNull(endpoint.getConfiguration().getTopicArn());
  assertNotNull(endpoint.getConfiguration().getAmazonSNSClient());
  assertEquals("The subject message",endpoint.getConfiguration().getSubject());
  assertEquals("{\"Version\":\"2008-10-17\",\"Statement\":[{\"Sid\":\"1\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"sns:Subscribe\"]}]}",endpoint.getConfiguration().getPolicy());
}
