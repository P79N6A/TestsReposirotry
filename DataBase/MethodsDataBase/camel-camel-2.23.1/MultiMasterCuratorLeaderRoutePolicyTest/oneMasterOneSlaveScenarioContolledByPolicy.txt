@Test public void oneMasterOneSlaveScenarioContolledByPolicy() throws Exception {
  final String path="oneMasterOneSlaveScenarioContolledByPolicy";
  final String firstDestination="first" + System.currentTimeMillis();
  final String secondDestination="second" + System.currentTimeMillis();
  final CountDownLatch waitForSecondRouteCompletedLatch=new CountDownLatch(1);
  final int activeNodesDesired=1;
  MultiMasterZookeeperPolicyEnforcedContext first=createEnforcedContext(firstDestination,activeNodesDesired,path);
  DefaultCamelContext controlledContext=(DefaultCamelContext)first.controlledContext;
  CuratorMultiMasterLeaderRoutePolicy routePolicy=(CuratorMultiMasterLeaderRoutePolicy)controlledContext.getRouteDefinition(firstDestination).getRoutePolicies().get(0);
  assertWeHaveMasters(routePolicy);
  LOG.info("Starting first CamelContext");
  final MultiMasterZookeeperPolicyEnforcedContext[] arr=new MultiMasterZookeeperPolicyEnforcedContext[1];
  new Thread(){
    @Override public void run(){
      MultiMasterZookeeperPolicyEnforcedContext second=null;
      try {
        LOG.info("Starting second CamelContext in a separate thread");
        second=createEnforcedContext(secondDestination,activeNodesDesired,path);
        arr[0]=second;
        second.sendMessageToEnforcedRoute("message for second",0);
        waitForSecondRouteCompletedLatch.countDown();
      }
 catch (      Exception e) {
        LOG.error("Error in the thread controlling the second context",e);
        fail("Error in the thread controlling the second context: " + e.getMessage());
      }
    }
  }
.start();
  first.sendMessageToEnforcedRoute("message for first",1);
  waitForSecondRouteCompletedLatch.await(2,TimeUnit.MINUTES);
  LOG.info("Explicitly shutting down the first camel context.");
  LOG.info("Shutting down first con");
  first.shutdown();
  MultiMasterZookeeperPolicyEnforcedContext second=arr[0];
  DefaultCamelContext secondCamelContext=(DefaultCamelContext)second.controlledContext;
  assertWeHaveMasters((CuratorMultiMasterLeaderRoutePolicy)secondCamelContext.getRouteDefinition(secondDestination).getRoutePolicies().get(0));
  second.sendMessageToEnforcedRoute("message for slave",1);
  second.shutdown();
}
