@Test public void twoMasterOneSlavesScenarioContolledByPolicy() throws Exception {
  final String path="twoMasterOneSlavesScenarioContolledByPolicy";
  final String firstDestination="first" + System.currentTimeMillis();
  final String secondDestination="second" + System.currentTimeMillis();
  final String thirdDestination="third" + System.currentTimeMillis();
  final CountDownLatch waitForThirdRouteCompletedLatch=new CountDownLatch(1);
  final int activeNodeDesired=2;
  MultiMasterZookeeperPolicyEnforcedContext first=createEnforcedContext(firstDestination,activeNodeDesired,path);
  DefaultCamelContext firstControlledContext=(DefaultCamelContext)first.controlledContext;
  CuratorMultiMasterLeaderRoutePolicy firstRoutePolicy=(CuratorMultiMasterLeaderRoutePolicy)firstControlledContext.getRouteDefinition(firstDestination).getRoutePolicies().get(0);
  MultiMasterZookeeperPolicyEnforcedContext second=createEnforcedContext(secondDestination,activeNodeDesired,path);
  DefaultCamelContext secondControlledContext=(DefaultCamelContext)second.controlledContext;
  CuratorMultiMasterLeaderRoutePolicy secondRoutePolicy=(CuratorMultiMasterLeaderRoutePolicy)secondControlledContext.getRouteDefinition(secondDestination).getRoutePolicies().get(0);
  assertWeHaveMasters(firstRoutePolicy,secondRoutePolicy);
  final MultiMasterZookeeperPolicyEnforcedContext[] arr=new MultiMasterZookeeperPolicyEnforcedContext[1];
  new Thread(){
    @Override public void run(){
      MultiMasterZookeeperPolicyEnforcedContext third=null;
      try {
        LOG.info("Starting third CamelContext");
        third=createEnforcedContext(thirdDestination,activeNodeDesired,path);
        arr[0]=third;
        third.sendMessageToEnforcedRoute("message for third",0);
        waitForThirdRouteCompletedLatch.countDown();
      }
 catch (      Exception e) {
        LOG.error("Error in the thread controlling the third context",e);
        fail("Error in the thread controlling the third context: " + e.getMessage());
      }
    }
  }
.start();
  first.sendMessageToEnforcedRoute("message for first",1);
  second.sendMessageToEnforcedRoute("message for second",1);
  waitForThirdRouteCompletedLatch.await();
  LOG.info("Explicitly shutting down the first camel context.");
  first.shutdown();
  arr[0].sendMessageToEnforcedRoute("message for third",1);
  second.shutdown();
  arr[0].shutdown();
}
