@Test public void testPostExchangeFailed(){
  Exchange exchange=Mockito.mock(Exchange.class);
  Mockito.when(exchange.isFailed()).thenReturn(true);
  Exception e=new Exception("Test Message");
  Mockito.when(exchange.getException()).thenReturn(e);
  SpanDecorator decorator=new AbstractSpanDecorator(){
    @Override public String getComponent(){
      return null;
    }
  }
;
  MockTracer tracer=new MockTracer();
  MockSpan span=tracer.buildSpan("TestSpan").start();
  decorator.post(span,exchange,null);
  assertEquals(true,span.tags().get(Tags.ERROR.getKey()));
  assertEquals(1,span.logEntries().size());
  assertEquals("error",span.logEntries().get(0).fields().get("event"));
  assertEquals("Exception",span.logEntries().get(0).fields().get("error.kind"));
  assertEquals(e.getMessage(),span.logEntries().get(0).fields().get("message"));
}
