@Test public void parseDispositionNotificationOptionsTest(){
  DispositionNotificationOptions dispositionNotificationOptions=DispositionNotificationOptionsParser.parseDispositionNotificationOptions(TEST_NAME_VALUES,null);
  Parameter signedReceiptProtocol=dispositionNotificationOptions.getSignedReceiptProtocol();
  assertNotNull("signed receipt protocol not parsed",signedReceiptProtocol);
  assertEquals("Unexpected value for signed receipt protocol attribute",SIGNED_RECEIPT_PROTOCOL_ATTRIBUTE,signedReceiptProtocol.getAttribute());
  assertEquals("Unexpected value for signed receipt protocol importance",SIGNED_RECEIPT_PROTOCOL_IMPORTANCE,signedReceiptProtocol.getImportance().getImportance());
  assertArrayEquals("Unexpected value for parameter importance",SIGNED_RECEIPT_PROTOCOL_VALUES,signedReceiptProtocol.getValues());
  Parameter signedReceiptMicalg=dispositionNotificationOptions.getSignedReceiptMicalg();
  assertNotNull("signed receipt micalg not parsed",signedReceiptProtocol);
  assertEquals("Unexpected value for signed receipt micalg attribute",SIGNED_RECEIPT_MICALG_ATTRIBUTE,signedReceiptMicalg.getAttribute());
  assertEquals("Unexpected value for signed receipt micalg importance",SIGNED_RECEIPT_MICALG_IMPORTANCE,signedReceiptMicalg.getImportance().getImportance());
  assertArrayEquals("Unexpected value for micalg importance",SIGNED_RECEIPT_MICALG_VALUES,signedReceiptMicalg.getValues());
}
