@Test public void testDoneFile() throws Exception {
  getMockEndpoint("mock:result").expectedMessageCount(0);
  getMockEndpoint("mock:result").setResultMinimumWaitTime(50);
  template.sendBodyAndHeader("file:target/done","Hello World",Exchange.FILE_NAME,"hello.txt");
  assertMockEndpointsSatisfied();
  resetMocks();
  oneExchangeDone.reset();
  getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
  template.sendBodyAndHeader("file:target/done","",Exchange.FILE_NAME,"done");
  assertMockEndpointsSatisfied();
  oneExchangeDone.matchesMockWaitTime();
  File file=new File("target/done/done");
  assertTrue("Done file should be not be deleted: " + file,file.exists());
  file=new File("target/done/hello.txt");
  assertTrue("Original file should be kept: " + file,file.exists());
}
