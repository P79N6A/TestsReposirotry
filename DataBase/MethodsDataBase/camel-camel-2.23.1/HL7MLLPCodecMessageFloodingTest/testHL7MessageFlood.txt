@Test public void testHL7MessageFlood() throws Exception {
  Socket socket=new Socket("localhost",getPort());
  BufferedOutputStream outputStream=new BufferedOutputStream(new DataOutputStream(socket.getOutputStream()));
  final BufferedInputStream inputStream=new BufferedInputStream(new DataInputStream(socket.getInputStream()));
  int messageCount=100;
  CountDownLatch latch=new CountDownLatch(messageCount);
  Thread t=new Thread(new Runnable(){
    @Override public void run(){
      int response;
      StringBuilder s=new StringBuilder();
      try {
        int i=0;
        boolean cont=true;
        while (cont && (response=inputStream.read()) >= 0) {
          if (response == 28) {
            response=inputStream.read();
            if (response == 13) {
              cont=s.toString().contains(String.format("X%dX",i++));
              s.setLength(0);
              latch.countDown();
            }
          }
 else {
            s.append((char)response);
          }
        }
      }
 catch (      IOException ignored) {
      }
    }
  }
);
  t.start();
  String in="MSH|^~\\&|MYSENDER|MYRECEIVER|MYAPPLICATION||200612211200||QRY^A19|X%dX|P|2.4\r" + "QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||";
  for (int i=0; i < messageCount; i++) {
    String msg=String.format(in,i);
    outputStream.write(11);
    outputStream.flush();
    outputStream.write(msg.getBytes());
    outputStream.flush();
    outputStream.write(28);
    outputStream.write(13);
    outputStream.flush();
  }
  boolean success=latch.await(20,TimeUnit.SECONDS);
  outputStream.close();
  inputStream.close();
  socket.close();
  assertTrue(success);
}
