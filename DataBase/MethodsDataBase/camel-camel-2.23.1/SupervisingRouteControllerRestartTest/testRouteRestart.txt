@Test public void testRouteRestart() throws Exception {
  Assert.assertNotNull(context.getRouteController());
  Assert.assertTrue(context.getRouteController() instanceof SupervisingRouteController);
  SupervisingRouteController controller=context.getRouteController().unwrap(SupervisingRouteController.class);
  await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
    Assert.assertEquals(ServiceStatus.Started,context.getRouteStatus("foo"));
    Assert.assertEquals(ServiceStatus.Started,context.getRouteStatus("bar"));
    Assert.assertEquals(ServiceStatus.Started,context.getRouteStatus("dummy"));
  }
);
  controller.stopRoute("dummy");
  Assert.assertNull(context.getRoute("dummy").getRouteContext().getRouteController());
  try {
    controller.startRoute("dummy");
  }
 catch (  Exception e) {
    Assert.assertEquals("Forced error on restart",e.getMessage());
  }
  Assert.assertTrue(controller.getBackOffContext("dummy").isPresent());
  Assert.assertEquals(BackOffTimer.Task.Status.Active,controller.getBackOffContext("dummy").get().getStatus());
  Assert.assertTrue(controller.getBackOffContext("dummy").get().getCurrentAttempts() > 0);
  await().atMost(2,TimeUnit.SECONDS).untilAsserted(() -> {
    Assert.assertEquals(ServiceStatus.Started,context.getRouteStatus("dummy"));
    Assert.assertNotNull(context.getRoute("dummy").getRouteContext().getRouteController());
    Assert.assertFalse(controller.getBackOffContext("dummy").isPresent());
  }
);
}
