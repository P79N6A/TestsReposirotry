@Test public void testInsertDynamicityEnabledDBOnly(){
  assertEquals(0,testCollection.count());
  mongo.getDatabase("otherDB").drop();
  db.getCollection("otherCollection").drop();
  assertFalse("The otherDB database should not exist",StreamSupport.stream(mongo.listDatabaseNames().spliterator(),false).anyMatch("otherDB"::equals));
  String body="{\"_id\": \"testInsertDynamicityEnabledDBOnly\", \"a\" : \"1\"}";
  Map<String,Object> headers=new HashMap<>();
  headers.put(MongoDbConstants.DATABASE,"otherDB");
  template.requestBodyAndHeaders("direct:dynamicityEnabled",body,headers);
  MongoCollection<BasicDBObject> dynamicCollection=mongo.getDatabase("otherDB").getCollection(testCollection.getNamespace().getCollectionName(),BasicDBObject.class);
  DBObject b=dynamicCollection.find(new BasicDBObject("_id","testInsertDynamicityEnabledDBOnly")).first();
  assertNotNull("No record with 'testInsertDynamicityEnabledDBOnly' _id",b);
  b=testCollection.find(new BasicDBObject("_id","testInsertDynamicityEnabledDBOnly")).first();
  assertNull("There is a record with 'testInsertDynamicityEnabledDBOnly' _id in the test collection",b);
  assertTrue("The otherDB database should exist",StreamSupport.stream(mongo.listDatabaseNames().spliterator(),false).anyMatch("otherDB"::equals));
}
