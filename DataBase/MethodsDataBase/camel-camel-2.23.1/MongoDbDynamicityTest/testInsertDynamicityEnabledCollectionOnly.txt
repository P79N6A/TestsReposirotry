@Test public void testInsertDynamicityEnabledCollectionOnly(){
  assertEquals(0,testCollection.count());
  mongo.getDatabase("otherDB").drop();
  db.getCollection("otherCollection").drop();
  assertFalse("The otherDB database should not exist",StreamSupport.stream(mongo.listDatabaseNames().spliterator(),false).anyMatch("otherDB"::equals));
  String body="{\"_id\": \"testInsertDynamicityEnabledCollectionOnly\", \"a\" : \"1\"}";
  Map<String,Object> headers=new HashMap<>();
  headers.put(MongoDbConstants.COLLECTION,"otherCollection");
  template.requestBodyAndHeaders("direct:dynamicityEnabled",body,headers);
  MongoCollection<BasicDBObject> dynamicCollection=db.getCollection("otherCollection",BasicDBObject.class);
  DBObject b=dynamicCollection.find(new BasicDBObject("_id","testInsertDynamicityEnabledCollectionOnly")).first();
  assertNotNull("No record with 'testInsertDynamicityEnabledCollectionOnly' _id",b);
  b=testCollection.find(new BasicDBObject("_id","testInsertDynamicityEnabledDBOnly")).first();
  assertNull("There is a record with 'testInsertDynamicityEnabledCollectionOnly' _id in the test collection",b);
  assertFalse("The otherDB database should not exist",StreamSupport.stream(mongo.listDatabaseNames().spliterator(),false).anyMatch("otherDB"::equals));
}
