@Test public void testAggregateWithOptions(){
  assertEquals(0,testCollection.count());
  pumpDataIntoTestCollection();
  Map<String,Object> options=new HashMap<>();
  options.put(MongoDbConstants.BATCH_SIZE,10);
  options.put(MongoDbConstants.ALLOW_DISK_USE,true);
  Object result=template.requestBodyAndHeaders("direct:aggregateDBCursor","[{ $match : {$or : [{\"scientist\" : \"Darwin\"},{\"scientist\" : \"Einstein\"}]}}]",options);
  assertTrue("Result is not of type DBCursor",result instanceof MongoIterable);
  MongoIterable<BasicDBObject> resultCursor=(MongoIterable<BasicDBObject>)result;
  int count=0;
  for (  DBObject dbObject : resultCursor) {
    assertNotNull("DBObject in returned list should contain all fields",dbObject.get("_id"));
    assertNotNull("DBObject in returned list should contain all fields",dbObject.get("scientist"));
    assertNotNull("DBObject in returned list should contain all fields",dbObject.get("fixedField"));
    count++;
  }
  assertEquals("Result does not contain 200 elements",200,count);
}
