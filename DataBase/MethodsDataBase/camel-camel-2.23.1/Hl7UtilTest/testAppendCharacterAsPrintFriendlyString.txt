/** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
@Test public void testAppendCharacterAsPrintFriendlyString() throws Exception {
  StringBuilder builder=null;
  try {
    Hl7Util.appendCharacterAsPrintFriendlyString(builder,'a');
    fail("Exception should be raised with null StringBuilder argument");
  }
 catch (  NullPointerException ignoredEx) {
  }
  builder=new StringBuilder();
  Hl7Util.appendCharacterAsPrintFriendlyString(builder,MllpProtocolConstants.START_OF_BLOCK);
  assertEquals("<0x0B VT>",builder.toString());
  builder=new StringBuilder();
  Hl7Util.appendCharacterAsPrintFriendlyString(builder,MllpProtocolConstants.END_OF_BLOCK);
  assertEquals("<0x1C FS>",builder.toString());
  builder=new StringBuilder();
  Hl7Util.appendCharacterAsPrintFriendlyString(builder,MllpProtocolConstants.SEGMENT_DELIMITER);
  assertEquals("<0x0D CR>",builder.toString());
  builder=new StringBuilder();
  Hl7Util.appendCharacterAsPrintFriendlyString(builder,MllpProtocolConstants.MESSAGE_TERMINATOR);
  assertEquals("<0x0A LF>",builder.toString());
}
