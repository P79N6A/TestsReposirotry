/** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
@Test public void testConvertBytesToPrintFriendlyStringWithStartAndEndPositions() throws Exception {
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,0,1000));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,200,1000));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,-200,1000));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,0,0));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,200,0));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,-200,0));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,0,-1000));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,200,-1000));
  assertEquals(Hl7Util.NULL_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString((byte[])null,-200,-1000));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],0,1000));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],200,1000));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],-200,1000));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],0,0));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],200,0));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],-200,0));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],0,-1000));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],200,-1000));
  assertEquals(Hl7Util.EMPTY_REPLACEMENT_VALUE,Hl7Util.convertToPrintFriendlyString(new byte[0],-200,-1000));
  assertEquals(EXPECTED_MESSAGE,Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,0,TEST_MESSAGE_BYTES.length));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,0,0));
  assertEquals(EXPECTED_MESSAGE,Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,-14,TEST_MESSAGE_BYTES.length));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,-14,0));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,-14,-14));
  assertEquals(EXPECTED_MESSAGE,Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,-14,1000000));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,0,-14));
  assertEquals(EXPECTED_MESSAGE,Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,0,1000000));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,1000000,TEST_MESSAGE_BYTES.length));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,1000000,0));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,1000000,-14));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,1000000,1000000));
  assertEquals("",Hl7Util.convertToPrintFriendlyString(TEST_MESSAGE_BYTES,50,50));
}
