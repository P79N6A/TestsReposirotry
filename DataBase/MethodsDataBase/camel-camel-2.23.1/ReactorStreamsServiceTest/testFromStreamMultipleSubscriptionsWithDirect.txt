@Test public void testFromStreamMultipleSubscriptionsWithDirect() throws Exception {
  context.start();
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:reactive").to("reactive-streams:direct");
    }
  }
);
  CountDownLatch latch1=new CountDownLatch(2);
  Flux.from(crs.fromStream("direct",Integer.class)).doOnNext(res -> latch1.countDown()).subscribe();
  CountDownLatch latch2=new CountDownLatch(2);
  Flux.from(crs.fromStream("direct",Integer.class)).doOnNext(res -> latch2.countDown()).subscribe();
  template.sendBody("direct:reactive",1);
  template.sendBody("direct:reactive",2);
  Assert.assertTrue(latch1.await(5,TimeUnit.SECONDS));
  Assert.assertTrue(latch2.await(5,TimeUnit.SECONDS));
}
