@Test public void testFromStreamTimer() throws Exception {
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("timer:tick?period=5&repeatCount=30").setBody().header(Exchange.TIMER_COUNTER).to("reactive-streams:tick");
    }
  }
);
  final int num=30;
  final CountDownLatch latch=new CountDownLatch(num);
  final AtomicInteger value=new AtomicInteger(0);
  Flux.from(crs.fromStream("tick",Integer.class)).doOnNext(res -> Assert.assertEquals(value.incrementAndGet(),res.intValue())).doOnNext(n -> latch.countDown()).subscribe();
  context.start();
  latch.await(5,TimeUnit.SECONDS);
  Assert.assertEquals(num,value.get());
}
