@Test public void mdnMessageTest() throws Exception {
  AS2ClientConnection clientConnection=new AS2ClientConnection(AS2_VERSION,USER_AGENT,CLIENT_FQDN,TARGET_HOST,TARGET_PORT);
  AS2ClientManager clientManager=new AS2ClientManager(clientConnection);
  HttpCoreContext httpContext=clientManager.send(EDI_MESSAGE,REQUEST_URI,SUBJECT,FROM,AS2_NAME,AS2_NAME,AS2MessageStructure.PLAIN,ContentType.create(AS2MediaType.APPLICATION_EDIFACT,AS2Charset.US_ASCII),null,null,null,null,DISPOSITION_NOTIFICATION_TO,SIGNED_RECEIPT_MIC_ALGORITHMS,null,null,null);
  HttpResponse response=httpContext.getResponse();
  assertEquals("Unexpected method value",HttpVersion.HTTP_1_1,response.getStatusLine().getProtocolVersion());
  assertEquals("Unexpected method value",HttpStatus.SC_OK,response.getStatusLine().getStatusCode());
  assertEquals("Unexpected method value",EnglishReasonPhraseCatalog.INSTANCE.getReason(200,null),response.getStatusLine().getReasonPhrase());
  HttpEntity responseEntity=response.getEntity();
  assertNotNull("Response entity",responseEntity);
  assertTrue("Unexpected response entity type",responseEntity instanceof MultipartSignedEntity);
  MultipartSignedEntity responseSignedEntity=(MultipartSignedEntity)responseEntity;
  MimeEntity responseSignedDataEntity=responseSignedEntity.getSignedDataEntity();
  assertTrue("Signed entity wrong type",responseSignedDataEntity instanceof DispositionNotificationMultipartReportEntity);
  DispositionNotificationMultipartReportEntity reportEntity=(DispositionNotificationMultipartReportEntity)responseSignedDataEntity;
  assertEquals("Unexpected number of body parts in report",2,reportEntity.getPartCount());
  MimeEntity firstPart=reportEntity.getPart(0);
  assertEquals("Unexpected content type in first body part of report",ContentType.create(AS2MimeType.TEXT_PLAIN,AS2Charset.US_ASCII).toString(),firstPart.getContentTypeValue());
  MimeEntity secondPart=reportEntity.getPart(1);
  assertEquals("Unexpected content type in second body part of report",ContentType.create(AS2MimeType.MESSAGE_DISPOSITION_NOTIFICATION,AS2Charset.US_ASCII).toString(),secondPart.getContentTypeValue());
  ApplicationPkcs7SignatureEntity signatureEntity=responseSignedEntity.getSignatureEntity();
  assertNotNull("Signature Entity",signatureEntity);
  assertTrue("Signature is invalid",responseSignedEntity.isValid());
}
