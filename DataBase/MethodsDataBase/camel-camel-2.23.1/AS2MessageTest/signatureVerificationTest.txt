@Test public void signatureVerificationTest() throws Exception {
  AS2ClientConnection clientConnection=new AS2ClientConnection(AS2_VERSION,USER_AGENT,CLIENT_FQDN,TARGET_HOST,TARGET_PORT);
  AS2ClientManager clientManager=new AS2ClientManager(clientConnection);
  HttpCoreContext httpContext=clientManager.send(EDI_MESSAGE,REQUEST_URI,SUBJECT,FROM,AS2_NAME,AS2_NAME,AS2MessageStructure.SIGNED,ContentType.create(AS2MediaType.APPLICATION_EDIFACT,AS2Charset.US_ASCII),null,AS2SignatureAlgorithm.SHA256WITHRSA,certList.toArray(new Certificate[0]),signingKP.getPrivate(),DISPOSITION_NOTIFICATION_TO,SIGNED_RECEIPT_MIC_ALGORITHMS,null,null,null);
  HttpRequest request=httpContext.getRequest();
  assertTrue("Request does not contain entity",request instanceof BasicHttpEntityEnclosingRequest);
  HttpEntity entity=((BasicHttpEntityEnclosingRequest)request).getEntity();
  assertNotNull("Request does not contain entity",entity);
  assertTrue("Unexpected request entity type",entity instanceof MultipartSignedEntity);
  MultipartSignedEntity multipartSignedEntity=(MultipartSignedEntity)entity;
  MimeEntity signedEntity=multipartSignedEntity.getSignedDataEntity();
  assertTrue("Signed entity wrong type",signedEntity instanceof ApplicationEDIEntity);
  ApplicationEDIEntity ediMessageEntity=(ApplicationEDIEntity)signedEntity;
  assertNotNull("Multipart signed entity does not contain EDI message entity",ediMessageEntity);
  ApplicationPkcs7SignatureEntity signatureEntity=multipartSignedEntity.getSignatureEntity();
  assertNotNull("Multipart signed entity does not contain signature entity",signatureEntity);
  assertTrue("Signature is invalid",multipartSignedEntity.isValid());
}
