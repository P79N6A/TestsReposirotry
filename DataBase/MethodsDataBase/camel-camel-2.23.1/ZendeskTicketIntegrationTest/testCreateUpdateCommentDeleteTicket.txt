@Test public void testCreateUpdateCommentDeleteTicket() throws Exception {
  String ticketSubject="Test Ticket";
  String ticketDescription="This is a test ticket from camel-zendesk.";
  Ticket input=new Ticket();
  input.setSubject(ticketSubject);
  input.setDescription(ticketDescription);
  Assert.assertNull(input.getId());
  Assert.assertNull(input.getCreatedAt());
  Ticket answer=requestBody("direct://CREATETICKET",input);
  Assert.assertNotNull(answer.getId());
  Assert.assertNotNull(answer.getCreatedAt());
  Assert.assertEquals(answer.getCreatedAt(),answer.getUpdatedAt());
  Assert.assertEquals(ticketSubject,answer.getSubject());
  Assert.assertEquals(ticketDescription,answer.getDescription());
  Thread.sleep(3000);
  String ticketSubjectUpdated=ticketSubject + " And updated.";
  input=new Ticket();
  input.setId(answer.getId());
  input.setSubject(ticketSubjectUpdated);
  answer=requestBody("direct://UPDATETICKET",input);
  Assert.assertNotEquals(answer.getCreatedAt(),answer.getUpdatedAt());
  Assert.assertEquals(ticketSubjectUpdated,answer.getSubject());
  Assert.assertEquals(ticketDescription,answer.getDescription());
  Ticket answer2=requestBody("direct://GETTICKET",answer.getId());
  Assert.assertEquals(answer.getSubject(),answer2.getSubject());
  Assert.assertEquals(answer.getDescription(),answer2.getDescription());
  Assert.assertEquals(answer.getId(),answer2.getId());
  Assert.assertEquals(answer.getCreatedAt(),answer2.getCreatedAt());
  Assert.assertEquals(answer.getUpdatedAt(),answer2.getUpdatedAt());
  String commentBody="This is a comment from camel-zendesk.";
  final Map<String,Object> headers=new HashMap<>();
  Assert.assertEquals("ticketId",ZendeskApiMethod.CREATECOMMENT.getArgNames().get(0));
  Assert.assertEquals(long.class,ZendeskApiMethod.CREATECOMMENT.getArgTypes().get(0));
  headers.put("CamelZendesk.ticketId",answer.getId());
  Comment comment=new Comment();
  comment.setBody(commentBody);
  Assert.assertNull(comment.getId());
  Assert.assertNull(comment.getCreatedAt());
  Assert.assertEquals("comment",ZendeskApiMethod.CREATECOMMENT.getArgNames().get(1));
  Assert.assertEquals(Comment.class,ZendeskApiMethod.CREATECOMMENT.getArgTypes().get(1));
  headers.put("CamelZendesk.comment",comment);
  requestBodyAndHeaders("direct://CREATECOMMENT",null,headers);
  Iterable iterable=requestBody("direct://GETTICKETCOMMENTS",answer.getId());
  Iterator iterator=iterable.iterator();
  Comment comment1=(Comment)iterator.next();
  Assert.assertEquals(ticketDescription,comment1.getBody());
  Assert.assertNotNull(comment1.getId());
  Assert.assertNotNull(comment1.getCreatedAt());
  Comment comment2=(Comment)iterator.next();
  Assert.assertEquals(commentBody,comment2.getBody());
  Assert.assertNotNull(comment2.getId());
  Assert.assertNotNull(comment2.getCreatedAt());
  requestBody("direct://DELETETICKET",answer.getId());
  Ticket mustBeDeleted=requestBody("direct://GETTICKET",answer.getId());
  Assert.assertNull(mustBeDeleted);
}
