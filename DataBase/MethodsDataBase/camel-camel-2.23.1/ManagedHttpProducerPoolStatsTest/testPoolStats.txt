@Test public void testPoolStats() throws Exception {
  context.getManagementStrategy().getManagementAgent().setRegisterAlways(true);
  String uri="http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/myapp";
  Exchange out=template.request(uri,new Processor(){
    public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("Hello World");
    }
  }
);
  assertNotNull(out);
  assertEquals("OK",out.getOut().getBody(String.class));
  HttpEndpoint http=context.getEndpoint(uri,HttpEndpoint.class);
  assertNotNull(http);
  int max=http.getClientConnectionsPoolStatsMax();
  int avail=http.getClientConnectionsPoolStatsAvailable();
  int leased=http.getClientConnectionsPoolStatsLeased();
  int pending=http.getClientConnectionsPoolStatsPending();
  assertEquals(200,max);
  assertEquals(1,avail);
  assertEquals(0,leased);
  assertEquals(0,pending);
  MBeanServer mbeanServer=getMBeanServer();
  String id=context.getManagementName();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=" + id + ",type=endpoints,name=\""+ uri+ "\"");
  assertTrue(mbeanServer.isRegistered(on));
  max=(int)mbeanServer.getAttribute(on,"ClientConnectionsPoolStatsMax");
  assertEquals(200,max);
  avail=(int)mbeanServer.getAttribute(on,"ClientConnectionsPoolStatsAvailable");
  assertEquals(1,avail);
  leased=(int)mbeanServer.getAttribute(on,"ClientConnectionsPoolStatsLeased");
  assertEquals(0,leased);
  pending=(int)mbeanServer.getAttribute(on,"ClientConnectionsPoolStatsPending");
  assertEquals(0,pending);
}
