@Test public void testInvalidKeyConfiguration(){
  Component component=context().getComponent(getComponentScheme());
  ComponentVerifierExtension verifier=component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);
  Map<String,Object> parameters=getParameters();
  parameters.put("consumerKey","invalid");
  ComponentVerifierExtension.Result result=verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY,parameters);
  Assert.assertEquals(ComponentVerifierExtension.Result.Status.ERROR,result.getStatus());
  Assert.assertEquals(1,result.getErrors().size());
  Assert.assertEquals(ComponentVerifierExtension.VerificationError.StandardCode.AUTHENTICATION,result.getErrors().get(0).getCode());
  Assert.assertEquals(401,result.getErrors().get(0).getDetails().get(ComponentVerifierExtension.VerificationError.asAttribute("twitter_status_code")));
  Assert.assertEquals(32,result.getErrors().get(0).getDetails().get(ComponentVerifierExtension.VerificationError.asAttribute("twitter_error_code")));
}
