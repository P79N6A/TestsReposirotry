/** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
@Test public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception {
  assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE,instance.capacity());
  try {
    instance.ensureCapacity(Integer.MAX_VALUE);
    fail("Should have thrown an exception");
  }
 catch (  IllegalStateException expectedEx) {
    String expectedMessage="Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <2147483647>" + " because the required buffer size <2147483647> exceeds the maximum buffer size <1073741824>";
    assertEquals(expectedMessage,expectedEx.getMessage());
  }
  try {
    instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE + 1);
    fail("Should have thrown an exception");
  }
 catch (  IllegalStateException expectedEx) {
    String expectedMessage="Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <1073741825>" + " because the required buffer size <1073741825> exceeds the maximum buffer size <1073741824>";
    assertEquals(expectedMessage,expectedEx.getMessage());
  }
  try {
    instance.write("BLAH".getBytes());
    instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE);
    fail("Should have thrown an exception");
  }
 catch (  IllegalStateException expectedEx) {
    String expectedMessage="Cannot increase the buffer size <2048> in order to increase the available capacity from <2044> to <1073741824>" + " because the required buffer size <1073741828> exceeds the maximum buffer size <1073741824>";
    assertEquals(expectedMessage,expectedEx.getMessage());
  }
}
