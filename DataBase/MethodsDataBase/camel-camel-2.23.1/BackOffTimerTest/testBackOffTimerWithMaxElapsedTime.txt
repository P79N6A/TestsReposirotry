@Test public void testBackOffTimerWithMaxElapsedTime() throws Exception {
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicInteger counter=new AtomicInteger(0);
  final ScheduledExecutorService executor=Executors.newScheduledThreadPool(3);
  final BackOff backOff=BackOff.builder().delay(100).maxElapsedTime(400).build();
  final BackOffTimer timer=new BackOffTimer(executor);
  BackOffTimer.Task task=timer.schedule(backOff,context -> {
    Assert.assertEquals(counter.incrementAndGet(),context.getCurrentAttempts());
    Assert.assertEquals(100,context.getCurrentDelay());
    Assert.assertEquals(100,context.getCurrentDelay());
    Assert.assertEquals(100 * counter.get(),context.getCurrentElapsedTime());
    return true;
  }
);
  task.whenComplete((context,throwable) -> {
    Assert.assertTrue(counter.get() <= 5);
    Assert.assertEquals(BackOffTimer.Task.Status.Exhausted,context.getStatus());
    latch.countDown();
  }
);
  latch.await(5,TimeUnit.SECONDS);
  executor.shutdownNow();
}
