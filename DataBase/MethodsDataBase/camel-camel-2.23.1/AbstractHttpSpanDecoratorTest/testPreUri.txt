@Test public void testPreUri(){
  Endpoint endpoint=Mockito.mock(Endpoint.class);
  Exchange exchange=Mockito.mock(Exchange.class);
  Message message=Mockito.mock(Message.class);
  Mockito.when(endpoint.getEndpointUri()).thenReturn(TEST_URI);
  Mockito.when(exchange.getIn()).thenReturn(message);
  Mockito.when(message.getHeader(Exchange.HTTP_URI)).thenReturn(TEST_URI);
  SpanDecorator decorator=new AbstractHttpSpanDecorator(){
    @Override public String getComponent(){
      return null;
    }
  }
;
  MockTracer tracer=new MockTracer();
  MockSpan span=tracer.buildSpan("TestSpan").start();
  decorator.pre(span,exchange,endpoint);
  assertEquals(TEST_URI,span.tags().get(Tags.HTTP_URL.getKey()));
  assertTrue(span.tags().containsKey(Tags.HTTP_METHOD.getKey()));
}
