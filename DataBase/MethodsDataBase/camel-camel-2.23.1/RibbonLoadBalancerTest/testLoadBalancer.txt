@Test public void testLoadBalancer() throws Exception {
  new ApplicationContextRunner().withUserConfiguration(TestConfiguration.class).withPropertyValues("spring.main.banner-mode=off","camel.cloud.consul.service-discovery.enabled=false","debug=false","camel.cloud.service-discovery.services[myService]=localhost:" + PORT1 + ",localhost:"+ PORT2,"camel.cloud.ribbon.load-balancer.enabled=true").run(context -> {
    final CamelContext camelContext=context.getBean(CamelContext.class);
    final ProducerTemplate template=camelContext.createProducerTemplate();
    DefaultServiceCallProcessor processor=findServiceCallProcessor(camelContext);
    assertThat(processor.getLoadBalancer()).isNotNull();
    assertThat(processor.getLoadBalancer()).isInstanceOf(RibbonServiceLoadBalancer.class);
    RibbonServiceLoadBalancer loadBalancer=(RibbonServiceLoadBalancer)processor.getLoadBalancer();
    assertThat(loadBalancer.getServiceDiscovery()).isInstanceOf(CamelCloudServiceDiscovery.class);
    assertThat(loadBalancer.getServiceFilter()).isInstanceOf(CamelCloudServiceFilter.class);
    assertThat(template.requestBody("direct:start",null,String.class)).isEqualTo("" + PORT2);
    assertThat(template.requestBody("direct:start",null,String.class)).isEqualTo("" + PORT1);
  }
);
}
