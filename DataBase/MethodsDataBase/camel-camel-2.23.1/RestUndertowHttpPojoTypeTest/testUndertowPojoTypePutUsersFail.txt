@Test public void testUndertowPojoTypePutUsersFail() throws Exception {
  MockEndpoint mock=getMockEndpoint("mock:putUsers");
  mock.expectedMessageCount(0);
  Exchange outExchange=template.request("undertow:http://localhost:{{port}}/users",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(Exchange.HTTP_METHOD,"PUT");
      exchange.getIn().setHeader(Exchange.ACCEPT_CONTENT_TYPE,"application/json");
      exchange.getIn().setHeader(Exchange.CONTENT_TYPE,"application/json");
      UserPojo user=new UserPojo();
      user.setId(1);
      user.setName("Scott");
      String body=mapper.writeValueAsString(user);
      exchange.getIn().setBody(body);
    }
  }
);
  assertNotNull(outExchange);
  assertEquals(400,outExchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));
  assertMockEndpointsSatisfied();
}
