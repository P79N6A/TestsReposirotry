@Test public void testRouteWithThread() throws Exception {
  String destination="sjms:queue:async.exception";
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      AtomicInteger counter=new AtomicInteger();
      from(destination + "?acknowledgementMode=SESSION_TRANSACTED&transacted=true").threads().process(exchange -> {
        if (counter.incrementAndGet() < TRANSACTION_REDELIVERY_COUNT) {
          throw new IllegalArgumentException();
        }
      }
).to("mock:async.exception");
    }
  }
);
  template.sendBody(destination,"begin");
  MockEndpoint mockEndpoint=context.getEndpoint("mock:async.exception",MockEndpoint.class);
  mockEndpoint.expectedMessageCount(1);
  if (!mockEndpoint.await(getShutdownTimeout(),TimeUnit.SECONDS)) {
    dumpThreads();
  }
  assertMockEndpointsSatisfied(getShutdownTimeout(),TimeUnit.SECONDS);
}
