@Test public void testCamelRouteEvents() throws Exception {
  int count=10;
  MockEndpoint mock=getMockEndpoint(MOCK_OUT);
  mock.returnReplyBody(new ExpressionAdapter(){
    @Override public Object evaluate(    Exchange exchange){
      try {
        Thread.sleep(SLEEP);
        return exchange.getIn().getBody();
      }
 catch (      InterruptedException e) {
        throw new CamelExecutionException(e.getMessage(),exchange,e);
      }
    }
  }
);
  mock.expectedMessageCount(count);
  for (int i=0; i < count; i++) {
    template.sendBody(DIRECT_IN,new Object());
  }
  Timer timer=meterRegistry.find(MOCK_OUT).timer();
  assertEquals(count,timer.count());
  assertTrue(timer.mean(TimeUnit.MILLISECONDS) > SLEEP.doubleValue());
}
