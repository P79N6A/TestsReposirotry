@Test public void testConfiguration() throws Exception {
  List<TwitterSearchEndpoint> endpoints=camelContext.getEndpoints().stream().filter(TwitterSearchEndpoint.class::isInstance).map(TwitterSearchEndpoint.class::cast).collect(Collectors.toList());
  Assert.assertFalse(endpoints.isEmpty());
  endpoints.forEach(endpoint -> {
    if (endpoint.getEndpointUri().startsWith("twitter-search-twitter-find-component:")) {
      Assert.assertEquals("cameltest",endpoint.getKeywords());
      Assert.assertTrue(endpoint.isFilterOld());
    }
 else     if (endpoint.getEndpointUri().startsWith("twitter-search-tw-find1:")) {
      Assert.assertEquals("camelsearchtest1",endpoint.getKeywords());
      Assert.assertFalse(endpoint.isFilterOld());
    }
 else     if (endpoint.getEndpointUri().startsWith("twitter-search-tw-find2:")) {
      Assert.assertEquals("camelsearchtest2",endpoint.getKeywords());
      Assert.assertFalse(endpoint.isFilterOld());
    }
 else {
      Assert.fail("Unexpected endpoint " + endpoint.getEndpointUri());
    }
  }
);
  Assert.assertNotEquals(camelContext.getComponent("twitter-find-component"),camelContext.getComponent("twitter-search-tw-find1"));
  Assert.assertNotEquals(camelContext.getComponent("twitter-find-component"),camelContext.getComponent("twitter-search-tw-find2"));
  Assert.assertNotEquals(camelContext.getComponent("twitter-search-tw-find1"),camelContext.getComponent("twitter-search-tw-find2"));
}
