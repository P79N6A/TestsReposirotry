@Test public void testTimeOutRetryThenSuccess() throws Exception {
  when(of.get()).thenAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Exception {
      throw new RuntimeException("Timed out waiting for operation");
    }
  }
).thenAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Exception {
      return true;
    }
  }
);
  when(client.set(anyString(),anyInt(),any(),any(),any())).thenReturn(of);
  when(endpoint.getId()).thenReturn("123");
  when(endpoint.getOperation()).thenReturn("CCB_PUT");
  when(exchange.getOut()).thenReturn(msg);
  producer.process(exchange);
  verify(of,times(2)).get();
  verify(msg).setBody(true);
}
