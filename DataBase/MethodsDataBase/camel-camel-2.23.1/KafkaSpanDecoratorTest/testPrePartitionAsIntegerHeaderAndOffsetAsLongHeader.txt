@Test public void testPrePartitionAsIntegerHeaderAndOffsetAsLongHeader(){
  Long testOffset=4875454L;
  Integer testPartition=0;
  Endpoint endpoint=Mockito.mock(Endpoint.class);
  Exchange exchange=Mockito.mock(Exchange.class);
  Message message=Mockito.mock(Message.class);
  Mockito.when(endpoint.getEndpointUri()).thenReturn("test");
  Mockito.when(exchange.getIn()).thenReturn(message);
  Mockito.when(message.getHeader(KafkaSpanDecorator.OFFSET,Long.class)).thenReturn(testOffset);
  Mockito.when(message.getHeader(KafkaSpanDecorator.PARTITION,Integer.class)).thenReturn(testPartition);
  SpanDecorator decorator=new KafkaSpanDecorator();
  MockTracer tracer=new MockTracer();
  MockSpan span=tracer.buildSpan("TestSpan").start();
  decorator.pre(span,exchange,endpoint);
  assertEquals(String.valueOf(testOffset),span.tags().get(KafkaSpanDecorator.KAFKA_OFFSET_TAG));
  assertEquals(String.valueOf(testPartition),span.tags().get(KafkaSpanDecorator.KAFKA_PARTITION_TAG));
}
