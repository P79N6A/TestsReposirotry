@Test public void testSingleMessageSend() throws Exception {
  Exchange exchange=new DefaultExchange(context);
  String attributeKey="ATTRIBUTE-TEST-KEY";
  String attributeValue="ATTRIBUTE-TEST-VALUE";
  Map<String,String> attributes=new HashMap<>();
  attributes.put(attributeKey,attributeValue);
  exchange.getIn().setBody("Single  : " + exchange.getExchangeId());
  exchange.getIn().setHeader(GooglePubsubConstants.ATTRIBUTES,attributes);
  receiveResult.expectedMessageCount(1);
  receiveResult.expectedBodiesReceivedInAnyOrder(exchange.getIn().getBody());
  producer.send(exchange);
  List<Exchange> sentExchanges=sendResult.getExchanges();
  assertEquals("Sent exchanges",1,sentExchanges.size());
  Exchange sentExchange=sentExchanges.get(0);
  assertEquals("Sent ID",exchange.getIn().getHeader(GooglePubsubConstants.MESSAGE_ID),sentExchange.getIn().getHeader(GooglePubsubConstants.MESSAGE_ID));
  receiveResult.assertIsSatisfied(5000);
  List<Exchange> receivedExchanges=receiveResult.getExchanges();
  assertNotNull("Received exchanges",receivedExchanges);
  Exchange receivedExchange=receivedExchanges.get(0);
  assertNotNull("PUBSUB Message ID Property",receivedExchange.getIn().getHeader(GooglePubsubConstants.MESSAGE_ID));
  assertNotNull("PUBSUB Ack ID Property",receivedExchange.getIn().getHeader(GooglePubsubConstants.ACK_ID));
  assertNotNull("PUBSUB Published Time",receivedExchange.getIn().getHeader(GooglePubsubConstants.PUBLISH_TIME));
  assertEquals("PUBSUB Header Attribute",attributeValue,((Map)receivedExchange.getIn().getHeader(GooglePubsubConstants.ATTRIBUTES)).get(attributeKey));
  assertEquals(sentExchange.getIn().getHeader(GooglePubsubConstants.MESSAGE_ID),receivedExchange.getIn().getHeader(GooglePubsubConstants.MESSAGE_ID));
}
