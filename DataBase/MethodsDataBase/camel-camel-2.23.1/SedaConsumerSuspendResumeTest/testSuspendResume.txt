@Test public void testSuspendResume() throws Exception {
  MockEndpoint mock=getMockEndpoint("mock:bar");
  mock.expectedMessageCount(1);
  template.sendBody("seda:foo","A");
  mock.assertIsSatisfied();
  assertEquals("Started",context.getRouteStatus("foo").name());
  assertEquals("Started",context.getRouteStatus("bar").name());
  SedaConsumer consumer=(SedaConsumer)context.getRoute("bar").getConsumer();
  ServiceHelper.suspendService(consumer);
  assertEquals("Suspended",consumer.getStatus().name());
  resetMocks();
  mock.expectedMessageCount(0);
  await().atMost(1,TimeUnit.SECONDS).until(() -> context.getEndpoint("seda:foo",SedaEndpoint.class).getQueue().size() == 0 && context.getEndpoint("seda:bar",SedaEndpoint.class).getQueue().size() == 0);
  template.sendBody("seda:foo","B");
  mock.assertIsSatisfied(50);
  resetMocks();
  mock.expectedMessageCount(1);
  ServiceHelper.resumeService(consumer);
  assertEquals("Started",consumer.getStatus().name());
  mock.assertIsSatisfied();
}
