@Test public void testReadUpdateProperties() throws Exception {
  final TestOlingo4ResponseHandler<ClientPrimitiveValue> propertyHandler=new TestOlingo4ResponseHandler<>();
  olingoApp.read(edm,TEST_AIRPORTS_SIMPLE_PROPERTY,null,null,propertyHandler);
  ClientPrimitiveValue name=propertyHandler.await();
  assertEquals("San Francisco International Airport",name.toString());
  LOG.info("Airport name property value {}",name.asPrimitive());
  final TestOlingo4ResponseHandler<ClientPrimitiveValue> valueHandler=new TestOlingo4ResponseHandler<>();
  olingoApp.read(edm,TEST_AIRPORTS_SIMPLE_PROPERTY_VALUE,null,null,valueHandler);
  ClientPrimitiveValue nameValue=valueHandler.await();
  assertEquals("San Francisco International Airport",name.toString());
  LOG.info("Airport name property value {}",nameValue);
  TestOlingo4ResponseHandler<HttpStatusCode> statusHandler=new TestOlingo4ResponseHandler<>();
  ClientEntity clientEntity=objFactory.newEntity(null);
  clientEntity.getProperties().add(objFactory.newPrimitiveProperty("MiddleName",objFactory.newPrimitiveValueBuilder().buildString("Middle")));
  olingoApp.update(edm,TEST_PEOPLE,null,clientEntity,statusHandler);
  HttpStatusCode statusCode=statusHandler.await();
  assertEquals(HttpStatusCode.NO_CONTENT,statusCode);
  LOG.info("Name property updated with status {}",statusCode.getStatusCode());
  final TestOlingo4ResponseHandler<ClientEntity> responseHandler=new TestOlingo4ResponseHandler<>();
  olingoApp.read(edm,TEST_PEOPLE,null,null,responseHandler);
  ClientEntity entity=responseHandler.await();
  assertEquals("Middle",entity.getProperty("MiddleName").getValue().toString());
  LOG.info("Updated Single Entity:  {}",prettyPrint(entity));
}
