@Test public void propagatedHeaderIsReceivedByKafka() throws Exception {
  String propagatedStringHeaderKey="PROPAGATED_STRING_HEADER";
  String propagatedStringHeaderValue="propagated string header value";
  String propagatedIntegerHeaderKey="PROPAGATED_INTEGER_HEADER";
  Integer propagatedIntegerHeaderValue=54545;
  String propagatedLongHeaderKey="PROPAGATED_LONG_HEADER";
  Long propagatedLongHeaderValue=5454545454545L;
  String propagatedDoubleHeaderKey="PROPAGATED_DOUBLE_HEADER";
  Double propagatedDoubleHeaderValue=43434.545D;
  String propagatedBytesHeaderKey="PROPAGATED_BYTES_HEADER";
  byte[] propagatedBytesHeaderValue=new byte[]{121,34,34,54,5,3,54,-34};
  String propagatedBooleanHeaderKey="PROPAGATED_BOOLEAN_HEADER";
  Boolean propagatedBooleanHeaderValue=Boolean.TRUE;
  Map<String,Object> camelHeaders=new HashMap<>();
  camelHeaders.put(propagatedStringHeaderKey,propagatedStringHeaderValue);
  camelHeaders.put(propagatedIntegerHeaderKey,propagatedIntegerHeaderValue);
  camelHeaders.put(propagatedLongHeaderKey,propagatedLongHeaderValue);
  camelHeaders.put(propagatedDoubleHeaderKey,propagatedDoubleHeaderValue);
  camelHeaders.put(propagatedBytesHeaderKey,propagatedBytesHeaderValue);
  camelHeaders.put(propagatedBooleanHeaderKey,propagatedBooleanHeaderValue);
  camelHeaders.put("CustomObjectHeader",new Object());
  camelHeaders.put("CustomNullObjectHeader",null);
  camelHeaders.put("CamelFilteredHeader","CamelFilteredHeader value");
  CountDownLatch messagesLatch=new CountDownLatch(1);
  propagatedHeadersTemplate.sendBodyAndHeaders("Some test message",camelHeaders);
  List<ConsumerRecord<String,String>> records=pollForRecords(stringsConsumerConn,TOPIC_PROPAGATED_HEADERS,messagesLatch);
  boolean allMessagesReceived=messagesLatch.await(10_000,TimeUnit.MILLISECONDS);
  assertTrue("Not all messages were published to the kafka topics. Not received: " + messagesLatch.getCount(),allMessagesReceived);
  ConsumerRecord<String,String> record=records.get(0);
  Headers headers=record.headers();
  assertNotNull("Kafka Headers should not be null.",headers);
  assertEquals("Seven propagated header is expected.",7,headers.toArray().length);
  assertEquals("Propagated string value received",propagatedStringHeaderValue,new String(getHeaderValue(propagatedStringHeaderKey,headers)));
  assertEquals("Propagated integer value received",propagatedIntegerHeaderValue,new Integer(ByteBuffer.wrap(getHeaderValue(propagatedIntegerHeaderKey,headers)).getInt()));
  assertEquals("Propagated long value received",propagatedLongHeaderValue,new Long(ByteBuffer.wrap(getHeaderValue(propagatedLongHeaderKey,headers)).getLong()));
  assertEquals("Propagated double value received",propagatedDoubleHeaderValue,new Double(ByteBuffer.wrap(getHeaderValue(propagatedDoubleHeaderKey,headers)).getDouble()));
  assertArrayEquals("Propagated byte array value received",propagatedBytesHeaderValue,getHeaderValue(propagatedBytesHeaderKey,headers));
  assertEquals("Propagated boolean value received",propagatedBooleanHeaderValue,Boolean.valueOf(new String(getHeaderValue(propagatedBooleanHeaderKey,headers))));
}
