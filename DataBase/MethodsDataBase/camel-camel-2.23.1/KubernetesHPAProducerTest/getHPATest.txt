@Test public void getHPATest() throws Exception {
  HorizontalPodAutoscaler hpa1=new HorizontalPodAutoscalerBuilder().withNewMetadata().withName("hpa1").withNamespace("test").and().build();
  HorizontalPodAutoscaler hpa2=new HorizontalPodAutoscalerBuilder().withNewMetadata().withName("hpa2").withNamespace("ns1").and().build();
  server.expect().withPath("/apis/autoscaling/v1/namespaces/test/horizontalpodautoscalers/hpa1").andReturn(200,hpa1).once();
  server.expect().withPath("/apis/autoscaling/v1/namespaces/ns1/horizontalpodautoscalers/hpa2").andReturn(200,hpa2).once();
  Exchange ex=template.request("direct:getHPA",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,"test");
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_HPA_NAME,"hpa1");
    }
  }
);
  HorizontalPodAutoscaler result=ex.getOut().getBody(HorizontalPodAutoscaler.class);
  assertEquals("hpa1",result.getMetadata().getName());
}
