@Test public void testSingleConsumer() throws Exception {
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("reactive-streams:singleConsumer").process().message(m -> m.setHeader("thread",Thread.currentThread().getId())).to("mock:singleBucket");
    }
  }
);
  context.start();
  Flowable.range(0,1000).subscribe(crs.streamSubscriber("singleConsumer",Number.class));
  MockEndpoint endpoint=getMockEndpoint("mock:singleBucket");
  endpoint.expectedMessageCount(1000);
  endpoint.assertIsSatisfied();
  Assert.assertEquals(1,endpoint.getExchanges().stream().map(x -> x.getIn().getHeader("thread",String.class)).distinct().count());
  AtomicLong num=new AtomicLong(0);
  endpoint.getExchanges().stream().map(x -> x.getIn().getBody(Long.class)).forEach(n -> Assert.assertEquals(num.getAndIncrement(),n.longValue()));
}
