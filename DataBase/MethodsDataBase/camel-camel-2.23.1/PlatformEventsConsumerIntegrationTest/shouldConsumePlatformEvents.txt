@Test public void shouldConsumePlatformEvents() throws InterruptedException, ExecutionException {
  final ExecutorService parallel=Executors.newSingleThreadExecutor();
  final Future<PlatformEvent> futurePlatformEvent=parallel.submit(() -> consumer.receiveBody("salesforce:event/TestEvent__e",PlatformEvent.class));
  Awaitility.await().atMost(10,TimeUnit.SECONDS).untilAsserted(() -> {
    template.sendBody("direct:sendPlatformEvent","{\"Test_Field__c\": \"data\"}");
    Assertions.assertThat(futurePlatformEvent.isDone()).isTrue();
  }
);
  final PlatformEvent platformEvent=futurePlatformEvent.get();
  Assertions.assertThat(platformEvent).isNotNull();
  Assertions.assertThat(platformEvent.getEventData()).containsOnly(entry("Test_Field__c","data"));
}
