@Test public void asyncMDNTest() throws Exception {
  AS2AsynchronousMDNManager mdnManager=new AS2AsynchronousMDNManager(AS2_VERSION,ORIGIN_SERVER_NAME,SERVER_FQDN,certList.toArray(new X509Certificate[0]),signingKP.getPrivate());
  ApplicationEDIEntity ediEntity=EntityUtils.createEDIEntity(EDI_MESSAGE,ContentType.create(AS2MediaType.APPLICATION_EDIFACT,AS2Charset.US_ASCII),null,false);
  HttpEntityEnclosingRequest request=new BasicHttpEntityEnclosingRequest("POST",REQUEST_URI);
  HttpMessageUtils.setHeaderValue(request,AS2Header.SUBJECT,SUBJECT);
  String httpdate=DATE_GENERATOR.getCurrentDate();
  HttpMessageUtils.setHeaderValue(request,AS2Header.DATE,httpdate);
  HttpMessageUtils.setHeaderValue(request,AS2Header.AS2_TO,AS2_NAME);
  HttpMessageUtils.setHeaderValue(request,AS2Header.AS2_FROM,AS2_NAME);
  String originalMessageId=AS2Utils.createMessageId(SERVER_FQDN);
  HttpMessageUtils.setHeaderValue(request,AS2Header.MESSAGE_ID,originalMessageId);
  HttpMessageUtils.setHeaderValue(request,AS2Header.DISPOSITION_NOTIFICATION_OPTIONS,DISPOSITION_NOTIFICATION_OPTIONS);
  EntityUtils.setMessageEntity(request,ediEntity);
  HttpResponse response=new BasicHttpResponse(HttpVersion.HTTP_1_1,200,"OK");
  httpdate=DATE_GENERATOR.getCurrentDate();
  response.setHeader(AS2Header.DATE,httpdate);
  response.setHeader(AS2Header.SERVER,REPORTING_UA);
  Map<String,String> extensionFields=new HashMap<String,String>();
  extensionFields.put("Original-Recipient","rfc822;" + AS2_NAME);
  AS2DispositionModifier dispositionModifier=AS2DispositionModifier.createWarning("AS2 is cool!");
  String[] failureFields=new String[]{"failure-field-1"};
  String[] errorFields=new String[]{"error-field-1"};
  String[] warningFields=new String[]{"warning-field-1"};
  DispositionNotificationMultipartReportEntity mdn=new DispositionNotificationMultipartReportEntity(request,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,dispositionModifier,failureFields,errorFields,warningFields,extensionFields,null,"boundary",true);
  @SuppressWarnings("unused") HttpCoreContext httpContext=mdnManager.send(mdn,RECIPIENT_DELIVERY_ADDRESS);
}
