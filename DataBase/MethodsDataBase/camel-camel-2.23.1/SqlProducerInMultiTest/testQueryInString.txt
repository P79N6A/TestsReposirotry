@Test public void testQueryInString() throws InterruptedException {
  MockEndpoint mock=getMockEndpoint("mock:query");
  mock.expectedMessageCount(1);
  HashMap<String,Object> headers=new HashMap<>();
  headers.put("names","Camel,AMQ");
  headers.put("licenses","ASF,XXX,YYY");
  template.requestBodyAndHeaders("direct:query","Hi there!",headers);
  assertMockEndpointsSatisfied();
  List list=mock.getReceivedExchanges().get(0).getIn().getBody(List.class);
  assertEquals(6,list.size());
  Map row=(Map)list.get(0);
  assertEquals("Camel",row.get("PROJECT"));
  assertEquals("ASF",row.get("license"));
  row=(Map)list.get(1);
  assertEquals("Camel",row.get("PROJECT"));
  assertEquals("XXX",row.get("license"));
  row=(Map)list.get(2);
  assertEquals("Camel",row.get("PROJECT"));
  assertEquals("YYY",row.get("license"));
  row=(Map)list.get(3);
  assertEquals("AMQ",row.get("PROJECT"));
  assertEquals("ASF",row.get("license"));
  row=(Map)list.get(4);
  assertEquals("AMQ",row.get("PROJECT"));
  assertEquals("XXX",row.get("license"));
  row=(Map)list.get(5);
  assertEquals("AMQ",row.get("PROJECT"));
  assertEquals("YYY",row.get("license"));
}
