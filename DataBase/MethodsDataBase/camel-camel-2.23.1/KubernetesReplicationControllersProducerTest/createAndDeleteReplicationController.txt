@Test public void createAndDeleteReplicationController() throws Exception {
  server.expect().withPath("/api/v1/namespaces/test/replicationcontrollers/repl1").andReturn(200,new ReplicationControllerBuilder().withNewMetadata().withName("repl1").withResourceVersion("1").endMetadata().withNewSpec().withReplicas(0).endSpec().withNewStatus().withReplicas(1).endStatus().build()).once();
  server.expect().withPath("/api/v1/namespaces/test/replicationcontrollers/repl1").andReturn(200,new ReplicationControllerBuilder().withNewMetadata().withName("repl1").withResourceVersion("1").endMetadata().withNewSpec().withReplicas(0).endSpec().withNewStatus().withReplicas(0).endStatus().build()).times(5);
  Exchange ex=template.request("direct:deleteReplicationController",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,"test");
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_REPLICATION_CONTROLLER_NAME,"repl1");
    }
  }
);
  boolean rcDeleted=ex.getOut().getBody(Boolean.class);
  assertTrue(rcDeleted);
}
