@Test public void testRemoveEvidence() throws Exception {
  final String textEvidence="Text Evidence";
  Dispute createdDispute=createDispute();
  assertEquals(Dispute.Status.OPEN,createdDispute.getStatus());
  final Map<String,Object> addTextEvidenceHeaders=new HashMap<String,Object>();
  addTextEvidenceHeaders.put("CamelBraintree.id",createdDispute.getId());
  addTextEvidenceHeaders.put("CamelBraintree.content",textEvidence);
  final Result<DisputeEvidence> addTextEvidenceResult=requestBodyAndHeaders("direct://ADDTEXTEVIDENCE",null,addTextEvidenceHeaders);
  assertNotNull("addTextEvidence result",addTextEvidenceResult);
  assertTrue("addTextEvidence result success",addTextEvidenceResult.isSuccess());
  DisputeEvidence disputeEvidence=addTextEvidenceResult.getTarget();
  assertEquals(textEvidence,disputeEvidence.getComment());
  final Map<String,Object> removeTextEvidenceHeaders=new HashMap<String,Object>();
  removeTextEvidenceHeaders.put("CamelBraintree.disputeId",createdDispute.getId());
  removeTextEvidenceHeaders.put("CamelBraintree.evidenceId",disputeEvidence.getId());
  final Result removeTextEvidenceResult=requestBodyAndHeaders("direct://REMOVEEVIDENCE",null,removeTextEvidenceHeaders);
  assertNotNull("removeEvidence result",removeTextEvidenceResult);
  assertTrue("removeEvidence result success",removeTextEvidenceResult.isSuccess());
}
