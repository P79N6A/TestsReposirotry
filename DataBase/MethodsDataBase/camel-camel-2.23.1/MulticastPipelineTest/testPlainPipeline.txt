@Test public void testPlainPipeline() throws Exception {
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").pipeline("direct:a","direct:b").pipeline("direct:c","direct:d").to("mock:result");
      from("direct:a").to("mock:a").setBody().constant("A");
      from("direct:b").to("mock:b").setBody().constant("B");
      from("direct:c").to("mock:c").setBody().constant("C");
      from("direct:d").to("mock:d").setBody().constant("D");
    }
  }
);
  context.start();
  getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:b").expectedBodiesReceived("A");
  getMockEndpoint("mock:c").expectedBodiesReceived("B");
  getMockEndpoint("mock:d").expectedBodiesReceived("C");
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
}
