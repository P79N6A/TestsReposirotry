@Test @SuppressWarnings({"rawtypes","unchecked"}) public void testCalculateWithException() throws Exception {
  LOG.info("Thrift calculate method with business exception async test start");
  final CountDownLatch latch=new CountDownLatch(1);
  List requestBody=new ArrayList();
  requestBody.add(1);
  requestBody.add(new Work(THRIFT_TEST_NUM1,0,Operation.DIVIDE));
  template.asyncCallbackSendBody("direct:thrift-calculate",requestBody,new SynchronizationAdapter(){
    @Override public void onComplete(    Exchange exchange){
      latch.countDown();
    }
    @Override public void onFailure(    Exchange exchange){
      responseBody=exchange.getException();
      latch.countDown();
    }
  }
);
  latch.await(5,TimeUnit.SECONDS);
  assertTrue("Get an InvalidOperation exception",responseBody instanceof InvalidOperation);
}
