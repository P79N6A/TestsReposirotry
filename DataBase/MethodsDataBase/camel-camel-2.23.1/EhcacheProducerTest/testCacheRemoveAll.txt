@Test public void testCacheRemoveAll() throws Exception {
  final Cache<Object,Object> cache=getTestCache();
  final Map<String,String> map=generateRandomMapOfString(3);
  final Set<String> keys=map.keySet().stream().limit(2).collect(Collectors.toSet());
  cache.putAll(map);
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMinimumMessageCount(1);
  mock.expectedHeaderReceived(EhcacheConstants.ACTION_HAS_RESULT,false);
  mock.expectedHeaderReceived(EhcacheConstants.ACTION_SUCCEEDED,true);
  fluentTemplate().withHeader(EhcacheConstants.ACTION,EhcacheConstants.ACTION_REMOVE_ALL).withHeader(EhcacheConstants.KEYS,keys).to("direct://start").send();
  assertMockEndpointsSatisfied();
  cache.forEach(e -> assertFalse(keys.contains(e.getKey())));
}
