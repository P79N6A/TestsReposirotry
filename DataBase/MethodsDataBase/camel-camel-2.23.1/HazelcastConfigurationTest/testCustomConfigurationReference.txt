@Test public void testCustomConfigurationReference() throws Exception {
  DefaultCamelContext context=null;
  try {
    Config config=new Config();
    config.getNetworkConfig().setPort(6789);
    config.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);
    config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);
    config.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);
    SimpleRegistry reg=new SimpleRegistry();
    reg.put("my-config",config);
    context=new DefaultCamelContext(reg);
    context.start();
    context.getEndpoint("hazelcast-map:my-cache?hazelcastConfig=#my-config");
    HazelcastDefaultEndpoint endpoint=getHzEndpoint(context,"hazelcast-map:my-cache?hazelcastConfig=#my-config");
    Assert.assertNotNull(endpoint.getHazelcastInstance());
    HazelcastMapComponent component=context.getComponent("hazelcast-map",HazelcastMapComponent.class);
    Assert.assertNull(component.getHazelcastInstance());
    HazelcastInstance hz=endpoint.getHazelcastInstance();
    Assert.assertFalse(hz.getConfig().getNetworkConfig().getJoin().getAwsConfig().isEnabled());
    Assert.assertTrue(hz.getConfig().getNetworkConfig().getJoin().getMulticastConfig().isEnabled());
    Assert.assertFalse(hz.getConfig().getNetworkConfig().getJoin().getTcpIpConfig().isEnabled());
    Assert.assertEquals(6789,hz.getConfig().getNetworkConfig().getPort());
  }
  finally {
    if (context != null) {
      context.stop();
    }
  }
}
