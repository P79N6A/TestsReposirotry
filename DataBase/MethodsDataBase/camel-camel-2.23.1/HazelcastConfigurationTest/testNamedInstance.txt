@Test public void testNamedInstance() throws Exception {
  DefaultCamelContext context=null;
  try {
    String instanceName=UUID.randomUUID().toString();
    Config config=new Config();
    config.setInstanceName(instanceName);
    config.getNetworkConfig().setPort(6789);
    config.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);
    config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);
    config.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);
    Hazelcast.newHazelcastInstance(config);
    context=new DefaultCamelContext();
    context.start();
    HazelcastDefaultEndpoint endpoint1=getHzEndpoint(context,"hazelcast-map:my-cache-1?hazelcastInstanceName=" + instanceName);
    HazelcastDefaultEndpoint endpoint2=getHzEndpoint(context,"hazelcast-map:my-cache-2?hazelcastInstanceName=" + instanceName);
    Assert.assertNotNull(endpoint1.getHazelcastInstance());
    Assert.assertNotNull(endpoint2.getHazelcastInstance());
    Assert.assertTrue(endpoint1.getHazelcastInstance() == endpoint2.getHazelcastInstance());
    HazelcastMapComponent component=context.getComponent("hazelcast-map",HazelcastMapComponent.class);
    Assert.assertNull(component.getHazelcastInstance());
    for (    HazelcastDefaultEndpoint endpoint : Arrays.asList(endpoint1,endpoint2)) {
      HazelcastInstance hz=endpoint.getHazelcastInstance();
      Assert.assertEquals(instanceName,hz.getName());
      Assert.assertFalse(hz.getConfig().getNetworkConfig().getJoin().getAwsConfig().isEnabled());
      Assert.assertTrue(hz.getConfig().getNetworkConfig().getJoin().getMulticastConfig().isEnabled());
      Assert.assertFalse(hz.getConfig().getNetworkConfig().getJoin().getTcpIpConfig().isEnabled());
      Assert.assertEquals(6789,hz.getConfig().getNetworkConfig().getPort());
    }
  }
  finally {
    if (context != null) {
      context.stop();
    }
  }
}
