@Test public void testMainWithoutIncludingTestBundle() throws Exception {
  TinyBundle bundle=TinyBundles.newBundle();
  bundle.add("OSGI-INF/blueprint/camel.xml",getClass().getResourceAsStream("main-loadfile.xml"));
  bundle.set("Manifest-Version","2").set("Bundle-ManifestVersion","2").set("Bundle-SymbolicName",SYMBOLIC_NAME).set("Bundle-Version","1.0.0");
  File tb=File.createTempFile(SYMBOLIC_NAME + "-",".jar",new File("target"));
  FileOutputStream out=new FileOutputStream(tb);
  IOUtils.copy(bundle.build(),out);
  out.close();
  URLClassLoader loader=new URLClassLoader(new URL[]{tb.toURI().toURL()},getClass().getClassLoader());
  Main main=new Main();
  main.setLoader(loader);
  main.setBundleName(SYMBOLIC_NAME);
  main.setIncludeSelfAsBundle(false);
  main.setConfigAdminPid("stuff");
  main.setConfigAdminFileName("src/test/resources/etc/stuff.cfg");
  main.doStart();
  ProducerTemplate template=main.getCamelTemplate();
  assertNotNull("We should get the template here",template);
  String result=template.requestBody("direct:start","hello",String.class);
  assertEquals("Get a wrong response","Bye hello",result);
  main.stop();
}
