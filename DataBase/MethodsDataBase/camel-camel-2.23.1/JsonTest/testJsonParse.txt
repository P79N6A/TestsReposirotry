@Test public void testJsonParse(){
  JsonStructure json=JsonParser.parse("{\n" + "  \"test\": \"some string\",\n" + "  \"otherKey\": true,\n"+ "  \"nextKey\": 1234,\n"+ "  \"doubleKey\": 1234.567,\n"+ "  \"subElement\": {\n"+ "    \"subKey\": \"some other string\",\n"+ "    \"complexString\": \"String with JSON syntax elements like .,\\\" { or }\"\n"+ "  },\n"+ "  \"arrayElement\": [\n"+ "    {\n"+ "      \"id\": 1,\n"+ "      \"name\": \"test1\"\n"+ "    },\n"+ "    {\n"+ "      \"id\": 2,\n"+ "      \"name\": \"test2\"\n"+ "    }\n"+ "  ]\n"+ "}");
  assertThat(json,is(notNullValue()));
  assertThat(json,is(instanceOf(JsonObject.class)));
  JsonObject jsonObj=(JsonObject)json;
  assertThat(jsonObj.getKeys().size(),is(equalTo(6)));
  assertThat(jsonObj.getString("test"),is(equalTo("some string")));
  assertThat(jsonObj.getBoolean("otherKey"),is(equalTo(true)));
  assertThat(jsonObj.getInteger("nextKey"),is(equalTo(1234)));
  assertThat(jsonObj.getDouble("doubleKey"),is(equalTo(1234.567)));
  assertThat(jsonObj.get("subElement"),is(instanceOf(JsonObject.class)));
  JsonObject jsonSub=(JsonObject)jsonObj.get("subElement");
  assertThat(jsonSub.getString("subKey"),is(equalTo("some other string")));
  assertThat(jsonSub.getString("complexString"),is(equalTo("String with JSON syntax elements like .,\\\" { or }")));
  assertThat(jsonObj.get("arrayElement"),is(instanceOf(JsonArray.class)));
  JsonArray jsonArr=(JsonArray)jsonObj.get("arrayElement");
  assertThat(jsonArr.size(),is(equalTo(2)));
  assertThat(jsonArr.get(0),is(instanceOf(JsonObject.class)));
  JsonObject arrElem0=(JsonObject)jsonArr.get(0);
  assertThat(arrElem0.getInteger("id"),is(equalTo(1)));
  assertThat(arrElem0.getString("name"),is(equalTo("test1")));
  assertThat(jsonArr.get(1),is(instanceOf(JsonObject.class)));
  JsonObject arrElem1=(JsonObject)jsonArr.get(1);
  assertThat(arrElem1.getInteger("id"),is(equalTo(2)));
  assertThat(arrElem1.getString("name"),is(equalTo("test2")));
}
