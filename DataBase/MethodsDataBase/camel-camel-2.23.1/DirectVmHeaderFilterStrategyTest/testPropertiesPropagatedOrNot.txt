@Test public void testPropertiesPropagatedOrNot() throws Exception {
  context.getRegistry(JndiRegistry.class).bind("headerFilterStrategy",new HeaderFilterStrategy(){
    @Override public boolean applyFilterToExternalHeaders(    String headerName,    Object headerValue,    Exchange exchange){
      return headerName.equals("Header2");
    }
    @Override public boolean applyFilterToCamelHeaders(    String headerName,    Object headerValue,    Exchange exchange){
      return headerName.equals("Header1");
    }
  }
);
  Exchange response=template.request("direct-vm:start.filter?headerFilterStrategy=#headerFilterStrategy&block=false",exchange -> {
    exchange.getIn().setBody("Hello World");
    exchange.getIn().setHeader("Header1","Value1");
  }
);
  assertNull(response.getException());
  assertNull(response.getOut().getHeader("Header2"));
  response=template.request("direct-vm:start.nofilter",exchange -> {
    exchange.getIn().setBody("Hello World");
    exchange.getIn().setHeader("Header1","Value1");
  }
);
  assertNull(response.getException());
  assertEquals("Value2",response.getOut().getHeader("Header2",String.class));
}
