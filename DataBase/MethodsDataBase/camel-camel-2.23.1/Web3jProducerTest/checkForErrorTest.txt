@Test public void checkForErrorTest() throws Exception {
  Web3ClientVersion response=Mockito.mock(Web3ClientVersion.class);
  Mockito.when(mockWeb3j.web3ClientVersion()).thenReturn(request);
  Mockito.when(request.send()).thenReturn(response);
  Mockito.when(response.hasError()).thenReturn(true);
  Response.Error error=Mockito.mock(Response.Error.class);
  Mockito.when(response.getError()).thenReturn(error);
  Mockito.when(error.getCode()).thenReturn(1);
  Mockito.when(error.getMessage()).thenReturn("error message");
  Mockito.when(error.getData()).thenReturn("error data");
  Exchange exchange=createExchangeWithBodyAndHeader(null,Web3jConstants.ID,Long.valueOf(2));
  template.send(exchange);
  assertTrue(exchange.getIn().getHeader(Web3jConstants.ERROR_CODE,Integer.class).equals(Integer.valueOf(1)));
  assertTrue(exchange.getIn().getHeader(Web3jConstants.ERROR_MESSAGE,String.class).equals("error message"));
  assertTrue(exchange.getIn().getHeader(Web3jConstants.ERROR_DATA,String.class).equals("error data"));
}
