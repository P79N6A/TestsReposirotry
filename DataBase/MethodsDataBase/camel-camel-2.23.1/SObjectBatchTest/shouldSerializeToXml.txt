@Test public void shouldSerializeToXml(){
  final String xml="<batch>" + "<batchRequests>" + "<batchRequest>"+ "<method>POST</method>"+ "<url>v37.0/sobjects/Account/</url>"+ "<richInput>"+ "<Account>"+ "<Name>NewAccountName</Name>"+ "<Industry>Environmental</Industry>"+ "</Account>"+ "</richInput>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>DELETE</method>"+ "<url>v37.0/sobjects/Account/001D000000K0fXOIAZ</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/sobjects/Account/001D000000K0fXOIAZ?fields=Name,BillingPostalCode</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/sobjects/Account/EPK/12345</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/sobjects/Account/001D000000K0fXOIAZ/CreatedBy?fields=Name</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/limits/</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>PATCH</method>"+ "<url>v37.0/sobjects/Account/001D000000K0fXOIAZ</url>"+ "<richInput>"+ "<Account>"+ "<Name>NewName</Name>"+ "<AccountNumber>AC12345</AccountNumber>"+ "</Account>"+ "</richInput>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>PATCH</method>"+ "<url>v37.0/sobjects/Account/EPK/12345</url>"+ "<richInput>"+ "<Account>"+ "<Name>NewName</Name>"+ "</Account>"+ "</richInput>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>PATCH</method>"+ "<url>v37.0/sobjects/Account/EPK/12345</url>"+ "<richInput>"+ "<Account>"+ "<Name>NewName</Name>"+ "</Account>"+ "</richInput>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>PATCH</method>"+ "<url>v37.0/some/url</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/query/?q=SELECT Name FROM Account</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/queryAll/?q=SELECT Name FROM Account</url>"+ "</batchRequest>"+ "<batchRequest>"+ "<method>GET</method>"+ "<url>v37.0/search/?q=FIND {joe}</url>"+ "</batchRequest>"+ "</batchRequests>"+ "</batch>";
  final Class<?>[] classes=new Class[batch.objectTypes().length + 1];
  classes[0]=SObjectBatch.class;
  System.arraycopy(batch.objectTypes(),0,classes,1,batch.objectTypes().length);
  final XStream xStream=XStreamUtils.createXStream(classes);
  final String serialized=xStream.toXML(batch);
  assertEquals("Should serialize as expected by Salesforce",xml,serialized);
}
