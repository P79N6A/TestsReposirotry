/** 
 * Shows how we can use the configuration to get and set parameters directly on the endpoint which is typesafe and performs validation even if the component is not a  {@link UriEndpointComponent}
 */
@Test public void testConfigureAnExistingDefaultEndpoint() throws Exception {
  NonUriEndpoint endpoint=context.getEndpoint("cheese:somePath?bar=123&foo=something",NonUriEndpoint.class);
  Component component=endpoint.getComponent();
  ComponentConfiguration configuration=component.createComponentConfiguration();
  assertEquals("bar",123,endpoint.getBar());
  assertEquals("bar",123,configuration.getEndpointParameter(endpoint,"bar"));
  configuration.setEndpointParameter(endpoint,"bar",10);
  Object bar=configuration.getEndpointParameter(endpoint,"bar");
  assertEquals("endpoint.bar",10,bar);
  configuration.setEndpointParameter(endpoint,"foo","anotherThing");
  Object foo=configuration.getEndpointParameter(endpoint,"foo");
  assertEquals("endpoint.foo","anotherThing",foo);
  try {
    configuration.setEndpointParameter(endpoint,"doesNotExist",1000);
    fail("Should have got InvalidPropertyException thrown!");
  }
 catch (  InvalidPropertyException e) {
    LOG.info("Got expected exception: " + e);
  }
}
