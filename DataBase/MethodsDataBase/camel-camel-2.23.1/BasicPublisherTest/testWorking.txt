@Test public void testWorking() throws Exception {
  new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("timer:tick?period=5&repeatCount=30").setBody().header(Exchange.TIMER_COUNTER).to("reactive-streams:pub");
    }
  }
.addRoutesToCamelContext(context);
  int num=30;
  CountDownLatch latch=new CountDownLatch(num);
  List<Integer> recv=new LinkedList<>();
  Observable.fromPublisher(CamelReactiveStreams.get(context).fromStream("pub",Integer.class)).doOnNext(recv::add).doOnNext(n -> latch.countDown()).subscribe();
  context.start();
  latch.await(5,TimeUnit.SECONDS);
  assertEquals(num,recv.size());
  for (int i=1; i <= num; i++) {
    assertEquals(i,recv.get(i - 1).intValue());
  }
}
