/** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
@Test public void testToHl7StringWithRequiredEndOfData() throws Exception {
  assertNull(instance.toHl7String());
  instance.write(buildTestBytes(true,true,true));
  assertEquals(TEST_HL7_MESSAGE,instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(true,true,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(true,false,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(false,true,true));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(false,true,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(false,false,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(null,true,true,true));
  assertEquals("",instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(null,true,true,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(null,true,false,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(null,false,true,true));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(null,false,true,false));
  assertNull(instance.toHl7String());
  instance.reset();
  instance.write(buildTestBytes(null,false,false,false));
  assertNull(instance.toHl7String());
}
