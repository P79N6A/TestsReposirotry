/** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
@Test public void testHasEndOfData() throws Exception {
  assertFalse("Unexpected initial value",instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_DATA);
  assertFalse(instance.hasEndOfData());
  instance.reset();
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_BLOCK);
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_DATA);
  assertFalse("Need a START_OF_BLOCK before the END_OF_DATA",instance.hasEndOfData());
  instance.reset();
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.START_OF_BLOCK);
  assertFalse(instance.hasEndOfData());
  instance.write(TEST_HL7_MESSAGE.getBytes());
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_BLOCK);
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_DATA);
  assertTrue(instance.hasEndOfData());
  instance.reset();
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.START_OF_BLOCK);
  assertFalse(instance.hasEndOfData());
  instance.write(TEST_HL7_MESSAGE.getBytes());
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_BLOCK);
  assertFalse(instance.hasEndOfData());
  instance.write("BLAH".getBytes());
  assertFalse(instance.hasEndOfData());
  instance.write(MllpProtocolConstants.END_OF_DATA);
  assertFalse(instance.hasEndOfData());
}
