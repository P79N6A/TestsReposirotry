/** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
@Test public void testToMllpPayloadWithRequiredEndOfData() throws Exception {
  assertNull(instance.toMllpPayload());
  instance.write(buildTestBytes(true,true,true));
  assertArrayEquals(TEST_HL7_MESSAGE.getBytes(),instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(true,true,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(true,false,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(false,true,true));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(false,true,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(false,false,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(null,true,true,true));
  assertArrayEquals(new byte[0],instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(null,true,true,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(null,true,false,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(null,false,true,true));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(null,false,true,false));
  assertNull(instance.toMllpPayload());
  instance.reset();
  instance.write(buildTestBytes(null,false,false,false));
  assertNull(instance.toMllpPayload());
}
