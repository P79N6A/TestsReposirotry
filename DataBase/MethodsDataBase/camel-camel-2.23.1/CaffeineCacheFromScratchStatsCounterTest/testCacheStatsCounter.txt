@Test public void testCacheStatsCounter() throws Exception {
  int key=0;
  int val=0;
  for (int i=0; i < 10; i++) {
    key++;
    val++;
    fluentTemplate().withHeader(CaffeineConstants.ACTION,CaffeineConstants.ACTION_PUT).withHeader(CaffeineConstants.KEY,key).withBody(val).to("direct://start").send();
  }
  MockEndpoint mock1=getMockEndpoint("mock:result");
  mock1.expectedMinimumMessageCount(1);
  mock1.expectedBodiesReceived(val);
  mock1.expectedHeaderReceived(CaffeineConstants.ACTION_HAS_RESULT,true);
  mock1.expectedHeaderReceived(CaffeineConstants.ACTION_SUCCEEDED,true);
  fluentTemplate().withHeader(CaffeineConstants.ACTION,CaffeineConstants.ACTION_GET).withHeader(CaffeineConstants.KEY,key).withBody(val).to("direct://get").send();
  fluentTemplate().withHeader(CaffeineConstants.ACTION,CaffeineConstants.ACTION_GET).withHeader(CaffeineConstants.KEY,key).withBody(val).to("direct://get").send();
  fluentTemplate().withHeader(CaffeineConstants.ACTION,CaffeineConstants.ACTION_GET).withHeader(CaffeineConstants.KEY,12).withBody(3).to("direct://get").send();
  assertEquals(2,metricRegistry.counter("camelcache.hits").getCount());
  assertEquals(1,metricRegistry.counter("camelcache.misses").getCount());
}
