@Test public void testMetricsHistory() throws Exception {
  getMockEndpoint("mock:foo").expectedMessageCount(5);
  getMockEndpoint("mock:bar").expectedMessageCount(5);
  getMockEndpoint("mock:baz").expectedMessageCount(0);
  getMockEndpoint("mock:exception").expectedMessageCount(5);
  for (int i=0; i < 10; i++) {
    if (i % 2 == 0) {
      template.sendBody("seda:foo","Hello " + i);
    }
 else {
      template.sendBody("seda:bar","Hello " + i);
    }
  }
  assertMockEndpointsSatisfied();
  assertEquals(5,registry.getMeters().size());
  MicrometerMessageHistoryService service=context.hasService(MicrometerMessageHistoryService.class);
  assertNotNull(service);
  String json=service.dumpStatisticsAsJson();
  assertNotNull(json);
  log.info(json);
  assertTrue(json.contains("\"nodeId\" : \"foo\""));
  assertTrue(json.contains("\"nodeId\" : \"bar\""));
  assertTrue(json.contains("\"nodeId\" : \"exception\""));
}
