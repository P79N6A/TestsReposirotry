@Test public void testConsumeExpressionThrowException() throws Exception {
  template.sendBodyAndHeader("file://target/filelanguage/bean","Bye World",Exchange.FILE_NAME,"123.txt");
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("file://target/filelanguage/bean/" + "?pollStrategy=#myPoll&initialDelay=0&delay=10&fileName=${bean:counter?method=doNotExistMethod}.txt&delete=true").to("mock:result");
    }
  }
);
  context.start();
  await().atMost(2,TimeUnit.SECONDS).until(() -> LATCH.getCount() == 0);
  assertTrue(event.startsWith("rollback"));
  assertNotNull(rollbackCause);
  MethodNotFoundException e=assertIsInstanceOf(MethodNotFoundException.class,rollbackCause.getCause());
  assertNotNull(e);
  assertEquals("doNotExistMethod",e.getMethodName());
}
