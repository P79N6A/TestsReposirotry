@Test public void testThreadsRejectedExecution() throws Exception {
  final CountDownLatch latch=new CountDownLatch(3);
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("seda:start").errorHandler(deadLetterChannel("mock:failed")).to("log:before").threads().maxPoolSize(1).poolSize(1).maxQueueSize(1).rejectedPolicy(ThreadPoolRejectedPolicy.Abort).process(new Processor(){
        @Override public void process(        Exchange exchange) throws Exception {
          latch.await(5,TimeUnit.SECONDS);
        }
      }
).to("log:after").to("mock:result");
    }
  }
);
  context.start();
  getMockEndpoint("mock:result").expectedMessageCount(2);
  getMockEndpoint("mock:failed").expectedMessageCount(1);
  template.sendBody("seda:start","Hello World");
  template.sendBody("seda:start","Hi World");
  template.sendBody("seda:start","Bye World");
  latch.countDown();
  latch.countDown();
  latch.countDown();
  assertMockEndpointsSatisfied();
}
