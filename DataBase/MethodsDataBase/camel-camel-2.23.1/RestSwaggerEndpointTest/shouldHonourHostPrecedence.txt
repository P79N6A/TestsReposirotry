@Test public void shouldHonourHostPrecedence(){
  final RestConfiguration globalRestConfiguration=new RestConfiguration();
  final RestConfiguration componentRestConfiguration=new RestConfiguration();
  final RestConfiguration specificRestConfiguration=new RestConfiguration();
  final CamelContext camelContext=mock(CamelContext.class);
  when(camelContext.getRestConfiguration()).thenReturn(globalRestConfiguration);
  when(camelContext.getRestConfiguration("rest-swagger",false)).thenReturn(componentRestConfiguration);
  when(camelContext.getRestConfiguration("petstore",false)).thenReturn(specificRestConfiguration);
  final RestSwaggerComponent component=new RestSwaggerComponent();
  component.setCamelContext(camelContext);
  final RestSwaggerEndpoint endpoint=new RestSwaggerEndpoint("petstore:http://specification-uri#getPetById","http://specification-uri#getPetById",component,Collections.emptyMap());
  final Swagger swagger=new Swagger();
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://specification-uri");
  globalRestConfiguration.setHost("global-rest");
  globalRestConfiguration.setScheme("http");
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://global-rest");
  globalRestConfiguration.setHost("component-rest");
  globalRestConfiguration.setScheme("http");
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://component-rest");
  specificRestConfiguration.setHost("specific-rest");
  specificRestConfiguration.setScheme("http");
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://specific-rest");
  swagger.host("specification").scheme(Scheme.HTTP);
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://specification");
  component.setHost("http://component");
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://component");
  endpoint.setHost("http://endpoint");
  assertThat(endpoint.determineHost(swagger)).isEqualTo("http://endpoint");
}
