@Test public void shouldDetermineBasePath(){
  final RestConfiguration restConfiguration=new RestConfiguration();
  final CamelContext camelContext=mock(CamelContext.class);
  when(camelContext.getRestConfiguration("rest-swagger",true)).thenReturn(restConfiguration);
  final Swagger swagger=new Swagger();
  final RestSwaggerComponent component=new RestSwaggerComponent();
  component.setCamelContext(camelContext);
  final RestSwaggerEndpoint endpoint=new RestSwaggerEndpoint("rest-swagger:getPetById","getPetById",component,Collections.emptyMap());
  assertThat(endpoint.determineBasePath(swagger)).as("When no base path is specified on component, endpoint or rest configuration it should default to `/`").isEqualTo("/");
  restConfiguration.setContextPath("/rest");
  assertThat(endpoint.determineBasePath(swagger)).as("When base path is specified in REST configuration and not specified in component the base path should be from the REST configuration").isEqualTo("/rest");
  swagger.basePath("/specification");
  assertThat(endpoint.determineBasePath(swagger)).as("When base path is specified in the specification it should take precedence the one specified in the REST configuration").isEqualTo("/specification");
  component.setBasePath("/component");
  assertThat(endpoint.determineBasePath(swagger)).as("When base path is specified on the component it should take precedence over Swagger specification and REST configuration").isEqualTo("/component");
  endpoint.setBasePath("/endpoint");
  assertThat(endpoint.determineBasePath(swagger)).as("When base path is specified on the endpoint it should take precedence over any other").isEqualTo("/endpoint");
}
