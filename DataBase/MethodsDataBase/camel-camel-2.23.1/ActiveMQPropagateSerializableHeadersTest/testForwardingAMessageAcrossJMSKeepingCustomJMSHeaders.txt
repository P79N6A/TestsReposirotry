@Test public void testForwardingAMessageAcrossJMSKeepingCustomJMSHeaders() throws Exception {
  MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
  resultEndpoint.expectedBodiesReceived(expectedBody);
  AssertionClause firstMessageExpectations=resultEndpoint.message(0);
  firstMessageExpectations.header("myCal").isEqualTo(calValue);
  firstMessageExpectations.header("myMap").isEqualTo(mapValue);
  template.sendBody("activemq:test.a",expectedBody);
  resultEndpoint.assertIsSatisfied();
  List<Exchange> list=resultEndpoint.getReceivedExchanges();
  Exchange exchange=list.get(0);
{
    String headerValue=exchange.getIn().getHeader("myString",String.class);
    assertEquals("myString","stringValue",headerValue);
  }
{
    Calendar headerValue=exchange.getIn().getHeader("myCal",Calendar.class);
    assertEquals("myCal",calValue,headerValue);
  }
{
    Map<String,Object> headerValue=exchange.getIn().getHeader("myMap",Map.class);
    assertEquals("myMap",mapValue,headerValue);
  }
}
