@Test public void successTest() throws Exception {
  mockError.expectedMinimumMessageCount(0);
  mockResult.expectedMinimumMessageCount(1);
  Mockito.when(mockWeb3j.catchUpToLatestAndSubscribeToNewBlocksObservable(any(DefaultBlockParameter.class),any(Boolean.class))).thenReturn(observable);
  Mockito.when(observable.subscribe(any(),any(),any())).thenAnswer(new Answer(){
    public Subscription answer(    InvocationOnMock invocation){
      Object[] args=invocation.getArguments();
      ((Action1<EthBlock>)args[0]).call(new EthBlock());
      return subscription;
    }
  }
);
  context.start();
  mockResult.assertIsSatisfied();
  mockError.assertIsSatisfied();
}
