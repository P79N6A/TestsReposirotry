@Test public void testOneDataSourceFailAndRecover() throws Exception {
  ((RandomDataSourceSelector)highAvailableDataSource.getDataSourceSelector()).getValidateThread().setSleepSeconds(3);
  ((RandomDataSourceSelector)highAvailableDataSource.getDataSourceSelector()).getRecoverThread().setSleepSeconds(3);
  Thread.sleep(30 * 1000);
  DruidDataSource dataSource=(DruidDataSource)highAvailableDataSource.getDataSourceMap().get("foo");
  dataSource.setValidationQuery("select xxx from yyy");
  Thread.sleep(10 * 1000);
  assertTrue(dataSource.isTestOnReturn());
  for (int i=0; i < 100; i++) {
    assertNotEquals(dataSource,highAvailableDataSource.getDataSourceSelector().get());
  }
  dataSource.setValidationQuery(null);
  Thread.sleep(4 * 1000);
  assertFalse(dataSource.isTestOnReturn());
  int count=0;
  for (int i=0; i < 100; i++) {
    if (dataSource == highAvailableDataSource.getDataSourceSelector().get()) {
      count++;
    }
  }
  assertTrue(count > 0);
}
