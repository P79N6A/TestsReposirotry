@Test public void testAllDataSourceFail() throws Exception {
  ((RandomDataSourceSelector)highAvailableDataSource.getDataSourceSelector()).getValidateThread().setSleepSeconds(3);
  ((RandomDataSourceSelector)highAvailableDataSource.getDataSourceSelector()).getRecoverThread().setSleepSeconds(3);
  Thread.sleep(30 * 1000);
  DruidDataSource foo=(DruidDataSource)highAvailableDataSource.getDataSourceMap().get("foo");
  DruidDataSource bar=(DruidDataSource)highAvailableDataSource.getDataSourceMap().get("bar");
  foo.setValidationQuery("select xxx from yyy");
  bar.setValidationQuery("select xxx from yyy");
  Thread.sleep(10 * 1000);
  assertTrue(foo.isTestOnReturn());
  assertTrue(bar.isTestOnReturn());
  int[] count=new int[2];
  for (int i=0; i < 100; i++) {
    DataSource dataSource=highAvailableDataSource.getDataSourceSelector().get();
    if (foo == dataSource) {
      count[0]++;
    }
 else     if (bar == dataSource) {
      count[1]++;
    }
  }
  assertTrue(count[0] > 0);
  assertTrue(count[1] > 0);
}
