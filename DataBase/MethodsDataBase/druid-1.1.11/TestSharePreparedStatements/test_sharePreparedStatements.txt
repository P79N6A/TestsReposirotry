public void test_sharePreparedStatements() throws Exception {
  DruidDataSource dataSource=new DruidDataSource();
  dataSource.setUrl("jdbc:mock:xxx");
  dataSource.setMaxPoolPreparedStatementPerConnectionSize(30);
  String sql="SELECT 1";
  MockPreparedStatement mockStmt=null;
{
    Connection conn=dataSource.getConnection();
    PreparedStatement stmt=conn.prepareStatement(sql);
    mockStmt=stmt.unwrap(MockPreparedStatement.class);
    ResultSet rs=stmt.executeQuery();
    rs.next();
    rs.close();
    stmt.close();
    conn.close();
  }
{
    Connection conn=dataSource.getConnection();
    PreparedStatement stmt=conn.prepareStatement(sql);
    Assert.assertEquals(mockStmt,stmt.unwrap(MockPreparedStatement.class));
    ResultSet rs=stmt.executeQuery();
    rs.next();
    rs.close();
    stmt.close();
    conn.close();
  }
{
    Connection conn=dataSource.getConnection();
    conn.setAutoCommit(false);
    PreparedStatement stmt=conn.prepareStatement(sql);
    Assert.assertSame(mockStmt,stmt.unwrap(MockPreparedStatement.class));
    ResultSet rs=stmt.executeQuery();
    rs.next();
    rs.close();
    stmt.close();
    conn.close();
  }
{
    Connection conn=dataSource.getConnection();
    conn.setAutoCommit(false);
    PreparedStatement stmt=conn.prepareStatement(sql);
    Assert.assertSame(mockStmt,stmt.unwrap(MockPreparedStatement.class));
    ResultSet rs=stmt.executeQuery();
    rs.next();
    rs.close();
    stmt.close();
    conn.close();
  }
  dataSource.close();
}
