public void test_1() throws Exception {
  String sql="INSERT TOP(5)INTO dbo.EmployeeSales  OUTPUT inserted.EmployeeID, inserted.FirstName, inserted.LastName, inserted.YearlySales SELECT sp.BusinessEntityID, c.LastName, c.FirstName, sp.SalesYTD FROM Sales.SalesPerson AS sp INNER JOIN Person.Person AS c ON sp.BusinessEntityID = c.BusinessEntityID WHERE sp.SalesYTD > 250000.00 ORDER BY sp.SalesYTD DESC;";
  SQLServerStatementParser parser=new SQLServerStatementParser(sql);
  parser.setParseCompleteValues(false);
  parser.setParseValuesSize(3);
  List<SQLStatement> statementList=parser.parseStatementList();
  SQLStatement stmt=statementList.get(0);
  SQLServerInsertStatement insertStmt=(SQLServerInsertStatement)stmt;
  Assert.assertEquals(0,insertStmt.getValuesList().size());
  Assert.assertEquals(0,insertStmt.getColumns().size());
  Assert.assertEquals(1,statementList.size());
  SQLServerSchemaStatVisitor visitor=new SQLServerSchemaStatVisitor();
  stmt.accept(visitor);
  String formatSql="INSERT TOP (5) INTO dbo.EmployeeSales" + "\nOUTPUT inserted.EmployeeID, inserted.FirstName, inserted.LastName, inserted.YearlySales" + "\nSELECT sp.BusinessEntityID, c.LastName, c.FirstName, sp.SalesYTD"+ "\nFROM Sales.SalesPerson sp"+ "\nINNER JOIN Person.Person c ON sp.BusinessEntityID = c.BusinessEntityID"+ "\nWHERE sp.SalesYTD > 250000.00"+ "\nORDER BY sp.SalesYTD DESC;";
  Assert.assertEquals(formatSql,SQLUtils.toSQLServerString(insertStmt));
}
