public void test_sessionStatDisable() throws Exception {
  MockServletContext servletContext=new MockServletContext();
  MockFilterConfig filterConfig=new MockFilterConfig(servletContext);
  filterConfig.addInitParameter(WebStatFilter.PARAM_NAME_SESSION_STAT_ENABLE,"false");
  WebStatFilter filter=new WebStatFilter();
  WebAppStat appStat=new WebAppStat(){
    public WebURIStat getURIStat(    String uri,    boolean create){
      return null;
    }
  }
;
  filter.setWebAppStat(appStat);
  filter.setProfileEnable(true);
  Assert.assertNotNull(filter.getWebAppStat());
  filter.init(filterConfig);
  Assert.assertSame(appStat,filter.getWebAppStat());
  Assert.assertFalse(filter.isSessionStatEnable());
  Assert.assertTrue(WebAppStatManager.getInstance().getWebAppStatSet().contains(appStat));
  Assert.assertTrue(StatFilterContext.getInstance().getListeners().contains(filter.getStatFilterContextListener()));
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockFilterChain chain=new MockFilterChain();
  Assert.assertNull(filter.getSessionStat(request));
  filter.doFilter(request,response,chain);
  Assert.assertEquals(0,appStat.getSessionStatDataList().size());
  filter.destroy();
  Assert.assertFalse(WebAppStatManager.getInstance().getWebAppStatSet().contains(appStat));
  Assert.assertFalse(StatFilterContext.getInstance().getListeners().contains(filter.getStatFilterContextListener()));
  Map<String,Object> statData=appStat.getStatData();
  Assert.assertEquals(1L,statData.get("RequestCount"));
}
