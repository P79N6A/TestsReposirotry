public void test_precall() throws Exception {
  Connection conn=null;
  CallableStatement cstmt=null;
  ResultSet rs=null;
  try {
    conn=DriverManager.getConnection(create_url);
    cstmt=conn.prepareCall("CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(?, ?)",ResultSet.FETCH_FORWARD,ResultSet.CONCUR_READ_ONLY);
    cstmt.close();
    cstmt=conn.prepareCall("CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(?, ?)",ResultSet.FETCH_FORWARD,ResultSet.CONCUR_READ_ONLY,ResultSet.CLOSE_CURSORS_AT_COMMIT);
    cstmt.close();
    cstmt=conn.prepareCall("CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(?, ?)");
    try {
      cstmt.setObject(1,null);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setObject(1,null,Types.VARCHAR);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setURL(1,null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setURL("F1",null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setSQLXML(1,null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setSQLXML("F1",null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setRowId(1,null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setRowId("F1",null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNString(1,null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNString("F1",null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setBlob(1,(Blob)null);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setBlob("F1",(Blob)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setBlob(1,(InputStream)null);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setBlob("F1",(InputStream)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setBlob(1,(InputStream)null,0);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setBlob("F1",(InputStream)null,0);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setClob(1,(Clob)null);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setClob("F1",(Clob)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setClob(1,(Reader)null);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setClob("F1",(Reader)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setClob(1,(Reader)null,0);
    }
 catch (    SQLDataException ex) {
    }
    try {
      cstmt.setClob("F1",(Reader)null,0);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNClob(1,(NClob)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNClob("F1",(NClob)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNClob(1,(Reader)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNClob("F1",(Reader)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNClob(1,(Reader)null,0);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNClob("F1",(Reader)null,0);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNCharacterStream(1,(Reader)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNCharacterStream("F1",(Reader)null);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNCharacterStream(1,(Reader)null,0);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNCharacterStream("F1",(Reader)null,0);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNull("F1",Types.VARCHAR);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.setNull("F1",Types.VARCHAR,"VARCHAR");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getRef(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getRef("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getClob(1);
    }
 catch (    SQLException ex) {
    }
    try {
      cstmt.getClob("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getArray(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getArray("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getURL(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getURL("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getSQLXML(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getSQLXML("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getRowId(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getRowId("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getNClob(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getNClob("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getNString(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getNString("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getNCharacterStream(1);
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    try {
      cstmt.getNCharacterStream("F1");
    }
 catch (    SQLFeatureNotSupportedException ex) {
    }
    cstmt.setString(1,"derby.locks.deadlockTimeout");
    cstmt.setString(2,"10");
    cstmt.execute();
  }
  finally {
    JdbcUtils.close(rs);
    JdbcUtils.close(cstmt);
    JdbcUtils.close(conn);
  }
}
