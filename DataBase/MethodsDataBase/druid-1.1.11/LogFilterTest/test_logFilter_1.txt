public void test_logFilter_1() throws Exception {
  DataSourceProxyConfig config=new DataSourceProxyConfig();
  config.setRawUrl("jdbc:mock:");
  DataSourceProxyImpl dataSource=new DataSourceProxyImpl(new MockDriver(),config);
  Log4jFilter log4jFilter=new Log4jFilter();
  log4jFilter.init(dataSource);
  config.getFilters().add(log4jFilter);
  setLogDisableAll(log4jFilter,true);
  CommonsLogFilter commonLogFilter=new CommonsLogFilter(){
    @Override public boolean isDataSourceLogEnabled(){
      return false;
    }
    @Override public boolean isConnectionLogEnabled(){
      return false;
    }
    @Override public boolean isStatementLogEnabled(){
      return false;
    }
    @Override public boolean isResultSetLogEnabled(){
      return false;
    }
    @Override public boolean isResultSetLogErrorEnabled(){
      return false;
    }
    @Override public boolean isResultSetNextAfterLogEnabled(){
      return false;
    }
  }
;
  commonLogFilter.init(dataSource);
  config.getFilters().add(commonLogFilter);
  setLogDisableAll(commonLogFilter,true);
  executeSQL(dataSource);
}
