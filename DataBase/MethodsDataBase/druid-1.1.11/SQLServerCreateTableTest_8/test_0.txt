public void test_0() throws Exception {
  String sql="create table ACT_RU_VARIABLE (" + " ID_ nvarchar(64) not null," + " DOUBLE_ double precision,"+ " LONG_ numeric(19,0),"+ " TEXT_ nvarchar(4000),"+ " primary key (ID_)"+ ")";
  SQLServerStatementParser parser=new SQLServerStatementParser(sql);
  List<SQLStatement> statementList=parser.parseStatementList();
  SQLCreateTableStatement stmt=(SQLCreateTableStatement)statementList.get(0);
  Assert.assertEquals(1,statementList.size());
  String output=SQLUtils.toSQLString(stmt,JdbcConstants.SQL_SERVER);
  Assert.assertEquals("CREATE TABLE ACT_RU_VARIABLE (" + "\n\tID_ nvarchar(64) NOT NULL," + "\n\tDOUBLE_ DOUBLE PRECISION,"+ "\n\tLONG_ numeric(19, 0),"+ "\n\tTEXT_ nvarchar(4000),"+ "\n\tPRIMARY KEY (ID_)"+ "\n)",output);
  SQLServerSchemaStatVisitor visitor=new SQLServerSchemaStatVisitor();
  stmt.accept(visitor);
  Assert.assertEquals(1,visitor.getTables().size());
  Assert.assertEquals(4,visitor.getColumns().size());
  Assert.assertEquals(0,visitor.getConditions().size());
  Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("ACT_RU_VARIABLE")));
  Assert.assertTrue(visitor.getColumns().contains(new Column("ACT_RU_VARIABLE","ID_")));
  Assert.assertTrue(visitor.getColumns().contains(new Column("ACT_RU_VARIABLE","DOUBLE_")));
}
