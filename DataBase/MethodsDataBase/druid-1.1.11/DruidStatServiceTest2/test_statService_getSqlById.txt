public void test_statService_getSqlById() throws Exception {
  String sql="select 1";
  Connection conn=dataSource.getConnection();
  PreparedStatement stmt=conn.prepareStatement(sql);
  ResultSet rs=stmt.executeQuery();
  rs.next();
  rs.close();
  stmt.close();
  conn.close();
  String sql2="select 2";
  conn=dataSource2.getConnection();
  stmt=conn.prepareStatement(sql2);
  rs=stmt.executeQuery();
  rs.next();
  rs.close();
  stmt.close();
  conn.close();
  long id=dataSource.getSqlStatMap().values().iterator().next().getId();
  String result=DruidStatService.getInstance().service("/sql-" + id + ".json");
  Map<String,Object> resultMap=(Map<String,Object>)JSONUtils.parse(result);
  Map<String,Object> sqlStat=(Map<String,Object>)resultMap.get("Content");
  assertThat((Integer)sqlStat.get("RunningCount"),equalTo(0));
  assertThat((Integer)sqlStat.get("ExecuteCount"),equalTo(1));
  assertThat((Integer)sqlStat.get("FetchRowCount"),equalTo(1));
  assertThat((Integer)sqlStat.get("EffectedRowCount"),equalTo(0));
  assertThat((String)sqlStat.get("SQL"),equalTo(sql));
  id=dataSource2.getSqlStatMap().values().iterator().next().getId();
  result=DruidStatService.getInstance().service("/sql-" + id + ".json");
  resultMap=(Map<String,Object>)JSONUtils.parse(result);
  sqlStat=(Map<String,Object>)resultMap.get("Content");
  assertThat((Integer)sqlStat.get("RunningCount"),equalTo(0));
  assertThat((Integer)sqlStat.get("ExecuteCount"),equalTo(1));
  assertThat((Integer)sqlStat.get("FetchRowCount"),equalTo(1));
  assertThat((Integer)sqlStat.get("EffectedRowCount"),equalTo(0));
  assertThat((String)sqlStat.get("SQL"),equalTo(sql2));
  String result2=DruidStatService.getInstance().service("/sql-" + Integer.MAX_VALUE + ".json");
  resultMap=(Map<String,Object>)JSONUtils.parse(result2);
  assertThat(resultMap.get("Content"),is(nullValue()));
}
