private void concurrent(final DruidDataSource dataSource,int threadCount,final int loopCount) throws InterruptedException {
  final CountDownLatch startLatch=new CountDownLatch(1);
  final CountDownLatch endLatch=new CountDownLatch(threadCount);
  Thread[] threads=new Thread[threadCount];
  for (int i=0; i < threadCount; ++i) {
    threads[i]=new Thread("thread-" + i){
      public void run(){
        try {
          startLatch.await();
          for (int i=0; i < loopCount; ++i) {
            Connection conn=null;
            conn=dataSource.getConnection();
            conn.close();
          }
        }
 catch (        Exception ex) {
          ex.printStackTrace();
        }
 finally {
          endLatch.countDown();
        }
      }
    }
;
  }
  for (int i=0; i < threadCount; ++i) {
    threads[i].start();
  }
  startLatch.countDown();
  System.out.println("concurrent start...");
  endLatch.await();
  System.out.println("concurrent end");
}
