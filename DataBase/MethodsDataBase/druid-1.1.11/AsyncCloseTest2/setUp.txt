protected void setUp() throws Exception {
  Field logField=DruidDataSource.class.getDeclaredField("LOG");
  logField.setAccessible(true);
  Log dataSourceLog=(Log)logField.get(null);
  if (dataSourceLog instanceof Log4jImpl) {
    this.log4jLog=((Log4jImpl)dataSourceLog).getLog();
    this.log4jOldLevel=this.log4jLog.getLevel();
    this.log4jLog.setLevel(Level.FATAL);
  }
 else   if (dataSourceLog instanceof NoLoggingImpl) {
    noLoggingImpl=(NoLoggingImpl)dataSourceLog;
    noLoggingImpl.setErrorEnabled(false);
  }
  dataSource=new DruidDataSource();
  dataSource.setUrl("jdbc:mock:");
  dataSource.setAsyncCloseConnectionEnable(true);
  dataSource.setTestOnBorrow(false);
  dataSource.setMaxActive(16);
  dataSource.getProxyFilters().add(new FilterAdapter(){
    @Override public boolean statement_execute(    FilterChain chain,    StatementProxy statement,    String sql) throws SQLException {
      throw new SQLException();
    }
  }
);
  dataSource.setExceptionSorter(new MyExceptionSorter());
  dataSource.init();
  connExecutor=Executors.newFixedThreadPool(128);
  closeExecutor=Executors.newFixedThreadPool(128);
}
