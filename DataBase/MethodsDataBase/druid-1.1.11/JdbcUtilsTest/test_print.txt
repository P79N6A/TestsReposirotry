public void test_print() throws Exception {
  final AtomicInteger nextCount=new AtomicInteger(2);
  final MockResultSetMetaData rsMeta=new MockResultSetMetaData(){
    private int[] types=new int[]{Types.DATE,Types.BIT,Types.BOOLEAN,Types.TINYINT,Types.SMALLINT,Types.INTEGER,Types.CLOB,Types.LONGVARCHAR,Types.OTHER,Types.VARCHAR,Types.CHAR,Types.NVARCHAR,Types.NCHAR};
    @Override public int getColumnCount() throws SQLException {
      return types.length;
    }
    @Override public int getColumnType(    int column) throws SQLException {
      return types[column - 1];
    }
    @Override public String getColumnName(    int column) throws SQLException {
      return "C" + column;
    }
  }
;
  MockResultSet rs=new MockResultSet(null){
    @Override public boolean next() throws SQLException {
      return nextCount.getAndDecrement() > 0;
    }
    @Override public ResultSetMetaData getMetaData() throws SQLException {
      return rsMeta;
    }
    @Override public java.sql.Date getDate(    int columnIndex) throws SQLException {
      return new java.sql.Date(System.currentTimeMillis());
    }
    @Override public boolean wasNull() throws SQLException {
      if (nextCount.get() == 1) {
        return true;
      }
      return false;
    }
    public Object getObject(    int columnIndex) throws SQLException {
      return null;
    }
  }
;
  JdbcUtils.printResultSet(rs);
}
