public void test_createDataSource() throws Exception {
  Properties properties=new Properties();
  properties.setProperty("defaultAutoCommit","true");
  properties.setProperty("defaultReadOnly","true");
  properties.setProperty("defaultTransactionIsolation","NONE");
  properties.setProperty("defaultCatalog","cn");
  properties.setProperty("driverClassName","com.alibaba.druid.mock.MockDriver");
  properties.setProperty("maxActive","8");
  properties.setProperty("maxIdle","8");
  properties.setProperty("minIdle","3");
  properties.setProperty("initialSize","1");
  properties.setProperty("maxWait","-1");
  properties.setProperty("testOnBorrow","true");
  properties.setProperty("testOnReturn","true");
  properties.setProperty("timeBetweenEvictionRunsMillis","3000");
  properties.setProperty("numTestsPerEvictionRun","1");
  properties.setProperty("minEvictableIdleTimeMillis","10000");
  properties.setProperty("testWhileIdle","true");
  properties.setProperty("password","xxx");
  properties.setProperty("url","jdbc:mock:xxx");
  properties.setProperty("username","user");
  properties.setProperty("validationQuery","select 1");
  properties.setProperty("validationQueryTimeout","30");
  properties.setProperty("initConnectionSqls","select 1");
  properties.setProperty("accessToUnderlyingConnectionAllowed","true");
  properties.setProperty("removeAbandoned","true");
  properties.setProperty("removeAbandonedTimeout","30");
  properties.setProperty("logAbandoned","true");
  properties.setProperty("poolPreparedStatements","true");
  properties.setProperty("maxOpenPreparedStatements","200");
  properties.setProperty("connectionProperties","x=1;y=2;;");
  properties.setProperty("filters","stat;trace");
  properties.setProperty("exceptionSorter","com.alibaba.druid.pool.vendor.NullExceptionSorter");
  properties.setProperty("exception-sorter-class-name","com.alibaba.druid.pool.vendor.NullExceptionSorter");
  DruidDataSourceFactory.createDataSource(properties);
}
