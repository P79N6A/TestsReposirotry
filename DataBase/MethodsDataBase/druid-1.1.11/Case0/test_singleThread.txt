public void test_singleThread() throws Exception {
  final DruidDataSource dataSource=new DruidDataSource();
  JMXUtils.register("com.alibaba.druid:type=DruidDataSource",dataSource);
  Class.forName("com.alibaba.druid.mock.MockDriver");
  dataSource.setInitialSize(initialSize);
  dataSource.setMaxActive(maxActive);
  dataSource.setMinIdle(minPoolSize);
  dataSource.setMaxIdle(maxPoolSize);
  dataSource.setPoolPreparedStatements(true);
  dataSource.setDriverClassName(driverClass);
  dataSource.setUrl(jdbcUrl);
  dataSource.setPoolPreparedStatements(true);
  dataSource.setUsername(user);
  dataSource.setPassword(password);
  dataSource.setFilters("stat");
  final int LOOP_COUNT=1000 * 1000;
  Assert.assertEquals(0,dataSource.getCreateCount());
  Assert.assertEquals(0,dataSource.getDestroyCount());
  Assert.assertEquals(0,dataSource.getPoolingCount());
  for (int i=0; i < LOOP_COUNT; ++i) {
    Connection conn=dataSource.getConnection();
    conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);
    Assert.assertEquals(initialSize,dataSource.getCreateCount());
    Assert.assertEquals(i + 1,dataSource.getConnectCount());
    Assert.assertEquals(1,dataSource.getActiveCount());
    Assert.assertEquals(i,dataSource.getCloseCount());
    Assert.assertEquals(0,dataSource.getConnectErrorCount());
    Assert.assertEquals(initialSize - 1,dataSource.getPoolingCount());
    Assert.assertEquals(i,dataSource.getRecycleCount());
    conn.close();
    Assert.assertEquals(i + 1,dataSource.getConnectCount());
    Assert.assertEquals(0,dataSource.getActiveCount());
    Assert.assertEquals(i + 1,dataSource.getCloseCount());
    Assert.assertEquals(0,dataSource.getConnectErrorCount());
    Assert.assertEquals(initialSize,dataSource.getPoolingCount());
    Assert.assertEquals(i + 1,dataSource.getRecycleCount());
  }
  Assert.assertEquals(initialSize,dataSource.getCreateCount());
  Assert.assertEquals(0,dataSource.getDestroyCount());
  dataSource.close();
  Assert.assertEquals(dataSource.getCreateCount(),dataSource.getDestroyCount());
}
