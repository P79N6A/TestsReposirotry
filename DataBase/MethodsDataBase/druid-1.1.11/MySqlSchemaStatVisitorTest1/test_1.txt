public void test_1() throws Exception {
  String sql="select a.name, b.name FROM users a, usergroups b on a.groupId = b.id where a.groupID = ?";
  MySqlStatementParser parser=new MySqlStatementParser(sql);
  List<SQLStatement> statementList=parser.parseStatementList();
  SQLStatement statemen=statementList.get(0);
  Assert.assertEquals(1,statementList.size());
  MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
  statemen.accept(visitor);
  System.out.println(sql);
  System.out.println("Tables : " + visitor.getTables());
  System.out.println("fields : " + visitor.getColumns());
  Assert.assertEquals(2,visitor.getTables().size());
  Assert.assertEquals(true,visitor.containsTable("users"));
  Assert.assertEquals(true,visitor.containsTable("usergroups"));
  Assert.assertEquals(4,visitor.getColumns().size());
  Assert.assertEquals(true,visitor.getColumns().contains(new Column("users","groupId")));
  Assert.assertEquals(true,visitor.getColumns().contains(new Column("users","name")));
  Assert.assertEquals(true,visitor.getColumns().contains(new Column("usergroups","id")));
  Assert.assertEquals(true,visitor.getColumns().contains(new Column("usergroups","name")));
  Assert.assertTrue(visitor.getColumn("users","name").isSelect());
  Assert.assertTrue(visitor.getColumn("usergroups","name").isSelect());
  Assert.assertTrue(visitor.getColumn("users","groupId").isJoin());
  Assert.assertTrue(visitor.getColumn("usergroups","id").isJoin());
  Assert.assertTrue(visitor.getColumn("users","groupId").isWhere());
}
