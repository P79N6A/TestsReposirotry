public void test_removeAbandoned() throws Exception {
{
    Connection conn=dataSource.getConnection();
    conn.close();
  }
  Assert.assertEquals(0,dataSource.getActiveCount());
  Thread abandonThread=new Thread("abandoned"){
    public void run(){
      for (; ; ) {
        dataSource.removeAbandoned();
        if (Thread.interrupted()) {
          break;
        }
      }
    }
  }
;
  abandonThread.start();
  for (int i=0; i < 1000 * 100; ++i) {
    DruidPooledConnection conn=dataSource.getConnection();
    conn.close();
  }
  Assert.assertEquals(0,dataSource.getActiveCount());
  abandonThread.interrupt();
  System.out.println("removeAbandondedCount : " + dataSource.getRemoveAbandonedCount());
}
