@Test public void testUnsignedId(){
  try {
    PropertyKeyTokenRecordFormat recordFormat=new PropertyKeyTokenRecordFormat();
    IdGeneratorImpl.createGenerator(fs,idGeneratorFile(),0,false);
    IdGenerator idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),1,recordFormat.getMaxId(),false,IdType.NODE,() -> 0L);
    idGenerator.setHighId(recordFormat.getMaxId());
    long id=idGenerator.nextId();
    assertEquals(recordFormat.getMaxId(),id);
    idGenerator.freeId(id);
    try {
      idGenerator.nextId();
      fail("Shouldn't be able to get next ID");
    }
 catch (    StoreFailureException e) {
    }
    closeIdGenerator(idGenerator);
    idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),1,recordFormat.getMaxId(),false,IdType.NODE,() -> 0L);
    assertEquals(recordFormat.getMaxId() + 1,idGenerator.getHighId());
    id=idGenerator.nextId();
    assertEquals(recordFormat.getMaxId(),id);
    try {
      idGenerator.nextId();
    }
 catch (    StoreFailureException e) {
    }
    closeIdGenerator(idGenerator);
  }
  finally {
    File file=idGeneratorFile();
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
