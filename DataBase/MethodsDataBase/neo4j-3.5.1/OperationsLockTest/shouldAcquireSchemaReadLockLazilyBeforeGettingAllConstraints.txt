@Test public void shouldAcquireSchemaReadLockLazilyBeforeGettingAllConstraints(){
  int labelId=1;
  int relTypeId=2;
  UniquenessConstraintDescriptor uniquenessConstraint=uniqueForLabel(labelId,2,3,3);
  RelExistenceConstraintDescriptor existenceConstraint=existsForRelType(relTypeId,3,4,5);
  when(storageReader.constraintsGetAll()).thenReturn(Iterators.iterator(uniquenessConstraint,existenceConstraint));
  Iterator<ConstraintDescriptor> result=allStoreHolder.constraintsGetAll();
  Iterators.count(result);
  assertThat(asList(result),empty());
  order.verify(storageReader).constraintsGetAll();
  order.verify(locks).acquireShared(LockTracer.NONE,ResourceTypes.LABEL,labelId);
  order.verify(locks).acquireShared(LockTracer.NONE,ResourceTypes.RELATIONSHIP_TYPE,relTypeId);
}
