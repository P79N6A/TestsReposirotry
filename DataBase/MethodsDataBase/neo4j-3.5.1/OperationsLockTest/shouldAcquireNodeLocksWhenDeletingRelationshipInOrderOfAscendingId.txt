@Test public void shouldAcquireNodeLocksWhenDeletingRelationshipInOrderOfAscendingId() throws Exception {
  final long relationshipId=10;
  final long lowId=3;
  final long highId=5;
  int relationshipLabel=0;
{
    setStoreRelationship(relationshipId,lowId,highId,relationshipLabel);
    operations.relationshipDelete(relationshipId);
    InOrder lockingOrder=inOrder(locks);
    lockingOrder.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.NODE,lowId);
    lockingOrder.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.NODE,highId);
    lockingOrder.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.RELATIONSHIP,relationshipId);
    lockingOrder.verifyNoMoreInteractions();
    reset(locks);
  }
{
    setStoreRelationship(relationshipId,highId,lowId,relationshipLabel);
    operations.relationshipDelete(relationshipId);
    InOrder lockingOrder=inOrder(locks);
    lockingOrder.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.NODE,lowId);
    lockingOrder.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.NODE,highId);
    lockingOrder.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.RELATIONSHIP,relationshipId);
    lockingOrder.verifyNoMoreInteractions();
  }
}
