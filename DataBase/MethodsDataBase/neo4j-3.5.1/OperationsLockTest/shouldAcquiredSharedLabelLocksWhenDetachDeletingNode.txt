@Test public void shouldAcquiredSharedLabelLocksWhenDetachDeletingNode() throws KernelException {
  long nodeId=1L;
  long labelId1=1;
  long labelId2=2;
  returnRelationships(transaction,false,new TestRelationshipChain(nodeId));
  when(transaction.ambientNodeCursor()).thenReturn(new StubNodeCursor(false));
  when(nodeCursor.next()).thenReturn(true);
  LabelSet labels=mock(LabelSet.class);
  when(labels.all()).thenReturn(new long[]{labelId1,labelId2});
  when(nodeCursor.labels()).thenReturn(labels);
  operations.nodeDetachDelete(nodeId);
  InOrder order=inOrder(locks);
  order.verify(locks).acquireExclusive(LockTracer.NONE,ResourceTypes.NODE,nodeId);
  order.verify(locks).acquireShared(LockTracer.NONE,ResourceTypes.LABEL,labelId1,labelId2);
  order.verifyNoMoreInteractions();
}
