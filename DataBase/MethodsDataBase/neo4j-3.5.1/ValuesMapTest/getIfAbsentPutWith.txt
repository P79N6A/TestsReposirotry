@Test void getIfAbsentPutWith(){
  @SuppressWarnings({"Convert2Lambda","Anonymous2MethodRef"}) final Function<String,Value> function=spy(new Function<String,Value>(){
    @Override public Value valueOf(    String s){
      return intValue(Integer.valueOf(s));
    }
  }
);
  assertEquals(intValue(10),map.getIfAbsentPutWith(0,function,"10"));
  assertEquals(intValue(10),map.getIfAbsentPutWith(0,function,"10"));
  assertEquals(intValue(11),map.getIfAbsentPutWith(1,function,"11"));
  assertEquals(intValue(11),map.getIfAbsentPutWith(1,function,"11"));
  assertEquals(intValue(12),map.getIfAbsentPutWith(2,function,"12"));
  assertEquals(intValue(12),map.getIfAbsentPutWith(2,function,"12"));
  verify(function).valueOf(eq("10"));
  verify(function).valueOf(eq("11"));
  verify(function).valueOf(eq("12"));
  verifyNoMoreInteractions(function);
}
