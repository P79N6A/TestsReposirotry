@Test void randomizedWithSharedValuesContainer(){
  final int MAPS=13;
  final int COUNT=10000 + rnd.nextInt(1000);
  final AppendOnlyValuesContainer valuesContainer=new AppendOnlyValuesContainer(new TestMemoryAllocator());
  final List<ValuesMap> actualMaps=new ArrayList<>();
  final List<MutableLongObjectMap<Value>> expectedMaps=new ArrayList<>();
  for (int i=0; i < MAPS; i++) {
    actualMaps.add(newMap(valuesContainer));
    expectedMaps.add(new LongObjectHashMap<>());
  }
  for (int i=0; i < MAPS; i++) {
    put(COUNT,actualMaps.get(i),expectedMaps.get(i));
  }
  for (int i=0; i < MAPS; i++) {
    remove(COUNT,actualMaps.get(i),expectedMaps.get(i));
  }
  for (int i=0; i < MAPS; i++) {
    final MutableLongObjectMap<Value> expected=expectedMaps.get(i);
    final ValuesMap actual=actualMaps.get(i);
    expected.forEachKeyValue((k,v) -> assertEquals(v,actual.get(k)));
  }
}
