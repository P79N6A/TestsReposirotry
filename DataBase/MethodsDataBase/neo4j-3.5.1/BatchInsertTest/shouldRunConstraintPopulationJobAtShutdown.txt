@Test public void shouldRunConstraintPopulationJobAtShutdown() throws Throwable {
  IndexPopulator populator=mock(IndexPopulator.class);
  IndexProvider provider=mock(IndexProvider.class);
  IndexAccessor accessor=mock(IndexAccessor.class);
  when(provider.getProviderDescriptor()).thenReturn(DESCRIPTOR);
  when(provider.getPopulator(any(StoreIndexDescriptor.class),any(IndexSamplingConfig.class))).thenReturn(populator);
  when(populator.sampleResult()).thenReturn(new IndexSample());
  when(provider.getOnlineAccessor(any(StoreIndexDescriptor.class),any(IndexSamplingConfig.class))).thenReturn(accessor);
  BatchInserter inserter=newBatchInserterWithIndexProvider(singleInstanceIndexProviderFactory(KEY,provider),provider.getProviderDescriptor());
  inserter.createDeferredConstraint(label("Hacker")).assertPropertyIsUnique("handle").create();
  long nodeId=inserter.createNode(map("handle","Jakewins"),label("Hacker"));
  inserter.shutdown();
  verify(provider).init();
  verify(provider).start();
  verify(provider).getPopulator(any(StoreIndexDescriptor.class),any(IndexSamplingConfig.class));
  verify(populator).create();
  verify(populator).add(argThat(matchesCollection(add(nodeId,internalUniqueIndex.schema(),Values.of("Jakewins")))));
  verify(populator).verifyDeferredConstraints(any(NodePropertyAccessor.class));
  verify(populator).close(true);
  verify(provider).stop();
  verify(provider).shutdown();
}
