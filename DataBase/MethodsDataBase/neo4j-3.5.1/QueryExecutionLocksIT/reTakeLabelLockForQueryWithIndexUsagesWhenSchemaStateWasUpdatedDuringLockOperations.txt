@Test public void reTakeLabelLockForQueryWithIndexUsagesWhenSchemaStateWasUpdatedDuringLockOperations() throws Exception {
  String labelName="Robot";
  Label robot=Label.label(labelName);
  String propertyKey="name";
  createIndex(robot,propertyKey);
  try (Transaction transaction=databaseRule.beginTx()){
    Node node=databaseRule.createNode(robot);
    node.setProperty(propertyKey,RandomStringUtils.randomAscii(10));
    transaction.success();
  }
   String query="MATCH (n:" + labelName + ") where n."+ propertyKey+ " = \"Bender\" RETURN n ";
  LockOperationListener lockOperationListener=new OnceSchemaFlushListener();
  List<LockOperationRecord> lockOperationRecords=traceQueryLocks(query,lockOperationListener);
  assertThat("Observed list of lock operations is: " + lockOperationRecords,lockOperationRecords,hasSize(3));
  LockOperationRecord operationRecord=lockOperationRecords.get(0);
  assertTrue(operationRecord.acquisition);
  assertFalse(operationRecord.exclusive);
  assertEquals(ResourceTypes.LABEL,operationRecord.resourceType);
  LockOperationRecord operationRecord1=lockOperationRecords.get(1);
  assertFalse(operationRecord1.acquisition);
  assertFalse(operationRecord1.exclusive);
  assertEquals(ResourceTypes.LABEL,operationRecord1.resourceType);
  LockOperationRecord operationRecord2=lockOperationRecords.get(2);
  assertTrue(operationRecord2.acquisition);
  assertFalse(operationRecord2.exclusive);
  assertEquals(ResourceTypes.LABEL,operationRecord2.resourceType);
}
