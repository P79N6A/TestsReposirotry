@Documented("Create a unique node or return fail (create).\n" + "\n" + "Here, in case\n"+ "of an already existing node, an error should be returned. In this\n"+ "example, no existing indexed node is found and a new node is created.") @Test public void create_a_unique_node_or_fail_create() throws Exception {
  final String index=indexes.newInstance();
  String key="name";
  String value="Tobias";
  helper.createNodeIndex(index);
  ResponseEntity response=gen.get().expectedStatus(201).payloadType(MediaType.APPLICATION_JSON_TYPE).payload("{\"key\": \"" + key + "\", \"value\": \""+ value+ "\", \"properties\": {\""+ key+ "\": \""+ value+ "\", \"sequence\": 1}}").post(functionalTestHelper.nodeIndexUri() + index + "?uniqueness=create_or_fail"+ "");
  MultivaluedMap<String,String> headers=response.response().getHeaders();
  Map<String,Object> result=JsonHelper.jsonToMap(response.entity());
  assertEquals(result.get("indexed"),headers.getFirst("Location"));
  Map<String,Object> data=assertCast(Map.class,result.get("data"));
  assertEquals(value,data.get(key));
  assertEquals(1,data.get("sequence"));
}
