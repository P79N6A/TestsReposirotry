@Test public void testLowGrabSize(){
  Map<String,String> config=new HashMap<>();
  config.put("relationship_grab_size","1");
  GraphDatabaseService graphDb=getImpermanentDatabase(config);
  Node node1;
  Node node2;
  try (Transaction tx=graphDb.beginTx()){
    node1=graphDb.createNode();
    node2=graphDb.createNode();
    node1.createRelationshipTo(node2,MyRelTypes.TEST);
    node2.createRelationshipTo(node1,MyRelTypes.TEST2);
    node1.createRelationshipTo(node2,MyRelTypes.TEST_TRAVERSAL);
    tx.success();
  }
   try (Transaction tx=graphDb.beginTx()){
    RelationshipType[] types=new RelationshipType[]{MyRelTypes.TEST,MyRelTypes.TEST2,MyRelTypes.TEST_TRAVERSAL};
    assertEquals(3,Iterables.count(node1.getRelationships(types)));
    assertEquals(3,Iterables.count(node1.getRelationships()));
    assertEquals(3,Iterables.count(node2.getRelationships(types)));
    assertEquals(3,Iterables.count(node2.getRelationships()));
    assertEquals(2,Iterables.count(node1.getRelationships(OUTGOING)));
    assertEquals(1,Iterables.count(node1.getRelationships(INCOMING)));
    assertEquals(1,Iterables.count(node2.getRelationships(OUTGOING)));
    assertEquals(2,Iterables.count(node2.getRelationships(INCOMING)));
    tx.success();
  }
   graphDb.shutdown();
}
