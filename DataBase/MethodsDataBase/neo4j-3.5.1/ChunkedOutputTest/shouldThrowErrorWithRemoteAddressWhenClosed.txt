@Test public void shouldThrowErrorWithRemoteAddressWhenClosed() throws Exception {
  Channel channel=mock(Channel.class);
  ByteBufAllocator allocator=mock(ByteBufAllocator.class);
  when(allocator.buffer(anyInt())).thenReturn(Unpooled.buffer());
  when(channel.alloc()).thenReturn(allocator);
  SocketAddress remoteAddress=mock(SocketAddress.class);
  String remoteAddressString="client.server.com:7687";
  when(remoteAddress.toString()).thenReturn(remoteAddressString);
  when(channel.remoteAddress()).thenReturn(remoteAddress);
  ChunkedOutput output=new ChunkedOutput(channel,DEFAULT_TEST_BUFFER_SIZE,DEFAULT_TEST_BUFFER_SIZE,NO_THROTTLE);
  output.close();
  try {
    output.writeInt(42);
    fail("Exception expected");
  }
 catch (  PackOutputClosedException e) {
    assertThat(e.getMessage(),containsString(remoteAddressString));
  }
}
