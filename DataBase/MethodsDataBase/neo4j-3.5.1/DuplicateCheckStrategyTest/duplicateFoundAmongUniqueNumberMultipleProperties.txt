@Test public void duplicateFoundAmongUniqueNumberMultipleProperties() throws IndexEntryConflictException {
  double propertyValue=0;
  for (int i=0; i < randomNumberOfEntries(); i++) {
    double propertyValueA=propertyValue;
    double propertyValueB=-propertyValue;
    Value propertyA=Values.doubleValue(propertyValueA);
    Value propertyB=Values.doubleValue(propertyValueB);
    checkStrategy.checkForDuplicate(new Value[]{propertyA,propertyB},i);
    propertyValue+=1;
  }
  int duplicateTarget=BUCKET_STRATEGY_ENTRIES_THRESHOLD - 8;
  double duplicateValueA=duplicateTarget;
  double duplicateValueB=-duplicateTarget;
  Value propertyA=Values.doubleValue(duplicateValueA);
  Value propertyB=Values.doubleValue(duplicateValueB);
  expectedException.expect(IndexEntryConflictException.class);
  expectedException.expectMessage(format("Both node %d and node 3 share the property value %s",duplicateTarget,ValueTuple.of(duplicateValueA,duplicateValueB)));
  checkStrategy.checkForDuplicate(new Value[]{propertyA,propertyB},3);
}
