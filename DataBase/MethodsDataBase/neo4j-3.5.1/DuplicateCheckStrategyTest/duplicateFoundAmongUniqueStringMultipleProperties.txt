@Test public void duplicateFoundAmongUniqueStringMultipleProperties() throws IndexEntryConflictException {
  for (int i=0; i < randomNumberOfEntries(); i++) {
    String propertyValueA=String.valueOf(i);
    String propertyValueB=String.valueOf(-i);
    Value propertyA=Values.stringValue(propertyValueA);
    Value propertyB=Values.stringValue(propertyValueB);
    checkStrategy.checkForDuplicate(new Value[]{propertyA,propertyB},i);
  }
  int duplicateTarget=BUCKET_STRATEGY_ENTRIES_THRESHOLD - 2;
  String duplicatedValueA=String.valueOf(duplicateTarget);
  String duplicatedValueB=String.valueOf(-duplicateTarget);
  Value propertyA=Values.stringValue(duplicatedValueA);
  Value propertyB=Values.stringValue(duplicatedValueB);
  expectedException.expect(IndexEntryConflictException.class);
  expectedException.expectMessage(format("Both node %d and node 3 share the property value %s",duplicateTarget,ValueTuple.of(propertyA,propertyB)));
  checkStrategy.checkForDuplicate(new Value[]{propertyA,propertyB},3);
}
