@Test void shouldNotEqual(){
  assertNotEqual(list(),list(2));
  assertNotEqual(list(),list(1,2));
  assertNotEqual(list(1),list(2));
  assertNotEqual(list(1),list(1,2));
  assertNotEqual(list(1,1),list(1,2));
  assertNotEqual(list(1,"d"),list(1,"f"));
  assertNotEqual(list(1,"d"),list("d",1));
  assertNotEqual(list("d"),list(false));
  assertNotEqual(list(Values.stringArray("d")),list("d"));
  assertNotEqual(list(longArray(new long[]{3,4,5})),list(intArray(new int[]{3,4,50})));
  assertNotEqual(list(true,true),intArray(new int[]{0,0}));
  assertNotEqual(list(true,true),longArray(new long[]{0L,0L}));
  assertNotEqual(list(true,true),shortArray(new short[]{(short)0,(short)0}));
  assertNotEqual(list(true,true),floatArray(new float[]{0.0f,0.0f}));
  assertNotEqual(list(true,true),doubleArray(new double[]{0.0,0.0}));
  assertNotEqual(list(true,true),charArray(new char[]{'T','T'}));
  assertNotEqual(list(true,true),stringArray("True","True"));
  assertNotEqual(list(true,true),byteArray(new byte[]{(byte)0,(byte)0}));
  assertNotEqual(list(true),booleanArray(new boolean[]{true,false}));
  assertNotEqual(list(true,true),booleanArray(new boolean[]{true,false}));
  assertNotEqual(list(84,104,32,105,115,32,106,117,115,116,32,97,32,116,101,115,116),byteArray("This is just a test".getBytes()));
  assertNotEqual(list('h'),charArray(new char[]{'h','i'}));
  assertNotEqual(list('h','o'),charArray(new char[]{'h','i'}));
  assertNotEqual(list(9.0,2.0),doubleArray(new double[]{1.0,2.0}));
  assertNotEqual(list(1.0),doubleArray(new double[]{1.0,2.0}));
  assertNotEqual(list(1.5f),floatArray(new float[]{1.5f,-5f}));
  assertNotEqual(list(1.5f,5f),floatArray(new float[]{1.5f,-5f}));
  assertNotEqual(list(1,3),intArray(new int[]{1,-3}));
  assertNotEqual(list(-3),intArray(new int[]{1,-3}));
  assertNotEqual(list(2L,3L),longArray(new long[]{2L,-3L}));
  assertNotEqual(list(2L),longArray(new long[]{2L,-3L}));
  assertNotEqual(list((short)2,(short)3),shortArray(new short[]{(short)2,(short)-3}));
  assertNotEqual(list((short)2),shortArray(new short[]{(short)2,(short)-3}));
  assertNotEqual(list("hi","hello"),stringArray("hi"));
  assertNotEqual(list("hello"),stringArray("hi"));
  assertNotEqual(list(1,'b'),charArray(new char[]{'a','b'}));
}
