@Test public void largeNumberOfSlowRunningJobsShouldChangeAutoReadState() throws Exception {
  int numberOfRunDiscardPairs=1000;
  String largeString=StringUtils.repeat(" ",8 * 1024);
  connection.connect(address).send(util.defaultAcceptedVersions()).send(util.chunk(new InitMessage("TestClient/1.1",emptyMap())));
  assertThat(connection,util.eventuallyReceivesSelectedProtocolVersion());
  assertThat(connection,util.eventuallyReceives(msgSuccess()));
  for (int i=0; i < numberOfRunDiscardPairs; i++) {
    connection.send(util.chunk(new RunMessage("CALL boltissue.sleep( $data )",ValueUtils.asMapValue(singletonMap("data",largeString))),DiscardAllMessage.INSTANCE));
  }
  for (int i=0; i < numberOfRunDiscardPairs; i++) {
    assertThat(connection,util.eventuallyReceives(msgSuccess(),msgSuccess()));
  }
  logProvider.assertAtLeastOnce(AssertableLogProvider.inLog(BoltConnectionReadLimiter.class).warn(containsString("disabled"),anything(),anything()));
  logProvider.assertAtLeastOnce(AssertableLogProvider.inLog(BoltConnectionReadLimiter.class).warn(containsString("enabled"),anything(),anything()));
}
