@Test public void shouldGetCallToAfterRollbackEvenIfBeforeCommitFailed(){
  CapturingEventHandler<Integer> firstWorkingHandler=new CapturingEventHandler<>(() -> 5);
  String failureMessage="Massive fail";
  CapturingEventHandler<Integer> faultyHandler=new CapturingEventHandler<>(() -> {
    throw new RuntimeException(failureMessage);
  }
);
  CapturingEventHandler<Integer> otherWorkingHandler=new CapturingEventHandler<>(() -> 10);
  dbRule.registerTransactionEventHandler(firstWorkingHandler);
  dbRule.registerTransactionEventHandler(faultyHandler);
  dbRule.registerTransactionEventHandler(otherWorkingHandler);
  boolean failed=false;
  try (Transaction tx=dbRule.beginTx()){
    dbRule.createNode();
    tx.success();
  }
 catch (  Exception e) {
    assertTrue(Exceptions.contains(e,failureMessage,RuntimeException.class));
    failed=true;
  }
  assertTrue(failed);
  assertTrue(firstWorkingHandler.beforeCommitCalled);
  assertTrue(firstWorkingHandler.afterRollbackCalled);
  assertEquals(5,firstWorkingHandler.afterRollbackState.intValue());
  assertTrue(faultyHandler.beforeCommitCalled);
  assertTrue(faultyHandler.afterRollbackCalled);
  assertNull(faultyHandler.afterRollbackState);
  assertTrue(otherWorkingHandler.beforeCommitCalled);
  assertTrue(otherWorkingHandler.afterRollbackCalled);
  assertEquals(10,otherWorkingHandler.afterRollbackState.intValue());
}
