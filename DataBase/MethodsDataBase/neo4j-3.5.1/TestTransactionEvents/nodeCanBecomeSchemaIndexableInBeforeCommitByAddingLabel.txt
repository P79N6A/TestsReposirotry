@Test public void nodeCanBecomeSchemaIndexableInBeforeCommitByAddingLabel(){
  GraphDatabaseService db=dbRule.getGraphDatabaseAPI();
  final Label label=label("Label");
  try (Transaction tx=db.beginTx()){
    db.schema().indexFor(label).on("indexed").create();
    tx.success();
  }
   db.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Object>(){
    @Override public Object beforeCommit(    TransactionData data){
      Iterator<Node> nodes=data.createdNodes().iterator();
      if (nodes.hasNext()) {
        Node node=nodes.next();
        node.addLabel(label);
      }
      return null;
    }
  }
);
  try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(AWAIT_INDEX_DURATION,AWAIT_INDEX_UNIT);
    Node node=db.createNode();
    node.setProperty("indexed","value");
    node.setProperty("random",42);
    tx.success();
  }
   try (Transaction ignore=db.beginTx()){
    Node node=db.findNode(label,"indexed","value");
    assertThat(node.getProperty("random"),is(42));
  }
 }
