@Test void testAdminUsage() throws Exception {
  CommandLocator commandLocator=mock(CommandLocator.class);
  List<AdminCommand.Provider> mockCommands=asList(mockCommand("foo"),mockCommand("bar"),mockCommand("baz"));
  when(commandLocator.getAllProviders()).thenReturn(mockCommands);
  try (ByteArrayOutputStream baos=new ByteArrayOutputStream()){
    PrintStream ps=new PrintStream(baos);
    Usage usage=new Usage("neo4j-admin",commandLocator);
    HelpCommand helpCommand=new HelpCommand(usage,ps::println,commandLocator);
    helpCommand.execute();
    assertEquals(String.format("usage: neo4j-admin <command>%n" + "%n" + "Manage your Neo4j instance.%n"+ "%n"+ "environment variables:%n"+ "    NEO4J_CONF    Path to directory which contains neo4j.conf.%n"+ "    NEO4J_DEBUG   Set to anything to enable debug output.%n"+ "    NEO4J_HOME    Neo4j home directory.%n"+ "    HEAP_SIZE     Set JVM maximum heap size during command execution.%n"+ "                  Takes a number and a unit, for example 512m.%n"+ "%n"+ "available commands:%n"+ "%n"+ "General%n"+ "    bar%n"+ "        null%n"+ "    baz%n"+ "        null%n"+ "    foo%n"+ "        null%n"+ "%n"+ "Use neo4j-admin help <command> for more details.%n"),baos.toString());
  }
 }
