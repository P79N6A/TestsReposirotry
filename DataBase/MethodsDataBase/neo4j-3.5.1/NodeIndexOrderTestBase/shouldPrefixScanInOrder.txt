@Test public void shouldPrefixScanInOrder() throws Exception {
  List<Pair<Long,Value>> expected=new ArrayList<>();
  try (Transaction tx=beginTransaction()){
    expected.add(nodeWithProp(tx,"bee hive"));
    nodeWithProp(tx,"a");
    expected.add(nodeWithProp(tx,"become"));
    expected.add(nodeWithProp(tx,"be"));
    expected.add(nodeWithProp(tx,"bachelor"));
    nodeWithProp(tx,"street smart");
    expected.add(nodeWithProp(tx,"builder"));
    nodeWithProp(tx,"ceasar");
    tx.success();
  }
   createIndex();
  try (Transaction tx=beginTransaction()){
    int label=tx.tokenRead().nodeLabel("Node");
    int prop=tx.tokenRead().propertyKey("prop");
    IndexReference index=tx.schemaRead().index(label,prop);
    try (NodeValueIndexCursor cursor=tx.cursors().allocateNodeValueIndexCursor()){
      nodeWithProp(tx,"allow");
      expected.add(nodeWithProp(tx,"bastard"));
      expected.add(nodeWithProp(tx,"bully"));
      nodeWithProp(tx,"willow");
      IndexQuery query=IndexQuery.stringPrefix(prop,stringValue("b"));
      tx.dataRead().nodeIndexSeek(index,cursor,indexOrder,true,query);
      assertResultsInOrder(expected,cursor);
    }
   }
 }
