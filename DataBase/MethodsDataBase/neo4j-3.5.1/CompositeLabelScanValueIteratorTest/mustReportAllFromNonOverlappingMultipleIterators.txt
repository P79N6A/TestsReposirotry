@Test public void mustReportAllFromNonOverlappingMultipleIterators(){
  AtomicInteger closeCounter=new AtomicInteger();
  long[] firstIter={0L,2L,Long.MAX_VALUE};
  long[] secondIter={1L,3L};
  long[] expected={0L,1L,2L,3L,Long.MAX_VALUE};
  List<PrimitiveLongResourceIterator> iterators=asMutableList(iterator(closeCounter::incrementAndGet,firstIter),iterator(closeCounter::incrementAndGet,secondIter));
  CompositeLabelScanValueIterator iterator=new CompositeLabelScanValueIterator(iterators,false);
  assertArrayEquals(expected,PrimitiveLongCollections.asArray(iterator));
  iterator.close();
  assertEquals("expected close count",2,closeCounter.get());
}
