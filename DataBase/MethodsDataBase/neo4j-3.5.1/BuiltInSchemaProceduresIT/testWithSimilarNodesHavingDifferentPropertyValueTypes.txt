@Test public void testWithSimilarNodesHavingDifferentPropertyValueTypes() throws Throwable {
  createNode(Arrays.asList(),Arrays.asList("prop1","prop2","prop3"),Arrays.asList(Values.stringValue("Test"),Values.intValue(12),Values.booleanValue(true)));
  createNode(Arrays.asList(),Arrays.asList("prop1","prop2","prop3"),Arrays.asList(Values.stringValue("Test"),Values.floatValue(1.5f),Values.stringValue("Test")));
  createNode(Arrays.asList(),Arrays.asList("prop1"),Arrays.asList(Values.stringValue("Test")));
  RawIterator<Object[],ProcedureException> stream=procs().procedureCallRead(procs().procedureGet(procedureName(nodesProcedureName)).id(),new Object[0]);
  assertThat(asList(stream),containsInAnyOrder(equalTo(nodeEntry("",Arrays.asList(),"prop1",Arrays.asList("String"),true)),equalTo(nodeEntry("",Arrays.asList(),"prop2",Arrays.asList("Integer","Float"),false)),equalTo(nodeEntry("",Arrays.asList(),"prop3",Arrays.asList("String","Boolean"),false))));
}
