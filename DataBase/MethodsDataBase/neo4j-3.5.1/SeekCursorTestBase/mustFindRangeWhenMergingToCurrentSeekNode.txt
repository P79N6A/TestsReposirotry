@Test void mustFindRangeWhenMergingToCurrentSeekNode() throws Exception {
  long key=0;
  while (numberOfRootSplits == 0) {
    insert(key);
    key++;
  }
  PageAwareByteArrayCursor readCursor=cursor.duplicate(rootId);
  readCursor.next();
  long leftChild=childAt(readCursor,0,stableGeneration,unstableGeneration);
  long rightChild=childAt(readCursor,1,stableGeneration,unstableGeneration);
  readCursor.next(pointer(rightChild));
  int keyCount=TreeNode.keyCount(readCursor);
  long fromInclusive=keyAt(readCursor,keyCount - 3,LEAF);
  long toExclusive=keyAt(readCursor,keyCount - 1,LEAF);
  TestPageCursor seekCursor=new TestPageCursor(cursor.duplicate(rootId));
  seekCursor.next();
  try (SeekCursor<KEY,VALUE> seeker=seekCursor(fromInclusive,toExclusive,seekCursor)){
    assertThat(seekCursor.getCurrentPageId(),is(rightChild));
    seekRangeWithUnderflowMidSeek(seeker,seekCursor,fromInclusive,toExclusive,leftChild);
    readCursor.next(rootId);
    assertTrue(TreeNode.isLeaf(readCursor));
  }
 }
