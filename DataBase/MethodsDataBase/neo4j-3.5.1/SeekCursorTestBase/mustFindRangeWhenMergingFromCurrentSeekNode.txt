@Test void mustFindRangeWhenMergingFromCurrentSeekNode() throws Exception {
  long key=0;
  while (numberOfRootSplits == 0) {
    insert(key);
    key++;
  }
  PageAwareByteArrayCursor readCursor=cursor.duplicate(rootId);
  readCursor.next();
  long leftChild=childAt(readCursor,0,stableGeneration,unstableGeneration);
  long rightChild=childAt(readCursor,1,stableGeneration,unstableGeneration);
  readCursor.next(pointer(leftChild));
  KEY from=layout.newKey();
  node.keyAt(readCursor,from,0,LEAF);
  long fromInclusive=getSeed(from);
  long toExclusive=getSeed(from) + 2;
  TestPageCursor seekCursor=new TestPageCursor(cursor.duplicate(rootId));
  seekCursor.next();
  try (SeekCursor<KEY,VALUE> seeker=seekCursor(fromInclusive,toExclusive,seekCursor)){
    assertThat(seekCursor.getCurrentPageId(),is(leftChild));
    seekRangeWithUnderflowMidSeek(seeker,seekCursor,fromInclusive,toExclusive,rightChild);
    readCursor.next(rootId);
    assertTrue(TreeNode.isLeaf(readCursor));
  }
 }
