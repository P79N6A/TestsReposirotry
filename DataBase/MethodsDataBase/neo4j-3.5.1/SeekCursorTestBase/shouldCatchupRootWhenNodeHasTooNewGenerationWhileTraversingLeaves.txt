@Test void shouldCatchupRootWhenNodeHasTooNewGenerationWhileTraversingLeaves() throws Exception {
  MutableBoolean triggered=new MutableBoolean(false);
  long oldRightChild=666;
  long rightChild=cursor.getCurrentPageId();
  node.initializeLeaf(cursor,stableGeneration,unstableGeneration);
  cursor.next();
  Supplier<Root> rootCatchup=() -> {
    cursor.next(rightChild);
    triggered.setTrue();
    return new Root(cursor.getCurrentPageId(),TreeNode.generation(cursor));
  }
;
  long leftChild=cursor.getCurrentPageId();
  node.initializeLeaf(cursor,stableGeneration - 1,unstableGeneration - 1);
  TreeNode.setRightSibling(cursor,rightChild,stableGeneration - 1,unstableGeneration - 1);
  cursor.next();
  node.initializeInternal(cursor,stableGeneration - 1,unstableGeneration - 1);
  long keyInRoot=10L;
  node.insertKeyAndRightChildAt(cursor,key(keyInRoot),oldRightChild,0,0,stableGeneration,unstableGeneration);
  TreeNode.setKeyCount(cursor,1);
  node.setChildAt(cursor,leftChild,0,stableGeneration,unstableGeneration);
  KEY from=key(1L);
  KEY to=key(20L);
  try (SeekCursor<KEY,VALUE> seek=new SeekCursor<>(cursor,node,from,to,layout,stableGeneration - 1,unstableGeneration - 1,generationSupplier,rootCatchup,unstableGeneration,exceptionDecorator,1)){
    while (seek.next()) {
      seek.get();
    }
  }
   assertTrue(triggered.getValue());
}
