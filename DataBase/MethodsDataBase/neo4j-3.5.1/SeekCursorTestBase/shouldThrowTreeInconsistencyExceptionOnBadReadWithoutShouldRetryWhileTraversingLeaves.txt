@Test void shouldThrowTreeInconsistencyExceptionOnBadReadWithoutShouldRetryWhileTraversingLeaves() throws Exception {
  int keyCount=10000;
  long i=0L;
  while (numberOfRootSplits == 0) {
    insert(i);
    i++;
  }
  long rootId=cursor.getCurrentPageId();
  long leftChild=node.childAt(cursor,0,stableGeneration,unstableGeneration);
  goTo(cursor,leftChild);
  cursor.setOffset(TreeNode.BYTE_POS_KEYCOUNT);
  cursor.putInt(keyCount);
  goTo(cursor,rootId);
  try (SeekCursor<KEY,VALUE> seek=seekCursor(0L,Long.MAX_VALUE)){
    while (seek.next()) {
    }
  }
 catch (  TreeInconsistencyException e) {
    assertThat(e.getMessage(),containsString("keyCount:" + keyCount));
  }
}
