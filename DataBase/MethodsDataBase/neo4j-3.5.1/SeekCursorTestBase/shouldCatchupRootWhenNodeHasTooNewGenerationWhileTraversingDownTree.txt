@Test void shouldCatchupRootWhenNodeHasTooNewGenerationWhileTraversingDownTree() throws Exception {
  long generation=TreeNode.generation(cursor);
  MutableBoolean triggered=new MutableBoolean(false);
  long rightChild=999;
  long leftChild=cursor.getCurrentPageId();
  node.initializeLeaf(cursor,stableGeneration + 1,unstableGeneration + 1);
  cursor.next();
  long rootId=cursor.getCurrentPageId();
  node.initializeInternal(cursor,stableGeneration,unstableGeneration);
  long keyInRoot=10L;
  node.insertKeyAndRightChildAt(cursor,key(keyInRoot),rightChild,0,0,stableGeneration,unstableGeneration);
  TreeNode.setKeyCount(cursor,1);
  node.setChildAt(cursor,leftChild,0,stableGeneration,unstableGeneration);
  Supplier<Root> rootCatchup=() -> {
    triggered.setTrue();
    cursor.next(leftChild);
    cursor.zapPage();
    node.initializeLeaf(cursor,stableGeneration,unstableGeneration);
    cursor.next(rootId);
    return new Root(rootId,generation);
  }
;
  KEY from=key(1L);
  KEY to=key(2L);
  try (SeekCursor<KEY,VALUE> ignored=new SeekCursor<>(cursor,node,from,to,layout,stableGeneration,unstableGeneration,generationSupplier,rootCatchup,unstableGeneration,exceptionDecorator,1)){
  }
   assertTrue(triggered.getValue());
}
