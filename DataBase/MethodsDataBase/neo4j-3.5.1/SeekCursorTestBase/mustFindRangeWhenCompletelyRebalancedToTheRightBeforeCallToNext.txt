@Test void mustFindRangeWhenCompletelyRebalancedToTheRightBeforeCallToNext() throws Exception {
  long key=10;
  while (numberOfRootSplits == 0) {
    insert(key);
    key++;
  }
  for (long smallKey=0; smallKey < 2; smallKey++) {
    insert(smallKey);
  }
  PageAwareByteArrayCursor readCursor=cursor.duplicate(rootId);
  readCursor.next();
  long leftChild=childAt(readCursor,0,stableGeneration,unstableGeneration);
  long rightChild=childAt(readCursor,1,stableGeneration,unstableGeneration);
  readCursor.next(pointer(leftChild));
  int keyCount=TreeNode.keyCount(readCursor);
  KEY readKey=layout.newKey();
  node.keyAt(readCursor,readKey,keyCount - 1,LEAF);
  long fromInclusive=getSeed(readKey);
  long toExclusive=fromInclusive + 1;
  TestPageCursor seekCursor=new TestPageCursor(cursor.duplicate(rootId));
  seekCursor.next();
  try (SeekCursor<KEY,VALUE> seeker=seekCursor(fromInclusive,toExclusive,seekCursor)){
    triggerUnderflowAndSeekRange(seeker,seekCursor,fromInclusive,toExclusive,rightChild);
  }
 }
