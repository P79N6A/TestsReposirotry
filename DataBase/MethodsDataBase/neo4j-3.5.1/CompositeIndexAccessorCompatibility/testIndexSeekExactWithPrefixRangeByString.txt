@Test public void testIndexSeekExactWithPrefixRangeByString() throws Exception {
  Assume.assumeTrue("Assume support for granular composite queries",testSuite.supportsGranularCompositeQueries());
  updateAndCommit(asList(add(1L,descriptor.schema(),"a","a"),add(2L,descriptor.schema(),"a","A"),add(3L,descriptor.schema(),"a","apa"),add(4L,descriptor.schema(),"a","apA"),add(5L,descriptor.schema(),"a","b"),add(6L,descriptor.schema(),"b","a"),add(7L,descriptor.schema(),"b","A"),add(8L,descriptor.schema(),"b","apa"),add(9L,descriptor.schema(),"b","apA"),add(10L,descriptor.schema(),"b","b")));
  assertThat(query(exact(0,"a"),IndexQuery.stringPrefix(1,stringValue("a"))),equalTo(asList(1L,3L,4L)));
  assertThat(query(exact(0,"a"),IndexQuery.stringPrefix(1,stringValue("A"))),equalTo(Collections.singletonList(2L)));
  assertThat(query(exact(0,"a"),IndexQuery.stringPrefix(1,stringValue("ba"))),equalTo(EMPTY_LIST));
  assertThat(query(exact(0,"a"),IndexQuery.stringPrefix(1,stringValue(""))),equalTo(asList(1L,2L,3L,4L,5L)));
  assertThat(query(exact(0,"b"),IndexQuery.stringPrefix(1,stringValue("a"))),equalTo(asList(6L,8L,9L)));
  assertThat(query(exact(0,"b"),IndexQuery.stringPrefix(1,stringValue("A"))),equalTo(Collections.singletonList(7L)));
  assertThat(query(exact(0,"b"),IndexQuery.stringPrefix(1,stringValue("ba"))),equalTo(EMPTY_LIST));
  assertThat(query(exact(0,"b"),IndexQuery.stringPrefix(1,stringValue(""))),equalTo(asList(6L,7L,8L,9L,10L)));
}
