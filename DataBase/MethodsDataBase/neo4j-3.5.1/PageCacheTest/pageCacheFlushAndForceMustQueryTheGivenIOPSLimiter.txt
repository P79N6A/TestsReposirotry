@Test void pageCacheFlushAndForceMustQueryTheGivenIOPSLimiter() throws Exception {
  int pagesToDirty=10_000;
  PageCache cache=getPageCache(fs,nextPowerOf2(2 * pagesToDirty),PageCacheTracer.NULL,PageCursorTracerSupplier.NULL);
  PagedFile pfA=cache.map(existingFile("a"),filePageSize);
  PagedFile pfB=cache.map(existingFile("b"),filePageSize);
  dirtyManyPages(pfA,pagesToDirty);
  dirtyManyPages(pfB,pagesToDirty);
  AtomicInteger callbackCounter=new AtomicInteger();
  AtomicInteger ioCounter=new AtomicInteger();
  cache.flushAndForce((previousStamp,recentlyCompletedIOs,swapper) -> {
    ioCounter.addAndGet(recentlyCompletedIOs);
    return callbackCounter.getAndIncrement();
  }
);
  pfA.close();
  pfB.close();
  assertThat(callbackCounter.get(),greaterThan(0));
  assertThat(ioCounter.get(),greaterThanOrEqualTo(pagesToDirty * 2 - 30));
}
