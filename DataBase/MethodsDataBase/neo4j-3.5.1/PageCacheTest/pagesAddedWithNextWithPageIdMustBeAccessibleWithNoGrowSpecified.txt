@Test void pagesAddedWithNextWithPageIdMustBeAccessibleWithNoGrowSpecified(){
  assertTimeout(ofMillis(SHORT_TIMEOUT_MILLIS),() -> {
    configureStandardPageCache();
    PagedFile pagedFile=map(file("a"),filePageSize);
    try (PageCursor cursor=pagedFile.io(0,PF_SHARED_WRITE_LOCK)){
      assertTrue(cursor.next(2));
      writeRecords(cursor);
      assertTrue(cursor.next(0));
      writeRecords(cursor);
      assertTrue(cursor.next(1));
      writeRecords(cursor);
    }
     try (PageCursor cursor=pagedFile.io(0,PF_SHARED_WRITE_LOCK | PF_NO_GROW)){
      while (cursor.next()) {
        verifyRecordsMatchExpected(cursor);
      }
    }
     try (PageCursor cursor=pagedFile.io(0,PF_SHARED_READ_LOCK)){
      while (cursor.next()) {
        verifyRecordsMatchExpected(cursor);
      }
    }
     pagedFile.close();
  }
);
}
