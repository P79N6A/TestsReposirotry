@Test void fileMappedWithDeleteOnCloseMustNotLeakDirtyPages(){
  assertTimeout(ofMillis(SEMI_LONG_TIMEOUT_MILLIS),() -> {
    configureStandardPageCache();
    File file=file("a");
    int iterations=50;
    for (int i=0; i < iterations; i++) {
      ensureExists(file);
      try (PagedFile pf=map(file,filePageSize,DELETE_ON_CLOSE);PageCursor cursor=pf.io(0,PF_SHARED_WRITE_LOCK)){
        writeRecords(cursor);
        assertTrue(cursor.next());
      }
     }
  }
);
}
