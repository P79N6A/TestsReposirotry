@Test void mustClosePageSwapperFactoryOnPageCacheClose() throws Exception {
  AtomicBoolean closed=new AtomicBoolean();
  PageSwapperFactory swapperFactory=new SingleFilePageSwapperFactory(){
    @Override public void close(){
      closed.set(true);
    }
  }
;
  PageCache cache=createPageCache(swapperFactory,maxPages,PageCacheTracer.NULL,PageCursorTracerSupplier.NULL,EmptyVersionContextSupplier.EMPTY);
  Exception exception=null;
  try {
    assertFalse(closed.get());
  }
 catch (  Exception e) {
    exception=e;
  }
 finally {
    try {
      cache.close();
      assertTrue(closed.get());
    }
 catch (    Exception e) {
      if (exception == null) {
        exception=e;
      }
 else {
        exception.addSuppressed(e);
      }
    }
    if (exception != null) {
      throw exception;
    }
  }
}
