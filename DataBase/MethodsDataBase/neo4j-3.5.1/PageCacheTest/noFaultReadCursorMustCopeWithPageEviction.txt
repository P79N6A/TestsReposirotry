@Test void noFaultReadCursorMustCopeWithPageEviction() throws Exception {
  configureStandardPageCache();
  File file=file("a");
  try (PagedFile pf=map(file,filePageSize);PageCursor faulter=pf.io(0,PF_SHARED_WRITE_LOCK);PageCursor nofault=pf.io(0,PF_SHARED_READ_LOCK | PF_NO_FAULT)){
    assertTrue(faulter.next());
    assertTrue(faulter.next());
    assertTrue(nofault.next());
    verifyNoFaultCursorIsInMemory(nofault,0);
    PageCursor[] writerArray=new PageCursor[maxPages - 1];
    for (int i=0; i < writerArray.length; i++) {
      writerArray[i]=pf.io(2 + i,PF_SHARED_WRITE_LOCK);
      assertTrue(writerArray[i].next());
    }
    for (    PageCursor writer : writerArray) {
      writer.close();
    }
    assertTrue(nofault.shouldRetry());
    verifyNoFaultReadIsNotInMemory(nofault);
  }
 }
