@Test void mustReadZerosFromBeyondEndOfFile(){
  assertTimeout(ofMillis(SEMI_LONG_TIMEOUT_MILLIS),() -> {
    StandardRecordFormat recordFormat=new StandardRecordFormat();
    File[] files={file("1"),file("2"),file("3"),file("4"),file("5"),file("6"),file("7"),file("8"),file("9"),file("0"),file("A"),file("B")};
    for (int fileId=0; fileId < files.length; fileId++) {
      File file=files[fileId];
      StoreChannel channel=fs.open(file,OpenMode.READ_WRITE);
      for (int recordId=0; recordId < fileId + 1; recordId++) {
        Record record=recordFormat.createRecord(file,recordId);
        recordFormat.writeRecord(record,channel);
      }
      channel.close();
    }
    getPageCache(fs,2,PageCacheTracer.NULL,PageCursorTracerSupplier.NULL);
    int pageSize=pageCache.pageSize();
    int fileId=files.length;
    while (fileId-- > 0) {
      File file=files[fileId];
      try (PagedFile pf=map(file,pageSize);PageCursor cursor=pf.io(0,PF_SHARED_READ_LOCK)){
        int pageCount=0;
        while (cursor.next()) {
          pageCount++;
          recordFormat.assertRecordsWrittenCorrectly(cursor);
        }
        assertThat("pages in file " + file,pageCount,greaterThan(0));
      }
     }
  }
);
}
