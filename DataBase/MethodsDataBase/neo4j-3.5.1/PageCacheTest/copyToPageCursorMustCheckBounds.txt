@Test void copyToPageCursorMustCheckBounds() throws Exception {
  configureStandardPageCache();
  int pageSize=16;
  try (PagedFile pf=map(file("a"),pageSize);PageCursor cursorA=pf.io(0,PF_SHARED_READ_LOCK);PageCursor cursorB=pf.io(0,PF_SHARED_WRITE_LOCK)){
    assertTrue(cursorB.next());
    assertTrue(cursorB.next());
    assertTrue(cursorA.next());
    cursorA.copyTo(-1,cursorB,0,1);
    assertTrue(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    cursorA.copyTo(0,cursorB,-1,1);
    assertTrue(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    cursorA.copyTo(pageSize,cursorB,0,1);
    assertTrue(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    cursorA.copyTo(0,cursorB,pageSize,1);
    assertTrue(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    assertThat(cursorA.copyTo(1,cursorB,0,pageSize),is(pageSize - 1));
    assertFalse(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    assertThat(cursorA.copyTo(0,cursorB,1,pageSize),is(pageSize - 1));
    assertFalse(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    assertThat(cursorA.copyTo(0,cursorB,1,0),is(0));
    assertFalse(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
    cursorA.copyTo(1,cursorB,1,-1);
    assertTrue(cursorA.checkAndClearBoundsFlag());
    assertFalse(cursorB.checkAndClearBoundsFlag());
  }
 }
