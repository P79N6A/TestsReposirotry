@Test public void shouldSeeNewNodePropertyInTransaction() throws Exception {
  long nodeId;
  String propKey1="prop1";
  String propKey2="prop2";
  try (Transaction tx=beginTransaction()){
    nodeId=tx.dataWrite().nodeCreate();
    int prop1=tx.token().propertyKeyGetOrCreateForName(propKey1);
    int prop2=tx.token().propertyKeyGetOrCreateForName(propKey2);
    assertEquals(tx.dataWrite().nodeSetProperty(nodeId,prop1,stringValue("hello")),NO_VALUE);
    assertEquals(tx.dataWrite().nodeSetProperty(nodeId,prop2,stringValue("world")),NO_VALUE);
    try (NodeCursor node=tx.cursors().allocateNodeCursor();PropertyCursor property=tx.cursors().allocatePropertyCursor()){
      tx.dataRead().singleNode(nodeId,node);
      assertTrue("should access node",node.next());
      node.properties(property);
      assertTrue(property.next());
      assertEquals(prop1,property.propertyKey());
      assertEquals(property.propertyValue(),stringValue("hello"));
      assertTrue(property.next());
      assertEquals(prop2,property.propertyKey());
      assertEquals(property.propertyValue(),stringValue("world"));
      assertFalse("should only find two properties",property.next());
      assertFalse("should only find one node",node.next());
    }
     tx.success();
  }
 }
