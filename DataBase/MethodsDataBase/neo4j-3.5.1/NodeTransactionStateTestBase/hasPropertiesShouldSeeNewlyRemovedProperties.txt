@Test public void hasPropertiesShouldSeeNewlyRemovedProperties() throws Exception {
  long node;
  int prop1, prop2, prop3;
  try (Transaction tx=beginTransaction()){
    node=tx.dataWrite().nodeCreate();
    prop1=tx.tokenWrite().propertyKeyGetOrCreateForName("prop1");
    prop2=tx.tokenWrite().propertyKeyGetOrCreateForName("prop2");
    prop3=tx.tokenWrite().propertyKeyGetOrCreateForName("prop3");
    tx.dataWrite().nodeSetProperty(node,prop1,longValue(1));
    tx.dataWrite().nodeSetProperty(node,prop2,longValue(2));
    tx.dataWrite().nodeSetProperty(node,prop3,longValue(3));
    tx.success();
  }
   try (Transaction tx=beginTransaction()){
    try (NodeCursor cursor=tx.cursors().allocateNodeCursor();PropertyCursor props=tx.cursors().allocatePropertyCursor()){
      tx.dataRead().singleNode(node,cursor);
      assertTrue(cursor.next());
      assertTrue(hasProperties(cursor,props));
      tx.dataWrite().nodeRemoveProperty(node,prop1);
      assertTrue(hasProperties(cursor,props));
      tx.dataWrite().nodeRemoveProperty(node,prop2);
      assertTrue(hasProperties(cursor,props));
      tx.dataWrite().nodeRemoveProperty(node,prop3);
      assertFalse(hasProperties(cursor,props));
    }
   }
 }
