@Test public void shouldSeeRemovedPropertyInTransaction() throws Exception {
  long nodeId;
  String propKey="prop1";
  int propToken;
  try (Transaction tx=beginTransaction()){
    nodeId=tx.dataWrite().nodeCreate();
    propToken=tx.token().propertyKeyGetOrCreateForName(propKey);
    assertEquals(tx.dataWrite().nodeSetProperty(nodeId,propToken,stringValue("hello")),NO_VALUE);
    tx.success();
  }
   try (Transaction tx=beginTransaction()){
    assertEquals(tx.dataWrite().nodeRemoveProperty(nodeId,propToken),stringValue("hello"));
    try (NodeCursor node=tx.cursors().allocateNodeCursor();PropertyCursor property=tx.cursors().allocatePropertyCursor()){
      tx.dataRead().singleNode(nodeId,node);
      assertTrue("should access node",node.next());
      node.properties(property);
      assertFalse("should not find any properties",property.next());
      assertFalse("should only find one node",node.next());
    }
     tx.success();
  }
   try (org.neo4j.graphdb.Transaction ignored=graphDb.beginTx()){
    assertFalse(graphDb.getNodeById(nodeId).hasProperty(propKey));
  }
 }
