@Test public void shouldSeeNewLabeledNodeInTransaction() throws Exception {
  long nodeId;
  int labelId;
  final String labelName="Town";
  try (Transaction tx=beginTransaction()){
    nodeId=tx.dataWrite().nodeCreate();
    labelId=tx.token().labelGetOrCreateForName(labelName);
    tx.dataWrite().nodeAddLabel(nodeId,labelId);
    try (NodeCursor node=tx.cursors().allocateNodeCursor()){
      tx.dataRead().singleNode(nodeId,node);
      assertTrue("should access node",node.next());
      LabelSet labels=node.labels();
      assertEquals(1,labels.numberOfLabels());
      assertEquals(labelId,labels.label(0));
      assertTrue(node.hasLabel(labelId));
      assertFalse(node.hasLabel(labelId + 1));
      assertFalse("should only find one node",node.next());
    }
     tx.success();
  }
   try (org.neo4j.graphdb.Transaction ignore=graphDb.beginTx()){
    assertThat(graphDb.getNodeById(nodeId).getLabels(),equalTo(Iterables.iterable(label(labelName))));
  }
 }
