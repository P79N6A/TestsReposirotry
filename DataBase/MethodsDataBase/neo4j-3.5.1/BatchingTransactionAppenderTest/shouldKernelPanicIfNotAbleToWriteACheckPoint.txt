@Test public void shouldKernelPanicIfNotAbleToWriteACheckPoint() throws Throwable {
  IOException ioex=new IOException("boom!");
  FlushablePositionAwareChannel channel=mock(FlushablePositionAwareChannel.class,RETURNS_MOCKS);
  when(channel.put(anyByte())).thenReturn(channel);
  when(channel.putLong(anyLong())).thenThrow(ioex);
  when(channel.put(anyByte())).thenThrow(ioex);
  when(logFile.getWriter()).thenReturn(channel);
  BatchingTransactionAppender appender=life.add(createTransactionAppender());
  try {
    appender.checkPoint(new LogPosition(0L,0L),LogCheckPointEvent.NULL);
    fail("should have thrown ");
  }
 catch (  IOException ex) {
    assertEquals(ioex,ex);
  }
  verify(databaseHealth,times(1)).panic(ioex);
}
