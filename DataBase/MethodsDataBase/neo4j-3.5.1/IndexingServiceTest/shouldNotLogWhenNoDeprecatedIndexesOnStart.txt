@Test public void shouldNotLogWhenNoDeprecatedIndexesOnStart() throws IOException {
  StoreIndexDescriptor nativeBtree10Index=storeIndex(5,1,5,nativeBtree10Descriptor);
  StoreIndexDescriptor fulltextIndex=storeIndex(6,1,6,fulltextDescriptor);
  IndexProvider lucene10Provider=mockIndexProviderWithAccessor(lucene10Descriptor);
  IndexProvider native10Provider=mockIndexProviderWithAccessor(native10Descriptor);
  IndexProvider native20Provider=mockIndexProviderWithAccessor(native20Descriptor);
  IndexProvider nativeBtree10Provider=mockIndexProviderWithAccessor(nativeBtree10Descriptor);
  IndexProvider fulltextProvider=mockIndexProviderWithAccessor(fulltextDescriptor);
  when(nativeBtree10Provider.getInitialState(nativeBtree10Index)).thenReturn(ONLINE);
  when(fulltextProvider.getInitialState(fulltextIndex)).thenReturn(ONLINE);
  Config config=Config.defaults(default_schema_provider,nativeBtree10Descriptor.name());
  DependencyResolver dependencies=buildIndexDependencies(lucene10Provider,native10Provider,native20Provider,nativeBtree10Provider,fulltextProvider);
  DefaultIndexProviderMap providerMap=new DefaultIndexProviderMap(dependencies,config);
  providerMap.init();
  TokenNameLookup mockLookup=mock(TokenNameLookup.class);
  IndexingService indexingService=IndexingServiceFactory.createIndexingService(config,mock(JobScheduler.class),providerMap,storeView,mockLookup,Collections.singletonList(nativeBtree10Index),internalLogProvider,userLogProvider,IndexingService.NO_MONITOR,schemaState);
  indexingService.init();
  internalLogProvider.clear();
  indexingService.start();
  onBothLogProviders(logProvider -> internalLogProvider.assertNoMessagesContaining("IndexingService.start: Deprecated index providers in use:"));
  onBothLogProviders(logProvider -> internalLogProvider.assertNoMessagesContaining(nativeBtree10Descriptor.name()));
  onBothLogProviders(logProvider -> internalLogProvider.assertNoMessagesContaining(fulltextDescriptor.name()));
}
