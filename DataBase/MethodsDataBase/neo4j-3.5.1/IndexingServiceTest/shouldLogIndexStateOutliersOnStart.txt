@Test public void shouldLogIndexStateOutliersOnStart() throws Exception {
  IndexProvider provider=mockIndexProviderWithAccessor(PROVIDER_DESCRIPTOR);
  Config config=Config.defaults(default_schema_provider,PROVIDER_DESCRIPTOR.name());
  DefaultIndexProviderMap providerMap=new DefaultIndexProviderMap(buildIndexDependencies(provider),config);
  providerMap.init();
  TokenNameLookup mockLookup=mock(TokenNameLookup.class);
  List<StoreIndexDescriptor> indexes=new ArrayList<>();
  int nextIndexId=1;
  StoreIndexDescriptor populatingIndex=storeIndex(nextIndexId,nextIndexId++,1,PROVIDER_DESCRIPTOR);
  when(provider.getInitialState(populatingIndex)).thenReturn(POPULATING);
  indexes.add(populatingIndex);
  StoreIndexDescriptor failedIndex=storeIndex(nextIndexId,nextIndexId++,1,PROVIDER_DESCRIPTOR);
  when(provider.getInitialState(failedIndex)).thenReturn(FAILED);
  indexes.add(failedIndex);
  for (int i=0; i < 10; i++) {
    StoreIndexDescriptor indexRule=storeIndex(nextIndexId,nextIndexId++,1,PROVIDER_DESCRIPTOR);
    when(provider.getInitialState(indexRule)).thenReturn(ONLINE);
    indexes.add(indexRule);
  }
  for (int i=0; i < nextIndexId; i++) {
    when(mockLookup.labelGetName(i)).thenReturn("Label" + i);
  }
  IndexingService indexingService=IndexingServiceFactory.createIndexingService(config,mock(JobScheduler.class),providerMap,storeView,mockLookup,indexes,internalLogProvider,userLogProvider,IndexingService.NO_MONITOR,schemaState);
  when(storeView.indexSample(anyLong(),any(DoubleLongRegister.class))).thenReturn(newDoubleLongRegister(32L,32L));
  when(mockLookup.propertyKeyGetName(1)).thenReturn("prop");
  indexingService.init();
  internalLogProvider.clear();
  indexingService.start();
  internalLogProvider.assertAtLeastOnce(logMatch.info("IndexingService.start: index 1 on :Label1(prop) is POPULATING"),logMatch.info("IndexingService.start: index 2 on :Label2(prop) is FAILED"),logMatch.info("IndexingService.start: indexes not specifically mentioned above are ONLINE"));
  internalLogProvider.assertNone(logMatch.info("IndexingService.start: index 3 on :Label3(prop) is ONLINE"));
}
