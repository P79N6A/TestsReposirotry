@Test public void shouldNotLoseIndexDescriptorDueToOtherSimilarIndexDuringRecovery() throws Exception {
  long nodeId=0;
  long indexId=1;
  long otherIndexId=2;
  EntityUpdates update=addNodeUpdate(nodeId,"value");
  when(storeView.nodeAsUpdates(eq(nodeId))).thenReturn(update);
  DoubleLongRegister register=mock(DoubleLongRegister.class);
  when(register.readSecond()).thenReturn(42L);
  when(storeView.indexSample(anyLong(),any(DoubleLongRegister.class))).thenReturn(register);
  IndexAccessor accessor=spy(new TrackingIndexAccessor());
  StoreIndexDescriptor storeIndex=index.withId(indexId);
  IndexingService indexing=newIndexingServiceWithMockedDependencies(populator,accessor,withData(update),storeIndex);
  when(indexProvider.getInitialState(storeIndex)).thenReturn(ONLINE);
  life.init();
  StoreIndexDescriptor otherIndex=storeIndex.withId(otherIndexId);
  indexing.createIndexes(otherIndex);
  indexing.dropIndex(otherIndex);
  indexing.createIndexes(storeIndex);
  reset(accessor);
  indexing.apply(nodeIdsAsIndexUpdates(nodeId));
  life.start();
  verify(accessor).newUpdater(RECOVERY);
}
