@Test public void flushAllIndexesWhileSomeOfThemDropped() throws IOException {
  IndexMapReference indexMapReference=new IndexMapReference();
  IndexProxy validIndex1=createIndexProxyMock(1);
  IndexProxy validIndex2=createIndexProxyMock(2);
  IndexProxy deletedIndexProxy=createIndexProxyMock(3);
  IndexProxy validIndex3=createIndexProxyMock(4);
  IndexProxy validIndex4=createIndexProxyMock(5);
  indexMapReference.modify(indexMap -> {
    indexMap.putIndexProxy(validIndex1);
    indexMap.putIndexProxy(validIndex2);
    indexMap.putIndexProxy(deletedIndexProxy);
    indexMap.putIndexProxy(validIndex3);
    indexMap.putIndexProxy(validIndex4);
    return indexMap;
  }
);
  doAnswer(invocation -> {
    indexMapReference.modify(indexMap -> {
      indexMap.removeIndexProxy(3);
      return indexMap;
    }
);
    throw new RuntimeException("Index deleted.");
  }
).when(deletedIndexProxy).force(any(IOLimiter.class));
  IndexingService indexingService=createIndexServiceWithCustomIndexMap(indexMapReference);
  indexingService.forceAll(IOLimiter.UNLIMITED);
  verify(validIndex1,times(1)).force(IOLimiter.UNLIMITED);
  verify(validIndex2,times(1)).force(IOLimiter.UNLIMITED);
  verify(validIndex3,times(1)).force(IOLimiter.UNLIMITED);
  verify(validIndex4,times(1)).force(IOLimiter.UNLIMITED);
}
