@Test void shouldGet3DSearchTilesForLevel2(){
  Envelope envelope=new Envelope(new double[]{-8,-8,-8},new double[]{8,8,8});
  HilbertSpaceFillingCurve3D curve=new HilbertSpaceFillingCurve3D(envelope,2);
  int[] mid=new int[]{5,14,17,28,35,46,49,58};
  SpaceFillingCurve.LongRange[] midRanges=new SpaceFillingCurve.LongRange[mid.length];
  for (int i=0; i < mid.length; i++) {
    midRanges[i]=new SpaceFillingCurve.LongRange(mid[i],mid[i]);
  }
  assertTiles(curve.getTilesIntersectingEnvelope(new Envelope(new double[]{-6,-6,-6},new double[]{-5,-5,-5})),new SpaceFillingCurve.LongRange(0,0));
  assertTiles(curve.getTilesIntersectingEnvelope(new Envelope(new double[]{4,-6,-6},new double[]{6,-5,-5})),new SpaceFillingCurve.LongRange(63,63));
  assertTiles(curve.getTilesIntersectingEnvelope(new Envelope(new double[]{-6,-5,-5},new double[]{4,-2,-2})),new SpaceFillingCurve.LongRange(0,7),new SpaceFillingCurve.LongRange(56,63));
  assertTiles(curve.getTilesIntersectingEnvelope(new Envelope(new double[]{-2,-6,-2},new double[]{-1,5,-1})),new SpaceFillingCurve.LongRange(2,2),new SpaceFillingCurve.LongRange(5,5),new SpaceFillingCurve.LongRange(13,14));
  assertTiles(curve.getTilesIntersectingEnvelope(new Envelope(new double[]{-8,-3,-3},new double[]{-1,3,3})),new SpaceFillingCurve.LongRange(5,6),new SpaceFillingCurve.LongRange(14,17),new SpaceFillingCurve.LongRange(27,28));
  assertTiles(curve.getTilesIntersectingEnvelope(new Envelope(new double[]{-1,-1,-1},new double[]{1,1,1})),midRanges);
}
