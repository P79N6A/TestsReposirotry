@Test void shouldGet2DHilbertSearchTilesForWideRangeAtManyLevels(){
  final int xmin=-100;
  final int xmax=100;
  final int ymin=-100;
  final int ymax=100;
  Envelope envelope=new Envelope(xmin,xmax,ymin,ymax);
  for (int level=1; level <= HilbertSpaceFillingCurve2D.MAX_LEVEL; level++) {
    HilbertSpaceFillingCurve2D curve=new HilbertSpaceFillingCurve2D(envelope,level);
    final int delta=1;
    final int xhalf=xmin + (xmax - xmin) / 2;
    final int yhalf=ymin + (ymax - ymin) / 2;
    Envelope q1=new Envelope(xmin,xhalf - delta,ymin,yhalf - delta);
    Envelope q2=new Envelope(xmin,xhalf - delta,yhalf,ymax);
    Envelope q3=new Envelope(xhalf,xmax,yhalf,ymax);
    Envelope q4=new Envelope(xhalf,xmax,ymin,yhalf - delta);
    assertTiles(curve.getTilesIntersectingEnvelope(q1),new SpaceFillingCurve.LongRange(0,curve.getValueWidth() / 4 - 1));
    assertTiles(curve.getTilesIntersectingEnvelope(q2),new SpaceFillingCurve.LongRange(curve.getValueWidth() / 4,curve.getValueWidth() / 2 - 1));
    assertTiles(curve.getTilesIntersectingEnvelope(q3),new SpaceFillingCurve.LongRange(curve.getValueWidth() / 2,3 * curve.getValueWidth() / 4 - 1));
    assertTiles(curve.getTilesIntersectingEnvelope(q4),new SpaceFillingCurve.LongRange(3 * curve.getValueWidth() / 4,curve.getValueWidth() - 1));
  }
}
