@Test public void shouldCreateNewVersionWhenInsertInStableLeaf() throws Exception {
  assumeTrue("No checkpointing, no successor",isCheckpointing);
  initialize();
  long targetLastId=id.lastId() + 3;
  long i=0;
  for (; id.lastId() < targetLastId; i++) {
    insert(key(i),value(i));
  }
  goTo(readCursor,rootId);
  assertEquals(2,keyCount());
  long leftChild=childAt(readCursor,0,stableGeneration,unstableGeneration);
  long middleChild=childAt(readCursor,1,stableGeneration,unstableGeneration);
  long rightChild=childAt(readCursor,2,stableGeneration,unstableGeneration);
  assertSiblings(leftChild,middleChild,rightChild);
  generationManager.checkpoint();
  long middle=i / 2;
  KEY middleKey=key(middle);
  VALUE oldValue=value(middle);
  VALUE newValue=value(middle * 11);
  insert(middleKey,newValue);
  long expectedNewMiddleChild=targetLastId + 1;
  assertEquals(expectedNewMiddleChild,id.lastId());
  long newMiddleChild=childAt(readCursor,1,stableGeneration,unstableGeneration);
  assertEquals(expectedNewMiddleChild,newMiddleChild);
  goTo(readCursor,middleChild);
  assertEquals(newMiddleChild,successor(readCursor,stableGeneration,unstableGeneration));
  assertKeyAssociatedWithValue(middleKey,oldValue);
  goTo(readCursor,newMiddleChild);
  assertKeyAssociatedWithValue(middleKey,newValue);
  assertSiblings(leftChild,newMiddleChild,rightChild);
}
