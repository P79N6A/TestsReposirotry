@Test public void modifierMustUpdatePointersInSiblingsToSplit() throws Exception {
  initialize();
  long someLargeSeed=10000;
  int keyCount=0;
  KEY key=key(someLargeSeed - keyCount);
  VALUE value=value(someLargeSeed - keyCount);
  while (node.leafOverflow(cursor,keyCount,key,value) == NO) {
    insert(key,value);
    keyCount++;
    key=key(someLargeSeed - keyCount);
    value=value(someLargeSeed - keyCount);
  }
  generationManager.checkpoint();
  insert(key,value);
  keyCount++;
  key=key(someLargeSeed - keyCount);
  value=value(keyCount);
  goTo(readCursor,rootId);
  long child0=childAt(readCursor,0,stableGeneration,unstableGeneration);
  long child1=childAt(readCursor,1,stableGeneration,unstableGeneration);
  assertSiblingOrderAndPointers(child0,child1);
  while (keyCount(rootId) == 1) {
    insert(key,value);
    keyCount++;
    key=key(someLargeSeed - keyCount);
    value=value(keyCount);
  }
  assertTrue(TreeNode.isInternal(readCursor));
  assertThat(TreeNode.keyCount(readCursor),is(2));
  child0=childAt(readCursor,0,stableGeneration,unstableGeneration);
  child1=childAt(readCursor,1,stableGeneration,unstableGeneration);
  long child2=childAt(readCursor,2,stableGeneration,unstableGeneration);
  assertSiblingOrderAndPointers(child0,child1,child2);
}
