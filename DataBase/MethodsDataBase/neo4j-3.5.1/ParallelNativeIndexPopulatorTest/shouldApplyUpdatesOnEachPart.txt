@Test void shouldApplyUpdatesOnEachPart() throws ExecutionException, InterruptedException, IndexEntryConflictException {
  Thread mainThread=Thread.currentThread();
  ConcurrentMap<Thread,NativeIndexPopulator> partPopulators=new ConcurrentHashMap<>();
  ParallelNativeIndexPopulator<GenericKey,NativeIndexValue> populator=new ParallelNativeIndexPopulator<>(baseIndexFile,layout,mockPartSupplier(partPopulators,this::mockNativeIndexPopulator));
  int batchCountPerThread=10;
  applyBatchesInParallel(populator,batchCountPerThread);
  applyUpdates(populator,next);
  applyBatchesInParallel(populator,batchCountPerThread);
  applyUpdates(populator,next);
  applyBatchesInParallel(populator,batchCountPerThread);
  assertEquals(THREADS,partPopulators.size());
  for (  Thread thread : partPopulators.keySet()) {
    if (thread != mainThread) {
      NativeIndexPopulator partPopulator=partPopulators.get(thread);
      verify(partPopulator,times(batchCountPerThread * 3)).add(anyCollection());
      CountingIndexUpdater updater=(CountingIndexUpdater)partPopulator.newPopulatingUpdater();
      assertEquals(10,updater.count);
    }
  }
}
