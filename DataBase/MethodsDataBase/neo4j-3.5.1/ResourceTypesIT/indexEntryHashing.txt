@Test public void indexEntryHashing(){
  int collisions=0;
  int labelIdCount=50;
  int propertyKeyIdCount=50;
  int objectCount=10000;
  MutableLongLongMap map=new LongLongHashMap(50 * 50 * 10000);
  String[] values=precomputeValues(objectCount);
  for (int labelId=0; labelId < labelIdCount; labelId++) {
    for (int propertyKeyId=0; propertyKeyId < propertyKeyIdCount; propertyKeyId++) {
      for (int objectId=0; objectId < objectCount; objectId++) {
        String object=values[objectId];
        long resourceId=indexEntryResourceId(labelId,exact(propertyKeyId,object));
        long newValue=packValue(labelId,propertyKeyId,objectId);
        final boolean hasOldValue=map.containsKey(resourceId);
        final long oldValue=map.get(resourceId);
        map.put(resourceId,newValue);
        if (hasOldValue) {
          System.out.printf("Collision on %s: %s ~= %s%n",resourceId,toValueString(newValue),toValueString(oldValue));
          collisions++;
          if (collisions > 100) {
            fail("This hashing is terrible!");
          }
        }
      }
    }
  }
  assertThat(collisions,is(0));
}
