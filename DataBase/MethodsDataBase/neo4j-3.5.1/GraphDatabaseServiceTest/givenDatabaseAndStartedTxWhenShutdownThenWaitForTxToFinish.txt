@Test public void givenDatabaseAndStartedTxWhenShutdownThenWaitForTxToFinish() throws Exception {
  final GraphDatabaseService db=getTemporaryDatabase();
  Barrier.Control barrier=new Barrier.Control();
  Future<Object> txFuture=t2.execute(state -> {
    try (Transaction tx=db.beginTx()){
      barrier.reached();
      db.createNode();
      tx.success();
    }
     return null;
  }
);
  barrier.await();
  Future<Object> shutdownFuture=t3.execute(state -> {
    db.shutdown();
    return null;
  }
);
  t3.get().waitUntilWaiting(location -> location.isAt(DatabaseAvailability.class,"stop"));
  barrier.release();
  try {
    txFuture.get();
  }
 catch (  ExecutionException e) {
  }
  shutdownFuture.get();
}
