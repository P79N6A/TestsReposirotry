@Test public void concurrentIndexPopulationAndInsertsShouldNotProduceDuplicates() throws Exception {
  Config config=Config.defaults();
  GraphDatabaseService db=newEmbeddedGraphDatabaseWithSlowJobScheduler(config);
  try {
    try (Transaction tx=db.beginTx()){
      db.schema().indexFor(label(LABEL)).on(KEY).create();
      tx.success();
    }
     Node node;
    try (Transaction tx=db.beginTx()){
      node=db.createNode(label(LABEL));
      node.setProperty(KEY,VALUE);
      tx.success();
    }
     try (Transaction tx=db.beginTx()){
      db.schema().awaitIndexesOnline(1,MINUTES);
      tx.success();
    }
     try (Transaction tx=db.beginTx()){
      KernelTransaction ktx=((GraphDatabaseAPI)db).getDependencyResolver().resolveDependency(ThreadToStatementContextBridge.class).getKernelTransactionBoundToThisThread(true);
      IndexReference index=ktx.schemaRead().index(ktx.tokenRead().nodeLabel(LABEL),ktx.tokenRead().propertyKey(KEY));
      NodeValueIndexCursor cursor=ktx.cursors().allocateNodeValueIndexCursor();
      ktx.dataRead().nodeIndexSeek(index,cursor,IndexOrder.NONE,false,IndexQuery.exact(1,VALUE));
      assertTrue(cursor.next());
      assertEquals(node.getId(),cursor.nodeReference());
      assertFalse(cursor.next());
      tx.success();
    }
   }
  finally {
    db.shutdown();
  }
}
