@Test void shouldNotContinueToCallNextOnHasNextFalse(){
  AtomicInteger count=new AtomicInteger(2);
  PrimitiveIntIterator iterator=new PrimitiveIntCollections.PrimitiveIntBaseIterator(){
    @Override protected boolean fetchNext(){
      return count.decrementAndGet() >= 0 && next(count.get());
    }
  }
;
  assertTrue(iterator.hasNext());
  assertTrue(iterator.hasNext());
  assertEquals(1L,iterator.next());
  assertTrue(iterator.hasNext());
  assertTrue(iterator.hasNext());
  assertEquals(0L,iterator.next());
  assertFalse(iterator.hasNext());
  assertFalse(iterator.hasNext());
  assertEquals(-1L,count.get());
}
