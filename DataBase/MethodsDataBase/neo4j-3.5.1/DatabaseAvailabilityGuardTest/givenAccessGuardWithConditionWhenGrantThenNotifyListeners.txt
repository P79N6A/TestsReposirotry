@Test public void givenAccessGuardWithConditionWhenGrantThenNotifyListeners(){
  Log log=mock(Log.class);
  final DatabaseAvailabilityGuard databaseAvailabilityGuard=getDatabaseAvailabilityGuard(clock,log);
  databaseAvailabilityGuard.require(REQUIREMENT_1);
  final AtomicBoolean notified=new AtomicBoolean();
  AvailabilityListener availabilityListener=new AvailabilityListener(){
    @Override public void available(){
      notified.set(true);
    }
    @Override public void unavailable(){
    }
  }
;
  databaseAvailabilityGuard.addListener(availabilityListener);
  databaseAvailabilityGuard.fulfill(REQUIREMENT_1);
  assertThat(notified.get(),equalTo(true));
}
