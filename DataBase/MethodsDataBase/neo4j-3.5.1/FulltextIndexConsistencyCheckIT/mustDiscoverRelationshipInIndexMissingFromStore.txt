@Ignore("Turns out that this is not something that the consistency checker actually looks for, currently. " + "The test is disabled until the consistency checker is extended with checks that will discover this sort of inconsistency.") @Test public void mustDiscoverRelationshipInIndexMissingFromStore() throws Exception {
  GraphDatabaseService db=createDatabase();
  try (Transaction tx=db.beginTx()){
    db.execute(format(RELATIONSHIP_CREATE,"rels",array("REL"),array("prop"))).close();
    tx.success();
  }
   long relId;
  try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(1,TimeUnit.MINUTES);
    Node node=db.createNode();
    Relationship rel=node.createRelationshipTo(node,RelationshipType.withName("REL"));
    relId=rel.getId();
    rel.setProperty("prop","value");
    tx.success();
  }
   NeoStores stores=getNeoStores(db);
  RelationshipRecord record=stores.getRelationshipStore().newRecord();
  record=stores.getRelationshipStore().getRecord(relId,record,RecordLoad.NORMAL);
  long propId=record.getNextProp();
  record.setNextProp(AbstractBaseRecord.NO_ID);
  stores.getRelationshipStore().updateRecord(record);
  PropertyRecord propRecord=stores.getPropertyStore().getRecord(propId,stores.getPropertyStore().newRecord(),RecordLoad.NORMAL);
  propRecord.setInUse(false);
  stores.getPropertyStore().updateRecord(propRecord);
  db.shutdown();
  ConsistencyCheckService.Result result=checkConsistency();
  assertFalse(result.isSuccessful());
}
