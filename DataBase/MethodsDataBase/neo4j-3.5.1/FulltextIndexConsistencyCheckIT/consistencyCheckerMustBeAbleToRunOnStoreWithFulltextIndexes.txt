@Test public void consistencyCheckerMustBeAbleToRunOnStoreWithFulltextIndexes() throws Exception {
  GraphDatabaseService db=createDatabase();
  Label[] labels=IntStream.range(1,7).mapToObj(i -> Label.label("LABEL" + i)).toArray(Label[]::new);
  RelationshipType[] relTypes=IntStream.range(1,5).mapToObj(i -> RelationshipType.withName("REL" + i)).toArray(RelationshipType[]::new);
  String[] propertyKeys=IntStream.range(1,7).mapToObj(i -> "PROP" + i).toArray(String[]::new);
  RandomValues randomValues=RandomValues.create();
  try (Transaction tx=db.beginTx()){
    ThreadLocalRandom rng=ThreadLocalRandom.current();
    int nodeCount=1000;
    List<Node> nodes=new ArrayList<>(nodeCount);
    for (int i=0; i < nodeCount; i++) {
      Label[] nodeLabels=rng.ints(rng.nextInt(labels.length),0,labels.length).distinct().mapToObj(x -> labels[x]).toArray(Label[]::new);
      Node node=db.createNode(nodeLabels);
      Stream.of(propertyKeys).forEach(p -> node.setProperty(p,rng.nextBoolean() ? p : randomValues.nextValue().asObject()));
      nodes.add(node);
      int localRelCount=Math.min(nodes.size(),5);
      rng.ints(localRelCount,0,localRelCount).distinct().mapToObj(x -> node.createRelationshipTo(nodes.get(x),relTypes[rng.nextInt(relTypes.length)])).forEach(r -> Stream.of(propertyKeys).forEach(p -> r.setProperty(p,rng.nextBoolean() ? p : randomValues.nextValue().asObject())));
    }
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    for (int i=1; i < labels.length; i++) {
      db.execute(format(NODE_CREATE,"nodes" + i,array(Arrays.stream(labels).limit(i).map(Label::name).toArray(String[]::new)),array(Arrays.copyOf(propertyKeys,i)))).close();
    }
    for (int i=1; i < relTypes.length; i++) {
      db.execute(format(RELATIONSHIP_CREATE,"rels" + i,array(Arrays.stream(relTypes).limit(i).map(RelationshipType::name).toArray(String[]::new)),array(Arrays.copyOf(propertyKeys,i)))).close();
    }
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(1,TimeUnit.MINUTES);
    tx.success();
  }
   db.shutdown();
  assertIsConsistent(checkConsistency());
}
