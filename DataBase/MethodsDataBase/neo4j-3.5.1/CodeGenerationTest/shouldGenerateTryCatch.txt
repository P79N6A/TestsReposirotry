@Test public void shouldGenerateTryCatch() throws Throwable {
  ClassHandle handle;
  try (ClassGenerator simple=generateClass("SimpleClass")){
    try (CodeBlock run=simple.generateMethod(void.class,"run",param(Runnable.class,"body"),param(Runnable.class,"catcher"))){
      run.tryCatch(body -> body.expression(invoke(run.load("body"),RUN)),handler -> handler.expression(invoke(run.load("catcher"),RUN)),param(RuntimeException.class,"E"));
    }
     handle=simple.handle();
  }
   Runnable successBody=mock(Runnable.class);
  Runnable failBody=mock(Runnable.class);
  Runnable successCatch=mock(Runnable.class);
  Runnable failCatch=mock(Runnable.class);
  RuntimeException theFailure=new RuntimeException();
  doThrow(theFailure).when(failBody).run();
  MethodHandle run=instanceMethod(handle.newInstance(),"run",Runnable.class,Runnable.class);
  run.invoke(successBody,successCatch);
  verify(successBody).run();
  verify(successCatch,never()).run();
  run.invoke(failBody,failCatch);
  InOrder orderFailure=inOrder(failBody,failCatch);
  orderFailure.verify(failBody).run();
  orderFailure.verify(failCatch).run();
}
