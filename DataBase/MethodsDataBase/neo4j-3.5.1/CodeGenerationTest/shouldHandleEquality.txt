@Test public void shouldHandleEquality() throws Throwable {
  assertTrue(compareForType(boolean.class,true,true,Expression::equal));
  assertTrue(compareForType(boolean.class,false,false,Expression::equal));
  assertFalse(compareForType(boolean.class,true,false,Expression::equal));
  assertFalse(compareForType(boolean.class,false,true,Expression::equal));
  assertTrue(compareForType(byte.class,(byte)42,(byte)42,Expression::equal));
  assertFalse(compareForType(byte.class,(byte)43,(byte)42,Expression::equal));
  assertFalse(compareForType(byte.class,(byte)42,(byte)43,Expression::equal));
  assertTrue(compareForType(short.class,(short)42,(short)42,Expression::equal));
  assertFalse(compareForType(short.class,(short)43,(short)42,Expression::equal));
  assertFalse(compareForType(short.class,(short)42,(short)43,Expression::equal));
  assertTrue(compareForType(char.class,(char)42,(char)42,Expression::equal));
  assertFalse(compareForType(char.class,(char)43,(char)42,Expression::equal));
  assertFalse(compareForType(char.class,(char)42,(char)43,Expression::equal));
  assertTrue(compareForType(int.class,42,42,Expression::equal));
  assertFalse(compareForType(int.class,43,42,Expression::equal));
  assertFalse(compareForType(int.class,42,43,Expression::equal));
  assertTrue(compareForType(long.class,42L,42L,Expression::equal));
  assertFalse(compareForType(long.class,43L,42L,Expression::equal));
  assertFalse(compareForType(long.class,42L,43L,Expression::equal));
  assertTrue(compareForType(float.class,42F,42F,Expression::equal));
  assertFalse(compareForType(float.class,43F,42F,Expression::equal));
  assertFalse(compareForType(float.class,42F,43F,Expression::equal));
  assertTrue(compareForType(double.class,42D,42D,Expression::equal));
  assertFalse(compareForType(double.class,43D,42D,Expression::equal));
  assertFalse(compareForType(double.class,42D,43D,Expression::equal));
  Object obj1=new Object();
  Object obj2=new Object();
  assertTrue(compareForType(Object.class,obj1,obj1,Expression::equal));
  assertFalse(compareForType(Object.class,obj1,obj2,Expression::equal));
  assertFalse(compareForType(Object.class,obj2,obj1,Expression::equal));
}
