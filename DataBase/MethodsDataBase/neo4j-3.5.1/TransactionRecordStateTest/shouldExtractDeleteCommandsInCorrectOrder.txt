@Test public void shouldExtractDeleteCommandsInCorrectOrder() throws Exception {
  NeoStores neoStores=neoStoresRule.builder().with(GraphDatabaseSettings.dense_node_threshold.name(),"1").build();
  TransactionRecordState recordState=newTransactionRecordState(neoStores);
  long nodeId1=0;
  long nodeId2=1;
  long relId1=1;
  long relId2=2;
  long relId4=10;
  recordState.nodeCreate(nodeId1);
  recordState.nodeCreate(nodeId2);
  recordState.relCreate(relId1,0,nodeId1,nodeId1);
  recordState.relCreate(relId2,0,nodeId1,nodeId1);
  recordState.relCreate(relId4,1,nodeId1,nodeId1);
  recordState.nodeAddProperty(nodeId1,0,value1);
  BatchTransactionApplier applier=new NeoStoreBatchTransactionApplier(neoStores,mock(CacheAccessBackDoor.class),LockService.NO_LOCK_SERVICE);
  apply(applier,transaction(recordState));
  recordState=newTransactionRecordState(neoStores);
  recordState.relDelete(relId4);
  recordState.nodeDelete(nodeId2);
  recordState.nodeRemoveProperty(nodeId1,0);
  Collection<StorageCommand> commands=new ArrayList<>();
  recordState.extractCommands(commands);
  Iterator<StorageCommand> commandIterator=commands.iterator();
  assertCommand(commandIterator.next(),Command.RelationshipGroupCommand.class);
  assertCommand(commandIterator.next(),NodeCommand.class);
  assertCommand(commandIterator.next(),PropertyCommand.class);
  assertCommand(commandIterator.next(),RelationshipCommand.class);
  assertCommand(commandIterator.next(),Command.RelationshipGroupCommand.class);
  assertCommand(commandIterator.next(),NodeCommand.class);
  assertFalse(commandIterator.hasNext());
}
