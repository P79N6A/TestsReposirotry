@Test public void shouldSeeAddedPropertyFromExistingRelationshipWithoutPropertiesInTransaction() throws Exception {
  long relationshipId;
  String propKey="prop1";
  try (Transaction tx=beginTransaction()){
    Write write=tx.dataWrite();
    relationshipId=write.relationshipCreate(write.nodeCreate(),tx.tokenWrite().relationshipTypeGetOrCreateForName("R"),write.nodeCreate());
    tx.success();
  }
   try (Transaction tx=beginTransaction()){
    int propToken=tx.token().propertyKeyGetOrCreateForName(propKey);
    assertEquals(tx.dataWrite().relationshipSetProperty(relationshipId,propToken,stringValue("hello")),NO_VALUE);
    try (RelationshipScanCursor relationship=tx.cursors().allocateRelationshipScanCursor();PropertyCursor property=tx.cursors().allocatePropertyCursor()){
      tx.dataRead().singleRelationship(relationshipId,relationship);
      assertTrue("should access relationship",relationship.next());
      relationship.properties(property);
      assertTrue(property.next());
      assertEquals(propToken,property.propertyKey());
      assertEquals(property.propertyValue(),stringValue("hello"));
      assertFalse("should only find one properties",property.next());
      assertFalse("should only find one relationship",relationship.next());
    }
     tx.success();
  }
   try (org.neo4j.graphdb.Transaction ignored=graphDb.beginTx()){
    assertThat(graphDb.getRelationshipById(relationshipId).getProperty(propKey),equalTo("hello"));
  }
 }
