@Test public void recoverFirstCorruptedTransactionAfterCheckpointInLastLogFile() throws IOException {
  GraphDatabaseAPI database=(GraphDatabaseAPI)databaseFactory.newEmbeddedDatabase(storeDir);
  generateTransactionsAndRotate(database,5);
  database.shutdown();
  File highestLogFile=logFiles.getHighestLogFile();
  long originalFileLength=highestLogFile.length();
  addCorruptedCommandsToLastLogFile();
  long modifiedFileLength=highestLogFile.length();
  assertThat(modifiedFileLength,greaterThan(originalFileLength));
  database=startDbNoRecoveryOfCorruptedLogs();
  database.shutdown();
  logProvider.assertContainsMessageContaining("Fail to read transaction log version 5.");
  logProvider.assertContainsMessageContaining("Fail to read first transaction of log version 5.");
  logProvider.assertContainsMessageContaining("Recovery required from position LogPosition{logVersion=5, byteOffset=593}");
  logProvider.assertContainsMessageContaining("Fail to recover all transactions. " + "Any later transactions after position LogPosition{logVersion=5, byteOffset=593} " + "are unreadable and will be truncated.");
  assertEquals(5,logFiles.getHighestLogVersion());
  ObjectLongMap<Class> logEntriesDistribution=getLogEntriesDistribution(logFiles);
  assertEquals(1,logEntriesDistribution.get(CheckPoint.class));
  assertEquals(originalFileLength,highestLogFile.length());
}
