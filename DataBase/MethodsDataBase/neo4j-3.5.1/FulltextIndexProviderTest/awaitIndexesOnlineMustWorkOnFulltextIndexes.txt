@Test public void awaitIndexesOnlineMustWorkOnFulltextIndexes(){
  String prop1="prop1";
  String prop2="prop2";
  String prop3="prop3";
  String val1="foo foo";
  String val2="bar bar";
  String val3="baz baz";
  Label label1=Label.label("FirstLabel");
  Label label2=Label.label("SecondLabel");
  Label label3=Label.label("ThirdLabel");
  RelationshipType relType1=RelationshipType.withName("FirstRelType");
  RelationshipType relType2=RelationshipType.withName("SecondRelType");
  RelationshipType relType3=RelationshipType.withName("ThirdRelType");
  LongHashSet nodes1=new LongHashSet();
  LongHashSet nodes2=new LongHashSet();
  LongHashSet nodes3=new LongHashSet();
  LongHashSet rels1=new LongHashSet();
  LongHashSet rels2=new LongHashSet();
  LongHashSet rels3=new LongHashSet();
  try (Transaction tx=db.beginTx()){
    for (int i=0; i < 100; i++) {
      Node node1=db.createNode(label1);
      node1.setProperty(prop1,val1);
      nodes1.add(node1.getId());
      Relationship rel1=node1.createRelationshipTo(node1,relType1);
      rel1.setProperty(prop1,val1);
      rels1.add(rel1.getId());
      Node node2=db.createNode(label2);
      node2.setProperty(prop2,val2);
      nodes2.add(node2.getId());
      Relationship rel2=node1.createRelationshipTo(node2,relType2);
      rel2.setProperty(prop2,val2);
      rels2.add(rel2.getId());
      Node node3=db.createNode(label3);
      node3.setProperty(prop3,val3);
      nodes3.add(node3.getId());
      Relationship rel3=node1.createRelationshipTo(node3,relType3);
      rel3.setProperty(prop3,val3);
      rels3.add(rel3.getId());
    }
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.execute(format(NODE_CREATE,"nodeIndex",array(label1.name(),label2.name(),label3.name()),array(prop1,prop2,prop3))).close();
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(10,TimeUnit.SECONDS);
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    assertQueryFindsIds(db,true,"nodeIndex","foo",nodes1);
    assertQueryFindsIds(db,true,"nodeIndex","bar",nodes2);
    assertQueryFindsIds(db,true,"nodeIndex","baz",nodes3);
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.execute(format(RELATIONSHIP_CREATE,"relIndex",array(relType1.name(),relType2.name(),relType3.name()),array(prop1,prop2,prop3))).close();
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(10,TimeUnit.SECONDS);
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    assertQueryFindsIds(db,false,"relIndex","foo",rels1);
    assertQueryFindsIds(db,false,"relIndex","bar",rels2);
    assertQueryFindsIds(db,false,"relIndex","baz",rels3);
    tx.success();
  }
 }
