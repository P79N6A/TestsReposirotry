@Test public void multiTokenFulltextIndexesMustShowUpInSchemaGetIndexes(){
  try (Transaction tx=db.beginTx()){
    db.execute(format(NODE_CREATE,"nodeIndex",array("Label1","Label2"),array("prop1","prop2"))).close();
    db.execute(format(RELATIONSHIP_CREATE,"relIndex",array("RelType1","RelType2"),array("prop1","prop2"))).close();
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    for (    IndexDefinition index : db.schema().getIndexes()) {
      assertFalse(index.isConstraintIndex());
      assertTrue(index.isMultiTokenIndex());
      assertTrue(index.isCompositeIndex());
      if (index.isNodeIndex()) {
        assertFalse(index.isRelationshipIndex());
        assertThat(index.getLabels(),containsInAnyOrder(Label.label("Label1"),Label.label("Label2")));
        try {
          index.getLabel();
          fail("index.getLabel() on multi-token IndexDefinition should have thrown.");
        }
 catch (        IllegalStateException ignore) {
        }
        try {
          index.getRelationshipTypes();
          fail("index.getRelationshipTypes() on node IndexDefinition should have thrown.");
        }
 catch (        IllegalStateException ignore) {
        }
      }
 else {
        assertTrue(index.isRelationshipIndex());
        assertThat(index.getRelationshipTypes(),containsInAnyOrder(RelationshipType.withName("RelType1"),RelationshipType.withName("RelType2")));
        try {
          index.getRelationshipType();
          fail("index.getRelationshipType() on multi-token IndexDefinition should have thrown.");
        }
 catch (        IllegalStateException ignore) {
        }
        try {
          index.getLabels();
          fail("index.getLabels() on node IndexDefinition should have thrown.");
        }
 catch (        IllegalStateException ignore) {
        }
      }
    }
    tx.success();
  }
 }
