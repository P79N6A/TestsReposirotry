@Test public void updatesToEventuallyConsistentIndexMustEventuallyBecomeVisible(){
  String value="bla bla";
  db=createDatabase();
  try (Transaction tx=db.beginTx()){
    db.execute(format(NODE_CREATE,"node",array(LABEL.name()),array(PROP) + EVENTUALLY_CONSISTENT));
    db.execute(format(RELATIONSHIP_CREATE,"rel",array(REL.name()),array(PROP) + EVENTUALLY_CONSISTENT));
    tx.success();
  }
   int entityCount=200;
  LongHashSet nodeIds=new LongHashSet();
  LongHashSet relIds=new LongHashSet();
  try (Transaction tx=db.beginTx()){
    for (int i=0; i < entityCount; i++) {
      Node node=db.createNode(LABEL);
      node.setProperty(PROP,value);
      Relationship rel=node.createRelationshipTo(node,REL);
      rel.setProperty(PROP,value);
      nodeIds.add(node.getId());
      relIds.add(rel.getId());
    }
    tx.success();
  }
   long deadline=System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(20);
  boolean success=false;
  do {
    try {
      assertQueryFindsIds(db,true,"node","bla",nodeIds);
      assertQueryFindsIds(db,false,"rel","bla",relIds);
      success=true;
    }
 catch (    Throwable throwable) {
      if (deadline <= System.currentTimeMillis()) {
        throw throwable;
      }
    }
  }
 while (!success);
}
