@Test public void fulltextIndexMustIgnoreNonStringPropertiesForUpdate(){
  db=createDatabase();
  Label label=LABEL;
  try (Transaction tx=db.beginTx()){
    db.execute(format(NODE_CREATE,"nodes",array(label.name()),array(PROP))).close();
    createSimpleRelationshipIndex();
    tx.success();
  }
   awaitIndexesOnline();
  List<Value> values=generateRandomNonStringValues();
  try (Transaction tx=db.beginTx()){
    for (    Value value : values) {
      Node node=db.createNode(label);
      Object propertyValue=value.asObject();
      node.setProperty(PROP,propertyValue);
      node.createRelationshipTo(node,REL).setProperty(PROP,propertyValue);
    }
    tx.success();
  }
   for (  Value value : values) {
    String fulltextQuery=quoteValueForQuery(value);
    String cypherQuery=format(QUERY_NODES,"nodes",fulltextQuery);
    Result nodes;
    try {
      nodes=db.execute(cypherQuery);
    }
 catch (    QueryExecutionException e) {
      throw new AssertionError("Failed to execute query: " + cypherQuery + " based on value "+ value.prettyPrint(),e);
    }
    if (nodes.hasNext()) {
      fail("did not expect to find any nodes, but found at least: " + nodes.next());
    }
    nodes.close();
    Result relationships=db.execute(format(QUERY_RELS,"rels",fulltextQuery));
    if (relationships.hasNext()) {
      fail("did not expect to find any relationships, but found at least: " + relationships.next());
    }
    relationships.close();
  }
}
