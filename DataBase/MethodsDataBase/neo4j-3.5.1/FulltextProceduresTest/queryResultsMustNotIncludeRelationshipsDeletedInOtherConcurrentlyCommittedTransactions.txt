@Test public void queryResultsMustNotIncludeRelationshipsDeletedInOtherConcurrentlyCommittedTransactions() throws Exception {
  db=createDatabase();
  try (Transaction tx=db.beginTx()){
    createSimpleRelationshipIndex();
    tx.success();
  }
   long relIdA;
  long relIdB;
  try (Transaction tx=db.beginTx()){
    awaitIndexesOnline();
    Node node=db.createNode();
    Relationship relA=node.createRelationshipTo(node,REL);
    relA.setProperty(PROP,"value");
    relIdA=relA.getId();
    Relationship relB=node.createRelationshipTo(node,REL);
    relB.setProperty(PROP,"value");
    relIdB=relB.getId();
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    try (Result result=db.execute(format(QUERY_RELS,"rels","value"))){
      ThreadTestUtils.forkFuture(() -> {
        try (Transaction forkedTx=db.beginTx()){
          db.getRelationshipById(relIdA).delete();
          db.getRelationshipById(relIdB).delete();
          forkedTx.success();
        }
         return null;
      }
).get();
      assertThat(result.stream().count(),is(0L));
    }
     tx.success();
  }
 }
