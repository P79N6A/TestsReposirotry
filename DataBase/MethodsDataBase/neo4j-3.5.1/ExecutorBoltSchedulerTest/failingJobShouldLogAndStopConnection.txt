@Test public void failingJobShouldLogAndStopConnection() throws Throwable {
  AtomicBoolean stopped=new AtomicBoolean();
  String id=UUID.randomUUID().toString();
  BoltConnection connection=newConnection(id);
  doThrow(new RuntimeException("some unexpected error")).when(connection).processNextBatch();
  doAnswer(inv -> stopped.getAndSet(true)).when(connection).stop();
  boltScheduler.start();
  boltScheduler.created(connection);
  boltScheduler.enqueued(connection,Jobs.noop());
  Predicates.await(() -> stopped.get(),1,MINUTES);
  assertFalse(boltScheduler.isActive(connection));
  verify(connection).processNextBatch();
  verify(connection).stop();
  logProvider.assertExactly(AssertableLogProvider.inLog(containsString(BoltServer.class.getPackage().getName())).error(containsString("Unexpected error during job scheduling for session"),matchesExceptionMessage(containsString("some unexpected error"))));
}
