@Test public void destroyedShouldCancelActiveWorkItem() throws Throwable {
  AtomicInteger processNextBatchCount=new AtomicInteger();
  String id=UUID.randomUUID().toString();
  BoltConnection connection=newConnection(id);
  AtomicBoolean exitCondition=new AtomicBoolean();
  when(connection.processNextBatch()).thenAnswer(inv -> {
    processNextBatchCount.incrementAndGet();
    return awaitExit(exitCondition);
  }
);
  boltScheduler.start();
  boltScheduler.created(connection);
  boltScheduler.enqueued(connection,Jobs.noop());
  Predicates.await(() -> processNextBatchCount.get() > 0,1,MINUTES);
  boltScheduler.closed(connection);
  Predicates.await(() -> !boltScheduler.isActive(connection),1,MINUTES);
  assertFalse(boltScheduler.isActive(connection));
  assertEquals(1,processNextBatchCount.get());
  exitCondition.set(true);
}
