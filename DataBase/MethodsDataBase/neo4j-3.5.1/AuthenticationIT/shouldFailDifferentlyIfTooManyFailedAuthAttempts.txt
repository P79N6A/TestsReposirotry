@Test public void shouldFailDifferentlyIfTooManyFailedAuthAttempts() throws Exception {
  final long timeout=System.currentTimeMillis() + 60_000;
  FailureMessage failureMessage=null;
  while (failureMessage == null) {
    if (System.currentTimeMillis() > timeout) {
      fail("Timed out waiting for the authentication failure to occur.");
    }
    ExecutorService executor=Executors.newFixedThreadPool(10);
    List<CompletableFuture<FailureMessage>> futures=new ArrayList<>();
    for (int i=0; i < 10; i++) {
      futures.add(CompletableFuture.supplyAsync(this::collectAuthFailureOnFailedAuth,executor));
    }
    try {
      CompletableFuture.allOf(futures.toArray(new CompletableFuture[0])).get(30,SECONDS);
      for (int i=0; i < futures.size(); i++) {
        FailureMessage recordedMessage=futures.get(i).get();
        if (recordedMessage != null) {
          failureMessage=recordedMessage;
          break;
        }
      }
    }
 catch (    TimeoutException ex) {
    }
 finally {
      executor.shutdown();
    }
  }
  assertThat(failureMessage.status(),equalTo(Status.Security.AuthenticationRateLimit));
  assertThat(failureMessage.message(),containsString("The client has provided incorrect authentication details too many times in a row."));
}
