@Test public void shouldFindNodeWithString() throws Exception {
  IndexReference index;
  try (KernelTransactionImplementation tx=getKernelTransaction()){
    SchemaDescriptor descriptor=fulltextAdapter.schemaFor(NODE,new String[]{LABEL.name()},settings,PROP);
    index=tx.schemaWrite().indexCreate(descriptor,FulltextIndexProviderFactory.DESCRIPTOR.name(),Optional.of(NODE_INDEX_NAME));
    tx.success();
  }
   await(index);
  long firstID;
  long secondID;
  try (Transaction tx=db.beginTx()){
    firstID=createNodeIndexableByPropertyValue(LABEL,"Hello. Hello again.");
    secondID=createNodeIndexableByPropertyValue(LABEL,"A zebroid (also zedonk, zorse, zebra mule, zonkey, and zebmule) is the offspring of any " + "cross between a zebra and any other equine: essentially, a zebra hybrid.");
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    KernelTransaction ktx=kernelTransaction(tx);
    assertQueryFindsIds(ktx,NODE_INDEX_NAME,"hello",firstID);
    assertQueryFindsIds(ktx,NODE_INDEX_NAME,"zebra",secondID);
    assertQueryFindsIds(ktx,NODE_INDEX_NAME,"zedonk",secondID);
    assertQueryFindsIds(ktx,NODE_INDEX_NAME,"cross",secondID);
  }
 }
