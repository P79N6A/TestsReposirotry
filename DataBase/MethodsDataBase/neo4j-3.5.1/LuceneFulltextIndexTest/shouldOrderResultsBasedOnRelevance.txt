@Test public void shouldOrderResultsBasedOnRelevance() throws Exception {
  IndexReference index;
  try (KernelTransactionImplementation tx=getKernelTransaction()){
    SchemaDescriptor descriptor=fulltextAdapter.schemaFor(NODE,new String[]{LABEL.name()},settings,"first","last");
    index=tx.schemaWrite().indexCreate(descriptor,FulltextIndexProviderFactory.DESCRIPTOR.name(),Optional.of(NODE_INDEX_NAME));
    tx.success();
  }
   await(index);
  long firstID;
  long secondID;
  long thirdID;
  long fourthID;
  try (Transaction tx=db.beginTx()){
    firstID=db.createNode(LABEL).getId();
    secondID=db.createNode(LABEL).getId();
    thirdID=db.createNode(LABEL).getId();
    fourthID=db.createNode(LABEL).getId();
    setNodeProp(firstID,"first","Full");
    setNodeProp(firstID,"last","Hanks");
    setNodeProp(secondID,"first","Tom");
    setNodeProp(secondID,"last","Hunk");
    setNodeProp(thirdID,"first","Tom");
    setNodeProp(thirdID,"last","Hanks");
    setNodeProp(fourthID,"first","Tom Hanks");
    setNodeProp(fourthID,"last","Tom Hanks");
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    KernelTransaction ktx=kernelTransaction(tx);
    assertQueryFindsIdsInOrder(ktx,NODE_INDEX_NAME,"Tom Hanks",fourthID,thirdID,firstID,secondID);
  }
 }
