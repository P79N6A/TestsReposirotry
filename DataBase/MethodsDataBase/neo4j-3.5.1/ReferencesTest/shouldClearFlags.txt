@Test public void shouldClearFlags(){
  ThreadLocalRandom random=ThreadLocalRandom.current();
  for (int i=0; i < 1000; i++) {
    long reference=random.nextLong(MAX_ID_LIMIT);
    int token=random.nextInt(Integer.MAX_VALUE);
    assertThat(clearEncoding(RelationshipReferenceEncoding.encodeGroup(reference)),equalTo(reference));
    assertThat(clearEncoding(RelationshipReferenceEncoding.encodeForFiltering(reference)),equalTo(reference));
    assertThat(clearEncoding(RelationshipReferenceEncoding.encodeForTxStateFiltering(reference)),equalTo(reference));
    assertThat(clearEncoding(RelationshipReferenceEncoding.encodeNoIncomingRels(token)),equalTo((long)token));
    assertThat(clearEncoding(RelationshipReferenceEncoding.encodeNoOutgoingRels(token)),equalTo((long)token));
    assertThat(clearEncoding(RelationshipReferenceEncoding.encodeNoLoopRels(token)),equalTo((long)token));
    assertThat(clearEncoding(GroupReferenceEncoding.encodeRelationship(reference)),equalTo(reference));
  }
}
