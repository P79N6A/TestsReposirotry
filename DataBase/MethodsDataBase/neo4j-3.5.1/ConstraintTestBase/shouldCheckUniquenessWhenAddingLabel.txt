@Test public void shouldCheckUniquenessWhenAddingLabel() throws Exception {
  long nodeConflicting, nodeNotConflicting;
  addConstraints("FOO","prop");
  try (org.neo4j.graphdb.Transaction tx=graphDb.beginTx()){
    Node conflict=graphDb.createNode();
    conflict.setProperty("prop",1337);
    nodeConflicting=conflict.getId();
    Node ok=graphDb.createNode();
    ok.setProperty("prop",42);
    nodeNotConflicting=ok.getId();
    Node existing=graphDb.createNode();
    existing.addLabel(Label.label("FOO"));
    existing.setProperty("prop",1337);
    tx.success();
  }
   int label;
  try (Transaction tx=beginTransaction()){
    label=tx.tokenWrite().labelGetOrCreateForName("FOO");
    assertTrue(tx.dataWrite().nodeAddLabel(nodeNotConflicting,label));
    try {
      tx.dataWrite().nodeAddLabel(nodeConflicting,label);
      fail();
    }
 catch (    ConstraintValidationException e) {
    }
    tx.success();
  }
   try (Transaction tx=beginTransaction();NodeCursor nodeCursor=tx.cursors().allocateNodeCursor()){
    tx.dataRead().singleNode(nodeNotConflicting,nodeCursor);
    assertTrue(nodeCursor.next());
    assertTrue(nodeCursor.labels().contains(label));
    tx.dataRead().singleNode(nodeConflicting,nodeCursor);
    assertTrue(nodeCursor.next());
    assertFalse(nodeCursor.labels().contains(label));
  }
 }
