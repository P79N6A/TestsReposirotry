@Test public void shouldHandleRemoveEntireTree() throws Exception {
  try (GBPTree<KEY,VALUE> index=createIndex()){
    int numberOfNodes=200_000;
    try (Writer<KEY,VALUE> writer=index.writer()){
      for (int i=0; i < numberOfNodes; i++) {
        writer.put(key(i),value(i));
      }
    }
     BitSet removed=new BitSet();
    try (Writer<KEY,VALUE> writer=index.writer()){
      for (int i=0; i < numberOfNodes - numberOfNodes / 10; i++) {
        int candidate;
        do {
          candidate=random.nextInt(max(1,random.nextInt(numberOfNodes)));
        }
 while (removed.get(candidate));
        removed.set(candidate);
        writer.remove(key(candidate));
      }
    }
     int next=0;
    try (Writer<KEY,VALUE> writer=index.writer()){
      for (int i=0; i < numberOfNodes / 10; i++) {
        next=removed.nextClearBit(next);
        removed.set(next);
        writer.remove(key(next));
      }
    }
     try (RawCursor<Hit<KEY,VALUE>,IOException> seek=index.seek(key(0),key(numberOfNodes))){
      assertFalse(seek.next());
    }
     index.consistencyCheck();
  }
 }
