@Test public void shouldNotObtainLockWhenStoreAlreadyInUse() throws Exception {
  FileSystemAbstraction fileSystemAbstraction=new DelegatingFileSystemAbstraction(fileSystemRule.get()){
    @Override public boolean fileExists(    File file){
      return false;
    }
    @Override public StoreChannel open(    File fileName,    OpenMode openMode) throws IOException {
      return new DelegatingStoreChannel(super.open(fileName,openMode)){
        @Override public FileLock tryLock(){
          return null;
        }
      }
;
    }
  }
;
  try (StoreLocker storeLocker=new StoreLocker(fileSystemAbstraction,target.storeLayout())){
    storeLocker.checkLock();
    fail();
  }
 catch (  StoreLockException e) {
    assertThat(e.getMessage(),containsString("Store and its lock file has been locked by another process"));
  }
}
