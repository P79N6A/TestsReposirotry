@Test public void shouldNotObtainLockWhenUnableToOpenLockFile() throws Exception {
  FileSystemAbstraction fileSystemAbstraction=new DelegatingFileSystemAbstraction(fileSystemRule.get()){
    @Override public StoreChannel open(    File fileName,    OpenMode openMode) throws IOException {
      throw new IOException("cannot open lock file");
    }
    @Override public boolean fileExists(    File file){
      return false;
    }
  }
;
  StoreLayout storeLayout=target.storeLayout();
  try (StoreLocker storeLocker=new StoreLocker(fileSystemAbstraction,storeLayout)){
    storeLocker.checkLock();
    fail();
  }
 catch (  StoreLockException e) {
    String msg=format("Unable to obtain lock on store lock file: %s. " + "Please ensure no other process is using this database, and that the " + "directory is writable (required even for read-only access)",storeLayout.storeLockFile());
    assertThat(e.getMessage(),is(msg));
  }
}
