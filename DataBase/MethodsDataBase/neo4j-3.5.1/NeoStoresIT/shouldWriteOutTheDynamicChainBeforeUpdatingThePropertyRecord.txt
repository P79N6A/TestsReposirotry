@Test public void shouldWriteOutTheDynamicChainBeforeUpdatingThePropertyRecord() throws Throwable {
  Race race=new Race();
  long[] latestNodeId=new long[1];
  AtomicLong writes=new AtomicLong();
  AtomicLong reads=new AtomicLong();
  long endTime=currentTimeMillis() + SECONDS.toMillis(2);
  race.withEndCondition(() -> (writes.get() > 100 && reads.get() > 10_000) || currentTimeMillis() > endTime);
  race.addContestant(() -> {
    try (Transaction tx=db.beginTx()){
      Node node=db.createNode();
      latestNodeId[0]=node.getId();
      node.setProperty("largeProperty",LONG_STRING_VALUE);
      tx.success();
    }
     writes.incrementAndGet();
  }
);
  race.addContestant(() -> {
    try (Transaction tx=db.getGraphDatabaseAPI().beginTx()){
      Node node=db.getGraphDatabaseAPI().getNodeById(latestNodeId[0]);
      for (      String propertyKey : node.getPropertyKeys()) {
        node.getProperty(propertyKey);
      }
      tx.success();
    }
 catch (    NotFoundException e) {
    }
    reads.incrementAndGet();
  }
);
  race.go();
}
