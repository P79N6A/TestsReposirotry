@Test public void shouldBlockUntilTheIndexIsOnline() throws SchemaRuleNotFoundException, IndexNotFoundKernelException, InterruptedException {
  when(tokenRead.nodeLabel(anyString())).thenReturn(0);
  when(tokenRead.propertyKey(anyString())).thenReturn(0);
  when(schemaRead.index(anyInt(),any())).thenReturn(anyIndex);
  AtomicReference<InternalIndexState> state=new AtomicReference<>(POPULATING);
  when(schemaRead.indexGetState(any(IndexReference.class))).then(invocationOnMock -> state.get());
  AtomicBoolean done=new AtomicBoolean(false);
  new Thread(() -> {
    try {
      procedure.awaitIndex(":Person(name)",TIMEOUT,TIME_UNIT);
    }
 catch (    ProcedureException e) {
      throw new RuntimeException(e);
    }
    done.set(true);
  }
).start();
  assertThat(done.get(),is(false));
  state.set(ONLINE);
  assertEventually("Procedure did not return after index was online",done::get,is(true),TIMEOUT,TIME_UNIT);
}
