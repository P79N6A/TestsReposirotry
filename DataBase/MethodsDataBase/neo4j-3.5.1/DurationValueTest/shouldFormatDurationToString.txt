@Test void shouldFormatDurationToString(){
  testDurationToString(1,0,"PT1S");
  testDurationToString(-1,0,"PT-1S");
  testDurationToString(59,-500_000_000,"PT58.5S");
  testDurationToString(59,500_000_000,"PT59.5S");
  testDurationToString(60,-500_000_000,"PT59.5S");
  testDurationToString(60,500_000_000,"PT1M0.5S");
  testDurationToString(61,-500_000_000,"PT1M0.5S");
  testDurationToString(-59,500_000_000,"PT-58.5S");
  testDurationToString(-59,-500_000_000,"PT-59.5S");
  testDurationToString(-60,500_000_000,"PT-59.5S");
  testDurationToString(-60,-500_000_000,"PT-1M-0.5S");
  testDurationToString(-61,500_000_000,"PT-1M-0.5S");
  testDurationToString(-61,-500_000_000,"PT-1M-1.5S");
  testDurationToString(0,5,"PT0.000000005S");
  testDurationToString(0,-5,"PT-0.000000005S");
  testDurationToString(0,999_999_999,"PT0.999999999S");
  testDurationToString(0,-999_999_999,"PT-0.999999999S");
  testDurationToString(1,5,"PT1.000000005S");
  testDurationToString(-1,-5,"PT-1.000000005S");
  testDurationToString(1,-5,"PT0.999999995S");
  testDurationToString(-1,5,"PT-0.999999995S");
  testDurationToString(1,999999999,"PT1.999999999S");
  testDurationToString(-1,-999999999,"PT-1.999999999S");
  testDurationToString(1,-999999999,"PT0.000000001S");
  testDurationToString(-1,999999999,"PT-0.000000001S");
  testDurationToString(-78036,-143000000,"PT-21H-40M-36.143S");
}
