@Test void shouldParseDuration(){
  assertEquals(duration(14,25,18367,800_000_000),parse("+P1Y2M3W4DT5H6M7.8S"));
  assertEquals(duration(0,0,0,-100000000),parse("PT-0.1S"));
  assertEquals(duration(0,0,0,-20000000),parse("PT-0.02S"));
  assertEquals(duration(0,0,0,-3000000),parse("PT-0.003S"));
  assertEquals(duration(0,0,0,-400000),parse("PT-0.0004S"));
  assertEquals(duration(0,0,0,-50000),parse("PT-0.00005S"));
  assertEquals(duration(0,0,0,-6000),parse("PT-0.000006S"));
  assertEquals(duration(0,0,0,-700),parse("PT-0.0000007S"));
  assertEquals(duration(0,0,0,-80),parse("PT-0.00000008S"));
  assertEquals(duration(0,0,0,-9),parse("PT-0.000000009S"));
  assertEquals(duration(0,0,0,900_000_000),parse("PT0.900000000S"));
  assertEquals(duration(0,0,0,800_000_000),parse("PT0.80000000S"));
  assertEquals(duration(0,0,0,700_000_000),parse("PT0.7000000S"));
  assertEquals(duration(0,0,0,600_000_000),parse("PT0.600000S"));
  assertEquals(duration(0,0,0,500_000_000),parse("PT0.50000S"));
  assertEquals(duration(0,0,0,400_000_000),parse("PT0.4000S"));
  assertEquals(duration(0,0,0,300_000_000),parse("PT0.300S"));
  assertEquals(duration(0,0,0,200_000_000),parse("PT0.20S"));
  assertEquals(duration(0,0,0,100_000_000),parse("PT0.1S"));
  assertParsesOne("P","Y",12,0,0);
  assertParsesOne("P","M",1,0,0);
  assertParsesOne("P","W",0,7,0);
  assertParsesOne("P","D",0,1,0);
  assertParsesOne("PT","H",0,0,3600);
  assertParsesOne("PT","M",0,0,60);
  assertParsesOne("PT","S",0,0,1);
  assertEquals(duration(0,0,-1,-100_000_000),parse("PT-1,1S"));
  assertEquals(duration(10,0,0,0),parse("P1Y-2M"));
  assertEquals(duration(0,20,0,0),parse("P3W-1D"));
  assertEquals(duration(0,0,3000,0),parse("PT1H-10M"));
  assertEquals(duration(0,0,3000,0),parse("PT1H-600S"));
  assertEquals(duration(0,0,50,0),parse("PT1M-10S"));
}
