@Test public void shouldSplitCorrectly() throws Exception {
  try (GBPTree<KEY,VALUE> index=index()){
    int count=1_000;
    List<KEY> seen=new ArrayList<>(count);
    try (Writer<KEY,VALUE> writer=index.writer()){
      for (int i=0; i < count; i++) {
        KEY key;
        do {
          key=key(random.nextInt(100_000));
        }
 while (listContains(seen,key));
        VALUE value=value(i);
        writer.put(key,value);
        seen.add(key);
      }
    }
     try (RawCursor<Hit<KEY,VALUE>,IOException> cursor=index.seek(key(0),key(Long.MAX_VALUE))){
      long prev=-1;
      while (cursor.next()) {
        KEY hit=cursor.get().key();
        long hitSeed=layout.keySeed(hit);
        if (hitSeed < prev) {
          fail(hit + " smaller than prev " + prev);
        }
        prev=hitSeed;
        assertTrue(removeFromList(seen,hit));
      }
      if (!seen.isEmpty()) {
        fail("expected hits " + seen);
      }
    }
   }
 }
