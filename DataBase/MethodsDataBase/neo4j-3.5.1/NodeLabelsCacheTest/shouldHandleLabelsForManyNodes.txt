@Test public void shouldHandleLabelsForManyNodes(){
  int highLabelId=1_000;
  NodeLabelsCache cache=new NodeLabelsCache(NumberArrayFactory.AUTO_WITHOUT_PAGECACHE,highLabelId,1_000_000);
  NodeLabelsCache.Client client=cache.newClient();
  int numberOfNodes=100_000;
  int[][] expectedLabels=new int[numberOfNodes][];
  for (int i=0; i < numberOfNodes; i++) {
    int[] labels=randomLabels(random.nextInt(30) + 1,highLabelId);
    expectedLabels[i]=labels;
    cache.put(i,asLongArray(labels));
  }
  int[] forceCreationOfNewIntArray=new int[0];
  for (int i=0; i < numberOfNodes; i++) {
    int[] labels=cache.get(client,i,forceCreationOfNewIntArray);
    assertArrayEquals("For node " + i,expectedLabels[i],labels);
  }
}
