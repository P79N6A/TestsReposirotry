/** 
 * Test case for a path of length zero, with some surrounding nodes
 */
@Test public void testDijkstraMinimal2(){
  graph.makeEdge("a","b","cost",(double)1);
  graph.makeEdge("a","c","cost",(float)1);
  graph.makeEdge("a","d","cost",(long)1);
  graph.makeEdge("a","e","cost",1);
  graph.makeEdge("b","c","cost",(byte)1);
  graph.makeEdge("c","d","cost",(short)1);
  graph.makeEdge("d","e","cost",(double)1);
  graph.makeEdge("e","f","cost",(double)1);
  Dijkstra<Double> dijkstra=getDijkstra(graph,0.0,"a","a");
  assertEquals(0.0,dijkstra.getCost(),0.0);
  assertEquals(1,dijkstra.getPathAsNodes().size());
  dijkstra=getDijkstra(graph,3.0,"a","a");
  assertEquals(6.0,dijkstra.getCost(),0.0);
  assertEquals(1,dijkstra.getPathAsNodes().size());
  assertEquals(0,dijkstra.getPathAsRelationships().size());
  assertEquals(1,dijkstra.getPath().size());
  assertEquals(1,dijkstra.getPathsAsNodes().size());
}
