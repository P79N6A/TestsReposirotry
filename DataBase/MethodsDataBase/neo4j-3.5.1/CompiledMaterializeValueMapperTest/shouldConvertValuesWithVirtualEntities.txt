@Test public void shouldConvertValuesWithVirtualEntities(){
  ListValue nodeList=VirtualValues.list(nodeProxyValue,directNodeValue,nodeReference);
  ListValue expectedNodeList=VirtualValues.list(nodeProxyValue,directNodeValue,nodeProxyValue);
  ListValue relationshipList=VirtualValues.list(relationshipProxyValue,directRelationshipValue,relationshipReference);
  ListValue expectedRelationshipList=VirtualValues.list(relationshipProxyValue,directRelationshipValue,relationshipProxyValue);
  MapValue nodeMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{nodeProxyValue,directNodeValue,nodeReference});
  MapValue expectedNodeMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{nodeProxyValue,directNodeValue,nodeProxyValue});
  MapValue relationshipMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{relationshipProxyValue,directRelationshipValue,relationshipReference});
  MapValue expectedRelationshipMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{relationshipProxyValue,directRelationshipValue,relationshipProxyValue});
  ListValue nestedNodeList=VirtualValues.list(nodeList,nodeMap,nodeReference);
  ListValue expectedNestedNodeList=VirtualValues.list(expectedNodeList,expectedNodeMap,nodeProxyValue);
  ListValue nestedRelationshipList=VirtualValues.list(relationshipList,relationshipMap,relationshipReference);
  ListValue expectedNestedRelationshipList=VirtualValues.list(expectedRelationshipList,expectedRelationshipMap,relationshipProxyValue);
  MapValue nestedNodeMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{nodeList,nodeMap,nestedNodeList});
  MapValue expectedNestedNodeMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{expectedNodeList,expectedNodeMap,expectedNestedNodeList});
  MapValue nestedRelationshipMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{relationshipList,relationshipMap,nestedRelationshipList});
  MapValue expectedNestedRelationshipMap=VirtualValues.map(new String[]{"a","b","c"},new AnyValue[]{expectedRelationshipList,expectedRelationshipMap,expectedNestedRelationshipList});
  verifyConvertsValue(expectedNodeList,nodeList);
  verifyConvertsValue(expectedRelationshipList,relationshipList);
  verifyConvertsValue(expectedNodeMap,nodeMap);
  verifyConvertsValue(expectedRelationshipMap,relationshipMap);
  verifyConvertsValue(expectedNestedNodeList,nestedNodeList);
  verifyConvertsValue(expectedNestedRelationshipList,nestedRelationshipList);
  verifyConvertsValue(expectedNestedNodeMap,nestedNodeMap);
  verifyConvertsValue(expectedNestedRelationshipMap,nestedRelationshipMap);
}
