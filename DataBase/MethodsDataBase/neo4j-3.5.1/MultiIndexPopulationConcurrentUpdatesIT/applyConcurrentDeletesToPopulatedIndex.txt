@Test public void applyConcurrentDeletesToPopulatedIndex() throws Throwable {
  List<EntityUpdates> updates=new ArrayList<>(2);
  updates.add(EntityUpdates.forEntity(country1.getId()).withTokens(id(COUNTRY_LABEL)).removed(propertyId,Values.of("Sweden")).build());
  updates.add(EntityUpdates.forEntity(color2.getId()).withTokens(id(COLOR_LABEL)).removed(propertyId,Values.of("green")).build());
  launchCustomIndexPopulation(labelsNameIdMap,propertyId,new UpdateGenerator(updates));
  waitAndActivateIndexes(labelsNameIdMap,propertyId);
  try (Transaction ignored=embeddedDatabase.beginTx()){
    Integer countryLabelId=labelsNameIdMap.get(COUNTRY_LABEL);
    Integer colorLabelId=labelsNameIdMap.get(COLOR_LABEL);
    try (IndexReader indexReader=getIndexReader(propertyId,countryLabelId)){
      assertEquals("Should be removed by concurrent remove.",0,indexReader.countIndexedNodes(0,new int[]{propertyId},Values.of("Sweden")));
    }
     try (IndexReader indexReader=getIndexReader(propertyId,colorLabelId)){
      assertEquals("Should be removed by concurrent remove.",0,indexReader.countIndexedNodes(3,new int[]{propertyId},Values.of("green")));
    }
   }
 }
