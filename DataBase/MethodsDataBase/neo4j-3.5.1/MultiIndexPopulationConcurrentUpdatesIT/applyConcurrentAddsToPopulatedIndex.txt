@Test public void applyConcurrentAddsToPopulatedIndex() throws Throwable {
  List<EntityUpdates> updates=new ArrayList<>(2);
  updates.add(EntityUpdates.forEntity(otherNodes[0].getId()).withTokens(id(COUNTRY_LABEL)).added(propertyId,Values.of("Denmark")).build());
  updates.add(EntityUpdates.forEntity(otherNodes[1].getId()).withTokens(id(CAR_LABEL)).added(propertyId,Values.of("BMW")).build());
  launchCustomIndexPopulation(labelsNameIdMap,propertyId,new UpdateGenerator(updates));
  waitAndActivateIndexes(labelsNameIdMap,propertyId);
  try (Transaction ignored=embeddedDatabase.beginTx()){
    Integer countryLabelId=labelsNameIdMap.get(COUNTRY_LABEL);
    Integer carLabelId=labelsNameIdMap.get(CAR_LABEL);
    try (IndexReader indexReader=getIndexReader(propertyId,countryLabelId)){
      assertEquals("Should be added by concurrent add.",1,indexReader.countIndexedNodes(otherNodes[0].getId(),new int[]{propertyId},Values.of("Denmark")));
    }
     try (IndexReader indexReader=getIndexReader(propertyId,carLabelId)){
      assertEquals("Should be added by concurrent add.",1,indexReader.countIndexedNodes(otherNodes[1].getId(),new int[]{propertyId},Values.of("BMW")));
    }
   }
 }
