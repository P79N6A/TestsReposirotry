@Test public void shouldIndexConcurrentUpdatesWhilePopulating() throws Exception {
  Object value1="Mattias";
  Object value2="Jacob";
  Object value3="Stefan";
  Object changedValue="changed";
  long node1=createNode(map(name,value1),FIRST);
  long node2=createNode(map(name,value2),FIRST);
  long node3=createNode(map(name,value3),FIRST);
  @SuppressWarnings("UnnecessaryLocalVariable") long changeNode=node1;
  int propertyKeyId=getPropertyKeyForName(name);
  NodeChangingWriter populator=new NodeChangingWriter(changeNode,propertyKeyId,value1,changedValue,labelId);
  IndexPopulationJob job=newIndexPopulationJob(populator,new FlippableIndexProxy(),EntityType.NODE,indexDescriptor(FIRST,name,false));
  populator.setJob(job);
  job.run();
  Set<Pair<Long,Object>> expected=asSet(Pair.of(node1,value1),Pair.of(node2,value2),Pair.of(node3,value3),Pair.of(node1,changedValue));
  assertEquals(expected,populator.added);
}
