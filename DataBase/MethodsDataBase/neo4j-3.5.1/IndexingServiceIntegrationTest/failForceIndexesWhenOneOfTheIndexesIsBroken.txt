@Test public void failForceIndexesWhenOneOfTheIndexesIsBroken() throws Exception {
  String constraintLabelPrefix="ConstraintLabel";
  String constraintPropertyPrefix="ConstraintProperty";
  String indexLabelPrefix="Label";
  String indexPropertyPrefix="Property";
  for (int i=0; i < 10; i++) {
    try (Transaction transaction=database.beginTx()){
      database.schema().constraintFor(Label.label(constraintLabelPrefix + i)).assertPropertyIsUnique(constraintPropertyPrefix + i).create();
      database.schema().indexFor(Label.label(indexLabelPrefix + i)).on(indexPropertyPrefix + i).create();
      transaction.success();
    }
   }
  try (Transaction ignored=database.beginTx()){
    database.schema().awaitIndexesOnline(1,TimeUnit.MINUTES);
  }
   IndexingService indexingService=getIndexingService(database);
  int indexLabel7=getLabelId(indexLabelPrefix + 7);
  int indexProperty7=getPropertyKeyId(indexPropertyPrefix + 7);
  IndexProxy index=indexingService.getIndexProxy(TestIndexDescriptorFactory.forLabel(indexLabel7,indexProperty7).schema());
  index.drop();
  expectedException.expect(UnderlyingStorageException.class);
  expectedException.expectMessage("Unable to force");
  indexingService.forceAll(IOLimiter.UNLIMITED);
}
