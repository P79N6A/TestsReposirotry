/** 
 * Reading a node command might leave a node record which referred to labels in one or more dynamic records as marked as heavy even if that node already had references to dynamic records, changed in a transaction, but had no labels on that node changed within that same transaction. Now defensively only marks as heavy if there were one or more dynamic records provided when providing the record object with the label field value. This would give the opportunity to load the dynamic records the next time that record would be ensured heavy.
 */
@Test public void shouldRecoverNodeWithDynamicLabelRecords(){
  database=new TestGraphDatabaseFactory().setFileSystem(fs).newImpermanentDatabase();
  Node node;
  Label[] labels=new Label[]{label("a"),label("b"),label("c"),label("d"),label("e"),label("f"),label("g"),label("h"),label("i"),label("j"),label("k")};
  try (Transaction tx=database.beginTx()){
    node=database.createNode(labels);
    tx.success();
  }
   try (Transaction tx=database.beginTx()){
    node.setProperty("prop","value");
    tx.success();
  }
   EphemeralFileSystemAbstraction snapshot=fs.snapshot();
  database.shutdown();
  database=new TestGraphDatabaseFactory().setFileSystem(snapshot).newImpermanentDatabase();
  try (Transaction ignored=database.beginTx()){
    node=database.getNodeById(node.getId());
    for (    Label label : labels) {
      assertTrue(node.hasLabel(label));
    }
  }
 }
