@Test public void concurrentMixedCreatingAndDroppingOfIndexesShouldNotInterfere() throws Throwable {
  List<IndexDefinition> indexesToDrop=new ArrayList<>();
  int creates=threads / 2;
  int drops=threads - creates;
  try (Transaction tx=db.beginTx()){
    for (int i=0; i < drops; i++) {
      indexesToDrop.add(db.schema().indexFor(label(i)).on(KEY).create());
    }
    tx.success();
  }
   Race race=new Race();
  Set<String> expectedIndexedLabels=new HashSet<>();
  for (int i=0; i < creates; i++) {
    expectedIndexedLabels.add(label(drops + i).name());
    race.addContestant(indexCreate(drops + i),1);
  }
  for (  IndexDefinition index : indexesToDrop) {
    race.addContestant(indexDrop(index),1);
  }
  race.go();
  try (Transaction tx=db.beginTx()){
    List<IndexDefinition> indexes=asList(db.schema().getIndexes());
    assertEquals(creates,indexes.size());
    tx.success();
    for (    IndexDefinition index : indexes) {
      assertTrue(expectedIndexedLabels.remove(single(index.getLabels()).name()));
    }
  }
 }
