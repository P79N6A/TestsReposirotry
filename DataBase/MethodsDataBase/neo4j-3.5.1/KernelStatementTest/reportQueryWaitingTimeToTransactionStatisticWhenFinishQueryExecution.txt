@Test public void reportQueryWaitingTimeToTransactionStatisticWhenFinishQueryExecution(){
  KernelTransactionImplementation transaction=mock(KernelTransactionImplementation.class);
  TxStateHolder txStateHolder=mock(TxStateHolder.class);
  StorageReader storeStatement=mock(StorageReader.class);
  KernelTransactionImplementation.Statistics statistics=new KernelTransactionImplementation.Statistics(transaction,new AtomicReference<>(CpuClock.NOT_AVAILABLE),new AtomicReference<>(HeapAllocation.NOT_AVAILABLE));
  when(transaction.getStatistics()).thenReturn(statistics);
  when(transaction.executingQueries()).thenReturn(ExecutingQueryList.EMPTY);
  KernelStatement statement=new KernelStatement(transaction,txStateHolder,storeStatement,LockTracer.NONE,mock(StatementOperationParts.class),new ClockContext(),EmptyVersionContextSupplier.EMPTY);
  statement.acquire();
  ExecutingQuery query=getQueryWithWaitingTime();
  ExecutingQuery query2=getQueryWithWaitingTime();
  ExecutingQuery query3=getQueryWithWaitingTime();
  statement.stopQueryExecution(query);
  statement.stopQueryExecution(query2);
  statement.stopQueryExecution(query3);
  assertEquals(3,statistics.getWaitingTimeNanos(1));
}
