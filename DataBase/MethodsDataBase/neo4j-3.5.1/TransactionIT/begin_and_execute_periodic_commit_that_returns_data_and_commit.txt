@Test public void begin_and_execute_periodic_commit_that_returns_data_and_commit() throws Exception {
  int nodes=11;
  int batchSize=2;
  ServerTestUtils.withCSVFile(nodes,url -> {
    long nodesInDatabaseBeforeTransaction=countNodes();
    long txIdBefore=resolveDependency(TransactionIdStore.class).getLastClosedTransactionId();
    Response response=http.POST("db/data/transaction/commit",quotedJson("{ 'statements': [ { 'statement': 'USING PERIODIC COMMIT " + batchSize + " LOAD CSV FROM "+ "\\\""+ url+ "\\\" AS line CREATE (n {id1: 23}) RETURN n' } ] }"));
    long txIdAfter=resolveDependency(TransactionIdStore.class).getLastClosedTransactionId();
    assertThat(response.status(),equalTo(200));
    assertThat(response,containsNoErrors());
    JsonNode columns=response.get("results").get(0).get("columns");
    assertThat(columns.toString(),equalTo("[\"n\"]"));
    assertThat(countNodes(),equalTo(nodesInDatabaseBeforeTransaction + nodes));
    long nBatches=(nodes / batchSize) + 1;
    long expectedTxCount=nBatches + 1;
    assertThat(txIdAfter - txIdBefore,equalTo(expectedTxCount));
  }
);
}
