@Test public void shouldSupportMultipleOpenCursorsConcurrently() throws Exception {
  GBPTree<LabelScanKey,LabelScanValue> index=mock(GBPTree.class);
  RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor1=mock(RawCursor.class);
  when(cursor1.next()).thenReturn(false);
  RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor2=mock(RawCursor.class);
  when(cursor2.next()).thenReturn(false);
  when(index.seek(any(LabelScanKey.class),any(LabelScanKey.class))).thenReturn(cursor1,cursor2);
  try (NativeLabelScanReader reader=new NativeLabelScanReader(index)){
    verify(cursor1,never()).close();
    verify(cursor2,never()).close();
    LongIterator first=reader.nodesWithLabel(LABEL_ID);
    LongIterator second=reader.nodesWithLabel(LABEL_ID);
    verify(cursor1,never()).close();
    verify(cursor2,never()).close();
    exhaust(first);
    verify(cursor1,times(1)).close();
    verify(cursor2,never()).close();
    exhaust(second);
    verify(cursor1,times(1)).close();
    verify(cursor2,times(1)).close();
  }
 }
