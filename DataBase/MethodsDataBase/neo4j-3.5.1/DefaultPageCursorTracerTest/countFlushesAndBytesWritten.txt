@Test void countFlushesAndBytesWritten(){
  PinEvent pinEvent=pageCursorTracer.beginPin(true,0,swapper);
{
    PageFaultEvent faultEvent=pinEvent.beginPageFault();
{
      EvictionEvent evictionEvent=faultEvent.beginEviction();
{
        FlushEventOpportunity flushEventOpportunity=evictionEvent.flushEventOpportunity();
{
          FlushEvent flushEvent=flushEventOpportunity.beginFlush(0,0,swapper);
          flushEvent.addBytesWritten(27);
          flushEvent.done();
          FlushEvent flushEvent1=flushEventOpportunity.beginFlush(0,1,swapper);
          flushEvent1.addBytesWritten(13);
          flushEvent1.done();
        }
      }
      evictionEvent.close();
    }
    faultEvent.done();
  }
  pinEvent.done();
  assertEquals(1,pageCursorTracer.pins());
  assertEquals(1,pageCursorTracer.unpins());
  assertEquals(1,pageCursorTracer.faults());
  assertEquals(1,pageCursorTracer.evictions());
  assertEquals(2,pageCursorTracer.flushes());
  assertEquals(40,pageCursorTracer.bytesWritten());
}
