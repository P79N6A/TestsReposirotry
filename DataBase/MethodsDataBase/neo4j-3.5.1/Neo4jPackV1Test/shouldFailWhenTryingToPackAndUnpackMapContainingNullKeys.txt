@Test public void shouldFailWhenTryingToPackAndUnpackMapContainingNullKeys() throws IOException {
  PackedOutputArray output=new PackedOutputArray();
  Neo4jPack.Packer packer=neo4jPack.newPacker(output);
  Map<String,AnyValue> map=new HashMap<>();
  map.put(null,longValue(42L));
  map.put("foo",longValue(1337L));
  packer.packMapHeader(map.size());
  for (  Map.Entry<String,AnyValue> entry : map.entrySet()) {
    packer.pack(entry.getKey());
    packer.pack(entry.getValue());
  }
  try {
    PackedInputArray input=new PackedInputArray(output.bytes());
    Neo4jPack.Unpacker unpacker=neo4jPack.newUnpacker(input);
    unpacker.unpack();
    fail("exception expected");
  }
 catch (  BoltIOException ex) {
    assertEquals(Neo4jError.from(Status.Request.Invalid,"Value `null` is not supported as key in maps, must be a non-nullable string."),Neo4jError.from(ex));
  }
}
