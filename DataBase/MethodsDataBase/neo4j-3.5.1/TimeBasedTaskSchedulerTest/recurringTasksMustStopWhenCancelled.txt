@Test public void recurringTasksMustStopWhenCancelled() throws InterruptedException {
  List<Boolean> cancelListener=new ArrayList<>();
  Runnable recurring=() -> {
    counter.incrementAndGet();
    semaphore.release();
  }
;
  JobHandle handle=scheduler.submit(Group.STORAGE_MAINTENANCE,recurring,100,100);
  handle.registerCancelListener(cancelListener::add);
  clock.forward(100,TimeUnit.NANOSECONDS);
  scheduler.tick();
  assertSemaphoreAcquire();
  clock.forward(100,TimeUnit.NANOSECONDS);
  scheduler.tick();
  assertSemaphoreAcquire();
  handle.cancel(true);
  clock.forward(100,TimeUnit.NANOSECONDS);
  scheduler.tick();
  clock.forward(100,TimeUnit.NANOSECONDS);
  scheduler.tick();
  pools.getThreadPool(Group.STORAGE_MAINTENANCE).shutDown();
  assertThat(counter.get(),is(2));
  assertThat(cancelListener,contains(Boolean.TRUE));
}
