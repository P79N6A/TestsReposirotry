@Test public void shouldOpenTheNextChannelWhenItExists() throws IOException {
  final StoreChannel newStoreChannel=mock(StoreChannel.class);
  final ReaderLogVersionBridge bridge=new ReaderLogVersionBridge(logFiles);
  when(channel.getVersion()).thenReturn(version);
  when(channel.getLogFormatVersion()).thenReturn(CURRENT_LOG_VERSION);
  when(fs.fileExists(any(File.class))).thenReturn(true);
  when(fs.open(any(File.class),eq(OpenMode.READ))).thenReturn(newStoreChannel);
  when(newStoreChannel.read(ArgumentMatchers.<ByteBuffer>any())).then(invocationOnMock -> {
    ByteBuffer buffer=invocationOnMock.getArgument(0);
    buffer.putLong(encodeLogVersion(version + 1));
    buffer.putLong(42);
    return LOG_HEADER_SIZE;
  }
);
  final LogVersionedStoreChannel result=bridge.next(channel);
  PhysicalLogVersionedStoreChannel expected=new PhysicalLogVersionedStoreChannel(newStoreChannel,version + 1,CURRENT_LOG_VERSION);
  assertEquals(expected,result);
  verify(channel,times(1)).close();
}
