@Test public void processAllRelationshipProperties() throws Exception {
  createAlistairAndStefanNodes();
  CopyUpdateVisitor propertyUpdateVisitor=new CopyUpdateVisitor();
  RelationshipStoreScan relationshipStoreScan=new RelationshipStoreScan(new RecordStorageReader(neoStores),locks,propertyUpdateVisitor,new int[]{relTypeId},id -> true);
  try (StorageRelationshipScanCursor relationshipScanCursor=reader.allocateRelationshipScanCursor()){
    relationshipScanCursor.single(1);
    relationshipScanCursor.next();
    relationshipStoreScan.process(relationshipScanCursor);
  }
   EntityUpdates propertyUpdates=propertyUpdateVisitor.getPropertyUpdates();
  assertNotNull("Visitor should contain container with updates.",propertyUpdates);
  RelationTypeSchemaDescriptor index1=SchemaDescriptorFactory.forRelType(0,2);
  RelationTypeSchemaDescriptor index2=SchemaDescriptorFactory.forRelType(0,3);
  RelationTypeSchemaDescriptor index3=SchemaDescriptorFactory.forRelType(0,2,3);
  RelationTypeSchemaDescriptor index4=SchemaDescriptorFactory.forRelType(1,3);
  List<RelationTypeSchemaDescriptor> indexes=Arrays.asList(index1,index2,index3,index4);
  assertThat(Iterables.map(IndexEntryUpdate::indexKey,propertyUpdates.forIndexKeys(indexes)),containsInAnyOrder(index1,index2,index3));
}
