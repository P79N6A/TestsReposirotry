@Test public void processAllNodeProperties() throws Exception {
  CopyUpdateVisitor propertyUpdateVisitor=new CopyUpdateVisitor();
  StoreViewNodeStoreScan storeViewNodeStoreScan=new StoreViewNodeStoreScan(new RecordStorageReader(neoStores),locks,null,propertyUpdateVisitor,new int[]{labelId},id -> true);
  try (StorageNodeCursor nodeCursor=reader.allocateNodeCursor()){
    nodeCursor.single(1);
    nodeCursor.next();
    storeViewNodeStoreScan.process(nodeCursor);
  }
   EntityUpdates propertyUpdates=propertyUpdateVisitor.getPropertyUpdates();
  assertNotNull("Visitor should contain container with updates.",propertyUpdates);
  LabelSchemaDescriptor index1=SchemaDescriptorFactory.forLabel(0,0);
  LabelSchemaDescriptor index2=SchemaDescriptorFactory.forLabel(0,1);
  LabelSchemaDescriptor index3=SchemaDescriptorFactory.forLabel(0,0,1);
  LabelSchemaDescriptor index4=SchemaDescriptorFactory.forLabel(1,1);
  List<LabelSchemaDescriptor> indexes=Arrays.asList(index1,index2,index3,index4);
  assertThat(Iterables.map(IndexEntryUpdate::indexKey,propertyUpdates.forIndexKeys(indexes)),containsInAnyOrder(index1,index2,index3));
}
