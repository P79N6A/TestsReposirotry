@Test public void shouldComparePointWithin(){
  assertThat("Always within no bounds",pointValue(Cartesian,1,2).withinRange(null,false,null,false),equalTo(true));
  assertThat("Different CRS for lower bound should be undefined",pointValue(Cartesian,1,2).withinRange(pointValue(WGS84,1,2),true,null,false),equalTo(null));
  assertThat("Different CRS for upper bound should be undefined",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(WGS84,1,2),true),equalTo(null));
  assertThat("Within same lower bound if inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),true,null,false),equalTo(true));
  assertThat("Not within same lower bound if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),false,null,false),equalTo(false));
  assertThat("Within smaller lower bound if inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,0,1),true,null,false),equalTo(true));
  assertThat("Within smaller lower bound if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,0,1),false,null,false),equalTo(true));
  assertThat("Within partially smaller lower bound if inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,1),true,null,false),equalTo(true));
  assertThat("Not within partially smaller lower bound if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,1),false,null,false),equalTo(false));
  assertThat("Invalid if lower bound both greater and less than",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,2,1),false,null,false),equalTo(null));
  assertThat("Invalid if lower bound both greater and less than even when inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,2,1),true,null,false),equalTo(null));
  assertThat("Within same upper bound if inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,1,2),true),equalTo(true));
  assertThat("Not within same upper bound if not inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,1,2),false),equalTo(false));
  assertThat("Within larger upper bound if inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,2,3),true),equalTo(true));
  assertThat("Within larger upper bound if not inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,2,3),false),equalTo(true));
  assertThat("Within partially larger upper bound if inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,2,2),true),equalTo(true));
  assertThat("Not within partially larger upper bound if not inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,2,2),false),equalTo(false));
  assertThat("Invalid if upper bound both greater and less than",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,2,1),false),equalTo(null));
  assertThat("Invalid if upper bound both greater and less than even when inclusive",pointValue(Cartesian,1,2).withinRange(null,false,pointValue(Cartesian,2,1),true),equalTo(null));
  assertThat("Undefined if lower bound greater than upper bound",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,2,1),true,pointValue(Cartesian,1,2),true),equalTo(null));
  assertThat("Not within same bounds if inclusive on lower",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),true,pointValue(Cartesian,1,2),false),equalTo(false));
  assertThat("Not within same bounds if inclusive on upper",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),false,pointValue(Cartesian,1,2),true),equalTo(false));
  assertThat("Within same bounds if inclusive on both",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),true,pointValue(Cartesian,1,2),true),equalTo(true));
  assertThat("Not within same bounds if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),false,pointValue(Cartesian,1,2),false),equalTo(false));
  assertThat("Not within same bounds if inclusive on lower",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),true,pointValue(Cartesian,1,2),false),equalTo(false));
  assertThat("Not within same bounds if inclusive on upper",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),false,pointValue(Cartesian,1,2),true),equalTo(false));
  assertThat("Within same bounds if inclusive on both",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),true,pointValue(Cartesian,1,2),true),equalTo(true));
  assertThat("Not within same bounds if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,2),false,pointValue(Cartesian,1,2),false),equalTo(false));
  assertThat("Within smaller lower bound if inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,0,1),true,pointValue(Cartesian,1,2),true),equalTo(true));
  assertThat("Within smaller lower bound if inclusive on upper",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,0,1),false,pointValue(Cartesian,1,2),true),equalTo(true));
  assertThat("Not within smaller lower bound if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,0,1),false,pointValue(Cartesian,1,2),false),equalTo(false));
  assertThat("Within partially smaller lower bound if inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,1),true,pointValue(Cartesian,2,3),false),equalTo(true));
  assertThat("Not within partially smaller lower bound if not inclusive",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,1,1),false,pointValue(Cartesian,2,3),false),equalTo(false));
  assertThat("Within wider bounds",pointValue(Cartesian,1,2).withinRange(pointValue(Cartesian,0,1),false,pointValue(Cartesian,2,3),false),equalTo(true));
}
