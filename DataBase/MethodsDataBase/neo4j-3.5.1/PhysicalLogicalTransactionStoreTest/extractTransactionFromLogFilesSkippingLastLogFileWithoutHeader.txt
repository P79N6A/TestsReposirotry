@Test public void extractTransactionFromLogFilesSkippingLastLogFileWithoutHeader() throws IOException {
  TransactionIdStore transactionIdStore=new SimpleTransactionIdStore();
  TransactionMetadataCache positionCache=new TransactionMetadataCache();
  final byte[] additionalHeader=new byte[]{1,2,5};
  final int masterId=2;
  int authorId=1;
  final long timeStarted=12345;
  long latestCommittedTxWhenStarted=4545;
  long timeCommitted=timeStarted + 10;
  LifeSupport life=new LifeSupport();
  final LogFiles logFiles=LogFilesBuilder.builder(dir.databaseLayout(),fileSystemRule.get()).withTransactionIdStore(transactionIdStore).withLogVersionRepository(mock(LogVersionRepository.class)).build();
  life.add(logFiles);
  life.start();
  try {
    addATransactionAndRewind(life,logFiles,positionCache,transactionIdStore,additionalHeader,masterId,authorId,timeStarted,latestCommittedTxWhenStarted,timeCommitted);
  }
  finally {
    life.shutdown();
  }
  fileSystemRule.get().create(logFiles.getLogFileForVersion(logFiles.getHighestLogVersion() + 1)).close();
  positionCache.clear();
  final LogicalTransactionStore store=new PhysicalLogicalTransactionStore(logFiles,positionCache,new VersionAwareLogEntryReader<>(),monitors,true);
  verifyTransaction(transactionIdStore,positionCache,additionalHeader,masterId,authorId,timeStarted,latestCommittedTxWhenStarted,timeCommitted,store);
}
