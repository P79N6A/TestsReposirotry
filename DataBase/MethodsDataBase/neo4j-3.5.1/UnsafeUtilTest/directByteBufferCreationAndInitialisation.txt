@Test void directByteBufferCreationAndInitialisation() throws Exception {
  int sizeInBytes=313;
  long address=allocateMemory(sizeInBytes);
  try {
    setMemory(address,sizeInBytes,(byte)0);
    ByteBuffer a=newDirectByteBuffer(address,sizeInBytes);
    assertThat(a,is(not(sameInstance(newDirectByteBuffer(address,sizeInBytes)))));
    assertThat(a.hasArray(),is(false));
    assertThat(a.isDirect(),is(true));
    assertThat(a.capacity(),is(sizeInBytes));
    assertThat(a.limit(),is(sizeInBytes));
    assertThat(a.position(),is(0));
    assertThat(a.remaining(),is(sizeInBytes));
    assertThat(getByte(address),is((byte)0));
    a.put((byte)-1);
    assertThat(getByte(address),is((byte)-1));
    a.position(101);
    a.mark();
    a.limit(202);
    int sizeInBytes2=424;
    long address2=allocateMemory(sizeInBytes2);
    try {
      setMemory(address2,sizeInBytes2,(byte)0);
      initDirectByteBuffer(a,address2,sizeInBytes2);
      assertThat(a.hasArray(),is(false));
      assertThat(a.isDirect(),is(true));
      assertThat(a.capacity(),is(sizeInBytes2));
      assertThat(a.limit(),is(sizeInBytes2));
      assertThat(a.position(),is(0));
      assertThat(a.remaining(),is(sizeInBytes2));
      assertThat(getByte(address2),is((byte)0));
      a.put((byte)-1);
      assertThat(getByte(address2),is((byte)-1));
    }
  finally {
      free(address2,sizeInBytes2,GlobalMemoryTracker.INSTANCE);
    }
  }
  finally {
    free(address,sizeInBytes,GlobalMemoryTracker.INSTANCE);
  }
}
