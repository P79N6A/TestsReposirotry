@Test void shouldPrintNiceHelp() throws Throwable {
  try (ByteArrayOutputStream baos=new ByteArrayOutputStream()){
    PrintStream ps=new PrintStream(baos);
    Usage usage=new Usage("neo4j-admin",mock(CommandLocator.class));
    usage.printUsageForCommand(new CheckConsistencyCommandProvider(),ps::println);
    assertEquals(String.format("usage: neo4j-admin check-consistency [--database=<name>]%n" + "                                     [--backup=</path/to/backup>]%n" + "                                     [--verbose[=<true|false>]]%n"+ "                                     [--report-dir=<directory>]%n"+ "                                     [--additional-config=<config-file-path>]%n"+ "                                     [--check-graph[=<true|false>]]%n"+ "                                     [--check-indexes[=<true|false>]]%n"+ "                                     [--check-label-scan-store[=<true|false>]]%n"+ "                                     [--check-property-owners[=<true|false>]]%n"+ "%n"+ "environment variables:%n"+ "    NEO4J_CONF    Path to directory which contains neo4j.conf.%n"+ "    NEO4J_DEBUG   Set to anything to enable debug output.%n"+ "    NEO4J_HOME    Neo4j home directory.%n"+ "    HEAP_SIZE     Set JVM maximum heap size during command execution.%n"+ "                  Takes a number and a unit, for example 512m.%n"+ "%n"+ "This command allows for checking the consistency of a database or a backup%n"+ "thereof. It cannot be used with a database which is currently in use.%n"+ "%n"+ "All checks except 'check-graph' can be quite expensive so it may be useful to%n"+ "turn them off for very large databases. Increasing the heap size can also be a%n"+ "good idea. See 'neo4j-admin help' for details.%n"+ "%n"+ "options:%n"+ "  --database=<name>                        Name of database. [default:" + GraphDatabaseSettings.DEFAULT_DATABASE_NAME + "]%n"+ "  --backup=</path/to/backup>               Path to backup to check consistency%n"+ "                                           of. Cannot be used together with%n"+ "                                           --database. [default:]%n"+ "  --verbose=<true|false>                   Enable verbose output.%n"+ "                                           [default:false]%n"+ "  --report-dir=<directory>                 Directory to write report file in.%n"+ "                                           [default:.]%n"+ "  --additional-config=<config-file-path>   Configuration file to supply%n"+ "                                           additional configuration in. This%n"+ "                                           argument is DEPRECATED. [default:]%n"+ "  --check-graph=<true|false>               Perform checks between nodes,%n"+ "                                           relationships, properties, types and%n"+ "                                           tokens. [default:true]%n"+ "  --check-indexes=<true|false>             Perform checks on indexes.%n"+ "                                           [default:true]%n"+ "  --check-label-scan-store=<true|false>    Perform checks on the label scan%n"+ "                                           store. [default:true]%n"+ "  --check-property-owners=<true|false>     Perform additional checks on property%n"+ "                                           ownership. This check is *very*%n"+ "                                           expensive in time and memory.%n"+ "                                           [default:false]%n"),baos.toString());
  }
 }
