@Test public void shouldCloseResourcesAndGiveHelpfulErrorOnMidStreamException() throws Throwable {
  CallableProcedure proc=compile(ProcedureThatThrowsNullMsgExceptionMidStream.class).get(0);
  exception.expect(ProcedureException.class);
  exception.expectMessage("Failed to invoke procedure `org.neo4j.kernel.impl.proc.throwsInStream`: " + "Caused by: java.lang.IndexOutOfBoundsException");
  exception.expect(new BaseMatcher<Exception>(){
    @Override public void describeTo(    Description description){
      description.appendText("a suppressed exception with cause ExceptionDuringClose");
    }
    @Override public boolean matches(    Object item){
      Exception e=(Exception)item;
      for (      Throwable suppressed : e.getSuppressed()) {
        if (suppressed instanceof ResourceCloseFailureException) {
          if (suppressed.getCause() instanceof ExceptionDuringClose) {
            return true;
          }
        }
      }
      return false;
    }
  }
);
  RawIterator<Object[],ProcedureException> stream=proc.apply(new BasicContext(),new Object[0],resourceTracker);
  if (stream.hasNext()) {
    stream.next();
  }
}
