@Test public void should_list_constraints(){
  SchemaCache cache=newSchemaCache();
  cache.addSchemaRule(uniquenessConstraintRule(0L,1,2,133L));
  cache.addSchemaRule(uniquenessConstraintRule(1L,3,4,133L));
  cache.addSchemaRule(relPropertyExistenceConstraintRule(2L,5,6));
  cache.addSchemaRule(nodePropertyExistenceConstraintRule(3L,7,8));
  ConstraintDescriptor unique1=uniqueForLabel(1,2);
  ConstraintDescriptor unique2=uniqueForLabel(3,4);
  ConstraintDescriptor existsRel=ConstraintDescriptorFactory.existsForRelType(5,6);
  ConstraintDescriptor existsNode=ConstraintDescriptorFactory.existsForLabel(7,8);
  assertEquals(asSet(unique1,unique2,existsRel,existsNode),asSet(cache.constraints()));
  assertEquals(asSet(unique1),asSet(cache.constraintsForLabel(1)));
  assertEquals(asSet(unique1),asSet(cache.constraintsForSchema(unique1.schema())));
  assertEquals(asSet(),asSet(cache.constraintsForSchema(forLabel(1,3))));
  assertEquals(asSet(existsRel),asSet(cache.constraintsForRelationshipType(5)));
}
