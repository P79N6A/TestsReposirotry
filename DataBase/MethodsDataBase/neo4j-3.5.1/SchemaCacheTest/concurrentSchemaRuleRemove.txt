@Test public void concurrentSchemaRuleRemove() throws Throwable {
  SchemaCache cache=newSchemaCache();
  int indexNumber=20;
  for (int i=0; i < indexNumber; i++) {
    cache.addSchemaRule(newIndexRule(i,i,i));
  }
  Race race=new Race();
  int numberOfDeletions=10;
  for (int i=0; i < numberOfDeletions; i++) {
    int indexId=i;
    race.addContestant(() -> cache.removeSchemaRule(indexId));
  }
  race.go();
  assertEquals(indexNumber - numberOfDeletions,Iterables.count(cache.indexDescriptors()));
  for (int labelId=numberOfDeletions; labelId < indexNumber; labelId++) {
    assertEquals(1,Iterators.count(cache.indexDescriptorsForLabel(labelId)));
  }
  for (int propertyId=numberOfDeletions; propertyId < indexNumber; propertyId++) {
    assertEquals(1,Iterators.count(cache.indexesByProperty(propertyId)));
  }
}
