@Test public void shouldDelayFreeingOfAggressivelyReusedIds(){
  MockedIdGeneratorFactory actual=new MockedIdGeneratorFactory();
  ControllableSnapshotSupplier boundaries=new ControllableSnapshotSupplier();
  BufferingIdGeneratorFactory bufferingIdGeneratorFactory=new BufferingIdGeneratorFactory(actual,IdReuseEligibility.ALWAYS,new CommunityIdTypeConfigurationProvider());
  bufferingIdGeneratorFactory.initialize(boundaries);
  IdGenerator idGenerator=bufferingIdGeneratorFactory.open(new File("doesnt-matter"),10,IdType.STRING_BLOCK,() -> 0L,Integer.MAX_VALUE);
  idGenerator.freeId(7);
  verifyNoMoreInteractions(actual.get(IdType.STRING_BLOCK));
  bufferingIdGeneratorFactory.maintenance();
  verifyNoMoreInteractions(actual.get(IdType.STRING_BLOCK));
  boundaries.setMostRecentlyReturnedSnapshotToAllClosed();
  bufferingIdGeneratorFactory.maintenance();
  verify(actual.get(IdType.STRING_BLOCK)).freeId(7);
}
