@Test public void shouldWithstandHighStressAndStillKeepOrder() throws Exception {
  VerifyingIdOrderingQueue queue=new VerifyingIdOrderingQueue(new SynchronizedArrayIdOrderingQueue());
  Committer[] committers=new Committer[20];
  CountDownLatch readySignal=new CountDownLatch(committers.length);
  AtomicBoolean end=new AtomicBoolean();
  CountDownLatch startSignal=new CountDownLatch(1);
  LongIterator idSource=neverEndingIdStream();
  for (int i=0; i < committers.length; i++) {
    committers[i]=new Committer(queue,idSource,end,readySignal,startSignal);
  }
  readySignal.await();
  startSignal.countDown();
  long startTime=currentTimeMillis();
  long endTime=startTime + SECONDS.toMillis(20);
  while (currentTimeMillis() < endTime && queue.getNumberOfOrderlyRemovedIds() < THRESHOLD) {
    Thread.sleep(100);
  }
  end.set(true);
  for (  Committer committer : committers) {
    committer.awaitFinish();
  }
  assertTrue("Would have wanted at least a few ids to be processed, but only saw " + queue.getNumberOfOrderlyRemovedIds(),queue.getNumberOfOrderlyRemovedIds() >= THRESHOLD);
}
