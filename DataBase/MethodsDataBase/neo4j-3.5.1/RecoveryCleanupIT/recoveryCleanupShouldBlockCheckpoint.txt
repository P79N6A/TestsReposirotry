@Test public void recoveryCleanupShouldBlockCheckpoint() throws Throwable {
  AtomicReference<Throwable> error=new AtomicReference<>();
  try {
    dirtyDatabase();
    Barrier.Control recoveryCompleteBarrier=new Barrier.Control();
    LabelScanStore.Monitor recoveryBarrierMonitor=new RecoveryBarrierMonitor(recoveryCompleteBarrier);
    setMonitor(recoveryBarrierMonitor);
    db=startDatabase();
    recoveryCompleteBarrier.awaitUninterruptibly();
    Future<?> checkpointFuture=executor.submit(() -> reportError(() -> checkpoint(db),error));
    shouldWait(checkpointFuture);
    recoveryCompleteBarrier.release();
    checkpointFuture.get();
    db.shutdown();
  }
  finally {
    Throwable throwable=error.get();
    if (throwable != null) {
      throw throwable;
    }
  }
}
