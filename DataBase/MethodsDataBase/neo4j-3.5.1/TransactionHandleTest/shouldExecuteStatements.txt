@Test public void shouldExecuteStatements() throws Exception {
  TransitionalPeriodTransactionMessContainer kernel=mockKernel();
  QueryExecutionEngine executionEngine=mock(QueryExecutionEngine.class);
  Result executionResult=mock(Result.class);
  TransactionalContext transactionalContext=prepareKernelWithQuerySession(kernel);
  when(executionEngine.executeQuery("query",NO_PARAMS,transactionalContext)).thenReturn(executionResult);
  TransactionRegistry registry=mock(TransactionRegistry.class);
  when(registry.begin(any(TransactionHandle.class))).thenReturn(1337L);
  TransactionHandle handle=getTransactionHandle(kernel,executionEngine,registry);
  ExecutionResultSerializer output=mock(ExecutionResultSerializer.class);
  handle.execute(statements(new Statement("query",map(),false,(ResultDataContent[])null)),output,mock(HttpServletRequest.class));
  verify(executionEngine).executeQuery("query",NO_PARAMS,transactionalContext);
  InOrder outputOrder=inOrder(output);
  outputOrder.verify(output).transactionCommitUri(uriScheme.txCommitUri(1337));
  outputOrder.verify(output).statementResult(executionResult,false,(ResultDataContent[])null);
  outputOrder.verify(output).notifications(anyCollection());
  outputOrder.verify(output).transactionStatus(anyLong());
  outputOrder.verify(output).errors(argThat(hasNoErrors()));
  outputOrder.verify(output).finish();
  verifyNoMoreInteractions(output);
}
