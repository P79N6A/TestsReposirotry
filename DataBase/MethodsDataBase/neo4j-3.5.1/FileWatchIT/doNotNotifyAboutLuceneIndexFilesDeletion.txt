@Test(timeout=TEST_TIMEOUT) public void doNotNotifyAboutLuceneIndexFilesDeletion() throws InterruptedException, IOException {
  DependencyResolver dependencyResolver=((GraphDatabaseAPI)database).getDependencyResolver();
  FileWatcher fileWatcher=getFileWatcher(database);
  CheckPointer checkPointer=dependencyResolver.resolveDependency(CheckPointer.class);
  String propertyStoreName=testDirectory.databaseLayout().propertyStore().getName();
  AccumulativeDeletionEventListener accumulativeListener=new AccumulativeDeletionEventListener();
  ModificationEventListener modificationListener=new ModificationEventListener(propertyStoreName);
  fileWatcher.addFileWatchEventListener(modificationListener);
  fileWatcher.addFileWatchEventListener(accumulativeListener);
  String labelName="labelName";
  String propertyName="propertyName";
  Label testLabel=Label.label(labelName);
  createIndexes(database,propertyName,testLabel);
  do {
    createNode(database,propertyName,testLabel);
    forceCheckpoint(checkPointer);
  }
 while (!modificationListener.awaitModificationNotification());
  fileWatcher.removeFileWatchEventListener(modificationListener);
  ModificationEventListener afterRemovalListener=new ModificationEventListener(propertyStoreName);
  fileWatcher.addFileWatchEventListener(afterRemovalListener);
  dropAllIndexes(database);
  do {
    createNode(database,propertyName,testLabel);
    forceCheckpoint(checkPointer);
  }
 while (!afterRemovalListener.awaitModificationNotification());
  accumulativeListener.assertDoesNotHaveAnyDeletions();
}
