@Test public void shouldApplyUpdateIndexRuleSchemaRuleCommandToTheStoreThrowingIndexProblem() throws IndexNotFoundKernelException, IndexPopulationFailedKernelException, IndexActivationFailedKernelException {
  final BatchTransactionApplier applier=newIndexApplier();
  doThrow(new IndexNotFoundKernelException("")).when(indexingService).activateIndex(anyLong());
  final DynamicRecord record=DynamicRecord.dynamicRecord(21,true);
  final Collection<DynamicRecord> recordsAfter=singletonList(record);
  final StoreIndexDescriptor rule=constraintIndexRule(0,1,2,new IndexProviderDescriptor("K","X.Y"),42L);
  final Command.SchemaRuleCommand command=new Command.SchemaRuleCommand(Collections.emptyList(),recordsAfter,rule);
  try {
    apply(applier,command::handle,transactionToApply);
    fail("should have thrown");
  }
 catch (  Exception e) {
    assertTrue(e.getCause() instanceof IndexNotFoundKernelException);
  }
}
