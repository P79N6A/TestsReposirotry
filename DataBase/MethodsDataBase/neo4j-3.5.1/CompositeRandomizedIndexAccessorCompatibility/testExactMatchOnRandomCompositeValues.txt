@Test public void testExactMatchOnRandomCompositeValues() throws Exception {
  ValueType[] types=randomSetOfSupportedTypes();
  List<IndexEntryUpdate<?>> updates=new ArrayList<>();
  Set<ValueTuple> duplicateChecker=new HashSet<>();
  for (long id=0; id < 30_000; id++) {
    IndexEntryUpdate<SchemaDescriptor> update;
    do {
      update=add(id,descriptor.schema(),random.randomValues().nextValueOfTypes(types),random.randomValues().nextValueOfTypes(types),random.randomValues().nextValueOfTypes(types),random.randomValues().nextValueOfTypes(types));
    }
 while (!duplicateChecker.add(ValueTuple.of(update.values())));
    updates.add(update);
  }
  updateAndCommit(updates);
  for (  IndexEntryUpdate<?> update : updates) {
    List<Long> hits=query(exact(100,update.values()[0]),exact(101,update.values()[1]),exact(102,update.values()[2]),exact(103,update.values()[3]));
    assertEquals(update + " " + hits.toString(),1,hits.size());
    assertThat(single(hits),equalTo(update.getEntityId()));
  }
}
