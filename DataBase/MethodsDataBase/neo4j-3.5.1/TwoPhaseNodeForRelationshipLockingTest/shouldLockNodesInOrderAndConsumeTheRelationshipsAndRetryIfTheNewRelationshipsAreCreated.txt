@Test public void shouldLockNodesInOrderAndConsumeTheRelationshipsAndRetryIfTheNewRelationshipsAreCreated() throws Throwable {
  Collector collector=new Collector();
  TwoPhaseNodeForRelationshipLocking locking=new TwoPhaseNodeForRelationshipLocking(collector,locks,NONE);
  TestRelationshipChain chain=new TestRelationshipChain(nodeId).outgoing(21L,43L,TYPE).incoming(22L,40,TYPE).outgoing(23L,41L,TYPE);
  returnRelationships(transaction,true,chain);
  InOrder inOrder=inOrder(locks);
  locking.lockAllNodesAndConsumeRelationships(nodeId,transaction,new StubNodeCursor(false));
  inOrder.verify(locks).acquireExclusive(NONE,NODE,40L,41L,nodeId);
  inOrder.verify(locks).releaseExclusive(NODE,40L,41L,nodeId);
  inOrder.verify(locks).acquireExclusive(NONE,NODE,40L,41L,nodeId,43L);
  assertEquals(set(21L,22L,23L),collector.set);
}
