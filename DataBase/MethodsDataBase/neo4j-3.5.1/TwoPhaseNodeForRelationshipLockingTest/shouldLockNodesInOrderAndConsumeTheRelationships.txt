@Test public void shouldLockNodesInOrderAndConsumeTheRelationships() throws Throwable {
  Collector collector=new Collector();
  TwoPhaseNodeForRelationshipLocking locking=new TwoPhaseNodeForRelationshipLocking(collector,locks,NONE);
  returnRelationships(transaction,false,new TestRelationshipChain(nodeId).outgoing(21L,43L,0).incoming(22L,40L,TYPE).outgoing(23L,41L,TYPE).outgoing(2L,3L,TYPE).incoming(3L,49L,TYPE).outgoing(50L,41L,TYPE));
  InOrder inOrder=inOrder(locks);
  locking.lockAllNodesAndConsumeRelationships(nodeId,transaction,new StubNodeCursor(false));
  inOrder.verify(locks).acquireExclusive(NONE,NODE,3L,40L,41L,nodeId,43L,49L);
  assertEquals(set(21L,22L,23L,2L,3L,50L),collector.set);
}
