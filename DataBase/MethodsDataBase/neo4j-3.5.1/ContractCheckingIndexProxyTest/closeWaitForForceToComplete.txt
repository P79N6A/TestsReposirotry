@Test(timeout=TEST_TIMEOUT) public void closeWaitForForceToComplete() throws Exception {
  CountDownLatch latch=new CountDownLatch(1);
  AtomicReference<Thread> actionThreadReference=new AtomicReference<>();
  final IndexProxy inner=new IndexProxyAdapter(){
    @Override public void force(    IOLimiter ioLimiter){
      try {
        actionThreadReference.get().start();
        latch.await();
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
;
  IndexProxy outer=newContractCheckingIndexProxy(inner);
  Thread actionThread=createActionThread(outer::close);
  actionThreadReference.set(actionThread);
  outer.start();
  Thread thread=runInSeparateThread(() -> outer.force(IOLimiter.UNLIMITED));
  ThreadTestUtils.awaitThreadState(actionThread,TEST_TIMEOUT,Thread.State.TIMED_WAITING);
  latch.countDown();
  thread.join();
  actionThread.join();
}
