@Test(timeout=TEST_TIMEOUT) public void closeWaitForUpdateToFinish() throws IOException, InterruptedException {
  CountDownLatch latch=new CountDownLatch(1);
  final IndexProxy inner=new IndexProxyAdapter(){
    @Override public IndexUpdater newUpdater(    IndexUpdateMode mode){
      return super.newUpdater(mode);
    }
  }
;
  final IndexProxy outer=newContractCheckingIndexProxy(inner);
  Thread actionThread=createActionThread(outer::close);
  outer.start();
  Thread updaterThread=runInSeparateThread(() -> {
    try (IndexUpdater updater=outer.newUpdater(IndexUpdateMode.ONLINE)){
      updater.process(null);
      try {
        actionThread.start();
        latch.await();
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
 catch (    IndexEntryConflictException e) {
      throw new RuntimeException(e);
    }
  }
);
  ThreadTestUtils.awaitThreadState(actionThread,TEST_TIMEOUT,Thread.State.TIMED_WAITING);
  latch.countDown();
  updaterThread.join();
  actionThread.join();
}
