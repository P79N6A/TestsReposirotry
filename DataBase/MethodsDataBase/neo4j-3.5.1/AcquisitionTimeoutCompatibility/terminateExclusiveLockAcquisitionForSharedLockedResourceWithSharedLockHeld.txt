@Test public void terminateExclusiveLockAcquisitionForSharedLockedResourceWithSharedLockHeld() throws InterruptedException {
  client.acquireShared(LockTracer.NONE,ResourceTypes.NODE,1);
  client2.acquireShared(LockTracer.NONE,ResourceTypes.NODE,1);
  Future<Boolean> exclusiveLockAcquisition=threadB.execute(state -> {
    client2.acquireExclusive(LockTracer.NONE,ResourceTypes.NODE,1);
    return true;
  }
);
  assertThat(threadB,isWaiting());
  clock.forward(101,TimeUnit.MILLISECONDS);
  verifyAcquisitionFailure(exclusiveLockAcquisition);
}
