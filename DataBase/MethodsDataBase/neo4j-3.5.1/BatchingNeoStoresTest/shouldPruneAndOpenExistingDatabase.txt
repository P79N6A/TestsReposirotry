@Test public void shouldPruneAndOpenExistingDatabase() throws Exception {
  for (  StoreType typeToTest : relevantRecordStores()) {
    try (PageCache pageCache=storage.pageCache()){
      storage.directory().cleanup();
      try (BatchingNeoStores stores=BatchingNeoStores.batchingNeoStoresWithExternalPageCache(storage.fileSystem(),pageCache,PageCacheTracer.NULL,storage.directory().absolutePath(),LATEST_RECORD_FORMATS,DEFAULT,NullLogService.getInstance(),EMPTY,Config.defaults())){
        stores.createNew();
        for (        StoreType type : relevantRecordStores()) {
          createRecordIn(stores.getNeoStores().getRecordStore(type));
        }
      }
       try (BatchingNeoStores stores=BatchingNeoStores.batchingNeoStoresWithExternalPageCache(storage.fileSystem(),pageCache,PageCacheTracer.NULL,storage.directory().absolutePath(),LATEST_RECORD_FORMATS,DEFAULT,NullLogService.getInstance(),EMPTY,Config.defaults())){
        stores.pruneAndOpenExistingStore(type -> type == typeToTest,Predicates.alwaysFalse());
        for (        StoreType type : relevantRecordStores()) {
          RecordStore<AbstractBaseRecord> store=stores.getNeoStores().getRecordStore(type);
          if (type == typeToTest) {
            assertThat(store.toString(),(int)store.getHighId(),greaterThan(store.getNumberOfReservedLowIds()));
          }
 else {
            assertEquals(store.toString(),store.getNumberOfReservedLowIds(),store.getHighId());
          }
        }
      }
     }
   }
}
