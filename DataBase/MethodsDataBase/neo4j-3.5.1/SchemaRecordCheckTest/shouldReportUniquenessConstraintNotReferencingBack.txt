@Test void shouldReportUniquenessConstraintNotReferencingBack() throws Exception {
  int ruleId1=0;
  int ruleId2=1;
  DynamicRecord record1=inUse(dynamicRecord(ruleId1));
  DynamicRecord record2=inUse(dynamicRecord(ruleId2));
  IndexProviderDescriptor providerDescriptor=new IndexProviderDescriptor("in-memory","1.0");
  StoreIndexDescriptor rule1=constraintIndexRule(ruleId1,labelId,propertyKeyId,providerDescriptor,(long)ruleId2);
  ConstraintRule rule2=uniquenessConstraintRule(ruleId2,labelId,propertyKeyId,ruleId2);
  when(checker().ruleAccess.loadSingleSchemaRule(ruleId1)).thenReturn(rule1);
  when(checker().ruleAccess.loadSingleSchemaRule(ruleId2)).thenReturn(rule2);
  add(inUse(new LabelTokenRecord(labelId)));
  add(inUse(new PropertyKeyTokenRecord(propertyKeyId)));
  check(record1);
  check(record2);
  SchemaRecordCheck obligationChecker=checker().forObligationChecking();
  check(obligationChecker,record1);
  ConsistencyReport.SchemaConsistencyReport report=check(obligationChecker,record2);
  verify(report).uniquenessConstraintNotReferencingBack(record1);
}
