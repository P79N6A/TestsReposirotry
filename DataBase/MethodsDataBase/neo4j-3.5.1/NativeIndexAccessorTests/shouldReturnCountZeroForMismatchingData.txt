@Test public void shouldReturnCountZeroForMismatchingData() throws Exception {
  IndexEntryUpdate<IndexDescriptor>[] updates=someUpdatesSingleTypeNoDuplicates();
  processAll(updates);
  IndexReader reader=accessor.newReader();
  for (  IndexEntryUpdate<IndexDescriptor> update : updates) {
    int[] propKeys=valueCreatorUtil.indexDescriptor.properties();
    long countWithMismatchingData=reader.countIndexedNodes(update.getEntityId() + 1,propKeys,update.values());
    long countWithNonExistentEntityId=reader.countIndexedNodes(NON_EXISTENT_ENTITY_ID,propKeys,update.values());
    long countWithNonExistentValue=reader.countIndexedNodes(update.getEntityId(),propKeys,generateUniqueValue(updates));
    assertEquals(0,countWithMismatchingData);
    assertEquals(0,countWithNonExistentEntityId);
    assertEquals(0,countWithNonExistentValue);
  }
}
