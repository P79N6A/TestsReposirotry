@Test public void shouldReportInTransactionNodeProperty() throws Exception {
  long node;
  int p1, p2, p3, p4, p5;
  try (Transaction tx=beginTransaction()){
    node=tx.dataWrite().nodeCreate();
    p1=tx.tokenWrite().propertyKeyCreateForName("p1");
    p2=tx.tokenWrite().propertyKeyCreateForName("p2");
    p3=tx.tokenWrite().propertyKeyCreateForName("p3");
    p4=tx.tokenWrite().propertyKeyCreateForName("p4");
    p5=tx.tokenWrite().propertyKeyCreateForName("p5");
    tx.dataWrite().nodeSetProperty(node,p1,Values.of(1));
    tx.dataWrite().nodeSetProperty(node,p3,Values.of(3));
    tx.dataWrite().nodeSetProperty(node,p4,Values.of(4));
    tx.success();
  }
   try (Transaction tx=beginTransaction()){
    tx.dataWrite().nodeSetProperty(node,p3,Values.of(13));
    tx.dataWrite().nodeRemoveProperty(node,p4);
    tx.dataWrite().nodeSetProperty(node,p5,Values.of(15));
    assertNull("Unchanged existing property is null",tx.dataRead().nodePropertyChangeInTransactionOrNull(node,p1));
    assertNull("Unchanged missing property is null",tx.dataRead().nodePropertyChangeInTransactionOrNull(node,p2));
    assertEquals("Changed property is new value",Values.of(13),tx.dataRead().nodePropertyChangeInTransactionOrNull(node,p3));
    assertEquals("Removed property is NO_VALUE",Values.NO_VALUE,tx.dataRead().nodePropertyChangeInTransactionOrNull(node,p4));
    assertEquals("Added property is new value",Values.of(15),tx.dataRead().nodePropertyChangeInTransactionOrNull(node,p5));
  }
 }
