@Test public void shouldRespondWithMetadataToDiscardAll() throws Throwable {
  connection.connect(address).send(util.defaultAcceptedVersions()).send(util.chunk(new InitMessage("TestClient/1.1",emptyMap()),new RunMessage("UNWIND [1,2,3] AS a RETURN a, a * a AS a_squared"),DiscardAllMessage.INSTANCE));
  assertThat(connection,util.eventuallyReceivesSelectedProtocolVersion());
  Matcher<Map<? extends String,?>> entryFieldsMatcher=hasEntry(is("fields"),equalTo(asList("a","a_squared")));
  Matcher<Map<? extends String,?>> entryTypeMatcher=hasEntry(is("type"),equalTo("r"));
  assertThat(connection,util.eventuallyReceives(msgSuccess(),msgSuccess(CoreMatchers.allOf(entryFieldsMatcher,hasKey("result_available_after"))),msgSuccess(CoreMatchers.allOf(entryTypeMatcher,hasKey("result_consumed_after")))));
}
