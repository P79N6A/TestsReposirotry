@Test public void shouldRunProcedure() throws Throwable {
  connection.connect(address).send(util.defaultAcceptedVersions()).send(util.chunk(new InitMessage("TestClient/1.1",emptyMap()),new RunMessage("CREATE (n:Test {age: 2}) RETURN n.age AS age"),PullAllMessage.INSTANCE));
  assertThat(connection,util.eventuallyReceivesSelectedProtocolVersion());
  Matcher<Map<? extends String,?>> ageMatcher=hasEntry(is("fields"),equalTo(singletonList("age")));
  assertThat(connection,util.eventuallyReceives(msgSuccess(),msgSuccess(CoreMatchers.allOf(ageMatcher,hasKey("result_available_after"))),msgRecord(eqRecord(equalTo(longValue(2L)))),msgSuccess()));
  connection.send(util.chunk(new RunMessage("CALL db.labels() YIELD label"),PullAllMessage.INSTANCE));
  Matcher<Map<? extends String,?>> entryFieldsMatcher=hasEntry(is("fields"),equalTo(singletonList("label")));
  assertThat(connection,util.eventuallyReceives(msgSuccess(CoreMatchers.allOf(entryFieldsMatcher,hasKey("result_available_after"))),msgRecord(eqRecord(Matchers.equalTo(stringValue("Test")))),msgSuccess()));
}
