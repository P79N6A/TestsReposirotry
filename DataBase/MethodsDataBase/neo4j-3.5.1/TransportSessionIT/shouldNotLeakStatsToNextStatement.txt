@Test public void shouldNotLeakStatsToNextStatement() throws Throwable {
  connection.connect(address).send(util.defaultAcceptedVersions()).send(util.chunk(new InitMessage("TestClient/1.1",emptyMap()),new RunMessage("CREATE (n)"),PullAllMessage.INSTANCE));
  assertThat(connection,util.eventuallyReceivesSelectedProtocolVersion());
  assertThat(connection,util.eventuallyReceives(msgSuccess(),msgSuccess(),msgSuccess()));
  connection.send(util.chunk(new RunMessage("RETURN 1"),PullAllMessage.INSTANCE));
  Matcher<Map<? extends String,?>> typeMatcher=hasEntry(is("type"),equalTo("r"));
  assertThat(connection,util.eventuallyReceives(msgSuccess(),msgRecord(eqRecord(equalTo(longValue(1L)))),msgSuccess(CoreMatchers.allOf(typeMatcher,hasKey("result_consumed_after")))));
}
