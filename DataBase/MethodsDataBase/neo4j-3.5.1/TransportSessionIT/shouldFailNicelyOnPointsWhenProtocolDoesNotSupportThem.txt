@Test public void shouldFailNicelyOnPointsWhenProtocolDoesNotSupportThem() throws Throwable {
  assumeThat(neo4jPack.version(),equalTo(Neo4jPackV1.VERSION));
  connection.connect(address).send(util.defaultAcceptedVersions()).send(util.chunk(new InitMessage("TestClient/1.1",emptyMap()),new RunMessage("RETURN point({x:13, y:37, crs:'cartesian'}) as p"),PullAllMessage.INSTANCE));
  assertThat(connection,util.eventuallyReceivesSelectedProtocolVersion());
  Matcher<Map<? extends String,?>> fieldsMatcher=hasEntry(is("fields"),equalTo(singletonList("p")));
  assertThat(connection,util.eventuallyReceives(msgSuccess(),msgSuccess(CoreMatchers.allOf(fieldsMatcher,hasKey("result_available_after"))),msgFailure(Status.Request.Invalid,"Point is not supported as a return type in Bolt")));
}
