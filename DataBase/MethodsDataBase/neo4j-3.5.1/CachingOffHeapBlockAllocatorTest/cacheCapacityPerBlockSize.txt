@Test void cacheCapacityPerBlockSize(){
  final int EXTRA=3;
  final List<MemoryBlock> blocks64=new ArrayList<>();
  final List<MemoryBlock> blocks128=new ArrayList<>();
  for (int i=0; i < CACHE_SIZE + EXTRA; i++) {
    blocks64.add(allocator.allocate(64,memoryTracker));
    blocks128.add(allocator.allocate(128,memoryTracker));
  }
  verify(allocator,times(CACHE_SIZE + EXTRA)).allocateNew(eq(64L),any());
  verify(allocator,times(CACHE_SIZE + EXTRA)).allocateNew(eq(128L),any());
  assertEquals((CACHE_SIZE + EXTRA) * (64 + 128 + 2 * (Long.BYTES - 1)),memoryTracker.usedDirectMemory());
  blocks64.forEach(it -> allocator.free(it,memoryTracker));
  assertEquals((CACHE_SIZE + EXTRA) * (128 + Long.BYTES - 1),memoryTracker.usedDirectMemory());
  blocks128.forEach(it -> allocator.free(it,memoryTracker));
  assertEquals(0,memoryTracker.usedDirectMemory());
  verify(allocator,times(EXTRA * 2)).doFree(any(),any());
}
