@Test @Documented("Return results in graph format\n" + "\n" + "If you want to understand the graph structure of nodes and relationships returned by your query,\n"+ "you can specify the \"graph\" results data format. For example, this is useful when you want to visualise the\n"+ "graph structure. The format collates all the nodes and relationships from all columns of the result,\n"+ "and also flattens collections of nodes and relationships, including paths.") public void return_results_in_graph_format() throws JsonParseException {
  ResponseEntity response=gen.get().expectedStatus(200).payload(quotedJson("{'statements':[{'statement':" + "'CREATE ( bike:Bike { weight: 10 } ) " + "CREATE ( frontWheel:Wheel { spokes: 3 } ) "+ "CREATE ( backWheel:Wheel { spokes: 32 } ) "+ "CREATE p1 = (bike)-[:HAS { position: 1 } ]->(frontWheel) "+ "CREATE p2 = (bike)-[:HAS { position: 2 } ]->(backWheel) "+ "RETURN bike, p1, p2', "+ "'resultDataContents': ['row','graph']}] }")).post(getDataUri() + "transaction/commit");
  Map<String,Object> result=jsonToMap(response.entity());
  assertNoErrors(result);
  Map<String,List<Object>> row=graphRow(result,0);
  assertEquals(3,row.get("nodes").size());
  assertEquals(2,row.get("relationships").size());
}
