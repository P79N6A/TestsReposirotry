@Test @Documented("Rollback an open transaction\n" + "\n" + "Given that you have an open transaction, you can send a rollback request. The server will rollback the\n"+ "transaction. Any further statements trying to run in this transaction will fail immediately.") public void rollback_an_open_transaction() throws JsonParseException {
  HTTP.Response firstReq=POST(getDataUri() + "transaction",HTTP.RawPayload.quotedJson("{ 'statements': [ { 'statement': 'CREATE (n) RETURN id(n)' } ] }"));
  String location=firstReq.location();
  ResponseEntity response=gen.get().expectedStatus(200).delete(location);
  Map<String,Object> result=jsonToMap(response.entity());
  assertNoErrors(result);
  Integer id=resultCell(firstReq,0,0);
  assertThat(GET(getNodeUri(id)).status(),is(404));
}
