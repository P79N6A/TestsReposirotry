@Test @Documented("Execute statements in an open transaction in REST format for the return.\n" + "\n" + "Given that you have an open transaction, you can make a number of requests, each of which executes additional\n"+ "statements, and keeps the transaction open by resetting the transaction timeout. Specifying the `REST` format will\n"+ "give back full Neo4j Rest API representations of the Neo4j Nodes, Relationships and Paths, if returned.") public void execute_statements_in_an_open_transaction_using_REST() throws JsonParseException {
  String location=POST(getDataUri() + "transaction").location();
  ResponseEntity response=gen.get().expectedStatus(200).payload(quotedJson("{ 'statements': [ { 'statement': 'CREATE (n) RETURN n','resultDataContents':['REST'] } ] }")).post(location);
  Map<String,Object> result=jsonToMap(response.entity());
  ArrayList rest=(ArrayList)((Map)((ArrayList)((Map)((ArrayList)result.get("results")).get(0)).get("data")).get(0)).get("rest");
  String selfUri=(String)((Map)rest.get(0)).get("self");
  assertTrue(selfUri.startsWith(getDatabaseUri()));
  assertNoErrors(result);
}
