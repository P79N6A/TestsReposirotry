@Test public void tryEvictMustNotFlushPageIfNotModified() throws Exception {
  pageList.unlockExclusive(pageRef);
  AtomicInteger writes=new AtomicInteger();
  PageSwapper swapper=new DummyPageSwapper("a",313){
    @Override public long write(    long filePageId,    long bufferAddress) throws IOException {
      writes.getAndIncrement();
      return super.write(filePageId,bufferAddress);
    }
  }
;
  int swapperId=swappers.allocate(swapper);
  doFault(swapperId,42);
  pageList.unlockExclusive(pageRef);
  assertFalse(pageList.isModified(pageRef));
  assertTrue(pageList.tryEvict(pageRef,EvictionRunEvent.NULL));
  assertThat(writes.get(),is(0));
}
