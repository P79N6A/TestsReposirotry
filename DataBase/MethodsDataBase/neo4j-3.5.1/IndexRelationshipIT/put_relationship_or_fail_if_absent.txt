@Documented("Add an existing relationship to a unique index (not indexed).\n" + "\n" + "If a relationship matching the given key and value already exists in the index, it will be returned.\n"+ "If not, an `HTTP 409` (conflict) status will be returned in this case, as we are using `create_or_fail`.\n"+ "\n"+ "It's possible to use `get_or_create` uniqueness as well.\n"+ "\n"+ "NOTE: The type and direction of the relationship is not regarded when determining uniqueness.") @Test public void put_relationship_or_fail_if_absent(){
  final String index=indexes.newInstance();
  String key="name";
  String value="Peter";
  helper.createRelationshipIndex(index);
  gen.get().expectedStatus(201).payloadType(MediaType.APPLICATION_JSON_TYPE).payload("{\"key\": \"" + key + "\", \"value\": \""+ value+ "\", \"uri\":\""+ functionalTestHelper.relationshipUri(helper.createRelationship("KNOWS",helper.createNode(),helper.createNode()))+ "\"}").post(functionalTestHelper.relationshipIndexUri() + index + "?uniqueness=create_or_fail");
}
