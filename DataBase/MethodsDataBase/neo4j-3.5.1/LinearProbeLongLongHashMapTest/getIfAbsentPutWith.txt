@Test void getIfAbsentPutWith(){
  @SuppressWarnings({"Convert2Lambda","Anonymous2MethodRef"}) final LongFunction<String> function=spy(new LongFunction<String>(){
    @Override public long longValueOf(    String s){
      return Long.valueOf(s);
    }
  }
);
  assertEquals(10,map.getIfAbsentPutWith(0,function,"10"));
  assertEquals(10,map.getIfAbsentPutWith(0,function,"10"));
  assertEquals(11,map.getIfAbsentPutWith(1,function,"11"));
  assertEquals(11,map.getIfAbsentPutWith(1,function,"11"));
  assertEquals(12,map.getIfAbsentPutWith(2,function,"12"));
  assertEquals(12,map.getIfAbsentPutWith(2,function,"12"));
  verify(function).longValueOf(eq("10"));
  verify(function).longValueOf(eq("11"));
  verify(function).longValueOf(eq("12"));
  verifyNoMoreInteractions(function);
}
