@Test public void shouldCloseAllTheStoreEvenIfExceptionsAreThrown() throws Exception {
  FileSystemAbstraction fileSystem=fs.get();
  Config defaults=Config.defaults(counts_store_rotation_timeout,"60m");
  StoreFactory factory=getStoreFactory(defaults,databaseLayout,fileSystem,LOG_PROVIDER);
  NeoStores neoStore=factory.openAllNeoStores(true);
  CountsTracker counts=neoStore.getCounts();
  counts.start();
  long nextTxId=neoStore.getMetaDataStore().getLastCommittedTransactionId() + 1;
  AtomicReference<Throwable> exRef=new AtomicReference<>();
  Thread thread=new Thread(() -> {
    try {
      counts.rotate(nextTxId);
    }
 catch (    InterruptedIOException e) {
    }
catch (    Throwable e) {
      exRef.set(e);
      throw new RuntimeException(e);
    }
  }
);
  thread.start();
  ThreadTestUtils.awaitThreadState(thread,TimeUnit.SECONDS.toMillis(5),Thread.State.TIMED_WAITING,Thread.State.WAITING);
  try {
    neoStore.close();
    fail("should have thrown2");
  }
 catch (  IllegalStateException ex) {
    assertEquals("Cannot stop in state: rotating",ex.getMessage());
  }
  thread.interrupt();
  thread.join();
  pageCache.close();
  assertNull(exRef.get());
}
