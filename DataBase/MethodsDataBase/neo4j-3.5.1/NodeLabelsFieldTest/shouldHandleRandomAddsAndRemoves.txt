@Test public void shouldHandleRandomAddsAndRemoves(){
  Set<Integer> key=new HashSet<>();
  NodeRecord node=new NodeRecord(0);
  node.setInUse(true);
  for (int i=0; i < 100_000; i++) {
    NodeLabels labels=NodeLabelsField.parseLabelsField(node);
    int labelId=random.nextInt(200);
    if (random.nextBoolean()) {
      if (!key.contains(labelId)) {
        labels.add(labelId,nodeStore,nodeStore.getDynamicLabelStore());
        key.add(labelId);
      }
    }
 else {
      if (key.remove(labelId)) {
        labels.remove(labelId,nodeStore);
      }
    }
  }
  NodeLabels labels=NodeLabelsField.parseLabelsField(node);
  long[] readLabelIds=labels.get(nodeStore);
  for (  long labelId : readLabelIds) {
    assertTrue("Found an unexpected label " + labelId,key.remove((int)labelId));
  }
  assertTrue(key.isEmpty());
}
