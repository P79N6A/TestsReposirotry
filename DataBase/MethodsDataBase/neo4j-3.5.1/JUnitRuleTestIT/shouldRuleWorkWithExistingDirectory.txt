@Test public void shouldRuleWorkWithExistingDirectory() throws Throwable {
  File oldDir=testDirectory.directory("old");
  File storeDir=Config.defaults(GraphDatabaseSettings.data_directory,oldDir.toPath().toString()).get(GraphDatabaseSettings.database_path);
  GraphDatabaseService db=new TestGraphDatabaseFactory().newEmbeddedDatabase(storeDir);
  try {
    db.execute("CREATE ()");
  }
  finally {
    db.shutdown();
  }
  File newDir=testDirectory.directory("new");
  final Neo4jRule ruleWithDirectory=new Neo4jRule(newDir).copyFrom(oldDir);
  Statement statement=ruleWithDirectory.apply(new Statement(){
    @Override public void evaluate(){
      Result result=ruleWithDirectory.getGraphDatabaseService().execute("MATCH (n) RETURN count(n) AS " + "count");
      List<Object> column=Iterators.asList(result.columnAs("count"));
      assertEquals(1,column.size());
      assertEquals(1L,column.get(0));
    }
  }
,null);
  statement.evaluate();
}
