@Test public void betterTentativePath(){
  EstimateEvaluator<Double> estimator=(node,goal) -> (Double)node.getProperty("estimate");
  PathFinder<WeightedPath> finder=aStar(PathExpanders.allTypesAndDirections(),doubleCostEvaluator("weight",0d),estimator);
  final Node node1=graph.makeNode("1","estimate",0.003d);
  final Node node2=graph.makeNode("2","estimate",0.002d);
  final Node node3=graph.makeNode("3","estimate",0.001d);
  final Node node4=graph.makeNode("4","estimate",0d);
  graph.makeEdge("1","3","weight",0.253d);
  graph.makeEdge("1","2","weight",0.018d);
  graph.makeEdge("2","4","weight",0.210d);
  graph.makeEdge("2","3","weight",0.180d);
  graph.makeEdge("2","3","weight",0.024d);
  graph.makeEdge("3","4","weight",0.135d);
  graph.makeEdge("3","4","weight",0.013d);
  WeightedPath best14=finder.findSinglePath(node1,node4);
  assertPath(best14,node1,node2,node3,node4);
}
