@Test public void shouldPerformSpatialRangeSearch() throws KernelException {
  boolean needsValues=indexProvidesSpatialValues();
  int label=token.nodeLabel("Node");
  int prop=token.propertyKey("prop");
  IndexReference index=schemaRead.index(label,prop);
  IndexValueCapability spatialCapability=index.valueCapability(ValueCategory.GEOMETRY);
  try (NodeValueIndexCursor node=cursors.allocateNodeValueIndexCursor()){
    MutableLongSet uniqueIds=new LongHashSet();
    read.nodeIndexSeek(index,node,IndexOrder.NONE,needsValues,IndexQuery.range(prop,Cartesian));
    assertFoundNodesAndValue(node,5,uniqueIds,spatialCapability,needsValues);
    read.nodeIndexSeek(index,node,IndexOrder.NONE,needsValues,IndexQuery.range(prop,Cartesian_3D));
    assertFoundNodesAndValue(node,1,uniqueIds,spatialCapability,needsValues);
    read.nodeIndexSeek(index,node,IndexOrder.NONE,needsValues,IndexQuery.range(prop,WGS84));
    assertFoundNodesAndValue(node,1,uniqueIds,spatialCapability,needsValues);
    read.nodeIndexSeek(index,node,IndexOrder.NONE,needsValues,IndexQuery.range(prop,WGS84_3D));
    assertFoundNodesAndValue(node,1,uniqueIds,spatialCapability,needsValues);
  }
 }
