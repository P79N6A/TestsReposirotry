@Test public void shouldHandleCompositeSizesCloseToTheLimit() throws KernelException {
  createIndex(KEY,KEY2);
  int length=20_000;
  String string1=random.nextAlphaNumericString(length,length);
  String string2=random.nextAlphaNumericString(length,length);
  Node node;
  try (Transaction tx=db.beginTx()){
    node=db.createNode(LABEL);
    node.setProperty(KEY,string1);
    node.setProperty(KEY2,string2);
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    KernelTransaction ktx=db.getDependencyResolver().resolveDependency(ThreadToStatementContextBridge.class).getKernelTransactionBoundToThisThread(true);
    int labelId=ktx.tokenRead().nodeLabel(LABEL.name());
    int propertyKeyId1=ktx.tokenRead().propertyKey(KEY);
    int propertyKeyId2=ktx.tokenRead().propertyKey(KEY2);
    try (NodeValueIndexCursor cursor=ktx.cursors().allocateNodeValueIndexCursor()){
      ktx.dataRead().nodeIndexSeek(TestIndexDescriptorFactory.forLabel(labelId,propertyKeyId1,propertyKeyId2),cursor,IndexOrder.NONE,false,IndexQuery.exact(propertyKeyId1,string1),IndexQuery.exact(propertyKeyId2,string2));
      assertTrue(cursor.next());
      assertEquals(node.getId(),cursor.nodeReference());
      assertFalse(cursor.next());
    }
     tx.success();
  }
 }
