@Test public void shouldSeeExpectedTransactionData(){
  final Graph state=new Graph(db,random);
  final ExpectedTransactionData expected=new ExpectedTransactionData(true);
  final TransactionEventHandler<Object> handler=new VerifyingTransactionEventHandler(expected);
  try (Transaction tx=db.beginTx()){
    for (int i=0; i < 100; i++) {
      Operation.createNode.perform(state,expected);
    }
    for (int i=0; i < 20; i++) {
      Operation.createRelationship.perform(state,expected);
    }
    tx.success();
  }
   db.registerTransactionEventHandler(handler);
  Operation[] operations=Operation.values();
  for (int i=0; i < 1_000; i++) {
    expected.clear();
    try (Transaction tx=db.beginTx()){
      int transactionSize=random.intBetween(1,20);
      for (int j=0; j < transactionSize; j++) {
        random.among(operations).perform(state,expected);
      }
      tx.success();
    }
   }
}
