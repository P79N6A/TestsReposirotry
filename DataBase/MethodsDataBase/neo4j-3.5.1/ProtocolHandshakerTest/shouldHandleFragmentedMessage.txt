@Test public void shouldHandleFragmentedMessage(){
  BoltProtocol protocol=newBoltProtocol(1);
  BoltProtocolFactory handlerFactory=newProtocolFactory(1,protocol);
  EmbeddedChannel channel=new EmbeddedChannel(new ProtocolHandshaker(handlerFactory,boltChannel,logProvider,false,true));
  channel.writeInbound(Unpooled.wrappedBuffer(new byte[]{(byte)0x60,(byte)0x60,(byte)0xB0}));
  assertEquals(0,channel.outboundMessages().size());
  channel.writeInbound(Unpooled.wrappedBuffer(new byte[]{(byte)0x17,0,0,0}));
  assertEquals(0,channel.outboundMessages().size());
  channel.writeInbound(Unpooled.wrappedBuffer(new byte[]{0,0,0}));
  assertEquals(0,channel.outboundMessages().size());
  channel.writeInbound(Unpooled.wrappedBuffer(new byte[]{0,1,0,0,0}));
  assertEquals(0,channel.outboundMessages().size());
  channel.writeInbound(Unpooled.wrappedBuffer(new byte[]{0,0,0}));
  assertEquals(0,channel.outboundMessages().size());
  channel.writeInbound(Unpooled.wrappedBuffer(new byte[]{0,0}));
  assertEquals(1,channel.outboundMessages().size());
  assertByteBufEquals(Unpooled.buffer().writeInt(1),channel.readOutbound());
  thrown.expect(NoSuchElementException.class);
  channel.pipeline().remove(ProtocolHandshaker.class);
  assertTrue(channel.isActive());
  verify(protocol).install();
}
