@Test void shouldPerformFailedTransitionsCorrectly() throws Throwable {
  for (int state=0; state < State.values().length; state++) {
    for (int op=0; op < ops.length; op++) {
      MyFailedLife sf=new MyFailedLife(State.values()[state]);
      boolean caughtIllegalTransition=false;
      boolean failedOperation=false;
      try {
        ops[op].accept(sf);
      }
 catch (      IllegalStateException e) {
        caughtIllegalTransition=true;
      }
catch (      UnsupportedOperationException e) {
        failedOperation=true;
      }
      if (onFailed[state][op] == null) {
        assertTrue(caughtIllegalTransition);
        assertEquals(State.values()[state],sf.state());
      }
 else {
        assertFalse(caughtIllegalTransition);
        assertEquals(onFailed[state][op],sf.state());
        if (ignored[state][op]) {
          assertEquals(-1,sf.opCode);
          assertFalse(failedOperation);
        }
 else {
          assertEquals(op,sf.opCode);
          assertTrue(failedOperation);
        }
      }
    }
  }
}
