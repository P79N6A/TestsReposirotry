@Test void provideSelectiveWatcher() throws IOException {
  File specialFile=new File("special");
  File otherFile=new File("other");
  FileSystemAbstraction normal=mock(FileSystemAbstraction.class);
  FileSystemAbstraction special=mock(FileSystemAbstraction.class);
  FileWatcher specialWatcher=mock(FileWatcher.class);
  FileWatcher normalWatcher=mock(FileWatcher.class);
  WatchedResource specialResource=mock(WatchedResource.class);
  WatchedResource normalResource=mock(WatchedResource.class);
  when(special.fileWatcher()).thenReturn(specialWatcher);
  when(normal.fileWatcher()).thenReturn(normalWatcher);
  when(specialWatcher.watch(specialFile)).thenReturn(specialResource);
  when(normalWatcher.watch(otherFile)).thenReturn(normalResource);
  try (SelectiveFileSystemAbstraction fs=new SelectiveFileSystemAbstraction(specialFile,special,normal)){
    FileWatcher fileWatcher=fs.fileWatcher();
    assertSame(specialResource,fileWatcher.watch(specialFile));
    assertSame(normalResource,fileWatcher.watch(otherFile));
  }
 }
