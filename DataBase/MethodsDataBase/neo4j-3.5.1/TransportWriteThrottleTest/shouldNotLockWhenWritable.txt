@Test public void shouldNotLockWhenWritable() throws Exception {
  TestThrottleLock lockOverride=new TestThrottleLock();
  TransportThrottle throttle=newThrottleAndInstall(channel,lockOverride);
  when(channel.isWritable()).thenReturn(true);
  Future future=otherThread.execute(state -> {
    throttle.acquire(channel);
    return null;
  }
);
  try {
    future.get(2000,TimeUnit.MILLISECONDS);
  }
 catch (  Throwable t) {
    fail("should not throw");
  }
  assertTrue(future.isDone());
  assertThat(lockOverride.lockCallCount(),is(0));
  assertThat(lockOverride.unlockCallCount(),is(0));
}
