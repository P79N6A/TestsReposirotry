@Test public void shouldThrowThrottleExceptionWhenMaxDurationIsReached() throws Exception {
  TestThrottleLock lockOverride=new TestThrottleLock();
  FakeClock clock=Clocks.fakeClock(1,TimeUnit.SECONDS);
  TransportThrottle throttle=newThrottleAndInstall(channel,lockOverride,clock,Duration.ofSeconds(5));
  when(channel.isWritable()).thenReturn(false);
  Future<Void> future=otherThread.execute(state -> {
    throttle.acquire(channel);
    return null;
  }
);
  otherThread.get().waitUntilWaiting();
  clock.forward(6,TimeUnit.SECONDS);
  try {
    future.get(1,TimeUnit.MINUTES);
    fail("expecting ExecutionException");
  }
 catch (  ExecutionException ex) {
    assertThat(ex.getCause(),instanceOf(TransportThrottleException.class));
    assertThat(ex.getMessage(),containsString("will be closed because the client did not consume outgoing buffers for"));
  }
}
