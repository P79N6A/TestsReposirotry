@Test public void supported_simple_type_is_valid(){
  assertThat(validator.test(typeMirrorTestUtils.typeOf(BOOLEAN))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(LONG))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(DOUBLE))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Boolean.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Long.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Double.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(String.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Number.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Object.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Node.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Relationship.class))).isTrue();
  assertThat(validator.test(typeMirrorTestUtils.typeOf(Path.class))).isTrue();
}
