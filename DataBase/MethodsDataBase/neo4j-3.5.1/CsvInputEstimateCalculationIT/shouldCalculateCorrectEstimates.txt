@Test public void shouldCalculateCorrectEstimates() throws Exception {
  Input input=generateData();
  RecordFormats format=LATEST_RECORD_FORMATS;
  Input.Estimates estimates=input.calculateEstimates(new PropertyValueRecordSizeCalculator(format.property().getRecordSize(NO_STORE_HEADER),parseInt(GraphDatabaseSettings.string_block_size.getDefaultValue()),0,parseInt(GraphDatabaseSettings.array_block_size.getDefaultValue()),0));
  DatabaseLayout databaseLayout=directory.databaseLayout();
  Config config=Config.defaults();
  FileSystemAbstraction fs=new DefaultFileSystemAbstraction();
  try (JobScheduler jobScheduler=new ThreadPoolJobScheduler()){
    new ParallelBatchImporter(databaseLayout,fs,null,Configuration.DEFAULT,NullLogService.getInstance(),ExecutionMonitors.invisible(),AdditionalInitialIds.EMPTY,config,format,NO_MONITOR,jobScheduler).doImport(input);
    VersionContextSupplier contextSupplier=EmptyVersionContextSupplier.EMPTY;
    try (PageCache pageCache=new ConfiguringPageCacheFactory(fs,config,PageCacheTracer.NULL,PageCursorTracerSupplier.NULL,NullLog.getInstance(),contextSupplier,jobScheduler).getOrCreatePageCache();NeoStores stores=new StoreFactory(databaseLayout,config,new DefaultIdGeneratorFactory(fs),pageCache,fs,NullLogProvider.getInstance(),contextSupplier).openAllNeoStores()){
      assertRoughlyEqual(estimates.numberOfNodes(),stores.getNodeStore().getNumberOfIdsInUse());
      assertRoughlyEqual(estimates.numberOfRelationships(),stores.getRelationshipStore().getNumberOfIdsInUse());
      assertRoughlyEqual(estimates.numberOfNodeProperties() + estimates.numberOfRelationshipProperties(),calculateNumberOfProperties(stores));
    }
     assertRoughlyEqual(propertyStorageSize(),estimates.sizeOfNodeProperties() + estimates.sizeOfRelationshipProperties());
  }
 }
