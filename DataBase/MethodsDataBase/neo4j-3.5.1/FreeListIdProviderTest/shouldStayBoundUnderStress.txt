@Test void shouldStayBoundUnderStress() throws Exception {
  MutableLongSet acquired=new LongHashSet();
  List<Long> acquiredList=new ArrayList<>();
  long stableGeneration=GenerationSafePointer.MIN_GENERATION;
  long unstableGeneration=stableGeneration + 1;
  int iterations=100;
  for (int i=0; i < iterations; i++) {
    for (int j=0; j < 10; j++) {
      if (random.nextBoolean()) {
        int count=random.intBetween(5,10);
        for (int k=0; k < count; k++) {
          long acquiredId=freelist.acquireNewId(stableGeneration,unstableGeneration);
          assertTrue(acquired.add(acquiredId));
          acquiredList.add(acquiredId);
        }
      }
 else {
        int count=random.intBetween(5,20);
        for (int k=0; k < count && !acquired.isEmpty(); k++) {
          long id=acquiredList.remove(random.nextInt(acquiredList.size()));
          assertTrue(acquired.remove(id));
          freelist.releaseId(stableGeneration,unstableGeneration,id);
        }
      }
    }
    for (    long id : acquiredList) {
      freelist.releaseId(stableGeneration,unstableGeneration,id);
    }
    acquiredList.clear();
    acquired.clear();
    stableGeneration=unstableGeneration;
    unstableGeneration++;
  }
  assertTrue(freelist.lastId() < 200,String.valueOf(freelist.lastId()));
}
