@Test void shouldVisitUnacquiredIds() throws Exception {
  MutableLongSet expected=new LongHashSet();
  for (int i=0; i < 100; i++) {
    expected.add(freelist.acquireNewId(GENERATION_ONE,GENERATION_TWO));
  }
  expected.forEach(id -> {
    try {
      freelist.releaseId(GENERATION_ONE,GENERATION_TWO,id);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
);
  for (int i=0; i < 10; i++) {
    long acquiredId=freelist.acquireNewId(GENERATION_TWO,GENERATION_THREE);
    assertTrue(expected.remove(acquiredId));
  }
  freelist.visitUnacquiredIds(unacquiredId -> assertTrue(expected.remove(unacquiredId)),GENERATION_THREE);
  assertTrue(expected.isEmpty());
}
