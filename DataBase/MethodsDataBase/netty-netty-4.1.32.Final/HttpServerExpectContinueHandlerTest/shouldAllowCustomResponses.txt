@Test public void shouldAllowCustomResponses(){
  EmbeddedChannel channel=new EmbeddedChannel(new HttpServerExpectContinueHandler(){
    @Override protected HttpResponse acceptMessage(    HttpRequest request){
      return null;
    }
    @Override protected HttpResponse rejectResponse(    HttpRequest request){
      return new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.REQUEST_ENTITY_TOO_LARGE);
    }
  }
);
  HttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,"/");
  HttpUtil.set100ContinueExpected(request,true);
  channel.writeInbound(request);
  HttpResponse response=channel.readOutbound();
  assertThat(response.status(),is(HttpResponseStatus.REQUEST_ENTITY_TOO_LARGE));
  ReferenceCountUtil.release(response);
  assertTrue(channel.inboundMessages().isEmpty());
  assertFalse(channel.finishAndReleaseAll());
}
