@Test public void sendingGoAwayShouldNotFailStreams(){
  encoder.writeSettingsAck(ctx,newPromise());
  setMaxConcurrentStreams(1);
  when(writer.writeHeaders(any(ChannelHandlerContext.class),anyInt(),any(Http2Headers.class),anyInt(),anyBoolean(),any(ChannelPromise.class))).thenAnswer(successAnswer());
  when(writer.writeHeaders(any(ChannelHandlerContext.class),anyInt(),any(Http2Headers.class),anyInt(),anyShort(),anyBoolean(),anyInt(),anyBoolean(),any(ChannelPromise.class))).thenAnswer(successAnswer());
  ChannelFuture f1=encoderWriteHeaders(3,newPromise());
  assertEquals(0,encoder.numBufferedStreams());
  ChannelFuture f2=encoderWriteHeaders(5,newPromise());
  assertEquals(1,encoder.numBufferedStreams());
  ChannelFuture f3=encoderWriteHeaders(7,newPromise());
  assertEquals(2,encoder.numBufferedStreams());
  ByteBuf empty=Unpooled.buffer(0);
  encoder.writeGoAway(ctx,3,CANCEL.code(),empty,newPromise());
  assertEquals(1,connection.numActiveStreams());
  assertEquals(2,encoder.numBufferedStreams());
  assertFalse(f1.isDone());
  assertFalse(f2.isDone());
  assertFalse(f3.isDone());
}
