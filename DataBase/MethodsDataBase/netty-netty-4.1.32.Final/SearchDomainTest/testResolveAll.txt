@Test public void testResolveAll() throws Exception {
  Set<String> domains=new HashSet<String>();
  domains.add("host1.foo.com");
  domains.add("host1");
  domains.add("host3");
  domains.add("host4.sub.foo.com");
  domains.add("host5.sub.foo.com");
  domains.add("host5.sub");
  TestDnsServer.MapRecordStoreA store=new TestDnsServer.MapRecordStoreA(domains,2);
  dnsServer=new TestDnsServer(store);
  dnsServer.start();
  resolver=newResolver().searchDomains(Collections.singletonList("foo.com")).ndots(2).build();
  String a="host1.foo.com";
  List<String> resolved=assertResolveAll(resolver,a);
  assertEquals(store.getAddresses("host1.foo.com"),resolved);
  resolved=assertResolveAll(resolver,"host1");
  assertEquals(store.getAddresses("host1.foo.com"),resolved);
  resolved=assertResolveAll(resolver,"host1.");
  assertEquals(store.getAddresses("host1"),resolved);
  assertNotResolveAll(resolver,"host2");
  resolved=assertResolveAll(resolver,"host3");
  assertEquals(store.getAddresses("host3"),resolved);
  resolved=assertResolveAll(resolver,"host3.");
  assertEquals(store.getAddresses("host3"),resolved);
  resolved=assertResolveAll(resolver,"host4.sub");
  assertEquals(store.getAddresses("host4.sub.foo.com"),resolved);
  resolved=assertResolveAll(resolver,"host5.sub");
  assertEquals(store.getAddresses("host5.sub.foo.com"),resolved);
}
