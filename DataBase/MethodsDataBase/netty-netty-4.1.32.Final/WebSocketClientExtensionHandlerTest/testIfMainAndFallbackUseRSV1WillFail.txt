@Test(expected=CodecException.class) public void testIfMainAndFallbackUseRSV1WillFail(){
  when(mainHandshakerMock.newRequestData()).thenReturn(new WebSocketExtensionData("main",Collections.<String,String>emptyMap()));
  when(mainHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("main"))).thenReturn(mainExtensionMock);
  when(mainHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("fallback"))).thenReturn(null);
  when(fallbackHandshakerMock.newRequestData()).thenReturn(new WebSocketExtensionData("fallback",Collections.<String,String>emptyMap()));
  when(fallbackHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("main"))).thenReturn(null);
  when(fallbackHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("fallback"))).thenReturn(fallbackExtensionMock);
  when(mainExtensionMock.rsv()).thenReturn(WebSocketExtension.RSV1);
  when(fallbackExtensionMock.rsv()).thenReturn(WebSocketExtension.RSV1);
  EmbeddedChannel ch=new EmbeddedChannel(new WebSocketClientExtensionHandler(mainHandshakerMock,fallbackHandshakerMock));
  HttpRequest req=newUpgradeRequest(null);
  ch.writeOutbound(req);
  HttpRequest req2=ch.readOutbound();
  List<WebSocketExtensionData> reqExts=WebSocketExtensionUtil.extractExtensions(req2.headers().get(HttpHeaderNames.SEC_WEBSOCKET_EXTENSIONS));
  HttpResponse res=newUpgradeResponse("main, fallback");
  ch.writeInbound(res);
  assertEquals(2,reqExts.size());
  assertEquals("main",reqExts.get(0).name());
  assertEquals("fallback",reqExts.get(1).name());
  verify(mainHandshakerMock).newRequestData();
  verify(mainHandshakerMock,atLeastOnce()).handshakeExtension(webSocketExtensionDataMatcher("main"));
  verify(mainHandshakerMock,atLeastOnce()).handshakeExtension(webSocketExtensionDataMatcher("fallback"));
  verify(fallbackHandshakerMock).newRequestData();
  verify(fallbackHandshakerMock,atLeastOnce()).handshakeExtension(webSocketExtensionDataMatcher("main"));
  verify(fallbackHandshakerMock,atLeastOnce()).handshakeExtension(webSocketExtensionDataMatcher("fallback"));
  verify(mainExtensionMock,atLeastOnce()).rsv();
  verify(fallbackExtensionMock,atLeastOnce()).rsv();
}
