@Test public void testChunkedMessageInput(){
  ChunkedInput<Object> input=new ChunkedInput<Object>(){
    private boolean done;
    @Override public boolean isEndOfInput() throws Exception {
      return done;
    }
    @Override public void close() throws Exception {
    }
    @Deprecated @Override public Object readChunk(    ChannelHandlerContext ctx) throws Exception {
      return readChunk(ctx.alloc());
    }
    @Override public Object readChunk(    ByteBufAllocator ctx) throws Exception {
      if (done) {
        return false;
      }
      done=true;
      return 0;
    }
    @Override public long length(){
      return -1;
    }
    @Override public long progress(){
      return 1;
    }
  }
;
  EmbeddedChannel ch=new EmbeddedChannel(new ChunkedWriteHandler());
  ch.writeAndFlush(input).syncUninterruptibly();
  ch.checkException();
  assertTrue(ch.finish());
  assertEquals(0,ch.readOutbound());
  assertNull(ch.readOutbound());
}
