@Test public void testContinueAfterInvalidHeaders() throws Exception {
  ByteBuf numHeaders=Unpooled.buffer(4);
  numHeaders.writeInt(1);
  ByteBuf nameBlock=Unpooled.buffer(8);
  nameBlock.writeInt(4);
  nameBlock.writeBytes(nameBytes);
  ByteBuf valueBlock=Unpooled.buffer(9);
  valueBlock.writeInt(5);
  valueBlock.writeBytes(valueBytes);
  decoder.decode(ByteBufAllocator.DEFAULT,numHeaders,frame);
  decoder.decode(ByteBufAllocator.DEFAULT,nameBlock,frame);
  frame.setInvalid();
  decoder.decode(ByteBufAllocator.DEFAULT,valueBlock,frame);
  decoder.endHeaderBlock(frame);
  assertFalse(numHeaders.isReadable());
  assertFalse(nameBlock.isReadable());
  assertFalse(valueBlock.isReadable());
  assertEquals(1,frame.headers().names().size());
  assertTrue(frame.headers().contains(name));
  assertEquals(1,frame.headers().getAll(name).size());
  assertEquals(value,frame.headers().get(name));
  numHeaders.release();
  nameBlock.release();
  valueBlock.release();
}
