@Test public void testExotic(){
  assertQueryString("","");
  assertQueryString("foo","foo");
  assertQueryString("foo","foo?");
  assertQueryString("/foo","/foo?");
  assertQueryString("/foo","/foo");
  assertQueryString("?a=","?a");
  assertQueryString("foo?a=","foo?a");
  assertQueryString("/foo?a=","/foo?a");
  assertQueryString("/foo?a=","/foo?a&");
  assertQueryString("/foo?a=","/foo?&a");
  assertQueryString("/foo?a=","/foo?&a&");
  assertQueryString("/foo?a=","/foo?&=a");
  assertQueryString("/foo?a=","/foo?=a&");
  assertQueryString("/foo?a=","/foo?a=&");
  assertQueryString("/foo?a=b&c=d","/foo?a=b&&c=d");
  assertQueryString("/foo?a=b&c=d","/foo?a=b&=&c=d");
  assertQueryString("/foo?a=b&c=d","/foo?a=b&==&c=d");
  assertQueryString("/foo?a=b&c=&x=y","/foo?a=b&c&x=y");
  assertQueryString("/foo?a=","/foo?a=");
  assertQueryString("/foo?a=","/foo?&a=");
  assertQueryString("/foo?a=b&c=d","/foo?a=b&c=d");
  assertQueryString("/foo?a=1&a=&a=","/foo?a=1&a&a=");
}
