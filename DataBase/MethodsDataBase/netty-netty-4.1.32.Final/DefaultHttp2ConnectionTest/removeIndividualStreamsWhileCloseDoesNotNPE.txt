@Test public void removeIndividualStreamsWhileCloseDoesNotNPE() throws InterruptedException, Http2Exception {
  final Http2Stream streamA=client.local().createStream(3,false);
  final Http2Stream streamB=client.remote().createStream(2,false);
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      streamA.close();
      streamB.close();
      return null;
    }
  }
).when(clientListener2).onStreamClosed(any(Http2Stream.class));
  try {
    client.addListener(clientListener2);
    testRemoveAllStreams();
  }
  finally {
    client.removeListener(clientListener2);
  }
}
