@Test public void testV2WithTLV(){
  ch=new EmbeddedChannel(new HAProxyMessageDecoder(4));
  byte[] header=new byte[236];
  header[0]=0x0D;
  header[1]=0x0A;
  header[2]=0x0D;
  header[3]=0x0A;
  header[4]=0x00;
  header[5]=0x0D;
  header[6]=0x0A;
  header[7]=0x51;
  header[8]=0x55;
  header[9]=0x49;
  header[10]=0x54;
  header[11]=0x0A;
  header[12]=0x21;
  header[13]=0x31;
  header[14]=0x00;
  header[15]=(byte)0xdc;
  header[16]=0x2f;
  header[17]=0x76;
  header[18]=0x61;
  header[19]=0x72;
  header[20]=0x2f;
  header[21]=0x72;
  header[22]=0x75;
  header[23]=0x6e;
  header[24]=0x2f;
  header[25]=0x73;
  header[26]=0x72;
  header[27]=0x63;
  header[28]=0x2e;
  header[29]=0x73;
  header[30]=0x6f;
  header[31]=0x63;
  header[32]=0x6b;
  header[33]=0x00;
  header[124]=0x2f;
  header[125]=0x76;
  header[126]=0x61;
  header[127]=0x72;
  header[128]=0x2f;
  header[129]=0x72;
  header[130]=0x75;
  header[131]=0x6e;
  header[132]=0x2f;
  header[133]=0x64;
  header[134]=0x65;
  header[135]=0x73;
  header[136]=0x74;
  header[137]=0x2e;
  header[138]=0x73;
  header[139]=0x6f;
  header[140]=0x63;
  header[141]=0x6b;
  header[142]=0x00;
  header[232]=0x01;
  header[233]=0x00;
  header[234]=0x01;
  header[235]=0x01;
  int startChannels=ch.pipeline().names().size();
  ch.writeInbound(copiedBuffer(header));
  Object msgObj=ch.readInbound();
  assertEquals(startChannels - 1,ch.pipeline().names().size());
  assertTrue(msgObj instanceof HAProxyMessage);
  HAProxyMessage msg=(HAProxyMessage)msgObj;
  assertEquals(HAProxyProtocolVersion.V2,msg.protocolVersion());
  assertEquals(HAProxyCommand.PROXY,msg.command());
  assertEquals(HAProxyProxiedProtocol.UNIX_STREAM,msg.proxiedProtocol());
  assertEquals("/var/run/src.sock",msg.sourceAddress());
  assertEquals("/var/run/dest.sock",msg.destinationAddress());
  assertEquals(0,msg.sourcePort());
  assertEquals(0,msg.destinationPort());
  assertNull(ch.readInbound());
  assertFalse(ch.finish());
}
