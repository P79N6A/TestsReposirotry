@Test public void channelClosedWhenChannelClosePromiseCompletes(){
  LastInboundHandler inboundHandler=streamActiveAndWriteHeaders(inboundStream);
  Http2StreamChannel childChannel=(Http2StreamChannel)inboundHandler.channel();
  assertTrue(childChannel.isOpen());
  assertTrue(childChannel.isActive());
  final AtomicBoolean channelOpen=new AtomicBoolean(true);
  final AtomicBoolean channelActive=new AtomicBoolean(true);
  childChannel.closeFuture().addListener(new ChannelFutureListener(){
    @Override public void operationComplete(    ChannelFuture future){
      channelOpen.set(future.channel().isOpen());
      channelActive.set(future.channel().isActive());
    }
  }
);
  childChannel.close().syncUninterruptibly();
  assertFalse(channelOpen.get());
  assertFalse(channelActive.get());
  assertFalse(childChannel.isActive());
}
