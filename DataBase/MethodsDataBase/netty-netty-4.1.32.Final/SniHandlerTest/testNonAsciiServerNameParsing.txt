@Test(expected=DecoderException.class) public void testNonAsciiServerNameParsing() throws Exception {
  SslContext nettyContext=makeSslContext(provider,false);
  SslContext leanContext=makeSslContext(provider,false);
  SslContext leanContext2=makeSslContext(provider,false);
  try {
    DomainNameMapping<SslContext> mapping=new DomainNameMappingBuilder<SslContext>(nettyContext).add("*.netty.io",nettyContext).add("*.LEANCLOUD.CN",leanContext).add("chat4.leancloud.cn",leanContext2).build();
    SniHandler handler=new SniHandler(mapping);
    EmbeddedChannel ch=new EmbeddedChannel(handler);
    try {
      String tlsHandshakeMessageHex1="16030100";
      String tlsHandshakeMessageHex="bd010000b90303a74225676d1814ba57faff3b366" + "3656ed05ee9dbb2a4dbb1bb1c32d2ea5fc39e0000000100008c0000001700150000164348" + "415434E380824C45414E434C4F5544E38082434E000b000403000102000a00340032000e0"+ "00d0019000b000c00180009000a0016001700080006000700140015000400050012001300"+ "0100020003000f0010001100230000000d0020001e0601060206030501050205030401040"+ "20403030103020303020102020203000f00010133740000";
      ch.writeInbound(Unpooled.wrappedBuffer(StringUtil.decodeHexDump(tlsHandshakeMessageHex1)));
      ch.writeInbound(Unpooled.wrappedBuffer(StringUtil.decodeHexDump(tlsHandshakeMessageHex)));
    }
  finally {
      ch.finishAndReleaseAll();
    }
  }
  finally {
    releaseAll(leanContext,leanContext2,nettyContext);
  }
}
