@Test public void closeWithNoPrioritizableDependentsShouldRestructureTree() throws Exception {
  Http2Stream streamA=connection.local().createStream(1,false);
  Http2Stream streamB=connection.local().createStream(3,false);
  Http2Stream streamC=connection.local().createStream(5,false);
  Http2Stream streamD=connection.local().createStream(7,false);
  Http2Stream streamE=connection.local().createStream(9,false);
  Http2Stream streamF=connection.local().createStream(11,false);
  setPriority(streamB.id(),streamA.id(),DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(streamC.id(),streamB.id(),DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(streamD.id(),streamB.id(),DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(streamE.id(),streamC.id(),DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(streamF.id(),streamD.id(),DEFAULT_PRIORITY_WEIGHT,false);
  streamA.close();
  streamB.close();
  streamC.close();
  streamD.close();
  streamF.close();
  assertEquals(1,distributor.numChildren(connection.connectionStream().id()));
  assertTrue(distributor.isChild(streamE.id(),connection.connectionStream().id(),DEFAULT_PRIORITY_WEIGHT));
  assertEquals(0,distributor.numChildren(streamE.id()));
}
