@Test public void lowestPrecedenceStateShouldBeDropped() throws Http2Exception {
  setup(3);
  short weight3=MAX_WEIGHT;
  short weight5=(short)(weight3 - 1);
  short weight7=(short)(weight5 - 1);
  short weight9=(short)(weight7 - 1);
  setPriority(3,connection.connectionStream().id(),weight3,true);
  setPriority(5,connection.connectionStream().id(),weight5,true);
  setPriority(7,connection.connectionStream().id(),weight7,false);
  assertEquals(0,connection.numActiveStreams());
  verifyLowestPrecedenceStateShouldBeDropped1(weight3,weight5,weight7);
  setPriority(9,3,weight9,false);
  assertEquals(0,connection.numActiveStreams());
  verifyLowestPrecedenceStateShouldBeDropped1(weight3,weight5,weight7);
  setPriority(9,5,weight9,true);
  verifyLowestPrecedenceStateShouldBeDropped2(weight9,weight5,weight7);
  Http2Stream streamA=connection.local().createStream(5,false);
  streamA.close();
  verifyLowestPrecedenceStateShouldBeDropped2(weight9,weight5,weight7);
  setPriority(3,9,weight3,false);
  verifyLowestPrecedenceStateShouldBeDropped3(weight3,weight7,weight9);
  setPriority(5,0,weight5,false);
  verifyLowestPrecedenceStateShouldBeDropped4(weight5,weight7,weight9);
  short weight11=(short)(weight9 - 1);
  setPriority(11,0,weight11,false);
  verifyLowestPrecedenceStateShouldBeDropped5(weight7,weight9,weight11);
}
