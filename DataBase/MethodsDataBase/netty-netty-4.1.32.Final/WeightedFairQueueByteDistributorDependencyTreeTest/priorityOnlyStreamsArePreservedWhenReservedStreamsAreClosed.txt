@Test public void priorityOnlyStreamsArePreservedWhenReservedStreamsAreClosed() throws Http2Exception {
  setup(1);
  short weight3=MIN_WEIGHT;
  setPriority(3,connection.connectionStream().id(),weight3,true);
  Http2Stream streamA=connection.local().createStream(5,false);
  Http2Stream streamB=connection.remote().reservePushStream(4,streamA);
  assertEquals(3,distributor.numChildren(connection.connectionStream().id()));
  assertTrue(distributor.isChild(3,connection.connectionStream().id(),weight3));
  assertEquals(0,distributor.numChildren(3));
  assertTrue(distributor.isChild(streamA.id(),connection.connectionStream().id(),DEFAULT_PRIORITY_WEIGHT));
  assertEquals(0,distributor.numChildren(streamA.id()));
  assertTrue(distributor.isChild(streamB.id(),connection.connectionStream().id(),DEFAULT_PRIORITY_WEIGHT));
  assertEquals(0,distributor.numChildren(streamB.id()));
  streamB.close();
  streamA.close();
  assertEquals(1,distributor.numChildren(connection.connectionStream().id()));
  assertTrue(distributor.isChild(3,connection.connectionStream().id(),weight3));
  assertEquals(0,distributor.numChildren(3));
}
