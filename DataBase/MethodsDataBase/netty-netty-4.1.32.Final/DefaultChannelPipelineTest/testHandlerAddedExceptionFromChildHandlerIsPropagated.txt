@Test(timeout=3000) public void testHandlerAddedExceptionFromChildHandlerIsPropagated(){
  final EventExecutorGroup group1=new DefaultEventExecutorGroup(1);
  try {
    final Promise<Void> promise=group1.next().newPromise();
    final AtomicBoolean handlerAdded=new AtomicBoolean();
    final Exception exception=new RuntimeException();
    ChannelPipeline pipeline=new LocalChannel().pipeline();
    pipeline.addLast(group1,new CheckExceptionHandler(exception,promise));
    pipeline.addFirst(new ChannelHandlerAdapter(){
      @Override public void handlerAdded(      ChannelHandlerContext ctx) throws Exception {
        handlerAdded.set(true);
        throw exception;
      }
    }
);
    assertFalse(handlerAdded.get());
    group.register(pipeline.channel());
    promise.syncUninterruptibly();
  }
  finally {
    group1.shutdownGracefully();
  }
}
