@Test(timeout=3000) public void testUnorderedEventExecutor() throws Throwable {
  ChannelPipeline pipeline1=new LocalChannel().pipeline();
  EventExecutorGroup eventExecutors=new UnorderedThreadPoolEventExecutor(2);
  EventLoopGroup defaultGroup=new DefaultEventLoopGroup(1);
  try {
    EventLoop eventLoop1=defaultGroup.next();
    eventLoop1.register(pipeline1.channel()).syncUninterruptibly();
    final CountDownLatch latch=new CountDownLatch(1);
    pipeline1.addLast(eventExecutors,new ChannelInboundHandlerAdapter(){
      @Override public void handlerAdded(      ChannelHandlerContext ctx) throws Exception {
        LockSupport.park();
      }
      @Override public void userEventTriggered(      ChannelHandlerContext ctx,      Object evt) throws Exception {
        latch.countDown();
      }
    }
);
    pipeline1.fireUserEventTriggered("");
    latch.await();
  }
  finally {
    defaultGroup.shutdownGracefully(0,0,TimeUnit.SECONDS).syncUninterruptibly();
    eventExecutors.shutdownGracefully(0,0,TimeUnit.SECONDS).syncUninterruptibly();
  }
}
