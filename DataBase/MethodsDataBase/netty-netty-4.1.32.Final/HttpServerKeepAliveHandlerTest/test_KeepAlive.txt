@Test public void test_KeepAlive() throws Exception {
  FullHttpRequest request=new DefaultFullHttpRequest(httpVersion,HttpMethod.GET,"/v1/foo/bar");
  setKeepAlive(request,REQUEST_KEEP_ALIVE.equals(sendKeepAlive));
  HttpResponse response=new DefaultFullHttpResponse(httpVersion,responseStatus);
  if (!StringUtil.isNullOrEmpty(setResponseConnection)) {
    response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);
  }
  setupMessageLength(response);
  assertTrue(channel.writeInbound(request));
  Object requestForwarded=channel.readInbound();
  assertEquals(request,requestForwarded);
  ReferenceCountUtil.release(requestForwarded);
  channel.writeAndFlush(response);
  HttpResponse writtenResponse=channel.readOutbound();
  assertEquals("channel.isOpen",isKeepAliveResponseExpected,channel.isOpen());
  assertEquals("response keep-alive",isKeepAliveResponseExpected,isKeepAlive(writtenResponse));
  ReferenceCountUtil.release(writtenResponse);
  assertFalse(channel.finishAndReleaseAll());
}
