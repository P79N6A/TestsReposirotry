@Test public void testCustomHandshake(){
  WebSocketServerExtension extension;
  Map<String,String> parameters;
  WebSocketExtensionData data;
  PerMessageDeflateServerExtensionHandshaker handshaker=new PerMessageDeflateServerExtensionHandshaker(6,true,10,true,true);
  parameters=new HashMap<String,String>();
  parameters.put(CLIENT_MAX_WINDOW,null);
  parameters.put(SERVER_MAX_WINDOW,"12");
  parameters.put(CLIENT_NO_CONTEXT,null);
  parameters.put(SERVER_NO_CONTEXT,null);
  extension=handshaker.handshakeExtension(new WebSocketExtensionData(PERMESSAGE_DEFLATE_EXTENSION,parameters));
  assertNotNull(extension);
  assertEquals(WebSocketServerExtension.RSV1,extension.rsv());
  assertTrue(extension.newExtensionDecoder() instanceof PerMessageDeflateDecoder);
  assertTrue(extension.newExtensionEncoder() instanceof PerMessageDeflateEncoder);
  data=extension.newReponseData();
  assertEquals(PERMESSAGE_DEFLATE_EXTENSION,data.name());
  assertTrue(data.parameters().containsKey(CLIENT_MAX_WINDOW));
  assertEquals("10",data.parameters().get(CLIENT_MAX_WINDOW));
  assertTrue(data.parameters().containsKey(SERVER_MAX_WINDOW));
  assertEquals("12",data.parameters().get(SERVER_MAX_WINDOW));
  assertTrue(data.parameters().containsKey(CLIENT_MAX_WINDOW));
  assertTrue(data.parameters().containsKey(SERVER_MAX_WINDOW));
  parameters=new HashMap<String,String>();
  parameters.put(SERVER_MAX_WINDOW,"12");
  parameters.put(SERVER_NO_CONTEXT,null);
  extension=handshaker.handshakeExtension(new WebSocketExtensionData(PERMESSAGE_DEFLATE_EXTENSION,parameters));
  assertNotNull(extension);
  assertEquals(WebSocketServerExtension.RSV1,extension.rsv());
  assertTrue(extension.newExtensionDecoder() instanceof PerMessageDeflateDecoder);
  assertTrue(extension.newExtensionEncoder() instanceof PerMessageDeflateEncoder);
  data=extension.newReponseData();
  assertEquals(PERMESSAGE_DEFLATE_EXTENSION,data.name());
  assertEquals(2,data.parameters().size());
  assertTrue(data.parameters().containsKey(SERVER_MAX_WINDOW));
  assertEquals("12",data.parameters().get(SERVER_MAX_WINDOW));
  assertTrue(data.parameters().containsKey(SERVER_NO_CONTEXT));
  parameters=new HashMap<String,String>();
  extension=handshaker.handshakeExtension(new WebSocketExtensionData(PERMESSAGE_DEFLATE_EXTENSION,parameters));
  assertNotNull(extension);
  data=extension.newReponseData();
  assertEquals(PERMESSAGE_DEFLATE_EXTENSION,data.name());
  assertTrue(data.parameters().isEmpty());
}
