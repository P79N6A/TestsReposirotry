@Test public void testMaxCapacityWithRecycleAtDifferentThread() throws Exception {
  final int maxCapacity=4;
  final Recycler<HandledObject> recycler=newRecycler(maxCapacity);
  final HandledObject[] array=new HandledObject[maxCapacity * 3];
  for (int i=0; i < array.length; i++) {
    array[i]=recycler.get();
  }
  for (int i=0; i < maxCapacity; i++) {
    array[i].recycle();
  }
  final Thread thread=new Thread(){
    @Override public void run(){
      for (int i=maxCapacity; i < array.length; i++) {
        array[i].recycle();
      }
    }
  }
;
  thread.start();
  thread.join();
  assertEquals(maxCapacity,recycler.threadLocalCapacity());
  assertEquals(1,recycler.threadLocalSize());
  for (int i=0; i < array.length; i++) {
    recycler.get();
  }
  assertEquals(maxCapacity,recycler.threadLocalCapacity());
  assertEquals(0,recycler.threadLocalSize());
}
