@Test(expected=IllegalStateException.class) public void testMultipleRecycleAtDifferentThread() throws InterruptedException {
  Recycler<HandledObject> recycler=newRecycler(1024);
  final HandledObject object=recycler.get();
  final AtomicReference<IllegalStateException> exceptionStore=new AtomicReference<IllegalStateException>();
  final Thread thread1=new Thread(new Runnable(){
    @Override public void run(){
      object.recycle();
    }
  }
);
  thread1.start();
  thread1.join();
  final Thread thread2=new Thread(new Runnable(){
    @Override public void run(){
      try {
        object.recycle();
      }
 catch (      IllegalStateException e) {
        exceptionStore.set(e);
      }
    }
  }
);
  thread2.start();
  thread2.join();
  IllegalStateException exception=exceptionStore.get();
  if (exception != null) {
    throw exception;
  }
}
