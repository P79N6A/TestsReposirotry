@Test(timeout=5000L) public void testThreadCanBeCollectedEvenIfHandledObjectIsReferenced() throws Exception {
  final Recycler<HandledObject> recycler=newRecycler(1024);
  final AtomicBoolean collected=new AtomicBoolean();
  final AtomicReference<HandledObject> reference=new AtomicReference<HandledObject>();
  Thread thread=new Thread(new Runnable(){
    @Override public void run(){
      HandledObject object=recycler.get();
      reference.set(object);
    }
  }
){
    @Override protected void finalize() throws Throwable {
      super.finalize();
      collected.set(true);
    }
  }
;
  assertFalse(collected.get());
  thread.start();
  thread.join();
  thread=null;
  while (!collected.get()) {
    System.gc();
    System.runFinalization();
    Thread.sleep(50);
  }
  reference.getAndSet(null).recycle();
}
