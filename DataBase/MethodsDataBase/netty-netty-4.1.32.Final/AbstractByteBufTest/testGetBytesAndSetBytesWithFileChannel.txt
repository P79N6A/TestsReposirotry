@Test public void testGetBytesAndSetBytesWithFileChannel() throws IOException {
  File file=File.createTempFile("file-channel",".tmp");
  RandomAccessFile randomAccessFile=null;
  try {
    randomAccessFile=new RandomAccessFile(file,"rw");
    FileChannel channel=randomAccessFile.getChannel();
    long channelPosition=channel.position();
    byte[] bytes={'a','b','c','d'};
    int len=bytes.length;
    ByteBuf buffer=newBuffer(len);
    buffer.resetReaderIndex();
    buffer.resetWriterIndex();
    buffer.writeBytes(bytes);
    int oldReaderIndex=buffer.readerIndex();
    assertEquals(len,buffer.getBytes(oldReaderIndex,channel,10,len));
    assertEquals(oldReaderIndex,buffer.readerIndex());
    assertEquals(channelPosition,channel.position());
    ByteBuf buffer2=newBuffer(len);
    buffer2.resetReaderIndex();
    buffer2.resetWriterIndex();
    int oldWriterIndex=buffer2.writerIndex();
    assertEquals(buffer2.setBytes(oldWriterIndex,channel,10,len),len);
    assertEquals(channelPosition,channel.position());
    assertEquals(oldWriterIndex,buffer2.writerIndex());
    assertEquals('a',buffer2.getByte(oldWriterIndex));
    assertEquals('b',buffer2.getByte(oldWriterIndex + 1));
    assertEquals('c',buffer2.getByte(oldWriterIndex + 2));
    assertEquals('d',buffer2.getByte(oldWriterIndex + 3));
    buffer.release();
    buffer2.release();
  }
  finally {
    if (randomAccessFile != null) {
      randomAccessFile.close();
    }
    file.delete();
  }
}
