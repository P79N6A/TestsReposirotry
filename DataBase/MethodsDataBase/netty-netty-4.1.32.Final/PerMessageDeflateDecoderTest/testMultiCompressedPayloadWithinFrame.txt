@Test public void testMultiCompressedPayloadWithinFrame(){
  EmbeddedChannel encoderChannel=new EmbeddedChannel(ZlibCodecFactory.newZlibEncoder(ZlibWrapper.NONE,9,15,8));
  EmbeddedChannel decoderChannel=new EmbeddedChannel(new PerMessageDeflateDecoder(false));
  byte[] payload1=new byte[100];
  random.nextBytes(payload1);
  byte[] payload2=new byte[100];
  random.nextBytes(payload2);
  encoderChannel.writeOutbound(Unpooled.wrappedBuffer(payload1));
  ByteBuf compressedPayload1=encoderChannel.readOutbound();
  encoderChannel.writeOutbound(Unpooled.wrappedBuffer(payload2));
  ByteBuf compressedPayload2=encoderChannel.readOutbound();
  BinaryWebSocketFrame compressedFrame=new BinaryWebSocketFrame(true,WebSocketExtension.RSV1 | WebSocketExtension.RSV3,Unpooled.wrappedBuffer(compressedPayload1,compressedPayload2.slice(0,compressedPayload2.readableBytes() - 4)));
  decoderChannel.writeInbound(compressedFrame);
  BinaryWebSocketFrame uncompressedFrame=decoderChannel.readInbound();
  assertNotNull(uncompressedFrame);
  assertNotNull(uncompressedFrame.content());
  assertTrue(uncompressedFrame instanceof BinaryWebSocketFrame);
  assertEquals(WebSocketExtension.RSV3,uncompressedFrame.rsv());
  assertEquals(200,uncompressedFrame.content().readableBytes());
  byte[] finalPayload1=new byte[100];
  uncompressedFrame.content().readBytes(finalPayload1);
  assertTrue(Arrays.equals(finalPayload1,payload1));
  byte[] finalPayload2=new byte[100];
  uncompressedFrame.content().readBytes(finalPayload2);
  assertTrue(Arrays.equals(finalPayload2,payload2));
  uncompressedFrame.release();
}
