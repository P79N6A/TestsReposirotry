@Test public void forEachTest() throws Exception {
  final AtomicReference<Integer> aCount=new AtomicReference<Integer>(0);
  final AtomicReference<Integer> bCount=new AtomicReference<Integer>(0);
  aAsciiString.forEachByte(new ByteProcessor(){
    int i;
    @Override public boolean process(    byte value) throws Exception {
      assertEquals("failed at index: " + i,value,bAsciiString.byteAt(i++));
      aCount.set(aCount.get() + 1);
      return true;
    }
  }
);
  bAsciiString.forEachByte(new ByteProcessor(){
    int i;
    @Override public boolean process(    byte value) throws Exception {
      assertEquals("failed at index: " + i,value,aAsciiString.byteAt(i++));
      bCount.set(bCount.get() + 1);
      return true;
    }
  }
);
  assertEquals(aAsciiString.length(),aCount.get().intValue());
  assertEquals(bAsciiString.length(),bCount.get().intValue());
}
