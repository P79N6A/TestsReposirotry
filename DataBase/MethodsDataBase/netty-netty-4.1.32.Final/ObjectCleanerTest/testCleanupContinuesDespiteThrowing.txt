@Test(timeout=5000) public void testCleanupContinuesDespiteThrowing() throws InterruptedException {
  final AtomicInteger freeCalledCount=new AtomicInteger();
  final CountDownLatch latch=new CountDownLatch(1);
  temporaryThread=new Thread(new Runnable(){
    @Override public void run(){
      try {
        latch.await();
      }
 catch (      InterruptedException ignore) {
      }
    }
  }
);
  temporaryThread.start();
  temporaryObject=new Object();
  ObjectCleaner.register(temporaryThread,new Runnable(){
    @Override public void run(){
      freeCalledCount.incrementAndGet();
      throw new RuntimeException("expected");
    }
  }
);
  ObjectCleaner.register(temporaryObject,new Runnable(){
    @Override public void run(){
      freeCalledCount.incrementAndGet();
      throw new RuntimeException("expected");
    }
  }
);
  latch.countDown();
  temporaryThread.join();
  assertEquals(0,freeCalledCount.get());
  temporaryThread=null;
  temporaryObject=null;
  while (freeCalledCount.get() != 2) {
    System.gc();
    System.runFinalization();
    Thread.sleep(100);
  }
}
