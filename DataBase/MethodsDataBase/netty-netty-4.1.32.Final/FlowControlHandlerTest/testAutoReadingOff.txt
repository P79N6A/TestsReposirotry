/** 
 * This test demonstrates the default behavior if auto reading is turned off from the get-go and you're calling read() in the hope that only one message will be returned. NOTE: This test waits for the client to disconnect which is interpreted as the signal that all  {@code byte}s have been transferred to the server.
 */
@Test public void testAutoReadingOff() throws Exception {
  final Exchanger<Channel> peerRef=new Exchanger<Channel>();
  final CountDownLatch latch=new CountDownLatch(3);
  ChannelInboundHandlerAdapter handler=new ChannelInboundHandlerAdapter(){
    @Override public void channelActive(    ChannelHandlerContext ctx) throws Exception {
      peerRef.exchange(ctx.channel(),1L,SECONDS);
      ctx.fireChannelActive();
    }
    @Override public void channelRead(    ChannelHandlerContext ctx,    Object msg){
      ReferenceCountUtil.release(msg);
      latch.countDown();
    }
  }
;
  Channel server=newServer(false,handler);
  Channel client=newClient(server.localAddress());
  try {
    Channel peer=peerRef.exchange(null,1L,SECONDS);
    client.writeAndFlush(newOneMessage()).syncUninterruptibly();
    peer.read();
    assertTrue(latch.await(1L,SECONDS));
  }
  finally {
    client.close();
    server.close();
  }
}
