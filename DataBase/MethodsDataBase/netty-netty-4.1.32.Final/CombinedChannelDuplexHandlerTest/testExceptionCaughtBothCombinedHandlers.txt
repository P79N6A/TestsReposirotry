@Test public void testExceptionCaughtBothCombinedHandlers(){
  final Exception exception=new Exception();
  final Queue<ChannelHandler> queue=new ArrayDeque<ChannelHandler>();
  ChannelInboundHandler inboundHandler=new ChannelInboundHandlerAdapter(){
    @Override public void exceptionCaught(    ChannelHandlerContext ctx,    Throwable cause) throws Exception {
      assertSame(exception,cause);
      queue.add(this);
      ctx.fireExceptionCaught(cause);
    }
  }
;
  ChannelOutboundHandler outboundHandler=new ChannelOutboundHandlerAdapter(){
    @Override public void exceptionCaught(    ChannelHandlerContext ctx,    Throwable cause) throws Exception {
      assertSame(exception,cause);
      queue.add(this);
      ctx.fireExceptionCaught(cause);
    }
  }
;
  ChannelInboundHandler lastHandler=new ChannelInboundHandlerAdapter(){
    @Override public void exceptionCaught(    ChannelHandlerContext ctx,    Throwable cause) throws Exception {
      assertSame(exception,cause);
      queue.add(this);
    }
  }
;
  EmbeddedChannel channel=new EmbeddedChannel(new CombinedChannelDuplexHandler<ChannelInboundHandler,ChannelOutboundHandler>(inboundHandler,outboundHandler),lastHandler);
  channel.pipeline().fireExceptionCaught(exception);
  assertFalse(channel.finish());
  assertSame(inboundHandler,queue.poll());
  assertSame(outboundHandler,queue.poll());
  assertSame(lastHandler,queue.poll());
  assertTrue(queue.isEmpty());
}
