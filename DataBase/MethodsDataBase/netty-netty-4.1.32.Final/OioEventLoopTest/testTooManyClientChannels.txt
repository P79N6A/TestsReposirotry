@Test public void testTooManyClientChannels() throws Exception {
  EventLoopGroup g=new OioEventLoopGroup(1);
  ServerBootstrap sb=new ServerBootstrap();
  sb.channel(OioServerSocketChannel.class);
  sb.group(g);
  sb.childHandler(new ChannelInboundHandlerAdapter());
  ChannelFuture f1=sb.bind(0);
  f1.sync();
  Bootstrap cb=new Bootstrap();
  cb.channel(OioSocketChannel.class);
  cb.group(g);
  cb.handler(new ChannelInboundHandlerAdapter());
  ChannelFuture f2=cb.connect(NetUtil.LOCALHOST,((InetSocketAddress)f1.channel().localAddress()).getPort());
  f2.await();
  assertThat(f2.cause(),is(instanceOf(ChannelException.class)));
  assertThat(f2.cause().getMessage().toLowerCase(),containsString("too many channels"));
  final CountDownLatch notified=new CountDownLatch(1);
  f2.addListener(new ChannelFutureListener(){
    @Override public void operationComplete(    ChannelFuture future) throws Exception {
      notified.countDown();
    }
  }
);
  notified.await();
  g.shutdownGracefully();
}
