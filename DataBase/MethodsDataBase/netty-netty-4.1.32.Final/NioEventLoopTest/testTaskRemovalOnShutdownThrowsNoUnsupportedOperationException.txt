@SuppressWarnings("deprecation") @Test public void testTaskRemovalOnShutdownThrowsNoUnsupportedOperationException() throws Exception {
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();
  final Runnable task=new Runnable(){
    @Override public void run(){
    }
  }
;
  for (int i=0; i < 1000; i++) {
    NioEventLoopGroup group=new NioEventLoopGroup(1);
    final NioEventLoop loop=(NioEventLoop)group.next();
    Thread t=new Thread(new Runnable(){
      @Override public void run(){
        try {
          for (; ; ) {
            loop.execute(task);
          }
        }
 catch (        Throwable cause) {
          error.set(cause);
        }
      }
    }
);
    t.start();
    group.shutdownNow();
    t.join();
    group.terminationFuture().syncUninterruptibly();
    assertThat(error.get(),IsInstanceOf.instanceOf(RejectedExecutionException.class));
    error.set(null);
  }
}
