@Test public void testWriteOneOutbound() throws InterruptedException {
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicInteger flushCount=new AtomicInteger(0);
  EmbeddedChannel channel=new EmbeddedChannel(new ChannelOutboundHandlerAdapter(){
    @Override public void write(    ChannelHandlerContext ctx,    Object msg,    ChannelPromise promise) throws Exception {
      ctx.write(msg,promise);
      latch.countDown();
    }
    @Override public void flush(    ChannelHandlerContext ctx) throws Exception {
      flushCount.incrementAndGet();
    }
  }
);
  channel.writeOneOutbound("Hello, Netty!");
  if (!latch.await(1L,TimeUnit.SECONDS)) {
    fail("Nobody called #write() in time.");
  }
  channel.close().syncUninterruptibly();
  assertEquals(0,flushCount.get());
}
