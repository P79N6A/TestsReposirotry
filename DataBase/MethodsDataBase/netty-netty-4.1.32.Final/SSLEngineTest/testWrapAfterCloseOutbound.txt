@Test public void testWrapAfterCloseOutbound() throws Exception {
  SelfSignedCertificate cert=new SelfSignedCertificate();
  clientSslCtx=SslContextBuilder.forClient().trustManager(cert.cert()).sslProvider(sslClientProvider()).protocols(protocols()).ciphers(ciphers()).build();
  SSLEngine client=wrapEngine(clientSslCtx.newEngine(UnpooledByteBufAllocator.DEFAULT));
  serverSslCtx=SslContextBuilder.forServer(cert.certificate(),cert.privateKey()).sslProvider(sslServerProvider()).protocols(protocols()).ciphers(ciphers()).build();
  SSLEngine server=wrapEngine(serverSslCtx.newEngine(UnpooledByteBufAllocator.DEFAULT));
  try {
    ByteBuffer dst=allocateBuffer(client.getSession().getPacketBufferSize());
    ByteBuffer src=allocateBuffer(1024);
    handshake(client,server);
    client.closeOutbound();
    SSLEngineResult result=client.wrap(src,dst);
    assertEquals(SSLEngineResult.Status.CLOSED,result.getStatus());
    assertEquals(0,result.bytesConsumed());
    assertTrue(result.bytesProduced() > 0);
    assertTrue(client.isOutboundDone());
    assertFalse(client.isInboundDone());
  }
  finally {
    cert.delete();
    cleanupClientSslEngine(client);
    cleanupServerSslEngine(server);
  }
}
