@Test public void testHandshakeCompletesWithoutFilteringSupportedCipher() throws Exception {
  SelfSignedCertificate ssc=new SelfSignedCertificate();
  final String sharedCipher="TLS_RSA_WITH_AES_128_CBC_SHA";
  clientSslCtx=SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).ciphers(Arrays.asList(sharedCipher),SupportedCipherSuiteFilter.INSTANCE).protocols(PROTOCOL_TLS_V1_2,PROTOCOL_TLS_V1).sslProvider(sslClientProvider()).build();
  serverSslCtx=SslContextBuilder.forServer(ssc.certificate(),ssc.privateKey()).ciphers(Arrays.asList(sharedCipher),SupportedCipherSuiteFilter.INSTANCE).protocols(PROTOCOL_TLS_V1_2,PROTOCOL_TLS_V1).sslProvider(sslServerProvider()).build();
  SSLEngine clientEngine=null;
  SSLEngine serverEngine=null;
  try {
    clientEngine=wrapEngine(clientSslCtx.newEngine(UnpooledByteBufAllocator.DEFAULT));
    serverEngine=wrapEngine(serverSslCtx.newEngine(UnpooledByteBufAllocator.DEFAULT));
    handshake(clientEngine,serverEngine);
  }
  finally {
    cleanupClientSslEngine(clientEngine);
    cleanupServerSslEngine(serverEngine);
    ssc.delete();
  }
}
