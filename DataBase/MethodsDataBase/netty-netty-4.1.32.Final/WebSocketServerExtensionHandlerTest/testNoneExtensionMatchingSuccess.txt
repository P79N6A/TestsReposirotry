@Test public void testNoneExtensionMatchingSuccess(){
  when(mainHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("unknown"))).thenReturn(null);
  when(mainHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("unknown2"))).thenReturn(null);
  when(fallbackHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("unknown"))).thenReturn(null);
  when(fallbackHandshakerMock.handshakeExtension(webSocketExtensionDataMatcher("unknown2"))).thenReturn(null);
  EmbeddedChannel ch=new EmbeddedChannel(new WebSocketServerExtensionHandler(mainHandshakerMock,fallbackHandshakerMock));
  HttpRequest req=newUpgradeRequest("unknown, unknown2");
  ch.writeInbound(req);
  HttpResponse res=newUpgradeResponse(null);
  ch.writeOutbound(res);
  HttpResponse res2=ch.readOutbound();
  assertFalse(res2.headers().contains(HttpHeaderNames.SEC_WEBSOCKET_EXTENSIONS));
  verify(mainHandshakerMock).handshakeExtension(webSocketExtensionDataMatcher("unknown"));
  verify(mainHandshakerMock).handshakeExtension(webSocketExtensionDataMatcher("unknown2"));
  verify(fallbackHandshakerMock).handshakeExtension(webSocketExtensionDataMatcher("unknown"));
  verify(fallbackHandshakerMock).handshakeExtension(webSocketExtensionDataMatcher("unknown2"));
}
