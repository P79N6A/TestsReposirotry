@Test(timeout=30000) public void testRemoval() throws Exception {
  NioEventLoopGroup group=new NioEventLoopGroup();
  Channel sc=null;
  Channel cc=null;
  try {
    final Promise<Void> clientPromise=group.next().newPromise();
    Bootstrap bootstrap=new Bootstrap().group(group).channel(NioSocketChannel.class).handler(newHandler(SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).build(),clientPromise));
    SelfSignedCertificate ssc=new SelfSignedCertificate();
    final Promise<Void> serverPromise=group.next().newPromise();
    ServerBootstrap serverBootstrap=new ServerBootstrap().group(group,group).channel(NioServerSocketChannel.class).childHandler(newHandler(SslContextBuilder.forServer(ssc.certificate(),ssc.privateKey()).build(),serverPromise));
    sc=serverBootstrap.bind(new InetSocketAddress(0)).syncUninterruptibly().channel();
    cc=bootstrap.connect(sc.localAddress()).syncUninterruptibly().channel();
    serverPromise.syncUninterruptibly();
    clientPromise.syncUninterruptibly();
  }
  finally {
    if (cc != null) {
      cc.close().syncUninterruptibly();
    }
    if (sc != null) {
      sc.close().syncUninterruptibly();
    }
    group.shutdownGracefully();
  }
}
