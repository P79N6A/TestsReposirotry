@Test public void testMultipartRequestWithFieldInvalidCharset() throws Exception {
  final String boundary="dLV9Wyq26L_-JQxk6ferf-RT153LhOO";
  final DefaultFullHttpRequest req=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.POST,"http://localhost");
  req.headers().add(HttpHeaderNames.CONTENT_TYPE,"multipart/form-data; boundary=" + boundary);
  final DefaultHttpDataFactory inMemoryFactory=new DefaultHttpDataFactory(false);
  final String aData="some data would be here. the data should be long enough that it " + "will be longer than the original buffer length of 256 bytes in " + "the HttpPostRequestDecoder in order to trigger the issue. Some more "+ "data just to be on the safe side.";
  final String body="--" + boundary + "\r\n"+ "Content-Disposition: form-data; name=\"root\"\r\n"+ "Content-Type: text/plain; charset=ABCD\r\n"+ "\r\n"+ aData+ "\r\n"+ "--"+ boundary+ "--\r\n";
  req.content().writeBytes(body.getBytes(CharsetUtil.UTF_8));
  try {
    new HttpPostRequestDecoder(inMemoryFactory,req);
    fail("Was expecting an ErrorDataDecoderException");
  }
 catch (  HttpPostRequestDecoder.ErrorDataDecoderException e) {
    assertTrue(e.getCause() instanceof UnsupportedCharsetException);
  }
 finally {
    req.release();
  }
}
