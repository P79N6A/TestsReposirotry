@Test public void testWrappedBuffer(){
  ByteBuf a=wrappedBuffer(wrappedBuffer(ByteBuffer.allocateDirect(16)));
  assertEquals(16,a.capacity());
  a.release();
  a=wrappedBuffer(wrappedBuffer(new byte[]{1,2,3}).order(order));
  ByteBuf b=wrappedBuffer(wrappedBuffer(new byte[][]{new byte[]{1,2,3}}).order(order));
  assertEquals(a,b);
  a.release();
  b.release();
  a=wrappedBuffer(wrappedBuffer(new byte[]{1,2,3}).order(order));
  b=wrappedBuffer(wrappedBuffer(new byte[]{1},new byte[]{2},new byte[]{3}).order(order));
  assertEquals(a,b);
  a.release();
  b.release();
  a=wrappedBuffer(wrappedBuffer(new byte[]{1,2,3}).order(order));
  b=wrappedBuffer(new ByteBuf[]{wrappedBuffer(new byte[]{1,2,3}).order(order)});
  assertEquals(a,b);
  a.release();
  b.release();
  a=wrappedBuffer(wrappedBuffer(new byte[]{1,2,3}).order(order));
  b=wrappedBuffer(wrappedBuffer(new byte[]{1}).order(order),wrappedBuffer(new byte[]{2}).order(order),wrappedBuffer(new byte[]{3}).order(order));
  assertEquals(a,b);
  a.release();
  b.release();
  a=wrappedBuffer(wrappedBuffer(new byte[]{1,2,3})).order(order);
  b=wrappedBuffer(wrappedBuffer(new ByteBuffer[]{ByteBuffer.wrap(new byte[]{1,2,3})}));
  assertEquals(a,b);
  a.release();
  b.release();
  a=wrappedBuffer(wrappedBuffer(new byte[]{1,2,3}).order(order));
  b=wrappedBuffer(wrappedBuffer(ByteBuffer.wrap(new byte[]{1}),ByteBuffer.wrap(new byte[]{2}),ByteBuffer.wrap(new byte[]{3})));
  assertEquals(a,b);
  a.release();
  b.release();
}
