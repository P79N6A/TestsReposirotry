/** 
 * In this test, we root all streams at the connection, and then verify that data is split equally among the stream, since they all have the same weight. <pre> 0 / / \ \ A B   C D </pre>
 */
@Test public void samePriorityShouldDistributeBasedOnData() throws Http2Exception {
  setPriority(STREAM_A,0,DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(STREAM_B,0,DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(STREAM_C,0,DEFAULT_PRIORITY_WEIGHT,false);
  setPriority(STREAM_D,0,DEFAULT_PRIORITY_WEIGHT,false);
  initState(STREAM_A,400,true);
  initState(STREAM_B,500,true);
  initState(STREAM_C,0,true);
  initState(STREAM_D,700,true);
  distributor.allocationQuantum(1);
  assertTrue(write(999));
  assertEquals(333,captureWrites(STREAM_A));
  assertEquals(333,captureWrites(STREAM_B));
  verifyWrite(times(1),STREAM_C,0);
  assertEquals(333,captureWrites(STREAM_D));
}
