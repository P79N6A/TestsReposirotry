/** 
 * In this test, we shift the priority tree and verify priority bytes for each subtree are correct <pre> 0 / \ A   B / \ C   D </pre> After the tree shift: <pre> 0 | A | B / \ C   D </pre>
 */
@Test public void bytesDistributedWithRestructureShouldBeCorrect() throws Http2Exception {
  initState(STREAM_A,400,true);
  initState(STREAM_B,500,true);
  initState(STREAM_C,600,true);
  initState(STREAM_D,700,true);
  setPriority(STREAM_B,STREAM_A,DEFAULT_PRIORITY_WEIGHT,true);
  assertTrue(write(500));
  assertEquals(400,captureWrites(STREAM_A));
  verifyWrite(STREAM_B,100);
  verifyNeverWrite(STREAM_C);
  verifyNeverWrite(STREAM_D);
  assertTrue(write(400));
  assertEquals(400,captureWrites(STREAM_A));
  assertEquals(500,captureWrites(STREAM_B));
  verifyWrite(atMost(1),STREAM_C,0);
  verifyWrite(atMost(1),STREAM_D,0);
  assertFalse(write(1300));
  assertEquals(400,captureWrites(STREAM_A));
  assertEquals(500,captureWrites(STREAM_B));
  assertEquals(600,captureWrites(STREAM_C));
  assertEquals(700,captureWrites(STREAM_D));
}
