/** 
 * In this test, we verify re-prioritizing a stream. We start out with B blocked: <pre> 0 / \ A  [B] / \ C   D </pre> We then re-prioritize D so that it's directly off of the connection and verify that A and D split the written bytes between them. <pre> 0 /|\ /  |  \ A  [B]  D / C </pre>
 */
@Test public void reprioritizeShouldAdjustOutboundFlow() throws Http2Exception {
  initState(STREAM_A,10,true);
  initState(STREAM_C,10,true);
  initState(STREAM_D,10,true);
  setPriority(STREAM_D,0,DEFAULT_PRIORITY_WEIGHT,false);
  assertTrue(write(10));
  verifyWrite(STREAM_A,10);
  verifyNeverWrite(STREAM_B);
  verifyNeverWrite(STREAM_C);
  verifyWrite(atMost(1),STREAM_D,0);
  assertFalse(write(20));
  verifyAnyWrite(STREAM_A,1);
  verifyNeverWrite(STREAM_B);
  verifyWrite(STREAM_C,10);
  verifyWrite(STREAM_D,10);
}
