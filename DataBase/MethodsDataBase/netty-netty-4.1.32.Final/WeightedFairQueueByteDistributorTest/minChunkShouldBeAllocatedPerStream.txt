/** 
 * In this test, we verify that each stream is allocated a minimum chunk size. When bytes run out, the remaining streams will be next in line for the next iteration.
 */
@Test public void minChunkShouldBeAllocatedPerStream() throws Http2Exception {
  setPriority(STREAM_A,0,(short)50,false);
  setPriority(STREAM_B,0,(short)200,false);
  setPriority(STREAM_C,STREAM_A,(short)100,false);
  setPriority(STREAM_D,STREAM_A,(short)100,false);
  initState(STREAM_A,ALLOCATION_QUANTUM,true);
  initState(STREAM_B,ALLOCATION_QUANTUM,true);
  initState(STREAM_C,ALLOCATION_QUANTUM,true);
  initState(STREAM_D,ALLOCATION_QUANTUM,true);
  int written=3 * ALLOCATION_QUANTUM;
  assertTrue(write(written));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_A));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_B));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_C));
  verifyWrite(atMost(1),STREAM_D,0);
  assertFalse(write(ALLOCATION_QUANTUM));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_A));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_B));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_C));
  assertEquals(ALLOCATION_QUANTUM,captureWrites(STREAM_D));
}
