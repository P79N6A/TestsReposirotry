@Test(timeout=3000) public void testThreadCacheToArenaMappings() throws InterruptedException {
  int numArenas=2;
  final PooledByteBufAllocator allocator=new PooledByteBufAllocator(numArenas,numArenas,8192,1);
  ThreadCache tcache0=createNewThreadCache(allocator);
  ThreadCache tcache1=createNewThreadCache(allocator);
  assertEquals(2,allocator.metric().numThreadLocalCaches());
  assertEquals(1,allocator.metric().heapArenas().get(0).numThreadCaches());
  assertEquals(1,allocator.metric().heapArenas().get(1).numThreadCaches());
  assertEquals(1,allocator.metric().directArenas().get(0).numThreadCaches());
  assertEquals(1,allocator.metric().directArenas().get(0).numThreadCaches());
  tcache1.destroy();
  assertEquals(1,allocator.metric().numThreadLocalCaches());
  assertEquals(1,allocator.metric().heapArenas().get(0).numThreadCaches());
  assertEquals(0,allocator.metric().heapArenas().get(1).numThreadCaches());
  assertEquals(1,allocator.metric().directArenas().get(0).numThreadCaches());
  assertEquals(0,allocator.metric().directArenas().get(1).numThreadCaches());
  ThreadCache tcache2=createNewThreadCache(allocator);
  assertEquals(2,allocator.metric().numThreadLocalCaches());
  assertEquals(1,allocator.metric().heapArenas().get(0).numThreadCaches());
  assertEquals(1,allocator.metric().heapArenas().get(1).numThreadCaches());
  assertEquals(1,allocator.metric().directArenas().get(0).numThreadCaches());
  assertEquals(1,allocator.metric().directArenas().get(1).numThreadCaches());
  tcache0.destroy();
  assertEquals(1,allocator.metric().numThreadLocalCaches());
  tcache2.destroy();
  assertEquals(0,allocator.metric().numThreadLocalCaches());
  assertEquals(0,allocator.metric().heapArenas().get(0).numThreadCaches());
  assertEquals(0,allocator.metric().heapArenas().get(1).numThreadCaches());
  assertEquals(0,allocator.metric().directArenas().get(0).numThreadCaches());
  assertEquals(0,allocator.metric().directArenas().get(1).numThreadCaches());
}
