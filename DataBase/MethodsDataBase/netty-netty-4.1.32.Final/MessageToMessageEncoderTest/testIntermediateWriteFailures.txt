@Test public void testIntermediateWriteFailures(){
  ChannelHandler encoder=new MessageToMessageEncoder<Object>(){
    @Override protected void encode(    ChannelHandlerContext ctx,    Object msg,    List<Object> out){
      out.add(new Object());
      out.add(msg);
    }
  }
;
  final Exception firstWriteException=new Exception();
  ChannelHandler writeThrower=new ChannelOutboundHandlerAdapter(){
    private boolean firstWritten;
    @Override public void write(    ChannelHandlerContext ctx,    Object msg,    ChannelPromise promise){
      if (firstWritten) {
        ctx.write(msg,promise);
      }
 else {
        firstWritten=true;
        promise.setFailure(firstWriteException);
      }
    }
  }
;
  EmbeddedChannel channel=new EmbeddedChannel(writeThrower,encoder);
  Object msg=new Object();
  ChannelFuture write=channel.writeAndFlush(msg);
  assertSame(firstWriteException,write.cause());
  assertSame(msg,channel.readOutbound());
  assertFalse(channel.finish());
}
