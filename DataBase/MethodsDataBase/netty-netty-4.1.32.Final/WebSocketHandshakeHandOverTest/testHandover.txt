@Test public void testHandover() throws Exception {
  EmbeddedChannel serverChannel=createServerChannel(new SimpleChannelInboundHandler<Object>(){
    @Override public void userEventTriggered(    ChannelHandlerContext ctx,    Object evt){
      if (evt == ServerHandshakeStateEvent.HANDSHAKE_COMPLETE) {
        serverReceivedHandshake=true;
        ctx.writeAndFlush(new TextWebSocketFrame("abc"));
      }
 else       if (evt instanceof WebSocketServerProtocolHandler.HandshakeComplete) {
        serverHandshakeComplete=(WebSocketServerProtocolHandler.HandshakeComplete)evt;
      }
    }
    @Override protected void channelRead0(    ChannelHandlerContext ctx,    Object msg) throws Exception {
    }
  }
);
  EmbeddedChannel clientChannel=createClientChannel(new SimpleChannelInboundHandler<Object>(){
    @Override public void userEventTriggered(    ChannelHandlerContext ctx,    Object evt){
      if (evt == ClientHandshakeStateEvent.HANDSHAKE_COMPLETE) {
        clientReceivedHandshake=true;
      }
    }
    @Override protected void channelRead0(    ChannelHandlerContext ctx,    Object msg) throws Exception {
      if (msg instanceof TextWebSocketFrame) {
        clientReceivedMessage=true;
      }
    }
  }
);
  transferAllDataWithMerge(clientChannel,serverChannel);
  assertTrue(serverReceivedHandshake);
  assertNotNull(serverHandshakeComplete);
  assertEquals("/test",serverHandshakeComplete.requestUri());
  assertEquals(8,serverHandshakeComplete.requestHeaders().size());
  assertEquals("test-proto-2",serverHandshakeComplete.selectedSubprotocol());
  transferAllDataWithMerge(serverChannel,clientChannel);
  assertTrue(clientReceivedHandshake);
  assertTrue(clientReceivedMessage);
}
