@Test public void testResponseContentLength1(){
  HttpResponseDecoder decoder=new HttpResponseDecoder(4096,4096,5);
  HttpContentDecoder decompressor=new HttpContentDecompressor();
  EmbeddedChannel channel=new EmbeddedChannel(decoder,decompressor);
  String headers="HTTP/1.1 200 OK\r\n" + "Content-Length: " + GZ_HELLO_WORLD.length + "\r\n"+ "Content-Encoding: gzip\r\n"+ "\r\n";
  ByteBuf buf=Unpooled.copiedBuffer(headers.getBytes(CharsetUtil.US_ASCII),GZ_HELLO_WORLD);
  assertTrue(channel.writeInbound(buf));
  Queue<Object> resp=channel.inboundMessages();
  assertTrue(resp.size() >= 1);
  Object o=resp.peek();
  assertThat(o,is(instanceOf(HttpResponse.class)));
  HttpResponse r=(HttpResponse)o;
  assertFalse("Content-Length header not removed.",r.headers().contains(HttpHeaderNames.CONTENT_LENGTH));
  String transferEncoding=r.headers().get(HttpHeaderNames.TRANSFER_ENCODING);
  assertNotNull("Content-length as well as transfer-encoding not set.",transferEncoding);
  assertEquals("Unexpected transfer-encoding value.",HttpHeaderValues.CHUNKED.toString(),transferEncoding);
  assertHasInboundMessages(channel,true);
  assertHasOutboundMessages(channel,false);
  assertFalse(channel.finish());
}
