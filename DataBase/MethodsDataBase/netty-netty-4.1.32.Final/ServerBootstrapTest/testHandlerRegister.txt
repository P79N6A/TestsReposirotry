@Test(timeout=5000) public void testHandlerRegister() throws Exception {
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();
  LocalEventLoopGroup group=new LocalEventLoopGroup(1);
  try {
    ServerBootstrap sb=new ServerBootstrap();
    sb.channel(LocalServerChannel.class).group(group).childHandler(new ChannelInboundHandlerAdapter()).handler(new ChannelHandlerAdapter(){
      @Override public void handlerAdded(      ChannelHandlerContext ctx) throws Exception {
        try {
          assertTrue(ctx.executor().inEventLoop());
        }
 catch (        Throwable cause) {
          error.set(cause);
        }
 finally {
          latch.countDown();
        }
      }
    }
);
    sb.register().syncUninterruptibly();
    latch.await();
    assertNull(error.get());
  }
  finally {
    group.shutdownGracefully();
  }
}
