@Test public void testNotEndlessExecute() throws Exception {
  UnorderedThreadPoolEventExecutor executor=new UnorderedThreadPoolEventExecutor(1);
  try {
    final CountDownLatch latch=new CountDownLatch(3);
    Runnable task=new Runnable(){
      @Override public void run(){
        latch.countDown();
      }
    }
;
    executor.execute(task);
    Future<?> future=executor.submit(task).addListener(new FutureListener<Object>(){
      @Override public void operationComplete(      Future<Object> future) throws Exception {
        latch.countDown();
      }
    }
);
    latch.await();
    future.syncUninterruptibly();
    for (int i=0; i < 10000; i++) {
      Assert.assertTrue(executor.getQueue().isEmpty());
    }
  }
  finally {
    executor.shutdownGracefully();
  }
}
