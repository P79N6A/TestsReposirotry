@Test(timeout=10000) public void testWatch() throws Exception {
  final CountDownLatch latch=new CountDownLatch(1);
  final Thread t=new Thread(){
    @Override public void run(){
      for (; ; ) {
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException ignore) {
          break;
        }
      }
    }
  }
;
  final Runnable task=new Runnable(){
    @Override public void run(){
      if (!t.isAlive()) {
        latch.countDown();
      }
    }
  }
;
  try {
    ThreadDeathWatcher.watch(t,task);
    fail("must reject to watch a non-alive thread.");
  }
 catch (  IllegalArgumentException e) {
  }
  t.start();
  ThreadDeathWatcher.watch(t,task);
  assertThat(latch.await(750,TimeUnit.MILLISECONDS),is(false));
  t.interrupt();
  latch.await();
}
