@Test public void testPseudoHeadersWithRemovePreservesPseudoIterationOrder(){
  Http2Headers headers=newHeaders();
  Http2Headers nonPseudoHeaders=new DefaultHttp2Headers();
  for (  Entry<CharSequence,CharSequence> entry : headers) {
    if (entry.getKey().length() == 0 || entry.getKey().charAt(0) != ':' && !nonPseudoHeaders.contains(entry.getKey())) {
      nonPseudoHeaders.add(entry.getKey(),entry.getValue());
    }
  }
  assertFalse(nonPseudoHeaders.isEmpty());
  for (  Entry<CharSequence,CharSequence> nonPseudoHeaderEntry : nonPseudoHeaders) {
    assertTrue(headers.remove(nonPseudoHeaderEntry.getKey()));
    verifyPseudoHeadersFirst(headers);
    verifyAllPseudoHeadersPresent(headers);
  }
  for (  Entry<CharSequence,CharSequence> nonPseudoHeaderEntry : nonPseudoHeaders) {
    headers.add(nonPseudoHeaderEntry.getKey(),of("goo"));
    verifyPseudoHeadersFirst(headers);
    verifyAllPseudoHeadersPresent(headers);
  }
}
