@Test public void largeDataFrameShouldMatch() throws Exception {
  final ByteBuf originalData=data(1024 * 1024);
  final int originalPadding=100;
  final boolean endOfStream=true;
  writer.writeData(ctx,STREAM_ID,originalData.slice(),originalPadding,endOfStream,ctx.newPromise());
  readFrames();
  verify(listener,atLeastOnce()).onDataRead(eq(ctx),eq(STREAM_ID),any(ByteBuf.class),anyInt(),eq(false));
  verify(listener).onDataRead(eq(ctx),eq(STREAM_ID),any(ByteBuf.class),anyInt(),eq(true));
  ArgumentCaptor<ByteBuf> dataCaptor=ArgumentCaptor.forClass(ByteBuf.class);
  ArgumentCaptor<Integer> paddingCaptor=ArgumentCaptor.forClass(Integer.class);
  verify(listener,atLeastOnce()).onDataRead(eq(ctx),eq(STREAM_ID),dataCaptor.capture(),paddingCaptor.capture(),anyBoolean());
  for (  ByteBuf chunk : dataCaptor.getAllValues()) {
    ByteBuf originalChunk=originalData.readSlice(chunk.readableBytes());
    assertEquals(originalChunk,chunk);
  }
  assertFalse(originalData.isReadable());
  int totalReadPadding=0;
  for (  int framePadding : paddingCaptor.getAllValues()) {
    totalReadPadding+=framePadding;
  }
  assertEquals(originalPadding,totalReadPadding);
}
