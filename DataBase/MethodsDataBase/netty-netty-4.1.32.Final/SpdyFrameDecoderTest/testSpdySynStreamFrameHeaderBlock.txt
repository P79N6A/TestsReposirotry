@Test public void testSpdySynStreamFrameHeaderBlock() throws Exception {
  short type=1;
  byte flags=0;
  int length=10;
  int headerBlockLength=1024;
  int streamId=RANDOM.nextInt() & 0x7FFFFFFF | 0x01;
  int associatedToStreamId=RANDOM.nextInt() & 0x7FFFFFFF;
  byte priority=(byte)(RANDOM.nextInt() & 0x07);
  ByteBuf buf=Unpooled.buffer(SPDY_HEADER_SIZE + length + headerBlockLength);
  encodeControlFrameHeader(buf,type,flags,length + headerBlockLength);
  buf.writeInt(streamId);
  buf.writeInt(associatedToStreamId);
  buf.writeByte(priority << 5);
  buf.writeByte(0);
  ByteBuf headerBlock=Unpooled.buffer(headerBlockLength);
  for (int i=0; i < 256; i++) {
    headerBlock.writeInt(RANDOM.nextInt());
  }
  decoder.decode(buf);
  decoder.decode(headerBlock);
  verify(delegate).readSynStreamFrame(streamId,associatedToStreamId,priority,false,false);
  verify(delegate).readHeaderBlock(headerBlock.slice(0,headerBlock.writerIndex()));
  verify(delegate).readHeaderBlockEnd();
  assertFalse(buf.isReadable());
  assertFalse(headerBlock.isReadable());
  buf.release();
  headerBlock.release();
}
