@Test public void testWrapWithDifferentSizesTLSv1_2() throws Exception {
  clientSslCtx=SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).sslProvider(sslClientProvider()).build();
  SelfSignedCertificate ssc=new SelfSignedCertificate();
  serverSslCtx=SslContextBuilder.forServer(ssc.certificate(),ssc.privateKey()).sslProvider(sslServerProvider()).build();
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AES128-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-AES128-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"DES-CBC3-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AES128-GCM-SHA256");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-AES256-SHA384");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AECDH-DES-CBC3-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AES256-GCM-SHA384");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AES256-SHA256");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-AES128-GCM-SHA256");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-AES128-SHA256");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"CAMELLIA128-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"SEED-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"RC4-MD5");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AES256-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ADH-DES-CBC3-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"EDH-RSA-DES-CBC3-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ADH-RC4-MD5");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"RC4-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"CAMELLIA256-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AES128-SHA256");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"AECDH-RC4-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-DES-CBC3-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-AES256-GCM-SHA384");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-AES256-SHA");
  testWrapWithDifferentSizes(PROTOCOL_TLS_V1_2,"ECDHE-RSA-RC4-SHA");
}
