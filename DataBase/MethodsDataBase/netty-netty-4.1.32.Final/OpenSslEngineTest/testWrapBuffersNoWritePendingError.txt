@Test public void testWrapBuffersNoWritePendingError() throws Exception {
  clientSslCtx=SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).sslProvider(sslClientProvider()).protocols(protocols()).ciphers(ciphers()).build();
  SelfSignedCertificate ssc=new SelfSignedCertificate();
  serverSslCtx=SslContextBuilder.forServer(ssc.certificate(),ssc.privateKey()).sslProvider(sslServerProvider()).protocols(protocols()).ciphers(ciphers()).build();
  SSLEngine clientEngine=null;
  SSLEngine serverEngine=null;
  try {
    clientEngine=wrapEngine(clientSslCtx.newEngine(UnpooledByteBufAllocator.DEFAULT));
    serverEngine=wrapEngine(serverSslCtx.newEngine(UnpooledByteBufAllocator.DEFAULT));
    handshake(clientEngine,serverEngine);
    ByteBuffer src=allocateBuffer(1024 * 10);
    byte[] data=new byte[src.capacity()];
    PlatformDependent.threadLocalRandom().nextBytes(data);
    src.put(data).flip();
    ByteBuffer dst=allocateBuffer(1);
    for (int i=0; i < 100; i++) {
      src.position(0);
      dst.position(0);
      assertSame(SSLEngineResult.Status.BUFFER_OVERFLOW,clientEngine.wrap(src,dst).getStatus());
    }
  }
  finally {
    cleanupClientSslEngine(clientEngine);
    cleanupServerSslEngine(serverEngine);
  }
}
