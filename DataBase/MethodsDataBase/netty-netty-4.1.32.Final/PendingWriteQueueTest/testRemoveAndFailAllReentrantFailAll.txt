@Test public void testRemoveAndFailAllReentrantFailAll(){
  EmbeddedChannel channel=newChannel();
  final PendingWriteQueue queue=new PendingWriteQueue(channel.pipeline().firstContext());
  ChannelPromise promise=channel.newPromise();
  promise.addListener(new ChannelFutureListener(){
    @Override public void operationComplete(    ChannelFuture future) throws Exception {
      queue.removeAndFailAll(new IllegalStateException());
    }
  }
);
  queue.add(1L,promise);
  ChannelPromise promise2=channel.newPromise();
  queue.add(2L,promise2);
  queue.removeAndFailAll(new Exception());
  assertTrue(promise.isDone());
  assertFalse(promise.isSuccess());
  assertTrue(promise2.isDone());
  assertFalse(promise2.isSuccess());
  assertFalse(channel.finish());
}
