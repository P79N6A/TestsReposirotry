@Test(timeout=15000) public void testSocketReuse() throws InterruptedException {
  ServerBootstrap serverBootstrap=new ServerBootstrap();
  LocalHandler serverHandler=new LocalHandler("SERVER");
  serverBootstrap.group(new DefaultEventLoopGroup(),new DefaultEventLoopGroup()).channel(LocalServerChannel.class).childHandler(serverHandler);
  Bootstrap clientBootstrap=new Bootstrap();
  LocalHandler clientHandler=new LocalHandler("CLIENT");
  clientBootstrap.group(new DefaultEventLoopGroup()).channel(LocalChannel.class).remoteAddress(new LocalAddress(LOCAL_CHANNEL)).handler(clientHandler);
  serverBootstrap.bind(new LocalAddress(LOCAL_CHANNEL)).sync();
  int count=100;
  for (int i=1; i < count + 1; i++) {
    Channel ch=clientBootstrap.connect().sync().channel();
    int target=i * messageCountPerRun;
    while (serverHandler.count.get() != target || clientHandler.count.get() != target) {
      Thread.sleep(50);
    }
    close(ch,clientHandler);
  }
  assertEquals(count * 2 * messageCountPerRun,serverHandler.count.get() + clientHandler.count.get());
}
