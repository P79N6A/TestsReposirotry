@Test public void connectionWindowShouldAdjustWithMultipleStreams() throws Http2Exception {
  int newStreamId=3;
  connection.local().createStream(newStreamId,false);
  try {
    assertEquals(DEFAULT_WINDOW_SIZE,window(STREAM_ID));
    assertEquals(DEFAULT_WINDOW_SIZE,window(CONNECTION_STREAM_ID));
    int data1=(int)(DEFAULT_WINDOW_SIZE * DEFAULT_WINDOW_UPDATE_RATIO) + 1;
    receiveFlowControlledFrame(STREAM_ID,data1,0,false);
    verifyWindowUpdateNotSent(STREAM_ID);
    verifyWindowUpdateNotSent(CONNECTION_STREAM_ID);
    assertEquals(DEFAULT_WINDOW_SIZE - data1,window(STREAM_ID));
    assertEquals(DEFAULT_WINDOW_SIZE - data1,window(CONNECTION_STREAM_ID));
    assertTrue(consumeBytes(STREAM_ID,data1));
    verifyWindowUpdateSent(STREAM_ID,data1);
    verifyWindowUpdateSent(CONNECTION_STREAM_ID,data1);
    reset(frameWriter);
    --data1;
    int data2=data1 >> 1;
    receiveFlowControlledFrame(STREAM_ID,data1,0,false);
    receiveFlowControlledFrame(newStreamId,data1,0,false);
    verifyWindowUpdateNotSent(STREAM_ID);
    verifyWindowUpdateNotSent(newStreamId);
    verifyWindowUpdateNotSent(CONNECTION_STREAM_ID);
    assertEquals(DEFAULT_WINDOW_SIZE - data1,window(STREAM_ID));
    assertEquals(DEFAULT_WINDOW_SIZE - data1,window(newStreamId));
    assertEquals(DEFAULT_WINDOW_SIZE - (data1 << 1),window(CONNECTION_STREAM_ID));
    assertFalse(consumeBytes(STREAM_ID,data1));
    assertTrue(consumeBytes(newStreamId,data2));
    verifyWindowUpdateNotSent(STREAM_ID);
    verifyWindowUpdateNotSent(newStreamId);
    verifyWindowUpdateSent(CONNECTION_STREAM_ID,data1 + data2);
    assertEquals(DEFAULT_WINDOW_SIZE - data1,window(STREAM_ID));
    assertEquals(DEFAULT_WINDOW_SIZE - data1,window(newStreamId));
    assertEquals(DEFAULT_WINDOW_SIZE - (data1 - data2),window(CONNECTION_STREAM_ID));
  }
  finally {
    connection.stream(newStreamId).close();
  }
}
