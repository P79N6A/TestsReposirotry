@Test public void testSuccessfulUpgrade(){
  HttpClientUpgradeHandler.SourceCodec sourceCodec=new FakeSourceCodec();
  HttpClientUpgradeHandler.UpgradeCodec upgradeCodec=new FakeUpgradeCodec();
  HttpClientUpgradeHandler handler=new HttpClientUpgradeHandler(sourceCodec,upgradeCodec,1024);
  UserEventCatcher catcher=new UserEventCatcher();
  EmbeddedChannel channel=new EmbeddedChannel(catcher);
  channel.pipeline().addFirst("upgrade",handler);
  assertTrue(channel.writeOutbound(new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,"netty.io")));
  FullHttpRequest request=channel.readOutbound();
  assertEquals(2,request.headers().size());
  assertTrue(request.headers().contains(HttpHeaderNames.UPGRADE,"fancyhttp",false));
  assertTrue(request.headers().contains("connection","upgrade",false));
  assertTrue(request.release());
  assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED,catcher.getUserEvent());
  HttpResponse upgradeResponse=new DefaultHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.SWITCHING_PROTOCOLS);
  upgradeResponse.headers().add(HttpHeaderNames.UPGRADE,"fancyhttp");
  assertFalse(channel.writeInbound(upgradeResponse));
  assertFalse(channel.writeInbound(LastHttpContent.EMPTY_LAST_CONTENT));
  assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_SUCCESSFUL,catcher.getUserEvent());
  assertNull(channel.pipeline().get("upgrade"));
  assertTrue(channel.writeInbound(new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.OK)));
  FullHttpResponse response=channel.readInbound();
  assertEquals(HttpResponseStatus.OK,response.status());
  assertTrue(response.release());
  assertFalse(channel.finish());
}
