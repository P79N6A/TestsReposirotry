@Test public void usedHttp2MultiplexCodec() throws Exception {
  final Http2MultiplexCodec http2Codec=new Http2MultiplexCodecBuilder(true,new ChannelInitializer<Channel>(){
    @Override protected void initChannel(    Channel ch) throws Exception {
    }
  }
).build();
  UpgradeCodecFactory upgradeCodecFactory=new UpgradeCodecFactory(){
    @Override public UpgradeCodec newUpgradeCodec(    CharSequence protocol){
      return new Http2ServerUpgradeCodec(http2Codec);
    }
  }
;
  http2ConnectionHandler=http2Codec;
  userEvents=new ArrayList<Object>();
  HttpServerCodec httpServerCodec=new HttpServerCodec();
  HttpServerUpgradeHandler upgradeHandler=new HttpServerUpgradeHandler(httpServerCodec,upgradeCodecFactory);
  CleartextHttp2ServerUpgradeHandler handler=new CleartextHttp2ServerUpgradeHandler(httpServerCodec,upgradeHandler,http2Codec);
  channel=new EmbeddedChannel(handler,new ChannelInboundHandlerAdapter(){
    @Override public void userEventTriggered(    ChannelHandlerContext ctx,    Object evt) throws Exception {
      userEvents.add(evt);
    }
  }
);
  assertFalse(channel.writeInbound(Http2CodecUtil.connectionPrefaceBuf()));
  ByteBuf settingsFrame=settingsFrameBuf();
  assertTrue(channel.writeInbound(settingsFrame));
  assertEquals(1,userEvents.size());
  assertTrue(userEvents.get(0) instanceof PriorKnowledgeUpgradeEvent);
}
