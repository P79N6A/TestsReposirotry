@Test public void testOversizedRequest(){
  EmbeddedChannel embedder=new EmbeddedChannel(new HttpObjectAggregator(4));
  HttpRequest message=new DefaultHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.PUT,"http://localhost");
  HttpContent chunk1=new DefaultHttpContent(Unpooled.copiedBuffer("test",CharsetUtil.US_ASCII));
  HttpContent chunk2=new DefaultHttpContent(Unpooled.copiedBuffer("test2",CharsetUtil.US_ASCII));
  HttpContent chunk3=LastHttpContent.EMPTY_LAST_CONTENT;
  assertFalse(embedder.writeInbound(message));
  assertFalse(embedder.writeInbound(chunk1));
  assertFalse(embedder.writeInbound(chunk2));
  FullHttpResponse response=embedder.readOutbound();
  assertEquals(HttpResponseStatus.REQUEST_ENTITY_TOO_LARGE,response.status());
  assertEquals("0",response.headers().get(HttpHeaderNames.CONTENT_LENGTH));
  assertFalse(embedder.isOpen());
  try {
    assertFalse(embedder.writeInbound(chunk3));
    fail();
  }
 catch (  Exception e) {
    assertTrue(e instanceof ClosedChannelException);
  }
  assertFalse(embedder.finish());
}
