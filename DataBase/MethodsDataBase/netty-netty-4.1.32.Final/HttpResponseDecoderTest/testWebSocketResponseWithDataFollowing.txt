@Test public void testWebSocketResponseWithDataFollowing(){
  byte[] data=("HTTP/1.1 101 WebSocket Protocol Handshake\r\n" + "Upgrade: WebSocket\r\n" + "Connection: Upgrade\r\n"+ "Sec-WebSocket-Origin: http://localhost:8080\r\n"+ "Sec-WebSocket-Location: ws://localhost/some/path\r\n"+ "\r\n"+ "1234567812345678").getBytes();
  byte[] otherData={1,2,3,4};
  EmbeddedChannel ch=new EmbeddedChannel(new HttpResponseDecoder());
  ch.writeInbound(Unpooled.wrappedBuffer(data,otherData));
  HttpResponse res=ch.readInbound();
  assertThat(res.protocolVersion(),sameInstance(HttpVersion.HTTP_1_1));
  assertThat(res.status(),is(HttpResponseStatus.SWITCHING_PROTOCOLS));
  HttpContent content=ch.readInbound();
  assertThat(content.content().readableBytes(),is(16));
  content.release();
  assertThat(ch.finish(),is(true));
  ByteBuf expected=Unpooled.wrappedBuffer(otherData);
  ByteBuf buffer=ch.readInbound();
  try {
    assertEquals(expected,buffer);
  }
  finally {
    expected.release();
    if (buffer != null) {
      buffer.release();
    }
  }
}
