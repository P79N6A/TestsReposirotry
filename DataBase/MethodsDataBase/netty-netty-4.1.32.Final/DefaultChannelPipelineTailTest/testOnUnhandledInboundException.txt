@Test public void testOnUnhandledInboundException() throws Exception {
  final AtomicReference<Throwable> causeRef=new AtomicReference<Throwable>();
  final CountDownLatch latch=new CountDownLatch(1);
  MyChannel myChannel=new MyChannel(){
    @Override protected void onUnhandledInboundException(    Throwable cause){
      causeRef.set(cause);
      latch.countDown();
    }
  }
;
  Bootstrap bootstrap=new Bootstrap().channelFactory(new MyChannelFactory(myChannel)).group(GROUP).handler(new ChannelInboundHandlerAdapter()).remoteAddress(new InetSocketAddress(0));
  Channel channel=bootstrap.connect().sync().channel();
  try {
    IOException ex=new IOException("testOnUnhandledInboundException");
    channel.pipeline().fireExceptionCaught(ex);
    assertTrue(latch.await(1L,TimeUnit.SECONDS));
    assertSame(ex,causeRef.get());
  }
  finally {
    channel.close();
  }
}
