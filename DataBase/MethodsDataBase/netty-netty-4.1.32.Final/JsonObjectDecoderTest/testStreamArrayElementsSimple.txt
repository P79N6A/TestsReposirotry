@Test public void testStreamArrayElementsSimple(){
  EmbeddedChannel ch=new EmbeddedChannel(new JsonObjectDecoder(Integer.MAX_VALUE,true));
  String array="[  12, \"bla\"  , 13.4   \t  ,{\"key0\" : [1,2], \"key1\" : 12, \"key2\" : {}} , " + "true, false, null, [\"bla\", {}, [1,2,3]] ]";
  String object="{\"bla\" : \"blub\"}";
  ch.writeInbound(Unpooled.copiedBuffer(array,CharsetUtil.UTF_8));
  ch.writeInbound(Unpooled.copiedBuffer(object,CharsetUtil.UTF_8));
  ByteBuf res=ch.readInbound();
  assertEquals("12",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("\"bla\"",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("13.4",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("{\"key0\" : [1,2], \"key1\" : 12, \"key2\" : {}}",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("true",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("false",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("null",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals("[\"bla\", {}, [1,2,3]]",res.toString(CharsetUtil.UTF_8));
  res.release();
  res=ch.readInbound();
  assertEquals(object,res.toString(CharsetUtil.UTF_8));
  res.release();
  assertFalse(ch.finish());
}
