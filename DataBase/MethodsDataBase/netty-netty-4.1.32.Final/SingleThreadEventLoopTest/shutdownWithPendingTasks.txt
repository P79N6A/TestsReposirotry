@Test @SuppressWarnings("deprecation") public void shutdownWithPendingTasks() throws Exception {
  final int NUM_TASKS=3;
  final AtomicInteger ranTasks=new AtomicInteger();
  final CountDownLatch latch=new CountDownLatch(1);
  final Runnable task=new Runnable(){
    @Override public void run(){
      ranTasks.incrementAndGet();
      while (latch.getCount() > 0) {
        try {
          latch.await();
        }
 catch (        InterruptedException e) {
        }
      }
    }
  }
;
  for (int i=0; i < NUM_TASKS; i++) {
    loopA.execute(task);
  }
  while (ranTasks.get() == 0) {
    Thread.yield();
  }
  assertEquals(1,ranTasks.get());
  loopA.shutdown();
  latch.countDown();
  while (!loopA.isTerminated()) {
    loopA.awaitTermination(1,TimeUnit.DAYS);
  }
  assertEquals(NUM_TASKS,ranTasks.get());
}
