/** 
 * This test makes sure that large content is emitted in chunks.
 */
@Test public void shouldDecodeRequestWithChunkedContent(){
  int smallBatchSize=2;
  channel=new EmbeddedChannel(new BinaryMemcacheRequestDecoder(smallBatchSize));
  ByteBuf incoming=Unpooled.buffer();
  incoming.writeBytes(SET_REQUEST_WITH_CONTENT);
  channel.writeInbound(incoming);
  BinaryMemcacheRequest request=channel.readInbound();
  assertThat(request,notNullValue());
  assertThat(request.key(),notNullValue());
  assertThat(request.extras(),nullValue());
  assertThat(request.keyLength(),is((short)3));
  assertThat(request.extrasLength(),is((byte)0));
  assertThat(request.totalBodyLength(),is(11));
  request.release();
  int expectedContentChunks=4;
  for (int i=1; i <= expectedContentChunks; i++) {
    MemcacheContent content=channel.readInbound();
    if (i < expectedContentChunks) {
      assertThat(content,instanceOf(MemcacheContent.class));
    }
 else {
      assertThat(content,instanceOf(LastMemcacheContent.class));
    }
    assertThat(content.content().readableBytes(),is(2));
    content.release();
  }
  assertThat(channel.readInbound(),nullValue());
}
