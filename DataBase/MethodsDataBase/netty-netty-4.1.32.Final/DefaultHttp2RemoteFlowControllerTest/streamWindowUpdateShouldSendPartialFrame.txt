@Test public void streamWindowUpdateShouldSendPartialFrame() throws Http2Exception {
  exhaustStreamWindow(STREAM_A);
  verify(listener,times(1)).writabilityChanged(stream(STREAM_A));
  verify(listener,never()).writabilityChanged(stream(STREAM_B));
  verify(listener,never()).writabilityChanged(stream(STREAM_C));
  verify(listener,never()).writabilityChanged(stream(STREAM_D));
  assertFalse(controller.isWritable(stream(STREAM_A)));
  assertTrue(controller.isWritable(stream(STREAM_B)));
  assertTrue(controller.isWritable(stream(STREAM_C)));
  assertTrue(controller.isWritable(stream(STREAM_D)));
  reset(listener);
  FakeFlowControlled data=new FakeFlowControlled(10);
  sendData(STREAM_A,data);
  controller.writePendingBytes();
  data.assertNotWritten();
  incrementWindowSize(STREAM_A,5);
  verify(listener,never()).writabilityChanged(stream(STREAM_A));
  verify(listener,never()).writabilityChanged(stream(STREAM_B));
  verify(listener,never()).writabilityChanged(stream(STREAM_C));
  verify(listener,never()).writabilityChanged(stream(STREAM_D));
  assertFalse(controller.isWritable(stream(STREAM_A)));
  assertTrue(controller.isWritable(stream(STREAM_B)));
  assertTrue(controller.isWritable(stream(STREAM_C)));
  assertTrue(controller.isWritable(stream(STREAM_D)));
  reset(listener);
  data.assertNotWritten();
  controller.writePendingBytes();
  data.assertPartiallyWritten(5);
  assertEquals(DEFAULT_WINDOW_SIZE - 5,window(CONNECTION_STREAM_ID));
  assertEquals(0,window(STREAM_A));
  assertEquals(DEFAULT_WINDOW_SIZE,window(STREAM_B));
  assertEquals(DEFAULT_WINDOW_SIZE,window(STREAM_C));
  assertEquals(DEFAULT_WINDOW_SIZE,window(STREAM_D));
}
