@Test public void applyDefaultValueWhenCustomizeDefaultValueSeparator() throws IOException {
  Properties props=new Properties();
  props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE,"true");
  props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR,"?:");
  Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml");
  SqlSessionFactory factory=new SqlSessionFactoryBuilder().build(reader,props);
  Configuration configuration=factory.getConfiguration();
  configuration.addMapper(CustomDefaultValueSeparatorMapper.class);
  SupportClasses.CustomCache cache=SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));
  Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);
  Assertions.assertThat(((UnpooledDataSource)configuration.getEnvironment().getDataSource()).getUrl()).isEqualTo("jdbc:hsqldb:mem:global_variables_defaults");
  Assertions.assertThat(configuration.getDatabaseId()).isEqualTo("hsql");
  Assertions.assertThat(((SupportClasses.CustomObjectFactory)configuration.getObjectFactory()).getProperties().getProperty("name")).isEqualTo("default");
  Assertions.assertThat(cache.getName()).isEqualTo("default");
  SqlSession sqlSession=factory.openSession();
  try {
    CustomDefaultValueSeparatorMapper mapper=sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);
    Assertions.assertThat(mapper.selectValue(null)).isEqualTo("default");
  }
  finally {
    sqlSession.close();
  }
}
