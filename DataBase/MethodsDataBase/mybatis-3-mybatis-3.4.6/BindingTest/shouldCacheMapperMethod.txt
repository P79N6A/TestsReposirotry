@Test public void shouldCacheMapperMethod() throws Exception {
  final SqlSession session=sqlSessionFactory.openSession();
  try {
    final MapperProxyFactory<BoundBlogMapper> mapperProxyFactory=new MapperProxyFactory<BoundBlogMapper>(BoundBlogMapper.class);
    assertEquals(BoundBlogMapper.class,mapperProxyFactory.getMapperInterface());
    final BoundBlogMapper mapper=mapperProxyFactory.newInstance(session);
    assertNotSame(mapper,mapperProxyFactory.newInstance(session));
    assertTrue(mapperProxyFactory.getMethodCache().isEmpty());
    final Method selectBlog=BoundBlogMapper.class.getMethod("selectBlog",Integer.TYPE);
    final Method selectBlogByIdUsingConstructor=BoundBlogMapper.class.getMethod("selectBlogByIdUsingConstructor",Integer.TYPE);
    mapper.selectBlog(1);
    assertEquals(1,mapperProxyFactory.getMethodCache().size());
    assertTrue(mapperProxyFactory.getMethodCache().containsKey(selectBlog));
    final MapperMethod cachedSelectBlog=mapperProxyFactory.getMethodCache().get(selectBlog);
    session.clearCache();
    mapper.selectBlog(1);
    assertEquals(1,mapperProxyFactory.getMethodCache().size());
    assertSame(cachedSelectBlog,mapperProxyFactory.getMethodCache().get(selectBlog));
    session.clearCache();
    mapper.selectBlogByIdUsingConstructor(1);
    assertEquals(2,mapperProxyFactory.getMethodCache().size());
    assertSame(cachedSelectBlog,mapperProxyFactory.getMethodCache().get(selectBlog));
    assertTrue(mapperProxyFactory.getMethodCache().containsKey(selectBlogByIdUsingConstructor));
  }
  finally {
    session.close();
  }
}
