@Test public void demoTypeHandlerForSuperInterface(){
  typeHandlerRegistry.register(SomeInterfaceTypeHandler.class);
  assertNull("Registering interface works only for enums.",typeHandlerRegistry.getTypeHandler(SomeClass.class));
  assertSame("When type handler for interface is not exist, apply default enum type handler.",EnumTypeHandler.class,typeHandlerRegistry.getTypeHandler(NoTypeHandlerInterfaceEnum.class).getClass());
  assertSame(SomeInterfaceTypeHandler.class,typeHandlerRegistry.getTypeHandler(SomeEnum.class).getClass());
  assertSame(SomeInterfaceTypeHandler.class,typeHandlerRegistry.getTypeHandler(ExtendingSomeEnum.class).getClass());
  assertSame(SomeInterfaceTypeHandler.class,typeHandlerRegistry.getTypeHandler(ImplementingMultiInterfaceSomeEnum.class).getClass());
}
