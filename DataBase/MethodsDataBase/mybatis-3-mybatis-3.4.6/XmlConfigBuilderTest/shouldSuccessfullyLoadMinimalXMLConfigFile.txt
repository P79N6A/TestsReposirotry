@Test public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {
  String resource="org/apache/ibatis/builder/MinimalMapperConfig.xml";
  InputStream inputStream=Resources.getResourceAsStream(resource);
  XMLConfigBuilder builder=new XMLConfigBuilder(inputStream);
  Configuration config=builder.parse();
  assertNotNull(config);
  assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);
  assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);
  assertThat(config.isCacheEnabled()).isTrue();
  assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);
  assertThat(config.isLazyLoadingEnabled()).isFalse();
  assertThat(config.isAggressiveLazyLoading()).isFalse();
  assertThat(config.isMultipleResultSetsEnabled()).isTrue();
  assertThat(config.isUseColumnLabel()).isTrue();
  assertThat(config.isUseGeneratedKeys()).isFalse();
  assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);
  assertNull(config.getDefaultStatementTimeout());
  assertNull(config.getDefaultFetchSize());
  assertThat(config.isMapUnderscoreToCamelCase()).isFalse();
  assertThat(config.isSafeRowBoundsEnabled()).isFalse();
  assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);
  assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);
  assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>)new HashSet<String>(Arrays.asList("equals","clone","hashCode","toString")));
  assertThat(config.isSafeResultHandlerEnabled()).isTrue();
  assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);
  assertThat(config.isCallSettersOnNulls()).isFalse();
  assertNull(config.getLogPrefix());
  assertNull(config.getLogImpl());
  assertNull(config.getConfigurationFactory());
  assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);
  inputStream.close();
}
