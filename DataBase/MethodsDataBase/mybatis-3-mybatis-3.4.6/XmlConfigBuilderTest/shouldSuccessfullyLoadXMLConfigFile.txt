@Test public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {
  String resource="org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml";
  InputStream inputStream=Resources.getResourceAsStream(resource);
  Properties props=new Properties();
  props.put("prop2","cccc");
  XMLConfigBuilder builder=new XMLConfigBuilder(inputStream,null,props);
  Configuration config=builder.parse();
  assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);
  assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);
  assertThat(config.isCacheEnabled()).isFalse();
  assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);
  assertThat(config.isLazyLoadingEnabled()).isTrue();
  assertThat(config.isAggressiveLazyLoading()).isTrue();
  assertThat(config.isMultipleResultSetsEnabled()).isFalse();
  assertThat(config.isUseColumnLabel()).isFalse();
  assertThat(config.isUseGeneratedKeys()).isTrue();
  assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);
  assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);
  assertThat(config.getDefaultFetchSize()).isEqualTo(100);
  assertThat(config.isMapUnderscoreToCamelCase()).isTrue();
  assertThat(config.isSafeRowBoundsEnabled()).isTrue();
  assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);
  assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);
  assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>)new HashSet<String>(Arrays.asList("equals","clone","hashCode","toString","xxx")));
  assertThat(config.isSafeResultHandlerEnabled()).isFalse();
  assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);
  assertThat(config.isCallSettersOnNulls()).isTrue();
  assertThat(config.getLogPrefix()).isEqualTo("mybatis_");
  assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());
  assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());
  assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());
  assertTrue(config.getTypeAliasRegistry().getTypeAliases().get("blogauthor").equals(Author.class));
  assertTrue(config.getTypeAliasRegistry().getTypeAliases().get("blog").equals(Blog.class));
  assertTrue(config.getTypeAliasRegistry().getTypeAliases().get("cart").equals(Cart.class));
  assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);
  assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);
  assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);
  assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class,JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);
  assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);
  ExampleObjectFactory objectFactory=(ExampleObjectFactory)config.getObjectFactory();
  assertThat(objectFactory.getProperties().size()).isEqualTo(1);
  assertThat(objectFactory.getProperties().getProperty("objectFactoryProperty")).isEqualTo("100");
  assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);
  assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);
  ExamplePlugin plugin=(ExamplePlugin)config.getInterceptors().get(0);
  assertThat(plugin.getProperties().size()).isEqualTo(1);
  assertThat(plugin.getProperties().getProperty("pluginProperty")).isEqualTo("100");
  Environment environment=config.getEnvironment();
  assertThat(environment.getId()).isEqualTo("development");
  assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);
  assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);
  assertThat(config.getDatabaseId()).isEqualTo("derby");
  assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);
  assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();
  assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();
  assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();
  assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();
  inputStream.close();
}
