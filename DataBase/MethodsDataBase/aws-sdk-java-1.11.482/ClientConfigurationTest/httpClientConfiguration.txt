@Test public void httpClientConfiguration() throws Exception {
  ClientConfiguration config=new ClientConfiguration();
  ApacheHttpClientConfig httpclientConfig=config.getApacheHttpClientConfig();
  assertNotNull("httpclient config must never be null",httpclientConfig);
  assertNull("default ssl socket factory is null",httpclientConfig.getSslSocketFactory());
  SSLSocketFactory customFactory=new SSLSocketFactory((KeyStore)null);
  config.getApacheHttpClientConfig().setSslSocketFactory(customFactory);
  assertSame("custom ssl socket factory configured",customFactory,config.getApacheHttpClientConfig().getSslSocketFactory());
  config.getApacheHttpClientConfig().setSslSocketFactory(null);
  assertNull("no more custom ssl socket factory configured",config.getApacheHttpClientConfig().getSslSocketFactory());
  config.getApacheHttpClientConfig().withSslSocketFactory(customFactory);
  assertSame("custom ssl socket factory configured via fluent API",customFactory,config.getApacheHttpClientConfig().getSslSocketFactory());
  ClientConfiguration config2=new ClientConfiguration(config);
  assertSame("custom ssl socket factory copied via ctor",customFactory,config2.getApacheHttpClientConfig().getSslSocketFactory());
  config.getApacheHttpClientConfig().setSslSocketFactory(null);
  assertNull("ssl socket factory set to null for the original httpclient config",config.getApacheHttpClientConfig().getSslSocketFactory());
  assertNotNull("ssl soscket of the new httpclient config should not be affected",config2.getApacheHttpClientConfig().getSslSocketFactory());
  assertNotNull("Client Configuration must have a default DnsResolver",config.getDnsResolver());
  try {
    config.setDnsResolver(null);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException expected) {
  }
  DnsResolver resolver=new DnsResolver(){
    @Override public InetAddress[] resolve(    String s) throws UnknownHostException {
      return new InetAddress[0];
    }
  }
;
  config.setDnsResolver(resolver);
  assertSame("custom dns resolver set via fluent API",resolver,config.getDnsResolver());
}
