@Test public void testNumberSet(){
  assertEquals(Collections.singletonList("0"),convert("getByteSet",Collections.singleton((byte)0)).getNS());
  assertEquals(Collections.singletonList("0"),convert("getShortSet",Collections.singleton((short)0)).getNS());
  assertEquals(Collections.singletonList("0"),convert("getIntSet",Collections.singleton(0)).getNS());
  assertEquals(Collections.singletonList("0"),convert("getLongSet",Collections.singleton(0l)).getNS());
  assertEquals(Collections.singletonList("0"),convert("getBigIntegerSet",Collections.singleton(BigInteger.ZERO)).getNS());
  assertEquals(Collections.singletonList("0.0"),convert("getFloatSet",Collections.singleton(0f)).getNS());
  assertEquals(Collections.singletonList("0.0"),convert("getDoubleSet",Collections.singleton(0d)).getNS());
  assertEquals(Collections.singletonList("0"),convert("getBigDecimalSet",Collections.singleton(BigDecimal.ZERO)).getNS());
  assertEquals(Arrays.asList("0","1","2"),convert("getLongSet",new TreeSet<Number>(){
{
      add(0);
      add(1);
      add(2);
    }
  }
).getNS());
}
