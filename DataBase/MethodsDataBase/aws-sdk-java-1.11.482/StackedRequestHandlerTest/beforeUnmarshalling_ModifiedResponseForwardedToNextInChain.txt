@Test public void beforeUnmarshalling_ModifiedResponseForwardedToNextInChain(){
  final HttpResponse origHttpResponse=mock(HttpResponse.class);
  final HttpResponse afterFirstHttpResponse=mock(HttpResponse.class);
  final HttpResponse afterSecondHttpResponse=mock(HttpResponse.class);
  final HttpResponse afterThirdHttpResponse=mock(HttpResponse.class);
  doReturn(afterThirdHttpResponse).when(third).beforeUnmarshalling(request,origHttpResponse);
  doReturn(afterSecondHttpResponse).when(second).beforeUnmarshalling(request,afterThirdHttpResponse);
  doReturn(afterFirstHttpResponse).when(first).beforeUnmarshalling(request,afterSecondHttpResponse);
  assertEquals(afterFirstHttpResponse,stackedRequestHandler.beforeUnmarshalling(request,origHttpResponse));
  InOrder inOrder=inOrder(third,second,first);
  inOrder.verify(third).beforeUnmarshalling(request,origHttpResponse);
  inOrder.verify(second).beforeUnmarshalling(request,afterThirdHttpResponse);
  inOrder.verify(first).beforeUnmarshalling(request,afterSecondHttpResponse);
}
