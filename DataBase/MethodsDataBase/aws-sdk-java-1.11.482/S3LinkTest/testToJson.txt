@Test public void testToJson(){
  S3Link testLink=mapper.createS3Link("bucket","key");
  String json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"bucket\",\"key\":\"key\",\"region\":null}}",json);
  testLink=mapper.createS3Link("bucket","testKey");
  json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"bucket\",\"key\":\"testKey\",\"region\":null}}",json);
  testLink=mapper.createS3Link(Region.AP_Sydney,"bucket","testKey");
  json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"bucket\",\"key\":\"testKey\",\"region\":\"ap-southeast-2\"}}",json);
  testLink=mapper.createS3Link(Region.AP_Sydney,"test-bucket","testKey");
  json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"test-bucket\",\"key\":\"testKey\",\"region\":\"ap-southeast-2\"}}",json);
  testLink=mapper.createS3Link(Region.AP_Sydney,"test-bucket","test/key/with/slashes");
  json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"test-bucket\",\"key\":\"test/key/with/slashes\",\"region\":\"ap-southeast-2\"}}",json);
  testLink=mapper.createS3Link("test-bucket","test/key/with/slashes");
  json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"test-bucket\",\"key\":\"test/key/with/slashes\",\"region\":null}}",json);
  testLink=mapper.createS3Link(Region.AP_Sydney,"test-bucket","test/key/with/slashes");
  json=testLink.toJson();
  assertEquals(json,"{\"s3\":{\"bucket\":\"test-bucket\",\"key\":\"test/key/with/slashes\",\"region\":\"ap-southeast-2\"}}",json);
}
