@Test public void testRetryIOExceptionFromHandler() throws Exception {
  final IOException exception=new IOException("BOOM");
  HttpResponseHandler<AmazonWebServiceResponse<Object>> handler=EasyMock.createMock(HttpResponseHandler.class);
  EasyMock.expect(handler.needsConnectionLeftOpen()).andReturn(false).anyTimes();
  EasyMock.expect(handler.handle(EasyMock.<HttpResponse>anyObject())).andThrow(exception).times(4);
  EasyMock.replay(handler);
  BasicHttpResponse response=createBasicHttpResponse();
  EasyMock.reset(httpClient);
  EasyMock.expect(httpClient.getConnectionManager()).andReturn(null).anyTimes();
  EasyMock.expect(httpClient.execute(EasyMock.<HttpUriRequest>anyObject(),EasyMock.<HttpContext>anyObject())).andReturn(response).times(4);
  EasyMock.replay(httpClient);
  ExecutionContext context=new ExecutionContext();
  Request<?> request=new DefaultRequest<Object>(null,"testsvc");
  request.setEndpoint(java.net.URI.create("http://testsvc.region.amazonaws.com"));
  request.setContent(new java.io.ByteArrayInputStream(new byte[0]));
  try {
    client.requestExecutionBuilder().request(request).executionContext(context).execute(handler);
    Assert.fail("No exception when request repeatedly fails!");
  }
 catch (  AmazonClientException e) {
    Assert.assertSame(exception,e.getCause());
  }
  EasyMock.verify(httpClient);
}
