@Test public void testNumbers(){
  assertEquals((byte)1,unconvert("getByte","setByte",new AttributeValue().withN("1")));
  assertEquals((byte)1,unconvert("getBoxedByte","setBoxedByte",new AttributeValue().withN("1")));
  assertEquals((short)1,unconvert("getShort","setShort",new AttributeValue().withN("1")));
  assertEquals((short)1,unconvert("getBoxedShort","setBoxedShort",new AttributeValue().withN("1")));
  assertEquals(1,unconvert("getInt","setInt",new AttributeValue().withN("1")));
  assertEquals(1,unconvert("getBoxedInt","setBoxedInt",new AttributeValue().withN("1")));
  assertEquals(1l,unconvert("getLong","setLong",new AttributeValue().withN("1")));
  assertEquals(1l,unconvert("getBoxedLong","setBoxedLong",new AttributeValue().withN("1")));
  assertEquals(BigInteger.ONE,unconvert("getBigInt","setBigInt",new AttributeValue().withN("1")));
  assertEquals(1.5f,unconvert("getFloat","setFloat",new AttributeValue().withN("1.5")));
  assertEquals(1.5f,unconvert("getBoxedFloat","setBoxedFloat",new AttributeValue().withN("1.5")));
  assertEquals(1.5d,unconvert("getDouble","setDouble",new AttributeValue().withN("1.5")));
  assertEquals(1.5d,unconvert("getBoxedDouble","setBoxedDouble",new AttributeValue().withN("1.5")));
  assertEquals(BigDecimal.ONE,unconvert("getBigDecimal","setBigDecimal",new AttributeValue().withN("1")));
}
