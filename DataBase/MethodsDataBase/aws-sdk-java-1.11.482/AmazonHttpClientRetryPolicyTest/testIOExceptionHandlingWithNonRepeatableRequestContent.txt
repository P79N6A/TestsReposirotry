/** 
 * Tests AmazonHttpClient's behavior upon simulated IOException when the request payload is not repeatable.
 */
@Test public void testIOExceptionHandlingWithNonRepeatableRequestContent(){
  IOException simulatedIOException=new IOException("fake IOException");
  injectMockHttpClient(testedClient,new ThrowingExceptionHttpClient(simulatedIOException));
  ExecutionContext context=new ExecutionContext(true);
  Request<?> testedRepeatableRequest=getSampleRequestWithNonRepeatableContent(originalRequest);
  try {
    testedClient.requestExecutionBuilder().request(testedRepeatableRequest).errorResponseHandler(errorResponseHandler).executionContext(context).execute();
    Assert.fail("AmazonClientException is expected.");
  }
 catch (  AmazonClientException ace) {
    Assert.assertTrue(simulatedIOException == ace.getCause());
  }
  verifyExpectedContextData(retryCondition,null,null,EXPECTED_SHOULD_RETRY_CALL_COUNT);
  verifyExpectedContextData(backoffStrategy,null,null,EXPECTED_RETRY_COUNT);
  Assert.assertEquals(EXPECTED_RETRY_COUNT + 1,context.getAwsRequestMetrics().getTimingInfo().getCounter(AWSRequestMetrics.Field.RequestCount.toString()).intValue());
}
