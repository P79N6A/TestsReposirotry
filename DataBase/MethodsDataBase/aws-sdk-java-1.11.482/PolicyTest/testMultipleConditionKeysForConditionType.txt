/** 
 * Policies with multiple conditions that use the same comparison type must be merged together in the JSON format, otherwise there will be two keys with the same name and one will override the other.
 */
@Test public void testMultipleConditionKeysForConditionType() throws Exception {
  Policy policy=new Policy();
  policy.withStatements(new Statement(Effect.Allow).withResources(new Resource("arn:aws:sqs:us-east-1:987654321000:MyQueue")).withPrincipals(Principal.AllUsers).withActions(new TestAction("foo")).withConditions(new StringCondition(StringComparisonType.StringNotLike,"key1","foo"),new StringCondition(StringComparisonType.StringNotLike,"key1","bar")));
  JsonNode jsonPolicy=Jackson.jsonNodeOf(policy.toJson());
  JsonNode statementArray=jsonPolicy.get("Statement");
  assertEquals(statementArray.size(),1);
  JsonNode conditions=statementArray.get(0).get("Condition");
  assertEquals(conditions.size(),1);
  JsonNode stringLikeCondition=conditions.get(StringComparisonType.StringNotLike.toString());
  assertTrue(stringLikeCondition.has("key1"));
  assertFalse(stringLikeCondition.has("key2"));
  assertValidStatementIds(policy);
}
