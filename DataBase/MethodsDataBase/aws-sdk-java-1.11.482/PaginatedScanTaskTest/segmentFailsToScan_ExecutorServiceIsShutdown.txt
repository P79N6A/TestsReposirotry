/** 
 * A failed segment makes the scan task unusable and will always rethrow the same exception. In this case it makes sense to shutdown the executor so that applications can shutdown faster. A future enhancement could be to either retry failed segments, explicitly resume a failed scan, or include metadata in the thrown exception about the state of the scan at the time it was aborted. See <a href="https://github.com/aws/aws-sdk-java/pull/624">PR #624</a> and <a href="https://github.com/aws/aws-sdk-java/issues/624">Issue #624</a> for more details.
 */
@Test public void segmentFailsToScan_ExecutorServiceIsShutdown() throws InterruptedException {
  stubSuccessfulScan(0);
  stubSuccessfulScan(1);
  when(dynamoDB.scan(isSegmentNumber(2))).thenThrow(new ProvisionedThroughputExceededException("Slow Down!"));
  stubSuccessfulScan(3);
  stubSuccessfulScan(4);
  try {
    parallelScanTask.getNextBatchOfScanResults();
    fail("Expected ProvisionedThroughputExceededException");
  }
 catch (  ProvisionedThroughputExceededException expected) {
  }
  executorService.awaitTermination(5,TimeUnit.SECONDS);
  assertTrue(executorService.isShutdown());
}
