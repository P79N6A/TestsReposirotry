@Test public void testCopyExistingFilesOnDifferentFileSystem() throws IOException {
  Path sourcePath=new Path(sourceFolder.getRoot().getAbsolutePath());
  sourceFolder.newFile("000000_0");
  sourceFolder.newFile("000001_0");
  sourceFolder.newFile("000000_0.gz");
  sourceFolder.newFile("000001_0.gz");
  Path targetPath=new Path(targetFolder.getRoot().getAbsolutePath());
  FileSystem spyTargetFs=Mockito.spy(targetPath.getFileSystem(hiveConf));
  Mockito.when(spyTargetFs.getUri()).thenReturn(URI.create("hdfs://" + targetPath.toUri().getPath()));
  try {
    Hive.copyFiles(hiveConf,sourcePath,targetPath,spyTargetFs,isSourceLocal,NO_ACID,null);
  }
 catch (  HiveException e) {
    e.printStackTrace();
    assertTrue("Hive.copyFiles() threw an unexpected exception.",false);
  }
  if (isSourceLocal) {
    sourceFolder.delete();
    sourceFolder.create();
    sourcePath=new Path(sourceFolder.getRoot().getAbsolutePath());
  }
  sourceFolder.newFile("000000_0");
  sourceFolder.newFile("000001_0");
  sourceFolder.newFile("000000_0.gz");
  sourceFolder.newFile("000001_0.gz");
  try {
    Hive.copyFiles(hiveConf,sourcePath,targetPath,spyTargetFs,isSourceLocal,NO_ACID,null);
  }
 catch (  HiveException e) {
    e.printStackTrace();
    assertTrue("Hive.copyFiles() threw an unexpected exception.",false);
  }
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000000_0")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000001_0")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000000_0.gz")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000001_0.gz")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000000_0_copy_1")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000001_0_copy_1")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000000_0_copy_1.gz")));
  assertTrue(spyTargetFs.exists(new Path(targetPath,"000001_0_copy_1.gz")));
}
