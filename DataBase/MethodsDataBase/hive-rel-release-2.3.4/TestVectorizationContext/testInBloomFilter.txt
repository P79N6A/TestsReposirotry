@Test public void testInBloomFilter() throws Exception {
  ExprNodeColumnDesc colExpr=new ExprNodeColumnDesc(TypeInfoFactory.getDecimalTypeInfo(10,5),"a","table",false);
  ExprNodeDesc bfExpr=new ExprNodeDynamicValueDesc(new DynamicValue("id1",TypeInfoFactory.binaryTypeInfo));
  ExprNodeGenericFuncDesc inBloomFilterExpr=new ExprNodeGenericFuncDesc();
  GenericUDF inBloomFilterUdf=new GenericUDFInBloomFilter();
  inBloomFilterExpr.setTypeInfo(TypeInfoFactory.booleanTypeInfo);
  inBloomFilterExpr.setGenericUDF(inBloomFilterUdf);
  List<ExprNodeDesc> children1=new ArrayList<ExprNodeDesc>(2);
  children1.add(colExpr);
  children1.add(bfExpr);
  inBloomFilterExpr.setChildren(children1);
  List<String> columns=new ArrayList<String>();
  columns.add("b");
  columns.add("a");
  VectorizationContext vc=new VectorizationContext("name",columns);
  VectorExpression ve=vc.getVectorExpression(inBloomFilterExpr,VectorExpressionDescriptor.Mode.FILTER);
  Assert.assertEquals(VectorInBloomFilterColDynamicValue.class,ve.getClass());
  VectorInBloomFilterColDynamicValue vectorizedInBloomFilterExpr=(VectorInBloomFilterColDynamicValue)ve;
  VectorExpression[] children=vectorizedInBloomFilterExpr.getChildExpressions();
  Assert.assertNull(children);
}
