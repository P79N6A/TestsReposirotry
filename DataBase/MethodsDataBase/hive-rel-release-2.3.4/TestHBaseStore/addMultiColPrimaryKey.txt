@Test public void addMultiColPrimaryKey() throws Exception {
  String tableName="mcpktable";
  String pkName="test_pk";
  String pkColNames[]={"col0","col1","col2"};
  Table table=createMultiColumnTable(tableName,"int","varchar(32)","decimal(10,2)");
  List<SQLPrimaryKey> pk=Arrays.asList(new SQLPrimaryKey(DB,tableName,pkColNames[1],0,pkName,false,true,true),new SQLPrimaryKey(DB,tableName,pkColNames[2],1,pkName,false,true,true));
  store.createTable(table);
  store.addPrimaryKeys(pk);
  Assert.assertNotNull(pk);
  Assert.assertEquals(2,pk.size());
  SQLPrimaryKey[] sorted=pk.toArray(new SQLPrimaryKey[2]);
  Arrays.sort(sorted,new Comparator<SQLPrimaryKey>(){
    @Override public int compare(    SQLPrimaryKey o1,    SQLPrimaryKey o2){
      return o1.getColumn_name().compareTo(o2.getColumn_name());
    }
  }
);
  for (int i=0; i < 2; i++) {
    Assert.assertEquals(DB,sorted[i].getTable_db());
    Assert.assertEquals(tableName,sorted[i].getTable_name());
    Assert.assertEquals(pkColNames[i + 1],sorted[i].getColumn_name());
    Assert.assertEquals(i,sorted[i].getKey_seq());
    Assert.assertEquals(pkName,sorted[i].getPk_name());
    Assert.assertFalse(sorted[i].isEnable_cstr());
    Assert.assertTrue(sorted[i].isValidate_cstr());
    Assert.assertTrue(sorted[i].isRely_cstr());
  }
}
