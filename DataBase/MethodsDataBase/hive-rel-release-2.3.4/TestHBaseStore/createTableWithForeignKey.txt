@Test public void createTableWithForeignKey() throws Exception {
  String tableName="fktable";
  String pkTable="pktable";
  String pkName="test_pk";
  String fkName="test_fk";
  String fkColNames[]={"col0"};
  String pkColNames[]={"pcol0"};
  Table table=createMultiColumnTable(tableName,"int");
  List<SQLForeignKey> fk=Arrays.asList(new SQLForeignKey(DB,pkTable,pkColNames[0],DB,tableName,fkColNames[0],0,1,2,fkName,pkName,true,false,false));
  store.createTableWithConstraints(table,null,fk);
  fk=store.getForeignKeys(DB,pkTable,DB,tableName);
  Assert.assertNotNull(fk);
  Assert.assertEquals(1,fk.size());
  Assert.assertEquals(DB,fk.get(0).getPktable_db());
  Assert.assertEquals(pkTable,fk.get(0).getPktable_name());
  Assert.assertEquals(pkColNames[0],fk.get(0).getPkcolumn_name());
  Assert.assertEquals(DB,fk.get(0).getFktable_db());
  Assert.assertEquals(tableName,fk.get(0).getFktable_name());
  Assert.assertEquals(fkColNames[0],fk.get(0).getFkcolumn_name());
  Assert.assertEquals(0,fk.get(0).getKey_seq());
  Assert.assertEquals(1,fk.get(0).getUpdate_rule());
  Assert.assertEquals(2,fk.get(0).getDelete_rule());
  Assert.assertEquals(fkName,fk.get(0).getFk_name());
  Assert.assertEquals(pkName,fk.get(0).getPk_name());
  Assert.assertTrue(fk.get(0).isEnable_cstr());
  Assert.assertFalse(fk.get(0).isValidate_cstr());
  Assert.assertFalse(fk.get(0).isRely_cstr());
}
