@Test public void alterTable() throws Exception {
  String defaultDbName="default";
  String tblName="altertabletbl";
  String tblOwner="me";
  String serdeLocation="file:/tmp";
  FieldSchema col1=new FieldSchema("col1","int","no comment");
  FieldSchema col2=new FieldSchema("col2","int","no comment");
  List<FieldSchema> cols=new ArrayList<FieldSchema>();
  cols.add(col1);
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,serdeLocation,"input","output",false,0,serde,null,null,emptyParameters);
  Table table=new Table(tblName,defaultDbName,tblOwner,startTime,startTime,0,sd,new ArrayList<FieldSchema>(),emptyParameters,null,null,null);
  msClient.createTable(table);
  cols.add(col2);
  table=new Table(tblName,defaultDbName,tblOwner,startTime,startTime,0,sd,new ArrayList<FieldSchema>(),emptyParameters,null,null,null);
  msClient.alter_table(defaultDbName,tblName,table);
  NotificationEventResponse rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(2,rsp.getEventsSize());
  NotificationEvent event=rsp.getEvents().get(1);
  assertEquals(firstEventId + 2,event.getEventId());
  assertTrue(event.getEventTime() >= startTime);
  assertEquals(EventType.ALTER_TABLE.toString(),event.getEventType());
  assertEquals(defaultDbName,event.getDbName());
  assertEquals(tblName,event.getTableName());
  AlterTableMessage alterTableMessage=md.getAlterTableMessage(event.getMessage());
  assertEquals(table,alterTableMessage.getTableObjAfter());
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.ALTER_TABLE,firstEventId + 2);
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.CREATE_TABLE,firstEventId + 1);
  DummyRawStoreFailEvent.setEventSucceed(false);
  try {
    msClient.alter_table(defaultDbName,tblName,table);
    fail("Error: alter table should've failed");
  }
 catch (  Exception ex) {
  }
  rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(2,rsp.getEventsSize());
}
