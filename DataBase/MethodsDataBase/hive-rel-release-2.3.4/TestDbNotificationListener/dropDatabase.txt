@Test public void dropDatabase() throws Exception {
  String dbName="dropdb";
  String dbName2="dropdb2";
  String dbLocationUri="file:/tmp";
  String dbDescription="no description";
  Database db=new Database(dbName,dbDescription,dbLocationUri,emptyParameters);
  msClient.createDatabase(db);
  msClient.dropDatabase(dbName);
  NotificationEventResponse rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(2,rsp.getEventsSize());
  NotificationEvent event=rsp.getEvents().get(1);
  assertEquals(firstEventId + 2,event.getEventId());
  assertTrue(event.getEventTime() >= startTime);
  assertEquals(EventType.DROP_DATABASE.toString(),event.getEventType());
  assertEquals(dbName,event.getDbName());
  assertNull(event.getTableName());
  DropDatabaseMessage dropDbMsg=md.getDropDatabaseMessage(event.getMessage());
  assertEquals(dbName,dropDbMsg.getDB());
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.DROP_DATABASE,firstEventId + 2);
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.CREATE_DATABASE,firstEventId + 1);
  db=new Database(dbName2,dbDescription,dbLocationUri,emptyParameters);
  msClient.createDatabase(db);
  DummyRawStoreFailEvent.setEventSucceed(false);
  try {
    msClient.dropDatabase(dbName2);
    fail("Error: drop database should've failed");
  }
 catch (  Exception ex) {
  }
  rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(3,rsp.getEventsSize());
}
