@Test public void insertTable() throws Exception {
  String defaultDbName="default";
  String tblName="inserttbl";
  String tblOwner="me";
  String serdeLocation="file:/tmp";
  String fileAdded="/warehouse/mytable/b1";
  String checksumAdded="1234";
  FieldSchema col1=new FieldSchema("col1","int","no comment");
  List<FieldSchema> cols=new ArrayList<FieldSchema>();
  cols.add(col1);
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,serdeLocation,"input","output",false,0,serde,null,null,emptyParameters);
  Table table=new Table(tblName,defaultDbName,tblOwner,startTime,startTime,0,sd,null,emptyParameters,null,null,null);
  msClient.createTable(table);
  FireEventRequestData data=new FireEventRequestData();
  InsertEventRequestData insertData=new InsertEventRequestData();
  data.setInsertData(insertData);
  insertData.addToFilesAdded(fileAdded);
  insertData.addToFilesAddedChecksum(checksumAdded);
  FireEventRequest rqst=new FireEventRequest(true,data);
  rqst.setDbName(defaultDbName);
  rqst.setTableName(tblName);
  msClient.fireListenerEvent(rqst);
  NotificationEventResponse rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(2,rsp.getEventsSize());
  NotificationEvent event=rsp.getEvents().get(1);
  assertEquals(firstEventId + 2,event.getEventId());
  assertTrue(event.getEventTime() >= startTime);
  assertEquals(EventType.INSERT.toString(),event.getEventType());
  assertEquals(defaultDbName,event.getDbName());
  assertEquals(tblName,event.getTableName());
  verifyInsert(event,defaultDbName,tblName);
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.INSERT,firstEventId + 2);
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.CREATE_TABLE,firstEventId + 1);
}
