@Test public void dropFunction() throws Exception {
  String defaultDbName="default";
  String funcName="dropfunction";
  String funcName2="dropfunction2";
  String ownerName="me";
  String funcClass="o.a.h.h.dropfunction";
  String funcClass2="o.a.h.h.dropfunction2";
  String funcResource="file:/tmp/somewhere";
  String funcResource2="file:/tmp/somewhere2";
  Function func=new Function(funcName,defaultDbName,funcClass,ownerName,PrincipalType.USER,startTime,FunctionType.JAVA,Arrays.asList(new ResourceUri(ResourceType.JAR,funcResource)));
  msClient.createFunction(func);
  msClient.dropFunction(defaultDbName,funcName);
  NotificationEventResponse rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(2,rsp.getEventsSize());
  NotificationEvent event=rsp.getEvents().get(1);
  assertEquals(firstEventId + 2,event.getEventId());
  assertTrue(event.getEventTime() >= startTime);
  assertEquals(EventType.DROP_FUNCTION.toString(),event.getEventType());
  assertEquals(defaultDbName,event.getDbName());
  DropFunctionMessage dropFuncMsg=md.getDropFunctionMessage(event.getMessage());
  assertEquals(defaultDbName,dropFuncMsg.getDB());
  assertEquals(funcName,dropFuncMsg.getFunctionName());
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.DROP_FUNCTION,firstEventId + 2);
  MockMetaStoreEventListener.popAndVerifyLastEventId(EventType.CREATE_FUNCTION,firstEventId + 1);
  func=new Function(funcName2,defaultDbName,funcClass2,ownerName,PrincipalType.USER,startTime,FunctionType.JAVA,Arrays.asList(new ResourceUri(ResourceType.JAR,funcResource2)));
  msClient.createFunction(func);
  DummyRawStoreFailEvent.setEventSucceed(false);
  try {
    msClient.dropFunction(defaultDbName,funcName2);
    fail("Error: drop function should've failed");
  }
 catch (  Exception ex) {
  }
  rsp=msClient.getNextNotification(firstEventId,0,null);
  assertEquals(3,rsp.getEventsSize());
}
