/** 
 * Tests that DataNucleus' NucleusContext.classLoaderResolverMap clears cached class objects (& hence doesn't leak classloaders) on closing any session
 * @throws Exception
 */
@Test public void testAddJarDataNucleusUnCaching() throws Exception {
  Path jarFilePath=getHiveContribJarPath();
  Connection conn=getConnection(miniHS2.getJdbcURL(testDbName),System.getProperty("user.name"),"password");
  Statement stmt=conn.createStatement();
  int mapSizeAfterClose;
  stmt.execute("ADD JAR " + jarFilePath.toString());
  stmt.execute("CREATE TEMPORARY FUNCTION add_func AS '" + testUdfClassName + "'");
  ResultSet res=stmt.executeQuery("DESCRIBE FUNCTION add_func");
  checkForNotExist(res);
  stmt.execute("SELECT add_func(int_col, 1) from " + tableName + " limit 1");
  conn.close();
  mapSizeAfterClose=getNucleusClassLoaderResolverMapSize();
  System.out.println("classLoaderResolverMap size after connection close: " + mapSizeAfterClose);
  Assert.assertTrue("Failed; NucleusContext classLoaderResolverMap size: " + mapSizeAfterClose,mapSizeAfterClose == 0);
}
