@Test(timeout=10000) public void test() throws InterruptedException {
  Element e;
  EvictingPriorityBlockingQueue<Element> queue=new EvictingPriorityBlockingQueue<>(new ElementComparator(),3);
  Element[] elements=new Element[10];
  for (int i=0; i < elements.length; i++) {
    elements[i]=new Element(i);
  }
  assertNull(queue.offer(elements[0],0));
  assertNull(queue.offer(elements[1],0));
  assertNull(queue.offer(elements[2],0));
  e=queue.offer(elements[3],0);
  assertEquals(elements[0],e);
  e=queue.offer(elements[0],0);
  assertEquals(elements[0],e);
  e=queue.offer(elements[4],0);
  assertEquals(elements[1],e);
  e=queue.offer(elements[1],1);
  assertNull(e);
  assertEquals(4,queue.size());
  e=queue.take();
  assertEquals(elements[4],e);
  e=queue.offer(elements[4],1);
  assertNull(e);
  e=queue.offer(elements[0],1);
  assertEquals(elements[0],e);
  assertTrue(reinsertIfExists(queue,elements[2]));
  assertEquals(4,queue.size());
  assertFalse(reinsertIfExists(queue,elements[5]));
  assertEquals(4,queue.size());
  e=queue.offer(elements[5],1);
  assertEquals(elements[1],e);
  assertNull(queue.offer(elements[1],2));
  assertNull(queue.offer(elements[6],5));
  assertNull(queue.offer(elements[7],5));
  assertEquals(7,queue.size());
}
