@Test public void testAuthenticateWhenUserMembershipKeyFilter2x2PatternsPasses() throws NamingException, AuthenticationException, IOException {
  conf.setVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_GROUPFILTER,"HIVE-USERS1,HIVE-USERS2");
  conf.setVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_GROUPDNPATTERN,"cn=%s,ou=Groups,ou=branch1,dc=mycorp,dc=com");
  conf.setVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_USERDNPATTERN,"cn=%s,ou=Userss,ou=branch1,dc=mycorp,dc=com");
  conf.setVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_USERMEMBERSHIP_KEY,"memberOf");
  when(search.findUserDn("user1")).thenReturn("cn=user1,ou=PowerUsers,dc=mycorp,dc=com");
  when(search.findGroupDn("HIVE-USERS1")).thenReturn("cn=HIVE-USERS1,ou=Groups,ou=branch1,dc=mycorp,dc=com");
  when(search.findGroupDn("HIVE-USERS2")).thenReturn("cn=HIVE-USERS2,ou=Groups,ou=branch1,dc=mycorp,dc=com");
  when(search.isUserMemberOfGroup("user1","cn=HIVE-USERS1,ou=Groups,ou=branch1,dc=mycorp,dc=com")).thenThrow(NamingException.class);
  when(search.isUserMemberOfGroup("user1","cn=HIVE-USERS2,ou=Groups,ou=branch1,dc=mycorp,dc=com")).thenReturn(true);
  auth=new LdapAuthenticationProviderImpl(conf,factory);
  auth.Authenticate("user1","Blah");
  verify(factory,times(1)).getInstance(isA(HiveConf.class),anyString(),eq("Blah"));
  verify(search,times(2)).findGroupDn(anyString());
  verify(search,times(2)).isUserMemberOfGroup(anyString(),anyString());
  verify(search,atLeastOnce()).close();
}
