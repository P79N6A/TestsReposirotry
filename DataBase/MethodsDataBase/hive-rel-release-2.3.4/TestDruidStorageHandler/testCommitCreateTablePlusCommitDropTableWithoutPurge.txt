@Test public void testCommitCreateTablePlusCommitDropTableWithoutPurge() throws MetaException, IOException {
  DruidStorageHandler druidStorageHandler=new DruidStorageHandler(derbyConnectorRule.getConnector(),new SQLMetadataStorageUpdaterJobHandler(derbyConnectorRule.getConnector()),derbyConnectorRule.metadataTablesConfigSupplier().get(),null);
  druidStorageHandler.preCreateTable(tableMock);
  Configuration config=new Configuration();
  config.set(String.valueOf(HiveConf.ConfVars.HIVEQUERYID),UUID.randomUUID().toString());
  config.set(String.valueOf(HiveConf.ConfVars.DRUID_WORKING_DIR),tableWorkingPath);
  druidStorageHandler.setConf(config);
  LocalFileSystem localFileSystem=FileSystem.getLocal(config);
  Path taskDirPath=new Path(tableWorkingPath,druidStorageHandler.makeStagingName());
  Path descriptorPath=DruidStorageHandlerUtils.makeSegmentDescriptorOutputPath(dataSegment,new Path(taskDirPath,DruidStorageHandler.SEGMENTS_DESCRIPTOR_DIR_NAME));
  DruidStorageHandlerUtils.writeSegmentDescriptor(localFileSystem,dataSegment,descriptorPath);
  druidStorageHandler.commitCreateTable(tableMock);
  Assert.assertArrayEquals(Lists.newArrayList(DATA_SOURCE_NAME).toArray(),Lists.newArrayList(DruidStorageHandlerUtils.getAllDataSourceNames(derbyConnectorRule.getConnector(),derbyConnectorRule.metadataTablesConfigSupplier().get())).toArray());
  druidStorageHandler.commitDropTable(tableMock,false);
  Assert.assertArrayEquals(Lists.newArrayList().toArray(),Lists.newArrayList(DruidStorageHandlerUtils.getAllDataSourceNames(derbyConnectorRule.getConnector(),derbyConnectorRule.metadataTablesConfigSupplier().get())).toArray());
}
