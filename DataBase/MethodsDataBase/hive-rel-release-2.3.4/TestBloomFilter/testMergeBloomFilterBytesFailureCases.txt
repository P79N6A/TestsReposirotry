@Test public void testMergeBloomFilterBytesFailureCases() throws Exception {
  BloomFilter bf1=new BloomFilter(1000);
  BloomFilter bf2=new BloomFilter(200);
  ArrayList<Long> bits=new ArrayList<Long>();
  for (int idx=0; idx < bf1.getBitSet().length; ++idx) {
    bits.add(0L);
  }
  BloomFilter bf3=new BloomFilter(bits,bf1.getBitSize(),bf1.getNumHashFunctions() + 1);
  ByteArrayOutputStream bytesOut=new ByteArrayOutputStream();
  BloomFilter.serialize(bytesOut,bf1);
  byte[] bf1Bytes=bytesOut.toByteArray();
  bytesOut.reset();
  BloomFilter.serialize(bytesOut,bf2);
  byte[] bf2Bytes=bytesOut.toByteArray();
  bytesOut.reset();
  BloomFilter.serialize(bytesOut,bf3);
  byte[] bf3Bytes=bytesOut.toByteArray();
  try {
    BloomFilter.mergeBloomFilterBytes(bf1Bytes,0,bf1Bytes.length,bf2Bytes,0,bf2Bytes.length);
    Assert.fail("Expected exception not encountered");
  }
 catch (  IllegalArgumentException err) {
  }
  try {
    BloomFilter.mergeBloomFilterBytes(bf1Bytes,0,bf1Bytes.length,bf3Bytes,0,bf3Bytes.length);
    Assert.fail("Expected exception not encountered");
  }
 catch (  IllegalArgumentException err) {
  }
}
