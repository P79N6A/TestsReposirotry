@Test public void testCreateFromBigIntegerRounding(){
  BigInteger bigInt;
  HiveDecimalV1 oldDec;
  HiveDecimal dec;
  bigInt=new BigInteger("178613588865784752580332404014434337809799306448796128931113691624");
  Assert.assertEquals("178613588865784752580332404014434337809799306448796128931113691624",bigInt.toString());
  dec=HiveDecimal.create(bigInt,29);
  Assert.assertEquals("1786135888657847525803324040144343378.1",dec.toString());
  bigInt=new BigInteger("8090000000000000000000000000000000000000123456");
  Assert.assertEquals("8090000000000000000000000000000000000000123456",bigInt.toString());
  oldDec=HiveDecimalV1.create(bigInt,45);
  Assert.assertEquals("8.09",oldDec.toString());
  dec=HiveDecimal.create(bigInt,45);
  Assert.assertEquals("8.09",dec.toString());
  bigInt=new BigInteger("9999999999999999999999999999999999999949999");
  Assert.assertEquals("9999999999999999999999999999999999999949999",bigInt.toString());
  oldDec=HiveDecimalV1.create(bigInt,35);
  Assert.assertEquals("99999999.999999999999999999999999999999",oldDec.toString());
  dec=HiveDecimal.create(bigInt,35);
  Assert.assertEquals("99999999.999999999999999999999999999999",dec.toString());
  bigInt=new BigInteger("9999999999999999999999999999999999999979999");
  Assert.assertEquals("9999999999999999999999999999999999999979999",bigInt.toString());
  oldDec=HiveDecimalV1.create(bigInt,35);
  Assert.assertEquals("100000000",oldDec.toString());
  dec=HiveDecimal.create(bigInt,35);
  Assert.assertEquals("100000000",dec.toString());
}
