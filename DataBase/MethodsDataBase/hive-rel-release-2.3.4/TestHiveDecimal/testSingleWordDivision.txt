@Test public void testSingleWordDivision(){
  HiveDecimalV1 oldDec1;
  HiveDecimalV1 oldDec2;
  HiveDecimalV1 oldResultDec;
  HiveDecimal dec1;
  HiveDecimal dec2;
  HiveDecimal resultDec;
  oldDec1=HiveDecimalV1.create("839293");
  oldDec2=HiveDecimalV1.create("8");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("104911.625",oldResultDec.toString());
  dec1=HiveDecimal.create("839293");
  dec2=HiveDecimal.create("8");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("104911.625",resultDec.toString());
  oldDec1=HiveDecimalV1.create("1");
  oldDec2=HiveDecimalV1.create("3");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("0.33333333333333333333333333333333333333",oldResultDec.toString());
  dec1=HiveDecimal.create("1");
  dec2=HiveDecimal.create("3");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("0.33333333333333333333333333333333333333",resultDec.toString());
  oldDec1=HiveDecimalV1.create("1");
  oldDec2=HiveDecimalV1.create("9");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("0.11111111111111111111111111111111111111",oldResultDec.toString());
  dec1=HiveDecimal.create("1");
  dec2=HiveDecimal.create("9");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("0.11111111111111111111111111111111111111",resultDec.toString());
  oldDec1=HiveDecimalV1.create("22");
  oldDec2=HiveDecimalV1.create("7");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("3.1428571428571428571428571428571428571",oldResultDec.toString());
  dec1=HiveDecimal.create("22");
  dec2=HiveDecimal.create("7");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("3.1428571428571428571428571428571428571",resultDec.toString());
  oldDec1=HiveDecimalV1.create("1");
  oldDec2=HiveDecimalV1.create("81");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("0.01234567901234567901234567901234567901",oldResultDec.toString());
  dec1=HiveDecimal.create("1");
  dec2=HiveDecimal.create("81");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("0.01234567901234567901234567901234567901",resultDec.toString());
  oldDec1=HiveDecimalV1.create("425");
  oldDec2=HiveDecimalV1.create("1000000000000000");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("0.000000000000425",oldResultDec.toString());
  dec1=HiveDecimal.create("425");
  dec2=HiveDecimal.create("1000000000000000");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("0.000000000000425",resultDec.toString());
  oldDec1=HiveDecimalV1.create("0.000000000088");
  oldDec2=HiveDecimalV1.create("1000000000000000");
  oldResultDec=oldDec1.divide(oldDec2);
  Assert.assertEquals("0.000000000000000000000000088",oldResultDec.toString());
  Assert.assertEquals(27,oldResultDec.scale());
  dec1=HiveDecimal.create("0.000000000088");
  dec2=HiveDecimal.create("1000000000000000");
  resultDec=dec1.divide(dec2);
  Assert.assertEquals("0.000000000000000000000000088",resultDec.toString());
  Assert.assertEquals(27,resultDec.scale());
}
