/** 
 * This tests the template for Decimal Column-Column comparison filters, called FilterDecimalColumnCompareColumn.txt. Only equal is tested for multiple cases because the logic is the same for <, >, <=, >=, == and !=.
 */
@Test public void testFilterDecimalColumnEqualDecimalColumn(){
  VectorizedRowBatch b=getVectorizedRowBatch2DecimalCol();
  VectorExpression expr=new FilterDecimalColEqualDecimalColumn(0,1);
  expr.evaluate(b);
  assertTrue(b.selectedInUse);
  assertEquals(1,b.selected[0]);
  assertEquals(1,b.size);
  b=getVectorizedRowBatch2DecimalCol();
  b.cols[0].noNulls=false;
  b.cols[0].isNull[1]=true;
  expr.evaluate(b);
  assertEquals(0,b.size);
  b=getVectorizedRowBatch2DecimalCol();
  b.cols[0].isRepeating=true;
  expr.evaluate(b);
  assertEquals(0,b.size);
  b=getVectorizedRowBatch2DecimalCol();
  b.cols[0].isRepeating=true;
  b.cols[0].noNulls=false;
  b.cols[0].isNull[0]=true;
  expr.evaluate(b);
  assertEquals(0,b.size);
  b=getVectorizedRowBatch2DecimalCol();
  b.cols[0].noNulls=false;
  b.cols[0].isNull[0]=true;
  b.cols[1].noNulls=false;
  b.cols[1].isNull[2]=true;
  expr.evaluate(b);
  assertEquals(1,b.size);
  b=getVectorizedRowBatch2DecimalCol();
  b.cols[0].isRepeating=true;
  b.cols[1].isRepeating=true;
  expr.evaluate(b);
  assertEquals(0,b.size);
}
