@Test public void testClearer() throws Exception {
  FileSystem fs=warehouse.getWhRoot().getFileSystem(hiveConf);
  long now=System.currentTimeMillis();
  Path dirDb=new Path(warehouse.getWhRoot(),"db3");
  fs.mkdirs(dirDb);
  Path dirTbl1=new Path(dirDb,"tbl1");
  fs.mkdirs(dirTbl1);
  Path part11=new Path(dirTbl1,"part1");
  createFile(part11,"testClearer11");
  String fileChksum11=ReplChangeManager.getChksumString(part11,fs);
  Path part12=new Path(dirTbl1,"part2");
  createFile(part12,"testClearer12");
  String fileChksum12=ReplChangeManager.getChksumString(part12,fs);
  Path dirTbl2=new Path(dirDb,"tbl2");
  fs.mkdirs(dirTbl2);
  Path part21=new Path(dirTbl2,"part1");
  createFile(part21,"testClearer21");
  String fileChksum21=ReplChangeManager.getChksumString(part21,fs);
  Path part22=new Path(dirTbl2,"part2");
  createFile(part22,"testClearer22");
  String fileChksum22=ReplChangeManager.getChksumString(part22,fs);
  Path dirTbl3=new Path(dirDb,"tbl3");
  fs.mkdirs(dirTbl3);
  Path part31=new Path(dirTbl3,"part1");
  createFile(part31,"testClearer31");
  String fileChksum31=ReplChangeManager.getChksumString(part31,fs);
  Path part32=new Path(dirTbl3,"part2");
  createFile(part32,"testClearer32");
  String fileChksum32=ReplChangeManager.getChksumString(part32,fs);
  ReplChangeManager.getInstance(hiveConf).recycle(dirTbl1,false);
  ReplChangeManager.getInstance(hiveConf).recycle(dirTbl2,false);
  ReplChangeManager.getInstance(hiveConf).recycle(dirTbl3,true);
  Assert.assertTrue(fs.exists(ReplChangeManager.getCMPath(part11,hiveConf,fileChksum11)));
  Assert.assertTrue(fs.exists(ReplChangeManager.getCMPath(part12,hiveConf,fileChksum12)));
  Assert.assertTrue(fs.exists(ReplChangeManager.getCMPath(part21,hiveConf,fileChksum21)));
  Assert.assertTrue(fs.exists(ReplChangeManager.getCMPath(part22,hiveConf,fileChksum22)));
  Assert.assertTrue(fs.exists(ReplChangeManager.getCMPath(part31,hiveConf,fileChksum31)));
  Assert.assertTrue(fs.exists(ReplChangeManager.getCMPath(part32,hiveConf,fileChksum32)));
  fs.setTimes(ReplChangeManager.getCMPath(part11,hiveConf,fileChksum11),now - 86400 * 1000 * 2,now - 86400 * 1000 * 2);
  fs.setTimes(ReplChangeManager.getCMPath(part21,hiveConf,fileChksum21),now - 86400 * 1000 * 2,now - 86400 * 1000 * 2);
  fs.setTimes(ReplChangeManager.getCMPath(part31,hiveConf,fileChksum31),now - 86400 * 1000 * 2,now - 86400 * 1000 * 2);
  fs.setTimes(ReplChangeManager.getCMPath(part32,hiveConf,fileChksum32),now - 86400 * 1000 * 2,now - 86400 * 1000 * 2);
  ReplChangeManager.scheduleCMClearer(hiveConf);
  long start=System.currentTimeMillis();
  long end;
  boolean cleared=false;
  do {
    Thread.sleep(200);
    end=System.currentTimeMillis();
    if (end - start > 5000) {
      Assert.fail("timeout, cmroot has not been cleared");
    }
    if (!fs.exists(ReplChangeManager.getCMPath(part11,hiveConf,fileChksum11)) && fs.exists(ReplChangeManager.getCMPath(part12,hiveConf,fileChksum12)) && !fs.exists(ReplChangeManager.getCMPath(part21,hiveConf,fileChksum21))&& fs.exists(ReplChangeManager.getCMPath(part22,hiveConf,fileChksum22))&& !fs.exists(ReplChangeManager.getCMPath(part31,hiveConf,fileChksum31))&& !fs.exists(ReplChangeManager.getCMPath(part31,hiveConf,fileChksum31))) {
      cleared=true;
    }
  }
 while (!cleared);
}
