@Test public void testRecycleNonPartTable() throws Exception {
  String dbName="db2";
  client.dropDatabase(dbName,true,true);
  Database db=new Database();
  db.setName(dbName);
  client.createDatabase(db);
  String tblName="t1";
  List<FieldSchema> columns=new ArrayList<FieldSchema>();
  columns.add(new FieldSchema("foo","string",""));
  columns.add(new FieldSchema("bar","string",""));
  SerDeInfo serdeInfo=new SerDeInfo("LBCSerDe",LazyBinaryColumnarSerDe.class.getCanonicalName(),new HashMap<String,String>());
  StorageDescriptor sd=new StorageDescriptor(columns,null,"org.apache.hadoop.hive.ql.io.orc.OrcInputFormat","org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat",false,0,serdeInfo,null,null,null);
  Map<String,String> tableParameters=new HashMap<String,String>();
  Table tbl=new Table(tblName,dbName,"",0,0,0,sd,null,tableParameters,"","","");
  client.createTable(tbl);
  Path filePath1=new Path(warehouse.getDefaultTablePath(db,tblName),"part1");
  createFile(filePath1,"f1");
  String fileChksum1=ReplChangeManager.getChksumString(filePath1,fs);
  Path filePath2=new Path(warehouse.getDefaultTablePath(db,tblName),"part2");
  createFile(filePath2,"f2");
  String fileChksum2=ReplChangeManager.getChksumString(filePath2,fs);
  Path filePath3=new Path(warehouse.getDefaultTablePath(db,tblName),"part3");
  createFile(filePath3,"f3");
  String fileChksum3=ReplChangeManager.getChksumString(filePath3,fs);
  Assert.assertTrue(filePath1.getFileSystem(hiveConf).exists(filePath1));
  Assert.assertTrue(filePath2.getFileSystem(hiveConf).exists(filePath2));
  Assert.assertTrue(filePath3.getFileSystem(hiveConf).exists(filePath3));
  ReplChangeManager cm=ReplChangeManager.getInstance(hiveConf);
  cm.recycle(filePath1,false);
  Assert.assertFalse(filePath1.getFileSystem(hiveConf).exists(filePath1));
  Path cmPath1=ReplChangeManager.getCMPath(filePath1,hiveConf,fileChksum1);
  Assert.assertTrue(cmPath1.getFileSystem(hiveConf).exists(cmPath1));
  client.dropTable(dbName,tblName);
  Path cmPath2=ReplChangeManager.getCMPath(filePath2,hiveConf,fileChksum2);
  Assert.assertFalse(filePath2.getFileSystem(hiveConf).exists(filePath2));
  Assert.assertTrue(cmPath2.getFileSystem(hiveConf).exists(cmPath2));
  Path cmPath3=ReplChangeManager.getCMPath(filePath3,hiveConf,fileChksum3);
  Assert.assertFalse(filePath3.getFileSystem(hiveConf).exists(filePath3));
  Assert.assertTrue(cmPath3.getFileSystem(hiveConf).exists(cmPath3));
  client.dropDatabase(dbName,true,true);
}
