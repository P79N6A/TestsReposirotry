/** 
 * Using nested partitions and thus DummyPartition
 * @throws Exception
 */
@Test public void testDynamicPartitionsMerge2() throws Exception {
  d.destroy();
  hiveConf.setVar(HiveConf.ConfVars.DYNAMICPARTITIONINGMODE,"nonstrict");
  int[][] targetVals={{1,1,1},{2,2,2},{3,3,1},{4,4,2}};
  runStatementOnDriver("insert into " + Table.ACIDNESTEDPART + " partition(p=1,q) "+ makeValuesClause(targetVals));
  List<String> r1=runStatementOnDriver("select count(*) from " + Table.ACIDNESTEDPART);
  Assert.assertEquals("4",r1.get(0));
  int[][] sourceVals={{2,15},{4,44},{5,5},{11,11}};
  runStatementOnDriver("insert into " + Table.NONACIDORCTBL + " "+ makeValuesClause(sourceVals));
  runStatementOnDriver("merge into " + Table.ACIDNESTEDPART + " using "+ Table.NONACIDORCTBL+ " as s ON "+ Table.ACIDNESTEDPART+ ".a = s.a "+ "when matched then update set b = s.b "+ "when not matched then insert values(s.a, s.b, 3,4)");
  r1=runStatementOnDriver("select p,q,a,b from " + Table.ACIDNESTEDPART + " order by p,q, a, b");
  Assert.assertEquals(stringifyValues(new int[][]{{1,1,1,1},{1,1,3,3},{1,2,2,15},{1,2,4,44},{3,4,5,5},{3,4,11,11}}),r1);
}
