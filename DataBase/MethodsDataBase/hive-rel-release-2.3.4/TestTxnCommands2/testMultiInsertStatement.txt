/** 
 * Test that ACID works with multi-insert statement
 */
@Test public void testMultiInsertStatement() throws Exception {
  int[][] sourceValsOdd={{5,5},{11,11}};
  int[][] sourceValsEven={{2,2}};
  runStatementOnDriver("insert into " + Table.NONACIDPART2 + " PARTITION(p2='odd') "+ makeValuesClause(sourceValsOdd));
  runStatementOnDriver("insert into " + Table.NONACIDPART2 + " PARTITION(p2='even') "+ makeValuesClause(sourceValsEven));
  int[][] targetValsOdd={{5,6},{7,8}};
  int[][] targetValsEven={{2,1},{4,3}};
  runStatementOnDriver("insert into " + Table.ACIDTBLPART + " PARTITION(p='odd') "+ makeValuesClause(targetValsOdd));
  runStatementOnDriver("insert into " + Table.ACIDTBLPART + " PARTITION(p='even') "+ makeValuesClause(targetValsEven));
  List<String> r=runStatementOnDriver("select a,b from " + Table.ACIDTBLPART + " order by a,b");
  int[][] targetVals={{2,1},{4,3},{5,6},{7,8}};
  Assert.assertEquals(stringifyValues(targetVals),r);
  String s="from " + Table.ACIDTBLPART + "  target right outer join "+ Table.NONACIDPART2+ " source on target.a = source.a2 "+ " INSERT INTO TABLE "+ Table.ACIDTBLPART+ " PARTITION(p='even') select source.a2, source.b2 where source.a2=target.a "+ " insert into table "+ Table.ACIDTBLPART+ " PARTITION(p='odd') select source.a2,source.b2 where target.a is null";
  runStatementOnDriver(s);
  r=runStatementOnDriver("select a,b from " + Table.ACIDTBLPART + " where p='even' order by a,b");
  int[][] rExpected={{2,1},{2,2},{4,3},{5,5}};
  Assert.assertEquals(stringifyValues(rExpected),r);
  r=runStatementOnDriver("select a,b from " + Table.ACIDTBLPART + " where p='odd' order by a,b");
  int[][] rExpected2={{5,6},{7,8},{11,11}};
  Assert.assertEquals(stringifyValues(rExpected2),r);
}
