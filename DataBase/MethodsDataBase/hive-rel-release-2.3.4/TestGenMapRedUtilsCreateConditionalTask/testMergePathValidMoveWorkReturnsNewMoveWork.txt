@Test public void testMergePathValidMoveWorkReturnsNewMoveWork(){
  final Path condInputPath=new Path("s3a://bucket/scratch/-ext-10000");
  final Path condOutputPath=new Path("s3a://bucket/scratch/-ext-10002");
  final Path targetMoveWorkPath=new Path("s3a://bucket/scratch/-ext-10003");
  final MoveWork mockWork=mock(MoveWork.class);
  MoveWork newWork;
  when(mockWork.getLoadFileWork()).thenReturn(new LoadFileDesc(condOutputPath,targetMoveWorkPath,false,"",""));
  newWork=GenMapRedUtils.mergeMovePaths(condInputPath,mockWork);
  assertNotNull(newWork);
  assertNotEquals(newWork,mockWork);
  assertEquals(condInputPath,newWork.getLoadFileWork().getSourcePath());
  assertEquals(targetMoveWorkPath,newWork.getLoadFileWork().getTargetDir());
  TableDesc tableDesc=new TableDesc();
  reset(mockWork);
  when(mockWork.getLoadTableWork()).thenReturn(new LoadTableDesc(condOutputPath,tableDesc,null));
  newWork=GenMapRedUtils.mergeMovePaths(condInputPath,mockWork);
  assertNotNull(newWork);
  assertNotEquals(newWork,mockWork);
  assertEquals(condInputPath,newWork.getLoadTableWork().getSourcePath());
  assertTrue(newWork.getLoadTableWork().getTable().equals(tableDesc));
}
