@Test public void importTablesWithConstraints() throws Exception {
  RawStore rdbms;
  rdbms=new ObjectStore();
  rdbms.setConf(conf);
  String[] dbNames=new String[]{"onetabwcdb1","onetabwcdb2"};
  int now=(int)System.currentTimeMillis() / 1000;
  setupObjectStore(rdbms,dbNames,now,true);
  store.createDatabase(new Database(dbNames[0],"no description","file:/tmp",emptyParameters));
  HBaseImport importer=new HBaseImport("-d",dbNames[0]);
  importer.setConnections(rdbms,store);
  importer.run();
  Database db=store.getDatabase(dbNames[0]);
  Assert.assertNotNull(db);
  Table table=store.getTable(db.getName(),tableNames[1]);
  Assert.assertNotNull(table);
  List<SQLPrimaryKey> pk=store.getPrimaryKeys(dbNames[0],tableNames[1]);
  Assert.assertNotNull(pk);
  Assert.assertEquals(1,pk.size());
  Assert.assertEquals(dbNames[0],pk.get(0).getTable_db());
  Assert.assertEquals(tableNames[1],pk.get(0).getTable_name());
  Assert.assertEquals(0,pk.get(0).getKey_seq());
  Assert.assertEquals("col1",pk.get(0).getColumn_name());
  Assert.assertEquals(dbNames[0] + "_" + pkNames[1],pk.get(0).getPk_name());
  Assert.assertTrue(pk.get(0).isEnable_cstr());
  Assert.assertFalse(pk.get(0).isValidate_cstr());
  Assert.assertTrue(pk.get(0).isRely_cstr());
  List<SQLForeignKey> fk=store.getForeignKeys(dbNames[0],tableNames[0],dbNames[0],tableNames[1]);
  Assert.assertNotNull(fk);
  Assert.assertEquals(1,fk.size());
  Assert.assertEquals(dbNames[0],fk.get(0).getPktable_db());
  Assert.assertEquals(tableNames[0],fk.get(0).getPktable_name());
  Assert.assertEquals("col1",fk.get(0).getPkcolumn_name());
  Assert.assertEquals(dbNames[0],fk.get(0).getFktable_db());
  Assert.assertEquals(tableNames[1],fk.get(0).getFktable_name());
  Assert.assertEquals("col1",fk.get(0).getFkcolumn_name());
  Assert.assertEquals(0,fk.get(0).getKey_seq());
  Assert.assertEquals(1,fk.get(0).getUpdate_rule());
  Assert.assertEquals(2,fk.get(0).getDelete_rule());
  Assert.assertEquals(dbNames[0] + "_" + fkNames[1],fk.get(0).getFk_name());
  Assert.assertTrue(pk.get(0).isEnable_cstr());
  Assert.assertFalse(pk.get(0).isValidate_cstr());
  Assert.assertTrue(pk.get(0).isRely_cstr());
}
