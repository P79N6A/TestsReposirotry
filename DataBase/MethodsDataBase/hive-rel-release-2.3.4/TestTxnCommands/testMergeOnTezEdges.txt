@Test public void testMergeOnTezEdges() throws Exception {
  String query="merge into " + Table.ACIDTBL + " as t using "+ Table.NONACIDORCTBL+ " s ON t.a = s.a "+ "WHEN MATCHED AND s.a > 8 THEN DELETE "+ "WHEN MATCHED THEN UPDATE SET b = 7 "+ "WHEN NOT MATCHED THEN INSERT VALUES(s.a, s.b) ";
  d.destroy();
  HiveConf hc=new HiveConf(hiveConf);
  hc.setVar(HiveConf.ConfVars.HIVE_EXECUTION_ENGINE,"tez");
  hc.setBoolVar(HiveConf.ConfVars.HIVE_EXPLAIN_USER,false);
  d=new Driver(hc);
  d.setMaxRows(10000);
  List<String> explain=runStatementOnDriver("explain " + query);
  StringBuilder sb=new StringBuilder();
  for (  String s : explain) {
    sb.append(s).append('\n');
  }
  LOG.info("Explain1: " + sb);
  for (int i=0; i < explain.size(); i++) {
    if (explain.get(i).contains("Edges:")) {
      Assert.assertTrue("At i+1=" + (i + 1) + explain.get(i + 1),explain.get(i + 1).contains("Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)"));
      Assert.assertTrue("At i+1=" + (i + 2) + explain.get(i + 2),explain.get(i + 2).contains("Reducer 3 <- Reducer 2 (SIMPLE_EDGE)"));
      Assert.assertTrue("At i+1=" + (i + 3) + explain.get(i + 3),explain.get(i + 3).contains("Reducer 4 <- Reducer 2 (SIMPLE_EDGE)"));
      Assert.assertTrue("At i+1=" + (i + 4) + explain.get(i + 4),explain.get(i + 4).contains("Reducer 5 <- Reducer 2 (SIMPLE_EDGE)"));
      Assert.assertTrue("At i+1=" + (i + 5) + explain.get(i + 5),explain.get(i + 5).contains("Reducer 6 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)"));
      break;
    }
  }
}
