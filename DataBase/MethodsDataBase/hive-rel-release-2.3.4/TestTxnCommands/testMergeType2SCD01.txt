/** 
 * https://www.linkedin.com/pulse/how-load-slowly-changing-dimension-type-2-using-oracle-padhy also test QuotedIdentifier inside source expression {@link TestTxnCommands#testQuotedIdentifier()}{@link TestTxnCommands#testQuotedIdentifier2()}
 */
@Test public void testMergeType2SCD01() throws Exception {
  runStatementOnDriver("drop table if exists target");
  runStatementOnDriver("drop table if exists source");
  runStatementOnDriver("drop table if exists splitTable");
  runStatementOnDriver("create table splitTable(op int)");
  runStatementOnDriver("insert into splitTable values (0),(1)");
  runStatementOnDriver("create table source (key int, data int)");
  runStatementOnDriver("create table target (key int, data int, cur int) clustered by (key) into " + BUCKET_COUNT + " buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  int[][] targetVals={{1,5,1},{2,6,1},{1,18,0}};
  runStatementOnDriver("insert into target " + makeValuesClause(targetVals));
  int[][] sourceVals={{1,7},{3,8}};
  runStatementOnDriver("insert into source " + makeValuesClause(sourceVals));
  String curMatch="select s.*, case when t.cur is null then 0 else 1 end m from source s left outer join (select * from target where target.cur=1) t on s.key=t.key";
  String teeCurMatch="select curMatch.*, case when splitTable.op is null or splitTable.op = 0 then 0 else 1 end `o/p\\n` from (" + curMatch + ") curMatch left outer join splitTable on curMatch.m=1";
  if (false) {
    List<String> r1=runStatementOnDriver(curMatch);
    List<String> r2=runStatementOnDriver(teeCurMatch);
  }
  String stmt="merge into target t using (" + teeCurMatch + ") s on t.key=s.key and t.cur=1 and s.`o/p\\n`=1 "+ "when matched then update set cur=0 "+ "when not matched then insert values(s.key,s.data,1)";
  runStatementOnDriver(stmt);
  int[][] resultVals={{1,5,0},{1,7,1},{1,18,0},{2,6,1},{3,8,1}};
  List<String> r=runStatementOnDriver("select * from target order by key,data,cur");
  Assert.assertEquals(stringifyValues(resultVals),r);
}
