/** 
 * Check that calling  {@link Utilities#getMaxExecutorsForInputListing(JobConf,int)}returns the maximum number of executors to use based on the number of input locations.
 */
@Test public void testGetMaxExecutorsForInputListing(){
  Configuration conf=new Configuration();
  final int ZERO_EXECUTORS=0;
  final int ONE_EXECUTOR=1;
  final int TWO_EXECUTORS=2;
  final int ZERO_THREADS=0;
  final int ONE_THREAD=1;
  final int TWO_THREADS=2;
  final int ZERO_LOCATIONS=0;
  final int ONE_LOCATION=1;
  final int TWO_LOCATIONS=2;
  final int THREE_LOCATIONS=3;
  conf.setInt(HiveConf.ConfVars.HIVE_EXEC_INPUT_LISTING_MAX_THREADS.varname,ONE_THREAD);
  assertEquals(ZERO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,ZERO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,ONE_LOCATION));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,TWO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,THREE_LOCATIONS));
  conf.setInt(HiveConf.ConfVars.HIVE_EXEC_INPUT_LISTING_MAX_THREADS.varname,TWO_THREADS);
  assertEquals(ZERO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,ZERO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,ONE_LOCATION));
  assertEquals(TWO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,TWO_LOCATIONS));
  assertEquals(TWO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,THREE_LOCATIONS));
  conf.setInt(HiveConf.ConfVars.HIVE_EXEC_INPUT_LISTING_MAX_THREADS.varname,ZERO_THREADS);
  conf.setInt(DEPRECATED_MAPRED_DFSCLIENT_PARALLELISM_MAX,ZERO_THREADS);
  assertEquals(ZERO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,ZERO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,ONE_LOCATION));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,TWO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,THREE_LOCATIONS));
  conf.setInt(HiveConf.ConfVars.HIVE_EXEC_INPUT_LISTING_MAX_THREADS.varname,ZERO_THREADS);
  conf.setInt(DEPRECATED_MAPRED_DFSCLIENT_PARALLELISM_MAX,ONE_THREAD);
  assertEquals(ZERO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,ZERO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,ONE_LOCATION));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,TWO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,THREE_LOCATIONS));
  conf.setInt(HiveConf.ConfVars.HIVE_EXEC_INPUT_LISTING_MAX_THREADS.varname,ZERO_THREADS);
  conf.setInt(DEPRECATED_MAPRED_DFSCLIENT_PARALLELISM_MAX,TWO_THREADS);
  assertEquals(ZERO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,ZERO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,ONE_LOCATION));
  assertEquals(TWO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,TWO_LOCATIONS));
  assertEquals(TWO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,THREE_LOCATIONS));
  conf.setInt(HiveConf.ConfVars.HIVE_EXEC_INPUT_LISTING_MAX_THREADS.varname,TWO_THREADS);
  conf.setInt(DEPRECATED_MAPRED_DFSCLIENT_PARALLELISM_MAX,ONE_THREAD);
  assertEquals(ZERO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,ZERO_LOCATIONS));
  assertEquals(ONE_EXECUTOR,Utilities.getMaxExecutorsForInputListing(conf,ONE_LOCATION));
  assertEquals(TWO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,TWO_LOCATIONS));
  assertEquals(TWO_EXECUTORS,Utilities.getMaxExecutorsForInputListing(conf,THREE_LOCATIONS));
}
