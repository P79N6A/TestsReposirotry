@Test public void testViewsReplication() throws IOException {
  String testName="viewsReplication";
  LOG.info("Testing " + testName);
  String dbName=testName + "_" + tid;
  run("CREATE DATABASE " + dbName);
  run("CREATE TABLE " + dbName + ".unptned(a string) STORED AS TEXTFILE");
  run("CREATE TABLE " + dbName + ".ptned(a string) partitioned by (b int) STORED AS TEXTFILE");
  run("CREATE VIEW " + dbName + ".virtual_view AS SELECT * FROM "+ dbName+ ".unptned");
  String[] unptn_data=new String[]{"eleven","twelve"};
  String[] ptn_data_1=new String[]{"thirteen","fourteen","fifteen"};
  String[] ptn_data_2=new String[]{"fifteen","sixteen","seventeen"};
  String[] empty=new String[]{};
  String unptn_locn=new Path(TEST_PATH,testName + "_unptn").toUri().getPath();
  String ptn_locn_1=new Path(TEST_PATH,testName + "_ptn1").toUri().getPath();
  String ptn_locn_2=new Path(TEST_PATH,testName + "_ptn2").toUri().getPath();
  createTestDataFile(unptn_locn,unptn_data);
  createTestDataFile(ptn_locn_1,ptn_data_1);
  createTestDataFile(ptn_locn_2,ptn_data_2);
  verifySetup("SELECT a from " + dbName + ".ptned",empty);
  verifySetup("SELECT * from " + dbName + ".unptned",empty);
  verifySetup("SELECT * from " + dbName + ".virtual_view",empty);
  run("LOAD DATA LOCAL INPATH '" + unptn_locn + "' OVERWRITE INTO TABLE "+ dbName+ ".unptned");
  verifySetup("SELECT * from " + dbName + ".unptned",unptn_data);
  verifySetup("SELECT * from " + dbName + ".virtual_view",unptn_data);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_1 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned PARTITION(b=1)");
  verifySetup("SELECT a from " + dbName + ".ptned WHERE b=1",ptn_data_1);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_2 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned PARTITION(b=2)");
  verifySetup("SELECT a from " + dbName + ".ptned WHERE b=2",ptn_data_2);
  run("CREATE MATERIALIZED VIEW " + dbName + ".mat_view AS SELECT a FROM "+ dbName+ ".ptned where b=1");
  verifySetup("SELECT a from " + dbName + ".mat_view",ptn_data_1);
  advanceDumpDir();
  run("REPL DUMP " + dbName);
  String replDumpLocn=getResult(0,0);
  String replDumpId=getResult(0,1,true);
  LOG.info("Bootstrap-dump: Dumped to {} with id {}",replDumpLocn,replDumpId);
  run("REPL LOAD " + dbName + "_dupe FROM '"+ replDumpLocn+ "'");
  verifyRun("SELECT * from " + dbName + "_dupe.virtual_view",unptn_data);
  verifyRun("SELECT a from " + dbName + "_dupe.mat_view",ptn_data_1);
  run("CREATE VIEW " + dbName + ".virtual_view2 AS SELECT a FROM "+ dbName+ ".ptned where b=2");
  verifySetup("SELECT a from " + dbName + ".virtual_view2",ptn_data_2);
  run("CREATE VIEW " + dbName + ".virtual_view2 AS SELECT a FROM "+ dbName+ ".ptned where b=2");
  run("CREATE MATERIALIZED VIEW " + dbName + ".mat_view2 AS SELECT * FROM "+ dbName+ ".unptned");
  verifySetup("SELECT * from " + dbName + ".mat_view2",unptn_data);
  advanceDumpDir();
  run("REPL DUMP " + dbName + " FROM "+ replDumpId);
  String incrementalDumpLocn=getResult(0,0);
  String incrementalDumpId=getResult(0,1,true);
  LOG.info("Incremental-dump: Dumped to {} with id {}",incrementalDumpLocn,incrementalDumpId);
  run("EXPLAIN REPL LOAD " + dbName + "_dupe FROM '"+ incrementalDumpLocn+ "'");
  printOutput();
  run("REPL LOAD " + dbName + "_dupe FROM '"+ incrementalDumpLocn+ "'");
  run("REPL STATUS " + dbName + "_dupe");
  verifyResults(new String[]{incrementalDumpId});
  verifyRun("SELECT * from " + dbName + "_dupe.unptned",unptn_data);
  verifyRun("SELECT a from " + dbName + "_dupe.ptned where b=1",ptn_data_1);
  verifyRun("SELECT * from " + dbName + "_dupe.virtual_view",unptn_data);
  verifyRun("SELECT a from " + dbName + "_dupe.mat_view",ptn_data_1);
  verifyRun("SELECT * from " + dbName + "_dupe.virtual_view2",ptn_data_2);
  verifyRun("SELECT * from " + dbName + "_dupe.mat_view2",unptn_data);
}
