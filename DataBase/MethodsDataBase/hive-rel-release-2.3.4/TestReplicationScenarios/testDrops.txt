@Test public void testDrops() throws IOException {
  String testName="drops";
  LOG.info("Testing " + testName);
  String dbName=testName + "_" + tid;
  run("CREATE DATABASE " + dbName);
  run("CREATE TABLE " + dbName + ".unptned(a string) STORED AS TEXTFILE");
  run("CREATE TABLE " + dbName + ".ptned(a string) partitioned by (b string) STORED AS TEXTFILE");
  run("CREATE TABLE " + dbName + ".ptned2(a string) partitioned by (b string) STORED AS TEXTFILE");
  run("CREATE TABLE " + dbName + ".ptned3(a string) partitioned by (b int) STORED AS TEXTFILE");
  String[] unptn_data=new String[]{"eleven","twelve"};
  String[] ptn_data_1=new String[]{"thirteen","fourteen","fifteen"};
  String[] ptn_data_2=new String[]{"fifteen","sixteen","seventeen"};
  String[] empty=new String[]{};
  String unptn_locn=new Path(TEST_PATH,testName + "_unptn").toUri().getPath();
  String ptn_locn_1=new Path(TEST_PATH,testName + "_ptn1").toUri().getPath();
  String ptn_locn_2=new Path(TEST_PATH,testName + "_ptn2").toUri().getPath();
  createTestDataFile(unptn_locn,unptn_data);
  createTestDataFile(ptn_locn_1,ptn_data_1);
  createTestDataFile(ptn_locn_2,ptn_data_2);
  run("LOAD DATA LOCAL INPATH '" + unptn_locn + "' OVERWRITE INTO TABLE "+ dbName+ ".unptned");
  verifySetup("SELECT * from " + dbName + ".unptned",unptn_data);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_1 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned PARTITION(b='1')");
  verifySetup("SELECT a from " + dbName + ".ptned WHERE b='1'",ptn_data_1);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_2 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned PARTITION(b='2')");
  verifySetup("SELECT a from " + dbName + ".ptned WHERE b='2'",ptn_data_2);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_1 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned2 PARTITION(b='1')");
  verifySetup("SELECT a from " + dbName + ".ptned2 WHERE b='1'",ptn_data_1);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_2 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned2 PARTITION(b='2')");
  verifySetup("SELECT a from " + dbName + ".ptned2 WHERE b='2'",ptn_data_2);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_1 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned3 PARTITION(b=1)");
  verifySetup("SELECT a from " + dbName + ".ptned2 WHERE b=1",ptn_data_1);
  run("LOAD DATA LOCAL INPATH '" + ptn_locn_2 + "' OVERWRITE INTO TABLE "+ dbName+ ".ptned3 PARTITION(b=2)");
  verifySetup("SELECT a from " + dbName + ".ptned2 WHERE b=2",ptn_data_2);
  advanceDumpDir();
  run("REPL DUMP " + dbName);
  String replDumpLocn=getResult(0,0);
  String replDumpId=getResult(0,1,true);
  run("EXPLAIN REPL LOAD " + dbName + "_dupe FROM '"+ replDumpLocn+ "'");
  printOutput();
  run("REPL LOAD " + dbName + "_dupe FROM '"+ replDumpLocn+ "'");
  verifySetup("REPL STATUS " + dbName + "_dupe",new String[]{replDumpId});
  verifySetup("SELECT * from " + dbName + "_dupe.unptned",unptn_data);
  verifySetup("SELECT a from " + dbName + "_dupe.ptned WHERE b='1'",ptn_data_1);
  verifySetup("SELECT a from " + dbName + "_dupe.ptned WHERE b='2'",ptn_data_2);
  verifySetup("SELECT a from " + dbName + "_dupe.ptned2 WHERE b='1'",ptn_data_1);
  verifySetup("SELECT a from " + dbName + "_dupe.ptned2 WHERE b='2'",ptn_data_2);
  verifySetup("SELECT a from " + dbName + "_dupe.ptned3 WHERE b=1",ptn_data_1);
  verifySetup("SELECT a from " + dbName + "_dupe.ptned3 WHERE b=2",ptn_data_2);
  run("DROP TABLE " + dbName + ".unptned");
  run("ALTER TABLE " + dbName + ".ptned DROP PARTITION (b='2')");
  run("DROP TABLE " + dbName + ".ptned2");
  run("ALTER TABLE " + dbName + ".ptned3 DROP PARTITION (b=1)");
  verifySetup("SELECT a from " + dbName + ".ptned WHERE b='2'",empty);
  verifySetup("SELECT a from " + dbName + ".ptned",ptn_data_1);
  verifySetup("SELECT a from " + dbName + ".ptned3 WHERE b=1",empty);
  verifySetup("SELECT a from " + dbName + ".ptned3",ptn_data_2);
  advanceDumpDir();
  run("REPL DUMP " + dbName + " FROM "+ replDumpId);
  String postDropReplDumpLocn=getResult(0,0);
  String postDropReplDumpId=getResult(0,1,true);
  LOG.info("Dumped to {} with id {}->{}",postDropReplDumpLocn,replDumpId,postDropReplDumpId);
  run("EXPLAIN REPL LOAD " + dbName + "_dupe FROM '"+ postDropReplDumpLocn+ "'");
  printOutput();
  run("REPL LOAD " + dbName + "_dupe FROM '"+ postDropReplDumpLocn+ "'");
  Exception e=null;
  try {
    Table tbl=metaStoreClient.getTable(dbName + "_dupe","unptned");
    assertNull(tbl);
  }
 catch (  TException te) {
    e=te;
  }
  assertNotNull(e);
  assertEquals(NoSuchObjectException.class,e.getClass());
  verifyRun("SELECT a from " + dbName + "_dupe.ptned WHERE b='2'",empty);
  verifyRun("SELECT a from " + dbName + "_dupe.ptned",ptn_data_1);
  verifyRun("SELECT a from " + dbName + "_dupe.ptned3 WHERE b=1",empty);
  verifyRun("SELECT a from " + dbName + "_dupe.ptned3",ptn_data_2);
  Exception e2=null;
  try {
    Table tbl=metaStoreClient.getTable(dbName + "_dupe","ptned2");
    assertNull(tbl);
  }
 catch (  TException te) {
    e2=te;
  }
  assertNotNull(e2);
  assertEquals(NoSuchObjectException.class,e.getClass());
}
