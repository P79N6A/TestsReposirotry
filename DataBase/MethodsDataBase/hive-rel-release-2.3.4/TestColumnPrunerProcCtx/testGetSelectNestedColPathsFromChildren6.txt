@Test public void testGetSelectNestedColPathsFromChildren6(){
  ColumnPrunerProcCtx ctx=new ColumnPrunerProcCtx(null);
  ExprNodeDesc colDesc=new ExprNodeColumnDesc(col3Type,"root","test",false);
  ExprNodeDesc col1=new ExprNodeFieldDesc(col1Type,colDesc,"col1",false);
  ExprNodeDesc fieldDesc=new ExprNodeFieldDesc(TypeInfoFactory.doubleTypeInfo,col1,"b",false);
  final List<FieldNode> paths=Arrays.asList(new FieldNode("_col0"));
  GenericUDF udf=mock(GenericUDFBridge.class);
  List<ExprNodeDesc> list=new ArrayList<>();
  list.add(fieldDesc);
  ExprNodeDesc funcDesc=new ExprNodeGenericFuncDesc(TypeInfoFactory.binaryTypeInfo,udf,"abs",list);
  SelectOperator selectOperator=buildSelectOperator(Arrays.asList(funcDesc),paths);
  List<FieldNode> groups=ctx.getSelectColsFromChildren(selectOperator,paths);
  compareTestResults(groups,"root.col1.b");
}
