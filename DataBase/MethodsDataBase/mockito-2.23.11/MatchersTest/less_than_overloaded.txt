@Test public void less_than_overloaded(){
  when(mock.oneArg(lt((byte)1))).thenReturn("1");
  when(mock.oneArg(lt(1D))).thenReturn("3");
  when(mock.oneArg(lt(1F))).thenReturn("4");
  when(mock.oneArg(lt(1))).thenReturn("5");
  when(mock.oneArg(lt(1L))).thenReturn("6");
  when(mock.oneArg(lt((short)1))).thenReturn("7");
  when(mock.oneArg(lt(new BigDecimal("1")))).thenReturn("8");
  assertEquals("1",mock.oneArg((byte)0));
  assertEquals(null,mock.oneArg((byte)1));
  assertEquals("3",mock.oneArg(0D));
  assertEquals("7",mock.oneArg((short)0));
  assertEquals("4",mock.oneArg(-4F));
  assertEquals("5",mock.oneArg(-34));
  assertEquals("6",mock.oneArg(-6L));
  assertEquals("8",mock.oneArg(new BigDecimal("0.5")));
  assertEquals(null,mock.oneArg(new BigDecimal("23")));
}
