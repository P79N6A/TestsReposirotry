@Test public void should_verify_in_order_with_times_x_and_fail(){
  async.runAfter(20,callMock(mock1,'a'));
  async.runAfter(50,callMock(mock1,'a'));
  async.runAfter(200,callMock(mock2,'b'));
  async.runAfter(250,callMock(mock2,'b'));
  final InOrder inOrder=inOrder(mock1,mock2);
  inOrder.verify(mock2,timeout(500).times(2)).oneArg('b');
  Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){
    public void call(){
      inOrder.verify(mock1,timeout(100).times(2)).oneArg('a');
    }
  }
).isInstanceOf(VerificationInOrderFailure.class).hasMessageContaining("Wanted but not invoked:\nmock1.oneArg('a');").hasMessageContaining("Wanted anywhere AFTER following interaction:\nmock2.oneArg('b');");
}
