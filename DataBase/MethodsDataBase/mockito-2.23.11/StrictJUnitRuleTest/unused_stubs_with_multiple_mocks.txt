@Test public void unused_stubs_with_multiple_mocks() throws Throwable {
  rule.expectFailure(new SafeJUnitRule.FailureAssert(){
    public void doAssert(    Throwable t){
      assertEquals(filterLineNo("\n" + "Unnecessary stubbings detected.\n" + "Clean & maintainable test code requires zero unnecessary code.\n"+ "Following stubbings are unnecessary (click to navigate to relevant line of code):\n"+ "  1. -> at org.mockitousage.junitrule.StrictJUnitRuleTest.unused_stubs_with_multiple_mocks(StrictJUnitRuleTest.java:0)\n"+ "  2. -> at org.mockitousage.junitrule.StrictJUnitRuleTest.unused_stubs_with_multiple_mocks(StrictJUnitRuleTest.java:0)\n"+ "Please remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class."),filterLineNo(t.getMessage()));
    }
  }
);
  given(mock.simpleMethod(10)).willReturn("foo");
  given(mock2.simpleMethod(20)).willReturn("foo");
  given(mock.otherMethod()).willReturn("foo");
  mock.otherMethod();
  mock2.booleanObjectReturningMethod();
}
