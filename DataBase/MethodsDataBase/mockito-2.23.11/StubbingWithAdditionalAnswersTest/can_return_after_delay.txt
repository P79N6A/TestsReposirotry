@Test public void can_return_after_delay() throws Exception {
  final long sleepyTime=500L;
  given(iMethods.objectArgMethod(any())).will(answersWithDelay(sleepyTime,returnsFirstArg()));
  final Date before=new Date();
  assertThat(iMethods.objectArgMethod("first")).isEqualTo("first");
  final Date after=new Date();
  final long timePassed=after.getTime() - before.getTime();
  assertThat(timePassed).isCloseTo(sleepyTime,within(15L));
}
