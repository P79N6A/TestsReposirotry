@Test public void ensure_cache_is_cleared_if_no_reference_to_classloader_and_classes() throws Exception {
  ClassLoader classloader_with_life_shorter_than_cache=inMemoryClassLoader().withClassDefinition("foo.Bar",makeMarkerInterface("foo.Bar")).build();
  TypeCachingBytecodeGenerator cachingMockBytecodeGenerator=new TypeCachingBytecodeGenerator(new SubclassBytecodeGenerator(),true);
  Class<?> the_mock_type=cachingMockBytecodeGenerator.mockClass(withMockFeatures(classloader_with_life_shorter_than_cache.loadClass("foo.Bar"),Collections.<Class<?>>emptySet(),SerializableMode.NONE,false));
  ReferenceQueue<Object> referenceQueue=new ReferenceQueue<Object>();
  Reference<Object> typeReference=new PhantomReference<Object>(the_mock_type,referenceQueue);
  classloader_with_life_shorter_than_cache=is_no_more_referenced();
  the_mock_type=is_no_more_referenced();
  System.gc();
  ensure_gc_happened();
  assertThat(referenceQueue.poll()).isEqualTo(typeReference);
}
