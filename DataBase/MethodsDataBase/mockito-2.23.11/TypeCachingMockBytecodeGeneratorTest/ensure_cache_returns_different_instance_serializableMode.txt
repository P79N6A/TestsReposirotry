@Test public void ensure_cache_returns_different_instance_serializableMode() throws Exception {
  ClassLoader classloader_with_life_shorter_than_cache=inMemoryClassLoader().withClassDefinition("foo.Bar",makeMarkerInterface("foo.Bar")).build();
  TypeCachingBytecodeGenerator cachingMockBytecodeGenerator=new TypeCachingBytecodeGenerator(new SubclassBytecodeGenerator(),true);
  Class<?> the_mock_type=cachingMockBytecodeGenerator.mockClass(withMockFeatures(classloader_with_life_shorter_than_cache.loadClass("foo.Bar"),Collections.<Class<?>>emptySet(),SerializableMode.NONE,false));
  Class<?> other_mock_type=cachingMockBytecodeGenerator.mockClass(withMockFeatures(classloader_with_life_shorter_than_cache.loadClass("foo.Bar"),Collections.<Class<?>>emptySet(),SerializableMode.BASIC,false));
  assertThat(other_mock_type).isNotSameAs(the_mock_type);
}
