@Test public void decent_exception_when_setting_mock_of_wrong_type() throws Exception {
  final Set differentTypeMock=mock(Set.class);
  VerificationStartedNotifier.Event event=new VerificationStartedNotifier.Event(mockingDetails);
  try {
    event.setMock(differentTypeMock);
    fail();
  }
 catch (  Exception e) {
    assertEquals(filterHashCode("VerificationStartedEvent.setMock() does not accept parameter which is not the same type as the original mock.\n" + "  Required type: java.util.List\n" + "  Received parameter: Mock for Set, hashCode: xxx.\n"+ "  See the Javadoc."),filterHashCode(e.getMessage()));
  }
}
