@SuppressWarnings({"CheckReturnValue","MockitoUsage"}) @Test public void verifying_new() throws Throwable {
  Constructor<Foo> ctr=Foo.class.getConstructor(String.class);
  Method adapter=ConstructorMethodAdapter.class.getDeclaredMethods()[0];
  Invocation constructor=Mockito.framework().getInvocationFactory().createInvocation(mock,withSettings().build(Foo.class),adapter,realMethod,ctr,"matching arg");
  handler.handle(constructor);
  verify(mock);
  handler.handle(constructor);
  verify(mock);
  Invocation differentArg=Mockito.framework().getInvocationFactory().createInvocation(mock,withSettings().build(Foo.class),adapter,realMethod,ctr,"different arg");
  try {
    handler.handle(differentArg);
    fail();
  }
 catch (  WantedButNotInvoked e) {
    assertThat(e.getMessage()).contains("matching arg").contains("different arg");
  }
}
