@Test public void paramType_with_wildcard_return_type_of____returning_wildcard_with_class_lower_bound____resolved_to_List_and_type_argument_to_Integer() throws Exception {
  GenericMetadataSupport genericMetadata=inferFrom(GenericsNest.class).resolveGenericReturnType(firstNamedMethod("returning_wildcard_with_class_lower_bound",GenericsNest.class));
  assertThat(genericMetadata.rawType()).isEqualTo(List.class);
  GenericMetadataSupport.BoundedType boundedType=(GenericMetadataSupport.BoundedType)typeVariableValue(genericMetadata.actualTypeArguments(),"E");
  assertThat(boundedType.firstBound()).isEqualTo(Integer.class);
  assertThat(boundedType.interfaceBounds()).isEmpty();
}
