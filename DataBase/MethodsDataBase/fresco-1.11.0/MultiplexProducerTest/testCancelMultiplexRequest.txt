@Test public void testCancelMultiplexRequest(){
  mMultiplexProducer.produceResults(mConsumer1,mProducerContext1);
  mMultiplexProducer.produceResults(mConsumer2,mProducerContext2);
  mMultiplexProducer.produceResults(mConsumer3,mProducerContext3);
  mProducerContext1.cancel();
  mForwardingConsumer1.onNewResult(mIntermediateImageReference1,TEST_FLAG);
  verify(mConsumer1,never()).onNewResult(mIntermediateImageReference1,TEST_FLAG);
  verify(mConsumer2).onNewResult(mIntermediateImageReference1,TEST_FLAG);
  verify(mConsumer3,never()).onNewResult(mIntermediateImageReference1,TEST_FLAG);
  assertTrue(mMultiplexProducer.mMultiplexers.size() == 2);
  mForwardingConsumer2.onNewResult(mIntermediateImageReference2,Consumer.NO_FLAGS);
  verify(mConsumer3).onNewResult(mIntermediateImageReference2,Consumer.NO_FLAGS);
  verify(mConsumer1,never()).onNewResult(mIntermediateImageReference2,Consumer.NO_FLAGS);
  verify(mConsumer2,never()).onNewResult(mIntermediateImageReference2,Consumer.NO_FLAGS);
  assertTrue(mMultiplexProducer.mMultiplexers.size() == 2);
  mProducerContext3.cancel();
  mForwardingConsumer2.onCancellation();
  assertTrue(mMultiplexProducer.mMultiplexers.size() == 1);
  mProducerContext2.cancel();
  mForwardingConsumer1.onCancellation();
  assertTrue(mMultiplexProducer.mMultiplexers.size() == 0);
}
