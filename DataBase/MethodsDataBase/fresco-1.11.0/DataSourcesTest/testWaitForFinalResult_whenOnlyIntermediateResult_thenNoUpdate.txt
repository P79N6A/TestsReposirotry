@Test public void testWaitForFinalResult_whenOnlyIntermediateResult_thenNoUpdate() throws Throwable {
  when(mDataSource.isFinished()).thenReturn(false);
  when(mDataSource.getResult()).thenReturn(mIntermediateResult);
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      final Object[] args=invocation.getArguments();
      DataSubscriber dataSubscriber=(DataSubscriber)args[0];
      dataSubscriber.onNewResult(mDataSource);
      return null;
    }
  }
).when(mDataSource).subscribe(any(DataSubscriber.class),any(Executor.class));
  final Object actual=DataSources.waitForFinalResult(mDataSource);
  assertEquals(null,actual);
  verify(mCountDownLatch,times(1)).await();
  verify(mCountDownLatch,never()).countDown();
}
