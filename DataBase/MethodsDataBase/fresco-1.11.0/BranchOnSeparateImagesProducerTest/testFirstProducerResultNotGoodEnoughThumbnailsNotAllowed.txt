@Test public void testFirstProducerResultNotGoodEnoughThumbnailsNotAllowed(){
  when(mImageRequest.getLocalThumbnailPreviewsEnabled()).thenReturn(false);
  EncodedImage firstProducerEncodedImage=new EncodedImage(mFirstProducerFinalResult.getByteBufferRef());
  firstProducerEncodedImage.setRotationAngle(-1);
  firstProducerEncodedImage.setWidth(WIDTH / 2);
  firstProducerEncodedImage.setHeight(HEIGHT / 2);
  mFirstProducerConsumer.onNewResult(firstProducerEncodedImage,Consumer.IS_LAST);
  verify(mConsumer,never()).onNewResult(firstProducerEncodedImage,Consumer.NO_FLAGS);
  EncodedImage intermediateEncodedImage=new EncodedImage(mIntermediateResult.getByteBufferRef());
  intermediateEncodedImage.setRotationAngle(-1);
  intermediateEncodedImage.setWidth(WIDTH / 2);
  intermediateEncodedImage.setHeight(HEIGHT / 2);
  mSecondProducerConsumer.onNewResult(intermediateEncodedImage,Consumer.NO_FLAGS);
  verify(mConsumer).onNewResult(intermediateEncodedImage,Consumer.NO_FLAGS);
  EncodedImage secondProducerEncodedImage=new EncodedImage(mFirstProducerFinalResult.getByteBufferRef());
  secondProducerEncodedImage.setRotationAngle(-1);
  secondProducerEncodedImage.setWidth(WIDTH / 2);
  secondProducerEncodedImage.setHeight(HEIGHT / 2);
  mSecondProducerConsumer.onNewResult(secondProducerEncodedImage,Consumer.IS_LAST);
  verify(mConsumer).onNewResult(secondProducerEncodedImage,Consumer.IS_LAST);
}
