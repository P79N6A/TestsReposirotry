@Test public void testControlling_WithCornerRadii() throws Exception {
  GenericDraweeHierarchy dh=mBuilder.setPlaceholderImage(mPlaceholderImage,null).setActualImageScaleType(null).setRoundingParams(RoundingParams.fromCornersRadius(10)).setFadeDuration(250).build();
  final int imageIndex=2;
  FadeDrawable fadeDrawable=(FadeDrawable)dh.getTopLevelDrawable().getCurrent();
  ForwardingDrawable settableDrawable=(ForwardingDrawable)fadeDrawable.getDrawable(imageIndex);
  dh.setImage(mActualImage1,0.5f,true);
  assertNotSame(mActualImage1,settableDrawable.getCurrent());
  assertEquals(RoundedBitmapDrawable.class,settableDrawable.getCurrent().getClass());
  assertEquals(true,fadeDrawable.isLayerOn(imageIndex));
  assertEquals(FadeDrawable.TRANSITION_NONE,fadeDrawable.getTransitionState());
  verifyCallback(dh.getTopLevelDrawable(),settableDrawable.getCurrent());
  dh.setImage(mActualImage2,1f,false);
  assertNotSame(mActualImage2,settableDrawable.getCurrent());
  assertEquals(RoundedBitmapDrawable.class,settableDrawable.getCurrent().getClass());
  assertEquals(true,fadeDrawable.isLayerOn(imageIndex));
  assertEquals(FadeDrawable.TRANSITION_STARTING,fadeDrawable.getTransitionState());
  assertEquals(250,fadeDrawable.getTransitionDuration());
  verifyCallback(dh.getTopLevelDrawable(),settableDrawable.getCurrent());
}
