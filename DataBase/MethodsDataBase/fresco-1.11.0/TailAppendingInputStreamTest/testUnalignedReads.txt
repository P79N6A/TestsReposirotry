@Test public void testUnalignedReads() throws IOException {
  assertEquals(128,mTailAppendingInputStream.read(mOutputBuffer,256,128));
  assertArrayEquals(Arrays.copyOfRange(mBytes,0,128),Arrays.copyOfRange(mOutputBuffer,256,384));
  Arrays.fill(mOutputBuffer,256,384,(byte)0);
  for (  byte b : mOutputBuffer) {
    assertEquals(0,b);
  }
  assertEquals(BYTES_LENGTH - 128,mTailAppendingInputStream.read(mOutputBuffer));
  assertArrayEquals(Arrays.copyOfRange(mBytes,128,BYTES_LENGTH),Arrays.copyOfRange(mOutputBuffer,0,BYTES_LENGTH - 128));
  Arrays.fill(mOutputBuffer,0,BYTES_LENGTH - 128,(byte)0);
  for (  byte b : mOutputBuffer) {
    assertEquals(0,b);
  }
  assertEquals(128,mTailAppendingInputStream.read(mOutputBuffer,256,128));
  assertArrayEquals(Arrays.copyOfRange(mTail,0,128),Arrays.copyOfRange(mOutputBuffer,256,384));
  Arrays.fill(mOutputBuffer,256,384,(byte)0);
  for (  byte b : mOutputBuffer) {
    assertEquals(0,b);
  }
  assertEquals(TAIL_LENGTH - 128,mTailAppendingInputStream.read(mOutputBuffer));
  assertArrayEquals(Arrays.copyOfRange(mTail,128,TAIL_LENGTH),Arrays.copyOfRange(mOutputBuffer,0,TAIL_LENGTH - 128));
  Arrays.fill(mOutputBuffer,0,TAIL_LENGTH - 128,(byte)0);
  for (  byte b : mOutputBuffer) {
    assertEquals(0,b);
  }
  assertEquals(-1,mTailAppendingInputStream.read());
}
