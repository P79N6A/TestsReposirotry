@Test(timeout=5000) public void testNoIntermediateResults() throws Exception {
  long currentTime=86400l;
  when(SystemClock.uptimeMillis()).thenReturn(currentTime);
  NetworkFetcher.Callback callback=performFetch();
  when(mNetworkFetcher.shouldPropagate(any(FetchState.class))).thenReturn(false);
  final BlockingInputStream inputStream=new BlockingInputStream();
  final Future requestHandlerFuture=performResponse(inputStream,-1,callback);
  inputStream.waitUntilReadingThreadBlocked();
  verify(mPooledByteBufferFactory).newOutputStream();
  verify(mConsumer,never()).onNewResult(any(CloseableReference.class),anyInt());
  verifyPooledByteBufferUsed(0);
  inputStream.increaseBytesToRead(1024);
  inputStream.waitUntilReadingThreadBlocked();
  inputStream.increaseBytesToRead(1024);
  inputStream.waitUntilReadingThreadBlocked();
  verify(mConsumer,never()).onNewResult(any(CloseableReference.class),anyInt());
  verifyPooledByteBufferUsed(0);
  inputStream.signalEof();
  requestHandlerFuture.get();
  verify(mProducerListener,times(0)).onProducerEvent(mRequestId,NetworkFetchProducer.PRODUCER_NAME,NetworkFetchProducer.INTERMEDIATE_RESULT_PRODUCER_EVENT);
  verify(mConsumer,times(1)).onNewResult(any(CloseableReference.class),eq(Consumer.IS_LAST));
  verifyPooledByteBufferUsed(1);
  verify(mPooledByteBufferOutputStream).close();
}
