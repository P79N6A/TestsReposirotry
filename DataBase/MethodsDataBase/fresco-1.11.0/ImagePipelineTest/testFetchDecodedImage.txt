@Test public void testFetchDecodedImage(){
  Producer<CloseableReference<CloseableImage>> decodedSequence=mock(Producer.class);
  when(mProducerSequenceFactory.getDecodedImageProducerSequence(mImageRequest)).thenReturn(decodedSequence);
  DataSource<CloseableReference<CloseableImage>> dataSource=mImagePipeline.fetchDecodedImage(mImageRequest,mCallerContext);
  assertFalse(dataSource.isFinished());
  verify(mRequestListener1).onRequestStart(mImageRequest,mCallerContext,"0",false);
  verify(mRequestListener2).onRequestStart(mImageRequest,mCallerContext,"0",false);
  ArgumentCaptor<ProducerContext> producerContextArgumentCaptor=ArgumentCaptor.forClass(ProducerContext.class);
  verify(decodedSequence).produceResults(any(Consumer.class),producerContextArgumentCaptor.capture());
  assertTrue(producerContextArgumentCaptor.getValue().isIntermediateResultExpected());
  assertEquals(producerContextArgumentCaptor.getValue().getPriority(),Priority.HIGH);
}
