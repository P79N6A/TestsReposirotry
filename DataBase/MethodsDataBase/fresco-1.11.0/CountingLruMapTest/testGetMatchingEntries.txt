@Test public void testGetMatchingEntries(){
  mCountingLruMap.put("key1",110);
  mCountingLruMap.put("key2",120);
  mCountingLruMap.put("key3",130);
  mCountingLruMap.put("key4",140);
  List<LinkedHashMap.Entry<String,Integer>> entries=mCountingLruMap.getMatchingEntries(new Predicate<String>(){
    @Override public boolean apply(    String key){
      return key.equals("key2") || key.equals("key3");
    }
  }
);
  assertNotNull(entries);
  assertEquals(2,entries.size());
  assertEquals("key2",entries.get(0).getKey());
  assertEquals(120,(int)entries.get(0).getValue());
  assertEquals("key3",entries.get(1).getKey());
  assertEquals(130,(int)entries.get(1).getValue());
  assertEquals(4,mCountingLruMap.getCount());
  assertEquals(500,mCountingLruMap.getSizeInBytes());
  assertKeyOrder("key1","key2","key3","key4");
  assertValueOrder(110,120,130,140);
}
