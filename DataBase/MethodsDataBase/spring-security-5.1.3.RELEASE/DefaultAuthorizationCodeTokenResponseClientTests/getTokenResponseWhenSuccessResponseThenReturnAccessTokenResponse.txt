@Test public void getTokenResponseWhenSuccessResponseThenReturnAccessTokenResponse() throws Exception {
  String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"read write\",\n"+ "   \"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n";
  this.server.enqueue(jsonResponse(accessTokenSuccessResponse));
  Instant expiresAtBefore=Instant.now().plusSeconds(3600);
  OAuth2AccessTokenResponse accessTokenResponse=this.tokenResponseClient.getTokenResponse(this.authorizationCodeGrantRequest());
  Instant expiresAtAfter=Instant.now().plusSeconds(3600);
  RecordedRequest recordedRequest=this.server.takeRequest();
  assertThat(recordedRequest.getMethod()).isEqualTo(HttpMethod.POST.toString());
  assertThat(recordedRequest.getHeader(HttpHeaders.ACCEPT)).isEqualTo(MediaType.APPLICATION_JSON_UTF8_VALUE);
  assertThat(recordedRequest.getHeader(HttpHeaders.CONTENT_TYPE)).isEqualTo(MediaType.APPLICATION_FORM_URLENCODED_VALUE + ";charset=UTF-8");
  String formParameters=recordedRequest.getBody().readUtf8();
  assertThat(formParameters).contains("grant_type=authorization_code");
  assertThat(formParameters).contains("code=code-1234");
  assertThat(formParameters).contains("redirect_uri=https%3A%2F%2Fclient.com%2Fcallback%2Fclient-1");
  assertThat(accessTokenResponse.getAccessToken().getTokenValue()).isEqualTo("access-token-1234");
  assertThat(accessTokenResponse.getAccessToken().getTokenType()).isEqualTo(OAuth2AccessToken.TokenType.BEARER);
  assertThat(accessTokenResponse.getAccessToken().getExpiresAt()).isBetween(expiresAtBefore,expiresAtAfter);
  assertThat(accessTokenResponse.getAccessToken().getScopes()).containsExactly("read","write");
  assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234");
  assertThat(accessTokenResponse.getAdditionalParameters().size()).isEqualTo(2);
  assertThat(accessTokenResponse.getAdditionalParameters()).containsEntry("custom_parameter_1","custom-value-1");
  assertThat(accessTokenResponse.getAdditionalParameters()).containsEntry("custom_parameter_2","custom-value-2");
}
