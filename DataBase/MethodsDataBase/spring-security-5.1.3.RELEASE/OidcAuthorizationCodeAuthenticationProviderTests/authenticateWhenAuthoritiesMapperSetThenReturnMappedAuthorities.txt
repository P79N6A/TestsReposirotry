@Test public void authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities() throws Exception {
  Map<String,Object> claims=new HashMap<>();
  claims.put(IdTokenClaimNames.ISS,"https://provider.com");
  claims.put(IdTokenClaimNames.SUB,"subject1");
  claims.put(IdTokenClaimNames.AUD,Arrays.asList("client1","client2"));
  claims.put(IdTokenClaimNames.AZP,"client1");
  this.setUpIdToken(claims);
  OidcUser principal=mock(OidcUser.class);
  List<GrantedAuthority> authorities=AuthorityUtils.createAuthorityList("ROLE_USER");
  when(principal.getAuthorities()).thenAnswer((Answer<List<GrantedAuthority>>)invocation -> authorities);
  when(this.userService.loadUser(any())).thenReturn(principal);
  List<GrantedAuthority> mappedAuthorities=AuthorityUtils.createAuthorityList("ROLE_OIDC_USER");
  GrantedAuthoritiesMapper authoritiesMapper=mock(GrantedAuthoritiesMapper.class);
  when(authoritiesMapper.mapAuthorities(anyCollection())).thenAnswer((Answer<List<GrantedAuthority>>)invocation -> mappedAuthorities);
  this.authenticationProvider.setAuthoritiesMapper(authoritiesMapper);
  OAuth2LoginAuthenticationToken authentication=(OAuth2LoginAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2LoginAuthenticationToken(this.clientRegistration,this.authorizationExchange));
  assertThat(authentication.getAuthorities()).isEqualTo(mappedAuthorities);
}
