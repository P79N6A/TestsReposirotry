@Test public void authenticateWhenLoginSuccessThenReturnAuthentication() throws Exception {
  Map<String,Object> claims=new HashMap<>();
  claims.put(IdTokenClaimNames.ISS,"https://provider.com");
  claims.put(IdTokenClaimNames.SUB,"subject1");
  claims.put(IdTokenClaimNames.AUD,Arrays.asList("client1","client2"));
  claims.put(IdTokenClaimNames.AZP,"client1");
  this.setUpIdToken(claims);
  OidcUser principal=mock(OidcUser.class);
  List<GrantedAuthority> authorities=AuthorityUtils.createAuthorityList("ROLE_USER");
  when(principal.getAuthorities()).thenAnswer((Answer<List<GrantedAuthority>>)invocation -> authorities);
  when(this.userService.loadUser(any())).thenReturn(principal);
  OAuth2LoginAuthenticationToken authentication=(OAuth2LoginAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2LoginAuthenticationToken(this.clientRegistration,this.authorizationExchange));
  assertThat(authentication.isAuthenticated()).isTrue();
  assertThat(authentication.getPrincipal()).isEqualTo(principal);
  assertThat(authentication.getCredentials()).isEqualTo("");
  assertThat(authentication.getAuthorities()).isEqualTo(authorities);
  assertThat(authentication.getClientRegistration()).isEqualTo(this.clientRegistration);
  assertThat(authentication.getAuthorizationExchange()).isEqualTo(this.authorizationExchange);
  assertThat(authentication.getAccessToken()).isEqualTo(this.accessTokenResponse.getAccessToken());
  assertThat(authentication.getRefreshToken()).isEqualTo(this.accessTokenResponse.getRefreshToken());
}
