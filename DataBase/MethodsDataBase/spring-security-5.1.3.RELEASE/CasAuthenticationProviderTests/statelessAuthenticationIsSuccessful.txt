@Test public void statelessAuthenticationIsSuccessful() throws Exception {
  CasAuthenticationProvider cap=new CasAuthenticationProvider();
  cap.setAuthenticationUserDetailsService(new MockAuthoritiesPopulator());
  cap.setKey("qwerty");
  StatelessTicketCache cache=new MockStatelessTicketCache();
  cap.setStatelessTicketCache(cache);
  cap.setTicketValidator(new MockTicketValidator(true));
  cap.setServiceProperties(makeServiceProperties());
  cap.afterPropertiesSet();
  UsernamePasswordAuthenticationToken token=new UsernamePasswordAuthenticationToken(CasAuthenticationFilter.CAS_STATELESS_IDENTIFIER,"ST-456");
  token.setDetails("details");
  Authentication result=cap.authenticate(token);
  assertThat(cache.getByTicketId("ST-456") != null).isTrue();
  if (!(result instanceof CasAuthenticationToken)) {
    fail("Should have returned a CasAuthenticationToken");
  }
  assertThat(result.getPrincipal()).isEqualTo(makeUserDetailsFromAuthoritiesPopulator());
  assertThat(result.getCredentials()).isEqualTo("ST-456");
  assertThat(result.getDetails()).isEqualTo("details");
  cap.setTicketValidator(new MockTicketValidator(false));
  Authentication newResult=cap.authenticate(token);
  assertThat(newResult.getPrincipal()).isEqualTo(makeUserDetailsFromAuthoritiesPopulator());
  assertThat(newResult.getCredentials()).isEqualTo("ST-456");
}
