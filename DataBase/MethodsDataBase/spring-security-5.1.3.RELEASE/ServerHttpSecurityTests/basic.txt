@Test public void basic(){
  given(this.authenticationManager.authenticate(any())).willReturn(Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN")));
  this.http.securityContextRepository(new WebSessionServerSecurityContextRepository());
  this.http.httpBasic();
  this.http.authenticationManager(this.authenticationManager);
  ServerHttpSecurity.AuthorizeExchangeSpec authorize=this.http.authorizeExchange();
  authorize.anyExchange().authenticated();
  WebTestClient client=buildClient();
  EntityExchangeResult<String> result=client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")).returnResult();
  assertThat(result.getResponseCookies().getFirst("SESSION")).isNull();
}
