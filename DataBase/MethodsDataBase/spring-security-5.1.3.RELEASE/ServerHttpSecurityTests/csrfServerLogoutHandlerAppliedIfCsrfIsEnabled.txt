@Test public void csrfServerLogoutHandlerAppliedIfCsrfIsEnabled(){
  SecurityWebFilterChain securityWebFilterChain=this.http.csrf().csrfTokenRepository(this.csrfTokenRepository).and().build();
  assertThat(getWebFilter(securityWebFilterChain,CsrfWebFilter.class)).get().extracting(csrfWebFilter -> ReflectionTestUtils.getField(csrfWebFilter,"csrfTokenRepository")).isEqualTo(this.csrfTokenRepository);
  Optional<ServerLogoutHandler> logoutHandler=getWebFilter(securityWebFilterChain,LogoutWebFilter.class).map(logoutWebFilter -> (ServerLogoutHandler)ReflectionTestUtils.getField(logoutWebFilter,LogoutWebFilter.class,"logoutHandler"));
  assertThat(logoutHandler).get().isExactlyInstanceOf(DelegatingServerLogoutHandler.class).extracting(delegatingLogoutHandler -> ((List<ServerLogoutHandler>)ReflectionTestUtils.getField(delegatingLogoutHandler,DelegatingServerLogoutHandler.class,"delegates")).stream().map(ServerLogoutHandler::getClass).collect(Collectors.toList())).isEqualTo(Arrays.asList(SecurityContextServerLogoutHandler.class,CsrfServerLogoutHandler.class));
}
