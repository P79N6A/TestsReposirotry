@Test public void handleWhenSecondMatchesThenOnlySecondInvoked(){
  ServerAccessDeniedHandler firstHandler=mock(ServerAccessDeniedHandler.class);
  ServerWebExchangeMatcher firstMatcher=mock(ServerWebExchangeMatcher.class);
  ServerAccessDeniedHandler secondHandler=mock(ServerAccessDeniedHandler.class);
  ServerWebExchangeMatcher secondMatcher=mock(ServerWebExchangeMatcher.class);
  when(firstMatcher.matches(this.exchange)).thenReturn(notMatch());
  when(secondMatcher.matches(this.exchange)).thenReturn(match());
  when(firstHandler.handle(this.exchange,null)).thenReturn(Mono.empty());
  when(secondHandler.handle(this.exchange,null)).thenReturn(Mono.empty());
  this.entries.add(new DelegateEntry(firstMatcher,firstHandler));
  this.entries.add(new DelegateEntry(secondMatcher,secondHandler));
  this.delegator=new ServerWebExchangeDelegatingServerAccessDeniedHandler(this.entries);
  this.delegator.handle(this.exchange,null).block();
  verify(secondHandler).handle(this.exchange,null);
  verify(firstHandler,never()).handle(this.exchange,null);
  verify(this.accessDeniedHandler,never()).handle(this.exchange,null);
}
