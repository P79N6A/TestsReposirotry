@Test public void testRequiresAuthenticationAuthAll(){
  ServiceProperties properties=new ServiceProperties();
  properties.setAuthenticateAllArtifacts(true);
  String url="/login/cas";
  CasAuthenticationFilter filter=new CasAuthenticationFilter();
  filter.setFilterProcessesUrl(url);
  filter.setServiceProperties(properties);
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  request.setServletPath(url);
  assertThat(filter.requiresAuthentication(request,response)).isTrue();
  request.setServletPath("/other");
  assertThat(filter.requiresAuthentication(request,response)).isFalse();
  request.setParameter(properties.getArtifactParameter(),"value");
  assertThat(filter.requiresAuthentication(request,response)).isTrue();
  SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("key","principal",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")));
  assertThat(filter.requiresAuthentication(request,response)).isTrue();
  SecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("un","principal"));
  assertThat(filter.requiresAuthentication(request,response)).isTrue();
  SecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("un","principal","ROLE_ANONYMOUS"));
  assertThat(filter.requiresAuthentication(request,response)).isFalse();
}
