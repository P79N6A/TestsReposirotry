@Test public void loadAuthorizationRequestWhenMultipleSavedThenReturnMatchingAuthorizationRequest(){
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  String state1="state-1122";
  OAuth2AuthorizationRequest authorizationRequest1=createAuthorizationRequest().state(state1).build();
  this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest1,request,response);
  String state2="state-3344";
  OAuth2AuthorizationRequest authorizationRequest2=createAuthorizationRequest().state(state2).build();
  this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest2,request,response);
  String state3="state-5566";
  OAuth2AuthorizationRequest authorizationRequest3=createAuthorizationRequest().state(state3).build();
  this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest3,request,response);
  request.addParameter(OAuth2ParameterNames.STATE,state1);
  OAuth2AuthorizationRequest loadedAuthorizationRequest1=this.authorizationRequestRepository.loadAuthorizationRequest(request);
  assertThat(loadedAuthorizationRequest1).isEqualTo(authorizationRequest1);
  request.removeParameter(OAuth2ParameterNames.STATE);
  request.addParameter(OAuth2ParameterNames.STATE,state2);
  OAuth2AuthorizationRequest loadedAuthorizationRequest2=this.authorizationRequestRepository.loadAuthorizationRequest(request);
  assertThat(loadedAuthorizationRequest2).isEqualTo(authorizationRequest2);
  request.removeParameter(OAuth2ParameterNames.STATE);
  request.addParameter(OAuth2ParameterNames.STATE,state3);
  OAuth2AuthorizationRequest loadedAuthorizationRequest3=this.authorizationRequestRepository.loadAuthorizationRequest(request);
  assertThat(loadedAuthorizationRequest3).isEqualTo(authorizationRequest3);
}
