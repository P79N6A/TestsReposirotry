@Test public void doFilterWhenAuthorizationResponseAuthorizationRequestNotFoundThenAuthorizationRequestNotFoundError() throws Exception {
  String requestUri="/login/oauth2/code/" + this.registration2.getRegistrationId();
  MockHttpServletRequest request=new MockHttpServletRequest("GET",requestUri);
  request.setServletPath(requestUri);
  request.addParameter(OAuth2ParameterNames.CODE,"code");
  request.addParameter(OAuth2ParameterNames.STATE,"state");
  MockHttpServletResponse response=new MockHttpServletResponse();
  FilterChain filterChain=mock(FilterChain.class);
  this.filter.doFilter(request,response,filterChain);
  ArgumentCaptor<AuthenticationException> authenticationExceptionArgCaptor=ArgumentCaptor.forClass(AuthenticationException.class);
  verify(this.failureHandler).onAuthenticationFailure(any(HttpServletRequest.class),any(HttpServletResponse.class),authenticationExceptionArgCaptor.capture());
  assertThat(authenticationExceptionArgCaptor.getValue()).isInstanceOf(OAuth2AuthenticationException.class);
  OAuth2AuthenticationException authenticationException=(OAuth2AuthenticationException)authenticationExceptionArgCaptor.getValue();
  assertThat(authenticationException.getError().getErrorCode()).isEqualTo("authorization_request_not_found");
}
