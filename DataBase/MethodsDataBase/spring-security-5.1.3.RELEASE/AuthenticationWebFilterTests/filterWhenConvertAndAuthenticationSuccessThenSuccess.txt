@Test public void filterWhenConvertAndAuthenticationSuccessThenSuccess(){
  Mono<Authentication> authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER"));
  when(this.authenticationConverter.convert(any())).thenReturn(authentication);
  when(this.authenticationManager.authenticate(any())).thenReturn(authentication);
  when(this.successHandler.onAuthenticationSuccess(any(),any())).thenReturn(Mono.empty());
  when(this.securityContextRepository.save(any(),any())).thenAnswer(a -> Mono.just(a.getArguments()[0]));
  WebTestClient client=WebTestClientBuilder.bindToWebFilters(this.filter).build();
  client.get().uri("/").exchange().expectStatus().isOk().expectBody().isEmpty();
  verify(this.successHandler).onAuthenticationSuccess(any(),eq(authentication.block()));
  verify(this.securityContextRepository).save(any(),any());
  verifyZeroInteractions(this.failureHandler);
}
