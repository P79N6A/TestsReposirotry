@Test public void filterWhenDefaultsAndAuthenticationSuccessThenContinues(){
  when(this.authenticationManager.authenticate(any())).thenReturn(Mono.just(new TestingAuthenticationToken("test","this","ROLE")));
  this.filter=new AuthenticationWebFilter(this.authenticationManager);
  WebTestClient client=WebTestClientBuilder.bindToWebFilters(this.filter).build();
  EntityExchangeResult<String> result=client.get().uri("/").headers(headers -> headers.setBasicAuth("test","this")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")).returnResult();
  assertThat(result.getResponseCookies()).isEmpty();
}
