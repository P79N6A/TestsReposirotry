@Test public void handleWhenSecondMatchesThenOnlySecondInvoked() throws Exception {
  AccessDeniedHandler firstHandler=mock(AccessDeniedHandler.class);
  RequestMatcher firstMatcher=mock(RequestMatcher.class);
  AccessDeniedHandler secondHandler=mock(AccessDeniedHandler.class);
  RequestMatcher secondMatcher=mock(RequestMatcher.class);
  when(firstMatcher.matches(this.request)).thenReturn(false);
  when(secondMatcher.matches(this.request)).thenReturn(true);
  this.deniedHandlers.put(firstMatcher,firstHandler);
  this.deniedHandlers.put(secondMatcher,secondHandler);
  this.delegator=new RequestMatcherDelegatingAccessDeniedHandler(this.deniedHandlers,this.accessDeniedHandler);
  this.delegator.handle(this.request,null,null);
  verify(secondHandler).handle(this.request,null,null);
  verify(firstHandler,never()).handle(this.request,null,null);
  verify(this.accessDeniedHandler,never()).handle(this.request,null,null);
}
