@Test public void loadUserWhenUserInfoSuccessResponseThenReturnUser(){
  String userInfoResponse="{\n" + "	\"user-name\": \"user1\",\n" + "   \"first-name\": \"first\",\n"+ "   \"last-name\": \"last\",\n"+ "   \"middle-name\": \"middle\",\n"+ "   \"address\": \"address\",\n"+ "   \"email\": \"user1@example.com\"\n"+ "}\n";
  this.server.enqueue(jsonResponse(userInfoResponse));
  String userInfoUri=this.server.url("/user").toString();
  when(this.userInfoEndpoint.getUri()).thenReturn(userInfoUri);
  when(this.userInfoEndpoint.getAuthenticationMethod()).thenReturn(AuthenticationMethod.HEADER);
  when(this.userInfoEndpoint.getUserNameAttributeName()).thenReturn("user-name");
  when(this.accessToken.getTokenValue()).thenReturn("access-token");
  OAuth2User user=this.userService.loadUser(new OAuth2UserRequest(this.clientRegistration,this.accessToken));
  assertThat(user.getName()).isEqualTo("user1");
  assertThat(user.getAttributes().size()).isEqualTo(6);
  assertThat(user.getAttributes().get("user-name")).isEqualTo("user1");
  assertThat(user.getAttributes().get("first-name")).isEqualTo("first");
  assertThat(user.getAttributes().get("last-name")).isEqualTo("last");
  assertThat(user.getAttributes().get("middle-name")).isEqualTo("middle");
  assertThat(user.getAttributes().get("address")).isEqualTo("address");
  assertThat(user.getAttributes().get("email")).isEqualTo("user1@example.com");
  assertThat(user.getAuthorities().size()).isEqualTo(1);
  assertThat(user.getAuthorities().iterator().next()).isInstanceOf(OAuth2UserAuthority.class);
  OAuth2UserAuthority userAuthority=(OAuth2UserAuthority)user.getAuthorities().iterator().next();
  assertThat(userAuthority.getAuthority()).isEqualTo("ROLE_USER");
  assertThat(userAuthority.getAttributes()).isEqualTo(user.getAttributes());
}
