@Test public void filterWhenClientRegistrationIdAndServerWebExchangeFromContextThenServerWebExchangeFromContext(){
  OAuth2RefreshToken refreshToken=new OAuth2RefreshToken("refresh-token",this.accessToken.getIssuedAt());
  OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.registration,"principalName",this.accessToken,refreshToken);
  when(this.authorizedClientRepository.loadAuthorizedClient(any(),any(),any())).thenReturn(Mono.just(authorizedClient));
  when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(this.registration));
  ClientRequest request=ClientRequest.create(GET,URI.create("https://example.com")).attributes(clientRegistrationId(this.registration.getRegistrationId())).build();
  this.function.filter(request,this.exchange).subscriberContext(serverWebExchange()).block();
  verify(this.authorizedClientRepository).loadAuthorizedClient(eq(this.registration.getRegistrationId()),any(),eq(this.serverWebExchange));
}
