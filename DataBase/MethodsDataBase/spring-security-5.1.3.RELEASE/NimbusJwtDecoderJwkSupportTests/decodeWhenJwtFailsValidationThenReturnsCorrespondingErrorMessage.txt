@Test public void decodeWhenJwtFailsValidationThenReturnsCorrespondingErrorMessage() throws Exception {
  try (MockWebServer server=new MockWebServer()){
    server.enqueue(new MockResponse().setBody(JWK_SET));
    String jwkSetUrl=server.url("/.well-known/jwks.json").toString();
    NimbusJwtDecoderJwkSupport decoder=new NimbusJwtDecoderJwkSupport(jwkSetUrl);
    OAuth2Error failure=new OAuth2Error("mock-error","mock-description","mock-uri");
    OAuth2TokenValidator<Jwt> jwtValidator=mock(OAuth2TokenValidator.class);
    when(jwtValidator.validate(any(Jwt.class))).thenReturn(OAuth2TokenValidatorResult.failure(failure));
    decoder.setJwtValidator(jwtValidator);
    assertThatCode(() -> decoder.decode(SIGNED_JWT)).isInstanceOf(JwtValidationException.class).hasMessageContaining("mock-description");
  }
 }
