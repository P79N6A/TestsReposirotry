@Test public void callsAuthenticationFailureHandlerOnFailedAuthentication() throws Exception {
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockFilterChain chain=new MockFilterChain();
  ConcretePreAuthenticatedProcessingFilter filter=new ConcretePreAuthenticatedProcessingFilter();
  filter.setAuthenticationFailureHandler(new ForwardAuthenticationFailureHandler("/forwardUrl"));
  filter.setCheckForPrincipalChanges(true);
  AuthenticationManager am=mock(AuthenticationManager.class);
  when(am.authenticate(any(PreAuthenticatedAuthenticationToken.class))).thenThrow(new PreAuthenticatedCredentialsNotFoundException("invalid"));
  filter.setAuthenticationManager(am);
  filter.afterPropertiesSet();
  filter.doFilter(request,response,chain);
  verify(am).authenticate(any(PreAuthenticatedAuthenticationToken.class));
  assertThat(response.getForwardedUrl()).isEqualTo("/forwardUrl");
  assertThat(request.getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)).isNotNull();
}
