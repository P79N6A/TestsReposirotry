@Test public void callsAuthenticationSuccessHandlerOnSuccessfulAuthentication() throws Exception {
  Object currentPrincipal="currentUser";
  TestingAuthenticationToken authRequest=new TestingAuthenticationToken(currentPrincipal,"something","ROLE_USER");
  SecurityContextHolder.getContext().setAuthentication(authRequest);
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockFilterChain chain=new MockFilterChain();
  ConcretePreAuthenticatedProcessingFilter filter=new ConcretePreAuthenticatedProcessingFilter();
  filter.setAuthenticationSuccessHandler(new ForwardAuthenticationSuccessHandler("/forwardUrl"));
  filter.setCheckForPrincipalChanges(true);
  filter.principal="newUser";
  AuthenticationManager am=mock(AuthenticationManager.class);
  filter.setAuthenticationManager(am);
  filter.afterPropertiesSet();
  filter.doFilter(request,response,chain);
  verify(am).authenticate(any(PreAuthenticatedAuthenticationToken.class));
  assertThat(response.getForwardedUrl()).isEqualTo("/forwardUrl");
}
