@Test public void requiresAuthenticationFalsePrincipalUser() throws Exception {
  User currentPrincipal=new User("user","password",AuthorityUtils.createAuthorityList("ROLE_USER"));
  UsernamePasswordAuthenticationToken currentAuthentication=new UsernamePasswordAuthenticationToken(currentPrincipal,currentPrincipal.getPassword(),currentPrincipal.getAuthorities());
  SecurityContextHolder.getContext().setAuthentication(currentAuthentication);
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockFilterChain chain=new MockFilterChain();
  ConcretePreAuthenticatedProcessingFilter filter=new ConcretePreAuthenticatedProcessingFilter();
  filter.setCheckForPrincipalChanges(true);
  filter.principal=new User(currentPrincipal.getUsername(),currentPrincipal.getPassword(),AuthorityUtils.NO_AUTHORITIES);
  AuthenticationManager am=mock(AuthenticationManager.class);
  filter.setAuthenticationManager(am);
  filter.afterPropertiesSet();
  filter.doFilter(request,response,chain);
  verifyZeroInteractions(am);
}
