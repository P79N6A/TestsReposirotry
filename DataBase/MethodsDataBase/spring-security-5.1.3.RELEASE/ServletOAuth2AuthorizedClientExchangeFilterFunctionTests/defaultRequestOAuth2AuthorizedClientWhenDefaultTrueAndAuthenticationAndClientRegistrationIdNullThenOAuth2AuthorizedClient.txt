@Test public void defaultRequestOAuth2AuthorizedClientWhenDefaultTrueAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient(){
  this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.clientRegistrationRepository,this.authorizedClientRepository);
  this.function.setDefaultOAuth2AuthorizedClient(true);
  OAuth2User user=mock(OAuth2User.class);
  List<GrantedAuthority> authorities=AuthorityUtils.createAuthorityList("ROLE_USER");
  OAuth2AuthenticationToken token=new OAuth2AuthenticationToken(user,authorities,"id");
  OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.registration,"principalName",this.accessToken);
  when(this.authorizedClientRepository.loadAuthorizedClient(any(),any(),any())).thenReturn(authorizedClient);
  authentication(token).accept(this.result);
  Map<String,Object> attrs=getDefaultRequestAttributes();
  assertThat(getOAuth2AuthorizedClient(attrs)).isEqualTo(authorizedClient);
  verify(this.authorizedClientRepository).loadAuthorizedClient(eq(token.getAuthorizedClientRegistrationId()),any(),any());
}
