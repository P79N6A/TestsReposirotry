@Test public void loadUserWhenUserInfoSuccessResponseThenReturnUser() throws Exception {
  String userInfoResponse="{\n" + "	\"id\": \"user1\",\n" + "   \"first-name\": \"first\",\n"+ "   \"last-name\": \"last\",\n"+ "   \"middle-name\": \"middle\",\n"+ "   \"address\": \"address\",\n"+ "   \"email\": \"user1@example.com\"\n"+ "}\n";
  enqueueApplicationJsonBody(userInfoResponse);
  OAuth2User user=this.userService.loadUser(oauth2UserRequest()).block();
  assertThat(user.getName()).isEqualTo("user1");
  assertThat(user.getAttributes().size()).isEqualTo(6);
  assertThat(user.getAttributes().get("id")).isEqualTo("user1");
  assertThat(user.getAttributes().get("first-name")).isEqualTo("first");
  assertThat(user.getAttributes().get("last-name")).isEqualTo("last");
  assertThat(user.getAttributes().get("middle-name")).isEqualTo("middle");
  assertThat(user.getAttributes().get("address")).isEqualTo("address");
  assertThat(user.getAttributes().get("email")).isEqualTo("user1@example.com");
  assertThat(user.getAuthorities().size()).isEqualTo(1);
  assertThat(user.getAuthorities().iterator().next()).isInstanceOf(OAuth2UserAuthority.class);
  OAuth2UserAuthority userAuthority=(OAuth2UserAuthority)user.getAuthorities().iterator().next();
  assertThat(userAuthority.getAuthority()).isEqualTo("ROLE_USER");
  assertThat(userAuthority.getAttributes()).isEqualTo(user.getAttributes());
}
