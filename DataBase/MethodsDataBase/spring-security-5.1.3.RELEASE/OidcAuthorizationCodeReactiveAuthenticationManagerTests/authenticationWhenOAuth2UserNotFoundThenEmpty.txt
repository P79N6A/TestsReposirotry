@Test public void authenticationWhenOAuth2UserNotFoundThenEmpty(){
  OAuth2AccessTokenResponse accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.")).build();
  Map<String,Object> claims=new HashMap<>();
  claims.put(IdTokenClaimNames.ISS,"https://issuer.example.com");
  claims.put(IdTokenClaimNames.SUB,"rob");
  claims.put(IdTokenClaimNames.AUD,Arrays.asList("client-id"));
  Instant issuedAt=Instant.now();
  Instant expiresAt=Instant.from(issuedAt).plusSeconds(3600);
  Jwt idToken=new Jwt("id-token",issuedAt,expiresAt,claims,claims);
  when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(Mono.just(accessTokenResponse));
  when(this.userService.loadUser(any())).thenReturn(Mono.empty());
  when(this.jwtDecoder.decode(any())).thenReturn(Mono.just(idToken));
  this.manager.setDecoderFactory(c -> this.jwtDecoder);
  assertThat(this.manager.authenticate(loginToken()).block()).isNull();
}
