@Test public void removeAuthorizedClientWhenClient1Client2SavedAndClient1RemovedThenClient2NotRemoved(){
  OAuth2AuthorizedClient authorizedClient1=new OAuth2AuthorizedClient(this.registration1,this.principalName1,mock(OAuth2AccessToken.class));
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient1,null,this.exchange).block();
  OAuth2AuthorizedClient authorizedClient2=new OAuth2AuthorizedClient(this.registration2,this.principalName1,mock(OAuth2AccessToken.class));
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient2,null,this.exchange).block();
  this.authorizedClientRepository.removeAuthorizedClient(this.registrationId1,null,this.exchange).block();
  OAuth2AuthorizedClient loadedAuthorizedClient2=this.authorizedClientRepository.loadAuthorizedClient(this.registrationId2,null,this.exchange).block();
  assertThat(loadedAuthorizedClient2).isNotNull();
  assertThat(loadedAuthorizedClient2).isSameAs(authorizedClient2);
}
