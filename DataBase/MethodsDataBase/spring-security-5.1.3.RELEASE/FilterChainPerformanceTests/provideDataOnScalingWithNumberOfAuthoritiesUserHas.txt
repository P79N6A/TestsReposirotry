/** 
 * Creates data from 1 to N_AUTHORITIES in steps of 10, performing N_INVOCATIONS for each
 */
@Test public void provideDataOnScalingWithNumberOfAuthoritiesUserHas() throws Exception {
  StopWatch sw=new StopWatch("Scaling with nAuthorities");
  for (int user=0; user < N_AUTHORITIES / 10; user++) {
    int nAuthorities=user == 0 ? 1 : user * 10;
    SecurityContextHolder.getContext().setAuthentication(new UsernamePasswordAuthenticationToken("bob","bobspassword",createRoles(nAuthorities)));
    session.setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,SecurityContextHolder.getContext());
    SecurityContextHolder.clearContext();
    sw.start(Integer.toString(nAuthorities) + " authorities");
    runWithStack(minimalStack);
    System.out.println(sw.shortSummary());
    sw.stop();
  }
  System.out.println(sw.prettyPrint());
}
