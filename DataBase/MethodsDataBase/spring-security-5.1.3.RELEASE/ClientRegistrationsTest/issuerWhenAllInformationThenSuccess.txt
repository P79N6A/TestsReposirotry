@Test public void issuerWhenAllInformationThenSuccess() throws Exception {
  ClientRegistration registration=registration("");
  ClientRegistration.ProviderDetails provider=registration.getProviderDetails();
  assertThat(registration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.BASIC);
  assertThat(registration.getAuthorizationGrantType()).isEqualTo(AuthorizationGrantType.AUTHORIZATION_CODE);
  assertThat(registration.getRegistrationId()).isEqualTo(this.server.getHostName());
  assertThat(registration.getClientName()).isEqualTo(this.issuer);
  assertThat(registration.getScopes()).containsOnly("openid","email","profile");
  assertThat(provider.getAuthorizationUri()).isEqualTo("https://example.com/o/oauth2/v2/auth");
  assertThat(provider.getTokenUri()).isEqualTo("https://example.com/oauth2/v4/token");
  assertThat(provider.getJwkSetUri()).isEqualTo("https://example.com/oauth2/v3/certs");
  assertThat(provider.getConfigurationMetadata()).containsKeys("authorization_endpoint","claims_supported","code_challenge_methods_supported","id_token_signing_alg_values_supported","issuer","jwks_uri","response_types_supported","revocation_endpoint","scopes_supported","subject_types_supported","grant_types_supported","token_endpoint","token_endpoint_auth_methods_supported","userinfo_endpoint");
  assertThat(provider.getUserInfoEndpoint().getUri()).isEqualTo("https://example.com/oauth2/v3/userinfo");
}
