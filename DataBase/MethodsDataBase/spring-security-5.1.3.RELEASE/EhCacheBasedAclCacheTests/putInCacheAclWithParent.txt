@Test public void putInCacheAclWithParent() throws Exception {
  Authentication auth=new TestingAuthenticationToken("user","password","ROLE_GENERAL");
  auth.setAuthenticated(true);
  SecurityContextHolder.getContext().setAuthentication(auth);
  ObjectIdentity identityParent=new ObjectIdentityImpl(TARGET_CLASS,Long.valueOf(2));
  AclAuthorizationStrategy aclAuthorizationStrategy=new AclAuthorizationStrategyImpl(new SimpleGrantedAuthority("ROLE_OWNERSHIP"),new SimpleGrantedAuthority("ROLE_AUDITING"),new SimpleGrantedAuthority("ROLE_GENERAL"));
  MutableAcl parentAcl=new AclImpl(identityParent,Long.valueOf(2),aclAuthorizationStrategy,new ConsoleAuditLogger());
  acl.setParent(parentAcl);
  myCache.putInCache(acl);
  verify(cache,times(4)).put(element.capture());
  List<Element> allValues=element.getAllValues();
  assertThat(allValues.get(0).getKey()).isEqualTo(parentAcl.getObjectIdentity());
  assertThat(allValues.get(0).getObjectValue()).isEqualTo(parentAcl);
  assertThat(allValues.get(1).getKey()).isEqualTo(parentAcl.getId());
  assertThat(allValues.get(1).getObjectValue()).isEqualTo(parentAcl);
  assertThat(allValues.get(2).getKey()).isEqualTo(acl.getObjectIdentity());
  assertThat(allValues.get(2).getObjectValue()).isEqualTo(acl);
  assertThat(allValues.get(3).getKey()).isEqualTo(acl.getId());
  assertThat(allValues.get(3).getObjectValue()).isEqualTo(acl);
}
