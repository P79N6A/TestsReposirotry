@Test public void publishedEventIsReceivedbyListenerChildContext(){
  HttpSessionEventPublisher publisher=new HttpSessionEventPublisher();
  StaticWebApplicationContext context=new StaticWebApplicationContext();
  MockServletContext servletContext=new MockServletContext();
  servletContext.setAttribute("org.springframework.web.servlet.FrameworkServlet.CONTEXT.dispatcher",context);
  context.setServletContext(servletContext);
  context.registerSingleton("listener",MockApplicationListener.class,null);
  context.refresh();
  MockHttpSession session=new MockHttpSession(servletContext);
  MockApplicationListener listener=(MockApplicationListener)context.getBean("listener");
  HttpSessionEvent event=new HttpSessionEvent(session);
  publisher.sessionCreated(event);
  assertThat(listener.getCreatedEvent()).isNotNull();
  assertThat(listener.getDestroyedEvent()).isNull();
  assertThat(listener.getCreatedEvent().getSession()).isEqualTo(session);
  listener.setCreatedEvent(null);
  listener.setDestroyedEvent(null);
  publisher.sessionDestroyed(event);
  assertThat(listener.getDestroyedEvent()).isNotNull();
  assertThat(listener.getCreatedEvent()).isNull();
  assertThat(listener.getDestroyedEvent().getSession()).isEqualTo(session);
}
