@Test public void getTokenResponseWhenSuccessResponseInvalidThenThrowOAuth2AuthorizationException() throws Exception {
  this.exception.expect(OAuth2AuthorizationException.class);
  this.exception.expectMessage(containsString("invalid_token_response"));
  MockWebServer server=new MockWebServer();
  String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n";
  server.enqueue(new MockResponse().setHeader(HttpHeaders.CONTENT_TYPE,MediaType.APPLICATION_JSON_VALUE).setBody(accessTokenSuccessResponse));
  server.start();
  String tokenUri=server.url("/oauth2/token").toString();
  when(this.providerDetails.getTokenUri()).thenReturn(tokenUri);
  try {
    this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange));
  }
  finally {
    server.shutdown();
  }
}
