@Test public void testSessionInformationLifecycle() throws Exception {
  Object principal="Some principal object";
  String sessionId="1234567890";
  sessionRegistry.registerNewSession(sessionId,principal);
  Date currentDateTime=sessionRegistry.getSessionInformation(sessionId).getLastRequest();
  assertThat(sessionRegistry.getSessionInformation(sessionId).getPrincipal()).isEqualTo(principal);
  assertThat(sessionRegistry.getSessionInformation(sessionId).getSessionId()).isEqualTo(sessionId);
  assertThat(sessionRegistry.getSessionInformation(sessionId).getLastRequest()).isNotNull();
  assertThat(sessionRegistry.getAllSessions(principal,false)).hasSize(1);
  Thread.sleep(1000);
  sessionRegistry.refreshLastRequest(sessionId);
  Date retrieved=sessionRegistry.getSessionInformation(sessionId).getLastRequest();
  assertThat(retrieved.after(currentDateTime)).isTrue();
  assertThat(sessionRegistry.getAllSessions(principal,false).get(0).getLastRequest()).isCloseTo(retrieved,2000L);
  sessionRegistry.removeSessionInformation(sessionId);
  assertThat(sessionRegistry.getSessionInformation(sessionId)).isNull();
  assertThat(sessionRegistry.getAllSessions(principal,false)).isEmpty();
}
