@SuppressWarnings("rawtypes") @Test public void cacheOperationsAclWithParent() throws Exception {
  Cache cache=getCache();
  Map realCache=(Map)cache.getNativeCache();
  Authentication auth=new TestingAuthenticationToken("user","password","ROLE_GENERAL");
  auth.setAuthenticated(true);
  SecurityContextHolder.getContext().setAuthentication(auth);
  ObjectIdentity identity=new ObjectIdentityImpl(TARGET_CLASS,Long.valueOf(1));
  ObjectIdentity identityParent=new ObjectIdentityImpl(TARGET_CLASS,Long.valueOf(2));
  AclAuthorizationStrategy aclAuthorizationStrategy=new AclAuthorizationStrategyImpl(new SimpleGrantedAuthority("ROLE_OWNERSHIP"),new SimpleGrantedAuthority("ROLE_AUDITING"),new SimpleGrantedAuthority("ROLE_GENERAL"));
  AuditLogger auditLogger=new ConsoleAuditLogger();
  PermissionGrantingStrategy permissionGrantingStrategy=new DefaultPermissionGrantingStrategy(auditLogger);
  SpringCacheBasedAclCache myCache=new SpringCacheBasedAclCache(cache,permissionGrantingStrategy,aclAuthorizationStrategy);
  MutableAcl acl=new AclImpl(identity,Long.valueOf(1),aclAuthorizationStrategy,auditLogger);
  MutableAcl parentAcl=new AclImpl(identityParent,Long.valueOf(2),aclAuthorizationStrategy,auditLogger);
  acl.setParent(parentAcl);
  assertThat(realCache).isEmpty();
  myCache.putInCache(acl);
  assertThat(4).isEqualTo(realCache.size());
  AclImpl aclFromCache=(AclImpl)myCache.getFromCache(Long.valueOf(1));
  assertThat(aclFromCache).isEqualTo(acl);
  assertThat(FieldUtils.getFieldValue(aclFromCache.getParentAcl(),"aclAuthorizationStrategy")).isNotNull();
  assertThat(FieldUtils.getFieldValue(aclFromCache.getParentAcl(),"permissionGrantingStrategy")).isNotNull();
  assertThat(myCache.getFromCache(identity)).isEqualTo(acl);
  assertThat(FieldUtils.getFieldValue(aclFromCache,"aclAuthorizationStrategy")).isNotNull();
  AclImpl parentAclFromCache=(AclImpl)myCache.getFromCache(Long.valueOf(2));
  assertThat(parentAclFromCache).isEqualTo(parentAcl);
  assertThat(FieldUtils.getFieldValue(parentAclFromCache,"aclAuthorizationStrategy")).isNotNull();
  assertThat(myCache.getFromCache(identityParent)).isEqualTo(parentAcl);
}
