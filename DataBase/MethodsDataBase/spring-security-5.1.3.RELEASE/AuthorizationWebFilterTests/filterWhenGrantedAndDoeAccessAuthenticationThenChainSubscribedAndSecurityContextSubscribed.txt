@Test public void filterWhenGrantedAndDoeAccessAuthenticationThenChainSubscribedAndSecurityContextSubscribed(){
  PublisherProbe<SecurityContext> context=PublisherProbe.empty();
  when(this.chain.filter(this.exchange)).thenReturn(this.chainResult.mono());
  AuthorizationWebFilter filter=new AuthorizationWebFilter((a,e) -> a.map(auth -> new AuthorizationDecision(true)).defaultIfEmpty(new AuthorizationDecision(true)));
  Mono<Void> result=filter.filter(this.exchange,this.chain).subscriberContext(ReactiveSecurityContextHolder.withSecurityContext(context.mono()));
  StepVerifier.create(result).verifyComplete();
  this.chainResult.assertWasSubscribed();
  context.assertWasSubscribed();
}
