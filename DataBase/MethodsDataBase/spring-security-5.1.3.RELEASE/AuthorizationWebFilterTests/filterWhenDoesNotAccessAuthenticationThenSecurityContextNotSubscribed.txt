@Test public void filterWhenDoesNotAccessAuthenticationThenSecurityContextNotSubscribed(){
  PublisherProbe<SecurityContext> context=PublisherProbe.empty();
  when(this.chain.filter(this.exchange)).thenReturn(this.chainResult.mono());
  AuthorizationWebFilter filter=new AuthorizationWebFilter((a,e) -> Mono.error(new AccessDeniedException("Denied")));
  Mono<Void> result=filter.filter(this.exchange,this.chain).subscriberContext(ReactiveSecurityContextHolder.withSecurityContext(context.mono()));
  StepVerifier.create(result).expectError(AccessDeniedException.class).verify();
  this.chainResult.assertWasNotSubscribed();
  context.assertWasNotSubscribed();
}
