@Test public void filterWhenPrincipalAndGetPrincipalThenInteractAndUseOriginalPrincipal(){
  SecurityContextImpl context=new SecurityContextImpl(this.principal);
  when(this.repository.load(any())).thenReturn(Mono.just(context));
  this.handler=WebTestHandler.bindToWebFilters(this.filter,(e,c) -> ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).doOnSuccess(p -> assertThat(p).isSameAs(this.principal)).flatMap(p -> c.filter(e)));
  WebTestHandler.WebHandlerResult result=this.handler.exchange(this.exchange);
  this.securityContext.assertWasNotSubscribed();
}
