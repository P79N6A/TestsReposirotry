@Test @SuppressWarnings("unchecked") public void loadUserWhenUserServiceCanLoadThenReturnUser(){
  OAuth2UserService<OAuth2UserRequest,OAuth2User> userService1=mock(OAuth2UserService.class);
  OAuth2UserService<OAuth2UserRequest,OAuth2User> userService2=mock(OAuth2UserService.class);
  OAuth2UserService<OAuth2UserRequest,OAuth2User> userService3=mock(OAuth2UserService.class);
  OAuth2User mockUser=mock(OAuth2User.class);
  when(userService3.loadUser(any(OAuth2UserRequest.class))).thenReturn(mockUser);
  DelegatingOAuth2UserService<OAuth2UserRequest,OAuth2User> delegatingUserService=new DelegatingOAuth2UserService<>(Arrays.asList(userService1,userService2,userService3));
  OAuth2User loadedUser=delegatingUserService.loadUser(mock(OAuth2UserRequest.class));
  assertThat(loadedUser).isEqualTo(mockUser);
}
