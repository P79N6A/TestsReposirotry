@Test public void modificationOfAuthoritiesWorks(){
  UsernamePasswordAuthenticationToken auth=new UsernamePasswordAuthenticationToken("dano","hawaii50");
  SecurityContextHolder.getContext().setAuthentication(auth);
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.addParameter(SwitchUserFilter.SPRING_SECURITY_SWITCH_USERNAME_KEY,"jacklord");
  SwitchUserFilter filter=new SwitchUserFilter();
  filter.setUserDetailsService(new MockUserDetailsService());
  filter.setSwitchUserAuthorityChanger(new SwitchUserAuthorityChanger(){
    public Collection<GrantedAuthority> modifyGrantedAuthorities(    UserDetails targetUser,    Authentication currentAuthentication,    Collection<? extends GrantedAuthority> authoritiesToBeGranted){
      List<GrantedAuthority> auths=new ArrayList<>();
      auths.add(new SimpleGrantedAuthority("ROLE_NEW"));
      return auths;
    }
  }
);
  Authentication result=filter.attemptSwitchUser(request);
  assertThat(result != null).isTrue();
  assertThat(result.getAuthorities()).hasSize(2);
  assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities())).contains("ROLE_NEW");
}
