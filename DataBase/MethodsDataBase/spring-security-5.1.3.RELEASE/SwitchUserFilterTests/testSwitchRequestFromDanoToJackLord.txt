@Test public void testSwitchRequestFromDanoToJackLord() throws Exception {
  UsernamePasswordAuthenticationToken auth=new UsernamePasswordAuthenticationToken("dano","hawaii50");
  SecurityContextHolder.getContext().setAuthentication(auth);
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.setRequestURI("/webapp/login/impersonate");
  request.setContextPath("/webapp");
  request.addParameter(SwitchUserFilter.SPRING_SECURITY_SWITCH_USERNAME_KEY,"jacklord");
  MockHttpServletResponse response=new MockHttpServletResponse();
  SwitchUserFilter filter=new SwitchUserFilter();
  filter.setUserDetailsService(new MockUserDetailsService());
  filter.setSwitchUserUrl("/login/impersonate");
  filter.setSuccessHandler(new SimpleUrlAuthenticationSuccessHandler("/webapp/someOtherUrl"));
  FilterChain chain=mock(FilterChain.class);
  filter.doFilter(request,response,chain);
  verify(chain,never()).doFilter(request,response);
  Authentication targetAuth=SecurityContextHolder.getContext().getAuthentication();
  assertThat(targetAuth).isNotNull();
  assertThat(targetAuth.getPrincipal() instanceof UserDetails).isTrue();
  assertThat(((User)targetAuth.getPrincipal()).getUsername()).isEqualTo("jacklord");
}
