@Test public void genericsSuperclassDeclarationsAreIncludedWhenSubclassesOverride(){
  Method method=null;
  try {
    method=DepartmentServiceImpl.class.getMethod("someUserMethod3",new Class[]{Department.class});
  }
 catch (  NoSuchMethodException unexpected) {
    fail("Should be a superMethod called 'someUserMethod3' on class!");
  }
  Collection<ConfigAttribute> attrs=mds.findAttributes(method,DepartmentServiceImpl.class);
  assertThat(attrs).isNotNull();
  assertThat(attrs.size() == 1).as("Did not find 1 attribute").isTrue();
  for (  ConfigAttribute sc : attrs) {
    assertThat(sc.getAttribute()).as("Found an incorrect role").isEqualTo("ROLE_ADMIN");
  }
  Method superMethod=null;
  try {
    superMethod=DepartmentServiceImpl.class.getMethod("someUserMethod3",new Class[]{Entity.class});
  }
 catch (  NoSuchMethodException unexpected) {
    fail("Should be a superMethod called 'someUserMethod3' on class!");
  }
  Collection<ConfigAttribute> superAttrs=this.mds.findAttributes(superMethod,DepartmentServiceImpl.class);
  assertThat(superAttrs).isNotNull();
  assertThat(superAttrs).as("Did not find 1 attribute").hasSize(1);
  for (  ConfigAttribute sc : superAttrs) {
    assertThat(sc.getAttribute()).as("Found an incorrect role").isEqualTo("ROLE_ADMIN");
  }
}
