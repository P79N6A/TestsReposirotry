@Test public void getWhenUsingCustomAuthenticationManagerThenUsesItAccordingly(){
  this.spring.register(CustomAuthenticationManagerConfig.class).autowire();
  ReactiveAuthenticationManager authenticationManager=this.spring.getContext().getBean(ReactiveAuthenticationManager.class);
  when(authenticationManager.authenticate(any(Authentication.class))).thenReturn(Mono.error(new OAuth2AuthenticationException(new OAuth2Error("mock-failure"))));
  this.client.get().headers(headers -> headers.setBearerAuth(this.messageReadToken)).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"mock-failure\""));
}
