@Test public void testClosureDudeJDevelopersWithMembershipAsAttributeValues(){
  populator.setAttributeNames(new HashSet(Arrays.asList("member")));
  DirContextAdapter ctx=new DirContextAdapter("uid=closuredude,ou=people,dc=springframework,dc=org");
  Collection<GrantedAuthority> authorities=populator.getGrantedAuthorities(ctx,"closuredude");
  assertThat(authorities).hasSize(5);
  assertThat(authorities).isEqualTo(Arrays.asList(closureDevelopers,javaDevelopers,circularJavaDevelopers,jDevelopers,groovyDevelopers));
  LdapAuthority[] ldapAuthorities=authorities.toArray(new LdapAuthority[0]);
  assertThat(ldapAuthorities).hasSize(5);
  assertThat(ldapAuthorities[0].getAttributes().containsKey("member")).isTrue();
  assertThat(ldapAuthorities[0].getAttributes().get("member")).isNotNull();
  assertThat(ldapAuthorities[0].getAttributes().get("member")).hasSize(1);
  assertThat(ldapAuthorities[0].getFirstAttributeValue("member")).isEqualTo("uid=closuredude,ou=people,dc=springframework,dc=org");
  assertThat(ldapAuthorities[1].getAttributes().containsKey("member")).isTrue();
  assertThat(ldapAuthorities[1].getAttributes().get("member")).isNotNull();
  assertThat(ldapAuthorities[1].getAttributes().get("member")).hasSize(3);
  assertThat(groovyDevelopers.getDn()).isEqualTo(ldapAuthorities[1].getFirstAttributeValue("member"));
  assertThat(scalaDevelopers.getDn()).isEqualTo(ldapAuthorities[2].getAttributes().get("member"));
  assertThat(ldapAuthorities[2].getFirstAttributeValue("test")).isNull();
  assertThat(ldapAuthorities[2].getAttributeValues("test")).isNotNull();
  assertThat(ldapAuthorities[2].getAttributeValues("test")).isEmpty();
  assertThat(ldapAuthorities[3].getAuthority()).isEqualTo(jDevelopers.getAuthority());
}
