@Test public void testSecurityCheckPrincipalOwner() throws Exception {
  Authentication auth=new TestingAuthenticationToken("user","password","ROLE_ONE");
  auth.setAuthenticated(true);
  SecurityContextHolder.getContext().setAuthentication(auth);
  ObjectIdentity identity=new ObjectIdentityImpl(TARGET_CLASS,100);
  AclAuthorizationStrategy aclAuthorizationStrategy=new AclAuthorizationStrategyImpl(new SimpleGrantedAuthority("ROLE_OWNERSHIP"),new SimpleGrantedAuthority("ROLE_AUDITING"),new SimpleGrantedAuthority("ROLE_GENERAL"));
  Acl acl=new AclImpl(identity,1,aclAuthorizationStrategy,new DefaultPermissionGrantingStrategy(new ConsoleAuditLogger()),null,null,false,new PrincipalSid(auth));
  try {
    aclAuthorizationStrategy.securityCheck(acl,AclAuthorizationStrategy.CHANGE_GENERAL);
  }
 catch (  AccessDeniedException notExpected) {
    fail("It shouldn't have thrown AccessDeniedException");
  }
  try {
    aclAuthorizationStrategy.securityCheck(acl,AclAuthorizationStrategy.CHANGE_AUDITING);
    fail("It shouldn't have thrown AccessDeniedException");
  }
 catch (  NotFoundException expected) {
  }
  try {
    aclAuthorizationStrategy.securityCheck(acl,AclAuthorizationStrategy.CHANGE_OWNERSHIP);
  }
 catch (  AccessDeniedException notExpected) {
    fail("It shouldn't have thrown AccessDeniedException");
  }
}
