@Test public void testSecurityCheckWithMultipleACEs() throws Exception {
  Authentication auth=new TestingAuthenticationToken("user","password","ROLE_GENERAL");
  auth.setAuthenticated(true);
  SecurityContextHolder.getContext().setAuthentication(auth);
  ObjectIdentity identity=new ObjectIdentityImpl(TARGET_CLASS,new Long(100));
  AclAuthorizationStrategy aclAuthorizationStrategy=new AclAuthorizationStrategyImpl(new SimpleGrantedAuthority("ROLE_OWNERSHIP"),new SimpleGrantedAuthority("ROLE_AUDITING"),new SimpleGrantedAuthority("ROLE_GENERAL"));
  MutableAcl aclFirstDeny=new AclImpl(identity,new Long(1),aclAuthorizationStrategy,new ConsoleAuditLogger());
  aclFirstDeny.insertAce(0,BasePermission.ADMINISTRATION,new PrincipalSid(auth),false);
  aclAuthorizationStrategy.securityCheck(aclFirstDeny,AclAuthorizationStrategy.CHANGE_GENERAL);
  try {
    aclAuthorizationStrategy.securityCheck(aclFirstDeny,AclAuthorizationStrategy.CHANGE_AUDITING);
    fail("It should have thrown AccessDeniedException");
  }
 catch (  AccessDeniedException expected) {
  }
  try {
    aclAuthorizationStrategy.securityCheck(aclFirstDeny,AclAuthorizationStrategy.CHANGE_OWNERSHIP);
    fail("It should have thrown AccessDeniedException");
  }
 catch (  AccessDeniedException expected) {
  }
  aclFirstDeny.insertAce(1,BasePermission.ADMINISTRATION,new PrincipalSid(auth),true);
  try {
    aclAuthorizationStrategy.securityCheck(aclFirstDeny,AclAuthorizationStrategy.CHANGE_AUDITING);
    fail("It should have thrown AccessDeniedException");
  }
 catch (  AccessDeniedException expected) {
  }
  MutableAcl aclFirstAllow=new AclImpl(identity,new Long(1),aclAuthorizationStrategy,new ConsoleAuditLogger());
  aclFirstAllow.insertAce(0,BasePermission.ADMINISTRATION,new PrincipalSid(auth),true);
  aclAuthorizationStrategy.securityCheck(aclFirstAllow,AclAuthorizationStrategy.CHANGE_AUDITING);
  aclFirstAllow.insertAce(1,BasePermission.ADMINISTRATION,new PrincipalSid(auth),false);
  try {
    aclAuthorizationStrategy.securityCheck(aclFirstAllow,AclAuthorizationStrategy.CHANGE_AUDITING);
  }
 catch (  AccessDeniedException notExpected) {
    fail("It shouldn't have thrown AccessDeniedException");
  }
  MutableAcl aclNoACE=new AclImpl(identity,new Long(1),aclAuthorizationStrategy,new ConsoleAuditLogger());
  try {
    aclAuthorizationStrategy.securityCheck(aclNoACE,AclAuthorizationStrategy.CHANGE_AUDITING);
    fail("It should have thrown NotFoundException");
  }
 catch (  NotFoundException expected) {
  }
  try {
    aclAuthorizationStrategy.securityCheck(aclNoACE,AclAuthorizationStrategy.CHANGE_GENERAL);
  }
 catch (  NotFoundException expected) {
    fail("It shouldn't have thrown NotFoundException");
  }
}
