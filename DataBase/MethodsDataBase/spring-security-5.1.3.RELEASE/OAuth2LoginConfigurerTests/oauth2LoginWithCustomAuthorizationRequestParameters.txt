@Test public void oauth2LoginWithCustomAuthorizationRequestParameters() throws Exception {
  loadConfig(OAuth2LoginConfigCustomAuthorizationRequestResolver.class);
  OAuth2AuthorizationRequestResolver resolver=this.context.getBean(OAuth2LoginConfigCustomAuthorizationRequestResolver.class).resolver;
  OAuth2AuthorizationRequest result=OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://accounts.google.com/authorize").clientId("client-id").state("adsfa").authorizationRequestUri("https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=clientId&scope=openid+profile+email&state=state&redirect_uri=http%3A%2F%2Flocalhost%2Flogin%2Foauth2%2Fcode%2Fgoogle&custom-param1=custom-value1").build();
  when(resolver.resolve(any())).thenReturn(result);
  String requestUri="/oauth2/authorization/google";
  this.request=new MockHttpServletRequest("GET",requestUri);
  this.request.setServletPath(requestUri);
  this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain);
  assertThat(this.response.getRedirectedUrl()).isEqualTo("https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=clientId&scope=openid+profile+email&state=state&redirect_uri=http%3A%2F%2Flocalhost%2Flogin%2Foauth2%2Fcode%2Fgoogle&custom-param1=custom-value1");
}
