@Test public void authenticateWhenBadCredentialsAndPasswordManagerThenNoUpdate(){
  UsernamePasswordAuthenticationToken token=new UsernamePasswordAuthenticationToken("user","password");
  PasswordEncoder encoder=mock(PasswordEncoder.class);
  UserDetailsService userDetailsService=mock(UserDetailsService.class);
  UserDetailsPasswordService passwordManager=mock(UserDetailsPasswordService.class);
  DaoAuthenticationProvider provider=new DaoAuthenticationProvider();
  provider.setPasswordEncoder(encoder);
  provider.setUserDetailsService(userDetailsService);
  provider.setUserDetailsPasswordService(passwordManager);
  UserDetails user=PasswordEncodedUser.user();
  when(encoder.matches(any(),any())).thenReturn(false);
  when(userDetailsService.loadUserByUsername(any())).thenReturn(user);
  assertThatThrownBy(() -> provider.authenticate(token)).isInstanceOf(BadCredentialsException.class);
  verifyZeroInteractions(passwordManager);
}
