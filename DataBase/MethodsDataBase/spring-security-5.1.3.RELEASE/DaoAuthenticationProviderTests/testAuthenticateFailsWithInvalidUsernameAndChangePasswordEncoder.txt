@Test public void testAuthenticateFailsWithInvalidUsernameAndChangePasswordEncoder(){
  UsernamePasswordAuthenticationToken token=new UsernamePasswordAuthenticationToken("INVALID_USER","koala");
  DaoAuthenticationProvider provider=createProvider();
  assertThat(provider.isHideUserNotFoundExceptions()).isTrue();
  provider.setUserDetailsService(new MockUserDetailsServiceUserRod());
  provider.setUserCache(new MockUserCache());
  try {
    provider.authenticate(token);
    fail("Should have thrown BadCredentialsException");
  }
 catch (  BadCredentialsException expected) {
  }
  provider.setPasswordEncoder(PasswordEncoderFactories.createDelegatingPasswordEncoder());
  try {
    provider.authenticate(token);
    fail("Should have thrown BadCredentialsException");
  }
 catch (  BadCredentialsException expected) {
  }
}
