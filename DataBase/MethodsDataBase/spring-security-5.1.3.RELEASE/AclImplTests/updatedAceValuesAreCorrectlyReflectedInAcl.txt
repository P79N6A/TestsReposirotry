@Test public void updatedAceValuesAreCorrectlyReflectedInAcl() throws Exception {
  Authentication auth=new TestingAuthenticationToken("ben","ignored","ROLE_GENERAL");
  auth.setAuthenticated(true);
  SecurityContextHolder.getContext().setAuthentication(auth);
  MutableAcl acl=new AclImpl(objectIdentity,1,authzStrategy,pgs,null,null,false,new PrincipalSid("joe"));
  MockAclService service=new MockAclService();
  acl.insertAce(0,BasePermission.READ,new GrantedAuthoritySid("ROLE_USER_READ"),true);
  acl.insertAce(1,BasePermission.WRITE,new GrantedAuthoritySid("ROLE_USER_READ"),true);
  acl.insertAce(2,BasePermission.CREATE,new PrincipalSid("ben"),true);
  service.updateAcl(acl);
  assertThat(BasePermission.READ).isEqualTo(acl.getEntries().get(0).getPermission());
  assertThat(BasePermission.WRITE).isEqualTo(acl.getEntries().get(1).getPermission());
  assertThat(BasePermission.CREATE).isEqualTo(acl.getEntries().get(2).getPermission());
  acl.updateAce(0,BasePermission.CREATE);
  acl.updateAce(1,BasePermission.DELETE);
  acl.updateAce(2,BasePermission.READ);
  assertThat(BasePermission.CREATE).isEqualTo(acl.getEntries().get(0).getPermission());
  assertThat(BasePermission.DELETE).isEqualTo(acl.getEntries().get(1).getPermission());
  assertThat(BasePermission.READ).isEqualTo(acl.getEntries().get(2).getPermission());
}
