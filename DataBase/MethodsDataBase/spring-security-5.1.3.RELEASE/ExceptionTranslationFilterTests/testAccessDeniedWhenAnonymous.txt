@Test public void testAccessDeniedWhenAnonymous() throws Exception {
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.setServletPath("/secure/page.html");
  request.setServerPort(80);
  request.setScheme("http");
  request.setServerName("www.example.com");
  request.setContextPath("/mycontext");
  request.setRequestURI("/mycontext/secure/page.html");
  FilterChain fc=mock(FilterChain.class);
  doThrow(new AccessDeniedException("")).when(fc).doFilter(any(HttpServletRequest.class),any(HttpServletResponse.class));
  SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("ignored","ignored",AuthorityUtils.createAuthorityList("IGNORED")));
  ExceptionTranslationFilter filter=new ExceptionTranslationFilter(mockEntryPoint);
  filter.setAuthenticationTrustResolver(new AuthenticationTrustResolverImpl());
  assertThat(filter.getAuthenticationTrustResolver()).isNotNull();
  MockHttpServletResponse response=new MockHttpServletResponse();
  filter.doFilter(request,response,fc);
  assertThat(response.getRedirectedUrl()).isEqualTo("/mycontext/login.jsp");
  assertThat(getSavedRequestUrl(request)).isEqualTo("http://www.example.com/mycontext/secure/page.html");
}
