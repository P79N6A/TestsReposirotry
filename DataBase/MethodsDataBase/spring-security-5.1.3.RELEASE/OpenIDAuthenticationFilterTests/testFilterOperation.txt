@Test public void testFilterOperation() throws Exception {
  MockHttpServletRequest req=new MockHttpServletRequest();
  req.setServletPath(REQUEST_PATH);
  req.setRequestURI(REQUEST_PATH);
  req.setServerPort(8080);
  MockHttpServletResponse response=new MockHttpServletResponse();
  req.setParameter("openid_identifier"," " + CLAIMED_IDENTITY_URL);
  req.setRemoteHost("www.example.com");
  filter.setConsumer(new MockOpenIDConsumer(){
    public String beginConsumption(    HttpServletRequest req,    String claimedIdentity,    String returnToUrl,    String realm) throws OpenIDConsumerException {
      assertThat(claimedIdentity).isEqualTo(CLAIMED_IDENTITY_URL);
      assertThat(returnToUrl).isEqualTo(DEFAULT_TARGET_URL);
      assertThat(realm).isEqualTo("http://localhost:8080/");
      return REDIRECT_URL;
    }
  }
);
  FilterChain fc=mock(FilterChain.class);
  filter.doFilter(req,response,fc);
  assertThat(response.getRedirectedUrl()).isEqualTo(REDIRECT_URL);
  verify(fc,never()).doFilter(any(HttpServletRequest.class),any(HttpServletResponse.class));
}
