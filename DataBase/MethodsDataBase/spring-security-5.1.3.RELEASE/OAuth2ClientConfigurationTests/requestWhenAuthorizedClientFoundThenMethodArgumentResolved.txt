@Test public void requestWhenAuthorizedClientFoundThenMethodArgumentResolved() throws Exception {
  String clientRegistrationId="client1";
  String principalName="user1";
  TestingAuthenticationToken authentication=new TestingAuthenticationToken(principalName,"password");
  OAuth2AuthorizedClientRepository authorizedClientRepository=mock(OAuth2AuthorizedClientRepository.class);
  OAuth2AuthorizedClient authorizedClient=mock(OAuth2AuthorizedClient.class);
  when(authorizedClientRepository.loadAuthorizedClient(eq(clientRegistrationId),eq(authentication),any(HttpServletRequest.class))).thenReturn(authorizedClient);
  OAuth2AccessToken accessToken=mock(OAuth2AccessToken.class);
  when(authorizedClient.getAccessToken()).thenReturn(accessToken);
  OAuth2AuthorizedClientArgumentResolverConfig.AUTHORIZED_CLIENT_REPOSITORY=authorizedClientRepository;
  this.spring.register(OAuth2AuthorizedClientArgumentResolverConfig.class).autowire();
  this.mockMvc.perform(get("/authorized-client").with(authentication(authentication))).andExpect(status().isOk()).andExpect(content().string("resolved"));
}
