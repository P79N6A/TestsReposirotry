/** 
 * Test created from SEC-590.
 */
@Test public void testReadAllObjectIdentitiesWhenLastElementIsAlreadyCached() throws Exception {
  String query="INSERT INTO acl_object_identity(ID,OBJECT_ID_CLASS,OBJECT_ID_IDENTITY,PARENT_OBJECT,OWNER_SID,ENTRIES_INHERITING) VALUES (6,2,105,null,1,1);" + "INSERT INTO acl_object_identity(ID,OBJECT_ID_CLASS,OBJECT_ID_IDENTITY,PARENT_OBJECT,OWNER_SID,ENTRIES_INHERITING) VALUES (7,2,106,6,1,1);" + "INSERT INTO acl_object_identity(ID,OBJECT_ID_CLASS,OBJECT_ID_IDENTITY,PARENT_OBJECT,OWNER_SID,ENTRIES_INHERITING) VALUES (8,2,107,6,1,1);"+ "INSERT INTO acl_object_identity(ID,OBJECT_ID_CLASS,OBJECT_ID_IDENTITY,PARENT_OBJECT,OWNER_SID,ENTRIES_INHERITING) VALUES (9,2,108,7,1,1);"+ "INSERT INTO acl_entry(ID,ACL_OBJECT_IDENTITY,ACE_ORDER,SID,MASK,GRANTING,AUDIT_SUCCESS,AUDIT_FAILURE) VALUES (7,6,0,1,1,1,0,0)";
  getJdbcTemplate().execute(query);
  ObjectIdentity grandParentOid=new ObjectIdentityImpl(TARGET_CLASS,new Long(104));
  ObjectIdentity parent1Oid=new ObjectIdentityImpl(TARGET_CLASS,new Long(105));
  ObjectIdentity parent2Oid=new ObjectIdentityImpl(TARGET_CLASS,Integer.valueOf(106));
  ObjectIdentity childOid=new ObjectIdentityImpl(TARGET_CLASS,Integer.valueOf(107));
  List<Permission> checkPermission=Arrays.asList(BasePermission.READ);
  List<Sid> sids=Arrays.asList(BEN_SID);
  List<ObjectIdentity> childOids=Arrays.asList(childOid);
  strategy.setBatchSize(6);
  Map<ObjectIdentity,Acl> foundAcls=strategy.readAclsById(childOids,sids);
  Acl foundChildAcl=foundAcls.get(childOid);
  assertThat(foundChildAcl).isNotNull();
  assertThat(foundChildAcl.isGranted(checkPermission,sids,false)).isTrue();
  List<ObjectIdentity> allOids=Arrays.asList(grandParentOid,parent1Oid,parent2Oid,childOid);
  try {
    foundAcls=strategy.readAclsById(allOids,sids);
  }
 catch (  NotFoundException notExpected) {
    fail("It shouldn't have thrown NotFoundException");
  }
  Acl foundParent2Acl=foundAcls.get(parent2Oid);
  assertThat(foundParent2Acl).isNotNull();
  assertThat(foundParent2Acl.isGranted(checkPermission,sids,false)).isTrue();
}
