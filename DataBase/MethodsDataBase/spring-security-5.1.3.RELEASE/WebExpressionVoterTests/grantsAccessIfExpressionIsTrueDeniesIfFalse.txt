@Test public void grantsAccessIfExpressionIsTrueDeniesIfFalse(){
  WebExpressionVoter voter=new WebExpressionVoter();
  Expression ex=mock(Expression.class);
  EvaluationContextPostProcessor postProcessor=mock(EvaluationContextPostProcessor.class);
  when(postProcessor.postProcess(any(EvaluationContext.class),any(FilterInvocation.class))).thenAnswer(invocation -> invocation.getArgument(0));
  WebExpressionConfigAttribute weca=new WebExpressionConfigAttribute(ex,postProcessor);
  EvaluationContext ctx=mock(EvaluationContext.class);
  SecurityExpressionHandler eh=mock(SecurityExpressionHandler.class);
  FilterInvocation fi=new FilterInvocation("/path","GET");
  voter.setExpressionHandler(eh);
  when(eh.createEvaluationContext(user,fi)).thenReturn(ctx);
  when(ex.getValue(ctx,Boolean.class)).thenReturn(Boolean.TRUE).thenReturn(Boolean.FALSE);
  ArrayList attributes=new ArrayList();
  attributes.addAll(SecurityConfig.createList("A","B","C"));
  attributes.add(weca);
  assertThat(voter.vote(user,fi,attributes)).isEqualTo(AccessDecisionVoter.ACCESS_GRANTED);
  assertThat(voter.vote(user,fi,attributes)).isEqualTo(AccessDecisionVoter.ACCESS_DENIED);
}
