@Test public void loginSuccessNormalWithNonUserDetailsBasedPrincipalSetsExpectedCookie(){
  services.setTokenValiditySeconds(500000000);
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.addParameter(TokenBasedRememberMeServices.DEFAULT_PARAMETER,"true");
  MockHttpServletResponse response=new MockHttpServletResponse();
  services.loginSuccess(request,response,new TestingAuthenticationToken("someone","password","ROLE_ABC"));
  Cookie cookie=response.getCookie(SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY);
  String expiryTime=services.decodeCookie(cookie.getValue())[1];
  long expectedExpiryTime=1000L * 500000000;
  expectedExpiryTime+=System.currentTimeMillis();
  assertThat(Long.parseLong(expiryTime) > expectedExpiryTime - 10000).isTrue();
  assertThat(cookie).isNotNull();
  assertThat(cookie.getMaxAge()).isEqualTo(services.getTokenValiditySeconds());
  assertThat(Base64.isArrayByteBase64(cookie.getValue().getBytes())).isTrue();
  assertThat(new Date().before(new Date(determineExpiryTimeFromBased64EncodedToken(cookie.getValue())))).isTrue();
}
