@Test public void testNormalOperationWithDefaultFilterProcessesUrl() throws Exception {
  MockHttpServletRequest request=createMockAuthenticationRequest();
  HttpSession sessionPreAuth=request.getSession();
  MockFilterConfig config=new MockFilterConfig(null,null);
  MockFilterChain chain=new MockFilterChain(false);
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockAuthenticationFilter filter=new MockAuthenticationFilter(true);
  filter.setFilterProcessesUrl("/j_mock_post");
  filter.setSessionAuthenticationStrategy(mock(SessionAuthenticationStrategy.class));
  filter.setAuthenticationSuccessHandler(successHandler);
  filter.setAuthenticationFailureHandler(failureHandler);
  filter.setAuthenticationManager(mock(AuthenticationManager.class));
  filter.afterPropertiesSet();
  filter.doFilter(request,response,chain);
  assertThat(response.getRedirectedUrl()).isEqualTo("/mycontext/logged_in.jsp");
  assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull();
  assertThat(SecurityContextHolder.getContext().getAuthentication().getPrincipal().toString()).isEqualTo("test");
  assertThat(request.getSession()).isEqualTo(sessionPreAuth);
}
