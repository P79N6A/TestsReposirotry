@Test public void objectsAreRemovedIfPermissionDenied() throws Exception {
  AclService service=mock(AclService.class);
  Acl acl=mock(Acl.class);
  when(acl.isGranted(any(),any(),anyBoolean())).thenReturn(false);
  when(service.readAclById(any(),any())).thenReturn(acl);
  AclEntryAfterInvocationCollectionFilteringProvider provider=new AclEntryAfterInvocationCollectionFilteringProvider(service,Arrays.asList(mock(Permission.class)));
  provider.setObjectIdentityRetrievalStrategy(mock(ObjectIdentityRetrievalStrategy.class));
  provider.setProcessDomainObjectClass(Object.class);
  provider.setSidRetrievalStrategy(mock(SidRetrievalStrategy.class));
  Object returned=provider.decide(mock(Authentication.class),new Object(),SecurityConfig.createList("AFTER_ACL_COLLECTION_READ"),new ArrayList(Arrays.asList(new Object(),new Object())));
  assertThat(returned).isInstanceOf(List.class);
  assertThat(((List)returned)).isEmpty();
  returned=provider.decide(mock(Authentication.class),new Object(),SecurityConfig.createList("UNSUPPORTED","AFTER_ACL_COLLECTION_READ"),new Object[]{new Object(),new Object()});
  assertThat(returned instanceof Object[]).isTrue();
  assertThat(((Object[])returned).length == 0).isTrue();
}
