/** 
 * Test method that demonstrates eviction failure from cache - SEC-676
 */
@Test @Transactional public void deleteAclAlsoDeletesChildren() throws Exception {
  SecurityContextHolder.getContext().setAuthentication(auth);
  jdbcMutableAclService.createAcl(getTopParentOid());
  MutableAcl middleParent=jdbcMutableAclService.createAcl(getMiddleParentOid());
  MutableAcl child=jdbcMutableAclService.createAcl(getChildOid());
  child.setParent(middleParent);
  jdbcMutableAclService.updateAcl(middleParent);
  jdbcMutableAclService.updateAcl(child);
  Acl childAcl=jdbcMutableAclService.readAclById(getChildOid());
  assertThat(childAcl.getParentAcl().getObjectIdentity()).isEqualTo(getMiddleParentOid());
  jdbcMutableAclService.deleteAcl(getMiddleParentOid(),true);
  try {
    jdbcMutableAclService.readAclById(getMiddleParentOid());
    fail("It should have thrown NotFoundException");
  }
 catch (  NotFoundException expected) {
  }
  try {
    jdbcMutableAclService.readAclById(getChildOid());
    fail("It should have thrown NotFoundException");
  }
 catch (  NotFoundException expected) {
  }
  Acl acl=jdbcMutableAclService.readAclById(getTopParentOid());
  assertThat(acl).isNotNull();
  assertThat(getTopParentOid()).isEqualTo(((MutableAcl)acl).getObjectIdentity());
}
