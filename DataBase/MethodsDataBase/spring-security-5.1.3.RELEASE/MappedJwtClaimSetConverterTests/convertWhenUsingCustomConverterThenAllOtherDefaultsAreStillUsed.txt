@Test public void convertWhenUsingCustomConverterThenAllOtherDefaultsAreStillUsed() throws Exception {
  Converter<Object,String> claimConverter=mock(Converter.class);
  MappedJwtClaimSetConverter converter=MappedJwtClaimSetConverter.withDefaults(Collections.singletonMap(JwtClaimNames.SUB,claimConverter));
  when(claimConverter.convert(any(Object.class))).thenReturn("1234");
  Map<String,Object> source=new HashMap<>();
  source.put(JwtClaimNames.JTI,1);
  source.put(JwtClaimNames.AUD,"audience");
  source.put(JwtClaimNames.EXP,Instant.ofEpochSecond(2000000000L));
  source.put(JwtClaimNames.IAT,new Date(1000000000000L));
  source.put(JwtClaimNames.ISS,URI.create("https://any.url"));
  source.put(JwtClaimNames.NBF,"1000000000");
  source.put(JwtClaimNames.SUB,2345);
  Map<String,Object> target=converter.convert(source);
  assertThat(target.get(JwtClaimNames.JTI)).isEqualTo("1");
  assertThat(target.get(JwtClaimNames.AUD)).isEqualTo(Arrays.asList("audience"));
  assertThat(target.get(JwtClaimNames.EXP)).isEqualTo(Instant.ofEpochSecond(2000000000L));
  assertThat(target.get(JwtClaimNames.IAT)).isEqualTo(Instant.ofEpochSecond(1000000000L));
  assertThat(target.get(JwtClaimNames.ISS)).isEqualTo("https://any.url");
  assertThat(target.get(JwtClaimNames.NBF)).isEqualTo(Instant.ofEpochSecond(1000000000L));
  assertThat(target.get(JwtClaimNames.SUB)).isEqualTo("1234");
}
