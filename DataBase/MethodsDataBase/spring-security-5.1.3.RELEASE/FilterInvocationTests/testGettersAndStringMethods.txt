@Test public void testGettersAndStringMethods(){
  MockHttpServletRequest request=new MockHttpServletRequest(null,null);
  request.setServletPath("/HelloWorld");
  request.setPathInfo("/some/more/segments.html");
  request.setServerName("www.example.com");
  request.setScheme("http");
  request.setServerPort(80);
  request.setContextPath("/mycontext");
  request.setRequestURI("/mycontext/HelloWorld/some/more/segments.html");
  MockHttpServletResponse response=new MockHttpServletResponse();
  FilterChain chain=mock(FilterChain.class);
  FilterInvocation fi=new FilterInvocation(request,response,chain);
  assertThat(fi.getRequest()).isEqualTo(request);
  assertThat(fi.getHttpRequest()).isEqualTo(request);
  assertThat(fi.getResponse()).isEqualTo(response);
  assertThat(fi.getHttpResponse()).isEqualTo(response);
  assertThat(fi.getChain()).isEqualTo(chain);
  assertThat(fi.getRequestUrl()).isEqualTo("/HelloWorld/some/more/segments.html");
  assertThat(fi.toString()).isEqualTo("FilterInvocation: URL: /HelloWorld/some/more/segments.html");
  assertThat(fi.getFullRequestUrl()).isEqualTo("http://www.example.com/mycontext/HelloWorld/some/more/segments.html");
}
