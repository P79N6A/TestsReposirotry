@Test public void validateWhenAllValidatorsSucceedThenReturnsSuccessfulResult(){
  OAuth2TokenValidator<AbstractOAuth2Token> firstSuccess=mock(OAuth2TokenValidator.class);
  OAuth2TokenValidator<AbstractOAuth2Token> secondSuccess=mock(OAuth2TokenValidator.class);
  when(firstSuccess.validate(any(AbstractOAuth2Token.class))).thenReturn(OAuth2TokenValidatorResult.success());
  when(secondSuccess.validate(any(AbstractOAuth2Token.class))).thenReturn(OAuth2TokenValidatorResult.success());
  DelegatingOAuth2TokenValidator<AbstractOAuth2Token> tokenValidator=new DelegatingOAuth2TokenValidator<>(Arrays.asList(firstSuccess,secondSuccess));
  AbstractOAuth2Token token=mock(AbstractOAuth2Token.class);
  OAuth2TokenValidatorResult result=tokenValidator.validate(token);
  assertThat(result.hasErrors()).isFalse();
  assertThat(result.getErrors()).isEmpty();
}
