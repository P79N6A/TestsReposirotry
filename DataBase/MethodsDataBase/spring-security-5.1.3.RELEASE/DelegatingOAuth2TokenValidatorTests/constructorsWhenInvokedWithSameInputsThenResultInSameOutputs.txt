@Test public void constructorsWhenInvokedWithSameInputsThenResultInSameOutputs(){
  OAuth2TokenValidator<AbstractOAuth2Token> firstSuccess=mock(OAuth2TokenValidator.class);
  OAuth2TokenValidator<AbstractOAuth2Token> secondSuccess=mock(OAuth2TokenValidator.class);
  when(firstSuccess.validate(any(AbstractOAuth2Token.class))).thenReturn(OAuth2TokenValidatorResult.success());
  when(secondSuccess.validate(any(AbstractOAuth2Token.class))).thenReturn(OAuth2TokenValidatorResult.success());
  DelegatingOAuth2TokenValidator<AbstractOAuth2Token> firstValidator=new DelegatingOAuth2TokenValidator<>(Arrays.asList(firstSuccess,secondSuccess));
  DelegatingOAuth2TokenValidator<AbstractOAuth2Token> secondValidator=new DelegatingOAuth2TokenValidator<>(firstSuccess,secondSuccess);
  AbstractOAuth2Token token=mock(AbstractOAuth2Token.class);
  firstValidator.validate(token);
  secondValidator.validate(token);
  verify(firstSuccess,times(2)).validate(token);
  verify(secondSuccess,times(2)).validate(token);
}
