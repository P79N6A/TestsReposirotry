@Test public void validateWhenAnyValidatorFailsThenReturnsFailureResultContainingDetailFromFailingValidator(){
  OAuth2TokenValidator<AbstractOAuth2Token> success=mock(OAuth2TokenValidator.class);
  OAuth2TokenValidator<AbstractOAuth2Token> failure=mock(OAuth2TokenValidator.class);
  when(success.validate(any(AbstractOAuth2Token.class))).thenReturn(OAuth2TokenValidatorResult.success());
  when(failure.validate(any(AbstractOAuth2Token.class))).thenReturn(OAuth2TokenValidatorResult.failure(DETAIL));
  DelegatingOAuth2TokenValidator<AbstractOAuth2Token> tokenValidator=new DelegatingOAuth2TokenValidator<>(Arrays.asList(success,failure));
  AbstractOAuth2Token token=mock(AbstractOAuth2Token.class);
  OAuth2TokenValidatorResult result=tokenValidator.validate(token);
  assertThat(result.hasErrors()).isTrue();
  assertThat(result.getErrors()).containsExactly(DETAIL);
}
