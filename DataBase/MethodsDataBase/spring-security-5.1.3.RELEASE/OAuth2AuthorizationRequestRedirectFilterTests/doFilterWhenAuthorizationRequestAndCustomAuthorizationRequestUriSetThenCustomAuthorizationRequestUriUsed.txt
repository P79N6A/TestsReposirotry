@Test public void doFilterWhenAuthorizationRequestAndCustomAuthorizationRequestUriSetThenCustomAuthorizationRequestUriUsed() throws Exception {
  String requestUri=OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI + "/" + this.registration1.getRegistrationId();
  MockHttpServletRequest request=new MockHttpServletRequest("GET",requestUri);
  request.setServletPath(requestUri);
  String loginHintParamName="login_hint";
  request.addParameter(loginHintParamName,"user@provider.com");
  MockHttpServletResponse response=new MockHttpServletResponse();
  FilterChain filterChain=mock(FilterChain.class);
  OAuth2AuthorizationRequestResolver defaultAuthorizationRequestResolver=new DefaultOAuth2AuthorizationRequestResolver(this.clientRegistrationRepository,OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI);
  OAuth2AuthorizationRequestResolver resolver=mock(OAuth2AuthorizationRequestResolver.class);
  OAuth2AuthorizationRequest defaultAuthorizationRequest=defaultAuthorizationRequestResolver.resolve(request);
  Map<String,Object> additionalParameters=new HashMap<>(defaultAuthorizationRequest.getAdditionalParameters());
  additionalParameters.put(loginHintParamName,request.getParameter(loginHintParamName));
  String customAuthorizationRequestUri=UriComponentsBuilder.fromUriString(defaultAuthorizationRequest.getAuthorizationRequestUri()).queryParam(loginHintParamName,additionalParameters.get(loginHintParamName)).build(true).toUriString();
  OAuth2AuthorizationRequest result=OAuth2AuthorizationRequest.from(defaultAuthorizationRequestResolver.resolve(request)).additionalParameters(Collections.singletonMap("idp",request.getParameter("idp"))).authorizationRequestUri(customAuthorizationRequestUri).build();
  when(resolver.resolve(any())).thenReturn(result);
  OAuth2AuthorizationRequestRedirectFilter filter=new OAuth2AuthorizationRequestRedirectFilter(resolver);
  filter.doFilter(request,response,filterChain);
  verifyZeroInteractions(filterChain);
  assertThat(response.getRedirectedUrl()).matches("https://example.com/login/oauth/authorize\\?response_type=code&client_id=client-id&scope=read%3Auser&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Flogin%2Foauth2%2Fcode%2Fregistration-id&login_hint=user@provider\\.com");
}
