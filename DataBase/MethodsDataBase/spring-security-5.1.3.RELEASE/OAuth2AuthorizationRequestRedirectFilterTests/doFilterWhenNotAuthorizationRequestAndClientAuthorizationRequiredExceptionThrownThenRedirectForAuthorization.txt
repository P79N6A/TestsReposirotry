@Test public void doFilterWhenNotAuthorizationRequestAndClientAuthorizationRequiredExceptionThrownThenRedirectForAuthorization() throws Exception {
  String requestUri="/path";
  MockHttpServletRequest request=new MockHttpServletRequest("GET",requestUri);
  request.setServletPath(requestUri);
  MockHttpServletResponse response=new MockHttpServletResponse();
  FilterChain filterChain=mock(FilterChain.class);
  doThrow(new ClientAuthorizationRequiredException(this.registration1.getRegistrationId())).when(filterChain).doFilter(any(ServletRequest.class),any(ServletResponse.class));
  this.filter.doFilter(request,response,filterChain);
  verify(filterChain).doFilter(any(HttpServletRequest.class),any(HttpServletResponse.class));
  assertThat(response.getRedirectedUrl()).matches("https://example.com/login/oauth/authorize\\?response_type=code&client_id=client-id&scope=read%3Auser&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fauthorize%2Foauth2%2Fcode%2Fregistration-id");
  verify(this.requestCache).saveRequest(any(HttpServletRequest.class),any(HttpServletResponse.class));
}
