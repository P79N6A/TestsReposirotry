@Test public void handleWhenTokenHasBothScopeAndScpAttributesTheInsufficientErrorBasedOnScopeAttribute(){
  Map<String,Object> attributes=Maps.newHashMap("scp",Arrays.asList("message:read","message:write"));
  attributes.put("scope","missive:read missive:write");
  Authentication token=new TestingOAuth2TokenAuthenticationToken(attributes);
  ServerWebExchange exchange=mock(ServerWebExchange.class);
  when(exchange.getPrincipal()).thenReturn(Mono.just(token));
  when(exchange.getResponse()).thenReturn(new MockServerHttpResponse());
  this.accessDeniedHandler.handle(exchange,null).block();
  assertThat(exchange.getResponse().getStatusCode()).isEqualTo(HttpStatus.FORBIDDEN);
  assertThat(exchange.getResponse().getHeaders().get("WWW-Authenticate")).isEqualTo(Arrays.asList("Bearer error=\"insufficient_scope\", " + "error_description=\"The token provided has insufficient scope [missive:read missive:write] for this request\", " + "error_uri=\"https://tools.ietf.org/html/rfc6750#section-3.1\", "+ "scope=\"missive:read missive:write\""));
}
