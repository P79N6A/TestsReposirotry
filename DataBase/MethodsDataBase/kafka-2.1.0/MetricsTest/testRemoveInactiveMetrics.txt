@Test public void testRemoveInactiveMetrics(){
  Sensor s1=metrics.sensor("test.s1",null,1);
  s1.add(metrics.metricName("test.s1.count","grp1"),new Count());
  Sensor s2=metrics.sensor("test.s2",null,3);
  s2.add(metrics.metricName("test.s2.count","grp1"),new Count());
  Metrics.ExpireSensorTask purger=metrics.new ExpireSensorTask();
  purger.run();
  assertNotNull("Sensor test.s1 must be present",metrics.getSensor("test.s1"));
  assertNotNull("MetricName test.s1.count must be present",metrics.metrics().get(metrics.metricName("test.s1.count","grp1")));
  assertNotNull("Sensor test.s2 must be present",metrics.getSensor("test.s2"));
  assertNotNull("MetricName test.s2.count must be present",metrics.metrics().get(metrics.metricName("test.s2.count","grp1")));
  time.sleep(1001);
  purger.run();
  assertNull("Sensor test.s1 should have been purged",metrics.getSensor("test.s1"));
  assertNull("MetricName test.s1.count should have been purged",metrics.metrics().get(metrics.metricName("test.s1.count","grp1")));
  assertNotNull("Sensor test.s2 must be present",metrics.getSensor("test.s2"));
  assertNotNull("MetricName test.s2.count must be present",metrics.metrics().get(metrics.metricName("test.s2.count","grp1")));
  s2.record();
  time.sleep(2000);
  purger.run();
  assertNotNull("Sensor test.s2 must be present",metrics.getSensor("test.s2"));
  assertNotNull("MetricName test.s2.count must be present",metrics.metrics().get(metrics.metricName("test.s2.count","grp1")));
  time.sleep(1000);
  purger.run();
  assertNull("Sensor test.s2 should have been purged",metrics.getSensor("test.s1"));
  assertNull("MetricName test.s2.count should have been purged",metrics.metrics().get(metrics.metricName("test.s1.count","grp1")));
  s1=metrics.sensor("test.s1",null,1);
  s1.add(metrics.metricName("test.s1.count","grp1"),new Count());
  assertNotNull("Sensor test.s1 must be present",metrics.getSensor("test.s1"));
  assertNotNull("MetricName test.s1.count must be present",metrics.metrics().get(metrics.metricName("test.s1.count","grp1")));
}
