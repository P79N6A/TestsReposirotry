@Test public void testPercentiles(){
  int buckets=100;
  Percentiles percs=new Percentiles(4 * buckets,0.0,100.0,BucketSizing.CONSTANT,new Percentile(metrics.metricName("test.p25","grp1"),25),new Percentile(metrics.metricName("test.p50","grp1"),50),new Percentile(metrics.metricName("test.p75","grp1"),75));
  MetricConfig config=new MetricConfig().eventWindow(50).samples(2);
  Sensor sensor=metrics.sensor("test",config);
  sensor.add(percs);
  Metric p25=this.metrics.metrics().get(metrics.metricName("test.p25","grp1"));
  Metric p50=this.metrics.metrics().get(metrics.metricName("test.p50","grp1"));
  Metric p75=this.metrics.metrics().get(metrics.metricName("test.p75","grp1"));
  for (int i=0; i < buckets; i++)   sensor.record(i);
  assertEquals(25,(Double)p25.metricValue(),1.0);
  assertEquals(50,(Double)p50.metricValue(),1.0);
  assertEquals(75,(Double)p75.metricValue(),1.0);
  for (int i=0; i < buckets; i++)   sensor.record(0.0);
  assertEquals(0.0,(Double)p25.metricValue(),1.0);
  assertEquals(0.0,(Double)p50.metricValue(),1.0);
  assertEquals(0.0,(Double)p75.metricValue(),1.0);
  for (int i=0; i < buckets; i++)   sensor.record(i);
  assertEquals(25,(Double)p25.metricValue(),1.0);
  assertEquals(50,(Double)p50.metricValue(),1.0);
  assertEquals(75,(Double)p75.metricValue(),1.0);
}
