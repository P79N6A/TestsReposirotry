@Test public void testShouldBeExtensible(){
  final StreamsBuilder builder=new StreamsBuilder();
  final int[] expectedKeys=new int[]{1,2,3,4,5,6,7};
  final MockProcessorSupplier<Integer,String> supplier=new MockProcessorSupplier<>();
  final String topicName="topic";
  final ExtendedKStream<Integer,String> stream=new ExtendedKStream<>(builder.stream(topicName,Consumed.with(Serdes.Integer(),Serdes.String())));
  stream.randomFilter().process(supplier);
  final Properties props=new Properties();
  props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG,"abstract-stream-test");
  props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,"localhost:9091");
  props.setProperty(StreamsConfig.STATE_DIR_CONFIG,TestUtils.tempDirectory().getAbsolutePath());
  final ConsumerRecordFactory<Integer,String> recordFactory=new ConsumerRecordFactory<>(new IntegerSerializer(),new StringSerializer());
  final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props);
  for (  final int expectedKey : expectedKeys) {
    driver.pipeInput(recordFactory.create(topicName,expectedKey,"V" + expectedKey));
  }
  assertTrue(supplier.theCapturedProcessor().processed.size() <= expectedKeys.length);
}
