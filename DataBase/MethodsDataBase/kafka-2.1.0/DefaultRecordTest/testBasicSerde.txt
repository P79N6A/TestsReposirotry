@Test public void testBasicSerde() throws IOException {
  Header[] headers=new Header[]{new RecordHeader("foo","value".getBytes()),new RecordHeader("bar",(byte[])null),new RecordHeader("\"A\\u00ea\\u00f1\\u00fcC\"","value".getBytes())};
  SimpleRecord[] records=new SimpleRecord[]{new SimpleRecord("hi".getBytes(),"there".getBytes()),new SimpleRecord(null,"there".getBytes()),new SimpleRecord("hi".getBytes(),null),new SimpleRecord(null,null),new SimpleRecord(15L,"hi".getBytes(),"there".getBytes(),headers)};
  for (  SimpleRecord record : records) {
    int baseSequence=723;
    long baseOffset=37;
    int offsetDelta=10;
    long baseTimestamp=System.currentTimeMillis();
    long timestampDelta=323;
    ByteBufferOutputStream out=new ByteBufferOutputStream(1024);
    DefaultRecord.writeTo(new DataOutputStream(out),offsetDelta,timestampDelta,record.key(),record.value(),record.headers());
    ByteBuffer buffer=out.buffer();
    buffer.flip();
    DefaultRecord logRecord=DefaultRecord.readFrom(buffer,baseOffset,baseTimestamp,baseSequence,null);
    assertNotNull(logRecord);
    assertEquals(baseOffset + offsetDelta,logRecord.offset());
    assertEquals(baseSequence + offsetDelta,logRecord.sequence());
    assertEquals(baseTimestamp + timestampDelta,logRecord.timestamp());
    assertEquals(record.key(),logRecord.key());
    assertEquals(record.value(),logRecord.value());
    assertArrayEquals(record.headers(),logRecord.headers());
    assertEquals(DefaultRecord.sizeInBytes(offsetDelta,timestampDelta,record.key(),record.value(),record.headers()),logRecord.sizeInBytes());
  }
}
