@Test public void shouldLogAndMeterOnSkippedRecordsWithNullValue(){
  final StreamsBuilder builder=new StreamsBuilder();
  final KStream<String,Integer> left=builder.stream("left",Consumed.with(Serdes.String(),Serdes.Integer()));
  final KStream<String,Integer> right=builder.stream("right",Consumed.with(Serdes.String(),Serdes.Integer()));
  final ConsumerRecordFactory<String,Integer> recordFactory=new ConsumerRecordFactory<>(new StringSerializer(),new IntegerSerializer());
  left.join(right,new ValueJoiner<Integer,Integer,Integer>(){
    @Override public Integer apply(    final Integer value1,    final Integer value2){
      return value1 + value2;
    }
  }
,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.String(),Serdes.Integer(),Serdes.Integer()));
  final LogCaptureAppender appender=LogCaptureAppender.createAndRegister();
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){
    driver.pipeInput(recordFactory.create("left","A",null));
    LogCaptureAppender.unregister(appender);
    assertThat(appender.getMessages(),hasItem("Skipping record due to null key or value. key=[A] value=[null] topic=[left] partition=[0] offset=[0]"));
    assertEquals(1.0,getMetricByName(driver.metrics(),"skipped-records-total","stream-metrics").metricValue());
  }
 }
