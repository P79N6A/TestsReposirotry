@Test public void testServerLoginManager() throws Exception {
  Map<String,Object> configs=new HashMap<>();
  configs.put("plain.sasl.jaas.config",dynamicPlainContext);
  configs.put("digest-md5.sasl.jaas.config",dynamicDigestContext);
  ListenerName listenerName=new ListenerName("listener1");
  JaasContext plainJaasContext=JaasContext.loadServerContext(listenerName,"PLAIN",configs);
  JaasContext digestJaasContext=JaasContext.loadServerContext(listenerName,"DIGEST-MD5",configs);
  JaasContext scramJaasContext=JaasContext.loadServerContext(listenerName,"SCRAM-SHA-256",configs);
  LoginManager dynamicPlainLogin=LoginManager.acquireLoginManager(plainJaasContext,"PLAIN",DefaultLogin.class,configs);
  assertEquals(dynamicPlainContext,dynamicPlainLogin.cacheKey());
  LoginManager dynamicDigestLogin=LoginManager.acquireLoginManager(digestJaasContext,"DIGEST-MD5",DefaultLogin.class,configs);
  assertNotSame(dynamicPlainLogin,dynamicDigestLogin);
  assertEquals(dynamicDigestContext,dynamicDigestLogin.cacheKey());
  LoginManager staticScramLogin=LoginManager.acquireLoginManager(scramJaasContext,"SCRAM-SHA-256",DefaultLogin.class,configs);
  assertNotSame(dynamicPlainLogin,staticScramLogin);
  assertEquals("KafkaServer",staticScramLogin.cacheKey());
  assertSame(dynamicPlainLogin,LoginManager.acquireLoginManager(plainJaasContext,"PLAIN",DefaultLogin.class,configs));
  assertSame(dynamicDigestLogin,LoginManager.acquireLoginManager(digestJaasContext,"DIGEST-MD5",DefaultLogin.class,configs));
  assertSame(staticScramLogin,LoginManager.acquireLoginManager(scramJaasContext,"SCRAM-SHA-256",DefaultLogin.class,configs));
  verifyLoginManagerRelease(dynamicPlainLogin,2,plainJaasContext,configs);
  verifyLoginManagerRelease(dynamicDigestLogin,2,digestJaasContext,configs);
  verifyLoginManagerRelease(staticScramLogin,2,scramJaasContext,configs);
}
