@Test public void testTraversal(){
  ImplicitLinkedHashSet<TestElement> set=new ImplicitLinkedHashSet<>(100);
  expectTraversal(set.iterator());
  assertTrue(set.add(new TestElement(2)));
  expectTraversal(set.iterator(),2);
  assertTrue(set.add(new TestElement(1)));
  expectTraversal(set.iterator(),2,1);
  assertTrue(set.add(new TestElement(100)));
  expectTraversal(set.iterator(),2,1,100);
  assertTrue(set.remove(new TestElement(1)));
  expectTraversal(set.iterator(),2,100);
  assertTrue(set.add(new TestElement(1)));
  expectTraversal(set.iterator(),2,100,1);
  Iterator<TestElement> iter=set.iterator();
  iter.next();
  iter.next();
  iter.remove();
  iter.next();
  assertFalse(iter.hasNext());
  expectTraversal(set.iterator(),2,1);
  List<TestElement> list=new ArrayList<>();
  list.add(new TestElement(1));
  list.add(new TestElement(2));
  assertTrue(set.removeAll(list));
  assertFalse(set.removeAll(list));
  expectTraversal(set.iterator());
  assertEquals(0,set.size());
  assertTrue(set.isEmpty());
}
