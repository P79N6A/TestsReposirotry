@Test public void testValueGetter(){
  final StreamsBuilder builder=new StreamsBuilder();
  final String topic1="topic1";
  final KTableImpl<String,String,String> table1=(KTableImpl<String,String,String>)builder.table(topic1,stringConsumed);
  final Topology topology=builder.build();
  final KTableValueGetterSupplier<String,String> getterSupplier1=table1.valueGetterSupplier();
  final InternalTopologyBuilder topologyBuilder=TopologyWrapper.getInternalTopologyBuilder(topology);
  topologyBuilder.connectProcessorAndStateStores(table1.name,getterSupplier1.storeNames());
  try (final TopologyTestDriverWrapper driver=new TopologyTestDriverWrapper(builder.build(),props)){
    final KTableValueGetter<String,String> getter1=getterSupplier1.get();
    getter1.init(driver.setCurrentNodeForProcessorContext(table1.name));
    driver.pipeInput(recordFactory.create(topic1,"A","01"));
    driver.pipeInput(recordFactory.create(topic1,"B","01"));
    driver.pipeInput(recordFactory.create(topic1,"C","01"));
    assertEquals("01",getter1.get("A"));
    assertEquals("01",getter1.get("B"));
    assertEquals("01",getter1.get("C"));
    driver.pipeInput(recordFactory.create(topic1,"A","02"));
    driver.pipeInput(recordFactory.create(topic1,"B","02"));
    assertEquals("02",getter1.get("A"));
    assertEquals("02",getter1.get("B"));
    assertEquals("01",getter1.get("C"));
    driver.pipeInput(recordFactory.create(topic1,"A","03"));
    assertEquals("03",getter1.get("A"));
    assertEquals("02",getter1.get("B"));
    assertEquals("01",getter1.get("C"));
    driver.pipeInput(recordFactory.create(topic1,"A",(String)null));
    driver.pipeInput(recordFactory.create(topic1,"B",(String)null));
    assertNull(getter1.get("A"));
    assertNull(getter1.get("B"));
    assertEquals("01",getter1.get("C"));
  }
 }
