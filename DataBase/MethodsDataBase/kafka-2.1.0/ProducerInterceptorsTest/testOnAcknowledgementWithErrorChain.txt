@Test public void testOnAcknowledgementWithErrorChain(){
  List<ProducerInterceptor<Integer,String>> interceptorList=new ArrayList<>();
  AppendProducerInterceptor interceptor1=new AppendProducerInterceptor("One");
  interceptorList.add(interceptor1);
  ProducerInterceptors<Integer,String> interceptors=new ProducerInterceptors<>(interceptorList);
  interceptors.onSendError(producerRecord,new TopicPartition(producerRecord.topic(),producerRecord.partition()),new KafkaException("Test"));
  assertEquals(1,onErrorAckCount);
  assertEquals(1,onErrorAckWithTopicPartitionSetCount);
  interceptors.onSendError(producerRecord,null,new KafkaException("Test"));
  assertEquals(2,onErrorAckCount);
  assertEquals(2,onErrorAckWithTopicPartitionSetCount);
  ProducerRecord<Integer,String> record2=new ProducerRecord<>("test2",null,1,"value");
  interceptors.onSendError(record2,null,new KafkaException("Test"));
  assertEquals(3,onErrorAckCount);
  assertEquals(3,onErrorAckWithTopicSetCount);
  assertEquals(2,onErrorAckWithTopicPartitionSetCount);
  int reassignedPartition=producerRecord.partition() + 1;
  interceptors.onSendError(record2,new TopicPartition(record2.topic(),reassignedPartition),new KafkaException("Test"));
  assertEquals(4,onErrorAckCount);
  assertEquals(4,onErrorAckWithTopicSetCount);
  assertEquals(3,onErrorAckWithTopicPartitionSetCount);
  interceptors.onSendError(null,null,new KafkaException("Test"));
  assertEquals(5,onErrorAckCount);
  assertEquals(4,onErrorAckWithTopicSetCount);
  assertEquals(3,onErrorAckWithTopicPartitionSetCount);
  interceptors.close();
}
