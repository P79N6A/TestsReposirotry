@Test public void shouldCreateBuilderThatBuildsStoreWithCachingAndLoggingDisabled(){
  final MaterializedInternal<String,String,KeyValueStore<Bytes,byte[]>> materialized=new MaterializedInternal<>(Materialized.<String,String,KeyValueStore<Bytes,byte[]>>as("store").withCachingDisabled().withLoggingDisabled());
  materialized.generateStoreNameIfNeeded(nameProvider,storePrefix);
  final KeyValueStoreMaterializer<String,String> materializer=new KeyValueStoreMaterializer<>(materialized);
  final StoreBuilder<KeyValueStore<String,String>> builder=materializer.materialize();
  final KeyValueStore<String,String> store=builder.build();
  final StateStore wrapped=((WrappedStateStore)store).wrappedStore();
  assertThat(wrapped,not(instanceOf(CachedStateStore.class)));
  assertThat(wrapped,not(instanceOf(ChangeLoggingKeyValueBytesStore.class)));
}
