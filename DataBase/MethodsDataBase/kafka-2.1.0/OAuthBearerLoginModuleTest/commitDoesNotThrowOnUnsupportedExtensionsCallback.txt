/** 
 * 2.1.0 added customizable SASL extensions and a new callback type. Ensure that old, custom-written callbackHandlers that do not handle the callback work
 */
@Test public void commitDoesNotThrowOnUnsupportedExtensionsCallback() throws LoginException {
  Subject subject=new Subject();
  OAuthBearerToken[] tokens=new OAuthBearerToken[]{mock(OAuthBearerToken.class),mock(OAuthBearerToken.class),mock(OAuthBearerToken.class)};
  TestCallbackHandler testTokenCallbackHandler=new TestCallbackHandler(tokens,new SaslExtensions[]{RAISE_UNSUPPORTED_CB_EXCEPTION_FLAG});
  OAuthBearerLoginModule loginModule1=new OAuthBearerLoginModule();
  loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap());
  loginModule1.login();
  loginModule1.commit();
  SaslExtensions extensions=subject.getPublicCredentials(SaslExtensions.class).iterator().next();
  assertNotNull(extensions);
  assertTrue(extensions.map().isEmpty());
  verifyZeroInteractions((Object[])tokens);
}
