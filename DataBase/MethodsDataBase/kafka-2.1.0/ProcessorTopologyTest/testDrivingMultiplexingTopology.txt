@Test public void testDrivingMultiplexingTopology(){
  driver=new TopologyTestDriver(createMultiplexingTopology(),props);
  driver.pipeInput(recordFactory.create(INPUT_TOPIC_1,"key1","value1"));
  assertNextOutputRecord(OUTPUT_TOPIC_1,"key1","value1(1)");
  assertNextOutputRecord(OUTPUT_TOPIC_2,"key1","value1(2)");
  driver.pipeInput(recordFactory.create(INPUT_TOPIC_1,"key2","value2"));
  assertNextOutputRecord(OUTPUT_TOPIC_1,"key2","value2(1)");
  assertNextOutputRecord(OUTPUT_TOPIC_2,"key2","value2(2)");
  driver.pipeInput(recordFactory.create(INPUT_TOPIC_1,"key3","value3"));
  driver.pipeInput(recordFactory.create(INPUT_TOPIC_1,"key4","value4"));
  driver.pipeInput(recordFactory.create(INPUT_TOPIC_1,"key5","value5"));
  assertNextOutputRecord(OUTPUT_TOPIC_1,"key3","value3(1)");
  assertNextOutputRecord(OUTPUT_TOPIC_1,"key4","value4(1)");
  assertNextOutputRecord(OUTPUT_TOPIC_1,"key5","value5(1)");
  assertNextOutputRecord(OUTPUT_TOPIC_2,"key3","value3(2)");
  assertNextOutputRecord(OUTPUT_TOPIC_2,"key4","value4(2)");
  assertNextOutputRecord(OUTPUT_TOPIC_2,"key5","value5(2)");
}
