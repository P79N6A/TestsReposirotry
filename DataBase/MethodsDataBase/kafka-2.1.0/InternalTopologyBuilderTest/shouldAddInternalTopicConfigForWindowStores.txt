@Test public void shouldAddInternalTopicConfigForWindowStores(){
  builder.setApplicationId("appId");
  builder.addSource(null,"source",null,null,null,"topic");
  builder.addProcessor("processor",new MockProcessorSupplier(),"source");
  builder.addStateStore(Stores.windowStoreBuilder(Stores.persistentWindowStore("store1",ofSeconds(30L),ofSeconds(10L),false),Serdes.String(),Serdes.String()),"processor");
  builder.addStateStore(Stores.sessionStoreBuilder(Stores.persistentSessionStore("store2",ofSeconds(30)),Serdes.String(),Serdes.String()),"processor");
  final Map<Integer,InternalTopologyBuilder.TopicsInfo> topicGroups=builder.topicGroups();
  final InternalTopologyBuilder.TopicsInfo topicsInfo=topicGroups.values().iterator().next();
  final InternalTopicConfig topicConfig1=topicsInfo.stateChangelogTopics.get("appId-store1-changelog");
  final Map<String,String> properties1=topicConfig1.getProperties(Collections.<String,String>emptyMap(),10000);
  assertEquals(2,properties1.size());
  assertEquals(TopicConfig.CLEANUP_POLICY_COMPACT + "," + TopicConfig.CLEANUP_POLICY_DELETE,properties1.get(TopicConfig.CLEANUP_POLICY_CONFIG));
  assertEquals("40000",properties1.get(TopicConfig.RETENTION_MS_CONFIG));
  assertEquals("appId-store1-changelog",topicConfig1.name());
  assertTrue(topicConfig1 instanceof WindowedChangelogTopicConfig);
  final InternalTopicConfig topicConfig2=topicsInfo.stateChangelogTopics.get("appId-store2-changelog");
  final Map<String,String> properties2=topicConfig2.getProperties(Collections.<String,String>emptyMap(),10000);
  assertEquals(2,properties2.size());
  assertEquals(TopicConfig.CLEANUP_POLICY_COMPACT + "," + TopicConfig.CLEANUP_POLICY_DELETE,properties2.get(TopicConfig.CLEANUP_POLICY_CONFIG));
  assertEquals("40000",properties2.get(TopicConfig.RETENTION_MS_CONFIG));
  assertEquals("appId-store2-changelog",topicConfig2.name());
  assertTrue(topicConfig2 instanceof WindowedChangelogTopicConfig);
}
