@Test public void testTopicGroupsByStateStore(){
  builder.setApplicationId("X");
  builder.addSource(null,"source-1",null,null,null,"topic-1","topic-1x");
  builder.addSource(null,"source-2",null,null,null,"topic-2");
  builder.addSource(null,"source-3",null,null,null,"topic-3");
  builder.addSource(null,"source-4",null,null,null,"topic-4");
  builder.addSource(null,"source-5",null,null,null,"topic-5");
  builder.addProcessor("processor-1",new MockProcessorSupplier(),"source-1");
  builder.addProcessor("processor-2",new MockProcessorSupplier(),"source-2");
  builder.addStateStore(new MockKeyValueStoreBuilder("store-1",false),"processor-1","processor-2");
  builder.addProcessor("processor-3",new MockProcessorSupplier(),"source-3");
  builder.addProcessor("processor-4",new MockProcessorSupplier(),"source-4");
  builder.addStateStore(new MockKeyValueStoreBuilder("store-2",false),"processor-3","processor-4");
  builder.addProcessor("processor-5",new MockProcessorSupplier(),"source-5");
  builder.addStateStore(new MockKeyValueStoreBuilder("store-3",false));
  builder.connectProcessorAndStateStores("processor-5","store-3");
  final Map<Integer,InternalTopologyBuilder.TopicsInfo> topicGroups=builder.topicGroups();
  final Map<Integer,InternalTopologyBuilder.TopicsInfo> expectedTopicGroups=new HashMap<>();
  final String store1=ProcessorStateManager.storeChangelogTopic("X","store-1");
  final String store2=ProcessorStateManager.storeChangelogTopic("X","store-2");
  final String store3=ProcessorStateManager.storeChangelogTopic("X","store-3");
  expectedTopicGroups.put(0,new InternalTopologyBuilder.TopicsInfo(Collections.<String>emptySet(),mkSet("topic-1","topic-1x","topic-2"),Collections.<String,InternalTopicConfig>emptyMap(),Collections.singletonMap(store1,(InternalTopicConfig)new UnwindowedChangelogTopicConfig(store1,Collections.<String,String>emptyMap()))));
  expectedTopicGroups.put(1,new InternalTopologyBuilder.TopicsInfo(Collections.<String>emptySet(),mkSet("topic-3","topic-4"),Collections.<String,InternalTopicConfig>emptyMap(),Collections.singletonMap(store2,(InternalTopicConfig)new UnwindowedChangelogTopicConfig(store2,Collections.<String,String>emptyMap()))));
  expectedTopicGroups.put(2,new InternalTopologyBuilder.TopicsInfo(Collections.<String>emptySet(),mkSet("topic-5"),Collections.<String,InternalTopicConfig>emptyMap(),Collections.singletonMap(store3,(InternalTopicConfig)new UnwindowedChangelogTopicConfig(store3,Collections.<String,String>emptyMap()))));
  assertEquals(3,topicGroups.size());
  assertEquals(expectedTopicGroups,topicGroups);
}
