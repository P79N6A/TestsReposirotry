@Test public void shouldFlushAllStoresEvenIfStoreThrowsExcepiton() throws IOException {
  final ProcessorStateManager stateManager=new ProcessorStateManager(taskId,Collections.singleton(changelogTopicPartition),false,stateDirectory,Collections.singletonMap(storeName,changelogTopic),changelogReader,false,logContext);
  final AtomicBoolean flushedStore=new AtomicBoolean(false);
  final MockKeyValueStore stateStore1=new MockKeyValueStore(storeName,true){
    @Override public void flush(){
      throw new RuntimeException("KABOOM!");
    }
  }
;
  final MockKeyValueStore stateStore2=new MockKeyValueStore(storeName + "2",true){
    @Override public void flush(){
      flushedStore.set(true);
    }
  }
;
  stateManager.register(stateStore1,stateStore1.stateRestoreCallback);
  stateManager.register(stateStore2,stateStore2.stateRestoreCallback);
  try {
    stateManager.flush();
  }
 catch (  final ProcessorStateException expected) {
  }
  Assert.assertTrue(flushedStore.get());
}
