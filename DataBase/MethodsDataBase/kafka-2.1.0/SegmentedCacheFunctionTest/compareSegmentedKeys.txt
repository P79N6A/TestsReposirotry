@Test public void compareSegmentedKeys(){
  assertThat("same key in same segment should be ranked the same",cacheFunction.compareSegmentedKeys(cacheFunction.cacheKey(THE_KEY),THE_KEY) == 0);
  final Bytes sameKeyInPriorSegment=WindowKeySchema.toStoreKeyBinary(new byte[]{0xA,0xB,0xC},1234,42);
  assertThat("same keys in different segments should be ordered according to segment",cacheFunction.compareSegmentedKeys(cacheFunction.cacheKey(sameKeyInPriorSegment),THE_KEY) < 0);
  assertThat("same keys in different segments should be ordered according to segment",cacheFunction.compareSegmentedKeys(cacheFunction.cacheKey(THE_KEY),sameKeyInPriorSegment) > 0);
  final Bytes lowerKeyInSameSegment=WindowKeySchema.toStoreKeyBinary(new byte[]{0xA,0xB,0xB},TIMESTAMP - 1,0);
  assertThat("different keys in same segments should be ordered according to key",cacheFunction.compareSegmentedKeys(cacheFunction.cacheKey(THE_KEY),lowerKeyInSameSegment) > 0);
  assertThat("different keys in same segments should be ordered according to key",cacheFunction.compareSegmentedKeys(cacheFunction.cacheKey(lowerKeyInSameSegment),THE_KEY) < 0);
}
