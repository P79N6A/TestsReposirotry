/** 
 * Tests that unsupported version of ApiVersionsRequest before SASL handshake request returns error response and does not result in authentication failure. This test is similar to  {@link #testUnauthenticatedApiVersionsRequest(SecurityProtocol,short)}where a non-SASL client is used to send requests that are processed by {@link SaslServerAuthenticator} of the server prior to client authentication.
 */
@Test public void testApiVersionsRequestWithUnsupportedVersion() throws Exception {
  short handshakeVersion=ApiKeys.SASL_HANDSHAKE.latestVersion();
  SecurityProtocol securityProtocol=SecurityProtocol.SASL_PLAINTEXT;
  configureMechanisms("PLAIN",Arrays.asList("PLAIN"));
  server=createEchoServer(securityProtocol);
  String node="1";
  createClientConnection(SecurityProtocol.PLAINTEXT,node);
  RequestHeader header=new RequestHeader(ApiKeys.API_VERSIONS,Short.MAX_VALUE,"someclient",1);
  ApiVersionsRequest request=new ApiVersionsRequest.Builder().build();
  selector.send(request.toSend(node,header));
  ByteBuffer responseBuffer=waitForResponse();
  ResponseHeader.parse(responseBuffer);
  ApiVersionsResponse response=ApiVersionsResponse.parse(responseBuffer,(short)0);
  assertEquals(Errors.UNSUPPORTED_VERSION,response.error());
  sendVersionRequestReceiveResponse(node);
  sendHandshakeRequestReceiveResponse(node,handshakeVersion);
  authenticateUsingSaslPlainAndCheckConnection(node,handshakeVersion > 0);
}
