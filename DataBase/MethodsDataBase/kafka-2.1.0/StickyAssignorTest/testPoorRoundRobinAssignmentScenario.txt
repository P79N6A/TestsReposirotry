/** 
 * This unit test performs sticky assignment for a scenario that round robin assignor handles poorly. Topics (partitions per topic): topic1 (2), topic2 (1), topic3 (2), topic4 (1), topic5 (2) Subscriptions: - consumer1: topic1, topic2, topic3, topic4, topic5 - consumer2: topic1, topic3, topic5 - consumer3: topic1, topic3, topic5 - consumer4: topic1, topic2, topic3, topic4, topic5 Round Robin Assignment Result: - consumer1: topic1-0, topic3-0, topic5-0 - consumer2: topic1-1, topic3-1, topic5-1 - consumer3: - consumer4: topic2-0, topic4-0 Sticky Assignment Result: - consumer1: topic2-0, topic3-0 - consumer2: topic1-0, topic3-1 - consumer3: topic1-1, topic5-0 - consumer4: topic4-0, topic5-1
 */
@Test public void testPoorRoundRobinAssignmentScenario(){
  Map<String,Integer> partitionsPerTopic=new HashMap<>();
  for (int i=1; i <= 5; i++)   partitionsPerTopic.put(String.format("topic%d",i),(i % 2) + 1);
  Map<String,Subscription> subscriptions=new HashMap<>();
  subscriptions.put("consumer1",new Subscription(topics("topic1","topic2","topic3","topic4","topic5")));
  subscriptions.put("consumer2",new Subscription(topics("topic1","topic3","topic5")));
  subscriptions.put("consumer3",new Subscription(topics("topic1","topic3","topic5")));
  subscriptions.put("consumer4",new Subscription(topics("topic1","topic2","topic3","topic4","topic5")));
  Map<String,List<TopicPartition>> assignment=assignor.assign(partitionsPerTopic,subscriptions);
  verifyValidityAndBalance(subscriptions,assignment);
}
