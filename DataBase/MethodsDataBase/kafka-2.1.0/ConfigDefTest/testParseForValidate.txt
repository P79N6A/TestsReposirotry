@Test public void testParseForValidate(){
  Map<String,Object> expectedParsed=new HashMap<>();
  expectedParsed.put("a",1);
  expectedParsed.put("b",null);
  expectedParsed.put("c",null);
  expectedParsed.put("d",10);
  Map<String,ConfigValue> expected=new HashMap<>();
  String errorMessageB="Missing required configuration \"b\" which has no default value.";
  String errorMessageC="Missing required configuration \"c\" which has no default value.";
  ConfigValue configA=new ConfigValue("a",1,Collections.<Object>emptyList(),Collections.<String>emptyList());
  ConfigValue configB=new ConfigValue("b",null,Collections.<Object>emptyList(),Arrays.asList(errorMessageB,errorMessageB));
  ConfigValue configC=new ConfigValue("c",null,Collections.<Object>emptyList(),Arrays.asList(errorMessageC));
  ConfigValue configD=new ConfigValue("d",10,Collections.<Object>emptyList(),Collections.<String>emptyList());
  expected.put("a",configA);
  expected.put("b",configB);
  expected.put("c",configC);
  expected.put("d",configD);
  ConfigDef def=new ConfigDef().define("a",Type.INT,Importance.HIGH,"docs","group",1,Width.SHORT,"a",Arrays.asList("b","c"),new IntegerRecommender(false)).define("b",Type.INT,Importance.HIGH,"docs","group",2,Width.SHORT,"b",new IntegerRecommender(true)).define("c",Type.INT,Importance.HIGH,"docs","group",3,Width.SHORT,"c",new IntegerRecommender(true)).define("d",Type.INT,Importance.HIGH,"docs","group",4,Width.SHORT,"d",Arrays.asList("b"),new IntegerRecommender(false));
  Map<String,String> props=new HashMap<>();
  props.put("a","1");
  props.put("d","10");
  Map<String,ConfigValue> configValues=new HashMap<>();
  for (  String name : def.configKeys().keySet()) {
    configValues.put(name,new ConfigValue(name));
  }
  Map<String,Object> parsed=def.parseForValidate(props,configValues);
  assertEquals(expectedParsed,parsed);
  assertEquals(expected,configValues);
}
