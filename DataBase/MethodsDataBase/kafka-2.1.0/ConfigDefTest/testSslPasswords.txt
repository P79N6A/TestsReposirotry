@Test public void testSslPasswords(){
  ConfigDef def=new ConfigDef();
  SslConfigs.addClientSslSupport(def);
  Properties props=new Properties();
  props.put(SslConfigs.SSL_KEY_PASSWORD_CONFIG,"key_password");
  props.put(SslConfigs.SSL_KEYSTORE_PASSWORD_CONFIG,"keystore_password");
  props.put(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG,"truststore_password");
  Map<String,Object> vals=def.parse(props);
  assertEquals(new Password("key_password"),vals.get(SslConfigs.SSL_KEY_PASSWORD_CONFIG));
  assertEquals(Password.HIDDEN,vals.get(SslConfigs.SSL_KEY_PASSWORD_CONFIG).toString());
  assertEquals(new Password("keystore_password"),vals.get(SslConfigs.SSL_KEYSTORE_PASSWORD_CONFIG));
  assertEquals(Password.HIDDEN,vals.get(SslConfigs.SSL_KEYSTORE_PASSWORD_CONFIG).toString());
  assertEquals(new Password("truststore_password"),vals.get(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG));
  assertEquals(Password.HIDDEN,vals.get(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG).toString());
}
