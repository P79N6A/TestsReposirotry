@Test public void shouldNotThrowExceptionOnRestoreWhenThereIsPreExistingRocksDbFiles(){
  rocksDBStore.init(context,rocksDBStore);
  final String message="how can a 4 ounce bird carry a 2lb coconut";
  int intKey=1;
  for (int i=0; i < 2000000; i++) {
    rocksDBStore.put(new Bytes(stringSerializer.serialize(null,"theKeyIs" + intKey++)),stringSerializer.serialize(null,message));
  }
  final List<KeyValue<byte[],byte[]>> restoreBytes=new ArrayList<>();
  final byte[] restoredKey="restoredKey".getBytes(UTF_8);
  final byte[] restoredValue="restoredValue".getBytes(UTF_8);
  restoreBytes.add(KeyValue.pair(restoredKey,restoredValue));
  context.restore("test",restoreBytes);
  assertThat(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,"restoredKey")))),equalTo("restoredValue"));
}
