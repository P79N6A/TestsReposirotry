@Test public void testCompression() throws Exception {
  byte[] compressed=compressedBytes();
  int offset=0;
  assertEquals(0x04,compressed[offset++]);
  assertEquals(0x22,compressed[offset++]);
  assertEquals(0x4D,compressed[offset++]);
  assertEquals(0x18,compressed[offset++]);
  byte flg=compressed[offset++];
  int version=(flg >>> 6) & 3;
  assertEquals(1,version);
  int reserved=flg & 3;
  assertEquals(0,reserved);
  byte bd=compressed[offset++];
  int blockMaxSize=(bd >>> 4) & 7;
  assertTrue(blockMaxSize >= 4);
  assertTrue(blockMaxSize <= 7);
  reserved=bd & 15;
  assertEquals(0,reserved);
  reserved=(bd >>> 7) & 1;
  assertEquals(0,reserved);
  boolean contentSize=((flg >>> 3) & 1) != 0;
  if (contentSize)   offset+=8;
  int off=4;
  int len=offset - 4;
  if (this.useBrokenFlagDescriptorChecksum) {
    off=0;
    len=offset;
  }
  int hash=XXHashFactory.fastestInstance().hash32().hash(compressed,off,len,0);
  byte hc=compressed[offset++];
  assertEquals((byte)((hash >> 8) & 0xFF),hc);
  if (this.close) {
    offset=compressed.length - 4;
    assertEquals(0,compressed[offset++]);
    assertEquals(0,compressed[offset++]);
    assertEquals(0,compressed[offset++]);
    assertEquals(0,compressed[offset++]);
  }
}
