@Test public void shouldUseRecordMetadataTimestampExtractorWithThrough(){
  final StreamsBuilder builder=new StreamsBuilder();
  final KStream<String,String> stream1=builder.stream(Arrays.asList("topic-1","topic-2"),stringConsumed);
  final KStream<String,String> stream2=builder.stream(Arrays.asList("topic-3","topic-4"),stringConsumed);
  stream1.to("topic-5");
  stream2.through("topic-6");
  final ProcessorTopology processorTopology=TopologyWrapper.getInternalTopologyBuilder(builder.build()).setApplicationId("X").build(null);
  assertThat(processorTopology.source("topic-6").getTimestampExtractor(),instanceOf(FailOnInvalidTimestamp.class));
  assertEquals(processorTopology.source("topic-4").getTimestampExtractor(),null);
  assertEquals(processorTopology.source("topic-3").getTimestampExtractor(),null);
  assertEquals(processorTopology.source("topic-2").getTimestampExtractor(),null);
  assertEquals(processorTopology.source("topic-1").getTimestampExtractor(),null);
}
