@Test public void shouldProcessFromSourceThatMatchPattern(){
  final KStream<String,String> pattern2Source=builder.stream(Pattern.compile("topic-\\d"));
  pattern2Source.process(processorSupplier);
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){
    driver.pipeInput(recordFactory.create("topic-3","A","aa"));
    driver.pipeInput(recordFactory.create("topic-4","B","bb"));
    driver.pipeInput(recordFactory.create("topic-5","C","cc"));
    driver.pipeInput(recordFactory.create("topic-6","D","dd"));
    driver.pipeInput(recordFactory.create("topic-7","E","ee"));
  }
   assertEquals(Utils.mkList("A:aa","B:bb","C:cc","D:dd","E:ee"),processorSupplier.theCapturedProcessor().processed);
}
