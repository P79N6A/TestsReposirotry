@Test public void shouldProcessFromSourcesThatMatchMultiplePattern(){
  final String topic3="topic-without-pattern";
  final KStream<String,String> pattern2Source1=builder.stream(Pattern.compile("topic-\\d"));
  final KStream<String,String> pattern2Source2=builder.stream(Pattern.compile("topic-[A-Z]"));
  final KStream<String,String> source3=builder.stream(topic3);
  final KStream<String,String> merged=pattern2Source1.merge(pattern2Source2).merge(source3);
  merged.process(processorSupplier);
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){
    driver.pipeInput(recordFactory.create("topic-3","A","aa"));
    driver.pipeInput(recordFactory.create("topic-4","B","bb"));
    driver.pipeInput(recordFactory.create("topic-A","C","cc"));
    driver.pipeInput(recordFactory.create("topic-Z","D","dd"));
    driver.pipeInput(recordFactory.create(topic3,"E","ee"));
  }
   assertEquals(Utils.mkList("A:aa","B:bb","C:cc","D:dd","E:ee"),processorSupplier.theCapturedProcessor().processed);
}
