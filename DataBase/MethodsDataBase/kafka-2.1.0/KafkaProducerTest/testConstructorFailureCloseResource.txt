@Test public void testConstructorFailureCloseResource(){
  Properties props=new Properties();
  props.setProperty(ProducerConfig.CLIENT_ID_CONFIG,"testConstructorClose");
  props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,"some.invalid.hostname.foo.bar.local:9999");
  props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG,MockMetricsReporter.class.getName());
  final int oldInitCount=MockMetricsReporter.INIT_COUNT.get();
  final int oldCloseCount=MockMetricsReporter.CLOSE_COUNT.get();
  try (KafkaProducer<byte[],byte[]> ignored=new KafkaProducer<>(props,new ByteArraySerializer(),new ByteArraySerializer())){
    fail("should have caught an exception and returned");
  }
 catch (  KafkaException e) {
    assertEquals(oldInitCount + 1,MockMetricsReporter.INIT_COUNT.get());
    assertEquals(oldCloseCount + 1,MockMetricsReporter.CLOSE_COUNT.get());
    assertEquals("Failed to construct kafka producer",e.getMessage());
  }
}
