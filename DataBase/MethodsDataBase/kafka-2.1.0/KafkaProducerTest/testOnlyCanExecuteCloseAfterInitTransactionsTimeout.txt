@Test(expected=KafkaException.class) public void testOnlyCanExecuteCloseAfterInitTransactionsTimeout(){
  Properties props=new Properties();
  props.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG,"bad-transaction");
  props.put(ProducerConfig.MAX_BLOCK_MS_CONFIG,5);
  props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,"localhost:9000");
  Time time=new MockTime();
  Cluster cluster=TestUtils.singletonCluster("topic",1);
  Node node=cluster.nodes().get(0);
  Metadata metadata=new Metadata(0,Long.MAX_VALUE,true);
  metadata.update(cluster,Collections.emptySet(),time.milliseconds());
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  Producer<String,String> producer=new KafkaProducer<>(new ProducerConfig(ProducerConfig.addSerializerToConfig(props,new StringSerializer(),new StringSerializer())),null,null,metadata,client,null,time);
  try {
    producer.initTransactions();
  }
 catch (  TimeoutException e) {
  }
  try {
    producer.beginTransaction();
  }
  finally {
    producer.close(0,TimeUnit.MILLISECONDS);
  }
}
