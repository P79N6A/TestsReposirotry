/** 
 * Test handling an incremental fetch session.
 */
@Test public void testIncrementals(){
  FetchSessionHandler handler=new FetchSessionHandler(LOG_CONTEXT,1);
  FetchSessionHandler.Builder builder=handler.newBuilder();
  builder.add(new TopicPartition("foo",0),new FetchRequest.PartitionData(0,100,200,Optional.empty()));
  builder.add(new TopicPartition("foo",1),new FetchRequest.PartitionData(10,110,210,Optional.empty()));
  FetchSessionHandler.FetchRequestData data=builder.build();
  assertMapsEqual(reqMap(new ReqEntry("foo",0,0,100,200),new ReqEntry("foo",1,10,110,210)),data.toSend(),data.sessionPartitions());
  assertEquals(INVALID_SESSION_ID,data.metadata().sessionId());
  assertEquals(INITIAL_EPOCH,data.metadata().epoch());
  FetchResponse<MemoryRecords> resp=new FetchResponse<>(Errors.NONE,respMap(new RespEntry("foo",0,10,20),new RespEntry("foo",1,10,20)),0,123);
  handler.handleResponse(resp);
  FetchSessionHandler.Builder builder2=handler.newBuilder();
  builder2.add(new TopicPartition("foo",0),new FetchRequest.PartitionData(0,100,200,Optional.empty()));
  builder2.add(new TopicPartition("foo",1),new FetchRequest.PartitionData(10,120,210,Optional.empty()));
  builder2.add(new TopicPartition("bar",0),new FetchRequest.PartitionData(20,200,200,Optional.empty()));
  FetchSessionHandler.FetchRequestData data2=builder2.build();
  assertFalse(data2.metadata().isFull());
  assertMapEquals(reqMap(new ReqEntry("foo",0,0,100,200),new ReqEntry("foo",1,10,120,210),new ReqEntry("bar",0,20,200,200)),data2.sessionPartitions());
  assertMapEquals(reqMap(new ReqEntry("bar",0,20,200,200),new ReqEntry("foo",1,10,120,210)),data2.toSend());
  FetchResponse<MemoryRecords> resp2=new FetchResponse<>(Errors.NONE,respMap(new RespEntry("foo",1,20,20)),0,123);
  handler.handleResponse(resp2);
  FetchResponse<MemoryRecords> resp3=new FetchResponse<>(Errors.INVALID_FETCH_SESSION_EPOCH,respMap(),0,INVALID_SESSION_ID);
  handler.handleResponse(resp3);
  FetchSessionHandler.Builder builder4=handler.newBuilder();
  builder4.add(new TopicPartition("foo",0),new FetchRequest.PartitionData(0,100,200,Optional.empty()));
  builder4.add(new TopicPartition("foo",1),new FetchRequest.PartitionData(10,120,210,Optional.empty()));
  builder4.add(new TopicPartition("bar",0),new FetchRequest.PartitionData(20,200,200,Optional.empty()));
  FetchSessionHandler.FetchRequestData data4=builder4.build();
  assertTrue(data4.metadata().isFull());
  assertEquals(data2.metadata().sessionId(),data4.metadata().sessionId());
  assertEquals(INITIAL_EPOCH,data4.metadata().epoch());
  assertMapsEqual(reqMap(new ReqEntry("foo",0,0,100,200),new ReqEntry("foo",1,10,120,210),new ReqEntry("bar",0,20,200,200)),data4.sessionPartitions(),data4.toSend());
}
