@Test public void testCreateTask() throws Exception {
  MockTime time=new MockTime(0,0,0);
  Scheduler scheduler=new MockScheduler(time);
  try (MiniTrogdorCluster cluster=new MiniTrogdorCluster.Builder().addCoordinator("node01").addAgent("node02").scheduler(scheduler).build()){
    new ExpectedTasks().waitFor(cluster.coordinatorClient());
    NoOpTaskSpec fooSpec=new NoOpTaskSpec(1,2);
    cluster.coordinatorClient().createTask(new CreateTaskRequest("foo",fooSpec));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskPending(fooSpec)).build()).waitFor(cluster.coordinatorClient());
    cluster.coordinatorClient().createTask(new CreateTaskRequest("foo",fooSpec));
    try {
      NoOpTaskSpec barSpec=new NoOpTaskSpec(1000,2000);
      cluster.coordinatorClient().createTask(new CreateTaskRequest("foo",barSpec));
      fail("Expected to get an exception when re-creating a task with a " + "different task spec.");
    }
 catch (    RequestConflictException exception) {
    }
    time.sleep(2);
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskRunning(fooSpec,2,new TextNode("active"))).workerState(new WorkerRunning("foo",fooSpec,2,new TextNode("active"))).build()).waitFor(cluster.coordinatorClient()).waitFor(cluster.agentClient("node02"));
    time.sleep(3);
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskDone(fooSpec,2,5,"",false,new TextNode("done"))).build()).waitFor(cluster.coordinatorClient());
  }
 }
