@Test public void testTaskCancellation() throws Exception {
  MockTime time=new MockTime(0,0,0);
  Scheduler scheduler=new MockScheduler(time);
  try (MiniTrogdorCluster cluster=new MiniTrogdorCluster.Builder().addCoordinator("node01").addAgent("node01").addAgent("node02").scheduler(scheduler).build()){
    CoordinatorClient coordinatorClient=cluster.coordinatorClient();
    AgentClient agentClient1=cluster.agentClient("node01");
    AgentClient agentClient2=cluster.agentClient("node02");
    new ExpectedTasks().waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);
    NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,2);
    coordinatorClient.createTask(new CreateTaskRequest("foo",fooSpec));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskPending(fooSpec)).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);
    time.sleep(11);
    ObjectNode status1=new ObjectNode(JsonNodeFactory.instance);
    status1.set("node01",new TextNode("active"));
    status1.set("node02",new TextNode("active"));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskRunning(fooSpec,11,status1)).workerState(new WorkerRunning("foo",fooSpec,11,new TextNode("active"))).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);
    ObjectNode status2=new ObjectNode(JsonNodeFactory.instance);
    status2.set("node01",new TextNode("done"));
    status2.set("node02",new TextNode("done"));
    time.sleep(1);
    coordinatorClient.stopTask(new StopTaskRequest("foo"));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskDone(fooSpec,11,12,"",true,status2)).workerState(new WorkerDone("foo",fooSpec,11,12,new TextNode("done"),"")).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);
    coordinatorClient.destroyTask(new DestroyTaskRequest("foo"));
    new ExpectedTasks().waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);
  }
 }
