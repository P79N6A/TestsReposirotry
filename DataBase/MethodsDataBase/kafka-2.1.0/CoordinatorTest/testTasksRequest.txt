@Test public void testTasksRequest() throws Exception {
  MockTime time=new MockTime(0,0,0);
  Scheduler scheduler=new MockScheduler(time);
  try (MiniTrogdorCluster cluster=new MiniTrogdorCluster.Builder().addCoordinator("node01").addAgent("node02").scheduler(scheduler).build()){
    CoordinatorClient coordinatorClient=cluster.coordinatorClient();
    new ExpectedTasks().waitFor(coordinatorClient);
    NoOpTaskSpec fooSpec=new NoOpTaskSpec(1,10);
    NoOpTaskSpec barSpec=new NoOpTaskSpec(3,1);
    coordinatorClient.createTask(new CreateTaskRequest("foo",fooSpec));
    coordinatorClient.createTask(new CreateTaskRequest("bar",barSpec));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskPending(fooSpec)).build()).addTask(new ExpectedTaskBuilder("bar").taskState(new TaskPending(barSpec)).build()).waitFor(coordinatorClient);
    assertEquals(0,coordinatorClient.tasks(new TasksRequest(null,10,0,10,0)).tasks().size());
    TasksResponse resp1=coordinatorClient.tasks(new TasksRequest(Arrays.asList(new String[]{"foo","baz"}),0,0,0,0));
    assertTrue(resp1.tasks().containsKey("foo"));
    assertFalse(resp1.tasks().containsKey("bar"));
    assertEquals(1,resp1.tasks().size());
    time.sleep(2);
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").taskState(new TaskRunning(fooSpec,2,new TextNode("active"))).workerState(new WorkerRunning("foo",fooSpec,2,new TextNode("active"))).build()).addTask(new ExpectedTaskBuilder("bar").taskState(new TaskPending(barSpec)).build()).waitFor(coordinatorClient).waitFor(cluster.agentClient("node02"));
    TasksResponse resp2=coordinatorClient.tasks(new TasksRequest(null,1,0,0,0));
    assertTrue(resp2.tasks().containsKey("foo"));
    assertFalse(resp2.tasks().containsKey("bar"));
    assertEquals(1,resp2.tasks().size());
    assertEquals(0,coordinatorClient.tasks(new TasksRequest(null,3,0,0,0)).tasks().size());
  }
 }
