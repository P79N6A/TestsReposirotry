/** 
 * Test if the  waiter that is waiting on availability of more memory is cleaned up when an interruption occurs
 */
@Test public void testCleanupMemoryAvailabilityWaiterOnInterruption() throws Exception {
  BufferPool pool=new BufferPool(2,1,metrics,time,metricGroup);
  long blockTime=5000;
  pool.allocate(1,maxBlockTimeMs);
  Thread t1=new Thread(new BufferPoolAllocator(pool,blockTime));
  Thread t2=new Thread(new BufferPoolAllocator(pool,blockTime));
  t1.start();
  Thread.sleep(500);
  Deque<Condition> waiters=pool.waiters();
  Condition c1=waiters.getFirst();
  t2.start();
  Thread.sleep(500);
  t1.interrupt();
  Thread.sleep(500);
  Condition c2=waiters.getLast();
  t2.interrupt();
  assertNotEquals(c1,c2);
  t1.join();
  t2.join();
  assertEquals(pool.queued(),0);
}
