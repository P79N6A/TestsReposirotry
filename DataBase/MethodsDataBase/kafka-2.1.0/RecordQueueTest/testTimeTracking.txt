@Test public void testTimeTracking(){
  assertTrue(queue.isEmpty());
  assertEquals(0,queue.size());
  assertEquals(RecordQueue.UNKNOWN,queue.timestamp());
  final List<ConsumerRecord<byte[],byte[]>> list1=Arrays.asList(new ConsumerRecord<>("topic",1,2,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue),new ConsumerRecord<>("topic",1,1,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue),new ConsumerRecord<>("topic",1,3,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue));
  queue.addRawRecords(list1);
  assertEquals(3,queue.size());
  assertEquals(2L,queue.timestamp());
  assertEquals(2L,queue.poll().timestamp);
  assertEquals(2,queue.size());
  assertEquals(2L,queue.timestamp());
  assertEquals(1L,queue.poll().timestamp);
  assertEquals(1,queue.size());
  assertEquals(3L,queue.timestamp());
  final List<ConsumerRecord<byte[],byte[]>> list2=Arrays.asList(new ConsumerRecord<>("topic",1,4,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue),new ConsumerRecord<>("topic",1,1,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue),new ConsumerRecord<>("topic",1,2,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue));
  queue.addRawRecords(list2);
  assertEquals(4,queue.size());
  assertEquals(3L,queue.timestamp());
  assertEquals(3L,queue.poll().timestamp);
  assertEquals(3,queue.size());
  assertEquals(4L,queue.timestamp());
  assertEquals(4L,queue.poll().timestamp);
  assertEquals(4L,queue.timestamp());
  assertEquals(1L,queue.poll().timestamp);
  assertEquals(4L,queue.timestamp());
  assertEquals(2L,queue.poll().timestamp);
  assertTrue(queue.isEmpty());
  assertEquals(0,queue.size());
  assertEquals(4L,queue.timestamp());
  final List<ConsumerRecord<byte[],byte[]>> list3=Arrays.asList(new ConsumerRecord<>("topic",1,4,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue),new ConsumerRecord<>("topic",1,5,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue),new ConsumerRecord<>("topic",1,6,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,recordValue));
  queue.addRawRecords(list3);
  assertEquals(3,queue.size());
  assertEquals(4L,queue.timestamp());
  assertEquals(4L,queue.poll().timestamp);
  assertEquals(2,queue.size());
  assertEquals(5L,queue.timestamp());
  queue.clear();
  assertTrue(queue.isEmpty());
  assertEquals(0,queue.size());
  assertEquals(RecordQueue.UNKNOWN,queue.timestamp());
  queue.addRawRecords(list3);
  assertEquals(3,queue.size());
  assertEquals(4L,queue.timestamp());
}
