@Test public void testSmallWriteLimit(){
  byte[] key="foo".getBytes();
  byte[] value="bar".getBytes();
  int writeLimit=0;
  ByteBuffer buffer=ByteBuffer.allocate(512);
  MemoryRecordsBuilder builder=new MemoryRecordsBuilder(buffer,RecordBatch.CURRENT_MAGIC_VALUE,compressionType,TimestampType.CREATE_TIME,0L,LegacyRecord.NO_TIMESTAMP,RecordBatch.NO_PRODUCER_ID,RecordBatch.NO_PRODUCER_EPOCH,RecordBatch.NO_SEQUENCE,false,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,writeLimit);
  assertFalse(builder.isFull());
  assertTrue(builder.hasRoomFor(0L,key,value,Record.EMPTY_HEADERS));
  builder.append(0L,key,value);
  assertTrue(builder.isFull());
  assertFalse(builder.hasRoomFor(0L,key,value,Record.EMPTY_HEADERS));
  MemoryRecords memRecords=builder.build();
  List<Record> records=TestUtils.toList(memRecords.records());
  assertEquals(1,records.size());
  Record record=records.get(0);
  assertEquals(ByteBuffer.wrap(key),record.key());
  assertEquals(ByteBuffer.wrap(value),record.value());
}
