@Test public void shouldMoveInitializedTasksNeedingRestoreToRestoring(){
  EasyMock.expect(t1.initializeStateStores()).andReturn(false);
  t1.initializeTopology();
  EasyMock.expectLastCall().once();
  EasyMock.expect(t1.partitions()).andReturn(Collections.singleton(tp1));
  EasyMock.expect(t1.changelogPartitions()).andReturn(Collections.emptySet());
  EasyMock.expect(t2.initializeStateStores()).andReturn(true);
  t2.initializeTopology();
  EasyMock.expectLastCall().once();
  final Set<TopicPartition> t2partitions=Collections.singleton(tp2);
  EasyMock.expect(t2.partitions()).andReturn(t2partitions);
  EasyMock.expect(t2.changelogPartitions()).andReturn(Collections.emptyList());
  EasyMock.replay(t1,t2);
  assignedTasks.addNewTask(t1);
  assignedTasks.addNewTask(t2);
  assignedTasks.initializeNewTasks();
  final Collection<StreamTask> restoring=assignedTasks.restoringTasks();
  assertThat(restoring.size(),equalTo(1));
  assertSame(restoring.iterator().next(),t1);
}
