@Test public void shouldAggregateWindowed(){
  final Map<Windowed<String>,String> results=new HashMap<>();
  windowedStream.aggregate(MockInitializer.STRING_INIT,MockAggregator.TOSTRING_ADDER,Materialized.<String,String,WindowStore<Bytes,byte[]>>with(Serdes.String(),Serdes.String())).toStream().foreach(new ForeachAction<Windowed<String>,String>(){
    @Override public void apply(    final Windowed<String> key,    final String value){
      results.put(key,value);
    }
  }
);
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props,0L)){
    processData(driver);
  }
   assertThat(results.get(new Windowed<>("1",new TimeWindow(0,500))),equalTo("0+1+2"));
  assertThat(results.get(new Windowed<>("2",new TimeWindow(500,1000))),equalTo("0+1"));
  assertThat(results.get(new Windowed<>("1",new TimeWindow(500,1000))),equalTo("0+3"));
}
