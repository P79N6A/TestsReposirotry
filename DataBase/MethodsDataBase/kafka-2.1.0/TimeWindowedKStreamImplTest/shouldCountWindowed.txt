@Test public void shouldCountWindowed(){
  final Map<Windowed<String>,Long> results=new HashMap<>();
  windowedStream.count().toStream().foreach(new ForeachAction<Windowed<String>,Long>(){
    @Override public void apply(    final Windowed<String> key,    final Long value){
      results.put(key,value);
    }
  }
);
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props,0L)){
    processData(driver);
  }
   assertThat(results.get(new Windowed<>("1",new TimeWindow(0,500))),equalTo(2L));
  assertThat(results.get(new Windowed<>("2",new TimeWindow(500,1000))),equalTo(1L));
  assertThat(results.get(new Windowed<>("1",new TimeWindow(500,1000))),equalTo(1L));
}
