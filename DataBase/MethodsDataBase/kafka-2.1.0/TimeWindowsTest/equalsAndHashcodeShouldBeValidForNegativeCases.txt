@Test public void equalsAndHashcodeShouldBeValidForNegativeCases(){
  verifyInEquality(TimeWindows.of(ofMillis(9)),TimeWindows.of(ofMillis(3)));
  verifyInEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)));
  verifyInEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(2)),TimeWindows.of(ofMillis(3)).grace(ofMillis(1)));
  verifyInEquality(TimeWindows.of(ofMillis(3)).until(9),TimeWindows.of(ofMillis(3)).until(4));
  verifyInEquality(TimeWindows.of(ofMillis(4)).advanceBy(ofMillis(2)).grace(ofMillis(2)).until(4),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)).until(4));
  verifyInEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(2)).until(4),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)).until(4));
  assertNotEquals(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(1)).until(4),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)).until(4));
  assertNotEquals(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)).until(9),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)).until(4));
}
