@Test public void validateClaimForExistenceAndType() throws OAuthBearerIllegalTokenException {
  String claimName="foo";
  for (  Boolean exists : new Boolean[]{null,Boolean.TRUE,Boolean.FALSE}) {
    boolean useErrorValue=exists == null;
    for (    Boolean required : new boolean[]{true,false}) {
      StringBuilder sb=new StringBuilder("{");
      appendJsonText(sb,"exp",100);
      appendCommaJsonText(sb,"sub","principalName");
      if (useErrorValue)       appendCommaJsonText(sb,claimName,1);
 else       if (exists != null && exists.booleanValue())       appendCommaJsonText(sb,claimName,claimName);
      sb.append("}");
      String compactSerialization=HEADER_COMPACT_SERIALIZATION + Base64.getUrlEncoder().withoutPadding().encodeToString(sb.toString().getBytes(StandardCharsets.UTF_8)) + ".";
      OAuthBearerUnsecuredJws testJwt=new OAuthBearerUnsecuredJws(compactSerialization,"sub","scope");
      OAuthBearerValidationResult result=OAuthBearerValidationUtils.validateClaimForExistenceAndType(testJwt,required,claimName,String.class);
      if (useErrorValue || required && !exists.booleanValue())       assertTrue(isFailureWithMessageAndNoFailureScope(result));
 else       assertTrue(isSuccess(result));
    }
  }
}
