@Test public void validateExpirationTime(){
  long nowMs=TIME.milliseconds();
  double nowClaimValue=((double)nowMs) / 1000;
  StringBuilder sb=new StringBuilder("{");
  appendJsonText(sb,"exp",nowClaimValue);
  appendCommaJsonText(sb,"sub","principalName");
  sb.append("}");
  String compactSerialization=HEADER_COMPACT_SERIALIZATION + Base64.getUrlEncoder().withoutPadding().encodeToString(sb.toString().getBytes(StandardCharsets.UTF_8)) + ".";
  OAuthBearerUnsecuredJws testJwt=new OAuthBearerUnsecuredJws(compactSerialization,"sub","scope");
  for (  int allowableClockSkewMs : new int[]{0,5,10,20}) {
    for (    long whenCheckOffsetMs : new long[]{-10,0,10}) {
      long whenCheckMs=nowMs + whenCheckOffsetMs;
      OAuthBearerValidationResult result=OAuthBearerValidationUtils.validateExpirationTime(testJwt,whenCheckMs,allowableClockSkewMs);
      if (whenCheckMs - allowableClockSkewMs >= nowClaimValue * 1000)       assertTrue(assertionFailureMessage(nowClaimValue,allowableClockSkewMs,whenCheckMs),isFailureWithMessageAndNoFailureScope(result));
 else       assertTrue(assertionFailureMessage(nowClaimValue,allowableClockSkewMs,whenCheckMs),isSuccess(result));
    }
  }
}
