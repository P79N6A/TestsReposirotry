@Test public void shouldCountSessionWindowed(){
  final Map<Windowed<String>,Long> results=new HashMap<>();
  stream.count().toStream().foreach(new ForeachAction<Windowed<String>,Long>(){
    @Override public void apply(    final Windowed<String> key,    final Long value){
      results.put(key,value);
    }
  }
);
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props,0L)){
    processData(driver);
  }
   assertThat(results.get(new Windowed<>("1",new SessionWindow(10,15))),equalTo(2L));
  assertThat(results.get(new Windowed<>("2",new SessionWindow(600,600))),equalTo(1L));
  assertThat(results.get(new Windowed<>("1",new SessionWindow(600,600))),equalTo(1L));
}
