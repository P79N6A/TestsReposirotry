@Test public void testRewind() throws Exception {
  expectInitializeTask();
  expectPollInitialAssignment();
  final long startOffset=40L;
  final Map<TopicPartition,Long> offsets=new HashMap<>();
  expectOnePoll().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      offsets.put(TOPIC_PARTITION,startOffset);
      sinkTaskContext.getValue().offset(offsets);
      return null;
    }
  }
);
  consumer.seek(TOPIC_PARTITION,startOffset);
  EasyMock.expectLastCall();
  expectOnePoll().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      Map<TopicPartition,Long> offsets=sinkTaskContext.getValue().offsets();
      assertEquals(0,offsets.size());
      return null;
    }
  }
);
  expectStopTask();
  PowerMock.replayAll();
  workerTask.initialize(TASK_CONFIG);
  workerTask.initializeAndStart();
  workerTask.iteration();
  workerTask.iteration();
  workerTask.iteration();
  workerTask.stop();
  workerTask.close();
  PowerMock.verifyAll();
}
