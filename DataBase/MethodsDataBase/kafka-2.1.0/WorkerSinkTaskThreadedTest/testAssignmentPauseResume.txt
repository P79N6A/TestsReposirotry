@Test public void testAssignmentPauseResume() throws Exception {
  expectInitializeTask();
  expectPollInitialAssignment();
  expectOnePoll().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      assertEquals(new HashSet<>(Arrays.asList(TOPIC_PARTITION,TOPIC_PARTITION2,TOPIC_PARTITION3)),sinkTaskContext.getValue().assignment());
      return null;
    }
  }
);
  EasyMock.expect(consumer.assignment()).andReturn(new HashSet<>(Arrays.asList(TOPIC_PARTITION,TOPIC_PARTITION2,TOPIC_PARTITION3)));
  expectOnePoll().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      try {
        sinkTaskContext.getValue().pause(UNASSIGNED_TOPIC_PARTITION);
        fail("Trying to pause unassigned partition should have thrown an Connect exception");
      }
 catch (      ConnectException e) {
      }
      sinkTaskContext.getValue().pause(TOPIC_PARTITION,TOPIC_PARTITION2);
      return null;
    }
  }
);
  consumer.pause(Arrays.asList(UNASSIGNED_TOPIC_PARTITION));
  PowerMock.expectLastCall().andThrow(new IllegalStateException("unassigned topic partition"));
  consumer.pause(Arrays.asList(TOPIC_PARTITION,TOPIC_PARTITION2));
  PowerMock.expectLastCall();
  expectOnePoll().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      try {
        sinkTaskContext.getValue().resume(UNASSIGNED_TOPIC_PARTITION);
        fail("Trying to resume unassigned partition should have thrown an Connect exception");
      }
 catch (      ConnectException e) {
      }
      sinkTaskContext.getValue().resume(TOPIC_PARTITION,TOPIC_PARTITION2);
      return null;
    }
  }
);
  consumer.resume(Arrays.asList(UNASSIGNED_TOPIC_PARTITION));
  PowerMock.expectLastCall().andThrow(new IllegalStateException("unassigned topic partition"));
  consumer.resume(Arrays.asList(TOPIC_PARTITION,TOPIC_PARTITION2));
  PowerMock.expectLastCall();
  expectStopTask();
  PowerMock.replayAll();
  workerTask.initialize(TASK_CONFIG);
  workerTask.initializeAndStart();
  workerTask.iteration();
  workerTask.iteration();
  workerTask.iteration();
  workerTask.iteration();
  workerTask.stop();
  workerTask.close();
  PowerMock.verifyAll();
}
