@Test public void testUnsupportedVersionInProduceRequest() throws Exception {
  final long producerId=343434L;
  TransactionManager transactionManager=new TransactionManager();
  setupWithTransactionState(transactionManager);
  client.setNode(new Node(1,"localhost",33343));
  prepareAndReceiveInitProducerId(producerId,Errors.NONE);
  assertTrue(transactionManager.hasProducerId());
  Future<RecordMetadata> future=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future;
  client.prepareUnsupportedVersionResponse(new MockClient.RequestMatcher(){
    @Override public boolean matches(    AbstractRequest body){
      return body instanceof ProduceRequest && ((ProduceRequest)body).isIdempotent();
    }
  }
);
  sender.run(time.milliseconds());
  assertFutureFailure(future,UnsupportedVersionException.class);
  assertTrue(transactionManager.hasFatalError());
  assertSendFailure(UnsupportedVersionException.class);
}
