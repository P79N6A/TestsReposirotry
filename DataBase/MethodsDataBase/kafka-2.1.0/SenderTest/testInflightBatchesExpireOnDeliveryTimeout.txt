@Test public void testInflightBatchesExpireOnDeliveryTimeout() throws InterruptedException {
  long deliveryTimeoutMs=1500L;
  setupWithTransactionState(null,true,null);
  Future<RecordMetadata> request=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future;
  sender.run(time.milliseconds());
  assertEquals(1,client.inFlightRequestCount());
  assertEquals("Expect one in-flight batch in accumulator",1,sender.inFlightBatches(tp0).size());
  Map<TopicPartition,ProduceResponse.PartitionResponse> responseMap=new HashMap<>();
  responseMap.put(tp0,new ProduceResponse.PartitionResponse(Errors.NONE,0L,0L,0L));
  client.respond(new ProduceResponse(responseMap));
  time.sleep(deliveryTimeoutMs);
  sender.run(time.milliseconds());
  assertEquals("Expect zero in-flight batch in accumulator",0,sender.inFlightBatches(tp0).size());
  try {
    request.get();
    fail("The expired batch should throw a TimeoutException");
  }
 catch (  ExecutionException e) {
    assertTrue(e.getCause() instanceof TimeoutException);
  }
}
