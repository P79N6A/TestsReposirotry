@Test public void testExpiredBatchDoesNotSplitOnMessageTooLargeError() throws Exception {
  long deliverTimeoutMs=1500L;
  Future<RecordMetadata> request1=accumulator.append(tp0,time.milliseconds(),"key1".getBytes(),"value1".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future;
  Future<RecordMetadata> request2=accumulator.append(tp0,time.milliseconds(),"key2".getBytes(),"value2".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future;
  sender.run(time.milliseconds());
  assertEquals(1,client.inFlightRequestCount());
  client.respond(produceResponse(tp0,-1,Errors.MESSAGE_TOO_LARGE,-1));
  time.sleep(deliverTimeoutMs);
  sender.run(time.milliseconds());
  assertTrue(request1.isDone());
  assertTrue(request2.isDone());
  assertEquals(0,client.inFlightRequestCount());
  assertEquals(0,sender.inFlightBatches(tp0).size());
  sender.run(time.milliseconds());
  assertEquals(0,client.inFlightRequestCount());
  assertEquals(0,sender.inFlightBatches(tp0).size());
}
