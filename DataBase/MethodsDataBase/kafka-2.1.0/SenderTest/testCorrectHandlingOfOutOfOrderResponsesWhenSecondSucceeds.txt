@Test public void testCorrectHandlingOfOutOfOrderResponsesWhenSecondSucceeds() throws Exception {
  final long producerId=343434L;
  TransactionManager transactionManager=new TransactionManager();
  setupWithTransactionState(transactionManager);
  prepareAndReceiveInitProducerId(producerId,Errors.NONE);
  assertTrue(transactionManager.hasProducerId());
  assertEquals(0,transactionManager.sequenceNumber(tp0).longValue());
  Future<RecordMetadata> request1=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future;
  sender.run(time.milliseconds());
  String nodeId=client.requests().peek().destination();
  Node node=new Node(Integer.valueOf(nodeId),"localhost",0);
  assertEquals(1,client.inFlightRequestCount());
  Future<RecordMetadata> request2=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future;
  sender.run(time.milliseconds());
  assertEquals(2,client.inFlightRequestCount());
  assertFalse(request1.isDone());
  assertFalse(request2.isDone());
  assertTrue(client.isReady(node,time.milliseconds()));
  ClientRequest firstClientRequest=client.requests().peek();
  ClientRequest secondClientRequest=(ClientRequest)client.requests().toArray()[1];
  client.respondToRequest(secondClientRequest,produceResponse(tp0,1,Errors.NONE,1));
  sender.run(time.milliseconds());
  assertTrue(request2.isDone());
  assertEquals(1,request2.get().offset());
  assertFalse(request1.isDone());
  Deque<ProducerBatch> queuedBatches=accumulator.batches().get(tp0);
  assertEquals(0,queuedBatches.size());
  assertEquals(1,client.inFlightRequestCount());
  assertEquals(1,transactionManager.lastAckedSequence(tp0));
  client.respondToRequest(firstClientRequest,produceResponse(tp0,-1,Errors.REQUEST_TIMED_OUT,-1));
  sender.run(time.milliseconds());
  assertEquals(1,queuedBatches.size());
  assertEquals(0,queuedBatches.peekFirst().baseSequence());
  assertEquals(1,transactionManager.lastAckedSequence(tp0));
  assertEquals(0,client.inFlightRequestCount());
  sender.run(time.milliseconds());
  assertEquals(1,client.inFlightRequestCount());
  assertEquals(1,client.inFlightRequestCount());
  assertEquals(1,transactionManager.lastAckedSequence(tp0));
  sendIdempotentProducerResponse(0,tp0,Errors.NONE,0L);
  sender.run(time.milliseconds());
  assertEquals(0,queuedBatches.size());
  assertEquals(1,transactionManager.lastAckedSequence(tp0));
  assertEquals(0,client.inFlightRequestCount());
  assertFalse(client.hasInFlightRequests());
  assertTrue(request1.isDone());
  assertEquals(0,request1.get().offset());
}
