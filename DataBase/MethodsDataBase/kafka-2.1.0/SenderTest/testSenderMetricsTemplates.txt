@Test public void testSenderMetricsTemplates() throws Exception {
  metrics.close();
  Map<String,String> clientTags=Collections.singletonMap("client-id","clientA");
  metrics=new Metrics(new MetricConfig().tags(clientTags));
  SenderMetricsRegistry metricsRegistry=new SenderMetricsRegistry(metrics);
  Sender sender=new Sender(logContext,client,metadata,this.accumulator,false,MAX_REQUEST_SIZE,ACKS_ALL,1,metricsRegistry,time,REQUEST_TIMEOUT,50,null,apiVersions);
  accumulator.append(tp0,0L,"key".getBytes(),"value".getBytes(),null,null,MAX_BLOCK_TIMEOUT);
  sender.run(time.milliseconds());
  sender.run(time.milliseconds());
  client.respond(produceResponse(tp0,0,Errors.NONE,0));
  sender.run(time.milliseconds());
  Sender.throttleTimeSensor(metricsRegistry);
  Set<MetricNameTemplate> allMetrics=new HashSet<>();
  for (  MetricName n : metrics.metrics().keySet()) {
    if (!n.group().equals("kafka-metrics-count"))     allMetrics.add(new MetricNameTemplate(n.name(),n.group(),"",n.tags().keySet()));
  }
  TestUtils.checkEquals(allMetrics,new HashSet<>(metricsRegistry.allTemplates()),"metrics","templates");
}
