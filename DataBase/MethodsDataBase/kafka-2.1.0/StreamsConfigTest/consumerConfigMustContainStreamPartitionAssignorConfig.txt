@Test public void consumerConfigMustContainStreamPartitionAssignorConfig(){
  props.put(StreamsConfig.REPLICATION_FACTOR_CONFIG,42);
  props.put(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG,1);
  props.put(StreamsConfig.WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG,7L);
  props.put(StreamsConfig.APPLICATION_SERVER_CONFIG,"dummy:host");
  props.put(StreamsConfig.RETRIES_CONFIG,10);
  props.put(StreamsConfig.adminClientPrefix(StreamsConfig.RETRIES_CONFIG),5);
  props.put(StreamsConfig.topicPrefix(TopicConfig.SEGMENT_BYTES_CONFIG),100);
  final StreamsConfig streamsConfig=new StreamsConfig(props);
  final String groupId="example-application";
  final String clientId="client";
  final Map<String,Object> returnedProps=streamsConfig.getMainConsumerConfigs(groupId,clientId);
  assertEquals(42,returnedProps.get(StreamsConfig.REPLICATION_FACTOR_CONFIG));
  assertEquals(1,returnedProps.get(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG));
  assertEquals(StreamsPartitionAssignor.class.getName(),returnedProps.get(ConsumerConfig.PARTITION_ASSIGNMENT_STRATEGY_CONFIG));
  assertEquals(7L,returnedProps.get(StreamsConfig.WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG));
  assertEquals("dummy:host",returnedProps.get(StreamsConfig.APPLICATION_SERVER_CONFIG));
  assertEquals(null,returnedProps.get(StreamsConfig.RETRIES_CONFIG));
  assertEquals(5,returnedProps.get(StreamsConfig.adminClientPrefix(StreamsConfig.RETRIES_CONFIG)));
  assertEquals(100,returnedProps.get(StreamsConfig.topicPrefix(TopicConfig.SEGMENT_BYTES_CONFIG)));
}
