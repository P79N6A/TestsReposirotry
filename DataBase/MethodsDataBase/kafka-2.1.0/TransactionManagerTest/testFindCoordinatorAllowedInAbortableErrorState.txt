@Test public void testFindCoordinatorAllowedInAbortableErrorState() throws InterruptedException {
  final long pid=13131L;
  final short epoch=1;
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  assertFalse(responseFuture.isDone());
  sender.run(time.milliseconds());
  transactionManager.transitionToAbortableError(new KafkaException());
  sendAddPartitionsToTxnResponse(Errors.NOT_COORDINATOR,tp0,epoch,pid);
  sender.run(time.milliseconds());
  assertTrue(transactionManager.hasAbortableError());
  assertNull(transactionManager.coordinator(CoordinatorType.TRANSACTION));
  prepareFindCoordinatorResponse(Errors.NONE,false,CoordinatorType.TRANSACTION,transactionalId);
  sender.run(time.milliseconds());
  assertEquals(brokerNode,transactionManager.coordinator(CoordinatorType.TRANSACTION));
  assertTrue(transactionManager.hasAbortableError());
}
