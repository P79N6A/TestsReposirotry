@Test public void testTransitionToAbortableErrorOnBatchExpiry() throws InterruptedException, ExecutionException {
  final long pid=13131L;
  final short epoch=1;
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  assertFalse(responseFuture.isDone());
  prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid);
  assertFalse(transactionManager.transactionContainsPartition(tp0));
  assertFalse(transactionManager.isSendToPartitionAllowed(tp0));
  sender.run(time.milliseconds());
  assertTrue(transactionManager.transactionContainsPartition(tp0));
  assertTrue(transactionManager.isSendToPartitionAllowed(tp0));
  assertFalse(responseFuture.isDone());
  time.sleep(10000);
  Node clusterNode=this.cluster.nodes().get(0);
  client.disconnect(clusterNode.idString());
  client.blackout(clusterNode,100);
  sender.run(time.milliseconds());
  assertTrue(responseFuture.isDone());
  try {
    responseFuture.get();
    fail("Expected to get a TimeoutException since the queued ProducerBatch should have been expired");
  }
 catch (  ExecutionException e) {
    assertTrue(e.getCause() instanceof TimeoutException);
  }
  assertTrue(transactionManager.hasAbortableError());
}
