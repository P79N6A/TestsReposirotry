@Test public void testFlushPendingPartitionsOnCommit() throws InterruptedException {
  final long pid=13131L;
  final short epoch=1;
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  assertFalse(responseFuture.isDone());
  TransactionalRequestResult commitResult=transactionManager.beginCommit();
  assertFalse(transactionManager.transactionContainsPartition(tp0));
  prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid);
  sender.run(time.milliseconds());
  assertTrue(transactionManager.transactionContainsPartition(tp0));
  assertFalse(responseFuture.isDone());
  assertFalse(commitResult.isCompleted());
  prepareProduceResponse(Errors.NONE,pid,epoch);
  sender.run(time.milliseconds());
  assertTrue(responseFuture.isDone());
  prepareEndTxnResponse(Errors.NONE,TransactionResult.COMMIT,pid,epoch);
  assertFalse(commitResult.isCompleted());
  assertTrue(transactionManager.hasOngoingTransaction());
  assertTrue(transactionManager.isCompleting());
  sender.run(time.milliseconds());
  assertTrue(commitResult.isCompleted());
  assertFalse(transactionManager.hasOngoingTransaction());
}
