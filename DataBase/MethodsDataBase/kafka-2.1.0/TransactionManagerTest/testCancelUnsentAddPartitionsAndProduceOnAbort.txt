@Test public void testCancelUnsentAddPartitionsAndProduceOnAbort() throws InterruptedException {
  final long pid=13131L;
  final short epoch=1;
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  assertFalse(responseFuture.isDone());
  TransactionalRequestResult abortResult=transactionManager.beginAbort();
  sender.run(time.milliseconds());
  assertTrue(abortResult.isCompleted());
  assertTrue(abortResult.isSuccessful());
  assertTrue(transactionManager.isReady());
  try {
    responseFuture.get();
    fail("Expected produce future to raise an exception");
  }
 catch (  ExecutionException e) {
    assertTrue(e.getCause() instanceof KafkaException);
  }
}
