@Test public void testBasicTransaction() throws InterruptedException {
  final long pid=13131L;
  final short epoch=1;
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  assertFalse(responseFuture.isDone());
  prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid);
  prepareProduceResponse(Errors.NONE,pid,epoch);
  assertFalse(transactionManager.transactionContainsPartition(tp0));
  assertFalse(transactionManager.isSendToPartitionAllowed(tp0));
  sender.run(time.milliseconds());
  assertTrue(transactionManager.transactionContainsPartition(tp0));
  assertTrue(transactionManager.isSendToPartitionAllowed(tp0));
  assertFalse(responseFuture.isDone());
  sender.run(time.milliseconds());
  assertTrue(responseFuture.isDone());
  Map<TopicPartition,OffsetAndMetadata> offsets=new HashMap<>();
  offsets.put(tp1,new OffsetAndMetadata(1));
  final String consumerGroupId="myconsumergroup";
  TransactionalRequestResult addOffsetsResult=transactionManager.sendOffsetsToTransaction(offsets,consumerGroupId);
  assertFalse(transactionManager.hasPendingOffsetCommits());
  prepareAddOffsetsToTxnResponse(Errors.NONE,consumerGroupId,pid,epoch);
  sender.run(time.milliseconds());
  assertTrue(transactionManager.hasPendingOffsetCommits());
  assertFalse(addOffsetsResult.isCompleted());
  Map<TopicPartition,Errors> txnOffsetCommitResponse=new HashMap<>();
  txnOffsetCommitResponse.put(tp1,Errors.NONE);
  prepareFindCoordinatorResponse(Errors.NONE,false,CoordinatorType.GROUP,consumerGroupId);
  prepareTxnOffsetCommitResponse(consumerGroupId,pid,epoch,txnOffsetCommitResponse);
  assertEquals(null,transactionManager.coordinator(CoordinatorType.GROUP));
  sender.run(time.milliseconds());
  sender.run(time.milliseconds());
  assertNotNull(transactionManager.coordinator(CoordinatorType.GROUP));
  assertTrue(transactionManager.hasPendingOffsetCommits());
  sender.run(time.milliseconds());
  assertFalse(transactionManager.hasPendingOffsetCommits());
  assertTrue(addOffsetsResult.isCompleted());
  transactionManager.beginCommit();
  prepareEndTxnResponse(Errors.NONE,TransactionResult.COMMIT,pid,epoch);
  sender.run(time.milliseconds());
  assertFalse(transactionManager.hasOngoingTransaction());
  assertFalse(transactionManager.isCompleting());
  assertFalse(transactionManager.transactionContainsPartition(tp0));
}
