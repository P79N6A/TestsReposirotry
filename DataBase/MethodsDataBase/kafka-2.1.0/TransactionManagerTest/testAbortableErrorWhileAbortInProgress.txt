@Test public void testAbortableErrorWhileAbortInProgress() throws InterruptedException {
  final long pid=13131L;
  final short epoch=1;
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  assertFalse(responseFuture.isDone());
  prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid);
  sender.run(time.milliseconds());
  sender.run(time.milliseconds());
  TransactionalRequestResult abortResult=transactionManager.beginAbort();
  assertTrue(transactionManager.isAborting());
  assertFalse(transactionManager.hasError());
  sendProduceResponse(Errors.OUT_OF_ORDER_SEQUENCE_NUMBER,pid,epoch);
  prepareEndTxnResponse(Errors.NONE,TransactionResult.ABORT,pid,epoch);
  sender.run(time.milliseconds());
  assertTrue(transactionManager.isAborting());
  assertFalse(transactionManager.hasError());
  sender.run(time.milliseconds());
  assertTrue(abortResult.isCompleted());
  assertTrue(abortResult.isSuccessful());
  assertTrue(transactionManager.isReady());
}
