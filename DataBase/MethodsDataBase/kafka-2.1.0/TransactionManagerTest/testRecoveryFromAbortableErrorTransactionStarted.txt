@Test public void testRecoveryFromAbortableErrorTransactionStarted() throws Exception {
  final long pid=13131L;
  final short epoch=1;
  final TopicPartition unauthorizedPartition=new TopicPartition("foo",0);
  doInitTransactions(pid,epoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  prepareAddPartitionsToTxn(tp0,Errors.NONE);
  Future<RecordMetadata> authorizedTopicProduceFuture=accumulator.append(unauthorizedPartition,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  sender.run(time.milliseconds());
  assertTrue(transactionManager.isPartitionAdded(tp0));
  transactionManager.maybeAddPartitionToTransaction(unauthorizedPartition);
  Future<RecordMetadata> unauthorizedTopicProduceFuture=accumulator.append(unauthorizedPartition,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  prepareAddPartitionsToTxn(singletonMap(unauthorizedPartition,Errors.TOPIC_AUTHORIZATION_FAILED));
  sender.run(time.milliseconds());
  assertTrue(transactionManager.hasAbortableError());
  assertTrue(transactionManager.isPartitionAdded(tp0));
  assertFalse(transactionManager.isPartitionAdded(unauthorizedPartition));
  assertFalse(authorizedTopicProduceFuture.isDone());
  assertFalse(unauthorizedTopicProduceFuture.isDone());
  prepareEndTxnResponse(Errors.NONE,TransactionResult.ABORT,pid,epoch);
  transactionManager.beginAbort();
  sender.run(time.milliseconds());
  assertFutureFailed(authorizedTopicProduceFuture);
  assertFutureFailed(unauthorizedTopicProduceFuture);
  assertTrue(transactionManager.isReady());
  assertFalse(transactionManager.hasPartitionsToAdd());
  assertFalse(accumulator.hasIncomplete());
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  FutureRecordMetadata nextTransactionFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  prepareAddPartitionsToTxn(singletonMap(tp0,Errors.NONE));
  sender.run(time.milliseconds());
  assertTrue(transactionManager.isPartitionAdded(tp0));
  assertFalse(transactionManager.hasPartitionsToAdd());
  transactionManager.beginCommit();
  prepareProduceResponse(Errors.NONE,pid,epoch);
  sender.run(time.milliseconds());
  assertTrue(nextTransactionFuture.isDone());
  assertNotNull(nextTransactionFuture.get());
  prepareEndTxnResponse(Errors.NONE,TransactionResult.COMMIT,pid,epoch);
  sender.run(time.milliseconds());
  assertTrue(transactionManager.isReady());
}
