@Test public void testAbortResendsProduceRequestIfRetried() throws Exception {
  final long producerId=13131L;
  final short producerEpoch=1;
  doInitTransactions(producerId,producerEpoch);
  transactionManager.beginTransaction();
  transactionManager.maybeAddPartitionToTransaction(tp0);
  prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,producerEpoch,producerId);
  prepareProduceResponse(Errors.REQUEST_TIMED_OUT,producerId,producerEpoch);
  Future<RecordMetadata> responseFuture=accumulator.append(tp0,time.milliseconds(),"key".getBytes(),"value".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future;
  sender.run(time.milliseconds());
  sender.run(time.milliseconds());
  assertFalse(responseFuture.isDone());
  TransactionalRequestResult abortResult=transactionManager.beginAbort();
  prepareProduceResponse(Errors.NONE,producerId,producerEpoch);
  prepareEndTxnResponse(Errors.NONE,TransactionResult.ABORT,producerId,producerEpoch);
  sender.run(time.milliseconds());
  sender.run(time.milliseconds());
  assertTrue(abortResult.isCompleted());
  assertTrue(abortResult.isSuccessful());
  assertTrue(transactionManager.isReady());
  RecordMetadata recordMetadata=responseFuture.get();
  assertEquals(tp0.topic(),recordMetadata.topic());
}
