@Deprecated @Test public void shouldLogAndMeterWhenSkippingExpiredWindow(){
  final StreamsBuilder builder=new StreamsBuilder();
  final String topic="topic";
  final KStream<String,String> stream1=builder.stream(topic,Consumed.with(Serdes.String(),Serdes.String()));
  stream1.groupByKey(Serialized.with(Serdes.String(),Serdes.String())).windowedBy(TimeWindows.of(ofMillis(10)).advanceBy(ofMillis(5)).until(100)).aggregate(() -> "",MockAggregator.toStringInstance("+"),Materialized.<String,String,WindowStore<Bytes,byte[]>>as("topic1-Canonicalized").withValueSerde(Serdes.String()).withCachingDisabled().withLoggingDisabled()).toStream().map((key,value) -> new KeyValue<>(key.toString(),value)).to("output");
  LogCaptureAppender.setClassLoggerToDebug(KStreamWindowAggregate.class);
  final LogCaptureAppender appender=LogCaptureAppender.createAndRegister();
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props,0L)){
    driver.pipeInput(recordFactory.create(topic,"k","100",100L));
    driver.pipeInput(recordFactory.create(topic,"k","0",0L));
    driver.pipeInput(recordFactory.create(topic,"k","1",1L));
    driver.pipeInput(recordFactory.create(topic,"k","2",2L));
    driver.pipeInput(recordFactory.create(topic,"k","3",3L));
    driver.pipeInput(recordFactory.create(topic,"k","4",4L));
    driver.pipeInput(recordFactory.create(topic,"k","5",5L));
    driver.pipeInput(recordFactory.create(topic,"k","6",6L));
    LogCaptureAppender.unregister(appender);
    assertLatenessMetrics(driver,is(7.0),is(100.0),is(84.875));
    assertThat(appender.getMessages(),hasItems("Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[1] timestamp=[0] window=[0,10) expiration=[10]","Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[2] timestamp=[1] window=[0,10) expiration=[10]","Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[3] timestamp=[2] window=[0,10) expiration=[10]","Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[4] timestamp=[3] window=[0,10) expiration=[10]","Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[5] timestamp=[4] window=[0,10) expiration=[10]","Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[6] timestamp=[5] window=[0,10) expiration=[10]","Skipping record for expired window. key=[k] topic=[topic] partition=[0] offset=[7] timestamp=[6] window=[0,10) expiration=[10]"));
    OutputVerifier.compareKeyValueTimestamp(getOutput(driver),"[k@95/105]","+100",100);
    OutputVerifier.compareKeyValueTimestamp(getOutput(driver),"[k@100/110]","+100",100);
    OutputVerifier.compareKeyValueTimestamp(getOutput(driver),"[k@5/15]","+5",5);
    OutputVerifier.compareKeyValueTimestamp(getOutput(driver),"[k@5/15]","+5+6",6);
    assertThat(driver.readOutput("output"),nullValue());
  }
 }
