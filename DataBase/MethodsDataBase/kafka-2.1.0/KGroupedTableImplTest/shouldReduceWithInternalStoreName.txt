@Test public void shouldReduceWithInternalStoreName(){
  final KeyValueMapper<String,Number,KeyValue<String,Integer>> intProjection=new KeyValueMapper<String,Number,KeyValue<String,Integer>>(){
    @Override public KeyValue<String,Integer> apply(    final String key,    final Number value){
      return KeyValue.pair(key,value.intValue());
    }
  }
;
  final KTable<String,Integer> reduced=builder.table(topic,Consumed.with(Serdes.String(),Serdes.Double()),Materialized.<String,Double,KeyValueStore<Bytes,byte[]>>as("store").withKeySerde(Serdes.String()).withValueSerde(Serdes.Double())).groupBy(intProjection).reduce(MockReducer.INTEGER_ADDER,MockReducer.INTEGER_SUBTRACTOR);
  final Map<String,Integer> results=getReducedResults(reduced);
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){
    assertReduced(results,topic,driver);
    assertNull(reduced.queryableStoreName());
  }
 }
