@Test public void shouldCreateRequiredTopics() throws Exception {
  final InternalTopicConfig topicConfig=new RepartitionTopicConfig(topic,Collections.<String,String>emptyMap());
  topicConfig.setNumberOfPartitions(1);
  final InternalTopicConfig topicConfig2=new UnwindowedChangelogTopicConfig(topic2,Collections.<String,String>emptyMap());
  topicConfig2.setNumberOfPartitions(1);
  final InternalTopicConfig topicConfig3=new WindowedChangelogTopicConfig(topic3,Collections.<String,String>emptyMap());
  topicConfig3.setNumberOfPartitions(1);
  internalTopicManager.makeReady(Collections.singletonMap(topic,topicConfig));
  internalTopicManager.makeReady(Collections.singletonMap(topic2,topicConfig2));
  internalTopicManager.makeReady(Collections.singletonMap(topic3,topicConfig3));
  assertEquals(Utils.mkSet(topic,topic2,topic3),mockAdminClient.listTopics().names().get());
  assertEquals(new TopicDescription(topic,false,new ArrayList<TopicPartitionInfo>(){
{
      add(new TopicPartitionInfo(0,broker1,singleReplica,Collections.<Node>emptyList()));
    }
  }
),mockAdminClient.describeTopics(Collections.singleton(topic)).values().get(topic).get());
  assertEquals(new TopicDescription(topic2,false,new ArrayList<TopicPartitionInfo>(){
{
      add(new TopicPartitionInfo(0,broker1,singleReplica,Collections.<Node>emptyList()));
    }
  }
),mockAdminClient.describeTopics(Collections.singleton(topic2)).values().get(topic2).get());
  assertEquals(new TopicDescription(topic3,false,new ArrayList<TopicPartitionInfo>(){
{
      add(new TopicPartitionInfo(0,broker1,singleReplica,Collections.<Node>emptyList()));
    }
  }
),mockAdminClient.describeTopics(Collections.singleton(topic3)).values().get(topic3).get());
  final ConfigResource resource=new ConfigResource(ConfigResource.Type.TOPIC,topic);
  final ConfigResource resource2=new ConfigResource(ConfigResource.Type.TOPIC,topic2);
  final ConfigResource resource3=new ConfigResource(ConfigResource.Type.TOPIC,topic3);
  assertEquals(new ConfigEntry(TopicConfig.CLEANUP_POLICY_CONFIG,TopicConfig.CLEANUP_POLICY_DELETE),mockAdminClient.describeConfigs(Collections.singleton(resource)).values().get(resource).get().get(TopicConfig.CLEANUP_POLICY_CONFIG));
  assertEquals(new ConfigEntry(TopicConfig.CLEANUP_POLICY_CONFIG,TopicConfig.CLEANUP_POLICY_COMPACT),mockAdminClient.describeConfigs(Collections.singleton(resource2)).values().get(resource2).get().get(TopicConfig.CLEANUP_POLICY_CONFIG));
  assertEquals(new ConfigEntry(TopicConfig.CLEANUP_POLICY_CONFIG,TopicConfig.CLEANUP_POLICY_COMPACT + "," + TopicConfig.CLEANUP_POLICY_DELETE),mockAdminClient.describeConfigs(Collections.singleton(resource3)).values().get(resource3).get().get(TopicConfig.CLEANUP_POLICY_CONFIG));
}
