@Test public void shouldComputeGroupingForTwoGroups(){
  final PartitionGrouper grouper=new DefaultPartitionGrouper();
  final Map<TaskId,Set<TopicPartition>> expectedPartitionsForTask=new HashMap<>();
  final Map<Integer,Set<String>> topicGroups=new HashMap<>();
  int topicGroupId=0;
  topicGroups.put(topicGroupId,mkSet("topic1"));
  expectedPartitionsForTask.put(new TaskId(topicGroupId,0),mkSet(new TopicPartition("topic1",0)));
  expectedPartitionsForTask.put(new TaskId(topicGroupId,1),mkSet(new TopicPartition("topic1",1)));
  expectedPartitionsForTask.put(new TaskId(topicGroupId,2),mkSet(new TopicPartition("topic1",2)));
  topicGroups.put(++topicGroupId,mkSet("topic2"));
  expectedPartitionsForTask.put(new TaskId(topicGroupId,0),mkSet(new TopicPartition("topic2",0)));
  expectedPartitionsForTask.put(new TaskId(topicGroupId,1),mkSet(new TopicPartition("topic2",1)));
  assertEquals(expectedPartitionsForTask,grouper.partitionGroups(topicGroups,metadata));
}
