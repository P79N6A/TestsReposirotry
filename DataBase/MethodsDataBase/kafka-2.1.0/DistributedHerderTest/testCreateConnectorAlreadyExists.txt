@Test public void testCreateConnectorAlreadyExists() throws Exception {
  EasyMock.expect(member.memberId()).andStubReturn("leader");
  EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2);
  final Capture<Map<String,String>> configCapture=EasyMock.newCapture();
  EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(configCapture::getValue);
  EasyMock.expect(worker.getPlugins()).andReturn(plugins);
  EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(null);
  expectRebalance(1,Collections.<String>emptyList(),Collections.<ConnectorTaskId>emptyList());
  expectPostRebalanceCatchup(SNAPSHOT);
  member.wakeup();
  PowerMock.expectLastCall();
  putConnectorCallback.onCompletion(EasyMock.<AlreadyExistsException>anyObject(),EasyMock.<Herder.Created<ConnectorInfo>>isNull());
  PowerMock.expectLastCall();
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.putConnectorConfig(CONN1,CONN1_CONFIG,false,putConnectorCallback);
  herder.tick();
  time.sleep(1000L);
  assertStatistics(3,1,100,1000L);
  PowerMock.verifyAll();
}
