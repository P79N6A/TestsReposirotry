@Test public void testDestroyConnector() throws Exception {
  EasyMock.expect(member.memberId()).andStubReturn("leader");
  EasyMock.expect(worker.getPlugins()).andReturn(plugins);
  expectRebalance(1,Arrays.asList(CONN1),Collections.<ConnectorTaskId>emptyList());
  expectPostRebalanceCatchup(SNAPSHOT);
  worker.startConnector(EasyMock.eq(CONN1),EasyMock.<Map<String,String>>anyObject(),EasyMock.<ConnectorContext>anyObject(),EasyMock.eq(herder),EasyMock.eq(TargetState.STARTED));
  PowerMock.expectLastCall().andReturn(true);
  EasyMock.expect(worker.isRunning(CONN1)).andReturn(true);
  EasyMock.expect(worker.connectorTaskConfigs(CONN1,conn1SinkConfig)).andReturn(TASK_CONFIGS);
  member.wakeup();
  PowerMock.expectLastCall();
  configBackingStore.removeConnectorConfig(CONN1);
  PowerMock.expectLastCall();
  putConnectorCallback.onCompletion(null,new Herder.Created<ConnectorInfo>(false,null));
  PowerMock.expectLastCall();
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.deleteConnectorConfig(CONN1,putConnectorCallback);
  herder.tick();
  time.sleep(1000L);
  assertStatistics(3,1,100,1000L);
  PowerMock.verifyAll();
}
