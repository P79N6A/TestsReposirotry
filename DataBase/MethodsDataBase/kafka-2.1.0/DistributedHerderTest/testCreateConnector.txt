@Test public void testCreateConnector() throws Exception {
  EasyMock.expect(member.memberId()).andStubReturn("leader");
  expectRebalance(1,Collections.<String>emptyList(),Collections.<ConnectorTaskId>emptyList());
  expectPostRebalanceCatchup(SNAPSHOT);
  member.wakeup();
  PowerMock.expectLastCall();
  Connector connectorMock=PowerMock.createMock(SourceConnector.class);
  EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2);
  final Capture<Map<String,String>> configCapture=EasyMock.newCapture();
  EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(configCapture::getValue);
  EasyMock.expect(worker.getPlugins()).andReturn(plugins).times(3);
  EasyMock.expect(plugins.compareAndSwapLoaders(connectorMock)).andReturn(delegatingLoader);
  EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(connectorMock);
  EasyMock.expect(connectorMock.config()).andReturn(new ConfigDef());
  EasyMock.expect(connectorMock.validate(CONN2_CONFIG)).andReturn(new Config(Collections.<ConfigValue>emptyList()));
  EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader);
  configBackingStore.putConnectorConfig(CONN2,CONN2_CONFIG);
  PowerMock.expectLastCall();
  ConnectorInfo info=new ConnectorInfo(CONN2,CONN2_CONFIG,Collections.<ConnectorTaskId>emptyList(),ConnectorType.SOURCE);
  putConnectorCallback.onCompletion(null,new Herder.Created<>(true,info));
  PowerMock.expectLastCall();
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.putConnectorConfig(CONN2,CONN2_CONFIG,false,putConnectorCallback);
  herder.tick();
  time.sleep(1000L);
  assertStatistics(3,1,100,1000L);
  PowerMock.verifyAll();
}
