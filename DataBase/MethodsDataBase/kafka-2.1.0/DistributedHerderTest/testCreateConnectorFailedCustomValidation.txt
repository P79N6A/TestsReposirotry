@Test public void testCreateConnectorFailedCustomValidation() throws Exception {
  EasyMock.expect(member.memberId()).andStubReturn("leader");
  expectRebalance(1,Collections.<String>emptyList(),Collections.<ConnectorTaskId>emptyList());
  expectPostRebalanceCatchup(SNAPSHOT);
  member.wakeup();
  PowerMock.expectLastCall();
  Connector connectorMock=PowerMock.createMock(SourceConnector.class);
  EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2);
  final Capture<Map<String,String>> configCapture=EasyMock.newCapture();
  EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(configCapture::getValue);
  EasyMock.expect(worker.getPlugins()).andReturn(plugins).times(3);
  EasyMock.expect(plugins.compareAndSwapLoaders(connectorMock)).andReturn(delegatingLoader);
  EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(connectorMock);
  ConfigDef configDef=new ConfigDef();
  configDef.define("foo.bar",ConfigDef.Type.STRING,ConfigDef.Importance.HIGH,"foo.bar doc");
  EasyMock.expect(connectorMock.config()).andReturn(configDef);
  ConfigValue validatedValue=new ConfigValue("foo.bar");
  validatedValue.addErrorMessage("Failed foo.bar validation");
  EasyMock.expect(connectorMock.validate(CONN2_CONFIG)).andReturn(new Config(singletonList(validatedValue)));
  EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader);
  Capture<Throwable> error=EasyMock.newCapture();
  putConnectorCallback.onCompletion(EasyMock.capture(error),EasyMock.<Herder.Created<ConnectorInfo>>isNull());
  PowerMock.expectLastCall();
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.putConnectorConfig(CONN2,CONN2_CONFIG,false,putConnectorCallback);
  herder.tick();
  assertTrue(error.hasCaptured());
  assertTrue(error.getValue() instanceof BadRequestException);
  time.sleep(1000L);
  assertStatistics(3,1,100,1000L);
  PowerMock.verifyAll();
}
