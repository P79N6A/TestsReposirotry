@Test public void testTaskConfigAdded(){
  EasyMock.expect(member.memberId()).andStubReturn("member");
  expectRebalance(-1,Collections.<String>emptyList(),Collections.<ConnectorTaskId>emptyList());
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  member.wakeup();
  member.ensureActive();
  PowerMock.expectLastCall();
  EasyMock.expect(configBackingStore.snapshot()).andReturn(SNAPSHOT);
  member.requestRejoin();
  PowerMock.expectLastCall();
  expectRebalance(Collections.<String>emptyList(),Collections.<ConnectorTaskId>emptyList(),ConnectProtocol.Assignment.NO_ERROR,1,Collections.<String>emptyList(),Arrays.asList(TASK0));
  worker.startTask(EasyMock.eq(TASK0),EasyMock.<ClusterConfigState>anyObject(),EasyMock.<Map<String,String>>anyObject(),EasyMock.<Map<String,String>>anyObject(),EasyMock.eq(herder),EasyMock.eq(TargetState.STARTED));
  PowerMock.expectLastCall().andReturn(true);
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.tick();
  configUpdateListener.onTaskConfigUpdate(Arrays.asList(TASK0,TASK1,TASK2));
  herder.tick();
  herder.tick();
  PowerMock.verifyAll();
}
