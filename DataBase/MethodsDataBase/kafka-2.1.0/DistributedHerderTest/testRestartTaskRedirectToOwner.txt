@Test public void testRestartTaskRedirectToOwner() throws Exception {
  EasyMock.expect(member.memberId()).andStubReturn("leader");
  expectRebalance(1,Collections.<String>emptyList(),Collections.<ConnectorTaskId>emptyList());
  expectPostRebalanceCatchup(SNAPSHOT);
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  String ownerUrl="ownerUrl";
  EasyMock.expect(member.ownerUrl(TASK0)).andReturn(ownerUrl);
  member.wakeup();
  PowerMock.expectLastCall();
  member.ensureActive();
  PowerMock.expectLastCall();
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.tick();
  FutureCallback<Void> callback=new FutureCallback<>();
  herder.restartTask(TASK0,callback);
  herder.tick();
  try {
    callback.get(1000L,TimeUnit.MILLISECONDS);
    fail("Expected NotLeaderException to be raised");
  }
 catch (  ExecutionException e) {
    assertTrue(e.getCause() instanceof NotAssignedException);
    NotAssignedException notAssignedException=(NotAssignedException)e.getCause();
    assertEquals(ownerUrl,notAssignedException.forwardUrl());
  }
  PowerMock.verifyAll();
}
