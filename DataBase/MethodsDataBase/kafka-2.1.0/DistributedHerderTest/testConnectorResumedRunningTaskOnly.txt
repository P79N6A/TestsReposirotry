@Test public void testConnectorResumedRunningTaskOnly() throws Exception {
  EasyMock.expect(member.memberId()).andStubReturn("member");
  EasyMock.expect(worker.connectorNames()).andStubReturn(Collections.<String>emptySet());
  expectRebalance(1,Collections.<String>emptyList(),singletonList(TASK0));
  expectPostRebalanceCatchup(SNAPSHOT_PAUSED_CONN1);
  worker.startTask(EasyMock.eq(TASK0),EasyMock.<ClusterConfigState>anyObject(),EasyMock.<Map<String,String>>anyObject(),EasyMock.<Map<String,String>>anyObject(),EasyMock.eq(herder),EasyMock.eq(TargetState.PAUSED));
  PowerMock.expectLastCall().andReturn(true);
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  member.wakeup();
  member.ensureActive();
  PowerMock.expectLastCall();
  EasyMock.expect(configBackingStore.snapshot()).andReturn(SNAPSHOT);
  PowerMock.expectLastCall();
  worker.setTargetState(CONN1,TargetState.STARTED);
  PowerMock.expectLastCall();
  EasyMock.expect(worker.isRunning(CONN1)).andReturn(false);
  member.poll(EasyMock.anyInt());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  herder.tick();
  configUpdateListener.onConnectorTargetStateChange(CONN1);
  herder.tick();
  PowerMock.verifyAll();
}
