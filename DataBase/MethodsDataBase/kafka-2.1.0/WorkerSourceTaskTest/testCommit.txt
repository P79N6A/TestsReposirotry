@Test public void testCommit() throws Exception {
  createWorkerTask();
  sourceTask.initialize(EasyMock.anyObject(SourceTaskContext.class));
  EasyMock.expectLastCall();
  sourceTask.start(TASK_PROPS);
  EasyMock.expectLastCall();
  statusListener.onStartup(taskId);
  EasyMock.expectLastCall();
  final CountDownLatch pollLatch=expectPolls(1);
  expectOffsetFlush(true);
  sourceTask.stop();
  EasyMock.expectLastCall();
  expectOffsetFlush(true);
  statusListener.onShutdown(taskId);
  EasyMock.expectLastCall();
  producer.close(EasyMock.anyLong(),EasyMock.anyObject(TimeUnit.class));
  EasyMock.expectLastCall();
  transformationChain.close();
  EasyMock.expectLastCall();
  PowerMock.replayAll();
  workerTask.initialize(TASK_CONFIG);
  Future<?> taskFuture=executor.submit(workerTask);
  assertTrue(awaitLatch(pollLatch));
  assertTrue(workerTask.commitOffsets());
  workerTask.stop();
  assertTrue(workerTask.awaitStop(1000));
  taskFuture.get();
  assertPollMetrics(1);
  PowerMock.verifyAll();
}
