@Test public void testEqualsAndHashCodeWithByteArrayValue(){
  Struct struct1=new Struct(FLAT_STRUCT_SCHEMA).put("int8",(byte)12).put("int16",(short)12).put("int32",12).put("int64",(long)12).put("float32",12.f).put("float64",12.).put("boolean",true).put("string","foobar").put("bytes","foobar".getBytes());
  Struct struct2=new Struct(FLAT_STRUCT_SCHEMA).put("int8",(byte)12).put("int16",(short)12).put("int32",12).put("int64",(long)12).put("float32",12.f).put("float64",12.).put("boolean",true).put("string","foobar").put("bytes","foobar".getBytes());
  Struct struct3=new Struct(FLAT_STRUCT_SCHEMA).put("int8",(byte)12).put("int16",(short)12).put("int32",12).put("int64",(long)12).put("float32",12.f).put("float64",12.).put("boolean",true).put("string","foobar").put("bytes","mismatching_string".getBytes());
  assertEquals(struct1,struct2);
  assertEquals(struct2,struct1);
  assertNotEquals(struct1,struct3);
  assertNotEquals(struct2,struct3);
  assertEquals(struct1.hashCode(),struct2.hashCode());
  assertNotEquals(struct1.hashCode(),struct3.hashCode());
  assertNotEquals(struct2.hashCode(),struct3.hashCode());
}
