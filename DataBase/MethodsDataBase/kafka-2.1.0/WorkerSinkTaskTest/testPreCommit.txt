@Test public void testPreCommit() throws Exception {
  createTask(initialState);
  expectInitializeTask();
  expectPollInitialAssignment();
  expectConsumerPoll(2);
  expectConversionAndTransformation(2);
  sinkTask.put(EasyMock.<Collection<SinkRecord>>anyObject());
  EasyMock.expectLastCall();
  final Map<TopicPartition,OffsetAndMetadata> workerStartingOffsets=new HashMap<>();
  workerStartingOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET));
  workerStartingOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET));
  final Map<TopicPartition,OffsetAndMetadata> workerCurrentOffsets=new HashMap<>();
  workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 2));
  workerCurrentOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET));
  final Map<TopicPartition,OffsetAndMetadata> taskOffsets=new HashMap<>();
  taskOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1));
  taskOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET + 1));
  taskOffsets.put(new TopicPartition(TOPIC,3),new OffsetAndMetadata(FIRST_OFFSET));
  final Map<TopicPartition,OffsetAndMetadata> committableOffsets=new HashMap<>();
  committableOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1));
  committableOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET));
  sinkTask.preCommit(workerCurrentOffsets);
  EasyMock.expectLastCall().andReturn(taskOffsets);
  EasyMock.expect(consumer.assignment()).andReturn(workerCurrentOffsets.keySet());
  final Capture<OffsetCommitCallback> callback=EasyMock.newCapture();
  consumer.commitAsync(EasyMock.eq(committableOffsets),EasyMock.capture(callback));
  EasyMock.expectLastCall().andAnswer(new IAnswer<Void>(){
    @Override public Void answer() throws Throwable {
      callback.getValue().onComplete(committableOffsets,null);
      return null;
    }
  }
);
  expectConsumerPoll(0);
  sinkTask.put(EasyMock.<Collection<SinkRecord>>anyObject());
  EasyMock.expectLastCall();
  PowerMock.replayAll();
  workerTask.initialize(TASK_CONFIG);
  workerTask.initializeAndStart();
  workerTask.iteration();
  assertEquals(workerStartingOffsets,Whitebox.<Map<TopicPartition,OffsetAndMetadata>>getInternalState(workerTask,"currentOffsets"));
  workerTask.iteration();
  assertEquals(workerCurrentOffsets,Whitebox.<Map<TopicPartition,OffsetAndMetadata>>getInternalState(workerTask,"currentOffsets"));
  assertEquals(workerStartingOffsets,Whitebox.<Map<TopicPartition,OffsetAndMetadata>>getInternalState(workerTask,"lastCommittedOffsets"));
  sinkTaskContext.getValue().requestCommit();
  workerTask.iteration();
  assertEquals(committableOffsets,Whitebox.<Map<TopicPartition,OffsetAndMetadata>>getInternalState(workerTask,"lastCommittedOffsets"));
  PowerMock.verifyAll();
}
