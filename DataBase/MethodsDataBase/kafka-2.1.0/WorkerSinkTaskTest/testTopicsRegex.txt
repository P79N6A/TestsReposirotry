@Test public void testTopicsRegex() throws Exception {
  Map<String,String> props=new HashMap<>(TASK_PROPS);
  props.remove("topics");
  props.put("topics.regex","te.*");
  TaskConfig taskConfig=new TaskConfig(props);
  createTask(TargetState.PAUSED);
  PowerMock.expectPrivate(workerTask,"createConsumer").andReturn(consumer);
  consumer.subscribe(EasyMock.capture(topicsRegex),EasyMock.capture(rebalanceListener));
  PowerMock.expectLastCall();
  sinkTask.initialize(EasyMock.capture(sinkTaskContext));
  PowerMock.expectLastCall();
  sinkTask.start(props);
  PowerMock.expectLastCall();
  expectPollInitialAssignment();
  Set<TopicPartition> partitions=new HashSet<>(asList(TOPIC_PARTITION,TOPIC_PARTITION2));
  EasyMock.expect(consumer.assignment()).andReturn(partitions);
  consumer.pause(partitions);
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  workerTask.initialize(taskConfig);
  workerTask.initializeAndStart();
  workerTask.iteration();
  time.sleep(10000L);
  PowerMock.verifyAll();
}
