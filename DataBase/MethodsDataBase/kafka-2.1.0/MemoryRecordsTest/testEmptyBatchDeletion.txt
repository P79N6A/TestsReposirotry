@Test public void testEmptyBatchDeletion(){
  if (magic >= RecordBatch.MAGIC_VALUE_V2) {
    for (    final BatchRetention deleteRetention : Arrays.asList(BatchRetention.DELETE,BatchRetention.DELETE_EMPTY)) {
      ByteBuffer buffer=ByteBuffer.allocate(DefaultRecordBatch.RECORD_BATCH_OVERHEAD);
      long producerId=23L;
      short producerEpoch=5;
      long baseOffset=3L;
      int baseSequence=10;
      int partitionLeaderEpoch=293;
      long timestamp=System.currentTimeMillis();
      DefaultRecordBatch.writeEmptyHeader(buffer,RecordBatch.MAGIC_VALUE_V2,producerId,producerEpoch,baseSequence,baseOffset,baseOffset,partitionLeaderEpoch,TimestampType.CREATE_TIME,timestamp,false,false);
      buffer.flip();
      ByteBuffer filtered=ByteBuffer.allocate(2048);
      MemoryRecords records=MemoryRecords.readableRecords(buffer);
      MemoryRecords.FilterResult filterResult=records.filterTo(new TopicPartition("foo",0),new MemoryRecords.RecordFilter(){
        @Override protected BatchRetention checkBatchRetention(        RecordBatch batch){
          return deleteRetention;
        }
        @Override protected boolean shouldRetainRecord(        RecordBatch recordBatch,        Record record){
          return false;
        }
      }
,filtered,Integer.MAX_VALUE,BufferSupplier.NO_CACHING);
      assertEquals(0,filterResult.outputBuffer().position());
      filtered.flip();
      MemoryRecords filteredRecords=MemoryRecords.readableRecords(filtered);
      assertEquals(0,filteredRecords.sizeInBytes());
    }
  }
}
