@Test public void testMapBuilder(){
  Schema schema=SchemaBuilder.map(Schema.INT8_SCHEMA,Schema.INT8_SCHEMA);
  assertTypeAndDefault(schema,Schema.Type.MAP,false,null);
  assertEquals(schema.keySchema(),Schema.INT8_SCHEMA);
  assertEquals(schema.valueSchema(),Schema.INT8_SCHEMA);
  assertNoMetadata(schema);
  schema=SchemaBuilder.map(Schema.INT8_SCHEMA,Schema.INT8_SCHEMA).build();
  assertTypeAndDefault(schema,Schema.Type.MAP,false,null);
  assertEquals(schema.keySchema(),Schema.INT8_SCHEMA);
  assertEquals(schema.valueSchema(),Schema.INT8_SCHEMA);
  assertNoMetadata(schema);
  Map<Byte,Byte> defMap=Collections.singletonMap((byte)5,(byte)10);
  schema=SchemaBuilder.map(Schema.INT8_SCHEMA,Schema.INT8_SCHEMA).defaultValue(defMap).build();
  assertTypeAndDefault(schema,Schema.Type.MAP,false,defMap);
  assertEquals(schema.keySchema(),Schema.INT8_SCHEMA);
  assertEquals(schema.valueSchema(),Schema.INT8_SCHEMA);
  assertNoMetadata(schema);
}
