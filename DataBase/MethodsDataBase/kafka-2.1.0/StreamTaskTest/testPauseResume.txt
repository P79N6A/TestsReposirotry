@SuppressWarnings("unchecked") @Test public void testPauseResume(){
  task=createStatelessTask(createConfig(false));
  task.addRecords(partition1,Arrays.asList(getConsumerRecord(partition1,10),getConsumerRecord(partition1,20)));
  task.addRecords(partition2,Arrays.asList(getConsumerRecord(partition2,35),getConsumerRecord(partition2,45),getConsumerRecord(partition2,55),getConsumerRecord(partition2,65)));
  assertTrue(task.process());
  assertEquals(1,source1.numReceived);
  assertEquals(0,source2.numReceived);
  assertEquals(1,consumer.paused().size());
  assertTrue(consumer.paused().contains(partition2));
  task.addRecords(partition1,Arrays.asList(getConsumerRecord(partition1,30),getConsumerRecord(partition1,40),getConsumerRecord(partition1,50)));
  assertEquals(2,consumer.paused().size());
  assertTrue(consumer.paused().contains(partition1));
  assertTrue(consumer.paused().contains(partition2));
  assertTrue(task.process());
  assertEquals(2,source1.numReceived);
  assertEquals(0,source2.numReceived);
  assertEquals(1,consumer.paused().size());
  assertTrue(consumer.paused().contains(partition2));
  assertTrue(task.process());
  assertEquals(3,source1.numReceived);
  assertEquals(0,source2.numReceived);
  assertEquals(1,consumer.paused().size());
  assertTrue(consumer.paused().contains(partition2));
  assertTrue(task.process());
  assertEquals(3,source1.numReceived);
  assertEquals(1,source2.numReceived);
  assertEquals(0,consumer.paused().size());
}
