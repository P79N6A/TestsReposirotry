/** 
 * Test that we propagate exceptions encountered when fetching metadata.
 */
@Test public void testPropagatedMetadataFetchException() throws Exception {
  Cluster cluster=mockCluster(0);
  MockClient mockClient=new MockClient(Time.SYSTEM);
  mockClient.createPendingAuthenticationError(cluster.nodeById(0),TimeUnit.DAYS.toMillis(1));
  try (final AdminClientUnitTestEnv env=new AdminClientUnitTestEnv(mockClient,Time.SYSTEM,cluster,newStrMap(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG,"localhost:8121",AdminClientConfig.REQUEST_TIMEOUT_MS_CONFIG,"10"))){
    env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());
    env.kafkaClient().setNode(env.cluster().nodeById(0));
    env.kafkaClient().prepareResponse(new CreateTopicsResponse(Collections.singletonMap("myTopic",new ApiError(Errors.NONE,""))));
    KafkaFuture<Void> future=env.adminClient().createTopics(Collections.singleton(new NewTopic("myTopic",Collections.singletonMap(0,asList(0,1,2)))),new CreateTopicsOptions().timeoutMs(1000)).all();
    TestUtils.assertFutureError(future,SaslAuthenticationException.class);
  }
 }
