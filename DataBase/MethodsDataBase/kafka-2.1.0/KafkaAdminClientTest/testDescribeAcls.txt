@Test public void testDescribeAcls() throws Exception {
  try (AdminClientUnitTestEnv env=mockClientEnv()){
    env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());
    env.kafkaClient().setNode(env.cluster().controller());
    env.kafkaClient().prepareResponse(new DescribeAclsResponse(0,ApiError.NONE,asList(ACL1,ACL2)));
    assertCollectionIs(env.adminClient().describeAcls(FILTER1).values().get(),ACL1,ACL2);
    env.kafkaClient().prepareResponse(new DescribeAclsResponse(0,ApiError.NONE,Collections.<AclBinding>emptySet()));
    assertTrue(env.adminClient().describeAcls(FILTER2).values().get().isEmpty());
    env.kafkaClient().prepareResponse(new DescribeAclsResponse(0,new ApiError(Errors.SECURITY_DISABLED,"Security is disabled"),Collections.<AclBinding>emptySet()));
    TestUtils.assertFutureError(env.adminClient().describeAcls(FILTER2).values(),SecurityDisabledException.class);
    TestUtils.assertFutureError(env.adminClient().describeAcls(UNKNOWN_FILTER).values(),InvalidRequestException.class);
  }
 }
