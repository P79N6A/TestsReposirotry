@Test public void testConnectionFailureOnMetadataUpdate() throws Exception {
  Cluster cluster=Cluster.bootstrap(Collections.singletonList(new InetSocketAddress("localhost",8121)));
  MockClient mockClient=new MockClient(Time.SYSTEM);
  mockClient.setNodeApiVersions(NodeApiVersions.create());
  mockClient.setNode(cluster.nodes().get(0));
  try (final AdminClientUnitTestEnv env=new AdminClientUnitTestEnv(mockClient,Time.SYSTEM,cluster)){
    Cluster discoveredCluster=mockCluster(0);
    env.kafkaClient().prepareResponse(request -> request instanceof MetadataRequest,null,true);
    env.kafkaClient().prepareResponse(body -> body instanceof MetadataRequest,new MetadataResponse(discoveredCluster.nodes(),discoveredCluster.clusterResource().clusterId(),1,Collections.emptyList()));
    env.kafkaClient().prepareResponse(body -> body instanceof CreateTopicsRequest,new CreateTopicsResponse(Collections.singletonMap("myTopic",new ApiError(Errors.NONE,""))));
    KafkaFuture<Void> future=env.adminClient().createTopics(Collections.singleton(new NewTopic("myTopic",Collections.singletonMap(0,asList(0,1,2)))),new CreateTopicsOptions().timeoutMs(10000)).all();
    future.get();
  }
 }
