@Test public void testCreateAcls() throws Exception {
  try (AdminClientUnitTestEnv env=mockClientEnv()){
    env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());
    env.kafkaClient().setNode(env.cluster().controller());
    env.kafkaClient().prepareResponse(new CreateAclsResponse(0,asList(new AclCreationResponse(ApiError.NONE),new AclCreationResponse(ApiError.NONE))));
    CreateAclsResult results=env.adminClient().createAcls(asList(ACL1,ACL2));
    assertCollectionIs(results.values().keySet(),ACL1,ACL2);
    for (    KafkaFuture<Void> future : results.values().values())     future.get();
    results.all().get();
    env.kafkaClient().prepareResponse(new CreateAclsResponse(0,asList(new AclCreationResponse(new ApiError(Errors.SECURITY_DISABLED,"Security is disabled")),new AclCreationResponse(ApiError.NONE))));
    results=env.adminClient().createAcls(asList(ACL1,ACL2));
    assertCollectionIs(results.values().keySet(),ACL1,ACL2);
    TestUtils.assertFutureError(results.values().get(ACL1),SecurityDisabledException.class);
    results.values().get(ACL2).get();
    TestUtils.assertFutureError(results.all(),SecurityDisabledException.class);
  }
 }
