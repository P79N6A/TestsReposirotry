@Test public void testListConsumerGroups() throws Exception {
  final HashMap<Integer,Node> nodes=new HashMap<>();
  Node node0=new Node(0,"localhost",8121);
  Node node1=new Node(1,"localhost",8122);
  Node node2=new Node(2,"localhost",8123);
  Node node3=new Node(3,"localhost",8124);
  nodes.put(0,node0);
  nodes.put(1,node1);
  nodes.put(2,node2);
  nodes.put(3,node3);
  final Cluster cluster=new Cluster("mockClusterId",nodes.values(),Collections.emptyList(),Collections.emptySet(),Collections.emptySet(),nodes.get(0));
  try (AdminClientUnitTestEnv env=new AdminClientUnitTestEnv(cluster)){
    env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());
    env.kafkaClient().setNode(env.cluster().controller());
    env.kafkaClient().prepareResponse(new MetadataResponse(Collections.emptyList(),env.cluster().clusterResource().clusterId(),-1,Collections.emptyList()));
    env.kafkaClient().prepareResponse(new MetadataResponse(env.cluster().nodes(),env.cluster().clusterResource().clusterId(),env.cluster().controller().id(),Collections.emptyList()));
    env.kafkaClient().prepareResponseFrom(new ListGroupsResponse(Errors.NONE,asList(new ListGroupsResponse.Group("group-1",ConsumerProtocol.PROTOCOL_TYPE),new ListGroupsResponse.Group("group-connect-1","connector"))),node0);
    env.kafkaClient().prepareResponseFrom(new ListGroupsResponse(Errors.COORDINATOR_NOT_AVAILABLE,Collections.emptyList()),node1);
    env.kafkaClient().prepareResponseFrom(new ListGroupsResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Collections.emptyList()),node1);
    env.kafkaClient().prepareResponseFrom(new ListGroupsResponse(Errors.NONE,asList(new ListGroupsResponse.Group("group-2",ConsumerProtocol.PROTOCOL_TYPE),new ListGroupsResponse.Group("group-connect-2","connector"))),node1);
    env.kafkaClient().prepareResponseFrom(new ListGroupsResponse(Errors.NONE,asList(new ListGroupsResponse.Group("group-3",ConsumerProtocol.PROTOCOL_TYPE),new ListGroupsResponse.Group("group-connect-3","connector"))),node2);
    env.kafkaClient().prepareResponseFrom(new ListGroupsResponse(Errors.UNKNOWN_SERVER_ERROR,Collections.emptyList()),node3);
    final ListConsumerGroupsResult result=env.adminClient().listConsumerGroups();
    TestUtils.assertFutureError(result.all(),UnknownServerException.class);
    Collection<ConsumerGroupListing> listings=result.valid().get();
    assertEquals(3,listings.size());
    Set<String> groupIds=new HashSet<>();
    for (    ConsumerGroupListing listing : listings) {
      groupIds.add(listing.groupId());
    }
    assertEquals(Utils.mkSet("group-1","group-2","group-3"),groupIds);
    assertEquals(1,result.errors().get().size());
  }
 }
