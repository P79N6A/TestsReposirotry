@Test public void testDeleteAcls() throws Exception {
  try (AdminClientUnitTestEnv env=mockClientEnv()){
    env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());
    env.kafkaClient().setNode(env.cluster().controller());
    env.kafkaClient().prepareResponse(new DeleteAclsResponse(0,asList(new AclFilterResponse(asList(new AclDeletionResult(ACL1),new AclDeletionResult(ACL2))),new AclFilterResponse(new ApiError(Errors.SECURITY_DISABLED,"No security"),Collections.<AclDeletionResult>emptySet()))));
    DeleteAclsResult results=env.adminClient().deleteAcls(asList(FILTER1,FILTER2));
    Map<AclBindingFilter,KafkaFuture<FilterResults>> filterResults=results.values();
    FilterResults filter1Results=filterResults.get(FILTER1).get();
    assertEquals(null,filter1Results.values().get(0).exception());
    assertEquals(ACL1,filter1Results.values().get(0).binding());
    assertEquals(null,filter1Results.values().get(1).exception());
    assertEquals(ACL2,filter1Results.values().get(1).binding());
    TestUtils.assertFutureError(filterResults.get(FILTER2),SecurityDisabledException.class);
    TestUtils.assertFutureError(results.all(),SecurityDisabledException.class);
    env.kafkaClient().prepareResponse(new DeleteAclsResponse(0,asList(new AclFilterResponse(asList(new AclDeletionResult(ACL1),new AclDeletionResult(new ApiError(Errors.SECURITY_DISABLED,"No security"),ACL2))),new AclFilterResponse(Collections.<AclDeletionResult>emptySet()))));
    results=env.adminClient().deleteAcls(asList(FILTER1,FILTER2));
    assertTrue(results.values().get(FILTER2).get().values().isEmpty());
    TestUtils.assertFutureError(results.all(),SecurityDisabledException.class);
    env.kafkaClient().prepareResponse(new DeleteAclsResponse(0,asList(new AclFilterResponse(asList(new AclDeletionResult(ACL1))),new AclFilterResponse(asList(new AclDeletionResult(ACL2))))));
    results=env.adminClient().deleteAcls(asList(FILTER1,FILTER2));
    Collection<AclBinding> deleted=results.all().get();
    assertCollectionIs(deleted,ACL1,ACL2);
  }
 }
