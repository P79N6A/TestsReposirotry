@Test public void testListConsumerGroupsMetadataFailure() throws Exception {
  final HashMap<Integer,Node> nodes=new HashMap<>();
  Node node0=new Node(0,"localhost",8121);
  Node node1=new Node(1,"localhost",8122);
  Node node2=new Node(2,"localhost",8123);
  nodes.put(0,node0);
  nodes.put(1,node1);
  nodes.put(2,node2);
  final Cluster cluster=new Cluster("mockClusterId",nodes.values(),Collections.emptyList(),Collections.emptySet(),Collections.emptySet(),nodes.get(0));
  final Time time=new MockTime();
  try (AdminClientUnitTestEnv env=new AdminClientUnitTestEnv(time,cluster,AdminClientConfig.RETRIES_CONFIG,"0")){
    env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());
    env.kafkaClient().setNode(env.cluster().controller());
    env.kafkaClient().prepareResponse(new MetadataResponse(Collections.emptyList(),env.cluster().clusterResource().clusterId(),-1,Collections.emptyList()));
    final ListConsumerGroupsResult result=env.adminClient().listConsumerGroups();
    TestUtils.assertFutureError(result.all(),KafkaException.class);
  }
 }
