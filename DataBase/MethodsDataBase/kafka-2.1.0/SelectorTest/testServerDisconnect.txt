/** 
 * Validate that when the server disconnects, a client send ends up with that node in the disconnected list.
 */
@Test public void testServerDisconnect() throws Exception {
  final String node="0";
  blockingConnect(node);
  assertEquals("hello",blockingRequest(node,"hello"));
  KafkaChannel channel=selector.channel(node);
  this.server.closeConnections();
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      try {
        selector.poll(1000L);
        return selector.disconnected().containsKey(node);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
,5000,"Failed to observe disconnected node in disconnected set");
  assertNull(channel.selectionKey().attachment());
  blockingConnect(node);
  assertEquals("hello",blockingRequest(node,"hello"));
}
