@Test public void registerFailure() throws Exception {
  ChannelBuilder channelBuilder=new PlaintextChannelBuilder(null){
    @Override public KafkaChannel buildChannel(    String id,    SelectionKey key,    int maxReceiveSize,    MemoryPool memoryPool) throws KafkaException {
      throw new RuntimeException("Test exception");
    }
    @Override public void close(){
    }
  }
;
  Selector selector=new Selector(5000,new Metrics(),new MockTime(),"MetricGroup",channelBuilder,new LogContext());
  SocketChannel socketChannel=SocketChannel.open();
  socketChannel.configureBlocking(false);
  try {
    selector.register("1",socketChannel);
    fail("Register did not fail");
  }
 catch (  IOException e) {
    assertTrue("Unexpected exception: " + e,e.getCause().getMessage().contains("Test exception"));
    assertFalse("Socket not closed",socketChannel.isOpen());
  }
  selector.close();
}
