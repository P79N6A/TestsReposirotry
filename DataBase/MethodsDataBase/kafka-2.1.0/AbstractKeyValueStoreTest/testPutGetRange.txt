@Test public void testPutGetRange(){
  store.put(0,"zero");
  store.put(1,"one");
  store.put(2,"two");
  store.put(4,"four");
  store.put(5,"five");
  assertEquals(5,driver.sizeOf(store));
  assertEquals("zero",store.get(0));
  assertEquals("one",store.get(1));
  assertEquals("two",store.get(2));
  assertNull(store.get(3));
  assertEquals("four",store.get(4));
  assertEquals("five",store.get(5));
  store.delete(5);
  assertEquals(4,driver.sizeOf(store));
  store.flush();
  assertEquals("zero",driver.flushedEntryStored(0));
  assertEquals("one",driver.flushedEntryStored(1));
  assertEquals("two",driver.flushedEntryStored(2));
  assertEquals("four",driver.flushedEntryStored(4));
  assertEquals(null,driver.flushedEntryStored(5));
  assertEquals(false,driver.flushedEntryRemoved(0));
  assertEquals(false,driver.flushedEntryRemoved(1));
  assertEquals(false,driver.flushedEntryRemoved(2));
  assertEquals(false,driver.flushedEntryRemoved(4));
  assertEquals(true,driver.flushedEntryRemoved(5));
  final HashMap<Integer,String> expectedContents=new HashMap<>();
  expectedContents.put(2,"two");
  expectedContents.put(4,"four");
  assertEquals(expectedContents,getContents(store.range(2,4)));
  assertEquals(expectedContents,getContents(store.range(2,6)));
  expectedContents.put(0,"zero");
  expectedContents.put(1,"one");
  assertEquals(expectedContents,getContents(store.all()));
}
