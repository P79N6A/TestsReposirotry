@Test public void testReconfiguration() throws Exception {
  File trustStoreFile=File.createTempFile("truststore",".jks");
  Map<String,Object> sslConfig=TestSslUtils.createSslConfig(false,true,Mode.SERVER,trustStoreFile,"server");
  SslFactory sslFactory=new SslFactory(Mode.SERVER);
  sslFactory.configure(sslConfig);
  SSLContext sslContext=sslFactory.sslContext();
  assertNotNull("SSL context not created",sslContext);
  assertSame("SSL context recreated unnecessarily",sslContext,sslFactory.sslContext());
  assertFalse(sslFactory.createSslEngine("localhost",0).getUseClientMode());
  sslFactory.reconfigure(sslConfig);
  assertSame("SSL context recreated unnecessarily",sslContext,sslFactory.sslContext());
  trustStoreFile=File.createTempFile("truststore",".jks");
  sslConfig=TestSslUtils.createSslConfig(false,true,Mode.SERVER,trustStoreFile,"server");
  sslFactory.reconfigure(sslConfig);
  assertNotSame("SSL context not recreated",sslContext,sslFactory.sslContext());
  sslContext=sslFactory.sslContext();
  trustStoreFile.setLastModified(System.currentTimeMillis() + 10000);
  sslFactory.reconfigure(sslConfig);
  assertNotSame("SSL context not recreated",sslContext,sslFactory.sslContext());
  sslContext=sslFactory.sslContext();
  File keyStoreFile=new File((String)sslConfig.get(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG));
  keyStoreFile.setLastModified(System.currentTimeMillis() + 10000);
  sslFactory.reconfigure(sslConfig);
  assertNotSame("SSL context not recreated",sslContext,sslFactory.sslContext());
  sslContext=sslFactory.sslContext();
  keyStoreFile.setLastModified(System.currentTimeMillis() + 20000);
  Files.delete(keyStoreFile.toPath());
  sslFactory.reconfigure(sslConfig);
  assertSame("SSL context recreated unnecessarily",sslContext,sslFactory.sslContext());
}
