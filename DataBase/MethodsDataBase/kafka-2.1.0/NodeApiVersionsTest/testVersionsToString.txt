@Test public void testVersionsToString(){
  List<ApiVersion> versionList=new ArrayList<>();
  for (  ApiKeys apiKey : ApiKeys.values()) {
    if (apiKey == ApiKeys.DELETE_TOPICS) {
      versionList.add(new ApiVersion(apiKey.id,(short)10000,(short)10001));
    }
 else {
      versionList.add(new ApiVersion(apiKey));
    }
  }
  NodeApiVersions versions=new NodeApiVersions(versionList);
  StringBuilder bld=new StringBuilder();
  String prefix="(";
  for (  ApiKeys apiKey : ApiKeys.values()) {
    bld.append(prefix);
    if (apiKey == ApiKeys.DELETE_TOPICS) {
      bld.append("DeleteTopics(20): 10000 to 10001 [unusable: node too new]");
    }
 else {
      bld.append(apiKey.name).append("(").append(apiKey.id).append("): ");
      if (apiKey.oldestVersion() == apiKey.latestVersion()) {
        bld.append(apiKey.oldestVersion());
      }
 else {
        bld.append(apiKey.oldestVersion()).append(" to ").append(apiKey.latestVersion());
      }
      bld.append(" [usable: ").append(apiKey.latestVersion()).append("]");
    }
    prefix=", ";
  }
  bld.append(")");
  assertEquals(bld.toString(),versions.toString());
}
