@Test public void shouldReuseSourceTopicAsChangelogsWithOptimization20(){
  final String topic="topic";
  builder.table(topic,Materialized.<Long,String,KeyValueStore<Bytes,byte[]>>as("store"));
  final Topology topology=builder.build();
  final Properties props=StreamsTestUtils.getStreamsConfig();
  props.put(StreamsConfig.TOPOLOGY_OPTIMIZATION,StreamsConfig.OPTIMIZE);
  final InternalTopologyBuilder internalTopologyBuilder=TopologyWrapper.getInternalTopologyBuilder(topology);
  internalTopologyBuilder.rewriteTopology(new StreamsConfig(props));
  assertThat(internalTopologyBuilder.build().storeToChangelogTopic(),equalTo(Collections.singletonMap("store","topic")));
  assertThat(internalTopologyBuilder.getStateStores().keySet(),equalTo(Collections.singleton("store")));
  assertThat(internalTopologyBuilder.getStateStores().get("store").loggingEnabled(),equalTo(false));
  assertThat(internalTopologyBuilder.topicGroups().get(0).stateChangelogTopics.isEmpty(),equalTo(true));
}
