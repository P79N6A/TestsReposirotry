@Test public void testRemove() throws Exception {
  PowerMock.replayAll();
  assertTrue(committers.isEmpty());
  committer.remove(taskId);
  assertTrue(committers.isEmpty());
  PowerMock.verifyAll();
  PowerMock.resetAll();
  EasyMock.expect(taskFuture.cancel(eq(false))).andReturn(false);
  EasyMock.expect(taskFuture.isDone()).andReturn(false);
  EasyMock.expect(taskFuture.get()).andReturn(null);
  PowerMock.replayAll();
  committers.put(taskId,taskFuture);
  committer.remove(taskId);
  assertTrue(committers.isEmpty());
  PowerMock.verifyAll();
  PowerMock.resetAll();
  EasyMock.expect(taskFuture.cancel(eq(false))).andReturn(false);
  EasyMock.expect(taskFuture.isDone()).andReturn(false);
  EasyMock.expect(taskFuture.get()).andThrow(new CancellationException());
  mockLog.trace(EasyMock.anyString(),EasyMock.<Object>anyObject());
  PowerMock.expectLastCall();
  PowerMock.replayAll();
  committers.put(taskId,taskFuture);
  committer.remove(taskId);
  assertTrue(committers.isEmpty());
  PowerMock.verifyAll();
  PowerMock.resetAll();
  EasyMock.expect(taskFuture.cancel(eq(false))).andReturn(false);
  EasyMock.expect(taskFuture.isDone()).andReturn(false);
  EasyMock.expect(taskFuture.get()).andThrow(new InterruptedException());
  PowerMock.replayAll();
  try {
    committers.put(taskId,taskFuture);
    committer.remove(taskId);
    fail("Expected ConnectException to be raised");
  }
 catch (  ConnectException e) {
  }
  PowerMock.verifyAll();
}
