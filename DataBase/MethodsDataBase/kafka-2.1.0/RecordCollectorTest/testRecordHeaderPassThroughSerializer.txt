@Test public void testRecordHeaderPassThroughSerializer(){
  final CustomStringSerializer keySerializer=new CustomStringSerializer();
  final CustomStringSerializer valueSerializer=new CustomStringSerializer();
  keySerializer.configure(Collections.EMPTY_MAP,true);
  final RecordCollectorImpl collector=new RecordCollectorImpl("test",logContext,new DefaultProductionExceptionHandler(),new Metrics().sensor("skipped-records"));
  final MockProducer<byte[],byte[]> mockProducer=new MockProducer<>(cluster,true,new DefaultPartitioner(),byteArraySerializer,byteArraySerializer);
  collector.init(mockProducer);
  collector.send("topic1","3","0",new RecordHeaders(),null,keySerializer,valueSerializer,streamPartitioner);
  final List<ProducerRecord<byte[],byte[]>> recordHistory=mockProducer.history();
  for (  final ProducerRecord<byte[],byte[]> sentRecord : recordHistory) {
    final Headers headers=sentRecord.headers();
    assertEquals(2,headers.toArray().length);
    assertEquals(new RecordHeader("key","key".getBytes()),headers.lastHeader("key"));
    assertEquals(new RecordHeader("value","value".getBytes()),headers.lastHeader("value"));
  }
}
