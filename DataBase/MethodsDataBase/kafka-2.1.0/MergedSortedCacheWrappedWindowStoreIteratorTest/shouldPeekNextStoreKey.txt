@Test public void shouldPeekNextStoreKey(){
  windowStoreKvPairs.add(KeyValue.pair(10L,"a".getBytes()));
  cache.put(namespace,SINGLE_SEGMENT_CACHE_FUNCTION.cacheKey(WindowKeySchema.toStoreKeyBinary("a",0,0,stateSerdes)),new LRUCacheEntry("b".getBytes()));
  final Bytes fromBytes=WindowKeySchema.toStoreKeyBinary("a",0,0,stateSerdes);
  final Bytes toBytes=WindowKeySchema.toStoreKeyBinary("a",100,0,stateSerdes);
  final KeyValueIterator<Long,byte[]> storeIterator=new DelegatingPeekingKeyValueIterator<>("store",new KeyValueIteratorStub<>(windowStoreKvPairs.iterator()));
  final ThreadCache.MemoryLRUCacheBytesIterator cacheIterator=cache.range(namespace,SINGLE_SEGMENT_CACHE_FUNCTION.cacheKey(fromBytes),SINGLE_SEGMENT_CACHE_FUNCTION.cacheKey(toBytes));
  final MergedSortedCacheWindowStoreIterator iterator=new MergedSortedCacheWindowStoreIterator(cacheIterator,storeIterator);
  assertThat(iterator.peekNextKey(),equalTo(0L));
  iterator.next();
  assertThat(iterator.peekNextKey(),equalTo(10L));
  iterator.close();
}
