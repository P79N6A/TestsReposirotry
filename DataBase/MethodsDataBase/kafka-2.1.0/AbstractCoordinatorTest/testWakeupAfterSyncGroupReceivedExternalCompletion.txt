@Test public void testWakeupAfterSyncGroupReceivedExternalCompletion() throws Exception {
  setupCoordinator();
  mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE));
  mockClient.prepareResponse(joinGroupFollowerResponse(1,"memberId","leaderId",Errors.NONE));
  mockClient.prepareResponse(new MockClient.RequestMatcher(){
    @Override public boolean matches(    AbstractRequest body){
      boolean isSyncGroupRequest=body instanceof SyncGroupRequest;
      if (isSyncGroupRequest)       consumerClient.wakeup();
      return isSyncGroupRequest;
    }
  }
,syncGroupResponse(Errors.NONE));
  AtomicBoolean heartbeatReceived=prepareFirstHeartbeat();
  try {
    coordinator.ensureActiveGroup();
    fail("Should have woken up from ensureActiveGroup()");
  }
 catch (  WakeupException e) {
  }
  assertEquals(1,coordinator.onJoinPrepareInvokes);
  assertEquals(0,coordinator.onJoinCompleteInvokes);
  assertFalse(heartbeatReceived.get());
  coordinator.ensureActiveGroup();
  assertEquals(1,coordinator.onJoinPrepareInvokes);
  assertEquals(1,coordinator.onJoinCompleteInvokes);
  awaitFirstHeartbeat(heartbeatReceived);
}
