@Test public void testStartConnectorFailure() throws Exception {
  expectConverters();
  expectStartStorage();
  Map<String,String> props=new HashMap<>();
  props.put(SinkConnectorConfig.TOPICS_CONFIG,"foo,bar");
  props.put(ConnectorConfig.TASKS_MAX_CONFIG,"1");
  props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID);
  props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,"java.util.HashMap");
  EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader);
  EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andThrow(new ConnectException("Failed to find Connector"));
  EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader);
  connectorStatusListener.onFailure(EasyMock.eq(CONNECTOR_ID),EasyMock.<ConnectException>anyObject());
  EasyMock.expectLastCall();
  PowerMock.replayAll();
  worker=new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore);
  worker.start();
  assertStatistics(worker,0,0);
  assertFalse(worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED));
  assertStartupStatistics(worker,1,1,0,0);
  assertEquals(Collections.emptySet(),worker.connectorNames());
  assertStatistics(worker,0,0);
  assertStartupStatistics(worker,1,1,0,0);
  assertFalse(worker.stopConnector(CONNECTOR_ID));
  assertStatistics(worker,0,0);
  assertStartupStatistics(worker,1,1,0,0);
  PowerMock.verifyAll();
}
