@Test public void deserializeNewAssignmentVersion(){
  short version=100;
  Schema assignmentSchemaV100=new Schema(new Field(ConsumerProtocol.TOPIC_PARTITIONS_KEY_NAME,new ArrayOf(ConsumerProtocol.TOPIC_ASSIGNMENT_V0)),new Field(ConsumerProtocol.USER_DATA_KEY_NAME,Type.BYTES),new Field("foo",Type.STRING));
  Struct assignmentV100=new Struct(assignmentSchemaV100);
  assignmentV100.set(ConsumerProtocol.TOPIC_PARTITIONS_KEY_NAME,new Object[]{new Struct(ConsumerProtocol.TOPIC_ASSIGNMENT_V0).set(ConsumerProtocol.TOPIC_KEY_NAME,"foo").set(ConsumerProtocol.PARTITIONS_KEY_NAME,new Object[]{1})});
  assignmentV100.set(ConsumerProtocol.USER_DATA_KEY_NAME,ByteBuffer.wrap(new byte[0]));
  assignmentV100.set("foo","bar");
  Struct headerV100=new Struct(ConsumerProtocol.CONSUMER_PROTOCOL_HEADER_SCHEMA);
  headerV100.set(ConsumerProtocol.VERSION_KEY_NAME,version);
  ByteBuffer buffer=ByteBuffer.allocate(assignmentV100.sizeOf() + headerV100.sizeOf());
  headerV100.writeTo(buffer);
  assignmentV100.writeTo(buffer);
  buffer.flip();
  PartitionAssignor.Assignment assignment=ConsumerProtocol.deserializeAssignment(buffer);
  assertEquals(toSet(Arrays.asList(new TopicPartition("foo",1))),toSet(assignment.partitions()));
}
