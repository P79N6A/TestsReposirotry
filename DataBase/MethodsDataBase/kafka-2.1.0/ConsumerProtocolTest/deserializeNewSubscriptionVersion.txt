@Test public void deserializeNewSubscriptionVersion(){
  short version=100;
  Schema subscriptionSchemaV100=new Schema(new Field(ConsumerProtocol.TOPICS_KEY_NAME,new ArrayOf(Type.STRING)),new Field(ConsumerProtocol.USER_DATA_KEY_NAME,Type.BYTES),new Field("foo",Type.STRING));
  Struct subscriptionV100=new Struct(subscriptionSchemaV100);
  subscriptionV100.set(ConsumerProtocol.TOPICS_KEY_NAME,new Object[]{"topic"});
  subscriptionV100.set(ConsumerProtocol.USER_DATA_KEY_NAME,ByteBuffer.wrap(new byte[0]));
  subscriptionV100.set("foo","bar");
  Struct headerV100=new Struct(ConsumerProtocol.CONSUMER_PROTOCOL_HEADER_SCHEMA);
  headerV100.set(ConsumerProtocol.VERSION_KEY_NAME,version);
  ByteBuffer buffer=ByteBuffer.allocate(subscriptionV100.sizeOf() + headerV100.sizeOf());
  headerV100.writeTo(buffer);
  subscriptionV100.writeTo(buffer);
  buffer.flip();
  Subscription subscription=ConsumerProtocol.deserializeSubscription(buffer);
  assertEquals(Arrays.asList("topic"),subscription.topics());
}
