@Test public void testAgentFinishesTasks() throws Exception {
  MockTime time=new MockTime(0,0,0);
  MockScheduler scheduler=new MockScheduler(time);
  Agent agent=createAgent(scheduler);
  AgentClient client=new AgentClient.Builder().maxTries(10).target("localhost",agent.port()).build();
  new ExpectedTasks().waitFor(client);
  final NoOpTaskSpec fooSpec=new NoOpTaskSpec(10,2);
  client.createWorker(new CreateWorkerRequest(0,"foo",fooSpec));
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerRunning("foo",fooSpec,0,new TextNode("active"))).build()).waitFor(client);
  time.sleep(1);
  final NoOpTaskSpec barSpec=new NoOpTaskSpec(2000,900000);
  client.createWorker(new CreateWorkerRequest(1,"bar",barSpec));
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerRunning("foo",fooSpec,0,new TextNode("active"))).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerRunning("bar",barSpec,1,new TextNode("active"))).build()).waitFor(client);
  time.sleep(1);
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerDone("foo",fooSpec,0,2,new TextNode("done"),"")).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerRunning("bar",barSpec,1,new TextNode("active"))).build()).waitFor(client);
  time.sleep(5);
  client.stopWorker(new StopWorkerRequest(1));
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerDone("foo",fooSpec,0,2,new TextNode("done"),"")).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerDone("bar",barSpec,1,7,new TextNode("done"),"")).build()).waitFor(client);
  agent.beginShutdown();
  agent.waitForShutdown();
}
