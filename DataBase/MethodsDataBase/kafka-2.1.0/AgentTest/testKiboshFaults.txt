@Test public void testKiboshFaults() throws Exception {
  MockTime time=new MockTime(0,0,0);
  MockScheduler scheduler=new MockScheduler(time);
  Agent agent=createAgent(scheduler);
  AgentClient client=new AgentClient.Builder().maxTries(10).target("localhost",agent.port()).build();
  new ExpectedTasks().waitFor(client);
  try (MockKibosh mockKibosh=new MockKibosh()){
    Assert.assertEquals(KiboshControlFile.EMPTY,mockKibosh.read());
    FilesUnreadableFaultSpec fooSpec=new FilesUnreadableFaultSpec(0,900000,Collections.singleton("myAgent"),mockKibosh.tempDir.getPath().toString(),"/foo",123);
    client.createWorker(new CreateWorkerRequest(0,"foo",fooSpec));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerRunning("foo",fooSpec,0,new TextNode("Added fault foo"))).build()).waitFor(client);
    Assert.assertEquals(new KiboshControlFile(Collections.<Kibosh.KiboshFaultSpec>singletonList(new KiboshFilesUnreadableFaultSpec("/foo",123))),mockKibosh.read());
    FilesUnreadableFaultSpec barSpec=new FilesUnreadableFaultSpec(0,900000,Collections.singleton("myAgent"),mockKibosh.tempDir.getPath().toString(),"/bar",456);
    client.createWorker(new CreateWorkerRequest(1,"bar",barSpec));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerRunning("foo",fooSpec,0,new TextNode("Added fault foo"))).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerRunning("bar",barSpec,0,new TextNode("Added fault bar"))).build()).waitFor(client);
    Assert.assertEquals(new KiboshControlFile(new ArrayList<Kibosh.KiboshFaultSpec>(){
{
        add(new KiboshFilesUnreadableFaultSpec("/foo",123));
        add(new KiboshFilesUnreadableFaultSpec("/bar",456));
      }
    }
),mockKibosh.read());
    time.sleep(1);
    client.stopWorker(new StopWorkerRequest(0));
    new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerDone("foo",fooSpec,0,1,new TextNode("Removed fault foo"),"")).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerRunning("bar",barSpec,0,new TextNode("Added fault bar"))).build()).waitFor(client);
    Assert.assertEquals(new KiboshControlFile(Collections.<Kibosh.KiboshFaultSpec>singletonList(new KiboshFilesUnreadableFaultSpec("/bar",456))),mockKibosh.read());
  }
 }
