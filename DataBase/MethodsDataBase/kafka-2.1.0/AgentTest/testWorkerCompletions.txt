@Test public void testWorkerCompletions() throws Exception {
  MockTime time=new MockTime(0,0,0);
  MockScheduler scheduler=new MockScheduler(time);
  Agent agent=createAgent(scheduler);
  AgentClient client=new AgentClient.Builder().maxTries(10).target("localhost",agent.port()).build();
  new ExpectedTasks().waitFor(client);
  SampleTaskSpec fooSpec=new SampleTaskSpec(0,900000,Collections.singletonMap("node01",1L),"");
  client.createWorker(new CreateWorkerRequest(0,"foo",fooSpec));
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerRunning("foo",fooSpec,0,new TextNode("active"))).build()).waitFor(client);
  SampleTaskSpec barSpec=new SampleTaskSpec(0,900000,Collections.singletonMap("node01",2L),"baz");
  client.createWorker(new CreateWorkerRequest(1,"bar",barSpec));
  time.sleep(1);
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerDone("foo",fooSpec,0,1,new TextNode("halted"),"")).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerRunning("bar",barSpec,0,new TextNode("active"))).build()).waitFor(client);
  time.sleep(1);
  new ExpectedTasks().addTask(new ExpectedTaskBuilder("foo").workerState(new WorkerDone("foo",fooSpec,0,1,new TextNode("halted"),"")).build()).addTask(new ExpectedTaskBuilder("bar").workerState(new WorkerDone("bar",barSpec,0,2,new TextNode("halted"),"baz")).build()).waitFor(client);
}
