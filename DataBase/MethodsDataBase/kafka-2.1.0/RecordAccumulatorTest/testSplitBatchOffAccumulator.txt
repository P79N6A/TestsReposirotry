@Test public void testSplitBatchOffAccumulator() throws InterruptedException {
  long seed=System.currentTimeMillis();
  final int batchSize=1024;
  final int bufferCapacity=3 * 1024;
  CompressionRatioEstimator.setEstimation(tp1.topic(),CompressionType.GZIP,0.1f);
  RecordAccumulator accum=createTestRecordAccumulator(batchSize,bufferCapacity,CompressionType.GZIP,0L);
  int numSplitBatches=prepareSplitBatches(accum,seed,100,20);
  assertTrue("There should be some split batches",numSplitBatches > 0);
  RecordAccumulator.ReadyCheckResult result=accum.ready(cluster,time.milliseconds());
  for (int i=0; i < numSplitBatches; i++) {
    Map<Integer,List<ProducerBatch>> drained=accum.drain(cluster,result.readyNodes,Integer.MAX_VALUE,time.milliseconds());
    assertFalse(drained.isEmpty());
    assertFalse(drained.get(node1.id()).isEmpty());
  }
  assertTrue("All the batches should have been drained.",accum.ready(cluster,time.milliseconds()).readyNodes.isEmpty());
  assertEquals("The split batches should be allocated off the accumulator",bufferCapacity,accum.bufferPoolAvailableMemory());
}
