@Test public void testSplitFrequency() throws InterruptedException {
  long seed=System.currentTimeMillis();
  Random random=new Random();
  random.setSeed(seed);
  final int batchSize=1024;
  final int numMessages=1000;
  RecordAccumulator accum=createTestRecordAccumulator(batchSize,3 * 1024,CompressionType.GZIP,10);
  for (int goodCompRatioPercentage=1; goodCompRatioPercentage < 100; goodCompRatioPercentage++) {
    int numSplit=0;
    int numBatches=0;
    CompressionRatioEstimator.resetEstimation(topic);
    for (int i=0; i < numMessages; i++) {
      int dice=random.nextInt(100);
      byte[] value=(dice < goodCompRatioPercentage) ? bytesWithGoodCompression(random) : bytesWithPoorCompression(random,100);
      accum.append(tp1,0L,null,value,Record.EMPTY_HEADERS,null,0);
      BatchDrainedResult result=completeOrSplitBatches(accum,batchSize);
      numSplit+=result.numSplit;
      numBatches+=result.numBatches;
    }
    time.sleep(10);
    BatchDrainedResult result=completeOrSplitBatches(accum,batchSize);
    numSplit+=result.numSplit;
    numBatches+=result.numBatches;
    assertTrue(String.format("Total num batches = %d, split batches = %d, more than 10%% of the batch splits. " + "Random seed is " + seed,numBatches,numSplit),(double)numSplit / numBatches < 0.1f);
  }
}
