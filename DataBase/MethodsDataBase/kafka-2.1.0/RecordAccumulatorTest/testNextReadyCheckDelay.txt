@Test public void testNextReadyCheckDelay() throws Exception {
  long lingerMs=10L;
  int batchSize=1025;
  RecordAccumulator accum=createTestRecordAccumulator(batchSize + DefaultRecordBatch.RECORD_BATCH_OVERHEAD,10 * batchSize,CompressionType.NONE,lingerMs);
  int appends=expectedNumAppends(batchSize);
  for (int i=0; i < appends; i++)   accum.append(tp1,0L,key,value,Record.EMPTY_HEADERS,null,maxBlockTimeMs);
  RecordAccumulator.ReadyCheckResult result=accum.ready(cluster,time.milliseconds());
  assertEquals("No nodes should be ready.",0,result.readyNodes.size());
  assertEquals("Next check time should be the linger time",lingerMs,result.nextReadyCheckDelayMs);
  time.sleep(lingerMs / 2);
  for (int i=0; i < appends; i++)   accum.append(tp3,0L,key,value,Record.EMPTY_HEADERS,null,maxBlockTimeMs);
  result=accum.ready(cluster,time.milliseconds());
  assertEquals("No nodes should be ready.",0,result.readyNodes.size());
  assertEquals("Next check time should be defined by node1, half remaining linger time",lingerMs / 2,result.nextReadyCheckDelayMs);
  for (int i=0; i < appends + 1; i++)   accum.append(tp2,0L,key,value,Record.EMPTY_HEADERS,null,maxBlockTimeMs);
  result=accum.ready(cluster,time.milliseconds());
  assertEquals("Node1 should be ready",Collections.singleton(node1),result.readyNodes);
  assertTrue("Next check time should be defined by node2, at most linger time",result.nextReadyCheckDelayMs <= lingerMs);
}
