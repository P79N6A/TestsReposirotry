@SuppressWarnings("unused") @Test public void testStressfulSituation() throws Exception {
  final int numThreads=5;
  final int msgs=10000;
  final int numParts=2;
  final RecordAccumulator accum=createTestRecordAccumulator(1024 + DefaultRecordBatch.RECORD_BATCH_OVERHEAD,10 * 1024,CompressionType.NONE,0L);
  List<Thread> threads=new ArrayList<>();
  for (int i=0; i < numThreads; i++) {
    threads.add(new Thread(){
      public void run(){
        for (int i=0; i < msgs; i++) {
          try {
            accum.append(new TopicPartition(topic,i % numParts),0L,key,value,Record.EMPTY_HEADERS,null,maxBlockTimeMs);
          }
 catch (          Exception e) {
            e.printStackTrace();
          }
        }
      }
    }
);
  }
  for (  Thread t : threads)   t.start();
  int read=0;
  long now=time.milliseconds();
  while (read < numThreads * msgs) {
    Set<Node> nodes=accum.ready(cluster,now).readyNodes;
    List<ProducerBatch> batches=accum.drain(cluster,nodes,5 * 1024,0).get(node1.id());
    if (batches != null) {
      for (      ProducerBatch batch : batches) {
        for (        Record record : batch.records().records())         read++;
        accum.deallocate(batch);
      }
    }
  }
  for (  Thread t : threads)   t.join();
}
