@Test public void shouldReduceWindowed() throws Exception {
  final long firstBatchTimestamp=System.currentTimeMillis() - 1000;
  produceMessages(firstBatchTimestamp);
  final long secondBatchTimestamp=System.currentTimeMillis();
  produceMessages(secondBatchTimestamp);
  produceMessages(secondBatchTimestamp);
  groupedStream.windowedBy(TimeWindows.of(ofMillis(500L))).reduce(reducer,Materialized.as("reduce-time-windows")).toStream((windowedKey,value) -> windowedKey.key() + "@" + windowedKey.window().start()).to(outputTopic,Produced.with(Serdes.String(),Serdes.String()));
  startStreams();
  final long firstBatchWindow=firstBatchTimestamp / 500 * 500;
  final long secondBatchWindow=secondBatchTimestamp / 500 * 500;
  validateReceivedMessages(new StringDeserializer(),new StringDeserializer(),Arrays.asList(new KeyValue<>("A@" + firstBatchWindow,"A"),new KeyValue<>("A@" + secondBatchWindow,"A:A"),new KeyValue<>("B@" + firstBatchWindow,"B"),new KeyValue<>("B@" + secondBatchWindow,"B:B"),new KeyValue<>("C@" + firstBatchWindow,"C"),new KeyValue<>("C@" + secondBatchWindow,"C:C"),new KeyValue<>("D@" + firstBatchWindow,"D"),new KeyValue<>("D@" + secondBatchWindow,"D:D"),new KeyValue<>("E@" + firstBatchWindow,"E"),new KeyValue<>("E@" + secondBatchWindow,"E:E")));
}
