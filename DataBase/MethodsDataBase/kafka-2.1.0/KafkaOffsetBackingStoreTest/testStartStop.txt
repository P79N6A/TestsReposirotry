@Test public void testStartStop() throws Exception {
  expectConfigure();
  expectStart(Collections.EMPTY_LIST);
  expectStop();
  PowerMock.replayAll();
  store.configure(DEFAULT_DISTRIBUTED_CONFIG);
  assertEquals(TOPIC,capturedTopic.getValue());
  assertEquals("org.apache.kafka.common.serialization.ByteArraySerializer",capturedProducerProps.getValue().get(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG));
  assertEquals("org.apache.kafka.common.serialization.ByteArraySerializer",capturedProducerProps.getValue().get(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG));
  assertEquals("org.apache.kafka.common.serialization.ByteArrayDeserializer",capturedConsumerProps.getValue().get(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG));
  assertEquals("org.apache.kafka.common.serialization.ByteArrayDeserializer",capturedConsumerProps.getValue().get(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG));
  assertEquals(TOPIC,capturedNewTopic.getValue().name());
  assertEquals(TOPIC_PARTITIONS,capturedNewTopic.getValue().numPartitions());
  assertEquals(TOPIC_REPLICATION_FACTOR,capturedNewTopic.getValue().replicationFactor());
  store.start();
  store.stop();
  PowerMock.verifyAll();
}
