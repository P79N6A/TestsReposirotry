@Test public void testRoundRobin() throws InterruptedException {
  final String topicA="topicA";
  final String topicB="topicB";
  List<PartitionInfo> allPartitions=asList(new PartitionInfo(topicA,0,node0,nodes,nodes),new PartitionInfo(topicA,1,node1,nodes,nodes),new PartitionInfo(topicA,2,node2,nodes,nodes),new PartitionInfo(topicB,0,node0,nodes,nodes));
  Cluster testCluster=new Cluster("clusterId",asList(node0,node1,node2),allPartitions,Collections.<String>emptySet(),Collections.<String>emptySet());
  final Map<Integer,Integer> partitionCount=new HashMap<>();
  for (int i=0; i < 30; ++i) {
    int partition=partitioner.partition(topicA,null,null,null,null,testCluster);
    Integer count=partitionCount.get(partition);
    if (null == count)     count=0;
    partitionCount.put(partition,count + 1);
    if (i % 5 == 0) {
      partitioner.partition(topicB,null,null,null,null,testCluster);
    }
  }
  assertEquals(10,(int)partitionCount.get(0));
  assertEquals(10,(int)partitionCount.get(1));
  assertEquals(10,(int)partitionCount.get(2));
}
