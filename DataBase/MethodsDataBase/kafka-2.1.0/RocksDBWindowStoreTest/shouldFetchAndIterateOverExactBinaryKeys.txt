@Test public void shouldFetchAndIterateOverExactBinaryKeys(){
  final WindowStore<Bytes,String> windowStore=Stores.windowStoreBuilder(Stores.persistentWindowStore(windowName,ofMillis(60_000L),ofMillis(60_000L),true),Serdes.Bytes(),Serdes.String()).build();
  windowStore.init(context,windowStore);
  final Bytes key1=Bytes.wrap(new byte[]{0});
  final Bytes key2=Bytes.wrap(new byte[]{0,0});
  final Bytes key3=Bytes.wrap(new byte[]{0,0,0});
  windowStore.put(key1,"1",0);
  windowStore.put(key2,"2",0);
  windowStore.put(key3,"3",0);
  windowStore.put(key1,"4",1);
  windowStore.put(key2,"5",1);
  windowStore.put(key3,"6",59999);
  windowStore.put(key1,"7",59999);
  windowStore.put(key2,"8",59999);
  windowStore.put(key3,"9",59999);
  final List expectedKey1=Utils.mkList("1","4","7");
  assertThat(toList(windowStore.fetch(key1,ofEpochMilli(0),ofEpochMilli(Long.MAX_VALUE))),equalTo(expectedKey1));
  final List expectedKey2=Utils.mkList("2","5","8");
  assertThat(toList(windowStore.fetch(key2,ofEpochMilli(0),ofEpochMilli(Long.MAX_VALUE))),equalTo(expectedKey2));
  final List expectedKey3=Utils.mkList("3","6","9");
  assertThat(toList(windowStore.fetch(key3,ofEpochMilli(0),ofEpochMilli(Long.MAX_VALUE))),equalTo(expectedKey3));
}
