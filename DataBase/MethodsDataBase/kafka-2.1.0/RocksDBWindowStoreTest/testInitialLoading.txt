@SuppressWarnings("ResultOfMethodCallIgnored") @Test public void testInitialLoading(){
  final File storeDir=new File(baseDir,windowName);
  windowStore=createWindowStore(context,false);
  new File(storeDir,segments.segmentName(0L)).mkdir();
  new File(storeDir,segments.segmentName(1L)).mkdir();
  new File(storeDir,segments.segmentName(2L)).mkdir();
  new File(storeDir,segments.segmentName(3L)).mkdir();
  new File(storeDir,segments.segmentName(4L)).mkdir();
  new File(storeDir,segments.segmentName(5L)).mkdir();
  new File(storeDir,segments.segmentName(6L)).mkdir();
  windowStore.close();
  context.setStreamTime(segmentInterval * 6L);
  windowStore=createWindowStore(context,false);
  final List<String> expected=Utils.mkList(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L));
  expected.sort(String::compareTo);
  final List<String> actual=Utils.toList(segmentDirs(baseDir).iterator());
  actual.sort(String::compareTo);
  assertEquals(expected,actual);
  try (final WindowStoreIterator iter=windowStore.fetch(0,ofEpochMilli(0L),ofEpochMilli(1000000L))){
    while (iter.hasNext()) {
      iter.next();
    }
  }
   assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir));
}
