@Test public void testSegmentMaintenance(){
  windowStore=createWindowStore(context,true);
  context.setTime(0L);
  setCurrentTime(0);
  windowStore.put(0,"v");
  assertEquals(Utils.mkSet(segments.segmentName(0L)),segmentDirs(baseDir));
  setCurrentTime(segmentInterval - 1);
  windowStore.put(0,"v");
  windowStore.put(0,"v");
  assertEquals(Utils.mkSet(segments.segmentName(0L)),segmentDirs(baseDir));
  setCurrentTime(segmentInterval);
  windowStore.put(0,"v");
  assertEquals(Utils.mkSet(segments.segmentName(0L),segments.segmentName(1L)),segmentDirs(baseDir));
  WindowStoreIterator iter;
  int fetchedCount;
  iter=windowStore.fetch(0,ofEpochMilli(0L),ofEpochMilli(segmentInterval * 4));
  fetchedCount=0;
  while (iter.hasNext()) {
    iter.next();
    fetchedCount++;
  }
  assertEquals(4,fetchedCount);
  assertEquals(Utils.mkSet(segments.segmentName(0L),segments.segmentName(1L)),segmentDirs(baseDir));
  setCurrentTime(segmentInterval * 3);
  windowStore.put(0,"v");
  iter=windowStore.fetch(0,ofEpochMilli(0L),ofEpochMilli(segmentInterval * 4));
  fetchedCount=0;
  while (iter.hasNext()) {
    iter.next();
    fetchedCount++;
  }
  assertEquals(2,fetchedCount);
  assertEquals(Utils.mkSet(segments.segmentName(1L),segments.segmentName(3L)),segmentDirs(baseDir));
  setCurrentTime(segmentInterval * 5);
  windowStore.put(0,"v");
  iter=windowStore.fetch(0,ofEpochMilli(segmentInterval * 4),ofEpochMilli(segmentInterval * 10));
  fetchedCount=0;
  while (iter.hasNext()) {
    iter.next();
    fetchedCount++;
  }
  assertEquals(1,fetchedCount);
  assertEquals(Utils.mkSet(segments.segmentName(3L),segments.segmentName(5L)),segmentDirs(baseDir));
}
