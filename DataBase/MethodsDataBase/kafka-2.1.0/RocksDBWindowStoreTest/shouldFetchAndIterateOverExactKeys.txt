@Test public void shouldFetchAndIterateOverExactKeys(){
  final long windowSize=0x7a00000000000000L;
  final long retentionPeriod=0x7a00000000000000L;
  final WindowStore<String,String> windowStore=Stores.windowStoreBuilder(Stores.persistentWindowStore(windowName,ofMillis(retentionPeriod),ofMillis(windowSize),true),Serdes.String(),Serdes.String()).build();
  windowStore.init(context,windowStore);
  windowStore.put("a","0001",0);
  windowStore.put("aa","0002",0);
  windowStore.put("a","0003",1);
  windowStore.put("aa","0004",1);
  windowStore.put("a","0005",0x7a00000000000000L - 1);
  final List expected=Utils.mkList("0001","0003","0005");
  assertThat(toList(windowStore.fetch("a",ofEpochMilli(0),ofEpochMilli(Long.MAX_VALUE))),equalTo(expected));
  List<KeyValue<Windowed<String>,String>> list=StreamsTestUtils.toList(windowStore.fetch("a","a",ofEpochMilli(0),ofEpochMilli(Long.MAX_VALUE)));
  assertThat(list,equalTo(Utils.mkList(windowedPair("a","0001",0,windowSize),windowedPair("a","0003",1,windowSize),windowedPair("a","0005",0x7a00000000000000L - 1,windowSize))));
  list=StreamsTestUtils.toList(windowStore.fetch("aa","aa",ofEpochMilli(0),ofEpochMilli(Long.MAX_VALUE)));
  assertThat(list,equalTo(Utils.mkList(windowedPair("aa","0002",0,windowSize),windowedPair("aa","0004",1,windowSize))));
}
