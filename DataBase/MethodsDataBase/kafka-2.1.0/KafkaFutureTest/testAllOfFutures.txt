@Test public void testAllOfFutures() throws Exception {
  final int numThreads=5;
  final List<KafkaFutureImpl<Integer>> futures=new ArrayList<>();
  for (int i=0; i < numThreads; i++) {
    futures.add(new KafkaFutureImpl<Integer>());
  }
  KafkaFuture<Void> allFuture=KafkaFuture.allOf(futures.toArray(new KafkaFuture[0]));
  final List<CompleterThread> completerThreads=new ArrayList<>();
  final List<WaiterThread> waiterThreads=new ArrayList<>();
  for (int i=0; i < numThreads; i++) {
    completerThreads.add(new CompleterThread<>(futures.get(i),i));
    waiterThreads.add(new WaiterThread<>(futures.get(i),i));
  }
  assertFalse(allFuture.isDone());
  for (int i=0; i < numThreads; i++) {
    waiterThreads.get(i).start();
  }
  for (int i=0; i < numThreads - 1; i++) {
    completerThreads.get(i).start();
  }
  assertFalse(allFuture.isDone());
  completerThreads.get(numThreads - 1).start();
  allFuture.get();
  assertTrue(allFuture.isDone());
  for (int i=0; i < numThreads; i++) {
    assertEquals(Integer.valueOf(i),futures.get(i).get());
  }
  for (int i=0; i < numThreads; i++) {
    completerThreads.get(i).join();
    waiterThreads.get(i).join();
    assertEquals(null,completerThreads.get(i).testException);
    assertEquals(null,waiterThreads.get(i).testException);
  }
}
