@Test public void mapToJsonNonStringKeys(){
  Schema intIntMap=SchemaBuilder.map(Schema.INT32_SCHEMA,Schema.INT32_SCHEMA).build();
  Map<Integer,Integer> input=new HashMap<>();
  input.put(1,12);
  input.put(2,15);
  JsonNode converted=parse(converter.fromConnectData(TOPIC,intIntMap,input));
  validateEnvelope(converted);
  assertEquals(parse("{ \"type\": \"map\", \"keys\": { \"type\" : \"int32\", \"optional\": false }, \"values\": { \"type\" : \"int32\", \"optional\": false }, \"optional\": false }"),converted.get(JsonSchema.ENVELOPE_SCHEMA_FIELD_NAME));
  assertTrue(converted.get(JsonSchema.ENVELOPE_PAYLOAD_FIELD_NAME).isArray());
  ArrayNode payload=(ArrayNode)converted.get(JsonSchema.ENVELOPE_PAYLOAD_FIELD_NAME);
  assertEquals(2,payload.size());
  Set<JsonNode> payloadEntries=new HashSet<>();
  for (  JsonNode elem : payload)   payloadEntries.add(elem);
  assertEquals(new HashSet<>(Arrays.asList(JsonNodeFactory.instance.arrayNode().add(1).add(12),JsonNodeFactory.instance.arrayNode().add(2).add(15))),payloadEntries);
}
