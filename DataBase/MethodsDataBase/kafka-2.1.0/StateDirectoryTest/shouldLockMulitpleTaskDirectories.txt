@Test public void shouldLockMulitpleTaskDirectories() throws IOException {
  final TaskId taskId=new TaskId(0,0);
  final File task1Dir=directory.directoryForTask(taskId);
  final TaskId taskId2=new TaskId(1,0);
  final File task2Dir=directory.directoryForTask(taskId2);
  try (final FileChannel channel1=FileChannel.open(new File(task1Dir,StateDirectory.LOCK_FILE_NAME).toPath(),StandardOpenOption.CREATE,StandardOpenOption.WRITE);final FileChannel channel2=FileChannel.open(new File(task2Dir,StateDirectory.LOCK_FILE_NAME).toPath(),StandardOpenOption.CREATE,StandardOpenOption.WRITE)){
    directory.lock(taskId);
    directory.lock(taskId2);
    channel1.tryLock();
    channel2.tryLock();
    fail("shouldn't be able to lock already locked directory");
  }
 catch (  final OverlappingFileLockException e) {
  }
 finally {
    directory.unlock(taskId);
    directory.unlock(taskId2);
  }
}
