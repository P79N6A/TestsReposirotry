@Test public void shouldSkipNullKeysWhenRestoring(){
  final HashMap<TopicPartition,Long> startOffsets=new HashMap<>();
  startOffsets.put(t1,1L);
  final HashMap<TopicPartition,Long> endOffsets=new HashMap<>();
  endOffsets.put(t1,2L);
  consumer.updatePartitions(t1.topic(),Collections.singletonList(new PartitionInfo(t1.topic(),t1.partition(),null,null,null)));
  consumer.assign(Collections.singletonList(t1));
  consumer.updateEndOffsets(endOffsets);
  consumer.updateBeginningOffsets(startOffsets);
  consumer.addRecord(new ConsumerRecord<>(t1.topic(),t1.partition(),1,(byte[])null,"null".getBytes()));
  final byte[] expectedKey="key".getBytes();
  final byte[] expectedValue="value".getBytes();
  consumer.addRecord(new ConsumerRecord<>(t1.topic(),t1.partition(),2,expectedKey,expectedValue));
  stateManager.initialize();
  stateManager.register(store1,stateRestoreCallback);
  final KeyValue<byte[],byte[]> restoredKv=stateRestoreCallback.restored.get(0);
  assertThat(stateRestoreCallback.restored,equalTo(Collections.singletonList(KeyValue.pair(restoredKv.key,restoredKv.value))));
}
