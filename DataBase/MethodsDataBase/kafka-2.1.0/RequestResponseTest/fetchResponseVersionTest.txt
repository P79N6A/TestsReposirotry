@Test public void fetchResponseVersionTest(){
  LinkedHashMap<TopicPartition,FetchResponse.PartitionData<MemoryRecords>> responseData=new LinkedHashMap<>();
  MemoryRecords records=MemoryRecords.readableRecords(ByteBuffer.allocate(10));
  responseData.put(new TopicPartition("test",0),new FetchResponse.PartitionData<>(Errors.NONE,1000000,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,records));
  FetchResponse<MemoryRecords> v0Response=new FetchResponse<>(Errors.NONE,responseData,0,INVALID_SESSION_ID);
  FetchResponse<MemoryRecords> v1Response=new FetchResponse<>(Errors.NONE,responseData,10,INVALID_SESSION_ID);
  assertEquals("Throttle time must be zero",0,v0Response.throttleTimeMs());
  assertEquals("Throttle time must be 10",10,v1Response.throttleTimeMs());
  assertEquals("Should use schema version 0",ApiKeys.FETCH.responseSchema((short)0),v0Response.toStruct((short)0).schema());
  assertEquals("Should use schema version 1",ApiKeys.FETCH.responseSchema((short)1),v1Response.toStruct((short)1).schema());
  assertEquals("Response data does not match",responseData,v0Response.responseData());
  assertEquals("Response data does not match",responseData,v1Response.responseData());
}
