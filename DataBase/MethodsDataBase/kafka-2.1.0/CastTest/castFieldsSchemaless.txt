@SuppressWarnings("unchecked") @Test public void castFieldsSchemaless(){
  xformValue.configure(Collections.singletonMap(Cast.SPEC_CONFIG,"int8:int16,int16:int32,int32:int64,int64:boolean,float32:float64,float64:boolean,boolean:int8,string:int32"));
  Map<String,Object> recordValue=new HashMap<>();
  recordValue.put("int8",(byte)8);
  recordValue.put("int16",(short)16);
  recordValue.put("int32",32);
  recordValue.put("int64",(long)64);
  recordValue.put("float32",32.f);
  recordValue.put("float64",-64.);
  recordValue.put("boolean",true);
  recordValue.put("string","42");
  SourceRecord transformed=xformValue.apply(new SourceRecord(null,null,"topic",0,null,recordValue));
  assertNull(transformed.valueSchema());
  assertEquals((short)8,((Map<String,Object>)transformed.value()).get("int8"));
  assertEquals(16,((Map<String,Object>)transformed.value()).get("int16"));
  assertEquals((long)32,((Map<String,Object>)transformed.value()).get("int32"));
  assertEquals(true,((Map<String,Object>)transformed.value()).get("int64"));
  assertEquals(32.,((Map<String,Object>)transformed.value()).get("float32"));
  assertEquals(true,((Map<String,Object>)transformed.value()).get("float64"));
  assertEquals((byte)1,((Map<String,Object>)transformed.value()).get("boolean"));
  assertEquals(42,((Map<String,Object>)transformed.value()).get("string"));
}
