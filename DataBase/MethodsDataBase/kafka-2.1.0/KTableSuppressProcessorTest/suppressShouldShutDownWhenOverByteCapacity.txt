@Test public void suppressShouldShutDownWhenOverByteCapacity(){
  final Harness<String,Long> harness=new Harness<>(untilTimeLimit(Duration.ofDays(100),maxBytes(60L).shutDownWhenFull()),String(),Long());
  final MockInternalProcessorContext context=harness.context;
  final KTableSuppressProcessor<String,Long> processor=harness.processor;
  final long timestamp=100L;
  context.setStreamTime(timestamp);
  context.setRecordMetadata("",0,0L,null,timestamp);
  context.setCurrentNode(new ProcessorNode("testNode"));
  final String key="hey";
  final Change<Long> value=new Change<>(null,ARBITRARY_LONG);
  processor.process(key,value);
  context.setRecordMetadata("",0,1L,null,timestamp);
  try {
    processor.process("dummyKey",value);
    fail("expected an exception");
  }
 catch (  final StreamsException e) {
    assertThat(e.getMessage(),containsString("buffer exceeded its max capacity"));
  }
}
