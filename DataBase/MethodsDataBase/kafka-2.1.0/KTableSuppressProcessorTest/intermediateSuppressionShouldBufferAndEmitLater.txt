@Test public void intermediateSuppressionShouldBufferAndEmitLater(){
  final Harness<String,Long> harness=new Harness<>(untilTimeLimit(ofMillis(1),unbounded()),String(),Long());
  final MockInternalProcessorContext context=harness.context;
  final KTableSuppressProcessor<String,Long> processor=harness.processor;
  final long timestamp=0L;
  context.setRecordMetadata("topic",0,0,null,timestamp);
  context.setStreamTime(timestamp);
  final String key="hey";
  final Change<Long> value=new Change<>(null,1L);
  processor.process(key,value);
  assertThat(context.forwarded(),hasSize(0));
  context.setRecordMetadata("topic",0,1,null,1L);
  context.setStreamTime(1L);
  processor.process("tick",new Change<>(null,null));
  assertThat(context.forwarded(),hasSize(1));
  final MockProcessorContext.CapturedForward capturedForward=context.forwarded().get(0);
  assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)));
  assertThat(capturedForward.timestamp(),is(timestamp));
}
