@Test public void testNormalJoinGroupLeader(){
  EasyMock.expect(configStorage.snapshot()).andReturn(configState1);
  PowerMock.replayAll();
  final String consumerId="leader";
  client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE));
  coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE));
  Map<String,Long> memberConfigOffsets=new HashMap<>();
  memberConfigOffsets.put("leader",1L);
  memberConfigOffsets.put("member",1L);
  client.prepareResponse(joinGroupLeaderResponse(1,consumerId,memberConfigOffsets,Errors.NONE));
  client.prepareResponse(new MockClient.RequestMatcher(){
    @Override public boolean matches(    AbstractRequest body){
      SyncGroupRequest sync=(SyncGroupRequest)body;
      return sync.memberId().equals(consumerId) && sync.generationId() == 1 && sync.groupAssignment().containsKey(consumerId);
    }
  }
,syncGroupResponse(ConnectProtocol.Assignment.NO_ERROR,"leader",1L,Collections.singletonList(connectorId1),Collections.<ConnectorTaskId>emptyList(),Errors.NONE));
  coordinator.ensureActiveGroup();
  assertFalse(coordinator.rejoinNeededOrPending());
  assertEquals(0,rebalanceListener.revokedCount);
  assertEquals(1,rebalanceListener.assignedCount);
  assertFalse(rebalanceListener.assignment.failed());
  assertEquals(1L,rebalanceListener.assignment.offset());
  assertEquals("leader",rebalanceListener.assignment.leader());
  assertEquals(Collections.singletonList(connectorId1),rebalanceListener.assignment.connectors());
  assertEquals(Collections.emptyList(),rebalanceListener.assignment.tasks());
  PowerMock.verifyAll();
}
