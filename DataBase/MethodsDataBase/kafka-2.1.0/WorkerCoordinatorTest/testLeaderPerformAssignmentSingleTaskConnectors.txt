@Test public void testLeaderPerformAssignmentSingleTaskConnectors() throws Exception {
  EasyMock.expect(configStorage.snapshot()).andReturn(configStateSingleTaskConnectors);
  PowerMock.replayAll();
  coordinator.metadata();
  Map<String,ByteBuffer> configs=new HashMap<>();
  configs.put("leader",ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL,1L)));
  configs.put("member",ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL,1L)));
  Map<String,ByteBuffer> result=Whitebox.invokeMethod(coordinator,"performAssignment","leader",WorkerCoordinator.DEFAULT_SUBPROTOCOL,configs);
  ConnectProtocol.Assignment leaderAssignment=ConnectProtocol.deserializeAssignment(result.get("leader"));
  assertEquals(false,leaderAssignment.failed());
  assertEquals("leader",leaderAssignment.leader());
  assertEquals(1,leaderAssignment.offset());
  assertEquals(Arrays.asList(connectorId1,connectorId3),leaderAssignment.connectors());
  assertEquals(Arrays.asList(taskId2x0),leaderAssignment.tasks());
  ConnectProtocol.Assignment memberAssignment=ConnectProtocol.deserializeAssignment(result.get("member"));
  assertEquals(false,memberAssignment.failed());
  assertEquals("leader",memberAssignment.leader());
  assertEquals(1,memberAssignment.offset());
  assertEquals(Collections.singletonList(connectorId2),memberAssignment.connectors());
  assertEquals(Arrays.asList(taskId1x0,taskId3x0),memberAssignment.tasks());
  PowerMock.verifyAll();
}
