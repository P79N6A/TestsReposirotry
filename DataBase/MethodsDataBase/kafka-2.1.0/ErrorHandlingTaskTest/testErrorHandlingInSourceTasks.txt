@Test public void testErrorHandlingInSourceTasks() throws Exception {
  Map<String,String> reportProps=new HashMap<>();
  reportProps.put(ConnectorConfig.ERRORS_LOG_ENABLE_CONFIG,"true");
  reportProps.put(ConnectorConfig.ERRORS_LOG_INCLUDE_MESSAGES_CONFIG,"true");
  LogReporter reporter=new LogReporter(taskId,connConfig(reportProps),errorHandlingMetrics);
  RetryWithToleranceOperator retryWithToleranceOperator=operator();
  retryWithToleranceOperator.metrics(errorHandlingMetrics);
  retryWithToleranceOperator.reporters(singletonList(reporter));
  createSourceTask(initialState,retryWithToleranceOperator);
  Schema valSchema=SchemaBuilder.struct().field("val",Schema.INT32_SCHEMA).build();
  Struct struct1=new Struct(valSchema).put("val",1234);
  SourceRecord record1=new SourceRecord(emptyMap(),emptyMap(),TOPIC,PARTITION1,valSchema,struct1);
  Struct struct2=new Struct(valSchema).put("val",6789);
  SourceRecord record2=new SourceRecord(emptyMap(),emptyMap(),TOPIC,PARTITION1,valSchema,struct2);
  EasyMock.expect(workerSourceTask.isStopping()).andReturn(false);
  EasyMock.expect(workerSourceTask.isStopping()).andReturn(false);
  EasyMock.expect(workerSourceTask.isStopping()).andReturn(true);
  EasyMock.expect(workerSourceTask.commitOffsets()).andReturn(true);
  offsetWriter.offset(EasyMock.anyObject(),EasyMock.anyObject());
  EasyMock.expectLastCall().times(2);
  sourceTask.initialize(EasyMock.anyObject());
  EasyMock.expectLastCall();
  sourceTask.start(EasyMock.anyObject());
  EasyMock.expectLastCall();
  EasyMock.expect(sourceTask.poll()).andReturn(singletonList(record1));
  EasyMock.expect(sourceTask.poll()).andReturn(singletonList(record2));
  EasyMock.expect(producer.send(EasyMock.anyObject(),EasyMock.anyObject())).andReturn(null).times(2);
  PowerMock.replayAll();
  workerSourceTask.initialize(TASK_CONFIG);
  workerSourceTask.execute();
  assertSourceMetricValue("source-record-poll-total",2.0);
  assertSourceMetricValue("source-record-write-total",0.0);
  assertErrorHandlingMetricValue("total-record-errors",0.0);
  assertErrorHandlingMetricValue("total-record-failures",4.0);
  assertErrorHandlingMetricValue("total-records-skipped",0.0);
  PowerMock.verifyAll();
}
