@Deprecated @Test public void shouldLogAndMeterOnExpiredEvent(){
  final StreamsBuilder builder=new StreamsBuilder();
  builder.stream("TOPIC",Consumed.with(Serdes.String(),Serdes.String())).groupByKey(Serialized.with(Serdes.String(),Serdes.String())).windowedBy(TimeWindows.of(ofMillis(5L)).until(100)).reduce((value1,value2) -> value1 + "+" + value2).toStream().map((key,value) -> new KeyValue<>(key.toString(),value)).to("output");
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){
    LogCaptureAppender.setClassLoggerToDebug(KStreamWindowReduce.class);
    final LogCaptureAppender appender=LogCaptureAppender.createAndRegister();
    driver.pipeInput(recordFactory.create("TOPIC","k","100",100L));
    driver.pipeInput(recordFactory.create("TOPIC","k","0",0L));
    driver.pipeInput(recordFactory.create("TOPIC","k","1",1L));
    driver.pipeInput(recordFactory.create("TOPIC","k","2",2L));
    driver.pipeInput(recordFactory.create("TOPIC","k","3",3L));
    driver.pipeInput(recordFactory.create("TOPIC","k","4",4L));
    driver.pipeInput(recordFactory.create("TOPIC","k","5",5L));
    LogCaptureAppender.unregister(appender);
    final Metric dropMetric=driver.metrics().get(new MetricName("late-record-drop-total","stream-processor-node-metrics","The total number of occurrence of late-record-drop operations.",mkMap(mkEntry("client-id","topology-test-driver-virtual-thread"),mkEntry("task-id","0_0"),mkEntry("processor-node-id","KSTREAM-REDUCE-0000000002"))));
    assertThat(dropMetric.metricValue(),equalTo(5.0));
    assertThat(appender.getMessages(),hasItems("Skipping record for expired window. key=[k] topic=[TOPIC] partition=[0] offset=[1] timestamp=[0] window=[0,5) expiration=[5]","Skipping record for expired window. key=[k] topic=[TOPIC] partition=[0] offset=[2] timestamp=[1] window=[0,5) expiration=[5]","Skipping record for expired window. key=[k] topic=[TOPIC] partition=[0] offset=[3] timestamp=[2] window=[0,5) expiration=[5]","Skipping record for expired window. key=[k] topic=[TOPIC] partition=[0] offset=[4] timestamp=[3] window=[0,5) expiration=[5]","Skipping record for expired window. key=[k] topic=[TOPIC] partition=[0] offset=[5] timestamp=[4] window=[0,5) expiration=[5]"));
    OutputVerifier.compareKeyValueTimestamp(getOutput(driver),"[k@100/105]","100",100);
    OutputVerifier.compareKeyValueTimestamp(getOutput(driver),"[k@5/10]","5",5);
    assertThat(driver.readOutput("output"),nullValue());
  }
 }
