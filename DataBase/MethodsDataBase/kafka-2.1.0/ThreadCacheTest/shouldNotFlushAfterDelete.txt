@Test public void shouldNotFlushAfterDelete(){
  final Bytes key=Bytes.wrap(new byte[]{0});
  final ThreadCache cache=new ThreadCache(logContext,10000L,new MockStreamsMetrics(new Metrics()));
  final List<ThreadCache.DirtyEntry> received=new ArrayList<>();
  cache.addDirtyEntryFlushListener(namespace,new ThreadCache.DirtyEntryFlushListener(){
    @Override public void apply(    final List<ThreadCache.DirtyEntry> dirty){
      received.addAll(dirty);
    }
  }
);
  cache.put(namespace,key,dirtyEntry(key.get()));
  assertEquals(key.get(),cache.delete(namespace,key).value());
  cache.flush(namespace);
  assertEquals(0,received.size());
  assertEquals(cache.flushes(),1);
}
