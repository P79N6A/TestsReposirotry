@Test public void shouldNotFlushCleanEntriesForNamespace(){
  final ThreadCache cache=new ThreadCache(logContext,100000,new MockStreamsMetrics(new Metrics()));
  final List<byte[]> received=new ArrayList<>();
  cache.addDirtyEntryFlushListener(namespace1,new ThreadCache.DirtyEntryFlushListener(){
    @Override public void apply(    final List<ThreadCache.DirtyEntry> dirty){
      for (      final ThreadCache.DirtyEntry dirtyEntry : dirty) {
        received.add(dirtyEntry.key().get());
      }
    }
  }
);
  final List<byte[]> toInsert=Arrays.asList(new byte[]{0},new byte[]{1},new byte[]{2});
  for (  final byte[] bytes : toInsert) {
    cache.put(namespace1,Bytes.wrap(bytes),cleanEntry(bytes));
  }
  cache.put(namespace2,Bytes.wrap(new byte[]{4}),cleanEntry(new byte[]{4}));
  cache.flush(namespace1);
  assertEquals(Collections.EMPTY_LIST,received);
}
