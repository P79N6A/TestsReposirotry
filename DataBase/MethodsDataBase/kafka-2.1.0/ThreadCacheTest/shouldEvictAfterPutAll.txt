@Test public void shouldEvictAfterPutAll(){
  final List<ThreadCache.DirtyEntry> received=new ArrayList<>();
  final ThreadCache cache=new ThreadCache(logContext,1,new MockStreamsMetrics(new Metrics()));
  cache.addDirtyEntryFlushListener(namespace,new ThreadCache.DirtyEntryFlushListener(){
    @Override public void apply(    final List<ThreadCache.DirtyEntry> dirty){
      received.addAll(dirty);
    }
  }
);
  cache.putAll(namespace,Arrays.asList(KeyValue.pair(Bytes.wrap(new byte[]{0}),dirtyEntry(new byte[]{5})),KeyValue.pair(Bytes.wrap(new byte[]{1}),dirtyEntry(new byte[]{6}))));
  assertEquals(cache.evicts(),2);
  assertEquals(received.size(),2);
}
