@Test public void shouldCapturePunctuator(){
  final Processor<String,Long> processor=new Processor<String,Long>(){
    @Override public void init(    final ProcessorContext context){
      context.schedule(Duration.ofSeconds(1L),PunctuationType.WALL_CLOCK_TIME,timestamp -> context.commit());
    }
    @Override public void process(    final String key,    final Long value){
    }
    @Override public void close(){
    }
  }
;
  final MockProcessorContext context=new MockProcessorContext();
  processor.init(context);
  final MockProcessorContext.CapturedPunctuator capturedPunctuator=context.scheduledPunctuators().get(0);
  assertEquals(1000L,capturedPunctuator.getIntervalMs());
  assertEquals(PunctuationType.WALL_CLOCK_TIME,capturedPunctuator.getType());
  assertFalse(capturedPunctuator.cancelled());
  final Punctuator punctuator=capturedPunctuator.getPunctuator();
  assertFalse(context.committed());
  punctuator.punctuate(1234L);
  assertTrue(context.committed());
}
