@Test public void shouldRestoreMultipleStores(){
  final TopicPartition one=new TopicPartition("one",0);
  final TopicPartition two=new TopicPartition("two",0);
  final MockRestoreCallback callbackOne=new MockRestoreCallback();
  final MockRestoreCallback callbackTwo=new MockRestoreCallback();
  final CompositeRestoreListener restoreListener1=new CompositeRestoreListener(callbackOne);
  final CompositeRestoreListener restoreListener2=new CompositeRestoreListener(callbackTwo);
  setupConsumer(10,topicPartition);
  setupConsumer(5,one);
  setupConsumer(3,two);
  changelogReader.register(new StateRestorer(topicPartition,restoreListener,null,Long.MAX_VALUE,true,"storeName1"));
  changelogReader.register(new StateRestorer(one,restoreListener1,null,Long.MAX_VALUE,true,"storeName2"));
  changelogReader.register(new StateRestorer(two,restoreListener2,null,Long.MAX_VALUE,true,"storeName3"));
  expect(active.restoringTaskFor(one)).andStubReturn(task);
  expect(active.restoringTaskFor(two)).andStubReturn(task);
  expect(active.restoringTaskFor(topicPartition)).andStubReturn(task);
  replay(active,task);
  changelogReader.restore(active);
  assertThat(callback.restored.size(),equalTo(10));
  assertThat(callbackOne.restored.size(),equalTo(5));
  assertThat(callbackTwo.restored.size(),equalTo(3));
}
