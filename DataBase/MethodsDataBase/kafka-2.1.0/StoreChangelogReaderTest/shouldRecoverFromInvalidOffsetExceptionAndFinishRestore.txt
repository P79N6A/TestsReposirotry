@Test public void shouldRecoverFromInvalidOffsetExceptionAndFinishRestore(){
  final int messages=10;
  setupConsumer(messages,topicPartition);
  consumer.setException(new InvalidOffsetException("Try Again!"){
    @Override public Set<TopicPartition> partitions(){
      return Collections.singleton(topicPartition);
    }
  }
);
  changelogReader.register(new StateRestorer(topicPartition,restoreListener,null,Long.MAX_VALUE,true,"storeName"));
  EasyMock.expect(active.restoringTaskFor(topicPartition)).andStubReturn(task);
  EasyMock.replay(active,task);
  assertEquals(0,changelogReader.restore(active).size());
  changelogReader.register(new StateRestorer(topicPartition,restoreListener,null,Long.MAX_VALUE,true,"storeName"));
  assertEquals(1,changelogReader.restore(active).size());
  assertThat(callback.restored.size(),equalTo(messages));
}
