@Test public void shouldNotLoopInfinitelyOnMissingMetadataAndShouldNotCreateRelatedTasks(){
  final StreamsBuilder builder=new StreamsBuilder();
  final KStream<Object,Object> stream1=builder.stream("topic1").selectKey(new KeyValueMapper<Object,Object,Object>(){
    @Override public Object apply(    final Object key,    final Object value){
      return null;
    }
  }
).groupByKey().count(Materialized.<Object,Long,KeyValueStore<Bytes,byte[]>>as("count")).toStream().map(new KeyValueMapper<Object,Long,KeyValue<Object,Object>>(){
    @Override public KeyValue<Object,Object> apply(    final Object key,    final Long value){
      return null;
    }
  }
);
  builder.stream("unknownTopic").selectKey(new KeyValueMapper<Object,Object,Object>(){
    @Override public Object apply(    final Object key,    final Object value){
      return null;
    }
  }
).join(stream1,new ValueJoiner(){
    @Override public Object apply(    final Object value1,    final Object value2){
      return null;
    }
  }
,JoinWindows.of(ofMillis(0)));
  final UUID uuid=UUID.randomUUID();
  final String client="client1";
  final InternalTopologyBuilder internalTopologyBuilder=TopologyWrapper.getInternalTopologyBuilder(builder.build());
  internalTopologyBuilder.setApplicationId(applicationId);
  mockTaskManager(Collections.<TaskId>emptySet(),Collections.<TaskId>emptySet(),UUID.randomUUID(),internalTopologyBuilder);
  configurePartitionAssignor(Collections.<String,Object>emptyMap());
  final MockInternalTopicManager mockInternalTopicManager=new MockInternalTopicManager(streamsConfig,mockClientSupplier.restoreConsumer);
  partitionAssignor.setInternalTopicManager(mockInternalTopicManager);
  final Map<String,PartitionAssignor.Subscription> subscriptions=new HashMap<>();
  final Set<TaskId> emptyTasks=Collections.emptySet();
  subscriptions.put(client,new PartitionAssignor.Subscription(Collections.singletonList("unknownTopic"),new SubscriptionInfo(uuid,emptyTasks,emptyTasks,userEndPoint).encode()));
  final Map<String,PartitionAssignor.Assignment> assignment=partitionAssignor.assign(metadata,subscriptions);
  assertThat(mockInternalTopicManager.readyTopics.isEmpty(),equalTo(true));
  assertThat(assignment.get(client).partitions().isEmpty(),equalTo(true));
}
