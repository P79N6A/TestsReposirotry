@Test public void testAssignWithNewTasks(){
  builder.addSource(null,"source1",null,null,null,"topic1");
  builder.addSource(null,"source2",null,null,null,"topic2");
  builder.addSource(null,"source3",null,null,null,"topic3");
  builder.addProcessor("processor",new MockProcessorSupplier(),"source1","source2","source3");
  final List<String> topics=Utils.mkList("topic1","topic2","topic3");
  final Set<TaskId> allTasks=Utils.mkSet(task0,task1,task2,task3);
  final Set<TaskId> prevTasks10=Utils.mkSet(task0);
  final Set<TaskId> prevTasks11=Utils.mkSet(task1);
  final Set<TaskId> prevTasks20=Utils.mkSet(task2);
  final UUID uuid1=UUID.randomUUID();
  final UUID uuid2=UUID.randomUUID();
  mockTaskManager(prevTasks10,Collections.<TaskId>emptySet(),uuid1,builder);
  configurePartitionAssignor(Collections.<String,Object>emptyMap());
  partitionAssignor.setInternalTopicManager(new MockInternalTopicManager(streamsConfig,mockClientSupplier.restoreConsumer));
  final Map<String,PartitionAssignor.Subscription> subscriptions=new HashMap<>();
  subscriptions.put("consumer10",new PartitionAssignor.Subscription(topics,new SubscriptionInfo(uuid1,prevTasks10,Collections.<TaskId>emptySet(),userEndPoint).encode()));
  subscriptions.put("consumer11",new PartitionAssignor.Subscription(topics,new SubscriptionInfo(uuid1,prevTasks11,Collections.<TaskId>emptySet(),userEndPoint).encode()));
  subscriptions.put("consumer20",new PartitionAssignor.Subscription(topics,new SubscriptionInfo(uuid2,prevTasks20,Collections.<TaskId>emptySet(),userEndPoint).encode()));
  final Map<String,PartitionAssignor.Assignment> assignments=partitionAssignor.assign(metadata,subscriptions);
  AssignmentInfo info=AssignmentInfo.decode(assignments.get("consumer10").userData());
  final Set<TaskId> allActiveTasks=new HashSet<>(info.activeTasks());
  final Set<TopicPartition> allPartitions=new HashSet<>(assignments.get("consumer10").partitions());
  info=AssignmentInfo.decode(assignments.get("consumer11").userData());
  allActiveTasks.addAll(info.activeTasks());
  allPartitions.addAll(assignments.get("consumer11").partitions());
  info=AssignmentInfo.decode(assignments.get("consumer20").userData());
  allActiveTasks.addAll(info.activeTasks());
  allPartitions.addAll(assignments.get("consumer20").partitions());
  assertEquals(allTasks,allActiveTasks);
  assertEquals(Utils.mkSet(t1p0,t1p1,t1p2,t2p0,t2p1,t2p2,t3p0,t3p1,t3p2,t3p3),allPartitions);
}
