@Test public void testAssignEmptyMetadata(){
  builder.addSource(null,"source1",null,null,null,"topic1");
  builder.addSource(null,"source2",null,null,null,"topic2");
  builder.addProcessor("processor",new MockProcessorSupplier(),"source1","source2");
  final List<String> topics=Utils.mkList("topic1","topic2");
  final Set<TaskId> allTasks=Utils.mkSet(task0,task1,task2);
  final Set<TaskId> prevTasks10=Utils.mkSet(task0);
  final Set<TaskId> standbyTasks10=Utils.mkSet(task1);
  final Cluster emptyMetadata=new Cluster("cluster",Collections.singletonList(Node.noNode()),Collections.<PartitionInfo>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet());
  final UUID uuid1=UUID.randomUUID();
  mockTaskManager(prevTasks10,standbyTasks10,uuid1,builder);
  configurePartitionAssignor(Collections.<String,Object>emptyMap());
  final Map<String,PartitionAssignor.Subscription> subscriptions=new HashMap<>();
  subscriptions.put("consumer10",new PartitionAssignor.Subscription(topics,new SubscriptionInfo(uuid1,prevTasks10,standbyTasks10,userEndPoint).encode()));
  Map<String,PartitionAssignor.Assignment> assignments=partitionAssignor.assign(emptyMetadata,subscriptions);
  assertEquals(Collections.<TopicPartition>emptySet(),new HashSet<>(assignments.get("consumer10").partitions()));
  AssignmentInfo info10=checkAssignment(Collections.<String>emptySet(),assignments.get("consumer10"));
  final Set<TaskId> allActiveTasks=new HashSet<>(info10.activeTasks());
  assertEquals(0,allActiveTasks.size());
  assertEquals(Collections.<TaskId>emptySet(),new HashSet<>(allActiveTasks));
  assignments=partitionAssignor.assign(metadata,subscriptions);
  assertEquals(Utils.mkSet(Utils.mkSet(t1p0,t2p0,t1p0,t2p0,t1p1,t2p1,t1p2,t2p2)),Utils.mkSet(new HashSet<>(assignments.get("consumer10").partitions())));
  info10=checkAssignment(allTopics,assignments.get("consumer10"));
  allActiveTasks.addAll(info10.activeTasks());
  assertEquals(3,allActiveTasks.size());
  assertEquals(allTasks,new HashSet<>(allActiveTasks));
  assertEquals(3,allActiveTasks.size());
  assertEquals(allTasks,allActiveTasks);
}
