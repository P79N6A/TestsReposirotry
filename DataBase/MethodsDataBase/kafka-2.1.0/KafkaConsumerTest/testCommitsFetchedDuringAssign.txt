@Test public void testCommitsFetchedDuringAssign(){
  long offset1=10000;
  long offset2=20000;
  Time time=new MockTime();
  Cluster cluster=TestUtils.singletonCluster(topic,2);
  Node node=cluster.nodes().get(0);
  Metadata metadata=createMetadata();
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  PartitionAssignor assignor=new RoundRobinAssignor();
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,true);
  consumer.assign(singletonList(tp0));
  client.prepareResponseFrom(new FindCoordinatorResponse(Errors.NONE,node),node);
  Node coordinator=new Node(Integer.MAX_VALUE - node.id(),node.host(),node.port());
  client.prepareResponseFrom(offsetResponse(Collections.singletonMap(tp0,offset1),Errors.NONE),coordinator);
  assertEquals(offset1,consumer.committed(tp0).offset());
  consumer.assign(Arrays.asList(tp0,tp1));
  Map<TopicPartition,Long> offsets=new HashMap<>();
  offsets.put(tp0,offset1);
  client.prepareResponseFrom(offsetResponse(offsets,Errors.NONE),coordinator);
  assertEquals(offset1,consumer.committed(tp0).offset());
  offsets.remove(tp0);
  offsets.put(tp1,offset2);
  client.prepareResponseFrom(offsetResponse(offsets,Errors.NONE),coordinator);
  assertEquals(offset2,consumer.committed(tp1).offset());
  consumer.close(0,TimeUnit.MILLISECONDS);
}
