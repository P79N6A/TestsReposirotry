@Test(expected=InvalidTopicException.class) public void testSubscriptionOnInvalidTopic(){
  Time time=new MockTime();
  Cluster cluster=TestUtils.singletonCluster();
  Node node=cluster.nodes().get(0);
  Metadata metadata=createMetadata();
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  PartitionAssignor assignor=new RoundRobinAssignor();
  String invalidTopicName="topic abc";
  Set<String> invalidTopic=new HashSet<String>();
  invalidTopic.add(invalidTopicName);
  Cluster metadataUpdateResponseCluster=new Cluster(cluster.clusterResource().clusterId(),cluster.nodes(),new ArrayList<PartitionInfo>(0),Collections.<String>emptySet(),invalidTopic,cluster.internalTopics(),cluster.controller());
  client.prepareMetadataUpdate(metadataUpdateResponseCluster,Collections.<String>emptySet());
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,true);
  consumer.subscribe(singleton(invalidTopicName),getConsumerRebalanceListener(consumer));
  consumer.poll(Duration.ZERO);
}
