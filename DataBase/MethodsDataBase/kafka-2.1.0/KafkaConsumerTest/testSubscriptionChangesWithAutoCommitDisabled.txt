/** 
 * Verify that when a consumer changes its topic subscription its assigned partitions do not immediately change, and the consumed offsets of its to-be-revoked partitions are not committed (when auto-commit is disabled). Upon unsubscribing from subscribed topics, the assigned partitions immediately change but if auto-commit is disabled the consumer offsets are not committed.
 */
@Test public void testSubscriptionChangesWithAutoCommitDisabled(){
  Time time=new MockTime();
  Map<String,Integer> tpCounts=new HashMap<>();
  tpCounts.put(topic,1);
  tpCounts.put(topic2,1);
  Cluster cluster=TestUtils.singletonCluster(tpCounts);
  Node node=cluster.nodes().get(0);
  Metadata metadata=createMetadata();
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  PartitionAssignor assignor=new RangeAssignor();
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,false);
  consumer.subscribe(singleton(topic),getConsumerRebalanceListener(consumer));
  assertEquals(singleton(topic),consumer.subscription());
  assertEquals(Collections.emptySet(),consumer.assignment());
  prepareRebalance(client,node,assignor,singletonList(tp0),null);
  consumer.updateAssignmentMetadataIfNeeded(time.timer(Long.MAX_VALUE));
  consumer.poll(Duration.ZERO);
  assertEquals(singleton(topic),consumer.subscription());
  assertEquals(singleton(tp0),consumer.assignment());
  consumer.poll(Duration.ZERO);
  consumer.subscribe(singleton(topic2),getConsumerRebalanceListener(consumer));
  assertEquals(singleton(topic2),consumer.subscription());
  assertEquals(singleton(tp0),consumer.assignment());
  for (  ClientRequest req : client.requests())   assertNotSame(ApiKeys.OFFSET_COMMIT,req.requestBuilder().apiKey());
  consumer.unsubscribe();
  assertEquals(Collections.emptySet(),consumer.subscription());
  assertEquals(Collections.emptySet(),consumer.assignment());
  for (  ClientRequest req : client.requests())   assertNotSame(ApiKeys.OFFSET_COMMIT,req.requestBuilder().apiKey());
  client.requests().clear();
  consumer.close();
}
