@Test public void testChangingRegexSubscription(){
  PartitionAssignor assignor=new RoundRobinAssignor();
  String otherTopic="other";
  TopicPartition otherTopicPartition=new TopicPartition(otherTopic,0);
  Time time=new MockTime();
  Map<String,Integer> topicMetadata=new HashMap<>();
  topicMetadata.put(topic,1);
  topicMetadata.put(otherTopic,1);
  Cluster cluster=TestUtils.clusterWith(1,topicMetadata);
  Metadata metadata=createMetadata();
  Node node=cluster.nodes().get(0);
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  client.cluster(cluster);
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,false);
  Node coordinator=prepareRebalance(client,node,singleton(topic),assignor,singletonList(tp0),null);
  consumer.subscribe(Pattern.compile(topic),getConsumerRebalanceListener(consumer));
  consumer.updateAssignmentMetadataIfNeeded(time.timer(Long.MAX_VALUE));
  consumer.poll(Duration.ZERO);
  assertEquals(singleton(topic),consumer.subscription());
  consumer.subscribe(Pattern.compile(otherTopic),getConsumerRebalanceListener(consumer));
  prepareRebalance(client,node,singleton(otherTopic),assignor,singletonList(otherTopicPartition),coordinator);
  consumer.poll(Duration.ZERO);
  assertEquals(singleton(otherTopic),consumer.subscription());
  consumer.close(0,TimeUnit.MILLISECONDS);
}
