@Test public void fetchResponseWithUnexpectedPartitionIsIgnored(){
  Time time=new MockTime();
  Cluster cluster=TestUtils.singletonCluster(singletonMap(topic,1));
  Node node=cluster.nodes().get(0);
  Metadata metadata=createMetadata();
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  PartitionAssignor assignor=new RangeAssignor();
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,true);
  consumer.subscribe(singletonList(topic),getConsumerRebalanceListener(consumer));
  prepareRebalance(client,node,assignor,singletonList(tp0),null);
  Map<TopicPartition,FetchInfo> fetches1=new HashMap<>();
  fetches1.put(tp0,new FetchInfo(0,1));
  fetches1.put(t2p0,new FetchInfo(0,10));
  client.prepareResponseFrom(fetchResponse(fetches1),node);
  consumer.updateAssignmentMetadataIfNeeded(time.timer(Long.MAX_VALUE));
  ConsumerRecords<String,String> records=consumer.poll(Duration.ZERO);
  assertEquals(0,records.count());
  consumer.close(0,TimeUnit.MILLISECONDS);
}
