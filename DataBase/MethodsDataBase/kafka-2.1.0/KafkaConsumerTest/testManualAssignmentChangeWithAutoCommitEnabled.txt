@Test public void testManualAssignmentChangeWithAutoCommitEnabled(){
  Time time=new MockTime();
  Map<String,Integer> tpCounts=new HashMap<>();
  tpCounts.put(topic,1);
  tpCounts.put(topic2,1);
  Cluster cluster=TestUtils.singletonCluster(tpCounts);
  Node node=cluster.nodes().get(0);
  Metadata metadata=createMetadata();
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  PartitionAssignor assignor=new RangeAssignor();
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,true);
  client.prepareResponseFrom(new FindCoordinatorResponse(Errors.NONE,node),node);
  Node coordinator=new Node(Integer.MAX_VALUE - node.id(),node.host(),node.port());
  consumer.assign(singleton(tp0));
  consumer.seekToBeginning(singleton(tp0));
  client.prepareResponseFrom(offsetResponse(Collections.singletonMap(tp0,0L),Errors.NONE),coordinator);
  assertEquals(0,consumer.committed(tp0).offset());
  assertTrue(consumer.assignment().equals(singleton(tp0)));
  client.prepareResponse(listOffsetsResponse(Collections.singletonMap(tp0,10L)));
  client.prepareResponse(fetchResponse(tp0,10L,1));
  ConsumerRecords<String,String> records=consumer.poll(Duration.ofMillis(1));
  assertEquals(1,records.count());
  assertEquals(11L,consumer.position(tp0));
  AtomicBoolean commitReceived=prepareOffsetCommitResponse(client,coordinator,tp0,11);
  consumer.assign(singleton(t2p0));
  assertTrue(consumer.assignment().equals(singleton(t2p0)));
  assertTrue(commitReceived.get());
  client.requests().clear();
  consumer.close();
}
