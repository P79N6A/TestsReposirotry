@Test public void testPollThrowsInterruptExceptionIfInterrupted() throws Exception {
  final Time time=new MockTime();
  Cluster cluster=TestUtils.singletonCluster(topic,1);
  final Node node=cluster.nodes().get(0);
  Metadata metadata=createMetadata();
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  final MockClient client=new MockClient(time,metadata);
  client.setNode(node);
  final PartitionAssignor assignor=new RoundRobinAssignor();
  KafkaConsumer<String,String> consumer=newConsumer(time,client,metadata,assignor,false);
  consumer.subscribe(singleton(topic),getConsumerRebalanceListener(consumer));
  prepareRebalance(client,node,assignor,singletonList(tp0),null);
  consumer.updateAssignmentMetadataIfNeeded(time.timer(Long.MAX_VALUE));
  consumer.poll(Duration.ZERO);
  try {
    Thread.currentThread().interrupt();
    expectedException.expect(InterruptException.class);
    consumer.poll(Duration.ZERO);
  }
  finally {
    Thread.interrupted();
  }
  consumer.close(0,TimeUnit.MILLISECONDS);
}
