@Test public void shouldAddStateStoreToRegexDefinedSource() throws InterruptedException {
  final ProcessorSupplier<String,String> processorSupplier=new MockProcessorSupplier<>();
  final StoreBuilder storeBuilder=new MockKeyValueStoreBuilder("testStateStore",false);
  final long thirtySecondTimeout=30 * 1000;
  final TopologyWrapper topology=new TopologyWrapper();
  topology.addSource("ingest",Pattern.compile("topic-\\d+"));
  topology.addProcessor("my-processor",processorSupplier,"ingest");
  topology.addStateStore(storeBuilder,"my-processor");
  streams=new KafkaStreams(topology,streamsConfiguration);
  try {
    streams.start();
    final TestCondition stateStoreNameBoundToSourceTopic=new TestCondition(){
      @Override public boolean conditionMet(){
        final Map<String,List<String>> stateStoreToSourceTopic=topology.getInternalBuilder().stateStoreNameToSourceTopics();
        final List<String> topicNamesList=stateStoreToSourceTopic.get("testStateStore");
        return topicNamesList != null && !topicNamesList.isEmpty() && topicNamesList.get(0).equals("topic-1");
      }
    }
;
    TestUtils.waitForCondition(stateStoreNameBoundToSourceTopic,thirtySecondTimeout,"Did not find topic: [topic-1] connected to state store: [testStateStore]");
  }
  finally {
    streams.close();
  }
}
