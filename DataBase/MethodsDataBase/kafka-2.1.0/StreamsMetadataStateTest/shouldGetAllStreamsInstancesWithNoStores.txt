@Test public void shouldGetAllStreamsInstancesWithNoStores(){
  builder.stream("topic-five").filter(new Predicate<Object,Object>(){
    @Override public boolean test(    final Object key,    final Object value){
      return true;
    }
  }
).to("some-other-topic");
  final TopicPartition tp5=new TopicPartition("topic-five",1);
  final HostInfo hostFour=new HostInfo("host-four",8080);
  hostToPartitions.put(hostFour,Utils.mkSet(tp5));
  metadataState.onChange(hostToPartitions,cluster.withPartitions(Collections.singletonMap(tp5,new PartitionInfo("topic-five",1,null,null,null))));
  final StreamsMetadata expected=new StreamsMetadata(hostFour,Collections.singleton(globalTable),Collections.singleton(tp5));
  final Collection<StreamsMetadata> actual=metadataState.getAllMetadata();
  assertTrue("expected " + actual + " to contain "+ expected,actual.contains(expected));
}
