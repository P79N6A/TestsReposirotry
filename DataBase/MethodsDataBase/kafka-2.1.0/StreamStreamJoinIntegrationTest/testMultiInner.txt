@Test public void testMultiInner() throws Exception {
  STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + "-multi-inner");
  final List<List<String>> expectedResult=Arrays.asList(null,null,null,Collections.singletonList("A-a-a"),Collections.singletonList("B-a-a"),Arrays.asList("A-b-a","B-b-a","A-a-b","B-a-b","A-b-b","B-b-b"),null,null,Arrays.asList("C-a-a","C-a-b","C-b-a","C-b-b"),Arrays.asList("A-c-a","A-c-b","B-c-a","B-c-b","C-c-a","C-c-b","A-a-c","B-a-c","A-b-c","B-b-c","C-a-c","C-b-c","A-c-c","B-c-c","C-c-c"),null,null,null,Arrays.asList("A-d-a","A-d-b","A-d-c","B-d-a","B-d-b","B-d-c","C-d-a","C-d-b","C-d-c","A-a-d","B-a-d","A-b-d","B-b-d","C-a-d","C-b-d","A-c-d","B-c-d","C-c-d","A-d-d","B-d-d","C-d-d"),Arrays.asList("D-a-a","D-a-b","D-a-c","D-a-d","D-b-a","D-b-b","D-b-c","D-b-d","D-c-a","D-c-b","D-c-c","D-c-d","D-d-a","D-d-b","D-d-c","D-d-d"));
  leftStream.join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).to(OUTPUT_TOPIC);
  runTest(expectedResult);
}
