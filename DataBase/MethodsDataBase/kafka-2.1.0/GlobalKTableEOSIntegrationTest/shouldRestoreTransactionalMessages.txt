@Test public void shouldRestoreTransactionalMessages() throws Exception {
  produceInitialGlobalTableValues();
  startStreams();
  final Map<Long,String> expected=new HashMap<>();
  expected.put(1L,"A");
  expected.put(2L,"B");
  expected.put(3L,"C");
  expected.put(4L,"D");
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      ReadOnlyKeyValueStore<Long,String> store=null;
      try {
        store=kafkaStreams.store(globalStore,QueryableStoreTypes.<Long,String>keyValueStore());
      }
 catch (      final InvalidStateStoreException ex) {
        return false;
      }
      final Map<Long,String> result=new HashMap<>();
      final Iterator<KeyValue<Long,String>> it=store.all();
      while (it.hasNext()) {
        final KeyValue<Long,String> kv=it.next();
        result.put(kv.key,kv.value);
      }
      return result.equals(expected);
    }
  }
,30000L,"waiting for initial values");
}
