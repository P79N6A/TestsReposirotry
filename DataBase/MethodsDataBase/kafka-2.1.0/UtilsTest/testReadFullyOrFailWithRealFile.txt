@Test public void testReadFullyOrFailWithRealFile() throws IOException {
  try (FileChannel channel=FileChannel.open(TestUtils.tempFile().toPath(),StandardOpenOption.READ,StandardOpenOption.WRITE)){
    String msg="hello, world";
    channel.write(ByteBuffer.wrap(msg.getBytes()),0);
    channel.force(true);
    assertEquals("Message should be written to the file channel",channel.size(),msg.length());
    ByteBuffer perfectBuffer=ByteBuffer.allocate(msg.length());
    ByteBuffer smallBuffer=ByteBuffer.allocate(5);
    ByteBuffer largeBuffer=ByteBuffer.allocate(msg.length() + 1);
    Utils.readFullyOrFail(channel,perfectBuffer,0,"perfect");
    assertFalse("Buffer should be filled up",perfectBuffer.hasRemaining());
    assertEquals("Buffer should be populated correctly",msg,new String(perfectBuffer.array()));
    Utils.readFullyOrFail(channel,smallBuffer,0,"small");
    assertFalse("Buffer should be filled",smallBuffer.hasRemaining());
    assertEquals("Buffer should be populated correctly","hello",new String(smallBuffer.array()));
    smallBuffer.clear();
    Utils.readFullyOrFail(channel,smallBuffer,7,"small");
    assertFalse("Buffer should be filled",smallBuffer.hasRemaining());
    assertEquals("Buffer should be populated correctly","world",new String(smallBuffer.array()));
    try {
      Utils.readFullyOrFail(channel,largeBuffer,0,"large");
      fail("Expected EOFException to be raised");
    }
 catch (    EOFException e) {
    }
  }
 }
