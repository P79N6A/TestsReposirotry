@Test public void shouldTransformValuesWithKeyAndMaterialize(){
  builder.addStateStore(storeBuilder(STORE_NAME)).table(INPUT_TOPIC,CONSUMED).transformValues(new ExclamationValueTransformerSupplier(STORE_NAME,QUERYABLE_NAME),Materialized.<String,String,KeyValueStore<Bytes,byte[]>>as(QUERYABLE_NAME).withKeySerde(Serdes.String()).withValueSerde(Serdes.String()),STORE_NAME).toStream().process(capture);
  driver=new TopologyTestDriver(builder.build(),props());
  driver.pipeInput(recordFactory.create(INPUT_TOPIC,"A","a",0L));
  driver.pipeInput(recordFactory.create(INPUT_TOPIC,"B","b",0L));
  driver.pipeInput(recordFactory.create(INPUT_TOPIC,"C",(String)null,0L));
  assertThat(output(),hasItems("A:A->a!","B:B->b!","C:C->null!"));
  final KeyValueStore<String,String> keyValueStore=driver.getKeyValueStore(QUERYABLE_NAME);
  assertThat(keyValueStore.get("A"),is("A->a!"));
  assertThat(keyValueStore.get("B"),is("B->b!"));
  assertThat(keyValueStore.get("C"),is("C->null!"));
}
