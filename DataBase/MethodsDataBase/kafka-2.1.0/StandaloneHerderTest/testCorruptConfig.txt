@Test public void testCorruptConfig(){
  Map<String,String> config=new HashMap<>();
  config.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_NAME);
  config.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,BogusSinkConnector.class.getName());
  config.put(SinkConnectorConfig.TOPICS_CONFIG,TOPICS_LIST_STR);
  Connector connectorMock=PowerMock.createMock(SinkConnector.class);
  String error="This is an error in your config!";
  List<String> errors=new ArrayList<>(singletonList(error));
  String key="foo.invalid.key";
  EasyMock.expect(connectorMock.validate(config)).andReturn(new Config(Arrays.asList(new ConfigValue(key,null,Collections.emptyList(),errors))));
  ConfigDef configDef=new ConfigDef();
  configDef.define(key,ConfigDef.Type.STRING,ConfigDef.Importance.HIGH,"");
  EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2);
  final Capture<Map<String,String>> configCapture=EasyMock.newCapture();
  EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(configCapture::getValue);
  EasyMock.expect(worker.getPlugins()).andReturn(plugins).times(3);
  EasyMock.expect(plugins.compareAndSwapLoaders(connectorMock)).andReturn(delegatingLoader);
  EasyMock.expect(worker.getPlugins()).andStubReturn(plugins);
  EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(connectorMock);
  EasyMock.expect(connectorMock.config()).andStubReturn(configDef);
  EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader);
  Callback<Herder.Created<ConnectorInfo>> callback=PowerMock.createMock(Callback.class);
  Capture<BadRequestException> capture=Capture.newInstance();
  callback.onCompletion(EasyMock.capture(capture),EasyMock.isNull(Herder.Created.class));
  PowerMock.replayAll();
  herder.putConnectorConfig(CONNECTOR_NAME,config,true,callback);
  assertEquals(capture.getValue().getMessage(),"Connector configuration is invalid and contains the following 1 error(s):\n" + error + "\n"+ "You can also find the above list of errors at the endpoint `/{connectorType}/config/validate`");
  PowerMock.verifyAll();
}
