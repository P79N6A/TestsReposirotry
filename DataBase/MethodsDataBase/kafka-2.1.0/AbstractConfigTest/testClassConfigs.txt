@Test public void testClassConfigs(){
class RestrictedClassLoader extends ClassLoader {
    public RestrictedClassLoader(){
      super(null);
    }
    @Override protected Class<?> findClass(    String name) throws ClassNotFoundException {
      if (name.equals(ClassTestConfig.DEFAULT_CLASS.getName()) || name.equals(ClassTestConfig.RESTRICTED_CLASS.getName()))       return null;
 else       return ClassTestConfig.class.getClassLoader().loadClass(name);
    }
  }
  ClassLoader restrictedClassLoader=new RestrictedClassLoader();
  ClassLoader defaultClassLoader=AbstractConfig.class.getClassLoader();
  Thread.currentThread().setContextClassLoader(defaultClassLoader);
  ClassTestConfig testConfig=new ClassTestConfig();
  testConfig.checkInstances(ClassTestConfig.DEFAULT_CLASS,ClassTestConfig.DEFAULT_CLASS);
  Thread.currentThread().setContextClassLoader(restrictedClassLoader);
  testConfig=new ClassTestConfig();
  testConfig.checkInstances(ClassTestConfig.DEFAULT_CLASS,ClassTestConfig.DEFAULT_CLASS);
  Thread.currentThread().setContextClassLoader(defaultClassLoader);
  ClassTestConfig.testOverrides();
  Thread.currentThread().setContextClassLoader(null);
  ClassTestConfig.testOverrides();
  Thread.currentThread().setContextClassLoader(restrictedClassLoader);
  testConfig=new ClassTestConfig(ClassTestConfig.RESTRICTED_CLASS,Arrays.asList(ClassTestConfig.RESTRICTED_CLASS));
  testConfig.checkInstances(ClassTestConfig.RESTRICTED_CLASS,ClassTestConfig.RESTRICTED_CLASS);
  testConfig=new ClassTestConfig(ClassTestConfig.RESTRICTED_CLASS,Arrays.asList(ClassTestConfig.VISIBLE_CLASS,ClassTestConfig.RESTRICTED_CLASS));
  testConfig.checkInstances(ClassTestConfig.RESTRICTED_CLASS,ClassTestConfig.VISIBLE_CLASS,ClassTestConfig.RESTRICTED_CLASS);
  try {
    new ClassTestConfig(ClassTestConfig.RESTRICTED_CLASS.getName(),null);
    fail("Config created with class property that cannot be loaded");
  }
 catch (  ConfigException e) {
  }
  try {
    testConfig=new ClassTestConfig(null,Arrays.asList(ClassTestConfig.VISIBLE_CLASS.getName(),ClassTestConfig.RESTRICTED_CLASS.getName()));
    testConfig.getConfiguredInstances("list.prop",MetricsReporter.class);
    fail("Should have failed to load class");
  }
 catch (  KafkaException e) {
  }
  try {
    testConfig=new ClassTestConfig(null,ClassTestConfig.VISIBLE_CLASS.getName() + "," + ClassTestConfig.RESTRICTED_CLASS.getName());
    testConfig.getConfiguredInstances("list.prop",MetricsReporter.class);
    fail("Should have failed to load class");
  }
 catch (  KafkaException e) {
  }
}
