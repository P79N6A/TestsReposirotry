@Test public void shouldObserveStreamElements(){
  final StreamsBuilder builder=new StreamsBuilder();
  final KStream<Integer,String> stream=builder.stream(topicName,Consumed.with(Serdes.Integer(),Serdes.String()));
  final List<KeyValue<Integer,String>> peekObserved=new ArrayList<>(), streamObserved=new ArrayList<>();
  stream.peek(collect(peekObserved)).foreach(collect(streamObserved));
  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){
    final List<KeyValue<Integer,String>> expected=new ArrayList<>();
    for (int key=0; key < 32; key++) {
      final String value="V" + key;
      driver.pipeInput(recordFactory.create(topicName,key,value));
      expected.add(new KeyValue<>(key,value));
    }
    assertEquals(expected,peekObserved);
    assertEquals(expected,streamObserved);
  }
 }
