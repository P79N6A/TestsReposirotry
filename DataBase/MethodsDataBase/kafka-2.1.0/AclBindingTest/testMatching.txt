@Test public void testMatching(){
  assertEquals(ACL1,ACL1);
  final AclBinding acl1Copy=new AclBinding(new ResourcePattern(ResourceType.TOPIC,"mytopic",PatternType.LITERAL),new AccessControlEntry("User:ANONYMOUS","",AclOperation.ALL,AclPermissionType.ALLOW));
  assertEquals(ACL1,acl1Copy);
  assertEquals(acl1Copy,ACL1);
  assertEquals(ACL2,ACL2);
  assertNotEquals(ACL1,ACL2);
  assertNotEquals(ACL2,ACL1);
  assertTrue(AclBindingFilter.ANY.matches(ACL1));
  assertNotEquals(AclBindingFilter.ANY,ACL1);
  assertTrue(AclBindingFilter.ANY.matches(ACL2));
  assertNotEquals(AclBindingFilter.ANY,ACL2);
  assertTrue(AclBindingFilter.ANY.matches(ACL3));
  assertNotEquals(AclBindingFilter.ANY,ACL3);
  assertEquals(AclBindingFilter.ANY,AclBindingFilter.ANY);
  assertTrue(ANY_ANONYMOUS.matches(ACL1));
  assertNotEquals(ANY_ANONYMOUS,ACL1);
  assertFalse(ANY_ANONYMOUS.matches(ACL2));
  assertNotEquals(ANY_ANONYMOUS,ACL2);
  assertTrue(ANY_ANONYMOUS.matches(ACL3));
  assertNotEquals(ANY_ANONYMOUS,ACL3);
  assertFalse(ANY_DENY.matches(ACL1));
  assertFalse(ANY_DENY.matches(ACL2));
  assertTrue(ANY_DENY.matches(ACL3));
  assertTrue(ANY_MYTOPIC.matches(ACL1));
  assertTrue(ANY_MYTOPIC.matches(ACL2));
  assertFalse(ANY_MYTOPIC.matches(ACL3));
  assertTrue(ANY_ANONYMOUS.matches(UNKNOWN_ACL));
  assertTrue(ANY_DENY.matches(UNKNOWN_ACL));
  assertEquals(UNKNOWN_ACL,UNKNOWN_ACL);
  assertFalse(ANY_MYTOPIC.matches(UNKNOWN_ACL));
}
