@SuppressWarnings("unchecked") @Test public void shouldShutdownTaskManagerOnClose(){
  final Consumer<byte[],byte[]> consumer=EasyMock.createNiceMock(Consumer.class);
  final TaskManager taskManager=EasyMock.createNiceMock(TaskManager.class);
  EasyMock.expect(taskManager.activeTasks()).andReturn(Collections.<TaskId,StreamTask>emptyMap());
  EasyMock.expect(taskManager.standbyTasks()).andReturn(Collections.<TaskId,StandbyTask>emptyMap());
  taskManager.shutdown(true);
  EasyMock.expectLastCall();
  EasyMock.replay(taskManager,consumer);
  final StreamThread.StreamsMetricsThreadImpl streamsMetrics=new StreamThread.StreamsMetricsThreadImpl(metrics,"");
  final StreamThread thread=new StreamThread(mockTime,config,null,consumer,consumer,null,taskManager,streamsMetrics,internalTopologyBuilder,clientId,new LogContext(""),new AtomicInteger());
  thread.setStateListener(new StreamThread.StateListener(){
    @Override public void onChange(    final Thread t,    final ThreadStateTransitionValidator newState,    final ThreadStateTransitionValidator oldState){
      if (oldState == StreamThread.State.CREATED && newState == StreamThread.State.RUNNING) {
        thread.shutdown();
      }
    }
  }
);
  thread.run();
  EasyMock.verify(taskManager);
}
