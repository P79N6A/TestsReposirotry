@Test public void testPrimitiveTypeProjection() throws Exception {
  Object projected;
  projected=SchemaProjector.project(Schema.BOOLEAN_SCHEMA,false,Schema.BOOLEAN_SCHEMA);
  assertEquals(false,projected);
  byte[] bytes={(byte)1,(byte)2};
  projected=SchemaProjector.project(Schema.BYTES_SCHEMA,bytes,Schema.BYTES_SCHEMA);
  assertEquals(bytes,projected);
  projected=SchemaProjector.project(Schema.STRING_SCHEMA,"abc",Schema.STRING_SCHEMA);
  assertEquals("abc",projected);
  projected=SchemaProjector.project(Schema.BOOLEAN_SCHEMA,false,Schema.OPTIONAL_BOOLEAN_SCHEMA);
  assertEquals(false,projected);
  projected=SchemaProjector.project(Schema.BYTES_SCHEMA,bytes,Schema.OPTIONAL_BYTES_SCHEMA);
  assertEquals(bytes,projected);
  projected=SchemaProjector.project(Schema.STRING_SCHEMA,"abc",Schema.OPTIONAL_STRING_SCHEMA);
  assertEquals("abc",projected);
  try {
    SchemaProjector.project(Schema.OPTIONAL_BOOLEAN_SCHEMA,false,Schema.BOOLEAN_SCHEMA);
    fail("Cannot project optional schema to schema with no default value.");
  }
 catch (  DataException e) {
  }
  try {
    SchemaProjector.project(Schema.OPTIONAL_BYTES_SCHEMA,bytes,Schema.BYTES_SCHEMA);
    fail("Cannot project optional schema to schema with no default value.");
  }
 catch (  DataException e) {
  }
  try {
    SchemaProjector.project(Schema.OPTIONAL_STRING_SCHEMA,"abc",Schema.STRING_SCHEMA);
    fail("Cannot project optional schema to schema with no default value.");
  }
 catch (  DataException e) {
  }
}
