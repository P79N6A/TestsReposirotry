@Test public void testMapProjection() throws Exception {
  Schema source=SchemaBuilder.map(Schema.INT32_SCHEMA,Schema.INT32_SCHEMA).optional().build();
  Schema target=SchemaBuilder.map(Schema.INT32_SCHEMA,Schema.INT32_SCHEMA).defaultValue(Collections.singletonMap(1,2)).build();
  Object projected=SchemaProjector.project(source,Collections.singletonMap(3,4),target);
  assertEquals(Collections.singletonMap(3,4),(Map<Integer,Integer>)projected);
  projected=SchemaProjector.project(source,null,target);
  assertEquals(Collections.singletonMap(1,2),(Map<Integer,Integer>)projected);
  Schema promotedTarget=SchemaBuilder.map(Schema.INT64_SCHEMA,Schema.FLOAT32_SCHEMA).defaultValue(Collections.singletonMap(3L,4.5F)).build();
  projected=SchemaProjector.project(source,Collections.singletonMap(3,4),promotedTarget);
  assertEquals(Collections.singletonMap(3L,4.F),(Map<Long,Float>)projected);
  projected=SchemaProjector.project(source,null,promotedTarget);
  assertEquals(Collections.singletonMap(3L,4.5F),(Map<Long,Float>)projected);
  Schema noDefaultValueTarget=SchemaBuilder.map(Schema.INT32_SCHEMA,Schema.INT32_SCHEMA).build();
  try {
    SchemaProjector.project(source,null,noDefaultValueTarget);
    fail("Reader does not provide a default value.");
  }
 catch (  SchemaProjectorException e) {
  }
  Schema nonPromotableTarget=SchemaBuilder.map(Schema.BOOLEAN_SCHEMA,Schema.STRING_SCHEMA).build();
  try {
    SchemaProjector.project(source,null,nonPromotableTarget);
    fail("Neither source type matches target type nor source type can be promoted to target type");
  }
 catch (  SchemaProjectorException e) {
  }
}
