@Test public void testLeaveGroupOnClose(){
  final String consumerId="consumer";
  subscriptions.subscribe(singleton(topic1),rebalanceListener);
  joinAsFollowerAndReceiveAssignment(consumerId,coordinator,singletonList(t1p));
  final AtomicBoolean received=new AtomicBoolean(false);
  client.prepareResponse(new MockClient.RequestMatcher(){
    @Override public boolean matches(    AbstractRequest body){
      received.set(true);
      LeaveGroupRequest leaveRequest=(LeaveGroupRequest)body;
      return leaveRequest.memberId().equals(consumerId) && leaveRequest.groupId().equals(groupId);
    }
  }
,new LeaveGroupResponse(Errors.NONE));
  coordinator.close(time.timer(0));
  assertTrue(received.get());
}
