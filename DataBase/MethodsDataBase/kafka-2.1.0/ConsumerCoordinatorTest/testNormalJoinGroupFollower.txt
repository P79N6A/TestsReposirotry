@Test public void testNormalJoinGroupFollower(){
  final String consumerId="consumer";
  subscriptions.subscribe(singleton(topic1),rebalanceListener);
  client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE));
  coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE));
  client.prepareResponse(joinGroupFollowerResponse(1,consumerId,"leader",Errors.NONE));
  client.prepareResponse(new MockClient.RequestMatcher(){
    @Override public boolean matches(    AbstractRequest body){
      SyncGroupRequest sync=(SyncGroupRequest)body;
      return sync.memberId().equals(consumerId) && sync.generationId() == 1 && sync.groupAssignment().isEmpty();
    }
  }
,syncGroupResponse(singletonList(t1p),Errors.NONE));
  coordinator.joinGroupIfNeeded(time.timer(Long.MAX_VALUE));
  assertFalse(coordinator.rejoinNeededOrPending());
  assertEquals(singleton(t1p),subscriptions.assignedPartitions());
  assertEquals(singleton(topic1),subscriptions.groupSubscription());
  assertEquals(1,rebalanceListener.revokedCount);
  assertEquals(Collections.emptySet(),rebalanceListener.revoked);
  assertEquals(1,rebalanceListener.assignedCount);
  assertEquals(singleton(t1p),rebalanceListener.assigned);
}
