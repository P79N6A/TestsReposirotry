@Test public void testAutoCommitRetryBackoff(){
  final String consumerId="consumer";
  ConsumerCoordinator coordinator=buildCoordinator(new Metrics(),assignors,ConsumerConfig.DEFAULT_EXCLUDE_INTERNAL_TOPICS,true,true);
  subscriptions.subscribe(singleton(topic1),rebalanceListener);
  joinAsFollowerAndReceiveAssignment(consumerId,coordinator,singletonList(t1p));
  subscriptions.seek(t1p,100);
  time.sleep(autoCommitIntervalMs);
  prepareOffsetCommitRequest(singletonMap(t1p,100L),Errors.NOT_COORDINATOR);
  coordinator.poll(time.timer(Long.MAX_VALUE));
  assertTrue(coordinator.coordinatorUnknown());
  client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE));
  coordinator.poll(time.timer(Long.MAX_VALUE));
  subscriptions.seek(t1p,200);
  time.sleep(retryBackoffMs / 2);
  coordinator.poll(time.timer(Long.MAX_VALUE));
  assertEquals(0,client.inFlightRequestCount());
  time.sleep(retryBackoffMs / 2);
  coordinator.poll(time.timer(Long.MAX_VALUE));
  assertEquals(1,client.inFlightRequestCount());
  respondToOffsetCommitRequest(singletonMap(t1p,200L),Errors.NONE);
}
