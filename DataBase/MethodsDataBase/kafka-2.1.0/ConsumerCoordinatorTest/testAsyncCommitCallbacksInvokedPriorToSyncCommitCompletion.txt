@Test public void testAsyncCommitCallbacksInvokedPriorToSyncCommitCompletion() throws Exception {
  client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE));
  coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE));
  final List<OffsetAndMetadata> committedOffsets=Collections.synchronizedList(new ArrayList<OffsetAndMetadata>());
  final OffsetAndMetadata firstOffset=new OffsetAndMetadata(0L);
  final OffsetAndMetadata secondOffset=new OffsetAndMetadata(1L);
  coordinator.commitOffsetsAsync(singletonMap(t1p,firstOffset),new OffsetCommitCallback(){
    @Override public void onComplete(    Map<TopicPartition,OffsetAndMetadata> offsets,    Exception exception){
      committedOffsets.add(firstOffset);
    }
  }
);
  Thread thread=new Thread(){
    @Override public void run(){
      coordinator.commitOffsetsSync(singletonMap(t1p,secondOffset),time.timer(10000));
      committedOffsets.add(secondOffset);
    }
  }
;
  thread.start();
  client.waitForRequests(2,5000);
  respondToOffsetCommitRequest(singletonMap(t1p,firstOffset.offset()),Errors.NONE);
  respondToOffsetCommitRequest(singletonMap(t1p,secondOffset.offset()),Errors.NONE);
  thread.join();
  assertEquals(Arrays.asList(firstOffset,secondOffset),committedOffsets);
}
