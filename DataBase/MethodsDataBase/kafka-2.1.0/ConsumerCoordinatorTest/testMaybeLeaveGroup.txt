@Test public void testMaybeLeaveGroup(){
  final String consumerId="consumer";
  subscriptions.subscribe(singleton(topic1),rebalanceListener);
  joinAsFollowerAndReceiveAssignment(consumerId,coordinator,singletonList(t1p));
  final AtomicBoolean received=new AtomicBoolean(false);
  client.prepareResponse(new MockClient.RequestMatcher(){
    @Override public boolean matches(    AbstractRequest body){
      received.set(true);
      LeaveGroupRequest leaveRequest=(LeaveGroupRequest)body;
      return leaveRequest.memberId().equals(consumerId) && leaveRequest.groupId().equals(groupId);
    }
  }
,new LeaveGroupResponse(Errors.NONE));
  coordinator.maybeLeaveGroup();
  assertTrue(received.get());
  AbstractCoordinator.Generation generation=coordinator.generation();
  assertNull(generation);
}
