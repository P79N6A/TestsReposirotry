@Test public void testManyInFlightAsyncCommitsWithCoordinatorDisconnect() throws Exception {
  client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE));
  coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE));
  int numRequests=1000;
  TopicPartition tp=new TopicPartition("foo",0);
  final AtomicInteger responses=new AtomicInteger(0);
  for (int i=0; i < numRequests; i++) {
    Map<TopicPartition,OffsetAndMetadata> offsets=singletonMap(tp,new OffsetAndMetadata(i));
    coordinator.commitOffsetsAsync(offsets,new OffsetCommitCallback(){
      @Override public void onComplete(      Map<TopicPartition,OffsetAndMetadata> offsets,      Exception exception){
        responses.incrementAndGet();
        Throwable cause=exception.getCause();
        assertTrue("Unexpected exception cause type: " + (cause == null ? null : cause.getClass()),cause instanceof DisconnectException);
      }
    }
);
  }
  coordinator.markCoordinatorUnknown();
  consumerClient.pollNoWakeup();
  coordinator.invokeCompletedOffsetCommitCallbacks();
  assertEquals(numRequests,responses.get());
}
