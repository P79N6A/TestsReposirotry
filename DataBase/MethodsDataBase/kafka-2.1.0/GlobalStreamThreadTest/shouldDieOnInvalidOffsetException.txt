@Test public void shouldDieOnInvalidOffsetException() throws Exception {
  initializeConsumer();
  globalStreamThread.start();
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      return globalStreamThread.state() == RUNNING;
    }
  }
,10 * 1000,"Thread never started.");
  mockConsumer.updateEndOffsets(Collections.singletonMap(topicPartition,1L));
  mockConsumer.addRecord(new ConsumerRecord<>(GLOBAL_STORE_TOPIC_NAME,0,0L,"K1".getBytes(),"V1".getBytes()));
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      return mockConsumer.position(topicPartition) == 1L;
    }
  }
,10 * 1000,"Input record never consumed");
  mockConsumer.setException(new InvalidOffsetException("Try Again!"){
    @Override public Set<TopicPartition> partitions(){
      return Collections.singleton(topicPartition);
    }
  }
);
  mockConsumer.addRecord(new ConsumerRecord<>(GLOBAL_STORE_TOPIC_NAME,0,0L,"K1".getBytes(),"V1".getBytes()));
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      return globalStreamThread.state() == DEAD;
    }
  }
,10 * 1000,"GlobalStreamThread should have died.");
}
