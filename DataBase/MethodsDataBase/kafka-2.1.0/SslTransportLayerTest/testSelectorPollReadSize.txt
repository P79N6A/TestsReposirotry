/** 
 * selector.poll() should be able to fetch more data than netReadBuffer from the socket.
 */
@Test public void testSelectorPollReadSize() throws Exception {
  String node="0";
  server=createEchoServer(SecurityProtocol.SSL);
  createSelector(sslClientConfigs,16384,16384,16384);
  InetSocketAddress addr=new InetSocketAddress("localhost",server.port());
  selector.connect(node,addr,102400,102400);
  NetworkTestUtils.checkClientConnection(selector,node,81920,1);
  String message=TestUtils.randomString(81920);
  selector.send(new NetworkSend(node,ByteBuffer.wrap(message.getBytes())));
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      try {
        selector.poll(100L);
      }
 catch (      IOException e) {
        return false;
      }
      return selector.completedSends().size() > 0;
    }
  }
,"Timed out waiting for message to be sent");
  TestUtils.waitForCondition(new TestCondition(){
    @Override public boolean conditionMet(){
      return server.numSent() >= 2;
    }
  }
,"Timed out waiting for echo server to send message");
  selector.poll(1000L);
  List<NetworkReceive> receiveList=selector.completedReceives();
  assertEquals(1,receiveList.size());
  assertEquals(message,new String(Utils.toArray(receiveList.get(0).payload())));
}
