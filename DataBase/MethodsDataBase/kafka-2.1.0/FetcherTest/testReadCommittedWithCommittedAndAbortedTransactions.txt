@Test public void testReadCommittedWithCommittedAndAbortedTransactions(){
  Fetcher<byte[],byte[]> fetcher=createFetcher(subscriptions,new Metrics(),new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED);
  ByteBuffer buffer=ByteBuffer.allocate(1024);
  List<FetchResponse.AbortedTransaction> abortedTransactions=new ArrayList<>();
  long pid1=1L;
  long pid2=2L;
  appendTransactionalRecords(buffer,pid1,0L,new SimpleRecord("commit1-1".getBytes(),"value".getBytes()),new SimpleRecord("commit1-2".getBytes(),"value".getBytes()));
  appendTransactionalRecords(buffer,pid2,2L,new SimpleRecord("abort2-1".getBytes(),"value".getBytes()));
  commitTransaction(buffer,pid1,3L);
  appendTransactionalRecords(buffer,pid2,4L,new SimpleRecord("abort2-2".getBytes(),"value".getBytes()));
  abortTransaction(buffer,pid2,5L);
  abortedTransactions.add(new FetchResponse.AbortedTransaction(pid2,2L));
  appendTransactionalRecords(buffer,pid1,6L,new SimpleRecord("abort1-1".getBytes(),"value".getBytes()));
  appendTransactionalRecords(buffer,pid2,7L,new SimpleRecord("commit2-1".getBytes(),"value".getBytes()));
  appendTransactionalRecords(buffer,pid1,8L,new SimpleRecord("abort1-2".getBytes(),"value".getBytes()));
  abortTransaction(buffer,pid1,9L);
  abortedTransactions.add(new FetchResponse.AbortedTransaction(1,6));
  commitTransaction(buffer,pid2,10L);
  buffer.flip();
  MemoryRecords records=MemoryRecords.readableRecords(buffer);
  subscriptions.assignFromUser(singleton(tp0));
  subscriptions.seek(tp0,0);
  assertEquals(1,fetcher.sendFetches());
  assertFalse(fetcher.hasCompletedFetches());
  client.prepareResponse(fullFetchResponseWithAbortedTransactions(records,abortedTransactions,Errors.NONE,100L,100L,0));
  consumerClient.poll(time.timer(0));
  assertTrue(fetcher.hasCompletedFetches());
  Map<TopicPartition,List<ConsumerRecord<byte[],byte[]>>> fetchedRecords=fetcher.fetchedRecords();
  assertTrue(fetchedRecords.containsKey(tp0));
  List<ConsumerRecord<byte[],byte[]>> fetchedConsumerRecords=fetchedRecords.get(tp0);
  Set<String> fetchedKeys=new HashSet<>();
  for (  ConsumerRecord<byte[],byte[]> consumerRecord : fetchedConsumerRecords) {
    fetchedKeys.add(new String(consumerRecord.key(),StandardCharsets.UTF_8));
  }
  assertEquals(Utils.mkSet("commit1-1","commit1-2","commit2-1"),fetchedKeys);
}
