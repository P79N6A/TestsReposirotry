@Test public void testGetOffsetsForTimesWhenSomeTopicPartitionLeadersNotKnownInitially(){
  final String anotherTopic="another-topic";
  final TopicPartition t2p0=new TopicPartition(anotherTopic,0);
  client.reset();
  Cluster cluster=TestUtils.clusterWith(3,topicName,2);
  metadata.update(cluster,Collections.<String>emptySet(),time.milliseconds());
  client.prepareMetadataUpdate(cluster,Collections.<String>emptySet(),false);
  client.prepareResponseFrom(listOffsetResponse(tp0,Errors.NONE,1000L,11L),cluster.leaderFor(tp0));
  client.prepareResponseFrom(listOffsetResponse(tp1,Errors.NONE,1000L,32L),cluster.leaderFor(tp1));
  Map<String,Integer> partitionNumByTopic=new HashMap<>();
  partitionNumByTopic.put(topicName,2);
  partitionNumByTopic.put(anotherTopic,1);
  Cluster updatedCluster=TestUtils.clusterWith(3,partitionNumByTopic);
  client.prepareMetadataUpdate(updatedCluster,Collections.<String>emptySet(),false);
  client.prepareResponseFrom(listOffsetResponse(t2p0,Errors.NONE,1000L,54L),cluster.leaderFor(t2p0));
  Map<TopicPartition,Long> timestampToSearch=new HashMap<>();
  timestampToSearch.put(tp0,ListOffsetRequest.LATEST_TIMESTAMP);
  timestampToSearch.put(tp1,ListOffsetRequest.LATEST_TIMESTAMP);
  timestampToSearch.put(t2p0,ListOffsetRequest.LATEST_TIMESTAMP);
  Map<TopicPartition,OffsetAndTimestamp> offsetAndTimestampMap=fetcher.offsetsByTimes(timestampToSearch,time.timer(Long.MAX_VALUE));
  assertNotNull("Expect Fetcher.offsetsByTimes() to return non-null result for " + tp0,offsetAndTimestampMap.get(tp0));
  assertNotNull("Expect Fetcher.offsetsByTimes() to return non-null result for " + tp1,offsetAndTimestampMap.get(tp1));
  assertNotNull("Expect Fetcher.offsetsByTimes() to return non-null result for " + t2p0,offsetAndTimestampMap.get(t2p0));
  assertEquals(11L,offsetAndTimestampMap.get(tp0).offset());
  assertEquals(32L,offsetAndTimestampMap.get(tp1).offset());
  assertEquals(54L,offsetAndTimestampMap.get(t2p0).offset());
}
