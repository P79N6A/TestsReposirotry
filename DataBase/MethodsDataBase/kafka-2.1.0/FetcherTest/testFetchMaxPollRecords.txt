@Test public void testFetchMaxPollRecords(){
  Fetcher<byte[],byte[]> fetcher=createFetcher(subscriptions,new Metrics(time),2);
  List<ConsumerRecord<byte[],byte[]>> records;
  subscriptions.assignFromUser(singleton(tp0));
  subscriptions.seek(tp0,1);
  client.prepareResponse(matchesOffset(tp0,1),fullFetchResponse(tp0,this.records,Errors.NONE,100L,0));
  client.prepareResponse(matchesOffset(tp0,4),fullFetchResponse(tp0,this.nextRecords,Errors.NONE,100L,0));
  assertEquals(1,fetcher.sendFetches());
  consumerClient.poll(time.timer(0));
  records=fetcher.fetchedRecords().get(tp0);
  assertEquals(2,records.size());
  assertEquals(3L,subscriptions.position(tp0).longValue());
  assertEquals(1,records.get(0).offset());
  assertEquals(2,records.get(1).offset());
  assertEquals(0,fetcher.sendFetches());
  consumerClient.poll(time.timer(0));
  records=fetcher.fetchedRecords().get(tp0);
  assertEquals(1,records.size());
  assertEquals(4L,subscriptions.position(tp0).longValue());
  assertEquals(3,records.get(0).offset());
  assertTrue(fetcher.sendFetches() > 0);
  consumerClient.poll(time.timer(0));
  records=fetcher.fetchedRecords().get(tp0);
  assertEquals(2,records.size());
  assertEquals(6L,subscriptions.position(tp0).longValue());
  assertEquals(4,records.get(0).offset());
  assertEquals(5,records.get(1).offset());
}
