/** 
 * Test the case where the client makes a pre-v3 FetchRequest, but the server replies with only a partial request. This happens when a single message is larger than the per-partition limit.
 */
@Test public void testFetchRequestWhenRecordTooLarge(){
  try {
    client.setNodeApiVersions(NodeApiVersions.create(Collections.singletonList(new ApiVersionsResponse.ApiVersion(ApiKeys.FETCH.id,(short)2,(short)2))));
    makeFetchRequestWithIncompleteRecord();
    try {
      fetcher.fetchedRecords();
      fail("RecordTooLargeException should have been raised");
    }
 catch (    RecordTooLargeException e) {
      assertTrue(e.getMessage().startsWith("There are some messages at [Partition=Offset]: "));
      assertEquals(0,subscriptions.position(tp0).longValue());
    }
  }
  finally {
    client.setNodeApiVersions(NodeApiVersions.create());
  }
}
