@Test public void testFetchResponseMetricsPartialResponse(){
  subscriptions.assignFromUser(singleton(tp0));
  subscriptions.seek(tp0,1);
  Map<MetricName,KafkaMetric> allMetrics=metrics.metrics();
  KafkaMetric fetchSizeAverage=allMetrics.get(metrics.metricInstance(metricsRegistry.fetchSizeAvg));
  KafkaMetric recordsCountAverage=allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg));
  MemoryRecordsBuilder builder=MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L);
  for (int v=0; v < 3; v++)   builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,"key".getBytes(),("value-" + v).getBytes());
  MemoryRecords records=builder.build();
  int expectedBytes=0;
  for (  Record record : records.records()) {
    if (record.offset() >= 1)     expectedBytes+=record.sizeInBytes();
  }
  fetchRecords(tp0,records,Errors.NONE,100L,0);
  assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON);
  assertEquals(2,(Double)recordsCountAverage.metricValue(),EPSILON);
}
