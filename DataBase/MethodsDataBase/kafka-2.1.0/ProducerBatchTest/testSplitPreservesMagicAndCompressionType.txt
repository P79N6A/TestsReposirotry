@Test public void testSplitPreservesMagicAndCompressionType(){
  for (  byte magic : Arrays.asList(MAGIC_VALUE_V0,MAGIC_VALUE_V1,MAGIC_VALUE_V2)) {
    for (    CompressionType compressionType : CompressionType.values()) {
      if (compressionType == CompressionType.NONE && magic < MAGIC_VALUE_V2)       continue;
      if (compressionType == CompressionType.ZSTD && magic < MAGIC_VALUE_V2)       continue;
      MemoryRecordsBuilder builder=MemoryRecords.builder(ByteBuffer.allocate(1024),magic,compressionType,TimestampType.CREATE_TIME,0L);
      ProducerBatch batch=new ProducerBatch(new TopicPartition("topic",1),builder,now);
      while (true) {
        FutureRecordMetadata future=batch.tryAppend(now,"hi".getBytes(),"there".getBytes(),Record.EMPTY_HEADERS,null,now);
        if (future == null)         break;
      }
      Deque<ProducerBatch> batches=batch.split(512);
      assertTrue(batches.size() >= 2);
      for (      ProducerBatch splitProducerBatch : batches) {
        assertEquals(magic,splitProducerBatch.magic());
        assertTrue(splitProducerBatch.isSplitBatch());
        for (        RecordBatch splitBatch : splitProducerBatch.records().batches()) {
          assertEquals(magic,splitBatch.magic());
          assertEquals(0L,splitBatch.baseOffset());
          assertEquals(compressionType,splitBatch.compressionType());
        }
      }
    }
  }
}
