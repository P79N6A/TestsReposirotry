@Test public void testPutTaskConfigsDoesNotResolveAllInconsistencies() throws Exception {
  expectConfigure();
  List<ConsumerRecord<String,byte[]>> existingRecords=Arrays.asList(new ConsumerRecord<>(TOPIC,0,0,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0)),new ConsumerRecord<>(TOPIC,0,2,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(2)),new ConsumerRecord<>(TOPIC,0,4,0L,TimestampType.CREATE_TIME,0L,0,0,COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(4)),new ConsumerRecord<>(TOPIC,0,5,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(5)));
  LinkedHashMap<byte[],Struct> deserialized=new LinkedHashMap<>();
  deserialized.put(CONFIGS_SERIALIZED.get(0),CONNECTOR_CONFIG_STRUCTS.get(0));
  deserialized.put(CONFIGS_SERIALIZED.get(2),TASK_CONFIG_STRUCTS.get(0));
  deserialized.put(CONFIGS_SERIALIZED.get(4),TASKS_COMMIT_STRUCT_TWO_TASK_CONNECTOR);
  deserialized.put(CONFIGS_SERIALIZED.get(5),TASK_CONFIG_STRUCTS.get(1));
  logOffset=6;
  expectStart(existingRecords,deserialized);
  expectReadToEnd(new LinkedHashMap<String,byte[]>());
  expectConvertWriteRead(TASK_CONFIG_KEYS.get(0),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(0),"properties",SAMPLE_CONFIGS.get(0));
  expectReadToEnd(new LinkedHashMap<String,byte[]>());
  expectConvertWriteRead(COMMIT_TASKS_CONFIG_KEYS.get(0),KafkaConfigBackingStore.CONNECTOR_TASKS_COMMIT_V0,CONFIGS_SERIALIZED.get(2),"tasks",1);
  configUpdateListener.onTaskConfigUpdate(Arrays.asList(TASK_IDS.get(0)));
  EasyMock.expectLastCall();
  LinkedHashMap<String,byte[]> serializedConfigs=new LinkedHashMap<>();
  serializedConfigs.put(TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0));
  serializedConfigs.put(COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(2));
  expectReadToEnd(serializedConfigs);
  expectStop();
  PowerMock.replayAll();
  configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG);
  configStorage.start();
  ClusterConfigState configState=configStorage.snapshot();
  assertEquals(6,configState.offset());
  assertEquals(Arrays.asList(CONNECTOR_IDS.get(0)),new ArrayList<>(configState.connectors()));
  assertEquals(Collections.EMPTY_LIST,configState.tasks(CONNECTOR_IDS.get(0)));
  assertNull(configState.taskConfig(TASK_IDS.get(0)));
  assertNull(configState.taskConfig(TASK_IDS.get(1)));
  assertEquals(Collections.singleton(CONNECTOR_IDS.get(0)),configState.inconsistentConnectors());
  configStorage.putTaskConfigs("connector1",Collections.singletonList(SAMPLE_CONFIGS.get(0)));
  configState=configStorage.snapshot();
  assertEquals(8,configState.offset());
  assertEquals(Arrays.asList(CONNECTOR_IDS.get(0)),new ArrayList<>(configState.connectors()));
  assertEquals(Arrays.asList(TASK_IDS.get(0)),configState.tasks(CONNECTOR_IDS.get(0)));
  assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(0)));
  assertEquals(Collections.EMPTY_SET,configState.inconsistentConnectors());
  configStorage.stop();
  PowerMock.verifyAll();
}
