@Test public void testPutTaskConfigsZeroTasks() throws Exception {
  expectConfigure();
  expectStart(Collections.EMPTY_LIST,Collections.EMPTY_MAP);
  expectReadToEnd(new LinkedHashMap<String,byte[]>());
  expectConvertWriteRead(COMMIT_TASKS_CONFIG_KEYS.get(0),KafkaConfigBackingStore.CONNECTOR_TASKS_COMMIT_V0,CONFIGS_SERIALIZED.get(0),"tasks",0);
  configUpdateListener.onTaskConfigUpdate(Collections.<ConnectorTaskId>emptyList());
  EasyMock.expectLastCall();
  LinkedHashMap<String,byte[]> serializedConfigs=new LinkedHashMap<>();
  serializedConfigs.put(COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0));
  expectReadToEnd(serializedConfigs);
  expectStop();
  PowerMock.replayAll();
  configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG);
  configStorage.start();
  whiteboxAddConnector(CONNECTOR_IDS.get(0),SAMPLE_CONFIGS.get(0),Collections.EMPTY_LIST);
  ClusterConfigState configState=configStorage.snapshot();
  assertEquals(-1,configState.offset());
  List<Map<String,String>> taskConfigs=Collections.emptyList();
  configStorage.putTaskConfigs("connector1",taskConfigs);
  configState=configStorage.snapshot();
  assertEquals(1,configState.offset());
  String connectorName=CONNECTOR_IDS.get(0);
  assertEquals(Arrays.asList(connectorName),new ArrayList<>(configState.connectors()));
  assertEquals(Collections.emptyList(),configState.tasks(connectorName));
  assertEquals(Collections.EMPTY_SET,configState.inconsistentConnectors());
  configStorage.stop();
  PowerMock.verifyAll();
}
