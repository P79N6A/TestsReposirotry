@Test public void tableAnonymousMaterializedCountShouldPreserveTopologyStructure(){
  final StreamsBuilder builder=new StreamsBuilder();
  builder.table("input-topic").groupBy((key,value) -> null).count(Materialized.with(null,Serdes.Long()));
  final TopologyDescription describe=builder.build().describe();
  assertEquals("Topologies:\n" + "   Sub-topology: 0\n" + "    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\n"+ "      --> KTABLE-SOURCE-0000000002\n"+ "    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\n"+ "      --> KTABLE-SELECT-0000000003\n"+ "      <-- KSTREAM-SOURCE-0000000001\n"+ "    Processor: KTABLE-SELECT-0000000003 (stores: [])\n"+ "      --> KSTREAM-SINK-0000000005\n"+ "      <-- KTABLE-SOURCE-0000000002\n"+ "    Sink: KSTREAM-SINK-0000000005 (topic: KTABLE-AGGREGATE-STATE-STORE-0000000004-repartition)\n"+ "      <-- KTABLE-SELECT-0000000003\n"+ "\n"+ "  Sub-topology: 1\n"+ "    Source: KSTREAM-SOURCE-0000000006 (topics: [KTABLE-AGGREGATE-STATE-STORE-0000000004-repartition])\n"+ "      --> KTABLE-AGGREGATE-0000000007\n"+ "    Processor: KTABLE-AGGREGATE-0000000007 (stores: [KTABLE-AGGREGATE-STATE-STORE-0000000004])\n"+ "      --> none\n"+ "      <-- KSTREAM-SOURCE-0000000006\n"+ "\n",describe.toString());
}
