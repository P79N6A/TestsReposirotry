@Test public void processorsWithSameSinkShouldHaveSameSubtopology(){
  final TopologyDescription.Source expectedSourceNode1=addSource("source","topic");
  final TopologyDescription.Processor expectedProcessorNode1=addProcessor("processor1",expectedSourceNode1);
  final TopologyDescription.Source expectedSourceNode2=addSource("source2","topic2");
  final TopologyDescription.Processor expectedProcessorNode2=addProcessor("processor2",expectedSourceNode2);
  final TopologyDescription.Source expectedSourceNode3=addSource("source3","topic3");
  final TopologyDescription.Processor expectedProcessorNode3=addProcessor("processor3",expectedSourceNode3);
  final TopologyDescription.Sink expectedSinkNode=addSink("sink","sinkTopic",expectedProcessorNode1,expectedProcessorNode2,expectedProcessorNode3);
  final Set<TopologyDescription.Node> allNodes=new HashSet<>();
  allNodes.add(expectedSourceNode1);
  allNodes.add(expectedProcessorNode1);
  allNodes.add(expectedSourceNode2);
  allNodes.add(expectedProcessorNode2);
  allNodes.add(expectedSourceNode3);
  allNodes.add(expectedProcessorNode3);
  allNodes.add(expectedSinkNode);
  expectedDescription.addSubtopology(new InternalTopologyBuilder.Subtopology(0,allNodes));
  assertThat(topology.describe(),equalTo(expectedDescription));
}
