@Test public void shouldPublishLatestAndCumulativeConsumerGroupOffsetsOnlyAfterCommitIfTransactionsAreEnabled(){
  buildMockProducer(true);
  producer.initTransactions();
  producer.beginTransaction();
  String group="g";
  Map<TopicPartition,OffsetAndMetadata> groupCommit1=new HashMap<TopicPartition,OffsetAndMetadata>(){
{
      put(new TopicPartition(topic,0),new OffsetAndMetadata(42L,null));
      put(new TopicPartition(topic,1),new OffsetAndMetadata(73L,null));
    }
  }
;
  Map<TopicPartition,OffsetAndMetadata> groupCommit2=new HashMap<TopicPartition,OffsetAndMetadata>(){
{
      put(new TopicPartition(topic,1),new OffsetAndMetadata(101L,null));
      put(new TopicPartition(topic,2),new OffsetAndMetadata(21L,null));
    }
  }
;
  producer.sendOffsetsToTransaction(groupCommit1,group);
  producer.sendOffsetsToTransaction(groupCommit2,group);
  assertTrue(producer.consumerGroupOffsetsHistory().isEmpty());
  Map<String,Map<TopicPartition,OffsetAndMetadata>> expectedResult=new HashMap<>();
  expectedResult.put(group,new HashMap<TopicPartition,OffsetAndMetadata>(){
{
      put(new TopicPartition(topic,0),new OffsetAndMetadata(42L,null));
      put(new TopicPartition(topic,1),new OffsetAndMetadata(101L,null));
      put(new TopicPartition(topic,2),new OffsetAndMetadata(21L,null));
    }
  }
);
  producer.commitTransaction();
  assertThat(producer.consumerGroupOffsetsHistory(),equalTo(Collections.singletonList(expectedResult)));
}
