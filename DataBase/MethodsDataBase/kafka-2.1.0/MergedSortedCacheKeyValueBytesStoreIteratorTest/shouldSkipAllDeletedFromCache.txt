@Test public void shouldSkipAllDeletedFromCache() throws Exception {
  final byte[][] bytes={{0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11}};
  for (  final byte[] aByte : bytes) {
    final Bytes aBytes=Bytes.wrap(aByte);
    store.put(aBytes,aByte);
    cache.put(namespace,aBytes,new LRUCacheEntry(aByte));
  }
  cache.put(namespace,Bytes.wrap(bytes[1]),new LRUCacheEntry(null));
  cache.put(namespace,Bytes.wrap(bytes[2]),new LRUCacheEntry(null));
  cache.put(namespace,Bytes.wrap(bytes[3]),new LRUCacheEntry(null));
  cache.put(namespace,Bytes.wrap(bytes[8]),new LRUCacheEntry(null));
  cache.put(namespace,Bytes.wrap(bytes[11]),new LRUCacheEntry(null));
  final MergedSortedCacheKeyValueBytesStoreIterator iterator=createIterator();
  assertArrayEquals(bytes[0],iterator.next().key.get());
  assertArrayEquals(bytes[4],iterator.next().key.get());
  assertArrayEquals(bytes[5],iterator.next().key.get());
  assertArrayEquals(bytes[6],iterator.next().key.get());
  assertArrayEquals(bytes[7],iterator.next().key.get());
  assertArrayEquals(bytes[9],iterator.next().key.get());
  assertArrayEquals(bytes[10],iterator.next().key.get());
  assertFalse(iterator.hasNext());
}
