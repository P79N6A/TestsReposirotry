@Test public void shouldPeekNextKey() throws Exception {
  final KeyValueStore<Bytes,byte[]> kv=new InMemoryKeyValueStore<>("one",Serdes.Bytes(),Serdes.ByteArray());
  final ThreadCache cache=new ThreadCache(new LogContext("testCache "),1000000L,new MockStreamsMetrics(new Metrics()));
  final byte[][] bytes={{0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10}};
  for (int i=0; i < bytes.length - 1; i+=2) {
    kv.put(Bytes.wrap(bytes[i]),bytes[i]);
    cache.put(namespace,Bytes.wrap(bytes[i + 1]),new LRUCacheEntry(bytes[i + 1]));
  }
  final Bytes from=Bytes.wrap(new byte[]{2});
  final Bytes to=Bytes.wrap(new byte[]{9});
  final KeyValueIterator<Bytes,byte[]> storeIterator=kv.range(from,to);
  final ThreadCache.MemoryLRUCacheBytesIterator cacheIterator=cache.range(namespace,from,to);
  final MergedSortedCacheKeyValueBytesStoreIterator iterator=new MergedSortedCacheKeyValueBytesStoreIterator(cacheIterator,storeIterator);
  final byte[][] values=new byte[8][];
  int index=0;
  int bytesIndex=2;
  while (iterator.hasNext()) {
    final byte[] keys=iterator.peekNextKey().get();
    values[index++]=keys;
    assertArrayEquals(bytes[bytesIndex++],keys);
    iterator.next();
  }
  iterator.close();
}
