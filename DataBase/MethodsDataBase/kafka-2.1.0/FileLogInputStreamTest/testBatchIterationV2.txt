@Test public void testBatchIterationV2() throws IOException {
  if (magic != MAGIC_VALUE_V2)   return;
  try (FileRecords fileRecords=FileRecords.open(tempFile())){
    long producerId=83843L;
    short producerEpoch=15;
    int baseSequence=234;
    int partitionLeaderEpoch=9832;
    SimpleRecord[] firstBatchRecords=new SimpleRecord[]{new SimpleRecord(3241324L,"a".getBytes(),"1".getBytes()),new SimpleRecord(234280L,"b".getBytes(),"2".getBytes())};
    SimpleRecord[] secondBatchRecords=new SimpleRecord[]{new SimpleRecord(238423489L,"c".getBytes(),"3".getBytes()),new SimpleRecord(897839L,null,"4".getBytes()),new SimpleRecord(8234020L,"e".getBytes(),null)};
    fileRecords.append(MemoryRecords.withIdempotentRecords(magic,15L,compression,producerId,producerEpoch,baseSequence,partitionLeaderEpoch,firstBatchRecords));
    fileRecords.append(MemoryRecords.withTransactionalRecords(magic,27L,compression,producerId,producerEpoch,baseSequence + firstBatchRecords.length,partitionLeaderEpoch,secondBatchRecords));
    fileRecords.flush();
    FileLogInputStream logInputStream=new FileLogInputStream(fileRecords,0,fileRecords.sizeInBytes());
    FileChannelRecordBatch firstBatch=logInputStream.nextBatch();
    assertProducerData(firstBatch,producerId,producerEpoch,baseSequence,false,firstBatchRecords);
    assertGenericRecordBatchData(firstBatch,15L,3241324L,firstBatchRecords);
    assertEquals(partitionLeaderEpoch,firstBatch.partitionLeaderEpoch());
    FileChannelRecordBatch secondBatch=logInputStream.nextBatch();
    assertProducerData(secondBatch,producerId,producerEpoch,baseSequence + firstBatchRecords.length,true,secondBatchRecords);
    assertGenericRecordBatchData(secondBatch,27L,238423489L,secondBatchRecords);
    assertEquals(partitionLeaderEpoch,secondBatch.partitionLeaderEpoch());
    assertNull(logInputStream.nextBatch());
  }
 }
