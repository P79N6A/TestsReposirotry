@Test public void testBatchIterationWithMultipleRecordsPerBatch() throws IOException {
  if (magic < MAGIC_VALUE_V2 && compression == CompressionType.NONE)   return;
  if (compression == CompressionType.ZSTD && magic < MAGIC_VALUE_V2)   return;
  try (FileRecords fileRecords=FileRecords.open(tempFile())){
    SimpleRecord[] firstBatchRecords=new SimpleRecord[]{new SimpleRecord(3241324L,"a".getBytes(),"1".getBytes()),new SimpleRecord(234280L,"b".getBytes(),"2".getBytes())};
    SimpleRecord[] secondBatchRecords=new SimpleRecord[]{new SimpleRecord(238423489L,"c".getBytes(),"3".getBytes()),new SimpleRecord(897839L,null,"4".getBytes()),new SimpleRecord(8234020L,"e".getBytes(),null)};
    fileRecords.append(MemoryRecords.withRecords(magic,0L,compression,CREATE_TIME,firstBatchRecords));
    fileRecords.append(MemoryRecords.withRecords(magic,1L,compression,CREATE_TIME,secondBatchRecords));
    fileRecords.flush();
    FileLogInputStream logInputStream=new FileLogInputStream(fileRecords,0,fileRecords.sizeInBytes());
    FileChannelRecordBatch firstBatch=logInputStream.nextBatch();
    assertNoProducerData(firstBatch);
    assertGenericRecordBatchData(firstBatch,0L,3241324L,firstBatchRecords);
    FileChannelRecordBatch secondBatch=logInputStream.nextBatch();
    assertNoProducerData(secondBatch);
    assertGenericRecordBatchData(secondBatch,1L,238423489L,secondBatchRecords);
    assertNull(logInputStream.nextBatch());
  }
 }
