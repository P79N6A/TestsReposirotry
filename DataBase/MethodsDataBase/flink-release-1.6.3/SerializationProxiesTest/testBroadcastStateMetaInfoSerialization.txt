@Test public void testBroadcastStateMetaInfoSerialization() throws Exception {
  String name="test";
  TypeSerializer<?> keySerializer=DoubleSerializer.INSTANCE;
  TypeSerializer<?> valueSerializer=StringSerializer.INSTANCE;
  StateMetaInfoSnapshot snapshot=new RegisteredBroadcastStateBackendMetaInfo<>(name,OperatorStateHandle.Mode.BROADCAST,keySerializer,valueSerializer).snapshot();
  byte[] serialized;
  try (ByteArrayOutputStreamWithPos out=new ByteArrayOutputStreamWithPos()){
    StateMetaInfoSnapshotReadersWriters.getWriter().writeStateMetaInfoSnapshot(snapshot,new DataOutputViewStreamWrapper(out));
    serialized=out.toByteArray();
  }
   try (ByteArrayInputStreamWithPos in=new ByteArrayInputStreamWithPos(serialized)){
    final StateMetaInfoReader reader=StateMetaInfoSnapshotReadersWriters.getReader(CURRENT_STATE_META_INFO_SNAPSHOT_VERSION,StateMetaInfoSnapshotReadersWriters.StateTypeHint.OPERATOR_STATE);
    snapshot=reader.readStateMetaInfoSnapshot(new DataInputViewStreamWrapper(in),Thread.currentThread().getContextClassLoader());
  }
   RegisteredBroadcastStateBackendMetaInfo<?,?> restoredMetaInfo=new RegisteredBroadcastStateBackendMetaInfo<>(snapshot);
  Assert.assertEquals(name,restoredMetaInfo.getName());
  Assert.assertEquals(OperatorStateHandle.Mode.BROADCAST,restoredMetaInfo.getAssignmentMode());
  Assert.assertEquals(keySerializer,restoredMetaInfo.getKeySerializer());
  Assert.assertEquals(valueSerializer,restoredMetaInfo.getValueSerializer());
}
