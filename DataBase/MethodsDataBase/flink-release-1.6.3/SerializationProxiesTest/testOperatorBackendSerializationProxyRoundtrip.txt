@Test public void testOperatorBackendSerializationProxyRoundtrip() throws Exception {
  TypeSerializer<?> stateSerializer=DoubleSerializer.INSTANCE;
  TypeSerializer<?> keySerializer=DoubleSerializer.INSTANCE;
  TypeSerializer<?> valueSerializer=StringSerializer.INSTANCE;
  List<StateMetaInfoSnapshot> stateMetaInfoSnapshots=new ArrayList<>();
  stateMetaInfoSnapshots.add(new RegisteredOperatorStateBackendMetaInfo<>("a",stateSerializer,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE).snapshot());
  stateMetaInfoSnapshots.add(new RegisteredOperatorStateBackendMetaInfo<>("b",stateSerializer,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE).snapshot());
  stateMetaInfoSnapshots.add(new RegisteredOperatorStateBackendMetaInfo<>("c",stateSerializer,OperatorStateHandle.Mode.UNION).snapshot());
  List<StateMetaInfoSnapshot> broadcastStateMetaInfoSnapshots=new ArrayList<>();
  broadcastStateMetaInfoSnapshots.add(new RegisteredBroadcastStateBackendMetaInfo<>("d",OperatorStateHandle.Mode.BROADCAST,keySerializer,valueSerializer).snapshot());
  broadcastStateMetaInfoSnapshots.add(new RegisteredBroadcastStateBackendMetaInfo<>("e",OperatorStateHandle.Mode.BROADCAST,valueSerializer,keySerializer).snapshot());
  OperatorBackendSerializationProxy serializationProxy=new OperatorBackendSerializationProxy(stateMetaInfoSnapshots,broadcastStateMetaInfoSnapshots);
  byte[] serialized;
  try (ByteArrayOutputStreamWithPos out=new ByteArrayOutputStreamWithPos()){
    serializationProxy.write(new DataOutputViewStreamWrapper(out));
    serialized=out.toByteArray();
  }
   serializationProxy=new OperatorBackendSerializationProxy(Thread.currentThread().getContextClassLoader());
  try (ByteArrayInputStreamWithPos in=new ByteArrayInputStreamWithPos(serialized)){
    serializationProxy.read(new DataInputViewStreamWrapper(in));
  }
   assertEqualStateMetaInfoSnapshotsLists(stateMetaInfoSnapshots,serializationProxy.getOperatorStateMetaInfoSnapshots());
  assertEqualStateMetaInfoSnapshotsLists(broadcastStateMetaInfoSnapshots,serializationProxy.getBroadcastStateMetaInfoSnapshots());
}
