@Test public void testCassandraScalaTupleAtLeastOnceSinkBuilderDetection() throws Exception {
  Class<scala.Tuple1<String>> c=(Class<scala.Tuple1<String>>)new scala.Tuple1<>("hello").getClass();
  Seq<TypeInformation<?>> typeInfos=JavaConverters.asScalaBufferConverter(Collections.<TypeInformation<?>>singletonList(BasicTypeInfo.STRING_TYPE_INFO)).asScala();
  Seq<String> fieldNames=JavaConverters.asScalaBufferConverter(Collections.singletonList("_1")).asScala();
  CaseClassTypeInfo<scala.Tuple1<String>> typeInfo=new CaseClassTypeInfo<scala.Tuple1<String>>(c,null,typeInfos,fieldNames){
    @Override public TypeSerializer<scala.Tuple1<String>> createSerializer(    ExecutionConfig config){
      return null;
    }
  }
;
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  DataStream<scala.Tuple1<String>> input=env.fromElements(new scala.Tuple1<>("hello")).returns(typeInfo);
  CassandraSink.CassandraSinkBuilder<scala.Tuple1<String>> sinkBuilder=CassandraSink.addSink(input);
  assertTrue(sinkBuilder instanceof CassandraSink.CassandraScalaProductSinkBuilder);
}
