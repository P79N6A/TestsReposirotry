@Test public void testCassandraCommitter() throws Exception {
  String jobID=new JobID().toString();
  CassandraCommitter cc1=new CassandraCommitter(builder,"flink_auxiliary_cc");
  cc1.setJobId(jobID);
  cc1.setOperatorId("operator");
  CassandraCommitter cc2=new CassandraCommitter(builder,"flink_auxiliary_cc");
  cc2.setJobId(jobID);
  cc2.setOperatorId("operator");
  CassandraCommitter cc3=new CassandraCommitter(builder,"flink_auxiliary_cc");
  cc3.setJobId(jobID);
  cc3.setOperatorId("operator1");
  cc1.createResource();
  cc1.open();
  cc2.open();
  cc3.open();
  Assert.assertFalse(cc1.isCheckpointCommitted(0,1));
  Assert.assertFalse(cc2.isCheckpointCommitted(1,1));
  Assert.assertFalse(cc3.isCheckpointCommitted(0,1));
  cc1.commitCheckpoint(0,1);
  Assert.assertTrue(cc1.isCheckpointCommitted(0,1));
  Assert.assertFalse(cc2.isCheckpointCommitted(1,1));
  Assert.assertFalse(cc3.isCheckpointCommitted(0,1));
  Assert.assertFalse(cc1.isCheckpointCommitted(0,2));
  cc1.close();
  cc2.close();
  cc3.close();
  cc1=new CassandraCommitter(builder,"flink_auxiliary_cc");
  cc1.setJobId(jobID);
  cc1.setOperatorId("operator");
  cc1.open();
  Assert.assertTrue(cc1.isCheckpointCommitted(0,1));
  Assert.assertFalse(cc1.isCheckpointCommitted(0,2));
  cc1.close();
}
