@Test public void testInvalidPathSpecification() throws Exception {
  String invalidPath="hdfs://" + hdfsCluster.getURI().getHost() + ":"+ hdfsCluster.getNameNodePort()+ "/invalid/";
  TextInputFormat format=new TextInputFormat(new Path(invalidPath));
  ContinuousFileMonitoringFunction<String> monitoringFunction=new ContinuousFileMonitoringFunction<>(format,FileProcessingMode.PROCESS_ONCE,1,INTERVAL);
  try {
    monitoringFunction.run(new DummySourceContext(){
      @Override public void collect(      TimestampedFileInputSplit element){
        Assert.fail("Test passes with an invalid path.");
      }
    }
);
    Assert.fail("Test passed with an invalid path.");
  }
 catch (  FileNotFoundException e) {
    Assert.assertEquals("The provided file path " + format.getFilePath() + " does not exist.",e.getMessage());
  }
}
