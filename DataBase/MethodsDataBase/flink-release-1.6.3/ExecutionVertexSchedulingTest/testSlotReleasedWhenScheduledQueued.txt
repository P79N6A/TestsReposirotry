@Test public void testSlotReleasedWhenScheduledQueued(){
  try {
    final ExecutionJobVertex ejv=getExecutionVertex(new JobVertexID());
    final ExecutionVertex vertex=new ExecutionVertex(ejv,0,new IntermediateResult[0],AkkaUtils.getDefaultTimeout());
    final Instance instance=getInstance(new ActorTaskManagerGateway(DummyActorGateway.INSTANCE));
    final SimpleSlot slot=instance.allocateSimpleSlot();
    slot.releaseSlot();
    assertTrue(slot.isReleased());
    final CompletableFuture<LogicalSlot> future=new CompletableFuture<>();
    Scheduler scheduler=mock(Scheduler.class);
    when(scheduler.allocateSlot(any(SlotRequestId.class),any(ScheduledUnit.class),anyBoolean(),any(SlotProfile.class),any(Time.class))).thenReturn(future);
    assertEquals(ExecutionState.CREATED,vertex.getExecutionState());
    vertex.scheduleForExecution(scheduler,true,LocationPreferenceConstraint.ALL,Collections.emptySet());
    assertEquals(ExecutionState.SCHEDULED,vertex.getExecutionState());
    future.complete(slot);
    assertEquals(ExecutionState.FAILED,vertex.getExecutionState());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
