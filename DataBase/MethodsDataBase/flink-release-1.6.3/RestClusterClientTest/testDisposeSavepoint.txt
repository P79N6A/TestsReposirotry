@Test public void testDisposeSavepoint() throws Exception {
  final String savepointPath="foobar";
  final String exceptionMessage="Test exception.";
  final FlinkException testException=new FlinkException(exceptionMessage);
  final TestSavepointDisposalHandlers testSavepointDisposalHandlers=new TestSavepointDisposalHandlers(savepointPath);
  final TestSavepointDisposalHandlers.TestSavepointDisposalTriggerHandler testSavepointDisposalTriggerHandler=testSavepointDisposalHandlers.new TestSavepointDisposalTriggerHandler();
  final TestSavepointDisposalHandlers.TestSavepointDisposalStatusHandler testSavepointDisposalStatusHandler=testSavepointDisposalHandlers.new TestSavepointDisposalStatusHandler(OptionalFailure.of(AsynchronousOperationInfo.complete()),OptionalFailure.of(AsynchronousOperationInfo.completeExceptional(new SerializedThrowable(testException))),OptionalFailure.ofFailure(testException));
  try (TestRestServerEndpoint ignored=createRestServerEndpoint(testSavepointDisposalStatusHandler,testSavepointDisposalTriggerHandler)){
{
      final CompletableFuture<Acknowledge> disposeSavepointFuture=restClusterClient.disposeSavepoint(savepointPath);
      assertThat(disposeSavepointFuture.get(),is(Acknowledge.get()));
    }
{
      final CompletableFuture<Acknowledge> disposeSavepointFuture=restClusterClient.disposeSavepoint(savepointPath);
      try {
        disposeSavepointFuture.get();
        fail("Expected an exception");
      }
 catch (      ExecutionException ee) {
        assertThat(ExceptionUtils.findThrowableWithMessage(ee,exceptionMessage).isPresent(),is(true));
      }
    }
{
      try {
        restClusterClient.disposeSavepoint(savepointPath).get();
        fail("Expected an exception.");
      }
 catch (      ExecutionException ee) {
        assertThat(ExceptionUtils.findThrowable(ee,RestClientException.class).isPresent(),is(true));
      }
    }
  }
 }
