@Test public void testTriggerSavepoint() throws Exception {
  final String targetSavepointDirectory="/tmp";
  final String savepointLocationDefaultDir="/other/savepoint-0d2fb9-8d5e0106041a";
  final String savepointLocationRequestedDir=targetSavepointDirectory + "/savepoint-0d2fb9-8d5e0106041a";
  final TestSavepointHandlers testSavepointHandlers=new TestSavepointHandlers();
  final TestSavepointHandlers.TestSavepointTriggerHandler triggerHandler=testSavepointHandlers.new TestSavepointTriggerHandler(null,targetSavepointDirectory,null,null);
  final TestSavepointHandlers.TestSavepointHandler savepointHandler=testSavepointHandlers.new TestSavepointHandler(new SavepointInfo(savepointLocationDefaultDir,null),new SavepointInfo(savepointLocationRequestedDir,null),new SavepointInfo(null,new SerializedThrowable(new RuntimeException("expected"))),new RestHandlerException("not found",HttpResponseStatus.NOT_FOUND));
  final AtomicBoolean firstPollFailed=new AtomicBoolean();
  failHttpRequest=(messageHeaders,messageParameters,requestBody) -> messageHeaders instanceof SavepointStatusHeaders && !firstPollFailed.getAndSet(true);
  try (TestRestServerEndpoint ignored=createRestServerEndpoint(triggerHandler,savepointHandler)){
    JobID id=new JobID();
{
      CompletableFuture<String> savepointPathFuture=restClusterClient.triggerSavepoint(id,null);
      String savepointPath=savepointPathFuture.get();
      assertEquals(savepointLocationDefaultDir,savepointPath);
    }
{
      CompletableFuture<String> savepointPathFuture=restClusterClient.triggerSavepoint(id,targetSavepointDirectory);
      String savepointPath=savepointPathFuture.get();
      assertEquals(savepointLocationRequestedDir,savepointPath);
    }
{
      try {
        restClusterClient.triggerSavepoint(id,null).get();
        fail("Expected exception not thrown.");
      }
 catch (      ExecutionException e) {
        final Throwable cause=e.getCause();
        assertThat(cause,instanceOf(SerializedThrowable.class));
        assertThat(((SerializedThrowable)cause).deserializeError(ClassLoader.getSystemClassLoader()).getMessage(),equalTo("expected"));
      }
    }
    try {
      restClusterClient.triggerSavepoint(new JobID(),null).get();
      fail("Expected exception not thrown.");
    }
 catch (    final ExecutionException e) {
      assertTrue("RestClientException not in causal chain",ExceptionUtils.findThrowable(e,RestClientException.class).isPresent());
    }
  }
 }
