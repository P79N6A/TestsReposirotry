/** 
 * Tests that the slot release is only signaled after the owner has taken it back.
 */
@Test public void testSlotRelease(){
  final CompletableFuture<LogicalSlot> returnedSlotFuture=new CompletableFuture<>();
  final CompletableFuture<Boolean> returnSlotResponseFuture=new CompletableFuture<>();
  final WaitingSlotOwner waitingSlotOwner=new WaitingSlotOwner(returnedSlotFuture,returnSlotResponseFuture);
  final CompletableFuture<?> terminalStateFuture=new CompletableFuture<>();
  final CompletableFuture<?> failFuture=new CompletableFuture<>();
  final ManualTestingPayload dummyPayload=new ManualTestingPayload(failFuture,terminalStateFuture);
  final SingleLogicalSlot singleLogicalSlot=createSingleLogicalSlot(waitingSlotOwner);
  assertThat(singleLogicalSlot.tryAssignPayload(dummyPayload),is(true));
  final CompletableFuture<?> releaseFuture=singleLogicalSlot.releaseSlot(new FlinkException("Test exception"));
  assertThat(releaseFuture.isDone(),is(false));
  assertThat(returnedSlotFuture.isDone(),is(false));
  assertThat(failFuture.isDone(),is(true));
  terminalStateFuture.complete(null);
  assertThat(returnedSlotFuture.isDone(),is(true));
  returnSlotResponseFuture.complete(true);
  assertThat(releaseFuture.isDone(),is(true));
}
