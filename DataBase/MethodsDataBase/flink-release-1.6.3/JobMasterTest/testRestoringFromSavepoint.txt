/** 
 * Tests that a JobMaster will restore the given JobGraph from its savepoint upon initial submission.
 */
@Test public void testRestoringFromSavepoint() throws Exception {
  final long savepointId=42L;
  final File savepointFile=createSavepoint(savepointId);
  final SavepointRestoreSettings savepointRestoreSettings=SavepointRestoreSettings.forPath(savepointFile.getAbsolutePath(),true);
  final JobGraph jobGraph=createJobGraphWithCheckpointing(savepointRestoreSettings);
  final StandaloneCompletedCheckpointStore completedCheckpointStore=new StandaloneCompletedCheckpointStore(1);
  final TestingCheckpointRecoveryFactory testingCheckpointRecoveryFactory=new TestingCheckpointRecoveryFactory(completedCheckpointStore,new StandaloneCheckpointIDCounter());
  haServices.setCheckpointRecoveryFactory(testingCheckpointRecoveryFactory);
  final JobMaster jobMaster=createJobMaster(configuration,jobGraph,haServices,new TestingJobManagerSharedServicesBuilder().build());
  try {
    final CompletedCheckpoint savepointCheckpoint=completedCheckpointStore.getLatestCheckpoint();
    assertThat(savepointCheckpoint,Matchers.notNullValue());
    assertThat(savepointCheckpoint.getCheckpointID(),is(savepointId));
  }
  finally {
    RpcUtils.terminateRpcEndpoint(jobMaster,testingTimeout);
  }
}
