@Test @SuppressWarnings("unchecked") public void testConsumerOffsets(){
  KafkaTableSource.Builder b=getBuilder();
  configureBuilder(b);
  KafkaTableSource source=spy(b.build());
  when(source.createKafkaConsumer(TOPIC,PROPS,null)).thenReturn(mock(getFlinkKafkaConsumer()));
  verify(source.getKafkaConsumer(TOPIC,PROPS,null)).setStartFromGroupOffsets();
  b.fromEarliest();
  source=spy(b.build());
  when(source.createKafkaConsumer(TOPIC,PROPS,null)).thenReturn(mock(getFlinkKafkaConsumer()));
  verify(source.getKafkaConsumer(TOPIC,PROPS,null)).setStartFromEarliest();
  b.fromLatest();
  source=spy(b.build());
  when(source.createKafkaConsumer(TOPIC,PROPS,null)).thenReturn(mock(getFlinkKafkaConsumer()));
  verify(source.getKafkaConsumer(TOPIC,PROPS,null)).setStartFromLatest();
  b.fromGroupOffsets();
  source=spy(b.build());
  when(source.createKafkaConsumer(TOPIC,PROPS,null)).thenReturn(mock(getFlinkKafkaConsumer()));
  verify(source.getKafkaConsumer(TOPIC,PROPS,null)).setStartFromGroupOffsets();
  b.fromSpecificOffsets(mock(Map.class));
  source=spy(b.build());
  when(source.createKafkaConsumer(TOPIC,PROPS,null)).thenReturn(mock(getFlinkKafkaConsumer()));
  verify(source.getKafkaConsumer(TOPIC,PROPS,null)).setStartFromSpecificOffsets(any(Map.class));
}
