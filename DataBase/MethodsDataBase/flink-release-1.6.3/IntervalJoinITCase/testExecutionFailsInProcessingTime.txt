@Test(expected=UnsupportedTimeCharacteristicException.class) public void testExecutionFailsInProcessingTime() throws Exception {
  final StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime);
  env.setParallelism(1);
  DataStream<Tuple2<String,Integer>> streamOne=env.fromElements(Tuple2.of("1",1));
  DataStream<Tuple2<String,Integer>> streamTwo=env.fromElements(Tuple2.of("1",1));
  streamOne.keyBy(new Tuple2KeyExtractor()).intervalJoin(streamTwo.keyBy(new Tuple2KeyExtractor())).between(Time.milliseconds(0),Time.milliseconds(0)).process(new ProcessJoinFunction<Tuple2<String,Integer>,Tuple2<String,Integer>,String>(){
    @Override public void processElement(    Tuple2<String,Integer> left,    Tuple2<String,Integer> right,    Context ctx,    Collector<String> out) throws Exception {
      out.collect(left + ":" + right);
    }
  }
);
}
