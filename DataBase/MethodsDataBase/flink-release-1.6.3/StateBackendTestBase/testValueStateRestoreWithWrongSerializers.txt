@Test @SuppressWarnings("unchecked") public void testValueStateRestoreWithWrongSerializers() throws Exception {
  CheckpointStreamFactory streamFactory=createStreamFactory();
  SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  AbstractKeyedStateBackend<Integer> backend=createKeyedBackend(IntSerializer.INSTANCE);
  try {
    ValueStateDescriptor<String> kvId=new ValueStateDescriptor<>("id",String.class);
    ValueState<String> state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
    backend.setCurrentKey(1);
    state.update("1");
    backend.setCurrentKey(2);
    state.update("2");
    KeyedStateHandle snapshot1=runSnapshot(backend.snapshot(682375462378L,2,streamFactory,CheckpointOptions.forCheckpointWithDefaultLocation()),sharedStateRegistry);
    backend.dispose();
    backend=restoreKeyedBackend(IntSerializer.INSTANCE,snapshot1);
    snapshot1.discardState();
    @SuppressWarnings("unchecked") TypeSerializer<String> fakeStringSerializer=(TypeSerializer<String>)(TypeSerializer<?>)FloatSerializer.INSTANCE;
    try {
      kvId=new ValueStateDescriptor<>("id",fakeStringSerializer);
      state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
      state.value();
      fail("should recognize wrong serializers");
    }
 catch (    StateMigrationException ignored) {
    }
  }
  finally {
    backend.dispose();
  }
}
