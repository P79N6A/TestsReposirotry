@Test public void testRestoreWithWrongKeySerializer() throws Exception {
  CheckpointStreamFactory streamFactory=createStreamFactory();
  SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  AbstractKeyedStateBackend<Integer> backend=createKeyedBackend(IntSerializer.INSTANCE);
  ValueStateDescriptor<String> kvId=new ValueStateDescriptor<>("id",String.class);
  ValueState<String> state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
  backend.setCurrentKey(1);
  state.update("1");
  backend.setCurrentKey(2);
  state.update("2");
  KeyedStateHandle snapshot1=runSnapshot(backend.snapshot(682375462378L,2,streamFactory,CheckpointOptions.forCheckpointWithDefaultLocation()),sharedStateRegistry);
  backend.dispose();
  try {
    restoreKeyedBackend(DoubleSerializer.INSTANCE,snapshot1);
    fail("should recognize wrong key serializer");
  }
 catch (  StateMigrationException ignored) {
  }
}
