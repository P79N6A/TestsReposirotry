@Test public void testCheckConcurrencyProblemWhenPerformingCheckpointAsync() throws Exception {
  CheckpointStreamFactory streamFactory=createStreamFactory();
  Environment env=new DummyEnvironment();
  AbstractKeyedStateBackend<Integer> backend=createKeyedBackend(IntSerializer.INSTANCE,env);
  ExecutorService executorService=Executors.newScheduledThreadPool(1);
  try {
    long checkpointID=0;
    List<Future> futureList=new ArrayList();
    for (int i=0; i < 10; ++i) {
      ValueStateDescriptor<Integer> kvId=new ValueStateDescriptor<>("id" + i,IntSerializer.INSTANCE);
      ValueState<Integer> state=backend.getOrCreateKeyedState(VoidNamespaceSerializer.INSTANCE,kvId);
      ((InternalValueState)state).setCurrentNamespace(VoidNamespace.INSTANCE);
      backend.setCurrentKey(i);
      state.update(i);
      futureList.add(runSnapshotAsync(executorService,backend.snapshot(checkpointID++,System.currentTimeMillis(),streamFactory,CheckpointOptions.forCheckpointWithDefaultLocation())));
    }
    for (    Future future : futureList) {
      future.get(20,TimeUnit.SECONDS);
    }
  }
 catch (  Exception e) {
    fail();
  }
 finally {
    backend.dispose();
    executorService.shutdown();
  }
}
