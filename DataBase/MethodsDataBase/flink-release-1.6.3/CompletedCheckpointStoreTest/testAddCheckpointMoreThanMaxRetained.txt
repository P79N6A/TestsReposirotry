/** 
 * Tests that adding more checkpoints than retained discards the correct checkpoints (using the correct class loader).
 */
@Test public void testAddCheckpointMoreThanMaxRetained() throws Exception {
  SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  CompletedCheckpointStore checkpoints=createCompletedCheckpoints(1);
  TestCompletedCheckpoint[] expected=new TestCompletedCheckpoint[]{createCheckpoint(0,sharedStateRegistry),createCheckpoint(1,sharedStateRegistry),createCheckpoint(2,sharedStateRegistry),createCheckpoint(3,sharedStateRegistry)};
  checkpoints.addCheckpoint(expected[0]);
  assertEquals(1,checkpoints.getNumberOfRetainedCheckpoints());
  for (int i=1; i < expected.length; i++) {
    Collection<OperatorState> taskStates=expected[i - 1].getOperatorStates().values();
    checkpoints.addCheckpoint(expected[i]);
    expected[i - 1].awaitDiscard();
    assertTrue(expected[i - 1].isDiscarded());
    assertEquals(1,checkpoints.getNumberOfRetainedCheckpoints());
  }
}
