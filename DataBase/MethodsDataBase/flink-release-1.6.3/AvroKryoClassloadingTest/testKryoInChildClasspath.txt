@Test public void testKryoInChildClasspath() throws Exception {
  final Class<?> avroClass=AvroKryoSerializerUtils.class;
  final URL avroLocation=avroClass.getProtectionDomain().getCodeSource().getLocation();
  final URL kryoLocation=Kryo.class.getProtectionDomain().getCodeSource().getLocation();
  final ClassLoader parentClassLoader=new FilteredClassLoader(avroClass.getClassLoader(),AvroKryoSerializerUtils.class.getName());
  final ClassLoader userAppClassLoader=FlinkUserCodeClassLoaders.childFirst(new URL[]{avroLocation,kryoLocation},parentClassLoader,CoreOptions.ALWAYS_PARENT_FIRST_LOADER_PATTERNS.defaultValue().split(";"));
  final Class<?> userLoadedAvroClass=Class.forName(avroClass.getName(),false,userAppClassLoader);
  assertNotEquals(avroClass,userLoadedAvroClass);
  final Method m=userLoadedAvroClass.getMethod("addAvroGenericDataArrayRegistration",LinkedHashMap.class);
  final LinkedHashMap<String,?> map=new LinkedHashMap<>();
  m.invoke(userLoadedAvroClass.newInstance(),map);
  assertEquals(1,map.size());
}
