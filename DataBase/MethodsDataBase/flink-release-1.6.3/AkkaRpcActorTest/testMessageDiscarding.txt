/** 
 * Tests that the  {@link AkkaRpcActor} discards messages until the corresponding{@link RpcEndpoint} has been started.
 */
@Test public void testMessageDiscarding() throws Exception {
  int expectedValue=1337;
  DummyRpcEndpoint rpcEndpoint=new DummyRpcEndpoint(akkaRpcService);
  DummyRpcGateway rpcGateway=rpcEndpoint.getSelfGateway(DummyRpcGateway.class);
  CompletableFuture<Integer> result=rpcGateway.foobar();
  try {
    result.get(timeout.getSize(),timeout.getUnit());
    fail("Expected an AkkaRpcException.");
  }
 catch (  ExecutionException ee) {
    assertTrue(ee.getCause() instanceof AkkaRpcException);
  }
  rpcEndpoint.setFoobar(expectedValue);
  rpcEndpoint.start();
  result=rpcGateway.foobar();
  Integer actualValue=result.get(timeout.getSize(),timeout.getUnit());
  assertThat("The new foobar value should have been returned.",actualValue,Is.is(expectedValue));
  rpcEndpoint.shutDown();
}
