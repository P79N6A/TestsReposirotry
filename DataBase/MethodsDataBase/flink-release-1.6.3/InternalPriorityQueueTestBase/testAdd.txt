@Test public void testAdd(){
  InternalPriorityQueue<TestElement> priorityQueue=newPriorityQueue(1);
  final List<TestElement> testElements=Arrays.asList(new TestElement(4711L,42L),new TestElement(815L,23L));
  testElements.sort((l,r) -> getTestElementPriorityComparator().compare(r.priority,l.priority));
  Assert.assertTrue(priorityQueue.add(testElements.get(0)));
  if (testSetSemanticsAgainstDuplicateElements()) {
    priorityQueue.add(testElements.get(0).deepCopy());
  }
  Assert.assertEquals(1,priorityQueue.size());
  Assert.assertTrue(priorityQueue.add(testElements.get(1)));
  Assert.assertEquals(2,priorityQueue.size());
  Assert.assertEquals(testElements.get(1),priorityQueue.poll());
  Assert.assertEquals(1,priorityQueue.size());
  Assert.assertEquals(testElements.get(0),priorityQueue.poll());
  Assert.assertEquals(0,priorityQueue.size());
}
