@Test public void testPoll(){
  InternalPriorityQueue<TestElement> priorityQueue=newPriorityQueue(3);
  final Comparator<Long> comparator=getTestElementPriorityComparator();
  Assert.assertNull(priorityQueue.poll());
  final int testSize=345;
  HashSet<TestElement> checkSet=new HashSet<>(testSize);
  insertRandomElements(priorityQueue,checkSet,testSize);
  long lastPriorityValue=getHighestPriorityValueForComparator();
  while (!priorityQueue.isEmpty()) {
    TestElement removed=priorityQueue.poll();
    Assert.assertNotNull(removed);
    Assert.assertTrue(checkSet.remove(removed));
    Assert.assertTrue(comparator.compare(removed.getPriority(),lastPriorityValue) >= 0);
    lastPriorityValue=removed.getPriority();
  }
  Assert.assertTrue(checkSet.isEmpty());
  Assert.assertNull(priorityQueue.poll());
}
