@Test public void testIterator() throws Exception {
  InternalPriorityQueue<TestElement> priorityQueue=newPriorityQueue(1);
  try (CloseableIterator<TestElement> iterator=priorityQueue.iterator()){
    Assert.assertFalse(iterator.hasNext());
    try {
      iterator.next();
      Assert.fail();
    }
 catch (    NoSuchElementException ignore) {
    }
  }
   final int testSize=10;
  HashSet<TestElement> checkSet=new HashSet<>(testSize);
  insertRandomElements(priorityQueue,checkSet,testSize);
  try (CloseableIterator<TestElement> iterator=priorityQueue.iterator()){
    while (iterator.hasNext()) {
      Assert.assertTrue(checkSet.remove(iterator.next()));
    }
    Assert.assertTrue(checkSet.isEmpty());
  }
 }
