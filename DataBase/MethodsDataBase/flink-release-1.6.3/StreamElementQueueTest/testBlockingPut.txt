/** 
 * Tests that a put operation blocks if the queue is full.
 */
@Test public void testBlockingPut() throws Exception {
  OperatorActions operatorActions=mock(OperatorActions.class);
  final StreamElementQueue queue=createStreamElementQueue(1,operatorActions);
  StreamRecordQueueEntry<Integer> streamRecordQueueEntry=new StreamRecordQueueEntry<>(new StreamRecord<>(42,0L));
  final StreamRecordQueueEntry<Integer> streamRecordQueueEntry2=new StreamRecordQueueEntry<>(new StreamRecord<>(43,1L));
  queue.put(streamRecordQueueEntry);
  Assert.assertEquals(1,queue.size());
  CompletableFuture<Void> putOperation=CompletableFuture.runAsync(() -> {
    try {
      queue.put(streamRecordQueueEntry2);
    }
 catch (    InterruptedException e) {
      throw new CompletionException(e);
    }
  }
,executor);
  Thread.sleep(10L);
  Assert.assertFalse(putOperation.isDone());
  streamRecordQueueEntry.complete(Collections.<Integer>emptyList());
  Assert.assertEquals(streamRecordQueueEntry,queue.poll());
  putOperation.get();
  verify(operatorActions,never()).failOperator(any(Exception.class));
}
