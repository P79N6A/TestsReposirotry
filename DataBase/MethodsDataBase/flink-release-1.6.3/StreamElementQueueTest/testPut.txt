@Test public void testPut() throws InterruptedException {
  OperatorActions operatorActions=mock(OperatorActions.class);
  StreamElementQueue queue=createStreamElementQueue(2,operatorActions);
  final Watermark watermark=new Watermark(0L);
  final StreamRecord<Integer> streamRecord=new StreamRecord<>(42,1L);
  final Watermark nextWatermark=new Watermark(2L);
  final WatermarkQueueEntry watermarkQueueEntry=new WatermarkQueueEntry(watermark);
  final StreamRecordQueueEntry<Integer> streamRecordQueueEntry=new StreamRecordQueueEntry<>(streamRecord);
  queue.put(watermarkQueueEntry);
  queue.put(streamRecordQueueEntry);
  Assert.assertEquals(2,queue.size());
  Assert.assertFalse(queue.tryPut(new WatermarkQueueEntry(nextWatermark)));
  Collection<StreamElementQueueEntry<?>> actualValues=queue.values();
  List<StreamElementQueueEntry<?>> expectedValues=Arrays.asList(watermarkQueueEntry,streamRecordQueueEntry);
  Assert.assertEquals(expectedValues,actualValues);
  verify(operatorActions,never()).failOperator(any(Exception.class));
}
