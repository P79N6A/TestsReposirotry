/** 
 * This tests that a single alignment that buffers too much data cancels.
 */
@Test public void testBreakCheckpointAtAlignmentLimit() throws Exception {
  BufferOrEvent[] sequence={createBuffer(1,100),createBuffer(2,70),createBuffer(0,42),createBuffer(2,111),createBarrier(7,1),createBuffer(1,100),createBuffer(2,200),createBuffer(1,300),createBuffer(0,50),createBarrier(7,0),createBuffer(2,100),createBuffer(0,100),createBuffer(1,200),createBuffer(0,200),createBuffer(0,101),createBuffer(0,100),createBuffer(1,100),createBuffer(2,100),createBarrier(7,2),createBuffer(0,100),createBuffer(1,100),createBuffer(2,100)};
  MockInputGate gate=new MockInputGate(PAGE_SIZE,3,Arrays.asList(sequence));
  BarrierBuffer buffer=new BarrierBuffer(gate,new BufferSpiller(ioManager,gate.getPageSize()),1000);
  AbstractInvokable toNotify=mock(AbstractInvokable.class);
  buffer.registerCheckpointEventHandler(toNotify);
  check(sequence[0],buffer.getNextNonBlocked());
  check(sequence[1],buffer.getNextNonBlocked());
  check(sequence[2],buffer.getNextNonBlocked());
  check(sequence[3],buffer.getNextNonBlocked());
  long startTs=System.nanoTime();
  check(sequence[6],buffer.getNextNonBlocked());
  check(sequence[8],buffer.getNextNonBlocked());
  check(sequence[10],buffer.getNextNonBlocked());
  check(sequence[5],buffer.getNextNonBlocked());
  validateAlignmentTime(startTs,buffer);
  verify(toNotify,times(1)).abortCheckpointOnBarrier(eq(7L),any(AlignmentLimitExceededException.class));
  check(sequence[7],buffer.getNextNonBlocked());
  check(sequence[11],buffer.getNextNonBlocked());
  check(sequence[12],buffer.getNextNonBlocked());
  check(sequence[13],buffer.getNextNonBlocked());
  check(sequence[14],buffer.getNextNonBlocked());
  check(sequence[15],buffer.getNextNonBlocked());
  check(sequence[16],buffer.getNextNonBlocked());
  check(sequence[17],buffer.getNextNonBlocked());
  check(sequence[19],buffer.getNextNonBlocked());
  check(sequence[20],buffer.getNextNonBlocked());
  check(sequence[21],buffer.getNextNonBlocked());
  verify(toNotify,times(0)).triggerCheckpointOnBarrier(any(CheckpointMetaData.class),any(CheckpointOptions.class),any(CheckpointMetrics.class));
  assertNull(buffer.getNextNonBlocked());
  assertNull(buffer.getNextNonBlocked());
  buffer.cleanup();
  checkNoTempFilesRemain();
}
