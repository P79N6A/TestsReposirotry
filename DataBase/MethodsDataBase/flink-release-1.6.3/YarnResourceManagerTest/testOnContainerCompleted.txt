/** 
 * Tests that YarnResourceManager will not request more containers than needs during callback from Yarn when container is Completed.
 * @throws Exception
 */
@Test public void testOnContainerCompleted() throws Exception {
  new Context(){
{
      startResourceManager();
      CompletableFuture<?> registerSlotRequestFuture=resourceManager.runInMainThread(() -> {
        rmServices.slotManager.registerSlotRequest(new SlotRequest(new JobID(),new AllocationID(),resourceProfile1,taskHost));
        return null;
      }
);
      registerSlotRequestFuture.get();
      ContainerId testContainerId=ContainerId.newInstance(ApplicationAttemptId.newInstance(ApplicationId.newInstance(System.currentTimeMillis(),1),1),1);
      Container testingContainer=mock(Container.class);
      when(testingContainer.getId()).thenReturn(testContainerId);
      when(testingContainer.getNodeId()).thenReturn(NodeId.newInstance("container",1234));
      when(testingContainer.getResource()).thenReturn(Resource.newInstance(200,1));
      when(testingContainer.getPriority()).thenReturn(Priority.UNDEFINED);
      resourceManager.onContainersAllocated(ImmutableList.of(testingContainer));
      verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class));
      verify(mockNMClient).startContainer(eq(testingContainer),any(ContainerLaunchContext.class));
      ContainerStatus testingContainerStatus=mock(ContainerStatus.class);
      when(testingContainerStatus.getContainerId()).thenReturn(testContainerId);
      when(testingContainerStatus.getState()).thenReturn(ContainerState.COMPLETE);
      when(testingContainerStatus.getDiagnostics()).thenReturn("Test exit");
      when(testingContainerStatus.getExitStatus()).thenReturn(-1);
      resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus));
      verify(mockResourceManagerClient,times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class));
      when(testingContainerStatus.getContainerId()).thenReturn(testContainerId);
      when(testingContainerStatus.getState()).thenReturn(ContainerState.COMPLETE);
      when(testingContainerStatus.getDiagnostics()).thenReturn("Test exit");
      when(testingContainerStatus.getExitStatus()).thenReturn(-1);
      resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus));
      verify(mockResourceManagerClient,times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class));
    }
  }
;
}
