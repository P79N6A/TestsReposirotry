@Test public void testShutdown() throws Exception {
  final UUID uuid=UUID.randomUUID();
  final SingleLeaderElectionService service=new SingleLeaderElectionService(executor,uuid);
  final LeaderContender contender=mockContender(service);
  service.start(contender);
  verify(contender,times(1)).grantLeadership(uuid);
  final LeaderRetrievalListener listener1=mock(LeaderRetrievalListener.class);
  final LeaderRetrievalListener listener2=mock(LeaderRetrievalListener.class);
  LeaderRetrievalService listenerService1=service.createLeaderRetrievalService();
  LeaderRetrievalService listenerService2=service.createLeaderRetrievalService();
  listenerService1.start(listener1);
  listenerService2.start(listener2);
  listenerService1.stop();
  service.shutdown();
  verify(contender,times(1)).handleError(any(Exception.class));
  verify(listener2,times(1)).handleError(any(Exception.class));
  verify(listener1,times(0)).handleError(any(Exception.class));
  try {
    service.start(contender);
    fail("should fail with an exception");
  }
 catch (  IllegalStateException e) {
  }
  verify(contender,times(1)).grantLeadership(any(UUID.class));
}
