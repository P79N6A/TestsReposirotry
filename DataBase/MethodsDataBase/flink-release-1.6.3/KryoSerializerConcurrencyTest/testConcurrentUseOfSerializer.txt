@Test public void testConcurrentUseOfSerializer() throws Exception {
  final KryoSerializer<String> serializer=new KryoSerializer<>(String.class,new ExecutionConfig());
  final BlockerSync sync=new BlockerSync();
  final DataOutputView regularOut=new DataOutputSerializer(32);
  final DataOutputView lockingOut=new LockingView(sync);
  final CheckedThread thread=new CheckedThread("serializer"){
    @Override public void go() throws Exception {
      serializer.serialize("a value",lockingOut);
    }
  }
;
  thread.start();
  sync.awaitBlocker();
  try {
    serializer.serialize("value",regularOut);
    fail("should have failed with an exception");
  }
 catch (  IllegalStateException e) {
  }
 finally {
    sync.releaseBlocker();
  }
  thread.sync();
}
