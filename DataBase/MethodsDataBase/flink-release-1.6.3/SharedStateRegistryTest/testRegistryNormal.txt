/** 
 * Validate that all states can be correctly registered at the registry.
 */
@Test public void testRegistryNormal(){
  SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  TestSharedState firstState=new TestSharedState("first");
  SharedStateRegistry.Result result=sharedStateRegistry.registerReference(firstState.getRegistrationKey(),firstState);
  assertEquals(1,result.getReferenceCount());
  assertTrue(firstState == result.getReference());
  assertFalse(firstState.isDiscarded());
  TestSharedState secondState=new TestSharedState("second");
  result=sharedStateRegistry.registerReference(secondState.getRegistrationKey(),secondState);
  assertEquals(1,result.getReferenceCount());
  assertTrue(secondState == result.getReference());
  assertFalse(firstState.isDiscarded());
  assertFalse(secondState.isDiscarded());
  TestSharedState firstStatePrime=new TestSharedState(firstState.getRegistrationKey().getKeyString());
  result=sharedStateRegistry.registerReference(firstState.getRegistrationKey(),firstStatePrime);
  assertEquals(2,result.getReferenceCount());
  assertFalse(firstStatePrime == result.getReference());
  assertTrue(firstState == result.getReference());
  assertTrue(firstStatePrime.isDiscarded());
  assertFalse(firstState.isDiscarded());
  result=sharedStateRegistry.registerReference(firstState.getRegistrationKey(),firstState);
  assertEquals(3,result.getReferenceCount());
  assertTrue(firstState == result.getReference());
  assertFalse(firstState.isDiscarded());
  result=sharedStateRegistry.unregisterReference(secondState.getRegistrationKey());
  assertEquals(0,result.getReferenceCount());
  assertTrue(result.getReference() == null);
  assertTrue(secondState.isDiscarded());
  result=sharedStateRegistry.unregisterReference(firstState.getRegistrationKey());
  assertEquals(2,result.getReferenceCount());
  assertTrue(firstState == result.getReference());
  assertFalse(firstState.isDiscarded());
}
