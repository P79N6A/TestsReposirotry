/** 
 * Checks that the state snapshot context is closed after a successful snapshot operation.
 */
@Test public void testSnapshotMethod() throws Exception {
  final long checkpointId=42L;
  final long timestamp=1L;
  final CloseableRegistry closeableRegistry=new CloseableRegistry();
  StateSnapshotContextSynchronousImpl context=spy(new StateSnapshotContextSynchronousImpl(0L,0L));
  whenNew(StateSnapshotContextSynchronousImpl.class).withAnyArguments().thenReturn(context);
  StreamTask<Void,AbstractStreamOperator<Void>> containingTask=mock(StreamTask.class);
  when(containingTask.getCancelables()).thenReturn(closeableRegistry);
  AbstractStreamOperator<Void> operator=mock(AbstractStreamOperator.class);
  when(operator.snapshotState(anyLong(),anyLong(),any(CheckpointOptions.class),any(CheckpointStreamFactory.class))).thenCallRealMethod();
  doReturn(containingTask).when(operator).getContainingTask();
  operator.snapshotState(checkpointId,timestamp,CheckpointOptions.forCheckpointWithDefaultLocation(),new MemCheckpointStreamFactory(Integer.MAX_VALUE));
  verify(context).close();
}
