@Test public void testExactExpirationOnWrite() throws Exception {
  initTest(StateTtlConfig.UpdateType.OnCreateAndWrite,StateTtlConfig.StateVisibility.NeverReturnExpired);
  takeAndRestoreSnapshot();
  timeProvider.time=0;
  ctx().update(ctx().updateEmpty);
  takeAndRestoreSnapshot();
  timeProvider.time=20;
  assertEquals("Unexpired state should be available",ctx().getUpdateEmpty,ctx().get());
  takeAndRestoreSnapshot();
  timeProvider.time=50;
  ctx().update(ctx().updateUnexpired);
  takeAndRestoreSnapshot();
  timeProvider.time=120;
  assertEquals("Unexpired state should be available after update",ctx().getUnexpired,ctx().get());
  takeAndRestoreSnapshot();
  timeProvider.time=170;
  ctx().update(ctx().updateExpired);
  takeAndRestoreSnapshot();
  timeProvider.time=220;
  assertEquals("Unexpired state should be available after update",ctx().getUpdateExpired,ctx().get());
  takeAndRestoreSnapshot();
  timeProvider.time=300;
  assertEquals("Expired state should be unavailable",ctx().emptyValue,ctx().get());
  assertEquals("Original state should be cleared on access",ctx().emptyValue,ctx().getOriginal());
}
