@Test(timeout=30_000L) public void testStreamQueryExecutionSink() throws Exception {
  final String csvOutputPath=new File(tempFolder.newFolder().getAbsolutePath(),"test-out.csv").toURI().toString();
  final URL url=getClass().getClassLoader().getResource("test-data.csv");
  Objects.requireNonNull(url);
  final Map<String,String> replaceVars=new HashMap<>();
  replaceVars.put("$VAR_0",url.getPath());
  replaceVars.put("$VAR_2","streaming");
  replaceVars.put("$VAR_4",csvOutputPath);
  replaceVars.put("$VAR_UPDATE_MODE","update-mode: append");
  final Executor executor=createModifiedExecutor(clusterClient,replaceVars);
  final SessionContext session=new SessionContext("test-session",new Environment());
  try {
    final ProgramTargetDescriptor targetDescriptor=executor.executeUpdate(session,"INSERT INTO TableSourceSink SELECT IntegerField1 = 42, StringField1 FROM TableNumber1");
    boolean isRunning=true;
    while (isRunning) {
      Thread.sleep(50);
      final JobStatus jobStatus=clusterClient.getJobStatus(JobID.fromHexString(targetDescriptor.getJobId())).get();
switch (jobStatus) {
case CREATED:
case RUNNING:
        continue;
case FINISHED:
      isRunning=false;
    verifySinkResult(csvOutputPath);
  break;
default :
fail("Unexpected job status.");
}
}
}
  finally {
executor.stop(session);
}
}
