@Test public void testTimestampAndWatermarkQuerying() throws Exception {
  KeyedCoProcessOperator<String,Integer,String,String> operator=new KeyedCoProcessOperator<>(new WatermarkQueryingProcessFunction());
  TwoInputStreamOperatorTestHarness<Integer,String,String> testHarness=new KeyedTwoInputStreamOperatorTestHarness<>(operator,new IntToStringKeySelector<>(),new IdentityKeySelector<String>(),BasicTypeInfo.STRING_TYPE_INFO);
  testHarness.setup();
  testHarness.open();
  testHarness.processWatermark1(new Watermark(17));
  testHarness.processWatermark2(new Watermark(17));
  testHarness.processElement1(new StreamRecord<>(5,12L));
  testHarness.processWatermark1(new Watermark(42));
  testHarness.processWatermark2(new Watermark(42));
  testHarness.processElement2(new StreamRecord<>("6",13L));
  ConcurrentLinkedQueue<Object> expectedOutput=new ConcurrentLinkedQueue<>();
  expectedOutput.add(new Watermark(17L));
  expectedOutput.add(new StreamRecord<>("5WM:17 TS:12",12L));
  expectedOutput.add(new Watermark(42L));
  expectedOutput.add(new StreamRecord<>("6WM:42 TS:13",13L));
  TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
  testHarness.close();
}
