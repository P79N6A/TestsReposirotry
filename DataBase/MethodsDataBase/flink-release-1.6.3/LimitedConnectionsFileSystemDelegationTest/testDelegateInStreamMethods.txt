@Test public void testDelegateInStreamMethods() throws IOException {
  final FSDataInputStream mockIn=mock(FSDataInputStream.class);
  final int value=93;
  final int bytesRead=11;
  final long inPos=93;
  final int available=17;
  final boolean markSupported=true;
  when(mockIn.read()).thenReturn(value);
  when(mockIn.read(any(byte[].class),anyInt(),anyInt())).thenReturn(11);
  when(mockIn.getPos()).thenReturn(inPos);
  when(mockIn.available()).thenReturn(available);
  when(mockIn.markSupported()).thenReturn(markSupported);
  final FileSystem fs=mock(FileSystem.class);
  when(fs.open(any(Path.class))).thenReturn(mockIn);
  final LimitedConnectionsFileSystem lfs=new LimitedConnectionsFileSystem(fs,100);
  final FSDataInputStream in=lfs.open(mock(Path.class));
  assertEquals(value,in.read());
  assertEquals(bytesRead,in.read(new byte[11],2,5));
  assertEquals(inPos,in.getPos());
  in.seek(17876);
  verify(mockIn).seek(17876);
  assertEquals(available,in.available());
  assertEquals(markSupported,in.markSupported());
  in.mark(9876);
  verify(mockIn).mark(9876);
  in.close();
  verify(mockIn).close();
}
