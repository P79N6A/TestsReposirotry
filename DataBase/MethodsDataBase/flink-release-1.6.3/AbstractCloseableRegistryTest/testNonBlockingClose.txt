@Test public void testNonBlockingClose() throws Exception {
  setup(Integer.MAX_VALUE);
  final OneShotLatch waitRegistryClosedLatch=new OneShotLatch();
  final OneShotLatch blockCloseLatch=new OneShotLatch();
  final C spyCloseable=spy(createCloseable());
  doAnswer(invocationOnMock -> {
    invocationOnMock.callRealMethod();
    waitRegistryClosedLatch.trigger();
    blockCloseLatch.await();
    return null;
  }
).when(spyCloseable).close();
  closeableRegistry.registerCloseable(spyCloseable);
  Assert.assertEquals(1,closeableRegistry.getNumberOfRegisteredCloseables());
  Thread closer=new Thread(() -> {
    try {
      closeableRegistry.close();
    }
 catch (    IOException ignore) {
    }
  }
);
  closer.start();
  waitRegistryClosedLatch.await();
  final C testCloseable=spy(createCloseable());
  try {
    closeableRegistry.registerCloseable(testCloseable);
    Assert.fail("Closed registry should not accept closeables!");
  }
 catch (  IOException ignored) {
  }
  blockCloseLatch.trigger();
  closer.join();
  verify(spyCloseable).close();
  verify(testCloseable).close();
  Assert.assertEquals(0,closeableRegistry.getNumberOfRegisteredCloseables());
}
