@Test public void testReadCompositesNullsFile() throws Exception {
  rowOrcInputFormat=new OrcRowInputFormat(getPath(TEST_FILE_COMPOSITES_NULLS),TEST_SCHEMA_COMPOSITES_NULLS,new Configuration());
  FileInputSplit[] splits=rowOrcInputFormat.createInputSplits(1);
  assertEquals(1,splits.length);
  rowOrcInputFormat.openInputFormat();
  rowOrcInputFormat.open(splits[0]);
  assertFalse(rowOrcInputFormat.reachedEnd());
  Row row=null;
  long cnt=0;
  int structNullCnt=0;
  int nestedListNullCnt=0;
  int mapListNullCnt=0;
  while (!rowOrcInputFormat.reachedEnd()) {
    row=rowOrcInputFormat.nextRecord(row);
    assertEquals(4,row.getArity());
    assertTrue(row.getField(0) instanceof Integer);
    if (row.getField(1) == null) {
      structNullCnt++;
    }
 else {
      Object f=row.getField(1);
      assertTrue(f instanceof Row);
      assertEquals(2,((Row)f).getArity());
    }
    if (row.getField(2) == null) {
      nestedListNullCnt++;
    }
 else {
      Object f=row.getField(2);
      assertTrue(f instanceof Row[][][]);
      assertEquals(4,((Row[][][])f).length);
    }
    if (row.getField(3) == null) {
      mapListNullCnt++;
    }
 else {
      Object f=row.getField(3);
      assertTrue(f instanceof HashMap[]);
      assertEquals(3,((HashMap[])f).length);
    }
    cnt++;
  }
  assertEquals(2500,cnt);
  assertEquals(1250,structNullCnt);
  assertEquals(835,nestedListNullCnt);
  assertEquals(835,mapListNullCnt);
}
