@SuppressWarnings("unchecked") @Test public void testReadRepeatingValuesFile() throws IOException {
  rowOrcInputFormat=new OrcRowInputFormat(getPath(TEST_FILE_REPEATING),TEST_SCHEMA_REPEATING,new Configuration());
  FileInputSplit[] splits=rowOrcInputFormat.createInputSplits(1);
  assertEquals(1,splits.length);
  rowOrcInputFormat.openInputFormat();
  rowOrcInputFormat.open(splits[0]);
  assertFalse(rowOrcInputFormat.reachedEnd());
  Row row=null;
  long cnt=0;
  Row firstRow1=null;
  Integer[] firstList1=null;
  HashMap firstMap1=null;
  while (!rowOrcInputFormat.reachedEnd()) {
    cnt++;
    row=rowOrcInputFormat.nextRecord(row);
    assertEquals(10,row.getArity());
    assertNotNull(row.getField(0));
    assertTrue(row.getField(0) instanceof Integer);
    assertEquals(42,((Integer)row.getField(0)).intValue());
    assertNull(row.getField(1));
    assertNotNull(row.getField(2));
    assertTrue(row.getField(2) instanceof Integer);
    assertEquals(99,((Integer)row.getField(2)).intValue());
    assertNotNull(row.getField(3));
    assertTrue(row.getField(3) instanceof Row);
    Row nestedRow=(Row)row.getField(3);
    assertNotNull(nestedRow.getField(0));
    assertTrue(nestedRow.getField(0) instanceof Integer);
    assertEquals(23,((Integer)nestedRow.getField(0)).intValue());
    assertNull(nestedRow.getField(1));
    if (firstRow1 == null) {
      firstRow1=nestedRow;
    }
 else {
      assertTrue(firstRow1 != nestedRow);
    }
    assertNull(row.getField(4));
    assertNotNull(row.getField(5));
    assertTrue(row.getField(5) instanceof Integer[]);
    Integer[] list1=((Integer[])row.getField(5));
    assertEquals(1,list1[0].intValue());
    assertEquals(2,list1[1].intValue());
    assertEquals(3,list1[2].intValue());
    if (firstList1 == null) {
      firstList1=list1;
    }
 else {
      assertTrue(firstList1 != list1);
    }
    assertNotNull(row.getField(6));
    assertTrue(row.getField(6) instanceof Integer[]);
    Integer[] list2=((Integer[])row.getField(6));
    assertEquals(7,list2[0].intValue());
    assertEquals(7,list2[1].intValue());
    assertEquals(7,list2[2].intValue());
    assertNull(row.getField(7));
    assertNotNull(row.getField(8));
    assertTrue(row.getField(8) instanceof HashMap);
    HashMap<Integer,String> map=(HashMap<Integer,String>)row.getField(8);
    assertEquals(2,map.size());
    assertEquals("Hello",map.get(2));
    assertEquals("Hello",map.get(4));
    if (firstMap1 == null) {
      firstMap1=map;
    }
 else {
      assertTrue(firstMap1 != map);
    }
    assertNull(row.getField(9));
  }
  rowOrcInputFormat.close();
  rowOrcInputFormat.closeInputFormat();
  assertEquals(256,cnt);
}
