@Test public void testSplitStripesCustomSplits() throws IOException {
  rowOrcInputFormat=new OrcRowInputFormat(getPath(TEST_FILE_FLAT),TEST_SCHEMA_FLAT,new Configuration());
  OrcRowInputFormat spy=spy(rowOrcInputFormat);
  List<StripeInformation> stripes=new ArrayList<>();
  StripeInformation stripe1=mock(StripeInformation.class);
  when(stripe1.getOffset()).thenReturn(10L);
  when(stripe1.getLength()).thenReturn(90L);
  StripeInformation stripe2=mock(StripeInformation.class);
  when(stripe2.getOffset()).thenReturn(100L);
  when(stripe2.getLength()).thenReturn(100L);
  StripeInformation stripe3=mock(StripeInformation.class);
  when(stripe3.getOffset()).thenReturn(200L);
  when(stripe3.getLength()).thenReturn(100L);
  StripeInformation stripe4=mock(StripeInformation.class);
  when(stripe4.getOffset()).thenReturn(300L);
  when(stripe4.getLength()).thenReturn(100L);
  StripeInformation stripe5=mock(StripeInformation.class);
  when(stripe5.getOffset()).thenReturn(400L);
  when(stripe5.getLength()).thenReturn(100L);
  stripes.add(stripe1);
  stripes.add(stripe2);
  stripes.add(stripe3);
  stripes.add(stripe4);
  stripes.add(stripe5);
  doReturn(stripes).when(spy).getStripes(any());
  Reader.Options options=spy(new Reader.Options());
  doReturn(options).when(spy).getOptions(any());
  spy.openInputFormat();
  spy.open(new FileInputSplit(0,new Path(getPath(TEST_FILE_FLAT)),0,150,new String[]{}));
  verify(options).range(eq(10L),eq(190L));
  spy.open(new FileInputSplit(1,new Path(getPath(TEST_FILE_FLAT)),150,10,new String[]{}));
  verify(options).range(eq(0L),eq(0L));
  spy.open(new FileInputSplit(2,new Path(getPath(TEST_FILE_FLAT)),160,41,new String[]{}));
  verify(options).range(eq(200L),eq(100L));
  spy.open(new FileInputSplit(3,new Path(getPath(TEST_FILE_FLAT)),201,299,new String[]{}));
  verify(options).range(eq(300L),eq(200L));
}
