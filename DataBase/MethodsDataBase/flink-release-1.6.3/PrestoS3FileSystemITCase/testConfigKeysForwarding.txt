@Test public void testConfigKeysForwarding() throws Exception {
  final Path path=new Path("s3://" + BUCKET + '/'+ TEST_DATA_DIR);
{
    Configuration conf=new Configuration();
    conf.setString(S3_USE_INSTANCE_CREDENTIALS,"false");
    FileSystem.initialize(conf);
    try {
      path.getFileSystem().exists(path);
      fail("should fail with an exception");
    }
 catch (    IOException ignored) {
    }
  }
{
    Configuration conf=new Configuration();
    conf.setString(S3_USE_INSTANCE_CREDENTIALS,"false");
    conf.setString("presto.s3.access-key",ACCESS_KEY);
    conf.setString("presto.s3.secret-key",SECRET_KEY);
    FileSystem.initialize(conf);
    path.getFileSystem().exists(path);
  }
{
    Configuration conf=new Configuration();
    conf.setString(S3_USE_INSTANCE_CREDENTIALS,"false");
    conf.setString("s3.access-key",ACCESS_KEY);
    conf.setString("s3.secret-key",SECRET_KEY);
    FileSystem.initialize(conf);
    path.getFileSystem().exists(path);
  }
{
    Configuration conf=new Configuration();
    conf.setString(S3_USE_INSTANCE_CREDENTIALS,"false");
    conf.setString("s3.access.key",ACCESS_KEY);
    conf.setString("s3.secret.key",SECRET_KEY);
    FileSystem.initialize(conf);
    path.getFileSystem().exists(path);
  }
{
    Configuration conf=new Configuration();
    conf.setString(S3_USE_INSTANCE_CREDENTIALS,"false");
    conf.setString("presto.s3.access.key",ACCESS_KEY);
    conf.setString("presto.s3.secret.key",SECRET_KEY);
    FileSystem.initialize(conf);
    path.getFileSystem().exists(path);
  }
  FileSystem.initialize(new Configuration());
}
