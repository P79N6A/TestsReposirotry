@Test public void testJobManagerMetrics() throws Exception {
  assertEquals(1,TestReporter.OPENED_REPORTERS.size());
  TestReporter reporter=TestReporter.OPENED_REPORTERS.iterator().next();
  List<String> expectedPatterns=getExpectedPatterns();
  Collection<String> gaugeNames=reporter.getGauges().values();
  for (  String expectedPattern : expectedPatterns) {
    boolean found=false;
    for (    String gaugeName : gaugeNames) {
      if (gaugeName.matches(expectedPattern)) {
        found=true;
      }
    }
    if (!found) {
      fail(String.format("Failed to find gauge [%s] in registered gauges [%s]",expectedPattern,gaugeNames));
    }
  }
  for (  Map.Entry<Gauge<?>,String> entry : reporter.getGauges().entrySet()) {
    if (entry.getValue().contains(MetricNames.TASK_SLOTS_AVAILABLE)) {
      assertEquals(0L,entry.getKey().getValue());
    }
 else     if (entry.getValue().contains(MetricNames.TASK_SLOTS_TOTAL)) {
      assertEquals(1L,entry.getKey().getValue());
    }
 else     if (entry.getValue().contains(MetricNames.NUM_REGISTERED_TASK_MANAGERS)) {
      assertEquals(1L,entry.getKey().getValue());
    }
 else     if (entry.getValue().contains(MetricNames.NUM_RUNNING_JOBS)) {
      assertEquals(1L,entry.getKey().getValue());
    }
  }
  sync.releaseBlocker();
  jobExecuteThread.sync();
}
