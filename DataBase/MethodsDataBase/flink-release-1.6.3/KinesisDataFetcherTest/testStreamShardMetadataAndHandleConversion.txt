@Test public void testStreamShardMetadataAndHandleConversion(){
  String streamName="fakeStream1";
  String shardId="shard-000001";
  String parentShardId="shard-000002";
  String adjacentParentShardId="shard-000003";
  String startingHashKey="key-000001";
  String endingHashKey="key-000010";
  String startingSequenceNumber="seq-0000021";
  String endingSequenceNumber="seq-00000031";
  StreamShardMetadata kinesisStreamShard=new StreamShardMetadata();
  kinesisStreamShard.setStreamName(streamName);
  kinesisStreamShard.setShardId(shardId);
  kinesisStreamShard.setParentShardId(parentShardId);
  kinesisStreamShard.setAdjacentParentShardId(adjacentParentShardId);
  kinesisStreamShard.setStartingHashKey(startingHashKey);
  kinesisStreamShard.setEndingHashKey(endingHashKey);
  kinesisStreamShard.setStartingSequenceNumber(startingSequenceNumber);
  kinesisStreamShard.setEndingSequenceNumber(endingSequenceNumber);
  Shard shard=new Shard().withShardId(shardId).withParentShardId(parentShardId).withAdjacentParentShardId(adjacentParentShardId).withHashKeyRange(new HashKeyRange().withStartingHashKey(startingHashKey).withEndingHashKey(endingHashKey)).withSequenceNumberRange(new SequenceNumberRange().withStartingSequenceNumber(startingSequenceNumber).withEndingSequenceNumber(endingSequenceNumber));
  StreamShardHandle streamShardHandle=new StreamShardHandle(streamName,shard);
  assertEquals(kinesisStreamShard,KinesisDataFetcher.convertToStreamShardMetadata(streamShardHandle));
  assertEquals(streamShardHandle,KinesisDataFetcher.convertToStreamShardHandle(kinesisStreamShard));
}
