@Test public void testParallelismBounds(){
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  SourceFunction<Integer> srcFun=new SourceFunction<Integer>(){
    private static final long serialVersionUID=1L;
    @Override public void run(    SourceContext<Integer> ctx) throws Exception {
    }
    @Override public void cancel(){
    }
  }
;
  SingleOutputStreamOperator<Object> operator=env.addSource(srcFun).flatMap(new FlatMapFunction<Integer,Object>(){
    private static final long serialVersionUID=1L;
    @Override public void flatMap(    Integer value,    Collector<Object> out) throws Exception {
    }
  }
);
  Assert.assertEquals(-1,operator.getTransformation().getMaxParallelism());
  try {
    operator.setParallelism(0);
    Assert.fail();
  }
 catch (  IllegalArgumentException expected) {
  }
  operator.setParallelism(1);
  Assert.assertEquals(1,operator.getParallelism());
  operator.setParallelism(1 << 15);
  Assert.assertEquals(1 << 15,operator.getParallelism());
  env.getStreamGraph().getJobGraph();
  Assert.assertEquals(-1,operator.getTransformation().getMaxParallelism());
  env.setMaxParallelism(42);
  env.getStreamGraph().getJobGraph();
  Assert.assertEquals(42,operator.getTransformation().getMaxParallelism());
  try {
    env.setMaxParallelism(0);
    Assert.fail();
  }
 catch (  IllegalArgumentException expected) {
  }
  try {
    env.setMaxParallelism(1 + (1 << 15));
    Assert.fail();
  }
 catch (  IllegalArgumentException expected) {
  }
  try {
    operator.setMaxParallelism(0);
    Assert.fail();
  }
 catch (  IllegalArgumentException expected) {
  }
  try {
    operator.setMaxParallelism(1 + (1 << 15));
    Assert.fail();
  }
 catch (  IllegalArgumentException expected) {
  }
  operator.setMaxParallelism(1);
  Assert.assertEquals(1,operator.getTransformation().getMaxParallelism());
  operator.setMaxParallelism(1 << 15);
  Assert.assertEquals(1 << 15,operator.getTransformation().getMaxParallelism());
  env.getStreamGraph().getJobGraph();
  Assert.assertEquals(1 << 15,operator.getTransformation().getMaxParallelism());
}
