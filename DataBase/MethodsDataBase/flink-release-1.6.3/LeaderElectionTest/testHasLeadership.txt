@Test public void testHasLeadership() throws Exception {
  final LeaderElectionService leaderElectionService=serviceClass.createLeaderElectionService();
  final ManualLeaderContender manualLeaderContender=new ManualLeaderContender();
  try {
    assertThat(leaderElectionService.hasLeadership(UUID.randomUUID()),is(false));
    leaderElectionService.start(manualLeaderContender);
    final UUID leaderSessionId=manualLeaderContender.waitForLeaderSessionId();
    assertThat(leaderElectionService.hasLeadership(leaderSessionId),is(true));
    assertThat(leaderElectionService.hasLeadership(UUID.randomUUID()),is(false));
    leaderElectionService.confirmLeaderSessionID(leaderSessionId);
    assertThat(leaderElectionService.hasLeadership(leaderSessionId),is(true));
    leaderElectionService.stop();
    assertThat(leaderElectionService.hasLeadership(leaderSessionId),is(false));
  }
  finally {
    manualLeaderContender.rethrowError();
  }
}
