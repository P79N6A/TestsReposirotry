/** 
 * Tests that evicted  {@link ArchivedExecutionGraph} are loaded from disk again.
 */
@Test public void testCacheLoading() throws IOException {
  final File rootDir=temporaryFolder.newFolder();
  try (final FileArchivedExecutionGraphStore executionGraphStore=new FileArchivedExecutionGraphStore(rootDir,Time.hours(1L),100L << 10,TestingUtils.defaultScheduledExecutor(),Ticker.systemTicker())){
    final LoadingCache<JobID,ArchivedExecutionGraph> executionGraphCache=executionGraphStore.getArchivedExecutionGraphCache();
    Collection<ArchivedExecutionGraph> executionGraphs=new ArrayList<>(64);
    boolean continueInserting=true;
    while (continueInserting) {
      final ArchivedExecutionGraph executionGraph=new ArchivedExecutionGraphBuilder().setState(JobStatus.FINISHED).build();
      executionGraphStore.put(executionGraph);
      executionGraphs.add(executionGraph);
      continueInserting=executionGraphCache.size() == executionGraphs.size();
    }
    final File storageDirectory=executionGraphStore.getStorageDir();
    assertThat(storageDirectory.listFiles().length,Matchers.equalTo(executionGraphs.size()));
    for (    ArchivedExecutionGraph executionGraph : executionGraphs) {
      assertThat(executionGraphStore.get(executionGraph.getJobID()),matchesPartiallyWith(executionGraph));
    }
  }
 }
