/** 
 * This test checks the behavior for basic setting of local DB directories.
 */
@Test public void testSetDbPath() throws Exception {
  final RocksDBStateBackend rocksDbBackend=new RocksDBStateBackend(tempFolder.newFolder().toURI().toString());
  final String testDir1=tempFolder.newFolder().getAbsolutePath();
  final String testDir2=tempFolder.newFolder().getAbsolutePath();
  assertNull(rocksDbBackend.getDbStoragePaths());
  rocksDbBackend.setDbStoragePath(testDir1);
  assertArrayEquals(new String[]{testDir1},rocksDbBackend.getDbStoragePaths());
  rocksDbBackend.setDbStoragePath(null);
  assertNull(rocksDbBackend.getDbStoragePaths());
  rocksDbBackend.setDbStoragePaths(testDir1,testDir2);
  assertArrayEquals(new String[]{testDir1,testDir2},rocksDbBackend.getDbStoragePaths());
  final RocksDBKeyedStateBackend<Integer> keyedBackend=createKeyedStateBackend(rocksDbBackend);
  try {
    File instanceBasePath=keyedBackend.getInstanceBasePath();
    assertThat(instanceBasePath.getAbsolutePath(),anyOf(startsWith(testDir1),startsWith(testDir2)));
    rocksDbBackend.setDbStoragePaths(null);
    assertNull(rocksDbBackend.getDbStoragePaths());
  }
  finally {
    IOUtils.closeQuietly(keyedBackend);
    keyedBackend.dispose();
  }
}
