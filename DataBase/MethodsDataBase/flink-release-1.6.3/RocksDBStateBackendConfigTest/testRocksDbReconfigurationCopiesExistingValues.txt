@Test public void testRocksDbReconfigurationCopiesExistingValues() throws Exception {
  final FsStateBackend checkpointBackend=new FsStateBackend(tempFolder.newFolder().toURI().toString());
  final boolean incremental=!CheckpointingOptions.INCREMENTAL_CHECKPOINTS.defaultValue();
  final RocksDBStateBackend original=new RocksDBStateBackend(checkpointBackend,incremental);
  final PredefinedOptions predOptions=PredefinedOptions.SPINNING_DISK_OPTIMIZED_HIGH_MEM;
  assertNotEquals(predOptions,original.getPredefinedOptions());
  original.setPredefinedOptions(predOptions);
  final OptionsFactory optionsFactory=mock(OptionsFactory.class);
  original.setOptions(optionsFactory);
  final String[] localDirs=new String[]{tempFolder.newFolder().getAbsolutePath(),tempFolder.newFolder().getAbsolutePath()};
  original.setDbStoragePaths(localDirs);
  RocksDBStateBackend copy=original.configure(new Configuration());
  assertEquals(original.isIncrementalCheckpointsEnabled(),copy.isIncrementalCheckpointsEnabled());
  assertArrayEquals(original.getDbStoragePaths(),copy.getDbStoragePaths());
  assertEquals(original.getOptions(),copy.getOptions());
  assertEquals(original.getPredefinedOptions(),copy.getPredefinedOptions());
  FsStateBackend copyCheckpointBackend=(FsStateBackend)copy.getCheckpointBackend();
  assertEquals(checkpointBackend.getCheckpointPath(),copyCheckpointBackend.getCheckpointPath());
  assertEquals(checkpointBackend.getSavepointPath(),copyCheckpointBackend.getSavepointPath());
}
