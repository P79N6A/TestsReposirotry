/** 
 * This test is meant to assure that testAtLeastOnceSink is valid by testing that if flushing is disabled, the snapshot method does indeed finishes without waiting for pending requests; we set a timeout because the test will not finish if the logic is broken.
 */
@Test(timeout=5000) public void testDoesNotWaitForPendingRequestsIfFlushingDisabled() throws Exception {
  final DummyElasticsearchSink<String> sink=new DummyElasticsearchSink<>(new HashMap<String,String>(),new SimpleSinkFunction<String>(),new DummyRetryFailureHandler());
  sink.disableFlushOnCheckpoint();
  final OneInputStreamOperatorTestHarness<String,Object> testHarness=new OneInputStreamOperatorTestHarness<>(new StreamSink<>(sink));
  testHarness.open();
  sink.setMockItemFailuresListForNextBulkItemResponses(Collections.singletonList(new Exception("artificial failure for record")));
  testHarness.processElement(new StreamRecord<>("msg-1"));
  verify(sink.getMockBulkProcessor(),times(1)).add(any(IndexRequest.class));
  testHarness.snapshot(1L,1000L);
  testHarness.close();
}
