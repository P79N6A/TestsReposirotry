@Test public void testConnectFailure() throws Exception {
  ActorSystem actorSystem=null;
  RpcService rpcService=null;
  try {
    actorSystem=AkkaUtils.createActorSystem(new Configuration(),Option.<Tuple2<String,Object>>apply(new Tuple2<>("localhost",0)));
    rpcService=new AkkaRpcService(actorSystem,Time.of(10000000,TimeUnit.SECONDS));
    CompletableFuture<TaskExecutorGateway> future=rpcService.connect("foo.bar.com.test.invalid",TaskExecutorGateway.class);
    future.get(10000000,TimeUnit.SECONDS);
    fail("should never complete normally");
  }
 catch (  TimeoutException e) {
    fail("should not fail with a generic timeout exception");
  }
catch (  ExecutionException e) {
    assertTrue(e.getCause() instanceof RpcConnectionException);
    assertTrue("wrong error message",e.getCause().getMessage().contains("foo.bar.com.test.invalid"));
  }
catch (  Throwable t) {
    fail("wrong exception: " + t);
  }
 finally {
    final CompletableFuture<Void> rpcTerminationFuture;
    if (rpcService != null) {
      rpcTerminationFuture=rpcService.stopService();
    }
 else {
      rpcTerminationFuture=CompletableFuture.completedFuture(null);
    }
    final CompletableFuture<Terminated> actorSystemTerminationFuture;
    if (actorSystem != null) {
      actorSystemTerminationFuture=FutureUtils.toJava(actorSystem.terminate());
    }
 else {
      actorSystemTerminationFuture=CompletableFuture.completedFuture(null);
    }
    FutureUtils.waitForAll(Arrays.asList(rpcTerminationFuture,actorSystemTerminationFuture)).get();
  }
}
