/** 
 * Tests the failure response with  {@link UnknownKvStateIdException} as cause onqueries for unregistered KvStateIDs.
 */
@Test public void testQueryUnknownKvStateID() throws Exception {
  KvStateRegistry registry=new KvStateRegistry();
  AtomicKvStateRequestStats stats=new AtomicKvStateRequestStats();
  MessageSerializer<KvStateInternalRequest,KvStateResponse> serializer=new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(),new KvStateResponse.KvStateResponseDeserializer());
  KvStateServerHandler handler=new KvStateServerHandler(testServer,registry,serializer,stats);
  EmbeddedChannel channel=new EmbeddedChannel(getFrameDecoder(),handler);
  long requestId=Integer.MAX_VALUE + 182828L;
  KvStateInternalRequest request=new KvStateInternalRequest(new KvStateID(),new byte[0]);
  ByteBuf serRequest=MessageSerializer.serializeRequest(channel.alloc(),requestId,request);
  channel.writeInbound(serRequest);
  ByteBuf buf=(ByteBuf)readInboundBlocking(channel);
  buf.skipBytes(4);
  assertEquals(MessageType.REQUEST_FAILURE,MessageSerializer.deserializeHeader(buf));
  RequestFailure response=MessageSerializer.deserializeRequestFailure(buf);
  assertEquals(requestId,response.getRequestId());
  assertTrue("Did not respond with expected failure cause",response.getCause() instanceof UnknownKvStateIdException);
  assertEquals(1L,stats.getNumRequests());
  assertEquals(1L,stats.getNumFailed());
}
