/** 
 * Tests that the channel is closed if an Exception reaches the channel handler.
 */
@Test public void testCloseChannelOnExceptionCaught() throws Exception {
  KvStateRegistry registry=new KvStateRegistry();
  AtomicKvStateRequestStats stats=new AtomicKvStateRequestStats();
  MessageSerializer<KvStateInternalRequest,KvStateResponse> serializer=new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(),new KvStateResponse.KvStateResponseDeserializer());
  KvStateServerHandler handler=new KvStateServerHandler(testServer,registry,serializer,stats);
  EmbeddedChannel channel=new EmbeddedChannel(handler);
  channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"));
  ByteBuf buf=(ByteBuf)readInboundBlocking(channel);
  buf.skipBytes(4);
  assertEquals(MessageType.SERVER_FAILURE,MessageSerializer.deserializeHeader(buf));
  Throwable response=MessageSerializer.deserializeServerFailure(buf);
  assertTrue(response.getMessage().contains("Expected test Exception"));
  channel.closeFuture().await(READ_TIMEOUT_MILLIS);
  assertFalse(channel.isActive());
}
