/** 
 * Tests response on unexpected messages.
 */
@Test public void testUnexpectedMessage() throws Exception {
  KvStateRegistry registry=new KvStateRegistry();
  AtomicKvStateRequestStats stats=new AtomicKvStateRequestStats();
  MessageSerializer<KvStateInternalRequest,KvStateResponse> serializer=new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(),new KvStateResponse.KvStateResponseDeserializer());
  KvStateServerHandler handler=new KvStateServerHandler(testServer,registry,serializer,stats);
  EmbeddedChannel channel=new EmbeddedChannel(getFrameDecoder(),handler);
  ByteBuf unexpectedMessage=Unpooled.buffer(8);
  unexpectedMessage.writeInt(4);
  unexpectedMessage.writeInt(123238213);
  channel.writeInbound(unexpectedMessage);
  ByteBuf buf=(ByteBuf)readInboundBlocking(channel);
  buf.skipBytes(4);
  assertEquals(MessageType.SERVER_FAILURE,MessageSerializer.deserializeHeader(buf));
  Throwable response=MessageSerializer.deserializeServerFailure(buf);
  assertEquals(0L,stats.getNumRequests());
  assertEquals(0L,stats.getNumFailed());
  KvStateResponse stateResponse=new KvStateResponse(new byte[0]);
  unexpectedMessage=MessageSerializer.serializeResponse(channel.alloc(),192L,stateResponse);
  channel.writeInbound(unexpectedMessage);
  buf=(ByteBuf)readInboundBlocking(channel);
  buf.skipBytes(4);
  assertEquals(MessageType.SERVER_FAILURE,MessageSerializer.deserializeHeader(buf));
  response=MessageSerializer.deserializeServerFailure(buf);
  assertTrue("Unexpected failure cause " + response.getClass().getName(),response instanceof IllegalArgumentException);
  assertEquals(0L,stats.getNumRequests());
  assertEquals(0L,stats.getNumFailed());
}
