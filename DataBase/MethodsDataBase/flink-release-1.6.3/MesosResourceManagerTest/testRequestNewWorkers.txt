/** 
 * Test request for new workers.
 */
@Test public void testRequestNewWorkers() throws Exception {
  new Context(){
{
      startResourceManager();
      when(rmServices.workerStore.newTaskID()).thenReturn(task1).thenThrow(new AssertionFailedError());
      rmServices.slotManagerStarted.get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
      CompletableFuture<Void> allocateResourceFuture=resourceManager.callAsync(() -> {
        rmServices.rmActions.allocateResource(resourceProfile1);
        return null;
      }
,timeout);
      allocateResourceFuture.get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
      MesosWorkerStore.Worker expected=MesosWorkerStore.Worker.newWorker(task1,resourceProfile1);
      verify(rmServices.workerStore,Mockito.timeout(timeout.toMilliseconds())).putWorker(expected);
      assertThat(resourceManager.workersInNew,hasEntry(extractResourceID(task1),expected));
      resourceManager.taskRouter.expectMsgClass(TaskMonitor.TaskGoalStateUpdated.class);
      resourceManager.launchCoordinator.expectMsgClass(LaunchCoordinator.Launch.class);
    }
  }
;
}
