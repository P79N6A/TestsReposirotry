/** 
 * Test planned stop of a launched worker.
 */
@Test public void testStopWorker() throws Exception {
  new Context(){
{
      MesosWorkerStore.Worker worker1launched=MesosWorkerStore.Worker.newWorker(task1).launchWorker(slave1,slave1host);
      when(rmServices.workerStore.getFrameworkID()).thenReturn(Option.apply(framework1));
      when(rmServices.workerStore.recoverWorkers()).thenReturn(singletonList(worker1launched));
      startResourceManager();
      resourceManager.launchCoordinator.expectMsgClass(LaunchCoordinator.Assign.class);
      resourceManager.stopWorker(new RegisteredMesosWorkerNode(worker1launched));
      MesosWorkerStore.Worker worker1Released=worker1launched.releaseWorker();
      verify(rmServices.workerStore).putWorker(worker1Released);
      assertThat(resourceManager.workersInLaunch.entrySet(),empty());
      assertThat(resourceManager.workersBeingReturned,hasEntry(extractResourceID(task1),worker1Released));
      resourceManager.taskRouter.expectMsgClass(TaskMonitor.TaskGoalStateUpdated.class);
      resourceManager.launchCoordinator.expectMsgClass(LaunchCoordinator.Unassign.class);
    }
  }
;
}
