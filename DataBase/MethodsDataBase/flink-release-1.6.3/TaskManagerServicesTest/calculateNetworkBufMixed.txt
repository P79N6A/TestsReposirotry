/** 
 * Test for  {@link TaskManagerServices#calculateNetworkBufferMemory(long,Configuration)} using mixedold/new configurations.
 */
@SuppressWarnings("deprecation") @Test public void calculateNetworkBufMixed() throws Exception {
  Configuration config=new Configuration();
  config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS,1);
  final Float defaultFrac=TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue();
  final Long defaultMin=MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()).getBytes();
  final Long defaultMax=MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()).getBytes();
  Configuration config1=config.clone();
  config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION,0.1f);
  assertEquals(enforceBounds((long)(0.1f * (10L << 20)),defaultMin,defaultMax),TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1),config1));
  assertEquals(enforceBounds((long)(0.1f * (10L << 30)),defaultMin,defaultMax),TaskManagerServices.calculateNetworkBufferMemory((10L << 30),config1));
  config1=config.clone();
  long newMin=MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes();
  config1.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN,String.valueOf(newMin));
  assertEquals(enforceBounds((long)(defaultFrac * (10L << 20)),newMin,defaultMax),TaskManagerServices.calculateNetworkBufferMemory((10L << 20),config1));
  assertEquals(enforceBounds((long)(defaultFrac * (10L << 30)),newMin,defaultMax),TaskManagerServices.calculateNetworkBufferMemory((10L << 30),config1));
  config1=config.clone();
  long newMax=Math.max(64L << 20 + 1,MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()).getBytes());
  config1.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX,String.valueOf(newMax));
  assertEquals(enforceBounds((long)(defaultFrac * (10L << 20)),defaultMin,newMax),TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1),config1));
  assertEquals(enforceBounds((long)(defaultFrac * (10L << 30)),defaultMin,newMax),TaskManagerServices.calculateNetworkBufferMemory((10L << 30),config1));
  assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1));
  calculateNetworkBufNew(config);
}
