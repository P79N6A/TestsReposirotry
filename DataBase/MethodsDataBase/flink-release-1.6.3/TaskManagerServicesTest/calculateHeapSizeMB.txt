/** 
 * Test for  {@link TaskManagerServices#calculateHeapSizeMB(long,Configuration)} with somemanually calculated scenarios.
 */
@Test public void calculateHeapSizeMB() throws Exception {
  Configuration config=new Configuration();
  config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION,0.1f);
  config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN,String.valueOf(64L << 20));
  config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX,String.valueOf(1L << 30));
  config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP,false);
  assertEquals(900,TaskManagerServices.calculateHeapSizeMB(1000,config));
  config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP,false);
  config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION,0.2f);
  assertEquals(800,TaskManagerServices.calculateHeapSizeMB(1000,config));
  config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP,true);
  config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION,0.1f);
  config.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE,"10m");
  assertEquals(890,TaskManagerServices.calculateHeapSizeMB(1000,config));
  config.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE,"0");
  config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION,0.1f);
  assertEquals(810,TaskManagerServices.calculateHeapSizeMB(1000,config));
}
