/** 
 * This tests that the creation of  {@link TaskManagerServices} correctly creates the local state root directoryfor the  {@link TaskExecutorLocalStateStoresManager} with the configured root directory.
 */
@Test public void testCreationFromConfig() throws Exception {
  final Configuration config=new Configuration();
  File newFolder=temporaryFolder.newFolder();
  String tmpDir=newFolder.getAbsolutePath() + File.separator;
  final String rootDirString="__localStateRoot1,__localStateRoot2,__localStateRoot3".replaceAll("__",tmpDir);
  config.setString(CheckpointingOptions.LOCAL_RECOVERY_TASK_MANAGER_STATE_ROOT_DIRS,rootDirString);
  config.setBoolean(CheckpointingOptions.LOCAL_RECOVERY,true);
  final ResourceID tmResourceID=ResourceID.generate();
  TaskManagerServicesConfiguration taskManagerServicesConfiguration=TaskManagerServicesConfiguration.fromConfiguration(config,InetAddress.getLocalHost(),true);
  TaskManagerServices taskManagerServices=TaskManagerServices.fromConfiguration(taskManagerServicesConfiguration,tmResourceID,Executors.directExecutor(),MEM_SIZE_PARAM,MEM_SIZE_PARAM);
  TaskExecutorLocalStateStoresManager taskStateManager=taskManagerServices.getTaskManagerStateStore();
  String[] split=rootDirString.split(",");
  File[] rootDirectories=taskStateManager.getLocalStateRootDirectories();
  for (int i=0; i < split.length; ++i) {
    Assert.assertEquals(new File(split[i],TaskManagerServices.LOCAL_STATE_SUB_DIRECTORY_ROOT),rootDirectories[i]);
  }
  Assert.assertTrue(taskStateManager.isLocalRecoveryEnabled());
  Assert.assertEquals("localState",TaskManagerServices.LOCAL_STATE_SUB_DIRECTORY_ROOT);
  for (  File rootDirectory : rootDirectories) {
    FileUtils.deleteFileOrDirectory(rootDirectory);
  }
}
