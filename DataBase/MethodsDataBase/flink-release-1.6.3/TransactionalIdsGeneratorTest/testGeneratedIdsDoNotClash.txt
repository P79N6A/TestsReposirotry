/** 
 * Ids to abort and to use should never clash between subtasks.
 */
@Test public void testGeneratedIdsDoNotClash(){
  List<Set<String>> idsToAbort=new ArrayList<>();
  List<Set<String>> idsToUse=new ArrayList<>();
  for (int subtask=0; subtask < SUBTASKS_COUNT; subtask++) {
    TransactionalIdsGenerator generator=new TransactionalIdsGenerator("test",subtask,SUBTASKS_COUNT,POOL_SIZE,SAFE_SCALE_DOWN_FACTOR);
    idsToUse.add(generator.generateIdsToUse(0));
    idsToAbort.add(generator.generateIdsToAbort());
  }
  for (int subtask1=0; subtask1 < SUBTASKS_COUNT; subtask1++) {
    for (int subtask2=0; subtask2 < SUBTASKS_COUNT; subtask2++) {
      if (subtask2 == subtask1) {
        continue;
      }
      assertDisjoint(idsToAbort.get(subtask2),idsToAbort.get(subtask1));
      assertDisjoint(idsToUse.get(subtask2),idsToUse.get(subtask1));
      assertDisjoint(idsToAbort.get(subtask2),idsToUse.get(subtask1));
    }
  }
}
