/** 
 * This test is meant to assure that testAtLeastOnceProducer is valid by testing that if flushing is disabled, the snapshot method does indeed finishes without waiting for pending records; we set a timeout because the test will not finish if the logic is broken.
 */
@SuppressWarnings("unchecked") @Test(timeout=5000) public void testDoesNotWaitForPendingRecordsIfFlushingDisabled() throws Throwable {
  final DummyFlinkKafkaProducer<String> producer=new DummyFlinkKafkaProducer<>(FakeStandardProducerConfig.get(),new KeyedSerializationSchemaWrapper<>(new SimpleStringSchema()),null);
  producer.setFlushOnCheckpoint(false);
  final KafkaProducer<?,?> mockProducer=producer.getMockKafkaProducer();
  final OneInputStreamOperatorTestHarness<String,Object> testHarness=new OneInputStreamOperatorTestHarness<>(new StreamSink<>(producer));
  testHarness.open();
  testHarness.processElement(new StreamRecord<>("msg"));
  verify(mockProducer,times(1)).send(any(ProducerRecord.class),any(Callback.class));
  testHarness.snapshot(123L,123L);
  testHarness.close();
}
