@Test public void testHandleRequest() throws Exception {
  final JobID jobID=new JobID();
  final JobVertexID jobVertexID=new JobVertexID();
  final long deployingTs=System.currentTimeMillis() - 1024;
  final long finishedTs=System.currentTimeMillis();
  final long bytesInLocal=1L;
  final long bytesInRemote=2L;
  final long bytesOut=10L;
  final long recordsIn=20L;
  final long recordsOut=30L;
  final IOMetrics ioMetrics=new IOMetrics(bytesInLocal,bytesInRemote,bytesOut,recordsIn,recordsOut,0.0,0.0,0.0,0.0,0.0);
  final long[] timestamps=new long[ExecutionState.values().length];
  timestamps[ExecutionState.DEPLOYING.ordinal()]=deployingTs;
  final ExecutionState expectedState=ExecutionState.FINISHED;
  timestamps[expectedState.ordinal()]=finishedTs;
  final LocalTaskManagerLocation assignedResourceLocation=new LocalTaskManagerLocation();
  final AllocationID allocationID=new AllocationID();
  final int subtaskIndex=1;
  final int attempt=2;
  final ArchivedExecution execution=new ArchivedExecution(new StringifiedAccumulatorResult[0],ioMetrics,new ExecutionAttemptID(),attempt,expectedState,null,assignedResourceLocation,allocationID,subtaskIndex,timestamps);
  final ArchivedExecutionVertex executionVertex=new ArchivedExecutionVertex(subtaskIndex,"Test archived execution vertex",execution,new EvictingBoundedList<>(0));
  final RestHandlerConfiguration restHandlerConfiguration=RestHandlerConfiguration.fromConfiguration(new Configuration());
  final MetricFetcher<?> metricFetcher=new MetricFetcher<>(() -> null,path -> null,TestingUtils.defaultExecutor(),Time.milliseconds(1000L));
  final SubtaskCurrentAttemptDetailsHandler handler=new SubtaskCurrentAttemptDetailsHandler(CompletableFuture.completedFuture("127.0.0.1:9527"),() -> null,Time.milliseconds(100),Collections.emptyMap(),SubtaskCurrentAttemptDetailsHeaders.getInstance(),new ExecutionGraphCache(restHandlerConfiguration.getTimeout(),Time.milliseconds(restHandlerConfiguration.getRefreshInterval())),TestingUtils.defaultExecutor(),metricFetcher);
  final HashMap<String,String> receivedPathParameters=new HashMap<>(2);
  receivedPathParameters.put(JobIDPathParameter.KEY,jobID.toString());
  receivedPathParameters.put(JobVertexIdPathParameter.KEY,jobVertexID.toString());
  final HandlerRequest<EmptyRequestBody,SubtaskMessageParameters> request=new HandlerRequest<>(EmptyRequestBody.getInstance(),new SubtaskMessageParameters(),receivedPathParameters,Collections.emptyMap());
  final SubtaskExecutionAttemptDetailsInfo detailsInfo=handler.handleRequest(request,executionVertex);
  final IOMetricsInfo ioMetricsInfo=new IOMetricsInfo(bytesInLocal + bytesInRemote,true,bytesOut,true,recordsIn,true,recordsOut,true);
  final SubtaskExecutionAttemptDetailsInfo expectedDetailsInfo=new SubtaskExecutionAttemptDetailsInfo(subtaskIndex,expectedState,attempt,assignedResourceLocation.getHostname(),deployingTs,finishedTs,finishedTs - deployingTs,ioMetricsInfo);
  assertEquals(expectedDetailsInfo,detailsInfo);
}
