@Test public void testRepeatingPatternWSameElement() throws Exception {
  List<StreamRecord<Event>> inputEvents=new ArrayList<>();
  Event startEvent=new Event(40,"c",1.0);
  Event middle1Event1=new Event(40,"a",2.0);
  Event middle1Event2=new Event(40,"a",3.0);
  Event middle1Event3=new Event(40,"a",4.0);
  Event middle2Event1=new Event(40,"b",5.0);
  inputEvents.add(new StreamRecord<>(startEvent,1));
  inputEvents.add(new StreamRecord<>(middle1Event1,3));
  inputEvents.add(new StreamRecord<>(middle1Event1,3));
  inputEvents.add(new StreamRecord<>(middle1Event2,3));
  inputEvents.add(new StreamRecord<>(new Event(40,"d",6.0),5));
  inputEvents.add(new StreamRecord<>(middle2Event1,6));
  inputEvents.add(new StreamRecord<>(middle1Event3,7));
  Pattern<Event,?> pattern=Pattern.<Event>begin("start").where(new SimpleCondition<Event>(){
    private static final long serialVersionUID=5726188262756267490L;
    @Override public boolean filter(    Event value) throws Exception {
      return value.getName().equals("c");
    }
  }
).followedBy("middle1").where(new SimpleCondition<Event>(){
    private static final long serialVersionUID=5726188262756267490L;
    @Override public boolean filter(    Event value) throws Exception {
      return value.getName().equals("a");
    }
  }
).oneOrMore().optional().followedBy("middle2").where(new SimpleCondition<Event>(){
    private static final long serialVersionUID=5726188262756267490L;
    @Override public boolean filter(    Event value) throws Exception {
      return value.getName().equals("b");
    }
  }
).optional().followedBy("end").where(new SimpleCondition<Event>(){
    private static final long serialVersionUID=5726188262756267490L;
    @Override public boolean filter(    Event value) throws Exception {
      return value.getName().equals("a");
    }
  }
);
  NFA<Event> nfa=compile(pattern,false);
  final List<List<Event>> resultingPatterns=feedNFA(inputEvents,nfa);
  compareMaps(resultingPatterns,Lists.<List<Event>>newArrayList(Lists.newArrayList(startEvent,middle1Event1),Lists.newArrayList(startEvent,middle1Event1,middle1Event1),Lists.newArrayList(startEvent,middle2Event1,middle1Event3),Lists.newArrayList(startEvent,middle1Event1,middle1Event1,middle1Event2),Lists.newArrayList(startEvent,middle1Event1,middle2Event1,middle1Event3),Lists.newArrayList(startEvent,middle1Event1,middle1Event1,middle1Event2,middle1Event3),Lists.newArrayList(startEvent,middle1Event1,middle1Event1,middle2Event1,middle1Event3),Lists.newArrayList(startEvent,middle1Event1,middle1Event1,middle1Event2,middle2Event1,middle1Event3)));
}
