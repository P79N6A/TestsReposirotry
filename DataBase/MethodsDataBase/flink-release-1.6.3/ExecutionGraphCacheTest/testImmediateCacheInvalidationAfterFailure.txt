/** 
 * Tests that a failure in requesting an AccessExecutionGraph from the gateway, will not create a cache entry --> another cache request will trigger a new gateway request.
 */
@Test public void testImmediateCacheInvalidationAfterFailure() throws Exception {
  final Time timeout=Time.milliseconds(100L);
  final Time timeToLive=Time.hours(1L);
  final CountingRestfulGateway restfulGateway=createCountingRestfulGateway(expectedJobId,FutureUtils.completedExceptionally(new FlinkJobNotFoundException(expectedJobId)),CompletableFuture.completedFuture(expectedExecutionGraph));
  try (ExecutionGraphCache executionGraphCache=new ExecutionGraphCache(timeout,timeToLive)){
    CompletableFuture<AccessExecutionGraph> executionGraphFuture=executionGraphCache.getExecutionGraph(expectedJobId,restfulGateway);
    try {
      executionGraphFuture.get();
      fail("The execution graph future should have been completed exceptionally.");
    }
 catch (    ExecutionException ee) {
      assertTrue(ee.getCause() instanceof FlinkException);
    }
    CompletableFuture<AccessExecutionGraph> executionGraphFuture2=executionGraphCache.getExecutionGraph(expectedJobId,restfulGateway);
    assertEquals(expectedExecutionGraph,executionGraphFuture2.get());
  }
 }
