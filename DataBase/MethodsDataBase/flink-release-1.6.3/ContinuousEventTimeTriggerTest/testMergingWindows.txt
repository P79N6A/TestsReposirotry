@Test public void testMergingWindows() throws Exception {
  TriggerTestHarness<Object,TimeWindow> testHarness=new TriggerTestHarness<>(ContinuousEventTimeTrigger.<TimeWindow>of(Time.hours(1)),new TimeWindow.Serializer());
  assertTrue(ContinuousEventTimeTrigger.<TimeWindow>of(Time.hours(1)).canMerge());
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(0,2)));
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(2,4)));
  assertEquals(2,testHarness.numStateEntries());
  assertEquals(0,testHarness.numProcessingTimeTimers());
  assertEquals(4,testHarness.numEventTimeTimers());
  assertEquals(2,testHarness.numEventTimeTimers(new TimeWindow(0,2)));
  assertEquals(2,testHarness.numEventTimeTimers(new TimeWindow(2,4)));
  testHarness.mergeWindows(new TimeWindow(0,4),Lists.newArrayList(new TimeWindow(0,2),new TimeWindow(2,4)));
  assertEquals(1,testHarness.numStateEntries());
  assertEquals(0,testHarness.numProcessingTimeTimers());
  assertEquals(5,testHarness.numEventTimeTimers());
  assertEquals(2,testHarness.numEventTimeTimers(new TimeWindow(0,2)));
  assertEquals(2,testHarness.numEventTimeTimers(new TimeWindow(2,4)));
  assertEquals(1,testHarness.numEventTimeTimers(new TimeWindow(0,4)));
  Collection<Tuple2<TimeWindow,TriggerResult>> triggerResults=testHarness.advanceWatermark(4);
  boolean sawFiring=false;
  for (  Tuple2<TimeWindow,TriggerResult> r : triggerResults) {
    if (r.f0.equals(new TimeWindow(0,4))) {
      sawFiring=true;
      assertTrue(r.f1.equals(TriggerResult.FIRE));
    }
  }
  assertTrue(sawFiring);
  assertEquals(1,testHarness.numStateEntries());
  assertEquals(0,testHarness.numProcessingTimeTimers());
  assertEquals(1,testHarness.numEventTimeTimers());
}
