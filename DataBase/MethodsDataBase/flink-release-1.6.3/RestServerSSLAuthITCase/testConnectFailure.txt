@Test public void testConnectFailure() throws Exception {
  RestClient restClient=null;
  RestServerEndpoint serverEndpoint=null;
  try {
    final Configuration baseConfig=new Configuration();
    baseConfig.setInteger(RestOptions.PORT,0);
    baseConfig.setString(RestOptions.ADDRESS,"localhost");
    baseConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED,true);
    baseConfig.setBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED,true);
    baseConfig.setString(SecurityOptions.SSL_ALGORITHMS,"TLS_RSA_WITH_AES_128_CBC_SHA");
    Configuration serverConfig=new Configuration(baseConfig);
    serverConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE,TRUST_STORE_FILE);
    serverConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD,"password");
    serverConfig.setString(SecurityOptions.SSL_REST_KEYSTORE,KEY_STORE_FILE);
    serverConfig.setString(SecurityOptions.SSL_REST_KEYSTORE_PASSWORD,"password");
    serverConfig.setString(SecurityOptions.SSL_REST_KEY_PASSWORD,"password");
    Configuration clientConfig=new Configuration(baseConfig);
    clientConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE,UNTRUSTED_KEY_STORE_FILE);
    clientConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD,"password");
    clientConfig.setString(SecurityOptions.SSL_REST_KEYSTORE,KEY_STORE_FILE);
    clientConfig.setString(SecurityOptions.SSL_REST_KEYSTORE_PASSWORD,"password");
    clientConfig.setString(SecurityOptions.SSL_REST_KEY_PASSWORD,"password");
    RestServerEndpointConfiguration restServerConfig=RestServerEndpointConfiguration.fromConfiguration(serverConfig);
    RestClientConfiguration restClientConfig=RestClientConfiguration.fromConfiguration(clientConfig);
    RestfulGateway restfulGateway=TestingRestfulGateway.newBuilder().build();
    RestServerEndpointITCase.TestHandler testVersionHandler=new RestServerEndpointITCase.TestHandler(CompletableFuture.completedFuture("http://localhost:1234"),() -> CompletableFuture.completedFuture(restfulGateway),RpcUtils.INF_TIMEOUT);
    serverEndpoint=new RestServerEndpointITCase.TestRestServerEndpoint(restServerConfig,Arrays.asList(Tuple2.of(testVersionHandler.getMessageHeaders(),testVersionHandler)));
    restClient=new RestServerEndpointITCase.TestRestClient(restClientConfig);
    serverEndpoint.start();
    final RestServerEndpointITCase.TestParameters messageParameters=new RestServerEndpointITCase.TestParameters();
    final JobID jobID=new JobID();
    messageParameters.jobIDPathParameter.resolve(jobID);
    messageParameters.jobIDQueryParameter.resolve(Collections.singletonList(jobID));
    CompletableFuture<RestServerEndpointITCase.TestResponse> response=restClient.sendRequest(serverEndpoint.getServerAddress().getHostName(),serverEndpoint.getServerAddress().getPort(),new RestServerEndpointITCase.TestHeaders(),messageParameters,new RestServerEndpointITCase.TestRequest(1),Collections.emptyList());
    response.get(60,TimeUnit.SECONDS);
    fail("should never complete normally");
  }
 catch (  ExecutionException exception) {
    assertTrue(ExceptionUtils.findThrowable(exception,SSLHandshakeException.class).isPresent());
  }
 finally {
    if (restClient != null) {
      restClient.shutdown(timeout);
    }
    if (serverEndpoint != null) {
      serverEndpoint.close();
    }
  }
}
