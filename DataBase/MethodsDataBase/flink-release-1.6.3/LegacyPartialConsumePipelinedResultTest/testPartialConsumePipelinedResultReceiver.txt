/** 
 * Tests a fix for FLINK-1930. <p>When consuming a pipelined result only partially, is is possible that local channels release the buffer pool, which is associated with the result partition, too early.  If the producer is still producing data when this happens, it runs into an IllegalStateException, because of the destroyed buffer pool.
 * @see <a href="https://issues.apache.org/jira/browse/FLINK-1930">FLINK-1930</a>
 */
@Test public void testPartialConsumePipelinedResultReceiver() throws Exception {
  final JobVertex sender=new JobVertex("Sender");
  sender.setInvokableClass(SlowBufferSender.class);
  sender.setParallelism(PARALLELISM);
  final JobVertex receiver=new JobVertex("Receiver");
  receiver.setInvokableClass(SingleBufferReceiver.class);
  receiver.setParallelism(PARALLELISM);
  receiver.connectNewDataSetAsInput(sender,DistributionPattern.POINTWISE,ResultPartitionType.PIPELINED);
  final JobGraph jobGraph=new JobGraph("Partial Consume of Pipelined Result",sender,receiver);
  final SlotSharingGroup slotSharingGroup=new SlotSharingGroup(sender.getID(),receiver.getID());
  sender.setSlotSharingGroup(slotSharingGroup);
  receiver.setSlotSharingGroup(slotSharingGroup);
  flink.submitJobAndWait(jobGraph,false,TestingUtils.TESTING_DURATION());
}
