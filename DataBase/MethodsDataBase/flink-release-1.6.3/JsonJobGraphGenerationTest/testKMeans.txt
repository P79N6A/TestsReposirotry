@Test public void testKMeans(){
  try {
    try {
      final int parallelism=1;
      JsonValidator validator=new GenericValidator(parallelism,9);
      TestingExecutionEnvironment.setAsNext(validator,parallelism);
      KMeans.main(new String[0]);
    }
 catch (    AbortError ignored) {
    }
    try {
      final int parallelism=42;
      JsonValidator validator=new GenericValidator(parallelism,9);
      TestingExecutionEnvironment.setAsNext(validator,parallelism);
      String tmpDir=tempFolder.newFolder().getAbsolutePath();
      KMeans.main(new String[]{"--points",tmpDir,"--centroids",tmpDir,"--output",tmpDir,"--iterations","100"});
    }
 catch (    AbortError ignored) {
    }
  }
 catch (  Exception e) {
    restoreStreams();
    e.printStackTrace();
    fail(e.getMessage());
  }
}
