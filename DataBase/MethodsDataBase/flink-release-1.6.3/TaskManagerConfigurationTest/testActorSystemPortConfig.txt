@Test public void testActorSystemPortConfig() throws Exception {
  Configuration config=new Configuration();
  config.setString(TaskManagerOptions.HOST,"localhost");
  config.setString(JobManagerOptions.ADDRESS,"localhost");
  config.setInteger(JobManagerOptions.PORT,7891);
  HighAvailabilityServices highAvailabilityServices=HighAvailabilityServicesUtils.createHighAvailabilityServices(config,Executors.directExecutor(),HighAvailabilityServicesUtils.AddressResolution.NO_ADDRESS_RESOLUTION);
  try {
    Iterator<Integer> portsIter=TaskManager.selectNetworkInterfaceAndPortRange(config,highAvailabilityServices)._2();
    assertTrue(portsIter.hasNext());
    assertEquals(0,(int)portsIter.next());
    final int testPort=22551;
    config.setString(TaskManagerOptions.RPC_PORT,String.valueOf(testPort));
    portsIter=TaskManager.selectNetworkInterfaceAndPortRange(config,highAvailabilityServices)._2();
    assertTrue(portsIter.hasNext());
    assertEquals(testPort,(int)portsIter.next());
    config.setString(TaskManagerOptions.RPC_PORT,"8000-8001");
    portsIter=TaskManager.selectNetworkInterfaceAndPortRange(config,highAvailabilityServices)._2();
    assertTrue(portsIter.hasNext());
    assertEquals(8000,(int)portsIter.next());
    assertEquals(8001,(int)portsIter.next());
    try {
      config.setString(TaskManagerOptions.RPC_PORT,"-1");
      TaskManager.selectNetworkInterfaceAndPortRange(config,highAvailabilityServices);
      fail("should fail with an exception");
    }
 catch (    IllegalConfigurationException e) {
    }
    try {
      config.setString(TaskManagerOptions.RPC_PORT,"100000");
      TaskManager.selectNetworkInterfaceAndPortRange(config,highAvailabilityServices);
      fail("should fail with an exception");
    }
 catch (    IllegalConfigurationException e) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    highAvailabilityServices.closeAndCleanupAllData();
  }
}
