@Test public void testMultiChannelAbortCheckpoint() throws Exception {
  BufferOrEvent[] sequence={createBuffer(0),createBuffer(2),createBuffer(0),createBarrier(1,1),createBarrier(1,2),createBuffer(2),createBuffer(1),createBarrier(1,0),createBuffer(0),createBuffer(2),createBarrier(2,0),createBarrier(2,2),createBuffer(0),createBuffer(2),createCancellationBarrier(2,1),createBuffer(2),createBuffer(1),createBarrier(3,1),createBarrier(3,2),createBarrier(3,0),createBuffer(0),createBuffer(1),createCancellationBarrier(4,1),createBarrier(4,2),createBuffer(0),createBarrier(4,0),createBuffer(0),createBuffer(1),createBuffer(2),createBarrier(5,2),createBarrier(5,1),createBarrier(5,0),createBuffer(0),createBuffer(1),createCancellationBarrier(6,1),createCancellationBarrier(6,2),createBarrier(6,0),createBuffer(0)};
  MockInputGate gate=new MockInputGate(PAGE_SIZE,3,Arrays.asList(sequence));
  BarrierTracker tracker=new BarrierTracker(gate);
  CheckpointSequenceValidator validator=new CheckpointSequenceValidator(1,-2,3,-4,5,-6);
  tracker.registerCheckpointEventHandler(validator);
  for (  BufferOrEvent boe : sequence) {
    if (boe.isBuffer()) {
      assertEquals(boe,tracker.getNextNonBlocked());
    }
  }
  assertTrue(tracker.isEmpty());
  assertNull(tracker.getNextNonBlocked());
  assertNull(tracker.getNextNonBlocked());
  assertTrue(tracker.isEmpty());
}
