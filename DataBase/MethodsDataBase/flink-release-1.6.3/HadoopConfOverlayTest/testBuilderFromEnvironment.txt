@Test public void testBuilderFromEnvironment() throws Exception {
  HadoopConfOverlay.Builder builder;
  Map<String,String> env;
  File confDir=tempFolder.newFolder();
  initConfDir(confDir);
  Configuration conf=new Configuration();
  conf.setString(ConfigConstants.PATH_HADOOP_CONFIG,confDir.getAbsolutePath());
  builder=HadoopConfOverlay.newBuilder().fromEnvironment(conf);
  assertEquals(confDir,builder.hadoopConfDir);
  env=new HashMap<String,String>(System.getenv());
  env.remove("HADOOP_HOME");
  env.put("HADOOP_CONF_DIR",confDir.getAbsolutePath());
  CommonTestUtils.setEnv(env);
  builder=HadoopConfOverlay.newBuilder().fromEnvironment(new Configuration());
  assertEquals(confDir,builder.hadoopConfDir);
  File homeDir=tempFolder.newFolder();
  confDir=initConfDir(new File(homeDir,"conf"));
  env=new HashMap<String,String>(System.getenv());
  env.remove("HADOOP_CONF_DIR");
  env.put("HADOOP_HOME",homeDir.getAbsolutePath());
  CommonTestUtils.setEnv(env);
  builder=HadoopConfOverlay.newBuilder().fromEnvironment(new Configuration());
  assertEquals(confDir,builder.hadoopConfDir);
  homeDir=tempFolder.newFolder();
  confDir=initConfDir(new File(homeDir,"etc/hadoop"));
  env=new HashMap<String,String>(System.getenv());
  env.remove("HADOOP_CONF_DIR");
  env.put("HADOOP_HOME",homeDir.getAbsolutePath());
  CommonTestUtils.setEnv(env);
  builder=HadoopConfOverlay.newBuilder().fromEnvironment(new Configuration());
  assertEquals(confDir,builder.hadoopConfDir);
}
