/** 
 * Tests that abort discards state.
 */
@Test @SuppressWarnings("unchecked") public void testAbortDiscardsState() throws Exception {
  CheckpointProperties props=new CheckpointProperties(false,CheckpointType.SAVEPOINT,false,false,false,false,false);
  QueueExecutor executor=new QueueExecutor();
  OperatorState state=mock(OperatorState.class);
  doNothing().when(state).registerSharedStates(any(SharedStateRegistry.class));
  PendingCheckpoint pending=createPendingCheckpoint(props,executor);
  setTaskState(pending,state);
  pending.abortDeclined();
  executor.runQueuedCommands();
  verify(state,times(1)).discardState();
  Mockito.reset(state);
  pending=createPendingCheckpoint(props,executor);
  setTaskState(pending,state);
  pending.abortError(new Exception("Expected Test Exception"));
  executor.runQueuedCommands();
  verify(state,times(1)).discardState();
  Mockito.reset(state);
  pending=createPendingCheckpoint(props,executor);
  setTaskState(pending,state);
  pending.abortExpired();
  executor.runQueuedCommands();
  verify(state,times(1)).discardState();
  Mockito.reset(state);
  pending=createPendingCheckpoint(props,executor);
  setTaskState(pending,state);
  pending.abortSubsumed();
  executor.runQueuedCommands();
  verify(state,times(1)).discardState();
}
