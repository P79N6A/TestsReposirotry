@Test public void testFunctionWithTimer() throws Exception {
  final String expectedKey="6";
  try (TwoInputStreamOperatorTestHarness<String,Integer,String> testHarness=getInitializedTestHarness(BasicTypeInfo.STRING_TYPE_INFO,new IdentityKeySelector<>(),new FunctionWithTimerOnKeyed(41L,expectedKey))){
    testHarness.processWatermark1(new Watermark(10L));
    testHarness.processWatermark2(new Watermark(10L));
    testHarness.processElement2(new StreamRecord<>(5,12L));
    testHarness.processWatermark1(new Watermark(40L));
    testHarness.processWatermark2(new Watermark(40L));
    testHarness.processElement1(new StreamRecord<>(expectedKey,13L));
    testHarness.processElement1(new StreamRecord<>(expectedKey,15L));
    testHarness.processWatermark1(new Watermark(50L));
    testHarness.processWatermark2(new Watermark(50L));
    Queue<Object> expectedOutput=new ConcurrentLinkedQueue<>();
    expectedOutput.add(new Watermark(10L));
    expectedOutput.add(new StreamRecord<>("BR:5 WM:10 TS:12",12L));
    expectedOutput.add(new Watermark(40L));
    expectedOutput.add(new StreamRecord<>("NON-BR:6 WM:40 TS:13",13L));
    expectedOutput.add(new StreamRecord<>("NON-BR:6 WM:40 TS:15",15L));
    expectedOutput.add(new StreamRecord<>("TIMER:41",41L));
    expectedOutput.add(new Watermark(50L));
    TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
  }
 }
