/** 
 * Tests that subsumed checkpoints are discarded.
 */
@Test public void testDiscardingSubsumedCheckpoints() throws Exception {
  final SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  final Configuration configuration=new Configuration();
  configuration.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM,zooKeeperResource.getConnectString());
  final CuratorFramework client=ZooKeeperUtils.startCuratorFramework(configuration);
  final ZooKeeperCompletedCheckpointStore checkpointStore=createZooKeeperCheckpointStore(client);
  try {
    final CompletedCheckpointStoreTest.TestCompletedCheckpoint checkpoint1=CompletedCheckpointStoreTest.createCheckpoint(0,sharedStateRegistry);
    checkpointStore.addCheckpoint(checkpoint1);
    assertThat(checkpointStore.getAllCheckpoints(),Matchers.contains(checkpoint1));
    final CompletedCheckpointStoreTest.TestCompletedCheckpoint checkpoint2=CompletedCheckpointStoreTest.createCheckpoint(1,sharedStateRegistry);
    checkpointStore.addCheckpoint(checkpoint2);
    final List<CompletedCheckpoint> allCheckpoints=checkpointStore.getAllCheckpoints();
    assertThat(allCheckpoints,Matchers.contains(checkpoint2));
    assertThat(allCheckpoints,Matchers.not(Matchers.contains(checkpoint1)));
    CompletedCheckpointStoreTest.verifyCheckpointDiscarded(checkpoint1);
  }
  finally {
    client.close();
  }
}
