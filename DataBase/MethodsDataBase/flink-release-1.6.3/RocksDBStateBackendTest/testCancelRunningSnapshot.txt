@Test public void testCancelRunningSnapshot() throws Exception {
  setupRocksKeyedStateBackend();
  try {
    RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=keyedStateBackend.snapshot(0L,0L,testStreamFactory,CheckpointOptions.forCheckpointWithDefaultLocation());
    Thread asyncSnapshotThread=new Thread(snapshot);
    asyncSnapshotThread.start();
    waiter.await();
    waiter.reset();
    runStateUpdates();
    snapshot.cancel(true);
    blocker.trigger();
    for (    BlockingCheckpointOutputStream stream : testStreamFactory.getAllCreatedStreams()) {
      assertTrue(stream.isClosed());
    }
    waiter.await();
    try {
      snapshot.get();
      fail();
    }
 catch (    Exception ignored) {
    }
    asyncSnapshotThread.join();
    verifyRocksObjectsReleased();
  }
  finally {
    this.keyedStateBackend.dispose();
    this.keyedStateBackend=null;
  }
}
