/** 
 * Tests that reading from a channel when after the partition has been released are handled and don't lead to NPEs.
 */
@Test public void testGetNextAfterPartitionReleased() throws Exception {
  ResultSubpartitionView reader=mock(ResultSubpartitionView.class);
  SingleInputGate gate=mock(SingleInputGate.class);
  ResultPartitionManager partitionManager=mock(ResultPartitionManager.class);
  when(partitionManager.createSubpartitionView(any(ResultPartitionID.class),anyInt(),any(BufferAvailabilityListener.class))).thenReturn(reader);
  LocalInputChannel channel=new LocalInputChannel(gate,0,new ResultPartitionID(),partitionManager,new TaskEventDispatcher(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup().getIOMetricGroup());
  channel.requestSubpartition(0);
  when(reader.getNextBuffer()).thenReturn(null);
  when(reader.isReleased()).thenReturn(false);
  assertFalse(channel.getNextBuffer().isPresent());
  when(reader.getNextBuffer()).thenReturn(null);
  when(reader.isReleased()).thenReturn(true);
  try {
    channel.getNextBuffer();
    fail("Did not throw expected CancelTaskException");
  }
 catch (  CancelTaskException ignored) {
  }
  channel.releaseAllResources();
  assertFalse(channel.getNextBuffer().isPresent());
}
