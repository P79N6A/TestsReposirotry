/** 
 * Tests that in case of unaligned stream positions, the secondary stream is closed and the primary still works. This is important because some code may rely on seeking to stream offsets in the created state files and if the streams are not aligned this code could fail.
 */
@Test public void testUnalignedStreamsException() throws IOException {
  int streamCapacity=1024 * 1024;
  TestMemoryCheckpointOutputStream primaryStream=new TestMemoryCheckpointOutputStream(streamCapacity);
  TestMemoryCheckpointOutputStream secondaryStream=new TestMemoryCheckpointOutputStream(streamCapacity);
  primaryStream.write(42);
  DuplicatingCheckpointOutputStream stream=new DuplicatingCheckpointOutputStream(primaryStream,secondaryStream);
  Assert.assertNotNull(stream.getSecondaryStreamException());
  Assert.assertTrue(secondaryStream.isClosed());
  stream.write(23);
  try {
    stream.closeAndGetSecondaryHandle();
    Assert.fail();
  }
 catch (  IOException ignore) {
    Assert.assertEquals(ignore.getCause(),stream.getSecondaryStreamException());
  }
  StreamStateHandle primaryHandle=stream.closeAndGetPrimaryHandle();
  try (FSDataInputStream inputStream=primaryHandle.openInputStream()){
    Assert.assertEquals(42,inputStream.read());
    Assert.assertEquals(23,inputStream.read());
    Assert.assertEquals(-1,inputStream.read());
  }
 }
