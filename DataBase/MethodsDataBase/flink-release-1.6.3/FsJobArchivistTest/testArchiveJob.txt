@Test public void testArchiveJob() throws Exception {
  Path tmpPath=new Path(tmpFolder.getRoot().getAbsolutePath());
  AccessExecutionGraph graph=ArchivedJobGenerationUtils.getTestJob();
  Collection<ArchivedJson> expected=new ArrayList<>();
  for (  JsonArchivist archivist : WebRuntimeMonitor.getJsonArchivists()) {
    for (    ArchivedJson archive : archivist.archiveJsonWithPath(graph)) {
      expected.add(archive);
    }
  }
  Path archivePath=FsJobArchivist.archiveJob(tmpPath,graph);
  Collection<ArchivedJson> actual=FsJobArchivist.getArchivedJsons(archivePath);
  Assert.assertEquals(expected.size(),actual.size());
  Iterator<ArchivedJson> eI=expected.iterator();
  Iterator<ArchivedJson> aI=actual.iterator();
  Pattern jobDetailsPattern=Pattern.compile("/jobs/[a-fA-F0-9]{32}(/vertices(/[a-fA-F0-9]{32}(/(subtasktimes|taskmanagers))?)?)?");
  while (eI.hasNext() && aI.hasNext()) {
    ArchivedJson exp=eI.next();
    ArchivedJson act=aI.next();
    if (jobDetailsPattern.matcher(exp.getPath()).matches()) {
      Assert.assertEquals(exp.getPath(),act.getPath());
    }
 else {
      Assert.assertEquals(exp,act);
    }
  }
}
