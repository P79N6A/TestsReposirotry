@Test public void testRowSerializerWithComplexTypes(){
  TypeInformation<Row> typeInfo=new RowTypeInfo(BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.DOUBLE_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,new TupleTypeInfo<Tuple3<Integer,Boolean,Short>>(BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.BOOLEAN_TYPE_INFO,BasicTypeInfo.SHORT_TYPE_INFO),TypeExtractor.createTypeInfo(MyPojo.class));
  MyPojo testPojo1=new MyPojo();
  testPojo1.name=null;
  MyPojo testPojo2=new MyPojo();
  testPojo2.name="Test1";
  MyPojo testPojo3=new MyPojo();
  testPojo3.name="Test2";
  Row[] data=new Row[]{createRow(null,null,null,null,null),createRow(0,null,null,null,null),createRow(0,0.0,null,null,null),createRow(0,0.0,"a",null,null),createRow(1,0.0,"a",null,null),createRow(1,1.0,"a",null,null),createRow(1,1.0,"b",null,null),createRow(1,1.0,"b",new Tuple3<>(1,false,(short)2),null),createRow(1,1.0,"b",new Tuple3<>(2,false,(short)2),null),createRow(1,1.0,"b",new Tuple3<>(2,true,(short)2),null),createRow(1,1.0,"b",new Tuple3<>(2,true,(short)3),null),createRow(1,1.0,"b",new Tuple3<>(2,true,(short)3),testPojo1),createRow(1,1.0,"b",new Tuple3<>(2,true,(short)3),testPojo2),createRow(1,1.0,"b",new Tuple3<>(2,true,(short)3),testPojo3)};
  TypeSerializer<Row> serializer=typeInfo.createSerializer(new ExecutionConfig());
  RowSerializerTestInstance testInstance=new RowSerializerTestInstance(serializer,data);
  testInstance.testAll();
}
