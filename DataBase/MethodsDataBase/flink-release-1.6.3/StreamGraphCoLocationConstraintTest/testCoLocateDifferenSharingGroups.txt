@Test public void testCoLocateDifferenSharingGroups() throws Exception {
  final StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(7);
  DataStream<Long> source=env.generateSequence(1L,10_000_000);
  source.getTransformation().setSlotSharingGroup("ssg1");
  source.getTransformation().setCoLocationGroupKey("co1");
  DataStream<Long> step1=source.keyBy(v -> v).map(v -> v);
  step1.getTransformation().setSlotSharingGroup("ssg2");
  step1.getTransformation().setCoLocationGroupKey("co2");
  DataStream<Long> step2=step1.keyBy(v -> v).map(v -> v);
  step2.getTransformation().setSlotSharingGroup("ssg3");
  step2.getTransformation().setCoLocationGroupKey("co1");
  DataStreamSink<Long> result=step2.keyBy(v -> v).addSink(new DiscardingSink<>());
  result.getTransformation().setSlotSharingGroup("ssg4");
  result.getTransformation().setCoLocationGroupKey("co2");
  try {
    env.getStreamGraph().getJobGraph();
    fail("exception expected");
  }
 catch (  IllegalStateException ignored) {
  }
}
