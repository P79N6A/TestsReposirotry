/** 
 * This tests for the copy-on-write contracts, e.g. ensures that no copy-on-write is active after all snapshots are released.
 */
@Test public void testCopyOnWriteContracts(){
  RegisteredKeyValueStateBackendMetaInfo<Integer,ArrayList<Integer>> metaInfo=new RegisteredKeyValueStateBackendMetaInfo<>(StateDescriptor.Type.UNKNOWN,"test",IntSerializer.INSTANCE,new ArrayListSerializer<>(IntSerializer.INSTANCE));
  final MockInternalKeyContext<Integer> keyContext=new MockInternalKeyContext<>(IntSerializer.INSTANCE);
  final CopyOnWriteStateTable<Integer,Integer,ArrayList<Integer>> stateTable=new CopyOnWriteStateTable<>(keyContext,metaInfo);
  ArrayList<Integer> originalState1=new ArrayList<>(1);
  ArrayList<Integer> originalState2=new ArrayList<>(1);
  ArrayList<Integer> originalState3=new ArrayList<>(1);
  ArrayList<Integer> originalState4=new ArrayList<>(1);
  ArrayList<Integer> originalState5=new ArrayList<>(1);
  originalState1.add(1);
  originalState2.add(2);
  originalState3.add(3);
  originalState4.add(4);
  originalState5.add(5);
  stateTable.put(1,1,originalState1);
  stateTable.put(2,1,originalState2);
  stateTable.put(4,1,originalState4);
  stateTable.put(5,1,originalState5);
  Assert.assertTrue(stateTable.get(1,1) == originalState1);
  CopyOnWriteStateTableSnapshot<Integer,Integer,ArrayList<Integer>> snapshot1=stateTable.stateSnapshot();
  final ArrayList<Integer> copyState=stateTable.get(1,1);
  Assert.assertFalse(copyState == originalState1);
  Assert.assertEquals(originalState1,copyState);
  stateTable.put(3,1,originalState3);
  Assert.assertTrue(copyState == stateTable.get(1,1));
  CopyOnWriteStateTableSnapshot<Integer,Integer,ArrayList<Integer>> snapshot2=stateTable.stateSnapshot();
  Assert.assertFalse(copyState == stateTable.get(1,1));
  Assert.assertEquals(copyState,stateTable.get(1,1));
  stateTable.releaseSnapshot(snapshot2);
  Assert.assertTrue(originalState3 == stateTable.get(3,1));
  Assert.assertFalse(originalState4 == stateTable.get(4,1));
  stateTable.releaseSnapshot(snapshot1);
  Assert.assertTrue(originalState5 == stateTable.get(5,1));
}
