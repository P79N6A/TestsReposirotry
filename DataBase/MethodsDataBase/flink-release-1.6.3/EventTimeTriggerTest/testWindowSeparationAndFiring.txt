/** 
 * Verify that state of separate windows does not leak into other windows.
 */
@Test public void testWindowSeparationAndFiring() throws Exception {
  TriggerTestHarness<Object,TimeWindow> testHarness=new TriggerTestHarness<>(EventTimeTrigger.create(),new TimeWindow.Serializer());
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(0,2)));
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(0,2)));
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(0,2)));
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(2,4)));
  assertEquals(TriggerResult.CONTINUE,testHarness.processElement(new StreamRecord<Object>(1),new TimeWindow(2,4)));
  assertEquals(0,testHarness.numStateEntries());
  assertEquals(0,testHarness.numProcessingTimeTimers());
  assertEquals(2,testHarness.numEventTimeTimers());
  assertEquals(1,testHarness.numEventTimeTimers(new TimeWindow(0,2)));
  assertEquals(1,testHarness.numEventTimeTimers(new TimeWindow(2,4)));
  assertEquals(TriggerResult.FIRE,testHarness.advanceWatermark(2,new TimeWindow(0,2)));
  assertEquals(0,testHarness.numStateEntries());
  assertEquals(0,testHarness.numProcessingTimeTimers());
  assertEquals(1,testHarness.numEventTimeTimers());
  assertEquals(0,testHarness.numEventTimeTimers(new TimeWindow(0,2)));
  assertEquals(1,testHarness.numEventTimeTimers(new TimeWindow(2,4)));
  assertEquals(TriggerResult.FIRE,testHarness.advanceWatermark(4,new TimeWindow(2,4)));
  assertEquals(0,testHarness.numStateEntries());
  assertEquals(0,testHarness.numProcessingTimeTimers());
  assertEquals(0,testHarness.numEventTimeTimers());
}
