@Test public void testHistoryServerIntegration() throws Exception {
  final int numJobs=2;
  for (int x=0; x < numJobs; x++) {
    runJob();
  }
  createLegacyArchive(jmDirectory.toPath());
  CountDownLatch numFinishedPolls=new CountDownLatch(1);
  Configuration historyServerConfig=new Configuration();
  historyServerConfig.setString(HistoryServerOptions.HISTORY_SERVER_ARCHIVE_DIRS,jmDirectory.toURI().toString());
  historyServerConfig.setString(HistoryServerOptions.HISTORY_SERVER_WEB_DIR,hsDirectory.getAbsolutePath());
  historyServerConfig.setInteger(HistoryServerOptions.HISTORY_SERVER_WEB_PORT,0);
  File[] archives=jmDirectory.listFiles();
  while (archives == null || archives.length != numJobs + 1) {
    Thread.sleep(50);
    archives=jmDirectory.listFiles();
  }
  HistoryServer hs=new HistoryServer(historyServerConfig,numFinishedPolls);
  try {
    hs.start();
    String baseUrl="http://localhost:" + hs.getWebPort();
    numFinishedPolls.await(10L,TimeUnit.SECONDS);
    ObjectMapper mapper=new ObjectMapper();
    String response=getFromHTTP(baseUrl + JobsOverviewHeaders.URL);
    MultipleJobsDetails overview=mapper.readValue(response,MultipleJobsDetails.class);
    Assert.assertEquals(numJobs + 1,overview.getJobs().size());
  }
  finally {
    hs.stop();
  }
}
