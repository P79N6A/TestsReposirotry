@Test public void testParameterPrioritization() throws Exception {
  sendRequestAndValidateGraph(handler,restfulGateway,() -> {
    final JarRunRequestBody jsonRequest=new JarRunRequestBody(ParameterProgram.class.getCanonicalName(),"--host localhost --port 1234",4,true,"/foo/bar");
    final JarRunMessageParameters parameters=JarRunHeaders.getInstance().getUnresolvedMessageParameters();
    parameters.allowNonRestoredStateQueryParameter.resolve(Collections.singletonList(false));
    parameters.savepointPathQueryParameter.resolve(Collections.singletonList("/no/uh"));
    parameters.entryClassQueryParameter.resolve(Collections.singletonList("please.dont.run.me"));
    parameters.parallelismQueryParameter.resolve(Collections.singletonList(64));
    parameters.programArgsQueryParameter.resolve(Collections.singletonList("--host wrong --port wrong"));
    return createRequest(jsonRequest,parameters,jarWithoutManifest);
  }
,jobGraph -> {
    Assert.assertEquals(4,ParameterProgram.actualArguments.length);
    Assert.assertEquals("--host",ParameterProgram.actualArguments[0]);
    Assert.assertEquals("localhost",ParameterProgram.actualArguments[1]);
    Assert.assertEquals("--port",ParameterProgram.actualArguments[2]);
    Assert.assertEquals("1234",ParameterProgram.actualArguments[3]);
    Assert.assertEquals(4,getExecutionConfig(jobGraph).getParallelism());
    final SavepointRestoreSettings savepointRestoreSettings=jobGraph.getSavepointRestoreSettings();
    Assert.assertTrue(savepointRestoreSettings.allowNonRestoredState());
    Assert.assertEquals("/foo/bar",savepointRestoreSettings.getRestorePath());
  }
);
}
