/** 
 * Tests that samples time out if they don't finish in time. 
 */
@Test(timeout=1000L) public void testTriggerStackTraceSampleTimeout() throws Exception {
  int timeout=100;
  coord=new StackTraceSampleCoordinator(system.dispatcher(),timeout);
  final ScheduledExecutorService scheduledExecutorService=new ScheduledThreadPoolExecutor(1);
  try {
    ExecutionVertex[] vertices=new ExecutionVertex[]{mockExecutionVertexWithTimeout(new ExecutionAttemptID(),ExecutionState.RUNNING,scheduledExecutorService,timeout)};
    CompletableFuture<StackTraceSample> sampleFuture=coord.triggerStackTraceSample(vertices,1,Time.milliseconds(100L),0);
    Thread.sleep(timeout * 2);
    boolean success=false;
    for (int i=0; i < 10; i++) {
      if (sampleFuture.isDone()) {
        success=true;
        break;
      }
      Thread.sleep(timeout);
    }
    Assert.assertTrue("Sample did not time out",success);
    try {
      sampleFuture.get();
      Assert.fail("Expected exception.");
    }
 catch (    ExecutionException e) {
      Assert.assertTrue(e.getCause().getCause().getMessage().contains("Timeout"));
    }
    ExecutionAttemptID executionId=vertices[0].getCurrentExecutionAttempt().getAttemptId();
    coord.collectStackTraces(0,executionId,new ArrayList<StackTraceElement[]>());
  }
  finally {
    scheduledExecutorService.shutdownNow();
  }
}
