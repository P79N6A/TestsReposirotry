/** 
 * Tests that the quarantine monitor detects if an actor system quarantines another actor system.
 */
@Test(timeout=5000L) public void testWatcherQuarantining() throws ExecutionException, InterruptedException {
  TestingQuarantineHandler quarantineHandler=new TestingQuarantineHandler();
  ActorRef watchee=null;
  ActorRef watcher=null;
  ActorRef monitor=null;
  FiniteDuration timeout=new FiniteDuration(5,TimeUnit.SECONDS);
  FiniteDuration interval=new FiniteDuration(200,TimeUnit.MILLISECONDS);
  try {
    monitor=actorSystem1.actorOf(getQuarantineMonitorProps(quarantineHandler),"quarantineMonitor");
    watchee=actorSystem2.actorOf(getWatcheeProps(timeout,interval,quarantineHandler),"watchee");
    watcher=actorSystem1.actorOf(getWatcherProps(timeout,interval,quarantineHandler),"watcher");
    final Address actorSystem1Address=AkkaUtils.getAddress(actorSystem2);
    final String watcheeAddress=AkkaUtils.getAkkaURL(actorSystem2,watchee);
    final String watcherAddress=AkkaUtils.getAkkaURL(actorSystem1,watcher);
    watchee.tell(new Ping(watcherAddress),ActorRef.noSender());
    watcher.tell(new Watch(watcheeAddress),ActorRef.noSender());
    CompletableFuture<String> quarantineFuture=quarantineHandler.getHasQuarantinedFuture();
    Assert.assertEquals(actorSystem1Address.toString(),quarantineFuture.get());
  }
  finally {
    TestingUtils.stopActor(watchee);
    TestingUtils.stopActor(watcher);
    TestingUtils.stopActor(monitor);
  }
}
