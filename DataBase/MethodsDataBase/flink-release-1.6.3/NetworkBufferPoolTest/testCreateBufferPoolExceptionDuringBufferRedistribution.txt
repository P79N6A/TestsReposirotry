@Test public void testCreateBufferPoolExceptionDuringBufferRedistribution() throws IOException {
  final int numBuffers=3;
  final NetworkBufferPool networkBufferPool=new NetworkBufferPool(numBuffers,128);
  final List<Buffer> buffers=new ArrayList<>(numBuffers);
  BufferPool bufferPool=networkBufferPool.createBufferPool(1,numBuffers,Optional.of(numBuffersToRecycle -> {
    throw new TestIOException();
  }
));
  try {
    for (int i=0; i < numBuffers; i++) {
      Buffer buffer=bufferPool.requestBuffer();
      buffers.add(buffer);
      assertNotNull(buffer);
    }
    try {
      networkBufferPool.createBufferPool(1,numBuffers);
      fail("Should have failed because the other buffer pool does not support memory release.");
    }
 catch (    TestIOException expected) {
    }
    for (    Buffer buffer : buffers) {
      buffer.recycleBuffer();
    }
    buffers.clear();
    bufferPool.lazyDestroy();
    bufferPool=networkBufferPool.createBufferPool(numBuffers,numBuffers);
  }
  finally {
    for (    Buffer buffer : buffers) {
      buffer.recycleBuffer();
    }
    bufferPool.lazyDestroy();
    networkBufferPool.destroy();
  }
}
