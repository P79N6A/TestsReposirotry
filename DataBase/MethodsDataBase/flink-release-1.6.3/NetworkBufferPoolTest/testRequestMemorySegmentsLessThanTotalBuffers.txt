/** 
 * Tests  {@link NetworkBufferPool#requestMemorySegments(int)} with the {@link NetworkBufferPool}currently containing the number of required free segments.
 */
@Test public void testRequestMemorySegmentsLessThanTotalBuffers() throws Exception {
  final int numBuffers=10;
  NetworkBufferPool globalPool=new NetworkBufferPool(numBuffers,128);
  List<MemorySegment> memorySegments=Collections.emptyList();
  try {
    memorySegments=globalPool.requestMemorySegments(numBuffers / 2);
    assertEquals(memorySegments.size(),numBuffers / 2);
    globalPool.recycleMemorySegments(memorySegments);
    memorySegments.clear();
    assertEquals(globalPool.getNumberOfAvailableMemorySegments(),numBuffers);
  }
  finally {
    globalPool.recycleMemorySegments(memorySegments);
    globalPool.destroy();
  }
}
