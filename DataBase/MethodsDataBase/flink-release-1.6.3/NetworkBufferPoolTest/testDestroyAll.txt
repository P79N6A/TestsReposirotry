@Test public void testDestroyAll(){
  try {
    NetworkBufferPool globalPool=new NetworkBufferPool(10,128);
    BufferPool fixedPool=globalPool.createBufferPool(2,2);
    BufferPool boundedPool=globalPool.createBufferPool(0,1);
    BufferPool nonFixedPool=globalPool.createBufferPool(5,Integer.MAX_VALUE);
    assertEquals(2,fixedPool.getNumberOfRequiredMemorySegments());
    assertEquals(0,boundedPool.getNumberOfRequiredMemorySegments());
    assertEquals(5,nonFixedPool.getNumberOfRequiredMemorySegments());
    ArrayList<Buffer> buffers=new ArrayList<>(globalPool.getTotalNumberOfMemorySegments());
    collectBuffers:     for (int i=0; i < 10; ++i) {
      for (      BufferPool bp : new BufferPool[]{fixedPool,boundedPool,nonFixedPool}) {
        Buffer buffer=bp.requestBuffer();
        if (buffer != null) {
          assertNotNull(buffer.getMemorySegment());
          buffers.add(buffer);
          continue collectBuffers;
        }
      }
    }
    assertEquals(globalPool.getTotalNumberOfMemorySegments(),buffers.size());
    assertNull(fixedPool.requestBuffer());
    assertNull(boundedPool.requestBuffer());
    assertNull(nonFixedPool.requestBuffer());
    globalPool.destroyAllBufferPools();
    assertFalse(globalPool.isDestroyed());
    assertTrue(fixedPool.isDestroyed());
    assertTrue(boundedPool.isDestroyed());
    assertTrue(nonFixedPool.isDestroyed());
    assertEquals(0,globalPool.getNumberOfRegisteredBufferPools());
    assertEquals(0,globalPool.getNumberOfAvailableMemorySegments());
    for (    Buffer b : buffers) {
      b.recycleBuffer();
    }
    assertEquals(globalPool.getTotalNumberOfMemorySegments(),globalPool.getNumberOfAvailableMemorySegments());
    try {
      fixedPool.requestBuffer();
      fail("Should fail with an IllegalStateException");
    }
 catch (    IllegalStateException e) {
    }
    try {
      boundedPool.requestBuffer();
      fail("Should fail with an IllegalStateException");
    }
 catch (    IllegalStateException e) {
    }
    try {
      nonFixedPool.requestBuffer();
      fail("Should fail with an IllegalStateException");
    }
 catch (    IllegalStateException e) {
    }
    assertNotNull(globalPool.createBufferPool(10,Integer.MAX_VALUE));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
