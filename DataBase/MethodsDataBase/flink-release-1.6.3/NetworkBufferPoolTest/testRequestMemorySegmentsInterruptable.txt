/** 
 * Tests  {@link NetworkBufferPool#requestMemorySegments(int)}, verifying it may be aborted in case of a concurrent  {@link NetworkBufferPool#destroy()} call.
 */
@Test public void testRequestMemorySegmentsInterruptable() throws Exception {
  final int numBuffers=10;
  NetworkBufferPool globalPool=new NetworkBufferPool(numBuffers,128);
  MemorySegment segment=globalPool.requestMemorySegment();
  assertNotNull(segment);
  final OneShotLatch isRunning=new OneShotLatch();
  CheckedThread asyncRequest=new CheckedThread(){
    @Override public void go() throws Exception {
      isRunning.trigger();
      globalPool.requestMemorySegments(10);
    }
  }
;
  asyncRequest.start();
  isRunning.await();
  Thread.sleep(10);
  globalPool.destroy();
  segment.free();
  expectedException.expect(IllegalStateException.class);
  expectedException.expectMessage("destroyed");
  try {
    asyncRequest.sync();
  }
  finally {
    globalPool.destroy();
  }
}
