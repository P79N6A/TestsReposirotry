/** 
 * Tests  {@link NetworkBufferPool#requestMemorySegments(int)} with an exception occurring duringthe call to  {@link NetworkBufferPool#redistributeBuffers()}.
 */
@Test public void testRequestMemorySegmentsExceptionDuringBufferRedistribution() throws IOException {
  final int numBuffers=3;
  NetworkBufferPool networkBufferPool=new NetworkBufferPool(numBuffers,128);
  final List<Buffer> buffers=new ArrayList<>(numBuffers);
  List<MemorySegment> memorySegments=Collections.emptyList();
  BufferPool bufferPool=networkBufferPool.createBufferPool(1,numBuffers,Optional.of(numBuffersToRecycle -> {
    throw new TestIOException();
  }
));
  try {
    for (int i=0; i < numBuffers - 1; ++i) {
      Buffer buffer=bufferPool.requestBuffer();
      buffers.add(buffer);
      assertNotNull(buffer);
    }
    memorySegments=networkBufferPool.requestMemorySegments(2);
    fail("Requesting memory segments should have thrown during buffer pool redistribution.");
  }
 catch (  TestIOException e) {
    expectedException.expect(TestIOException.class);
    networkBufferPool.createBufferPool(2,2);
  }
 finally {
    for (    Buffer buffer : buffers) {
      buffer.recycleBuffer();
    }
    bufferPool.lazyDestroy();
    networkBufferPool.recycleMemorySegments(memorySegments);
    networkBufferPool.destroy();
  }
}
