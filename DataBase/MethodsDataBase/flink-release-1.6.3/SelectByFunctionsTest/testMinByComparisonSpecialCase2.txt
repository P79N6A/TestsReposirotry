/** 
 * This test validates that when two tuples only differ in one value and that value's index is given at construction time. The smaller tuple must be returned then.
 */
@Test public void testMinByComparisonSpecialCase2(){
  SelectByMinFunction<Tuple5<Integer,Long,String,Long,Integer>> minByTuple=new SelectByMinFunction<Tuple5<Integer,Long,String,Long,Integer>>(tupleTypeInfo,new int[]{0,2,1,4,3});
  try {
    Assert.assertSame("SelectByMin must return smaller tuple",smaller,minByTuple.reduce(specialCaseSmaller,smaller));
    Assert.assertSame("SelectByMin must return smaller tuple",smaller,minByTuple.reduce(smaller,specialCaseSmaller));
  }
 catch (  Exception e) {
    Assert.fail("No exception should be thrown while comparing both tuples");
  }
}
