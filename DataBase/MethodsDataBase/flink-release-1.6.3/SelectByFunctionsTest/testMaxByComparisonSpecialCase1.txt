/** 
 * This test cases checks when two tuples only differ in one value, but this value is not in the fields list. In that case it should be seen as equal and then the first given tuple (value1) should be returned by reduce().
 */
@Test public void testMaxByComparisonSpecialCase1(){
  SelectByMaxFunction<Tuple5<Integer,Long,String,Long,Integer>> maxByTuple=new SelectByMaxFunction<Tuple5<Integer,Long,String,Long,Integer>>(tupleTypeInfo,new int[]{0,3});
  try {
    Assert.assertSame("SelectByMax must return the first given tuple",specialCaseBigger,maxByTuple.reduce(specialCaseBigger,bigger));
    Assert.assertSame("SelectByMax must return the first given tuple",bigger,maxByTuple.reduce(bigger,specialCaseBigger));
  }
 catch (  Exception e) {
    Assert.fail("No exception should be thrown while comparing both tuples");
  }
}
