@Test public void testDeterministicAssignmentWithDifferentFetchedPartitionOrdering() throws Exception {
  int numSubtasks=4;
  List<KafkaTopicPartition> mockGetAllPartitionsForTopicsReturn=Arrays.asList(new KafkaTopicPartition("test-topic",0),new KafkaTopicPartition("test-topic",1),new KafkaTopicPartition("test-topic",2),new KafkaTopicPartition("test-topic",3),new KafkaTopicPartition("test-topic2",0),new KafkaTopicPartition("test-topic2",1));
  List<KafkaTopicPartition> mockGetAllPartitionsForTopicsReturnOutOfOrder=Arrays.asList(new KafkaTopicPartition("test-topic",3),new KafkaTopicPartition("test-topic",1),new KafkaTopicPartition("test-topic2",1),new KafkaTopicPartition("test-topic",0),new KafkaTopicPartition("test-topic2",0),new KafkaTopicPartition("test-topic",2));
  for (int subtaskIndex=0; subtaskIndex < numSubtasks; subtaskIndex++) {
    TestPartitionDiscoverer partitionDiscoverer=new TestPartitionDiscoverer(topicsDescriptor,subtaskIndex,numSubtasks,TestPartitionDiscoverer.createMockGetAllTopicsSequenceFromFixedReturn(Arrays.asList("test-topic","test-topic2")),TestPartitionDiscoverer.createMockGetAllPartitionsFromTopicsSequenceFromFixedReturn(mockGetAllPartitionsForTopicsReturn));
    partitionDiscoverer.open();
    TestPartitionDiscoverer partitionDiscovererOutOfOrder=new TestPartitionDiscoverer(topicsDescriptor,subtaskIndex,numSubtasks,TestPartitionDiscoverer.createMockGetAllTopicsSequenceFromFixedReturn(Arrays.asList("test-topic","test-topic2")),TestPartitionDiscoverer.createMockGetAllPartitionsFromTopicsSequenceFromFixedReturn(mockGetAllPartitionsForTopicsReturnOutOfOrder));
    partitionDiscovererOutOfOrder.open();
    List<KafkaTopicPartition> discoveredPartitions=partitionDiscoverer.discoverPartitions();
    List<KafkaTopicPartition> discoveredPartitionsOutOfOrder=partitionDiscovererOutOfOrder.discoverPartitions();
    Collections.sort(discoveredPartitions,new KafkaTopicPartition.Comparator());
    Collections.sort(discoveredPartitionsOutOfOrder,new KafkaTopicPartition.Comparator());
    assertEquals(discoveredPartitions,discoveredPartitionsOutOfOrder);
  }
}
