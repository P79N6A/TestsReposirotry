/** 
 * FLINK-6629 <p>Tests that the  {@link HighAvailabilityServices} are respected when initializing the ClusterClient's{@link ActorSystem} and retrieving the leading JobManager.
 */
@Test public void testJobManagerRetrievalWithHAServices() throws Exception {
  final Configuration configuration=new Configuration();
  final TestingHighAvailabilityServices highAvailabilityServices=new TestingHighAvailabilityServices();
  final ActorSystem actorSystem=AkkaUtils.createDefaultActorSystem();
  ActorRef actorRef=null;
  final UUID leaderId=UUID.randomUUID();
  try {
    actorRef=actorSystem.actorOf(Props.create(JobClientActorTest.PlainActor.class,leaderId));
    final String expectedAddress=AkkaUtils.getAkkaURL(actorSystem,actorRef);
    final SettableLeaderRetrievalService settableLeaderRetrievalService=new SettableLeaderRetrievalService(expectedAddress,leaderId);
    highAvailabilityServices.setJobMasterLeaderRetriever(HighAvailabilityServices.DEFAULT_JOB_ID,settableLeaderRetrievalService);
    StandaloneClusterClient client=new StandaloneClusterClient(configuration,highAvailabilityServices,true);
    ActorGateway gateway=client.getJobManagerGateway();
    assertEquals(expectedAddress,gateway.path());
    assertEquals(leaderId,gateway.leaderSessionID());
  }
  finally {
    if (actorRef != null) {
      TestingUtils.stopActorGracefully(actorRef);
    }
    actorSystem.shutdown();
  }
}
