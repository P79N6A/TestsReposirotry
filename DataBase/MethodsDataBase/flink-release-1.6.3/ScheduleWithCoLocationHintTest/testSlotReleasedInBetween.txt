@Test public void testSlotReleasedInBetween() throws Exception {
  JobVertexID jid1=new JobVertexID();
  JobVertexID jid2=new JobVertexID();
  TaskManagerLocation loc1=testingSlotProvider.addTaskManager(1);
  TaskManagerLocation loc2=testingSlotProvider.addTaskManager(1);
  assertEquals(2,testingSlotProvider.getNumberOfAvailableSlots());
  SlotSharingGroup sharingGroup=new SlotSharingGroup();
  CoLocationGroup ccg=new CoLocationGroup();
  CoLocationConstraint cc1=new CoLocationConstraint(ccg);
  CoLocationConstraint cc2=new CoLocationConstraint(ccg);
  LogicalSlot s1=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertexWithLocation(jid1,0,2,sharingGroup,loc1),sharingGroup.getSlotSharingGroupId(),cc1),false,slotProfileForLocation(loc1),TestingUtils.infiniteTime()).get();
  LogicalSlot s2=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertexWithLocation(jid1,1,2,sharingGroup,loc2),sharingGroup.getSlotSharingGroupId(),cc2),false,slotProfileForLocation(loc2),TestingUtils.infiniteTime()).get();
  s1.releaseSlot();
  s2.releaseSlot();
  assertEquals(2,testingSlotProvider.getNumberOfAvailableSlots());
  assertEquals(0,sharingGroup.getTaskAssignment().getNumberOfSlots());
  LogicalSlot s3=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertexWithLocation(jid2,0,2,sharingGroup,loc2),sharingGroup.getSlotSharingGroupId(),cc1),false,slotProfileForLocation(loc2),TestingUtils.infiniteTime()).get();
  LogicalSlot s4=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertexWithLocation(jid2,1,2,sharingGroup,loc1),sharingGroup.getSlotSharingGroupId(),cc2),false,slotProfileForLocation(loc1),TestingUtils.infiniteTime()).get();
  assertEquals(loc1,s3.getTaskManagerLocation());
  assertEquals(loc2,s4.getTaskManagerLocation());
  s3.releaseSlot();
  s4.releaseSlot();
  assertEquals(2,testingSlotProvider.getNumberOfAvailableSlots());
  assertEquals(4,testingSlotProvider.getNumberOfLocalizedAssignments());
  assertEquals(0,testingSlotProvider.getNumberOfNonLocalizedAssignments());
  assertEquals(0,testingSlotProvider.getNumberOfUnconstrainedAssignments());
}
