@Test public void scheduleMixedCoLocationSlotSharing() throws Exception {
  JobVertexID jid1=new JobVertexID();
  JobVertexID jid2=new JobVertexID();
  JobVertexID jid3=new JobVertexID();
  JobVertexID jid4=new JobVertexID();
  testingSlotProvider.addTaskManager(1);
  testingSlotProvider.addTaskManager(1);
  testingSlotProvider.addTaskManager(1);
  testingSlotProvider.addTaskManager(1);
  assertEquals(4,testingSlotProvider.getNumberOfAvailableSlots());
  CoLocationGroup grp=new CoLocationGroup();
  CoLocationConstraint clc1=new CoLocationConstraint(grp);
  CoLocationConstraint clc2=new CoLocationConstraint(grp);
  CoLocationConstraint clc3=new CoLocationConstraint(grp);
  CoLocationConstraint clc4=new CoLocationConstraint(grp);
  SlotSharingGroup shareGroup=new SlotSharingGroup();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid1,0,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid1,2,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid1,1,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid1,3,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s21=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid2,0,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc1),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s22=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid2,2,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc2),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s23=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid2,1,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc3),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s24=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid2,3,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc4),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s31=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid3,1,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc2),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s32=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid3,2,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc3),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s33=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid3,3,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc4),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  LogicalSlot s34=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid3,0,4,shareGroup),shareGroup.getSlotSharingGroupId(),clc1),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid4,0,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid4,1,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid4,2,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(jid4,3,4,shareGroup),shareGroup.getSlotSharingGroupId()),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  assertEquals(s21.getTaskManagerLocation(),s34.getTaskManagerLocation());
  assertEquals(s22.getTaskManagerLocation(),s31.getTaskManagerLocation());
  assertEquals(s23.getTaskManagerLocation(),s32.getTaskManagerLocation());
  assertEquals(s24.getTaskManagerLocation(),s33.getTaskManagerLocation());
  assertEquals(4,testingSlotProvider.getNumberOfLocalizedAssignments());
  assertEquals(0,testingSlotProvider.getNumberOfNonLocalizedAssignments());
  assertEquals(12,testingSlotProvider.getNumberOfUnconstrainedAssignments());
}
