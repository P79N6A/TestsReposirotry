@Test public void testNestedPojoFieldAccessor() throws Exception {
  StreamExecutionEnvironment see=StreamExecutionEnvironment.getExecutionEnvironment();
  see.getConfig().disableObjectReuse();
  see.setParallelism(4);
  DataStream<Data> dataStream=see.fromCollection(elements);
  DataStream<Data> summedStream=dataStream.keyBy("aaa").sum("stats.count").keyBy("aaa").flatMap(new FlatMapFunction<Data,Data>(){
    Data[] first=new Data[3];
    @Override public void flatMap(    Data value,    Collector<Data> out) throws Exception {
      if (first[value.aaa] == null) {
        first[value.aaa]=value;
        if (value.stats.count != 123) {
          throw new RuntimeException("Expected stats.count to be 123");
        }
      }
 else {
        if (value.stats.count != 2 * 123) {
          throw new RuntimeException("Expected stats.count to be 2 * 123");
        }
      }
    }
  }
);
  summedStream.print();
  see.execute();
}
