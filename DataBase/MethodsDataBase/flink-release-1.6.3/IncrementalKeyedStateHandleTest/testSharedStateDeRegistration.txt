/** 
 * This test checks, that for a registered  {@link IncrementalKeyedStateHandle} discards respectall shared state and only discard it one all references are released.
 */
@Test public void testSharedStateDeRegistration() throws Exception {
  SharedStateRegistry registry=spy(new SharedStateRegistry());
  IncrementalKeyedStateHandle stateHandle1=create(new Random(42));
  IncrementalKeyedStateHandle stateHandle2=create(new Random(42));
  for (  Map.Entry<StateHandleID,StreamStateHandle> entry : stateHandle1.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(entry.getKey());
    verify(registry,times(0)).unregisterReference(registryKey);
    verify(entry.getValue(),times(0)).discardState();
  }
  for (  Map.Entry<StateHandleID,StreamStateHandle> entry : stateHandle2.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(entry.getKey());
    verify(registry,times(0)).unregisterReference(registryKey);
    verify(entry.getValue(),times(0)).discardState();
  }
  stateHandle1.registerSharedStates(registry);
  stateHandle2.registerSharedStates(registry);
  for (  Map.Entry<StateHandleID,StreamStateHandle> stateHandleEntry : stateHandle1.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(stateHandleEntry.getKey());
    verify(registry).registerReference(registryKey,stateHandleEntry.getValue());
  }
  for (  Map.Entry<StateHandleID,StreamStateHandle> stateHandleEntry : stateHandle2.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(stateHandleEntry.getKey());
    verify(registry).registerReference(registryKey,stateHandleEntry.getValue());
  }
  stateHandle1.discardState();
  for (  Map.Entry<StateHandleID,StreamStateHandle> entry : stateHandle1.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(entry.getKey());
    verify(registry,times(1)).unregisterReference(registryKey);
    verify(entry.getValue(),times(0)).discardState();
  }
  for (  StreamStateHandle handle : stateHandle2.getSharedState().values()) {
    verify(handle,times(0)).discardState();
  }
  for (  Map.Entry<StateHandleID,StreamStateHandle> handleEntry : stateHandle1.getPrivateState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(handleEntry.getKey());
    verify(registry,times(0)).unregisterReference(registryKey);
    verify(handleEntry.getValue(),times(1)).discardState();
  }
  for (  Map.Entry<StateHandleID,StreamStateHandle> handleEntry : stateHandle2.getPrivateState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(handleEntry.getKey());
    verify(registry,times(0)).unregisterReference(registryKey);
    verify(handleEntry.getValue(),times(0)).discardState();
  }
  verify(stateHandle1.getMetaStateHandle(),times(1)).discardState();
  verify(stateHandle2.getMetaStateHandle(),times(0)).discardState();
  stateHandle2.discardState();
  for (  Map.Entry<StateHandleID,StreamStateHandle> entry : stateHandle1.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(entry.getKey());
    verify(registry,times(2)).unregisterReference(registryKey);
    verify(entry.getValue()).discardState();
  }
  for (  Map.Entry<StateHandleID,StreamStateHandle> entry : stateHandle2.getSharedState().entrySet()) {
    SharedStateRegistryKey registryKey=stateHandle1.createSharedStateRegistryKeyFromFileName(entry.getKey());
    verify(registry,times(2)).unregisterReference(registryKey);
    verify(entry.getValue()).discardState();
  }
  verify(stateHandle1.getMetaStateHandle(),times(1)).discardState();
  verify(stateHandle2.getMetaStateHandle(),times(1)).discardState();
}
