/** 
 * This tests that re-registration of shared state with another registry works as expected. This simulates a recovery from a checkpoint, when the checkpoint coordinator creates a new shared state registry and re-registers all live checkpoint states.
 */
@Test public void testSharedStateReRegistration() throws Exception {
  SharedStateRegistry stateRegistryA=spy(new SharedStateRegistry());
  IncrementalKeyedStateHandle stateHandleX=create(new Random(1));
  IncrementalKeyedStateHandle stateHandleY=create(new Random(2));
  IncrementalKeyedStateHandle stateHandleZ=create(new Random(3));
  stateHandleX.registerSharedStates(stateRegistryA);
  stateHandleY.registerSharedStates(stateRegistryA);
  stateHandleZ.registerSharedStates(stateRegistryA);
  try {
    stateHandleX.registerSharedStates(stateRegistryA);
    fail("Should not be able to register twice with the same registry.");
  }
 catch (  IllegalStateException ignore) {
  }
  stateHandleZ.discardState();
  verify(stateHandleZ.getMetaStateHandle(),times(1)).discardState();
  for (  StreamStateHandle stateHandle : stateHandleZ.getSharedState().values()) {
    verify(stateHandle,times(1)).discardState();
  }
  stateRegistryA.close();
  try {
    create(new Random(4)).registerSharedStates(stateRegistryA);
    fail("Should not be able to register new state to closed registry.");
  }
 catch (  IllegalStateException ignore) {
  }
  stateHandleY.discardState();
  verify(stateHandleY.getMetaStateHandle(),times(1)).discardState();
  for (  StreamStateHandle stateHandle : stateHandleY.getSharedState().values()) {
    verify(stateHandle,times(1)).discardState();
  }
  verify(stateHandleX.getMetaStateHandle(),never()).discardState();
  for (  StreamStateHandle stateHandle : stateHandleX.getSharedState().values()) {
    verify(stateHandle,never()).discardState();
  }
  SharedStateRegistry sharedStateRegistryB=spy(new SharedStateRegistry());
  stateHandleX.registerSharedStates(sharedStateRegistryB);
  stateHandleX.discardState();
  verify(stateHandleX.getMetaStateHandle(),times(1)).discardState();
  for (  StreamStateHandle stateHandle : stateHandleX.getSharedState().values()) {
    verify(stateHandle,times(1)).discardState();
  }
  sharedStateRegistryB.close();
}
