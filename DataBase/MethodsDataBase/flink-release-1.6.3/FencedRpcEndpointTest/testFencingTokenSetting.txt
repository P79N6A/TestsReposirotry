/** 
 * Tests that the fencing token can be retrieved from the FencedRpcEndpoint and self FencedRpcGateway. Moreover it tests that you can only set the fencing token from the main thread.
 */
@Test public void testFencingTokenSetting() throws Exception {
  final String value="foobar";
  FencedTestingEndpoint fencedTestingEndpoint=new FencedTestingEndpoint(rpcService,value);
  FencedTestingGateway fencedGateway=fencedTestingEndpoint.getSelfGateway(FencedTestingGateway.class);
  try {
    fencedTestingEndpoint.start();
    assertNull(fencedGateway.getFencingToken());
    assertNull(fencedTestingEndpoint.getFencingToken());
    final UUID newFencingToken=UUID.randomUUID();
    try {
      fencedTestingEndpoint.setFencingToken(newFencingToken);
      fail("Fencing token can only be set from within the main thread.");
    }
 catch (    AssertionError ignored) {
    }
    assertNull(fencedTestingEndpoint.getFencingToken());
    CompletableFuture<Acknowledge> setFencingFuture=fencedTestingEndpoint.setFencingTokenInMainThread(newFencingToken,timeout);
    setFencingFuture.get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
    assertEquals(newFencingToken,fencedGateway.getFencingToken());
    assertEquals(newFencingToken,fencedTestingEndpoint.getFencingToken());
  }
  finally {
    fencedTestingEndpoint.shutDown();
    fencedTestingEndpoint.getTerminationFuture().get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
  }
}
