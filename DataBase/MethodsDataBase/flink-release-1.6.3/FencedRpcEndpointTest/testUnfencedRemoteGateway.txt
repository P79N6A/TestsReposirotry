/** 
 * Tests that all calls from an unfenced remote gateway are ignored and that one cannot obtain the fencing token from such a gateway.
 */
@Test public void testUnfencedRemoteGateway() throws Exception {
  final UUID initialFencingToken=UUID.randomUUID();
  final String value="foobar";
  final FencedTestingEndpoint fencedTestingEndpoint=new FencedTestingEndpoint(rpcService,value,initialFencingToken);
  try {
    fencedTestingEndpoint.start();
    FencedTestingGateway unfencedGateway=rpcService.connect(fencedTestingEndpoint.getAddress(),FencedTestingGateway.class).get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
    try {
      unfencedGateway.foobar(timeout).get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
      fail("This should have failed because we have an unfenced gateway.");
    }
 catch (    ExecutionException e) {
      assertTrue(ExceptionUtils.stripExecutionException(e) instanceof RpcException);
    }
    try {
      unfencedGateway.getFencingToken();
      fail("We should not be able to call getFencingToken on an unfenced gateway.");
    }
 catch (    UnsupportedOperationException ignored) {
    }
  }
  finally {
    fencedTestingEndpoint.shutDown();
    fencedTestingEndpoint.getTerminationFuture().get(timeout.toMilliseconds(),TimeUnit.MILLISECONDS);
  }
}
