@Test public void testSnapshotAndRestore() throws Exception {
  LegacyKeyedProcessOperator<Integer,Integer,String> operator=new LegacyKeyedProcessOperator<>(new BothTriggeringFlatMapFunction());
  OneInputStreamOperatorTestHarness<Integer,String> testHarness=new KeyedOneInputStreamOperatorTestHarness<>(operator,new IdentityKeySelector<Integer>(),BasicTypeInfo.INT_TYPE_INFO);
  testHarness.setup();
  testHarness.open();
  testHarness.processElement(new StreamRecord<>(5,12L));
  OperatorSubtaskState snapshot=testHarness.snapshot(0,0);
  testHarness.close();
  operator=new LegacyKeyedProcessOperator<>(new BothTriggeringFlatMapFunction());
  testHarness=new KeyedOneInputStreamOperatorTestHarness<>(operator,new IdentityKeySelector<Integer>(),BasicTypeInfo.INT_TYPE_INFO);
  testHarness.setup();
  testHarness.initializeState(snapshot);
  testHarness.open();
  testHarness.setProcessingTime(5);
  testHarness.processWatermark(new Watermark(6));
  ConcurrentLinkedQueue<Object> expectedOutput=new ConcurrentLinkedQueue<>();
  expectedOutput.add(new StreamRecord<>("PROC:1777"));
  expectedOutput.add(new StreamRecord<>("EVENT:1777",6L));
  expectedOutput.add(new Watermark(6));
  TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
  testHarness.close();
}
