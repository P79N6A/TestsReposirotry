@Test public void testTimestampAndWatermarkQuerying() throws Exception {
  LegacyKeyedProcessOperator<Integer,Integer,String> operator=new LegacyKeyedProcessOperator<>(new QueryingFlatMapFunction(TimeDomain.EVENT_TIME));
  OneInputStreamOperatorTestHarness<Integer,String> testHarness=new KeyedOneInputStreamOperatorTestHarness<>(operator,new IdentityKeySelector<Integer>(),BasicTypeInfo.INT_TYPE_INFO);
  testHarness.setup();
  testHarness.open();
  testHarness.processWatermark(new Watermark(17));
  testHarness.processElement(new StreamRecord<>(5,12L));
  testHarness.processWatermark(new Watermark(42));
  testHarness.processElement(new StreamRecord<>(6,13L));
  ConcurrentLinkedQueue<Object> expectedOutput=new ConcurrentLinkedQueue<>();
  expectedOutput.add(new Watermark(17L));
  expectedOutput.add(new StreamRecord<>("5TIME:17 TS:12",12L));
  expectedOutput.add(new Watermark(42L));
  expectedOutput.add(new StreamRecord<>("6TIME:42 TS:13",13L));
  TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
  testHarness.close();
}
