@Test public void testGenericRecordReadWithCompatibleSchema() throws IOException {
  RegistryAvroDeserializationSchema<GenericRecord> deserializer=new RegistryAvroDeserializationSchema<>(GenericRecord.class,SchemaBuilder.record("Address").fields().requiredString("street").requiredInt("num").optionalString("country").endRecord(),() -> new SchemaCoder(){
    @Override public Schema readSchema(    InputStream in){
      return Address.getClassSchema();
    }
  }
);
  GenericRecord genericRecord=deserializer.deserialize(writeRecord(address,Address.getClassSchema()));
  assertEquals(address.getNum(),genericRecord.get("num"));
  assertEquals(address.getStreet(),genericRecord.get("street").toString());
  assertNull(genericRecord.get("city"));
  assertNull(genericRecord.get("state"));
  assertNull(genericRecord.get("zip"));
  assertNull(genericRecord.get("country"));
}
