@Test public void testBoundedBuffer() throws Exception {
  localBufferPool.lazyDestroy();
  localBufferPool=new LocalBufferPool(networkBufferPool,1,2);
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertEquals(2,localBufferPool.getMaxNumberOfMemorySegments());
  Buffer buffer1, buffer2;
  localBufferPool.setNumBuffers(1);
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNotNull(buffer1=localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNull(localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  buffer1.recycleBuffer();
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
  localBufferPool.setNumBuffers(2);
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNotNull(buffer1=localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNotNull(buffer2=localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNull(localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  buffer1.recycleBuffer();
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
  buffer2.recycleBuffer();
  assertEquals(2,localBufferPool.getNumberOfAvailableMemorySegments());
  localBufferPool.setNumBuffers(3);
  assertEquals(2,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNotNull(buffer1=localBufferPool.requestBuffer());
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNotNull(buffer2=localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNull(localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  buffer1.recycleBuffer();
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
  buffer2.recycleBuffer();
  assertEquals(2,localBufferPool.getNumberOfAvailableMemorySegments());
  localBufferPool.setNumBuffers(1);
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNotNull(buffer1=localBufferPool.requestBuffer());
  assertEquals(0,localBufferPool.getNumberOfAvailableMemorySegments());
  assertNull(localBufferPool.requestBuffer());
  buffer1.recycleBuffer();
  assertEquals(1,localBufferPool.getNumberOfAvailableMemorySegments());
}
