/** 
 * Tests that the conjunct future returns upon completion the collection of all future values
 */
@Test public void testConjunctFutureValue() throws ExecutionException, InterruptedException {
  java.util.concurrent.CompletableFuture<Integer> future1=java.util.concurrent.CompletableFuture.completedFuture(1);
  java.util.concurrent.CompletableFuture<Long> future2=java.util.concurrent.CompletableFuture.completedFuture(2L);
  java.util.concurrent.CompletableFuture<Double> future3=new java.util.concurrent.CompletableFuture<>();
  ConjunctFuture<Collection<Number>> result=FutureUtils.combineAll(Arrays.asList(future1,future2,future3));
  assertFalse(result.isDone());
  future3.complete(.1);
  assertTrue(result.isDone());
  assertThat(result.get(),IsIterableContainingInAnyOrder.<Number>containsInAnyOrder(1,2L,.1));
}
