/** 
 * Test ProcessFunction side outputs with wrong  {@code OutputTag}.
 */
@Test public void testProcessFunctionSideOutputWithWrongTag() throws Exception {
  final OutputTag<String> sideOutputTag1=new OutputTag<String>("side"){
  }
;
  final OutputTag<String> sideOutputTag2=new OutputTag<String>("other-side"){
  }
;
  TestListResultSink<String> sideOutputResultSink=new TestListResultSink<>();
  StreamExecutionEnvironment see=StreamExecutionEnvironment.getExecutionEnvironment();
  see.setParallelism(3);
  DataStream<Integer> dataStream=see.fromCollection(elements);
  dataStream.process(new ProcessFunction<Integer,Integer>(){
    private static final long serialVersionUID=1L;
    @Override public void processElement(    Integer value,    Context ctx,    Collector<Integer> out) throws Exception {
      out.collect(value);
      ctx.output(sideOutputTag2,"sideout-" + String.valueOf(value));
    }
  }
).getSideOutput(sideOutputTag1).addSink(sideOutputResultSink);
  see.execute();
  assertEquals(Arrays.asList(),sideOutputResultSink.getSortedResult());
}
