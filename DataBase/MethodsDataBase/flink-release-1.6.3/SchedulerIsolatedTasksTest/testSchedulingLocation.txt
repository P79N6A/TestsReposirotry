@Test public void testSchedulingLocation() throws Exception {
  final TaskManagerLocation taskManagerLocation1=testingSlotProvider.addTaskManager(2);
  final TaskManagerLocation taskManagerLocation2=testingSlotProvider.addTaskManager(2);
  final TaskManagerLocation taskManagerLocation3=testingSlotProvider.addTaskManager(2);
  LogicalSlot s1=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(new Instance[0])),false,SlotProfile.noRequirements(),TestingUtils.infiniteTime()).get();
  ResourceID firstResourceId=s1.getTaskManagerLocation().getResourceID();
  List<TaskManagerLocation> taskManagerLocations=Arrays.asList(taskManagerLocation1,taskManagerLocation2,taskManagerLocation3);
  int index=0;
  for (; index < taskManagerLocations.size(); index++) {
    if (Objects.equals(taskManagerLocations.get(index).getResourceID(),firstResourceId)) {
      break;
    }
  }
  TaskManagerLocation first=taskManagerLocations.get(index);
  TaskManagerLocation second=taskManagerLocations.get((index + 1) % taskManagerLocations.size());
  TaskManagerLocation third=taskManagerLocations.get((index + 2) % taskManagerLocations.size());
  LogicalSlot s2=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(s1.getTaskManagerLocation())),false,slotProfileForLocation(s1.getTaskManagerLocation()),TestingUtils.infiniteTime()).get();
  assertEquals(first.getResourceID(),s2.getTaskManagerLocation().getResourceID());
  LogicalSlot s3=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(first,second)),false,slotProfileForLocation(first,second),TestingUtils.infiniteTime()).get();
  assertEquals(second.getResourceID(),s3.getTaskManagerLocation().getResourceID());
  LogicalSlot s4=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(first,third)),false,slotProfileForLocation(first,third),TestingUtils.infiniteTime()).get();
  LogicalSlot s5=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(first,third)),false,slotProfileForLocation(first,third),TestingUtils.infiniteTime()).get();
  assertEquals(third.getResourceID(),s4.getTaskManagerLocation().getResourceID());
  assertEquals(third.getResourceID(),s5.getTaskManagerLocation().getResourceID());
  LogicalSlot s6=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(first,third)),false,slotProfileForLocation(first,third),TestingUtils.infiniteTime()).get();
  assertEquals(second.getResourceID(),s6.getTaskManagerLocation().getResourceID());
  s2.releaseSlot();
  s6.releaseSlot();
  LogicalSlot s7=testingSlotProvider.allocateSlot(new ScheduledUnit(getTestVertex(first,third)),false,slotProfileForLocation(first,third),TestingUtils.infiniteTime()).get();
  assertEquals(first.getResourceID(),s7.getTaskManagerLocation().getResourceID());
  assertEquals(1,testingSlotProvider.getNumberOfUnconstrainedAssignments());
  assertTrue(1 == testingSlotProvider.getNumberOfNonLocalizedAssignments() || 1 == testingSlotProvider.getNumberOfHostLocalizedAssignments());
  assertEquals(5,testingSlotProvider.getNumberOfLocalizedAssignments());
}
