@Test public void testRestore() throws Exception {
  final File outDir=tempFolder.newFolder();
  ValidatingBucketingSink<String> sink=(ValidatingBucketingSink<String>)new ValidatingBucketingSink<String>(outDir.getAbsolutePath(),expectedBucketFilesPrefix).setWriter(new StringWriter<String>()).setBatchSize(5).setPartPrefix(PART_PREFIX).setInProgressPrefix("").setPendingPrefix("").setValidLengthPrefix("").setInProgressSuffix(IN_PROGRESS_SUFFIX).setPendingSuffix(PENDING_SUFFIX).setValidLengthSuffix(VALID_LENGTH_SUFFIX).setUseTruncate(false);
  OneInputStreamOperatorTestHarness<String,Object> testHarness=new OneInputStreamOperatorTestHarness<>(new StreamSink<>(sink),10,1,0);
  testHarness.setup();
  MigrationTestUtil.restoreFromSnapshot(testHarness,OperatorSnapshotUtil.getResourceFilename("bucketing-sink-migration-test-flink" + testMigrateVersion + "-snapshot"),testMigrateVersion);
  testHarness.open();
  assertTrue(sink.initializeCalled);
  testHarness.processElement(new StreamRecord<>("test1",0L));
  testHarness.processElement(new StreamRecord<>("test2",0L));
  checkLocalFs(outDir,1,1,0,0);
  testHarness.close();
}
