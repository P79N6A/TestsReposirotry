@Test public void testDefaultRollingPolicy() throws Exception {
  final File outDir=TEMP_FOLDER.newFolder();
  final Path path=new Path(outDir.toURI());
  final RollingPolicy<String,String> originalRollingPolicy=DefaultRollingPolicy.create().withMaxPartSize(10L).withInactivityInterval(4L).withRolloverInterval(11L).build();
  final MethodCallCountingPolicyWrapper<String,String> rollingPolicy=new MethodCallCountingPolicyWrapper<>(originalRollingPolicy);
  final Buckets<String,String> buckets=createBuckets(path,rollingPolicy);
  rollingPolicy.verifyCallCounters(0L,0L,0L,0L,0L,0L);
  buckets.onElement("test1",new TestUtils.MockSinkContext(1L,1L,1L));
  buckets.onElement("test1",new TestUtils.MockSinkContext(2L,1L,2L));
  rollingPolicy.verifyCallCounters(0L,0L,1L,0L,0L,0L);
  buckets.onElement("test1",new TestUtils.MockSinkContext(3L,1L,3L));
  rollingPolicy.verifyCallCounters(0L,0L,2L,1L,0L,0L);
  buckets.onProcessingTime(5L);
  rollingPolicy.verifyCallCounters(0L,0L,2L,1L,1L,0L);
  buckets.onProcessingTime(7L);
  rollingPolicy.verifyCallCounters(0L,0L,2L,1L,2L,1L);
  buckets.onElement("test1",new TestUtils.MockSinkContext(3L,1L,3L));
  buckets.onProcessingTime(20L);
  rollingPolicy.verifyCallCounters(0L,0L,2L,1L,3L,2L);
  buckets.snapshotState(1L,new TestUtils.MockListState<>(),new TestUtils.MockListState<>());
  rollingPolicy.verifyCallCounters(0L,0L,2L,1L,3L,2L);
}
