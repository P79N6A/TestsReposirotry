@Test public void testRollOnCheckpointPolicy() throws Exception {
  final File outDir=TEMP_FOLDER.newFolder();
  final Path path=new Path(outDir.toURI());
  final MethodCallCountingPolicyWrapper<String,String> rollingPolicy=new MethodCallCountingPolicyWrapper<>(OnCheckpointRollingPolicy.build());
  final Buckets<String,String> buckets=createBuckets(path,rollingPolicy);
  rollingPolicy.verifyCallCounters(0L,0L,0L,0L,0L,0L);
  buckets.onElement("test1",new TestUtils.MockSinkContext(1L,1L,2L));
  buckets.onElement("test1",new TestUtils.MockSinkContext(2L,1L,2L));
  buckets.onElement("test1",new TestUtils.MockSinkContext(3L,1L,3L));
  buckets.snapshotState(1L,new TestUtils.MockListState<>(),new TestUtils.MockListState<>());
  rollingPolicy.verifyCallCounters(1L,1L,2L,0L,0L,0L);
  buckets.onElement("test1",new TestUtils.MockSinkContext(5L,1L,5L));
  buckets.snapshotState(2L,new TestUtils.MockListState<>(),new TestUtils.MockListState<>());
  rollingPolicy.verifyCallCounters(2L,2L,2L,0L,0L,0L);
  buckets.close();
}
