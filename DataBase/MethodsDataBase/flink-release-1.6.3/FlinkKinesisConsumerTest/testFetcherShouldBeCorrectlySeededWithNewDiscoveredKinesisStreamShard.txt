@Test @SuppressWarnings("unchecked") public void testFetcherShouldBeCorrectlySeededWithNewDiscoveredKinesisStreamShard() throws Exception {
  HashMap<StreamShardHandle,SequenceNumber> fakeRestoredState=getFakeRestoredStore("all");
  TestingListState<Tuple2<StreamShardMetadata,SequenceNumber>> listState=new TestingListState<>();
  for (  Map.Entry<StreamShardHandle,SequenceNumber> state : fakeRestoredState.entrySet()) {
    listState.add(Tuple2.of(KinesisDataFetcher.convertToStreamShardMetadata(state.getKey()),state.getValue()));
  }
  OperatorStateStore operatorStateStore=mock(OperatorStateStore.class);
  when(operatorStateStore.getUnionListState(Matchers.any(ListStateDescriptor.class))).thenReturn(listState);
  StateInitializationContext initializationContext=mock(StateInitializationContext.class);
  when(initializationContext.getOperatorStateStore()).thenReturn(operatorStateStore);
  when(initializationContext.isRestored()).thenReturn(true);
  KinesisDataFetcher mockedFetcher=Mockito.mock(KinesisDataFetcher.class);
  List<StreamShardHandle> shards=new ArrayList<>();
  shards.addAll(fakeRestoredState.keySet());
  shards.add(new StreamShardHandle("fakeStream2",new Shard().withShardId(KinesisShardIdGenerator.generateFromShardOrder(2))));
  when(mockedFetcher.discoverNewShardsToSubscribe()).thenReturn(shards);
  PowerMockito.whenNew(KinesisDataFetcher.class).withAnyArguments().thenReturn(mockedFetcher);
  PowerMockito.mockStatic(KinesisConfigUtil.class);
  PowerMockito.doNothing().when(KinesisConfigUtil.class);
  TestableFlinkKinesisConsumer consumer=new TestableFlinkKinesisConsumer("fakeStream",new Properties(),10,2);
  consumer.initializeState(initializationContext);
  consumer.open(new Configuration());
  consumer.run(Mockito.mock(SourceFunction.SourceContext.class));
  fakeRestoredState.put(new StreamShardHandle("fakeStream2",new Shard().withShardId(KinesisShardIdGenerator.generateFromShardOrder(2))),SentinelSequenceNumber.SENTINEL_EARLIEST_SEQUENCE_NUM.get());
  for (  Map.Entry<StreamShardHandle,SequenceNumber> restoredShard : fakeRestoredState.entrySet()) {
    Mockito.verify(mockedFetcher).registerNewSubscribedShardState(new KinesisStreamShardState(KinesisDataFetcher.convertToStreamShardMetadata(restoredShard.getKey()),restoredShard.getKey(),restoredShard.getValue()));
  }
}
