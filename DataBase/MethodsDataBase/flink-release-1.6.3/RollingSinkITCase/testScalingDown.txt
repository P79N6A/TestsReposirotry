@Test public void testScalingDown() throws Exception {
  final File outDir=tempFolder.newFolder();
  OneInputStreamOperatorTestHarness<String,Object> testHarness1=createRescalingTestSink(outDir,3,0);
  testHarness1.setup();
  testHarness1.open();
  OneInputStreamOperatorTestHarness<String,Object> testHarness2=createRescalingTestSink(outDir,3,1);
  testHarness2.setup();
  testHarness2.open();
  OneInputStreamOperatorTestHarness<String,Object> testHarness3=createRescalingTestSink(outDir,3,2);
  testHarness3.setup();
  testHarness3.open();
  testHarness1.processElement(new StreamRecord<>("test1",0L));
  checkLocalFs(outDir,1,0,0,0);
  testHarness2.processElement(new StreamRecord<>("test2",0L));
  testHarness2.processElement(new StreamRecord<>("test3",0L));
  testHarness2.processElement(new StreamRecord<>("test4",0L));
  testHarness2.processElement(new StreamRecord<>("test5",0L));
  testHarness2.processElement(new StreamRecord<>("test6",0L));
  checkLocalFs(outDir,2,4,0,0);
  testHarness3.processElement(new StreamRecord<>("test7",0L));
  testHarness3.processElement(new StreamRecord<>("test8",0L));
  checkLocalFs(outDir,3,5,0,0);
  OperatorSubtaskState mergedSnapshot=AbstractStreamOperatorTestHarness.repackageState(testHarness3.snapshot(0,0),testHarness1.snapshot(0,0),testHarness2.snapshot(0,0));
  OneInputStreamOperatorTestHarness<String,Object> testHarness4=createRescalingTestSink(outDir,2,0);
  testHarness4.setup();
  testHarness4.initializeState(mergedSnapshot);
  testHarness4.open();
  checkLocalFs(outDir,1,4,3,2);
  OneInputStreamOperatorTestHarness<String,Object> testHarness5=createRescalingTestSink(outDir,2,1);
  testHarness5.setup();
  testHarness5.initializeState(mergedSnapshot);
  testHarness5.open();
  checkLocalFs(outDir,0,0,8,3);
}
