@Test public void testBroadcastState() throws Exception {
  final Set<String> keysToRegister=new HashSet<>();
  keysToRegister.add("test1");
  keysToRegister.add("test2");
  keysToRegister.add("test3");
  try (TwoInputStreamOperatorTestHarness<String,Integer,String> testHarness=getInitializedTestHarness(new TestFunction(keysToRegister),STATE_DESCRIPTOR)){
    testHarness.processWatermark1(new Watermark(10L));
    testHarness.processWatermark2(new Watermark(10L));
    testHarness.processElement2(new StreamRecord<>(5,12L));
    testHarness.processWatermark1(new Watermark(40L));
    testHarness.processWatermark2(new Watermark(40L));
    testHarness.processElement1(new StreamRecord<>("6",13L));
    testHarness.processElement1(new StreamRecord<>("6",15L));
    testHarness.processWatermark1(new Watermark(50L));
    testHarness.processWatermark2(new Watermark(50L));
    Queue<Object> expectedOutput=new ConcurrentLinkedQueue<>();
    expectedOutput.add(new Watermark(10L));
    expectedOutput.add(new StreamRecord<>("5WM:10 TS:12",12L));
    expectedOutput.add(new Watermark(40L));
    expectedOutput.add(new StreamRecord<>("6WM:40 TS:13",13L));
    expectedOutput.add(new StreamRecord<>("6WM:40 TS:15",15L));
    expectedOutput.add(new Watermark(50L));
    TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
  }
 }
