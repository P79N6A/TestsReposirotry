@Test public void testFinalizeIsCalledUponSuccess() throws Exception {
  final JobID jid=new JobID();
  final JobVertex vertex1=spy(new JobVertex("test vertex 1"));
  vertex1.setInvokableClass(NoOpInvokable.class);
  vertex1.setParallelism(3);
  final JobVertex vertex2=spy(new JobVertex("test vertex 2"));
  vertex2.setInvokableClass(NoOpInvokable.class);
  vertex2.setParallelism(2);
  final ExecutionGraph eg=createSimpleTestGraph(jid,vertex1,vertex2);
  eg.scheduleForExecution();
  assertEquals(JobStatus.RUNNING,eg.getState());
  ExecutionGraphTestUtils.switchAllVerticesToRunning(eg);
  ExecutionGraphTestUtils.finishAllVertices(eg);
  assertEquals(JobStatus.FINISHED,eg.waitUntilTerminal());
  verify(vertex1,times(1)).finalizeOnMaster(any(ClassLoader.class));
  verify(vertex2,times(1)).finalizeOnMaster(any(ClassLoader.class));
  assertEquals(0,eg.getRegisteredExecutions().size());
}
