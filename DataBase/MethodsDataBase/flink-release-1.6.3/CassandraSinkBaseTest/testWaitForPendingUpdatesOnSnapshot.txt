@Test(timeout=5000) public void testWaitForPendingUpdatesOnSnapshot() throws Exception {
  TestCassandraSink casSinkFunc=new TestCassandraSink();
  OneInputStreamOperatorTestHarness<String,Object> testHarness=new OneInputStreamOperatorTestHarness<>(new StreamSink<>(casSinkFunc));
  testHarness.open();
  CompletableFuture<ResultSet> completableFuture=new CompletableFuture<>();
  ResultSetFuture resultSetFuture=ResultSetFutures.fromCompletableFuture(completableFuture);
  casSinkFunc.setResultFuture(resultSetFuture);
  casSinkFunc.invoke("hello");
  Assert.assertEquals(1,casSinkFunc.getNumOfPendingRecords());
  Thread t=new CheckedThread("Flink-CassandraSinkBaseTest"){
    @Override public void go() throws Exception {
      testHarness.snapshot(123L,123L);
    }
  }
;
  t.start();
  while (t.getState() != Thread.State.WAITING) {
    Thread.sleep(5);
  }
  Assert.assertEquals(1,casSinkFunc.getNumOfPendingRecords());
  completableFuture.complete(null);
  Assert.assertEquals(0,casSinkFunc.getNumOfPendingRecords());
  testHarness.close();
}
