@Test public void testExecutionGraphArbitraryDopConstructionTest() throws Exception {
  final Configuration config=new Configuration();
  final int initialParallelism=5;
  final int maxParallelism=10;
  final JobVertex[] jobVertices=createVerticesForSimpleBipartiteJobGraph(initialParallelism,maxParallelism);
  final JobGraph jobGraph=new JobGraph(jobVertices);
  ExecutionGraph eg=ExecutionGraphBuilder.buildGraph(null,jobGraph,config,TestingUtils.defaultExecutor(),TestingUtils.defaultExecutor(),new Scheduler(TestingUtils.defaultExecutionContext()),Thread.currentThread().getContextClassLoader(),new StandaloneCheckpointRecoveryFactory(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy(),new UnregisteredMetricsGroup(),VoidBlobWriter.getInstance(),AkkaUtils.getDefaultTimeout(),TEST_LOGGER);
  for (  JobVertex jv : jobVertices) {
    assertThat(jv.getParallelism(),is(initialParallelism));
  }
  verifyGeneratedExecutionGraphOfSimpleBitartiteJobGraph(eg,jobVertices);
  final int scaleDownParallelism=1;
  for (  JobVertex jv : jobVertices) {
    jv.setParallelism(scaleDownParallelism);
  }
  eg=ExecutionGraphBuilder.buildGraph(null,jobGraph,config,TestingUtils.defaultExecutor(),TestingUtils.defaultExecutor(),new Scheduler(TestingUtils.defaultExecutionContext()),Thread.currentThread().getContextClassLoader(),new StandaloneCheckpointRecoveryFactory(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy(),new UnregisteredMetricsGroup(),VoidBlobWriter.getInstance(),AkkaUtils.getDefaultTimeout(),TEST_LOGGER);
  for (  JobVertex jv : jobVertices) {
    assertThat(jv.getParallelism(),is(1));
  }
  verifyGeneratedExecutionGraphOfSimpleBitartiteJobGraph(eg,jobVertices);
  final int scaleUpParallelism=10;
  for (  JobVertex jv : jobVertices) {
    jv.setParallelism(scaleUpParallelism);
  }
  eg=ExecutionGraphBuilder.buildGraph(null,jobGraph,config,TestingUtils.defaultExecutor(),TestingUtils.defaultExecutor(),new Scheduler(TestingUtils.defaultExecutionContext()),Thread.currentThread().getContextClassLoader(),new StandaloneCheckpointRecoveryFactory(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy(),new UnregisteredMetricsGroup(),VoidBlobWriter.getInstance(),AkkaUtils.getDefaultTimeout(),TEST_LOGGER);
  for (  JobVertex jv : jobVertices) {
    assertThat(jv.getParallelism(),is(scaleUpParallelism));
  }
  verifyGeneratedExecutionGraphOfSimpleBitartiteJobGraph(eg,jobVertices);
}
