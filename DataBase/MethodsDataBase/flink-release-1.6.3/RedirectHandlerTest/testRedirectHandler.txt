/** 
 * Tests the behaviour of the RedirectHandler under the following conditions. <p>1. No local address known --> service unavailable 2. Local address known but no gateway resolved --> service unavailable 3. Remote leader gateway --> redirection 4. Local leader gateway
 * @throws Exception
 */
@Test public void testRedirectHandler() throws Exception {
  final String restPath="/testing";
  final String correctAddress="foobar:21345";
  final String redirectionAddress="http://foobar:12345";
  final String expectedRedirection=redirectionAddress + restPath;
  final Configuration configuration=new Configuration();
  final Router router=new Router();
  final Time timeout=Time.seconds(10L);
  final CompletableFuture<String> localAddressFuture=new CompletableFuture<>();
  final GatewayRetriever<RestfulGateway> gatewayRetriever=mock(GatewayRetriever.class);
  final RestfulGateway redirectionGateway=mock(RestfulGateway.class);
  when(redirectionGateway.requestRestAddress(any(Time.class))).thenReturn(CompletableFuture.completedFuture(redirectionAddress));
  final RestfulGateway localGateway=mock(RestfulGateway.class);
  when(localGateway.requestRestAddress(any(Time.class))).thenReturn(CompletableFuture.completedFuture(correctAddress));
  when(gatewayRetriever.getNow()).thenReturn(Optional.empty(),Optional.of(redirectionGateway),Optional.of(localGateway));
  final TestingHandler testingHandler=new TestingHandler(localAddressFuture,gatewayRetriever,timeout);
  router.addGet(restPath,testingHandler);
  WebFrontendBootstrap bootstrap=new WebFrontendBootstrap(router,log,null,null,"localhost",0,configuration);
  try (HttpTestClient httpClient=new HttpTestClient("localhost",bootstrap.getServerPort())){
    httpClient.sendGetRequest(restPath,FutureUtils.toFiniteDuration(timeout));
    HttpTestClient.SimpleHttpResponse response=httpClient.getNextResponse(FutureUtils.toFiniteDuration(timeout));
    Assert.assertEquals(HttpResponseStatus.INTERNAL_SERVER_ERROR,response.getStatus());
    localAddressFuture.complete(correctAddress);
    httpClient.sendGetRequest(restPath,FutureUtils.toFiniteDuration(timeout));
    response=httpClient.getNextResponse(FutureUtils.toFiniteDuration(timeout));
    Assert.assertEquals(HttpResponseStatus.SERVICE_UNAVAILABLE,response.getStatus());
    httpClient.sendGetRequest(restPath,FutureUtils.toFiniteDuration(timeout));
    response=httpClient.getNextResponse(FutureUtils.toFiniteDuration(timeout));
    Assert.assertEquals(HttpResponseStatus.TEMPORARY_REDIRECT,response.getStatus());
    Assert.assertEquals(expectedRedirection,response.getLocation());
    httpClient.sendGetRequest(restPath,FutureUtils.toFiniteDuration(timeout));
    response=httpClient.getNextResponse(FutureUtils.toFiniteDuration(timeout));
    Assert.assertEquals(HttpResponseStatus.OK,response.getStatus());
    Assert.assertEquals(RESPONSE_MESSAGE,response.getContent());
  }
  finally {
    bootstrap.shutdown();
  }
}
