@Test public void testSerializationOnlyInProgress() throws IOException {
  final File testFolder=tempFolder.newFolder();
  final FileSystem fs=FileSystem.get(testFolder.toURI());
  final Path testBucket=new Path(testFolder.getPath(),"test");
  final RecoverableWriter writer=fs.createRecoverableWriter();
  final RecoverableFsDataOutputStream stream=writer.open(testBucket);
  stream.write(IN_PROGRESS_CONTENT.getBytes(Charset.forName("UTF-8")));
  final RecoverableWriter.ResumeRecoverable current=stream.persist();
  final BucketState<String> bucketState=new BucketState<>("test",testBucket,Long.MAX_VALUE,current,new HashMap<>());
  final SimpleVersionedSerializer<BucketState<String>> serializer=new BucketStateSerializer<>(writer.getResumeRecoverableSerializer(),writer.getCommitRecoverableSerializer(),SimpleVersionedStringSerializer.INSTANCE);
  final byte[] bytes=SimpleVersionedSerialization.writeVersionAndSerialize(serializer,bucketState);
  stream.close();
  final BucketState<String> recoveredState=SimpleVersionedSerialization.readVersionAndDeSerialize(serializer,bytes);
  Assert.assertEquals(testBucket,recoveredState.getBucketPath());
  FileStatus[] statuses=fs.listStatus(testBucket.getParent());
  Assert.assertEquals(1L,statuses.length);
  Assert.assertTrue(statuses[0].getPath().getPath().startsWith((new Path(testBucket.getParent(),".test.inprogress")).toString()));
}
