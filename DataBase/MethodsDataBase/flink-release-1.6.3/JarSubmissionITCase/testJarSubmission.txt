@Test public void testJarSubmission() throws Exception {
  final TestingDispatcherGateway restfulGateway=new TestingDispatcherGateway.Builder().setBlobServerPort(blobServerResource.getBlobServerPort()).setSubmitFunction(jobGraph -> CompletableFuture.completedFuture(Acknowledge.get())).build();
  final JarHandlers handlers=new JarHandlers(temporaryFolder.newFolder().toPath(),restfulGateway);
  final JarUploadHandler uploadHandler=handlers.uploadHandler;
  final JarListHandler listHandler=handlers.listHandler;
  final JarPlanHandler planHandler=handlers.planHandler;
  final JarRunHandler runHandler=handlers.runHandler;
  final JarDeleteHandler deleteHandler=handlers.deleteHandler;
  final Path originalJar=Paths.get(System.getProperty("targetDir")).resolve("test-program.jar");
  final Path jar=Files.copy(originalJar,temporaryFolder.getRoot().toPath().resolve("test-program.jar"));
  final String storedJarPath=uploadJar(uploadHandler,jar,restfulGateway);
  final String storedJarName=Paths.get(storedJarPath).getFileName().toString();
  final JarListInfo postUploadListResponse=listJars(listHandler,restfulGateway);
  Assert.assertEquals(1,postUploadListResponse.jarFileList.size());
  final JarListInfo.JarFileInfo listEntry=postUploadListResponse.jarFileList.iterator().next();
  Assert.assertEquals(jar.getFileName().toString(),listEntry.name);
  Assert.assertEquals(storedJarName,listEntry.id);
  final JobPlanInfo planResponse=showPlan(planHandler,storedJarName,restfulGateway);
  Assert.assertThat(planResponse.getJsonPlan(),containsString("TestProgram.java:29"));
  runJar(runHandler,storedJarName,restfulGateway);
  deleteJar(deleteHandler,storedJarName,restfulGateway);
  final JarListInfo postDeleteListResponse=listJars(listHandler,restfulGateway);
  Assert.assertEquals(0,postDeleteListResponse.jarFileList.size());
}
