/** 
 * Tests that event buffers are properly recycled when broadcasting events to multiple channels.
 */
@Test public void testBroadcastEventBufferReferenceCounting() throws Exception {
  @SuppressWarnings("unchecked") ArrayDeque<BufferConsumer>[] queues=new ArrayDeque[]{new ArrayDeque(),new ArrayDeque()};
  ResultPartitionWriter partition=new CollectingPartitionWriter(queues,new TestPooledBufferProvider(Integer.MAX_VALUE));
  RecordWriter<?> writer=new RecordWriter<>(partition);
  writer.broadcastEvent(EndOfPartitionEvent.INSTANCE);
  assertEquals(1,queues[0].size());
  assertEquals(1,queues[1].size());
  BufferConsumer bufferConsumer1=queues[0].getFirst();
  BufferConsumer bufferConsumer2=queues[1].getFirst();
  for (int i=0; i < queues.length; i++) {
    assertTrue(parseBuffer(queues[i].remove(),i).isEvent());
  }
  assertTrue(bufferConsumer1.isRecycled());
  assertTrue(bufferConsumer2.isRecycled());
}
