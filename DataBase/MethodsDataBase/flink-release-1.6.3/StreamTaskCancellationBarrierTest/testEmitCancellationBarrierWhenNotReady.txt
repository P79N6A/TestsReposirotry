/** 
 * This test checks that tasks emit a proper cancel checkpoint barrier, if a "trigger checkpoint" message comes before they are ready.
 */
@Test public void testEmitCancellationBarrierWhenNotReady() throws Exception {
  StreamTaskTestHarness<String> testHarness=new StreamTaskTestHarness<>(InitBlockingTask::new,BasicTypeInfo.STRING_TYPE_INFO);
  testHarness.setupOutputForSingletonOperatorChain();
  testHarness.invoke();
  StreamTask<String,?> task=testHarness.getTask();
  boolean result=task.triggerCheckpoint(new CheckpointMetaData(41L,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation());
  assertFalse("task triggered checkpoint though not ready",result);
  Object emitted=testHarness.getOutput().poll();
  assertNotNull("nothing emitted",emitted);
  assertTrue("wrong type emitted",emitted instanceof CancelCheckpointMarker);
  assertEquals("wrong checkpoint id",41L,((CancelCheckpointMarker)emitted).getCheckpointId());
}
