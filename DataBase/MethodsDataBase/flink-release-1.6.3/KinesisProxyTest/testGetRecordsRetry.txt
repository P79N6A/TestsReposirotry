@Test public void testGetRecordsRetry() throws Exception {
  Properties kinesisConsumerConfig=new Properties();
  kinesisConsumerConfig.setProperty(ConsumerConfigConstants.AWS_REGION,"us-east-1");
  final GetRecordsResult expectedResult=new GetRecordsResult();
  MutableInt retries=new MutableInt();
  final Throwable[] retriableExceptions=new Throwable[]{new AmazonKinesisException("mock")};
  AmazonKinesisClient mockClient=mock(AmazonKinesisClient.class);
  Mockito.when(mockClient.getRecords(any())).thenAnswer(new Answer<GetRecordsResult>(){
    @Override public GetRecordsResult answer(    InvocationOnMock invocation) throws Throwable {
      if (retries.intValue() < retriableExceptions.length) {
        retries.increment();
        throw retriableExceptions[retries.intValue() - 1];
      }
      return expectedResult;
    }
  }
);
  KinesisProxy kinesisProxy=new KinesisProxy(kinesisConsumerConfig);
  Whitebox.getField(KinesisProxy.class,"kinesisClient").set(kinesisProxy,mockClient);
  GetRecordsResult result=kinesisProxy.getRecords("fakeShardIterator",1);
  assertEquals(retriableExceptions.length,retries.intValue());
  assertEquals(expectedResult,result);
}
