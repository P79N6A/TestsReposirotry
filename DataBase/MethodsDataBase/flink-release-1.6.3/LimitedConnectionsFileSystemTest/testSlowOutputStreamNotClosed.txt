/** 
 * Tests that a slowly written output stream is not accidentally closed too aggressively, due to a wrong initialization of the timestamps or bytes written that mark when the last progress was checked.
 */
@Test public void testSlowOutputStreamNotClosed() throws Exception {
  final LimitedConnectionsFileSystem fs=new LimitedConnectionsFileSystem(LocalFileSystem.getSharedInstance(),1,0L,1000L);
  final Random rnd=new Random();
  final ReaderThread[] threads=new ReaderThread[10];
  for (int i=0; i < threads.length; i++) {
    File file=tempFolder.newFile();
    createRandomContents(file,rnd);
    Path path=new Path(file.toURI());
    threads[i]=new ReaderThread(fs,path,1,Integer.MAX_VALUE);
  }
  try (FSDataOutputStream out=fs.create(new Path(tempFolder.newFile().toURI()),WriteMode.OVERWRITE)){
    for (    ReaderThread t : threads) {
      t.start();
    }
    Thread.sleep(5);
    for (int bytesLeft=50; bytesLeft > 0; bytesLeft--) {
      out.write(bytesLeft);
      Thread.sleep(5);
    }
  }
   for (  ReaderThread t : threads) {
    t.sync();
  }
}
