@Test public void testOpenTimeoutInputStreams() throws Exception {
  final long openTimeout=50L;
  final int maxConcurrentOpen=2;
  final LimitedConnectionsFileSystem limitedFs=new LimitedConnectionsFileSystem(LocalFileSystem.getSharedInstance(),maxConcurrentOpen,openTimeout,0L);
  final Random rnd=new Random();
  final BlockingReaderThread[] threads=new BlockingReaderThread[maxConcurrentOpen];
  for (int i=0; i < maxConcurrentOpen; i++) {
    File file=tempFolder.newFile();
    createRandomContents(file,rnd);
    Path path=new Path(file.toURI());
    threads[i]=new BlockingReaderThread(limitedFs,path,maxConcurrentOpen,Integer.MAX_VALUE);
    threads[i].start();
  }
  while (limitedFs.getTotalNumberOfOpenStreams() < maxConcurrentOpen) {
    Thread.sleep(1);
  }
  File file=tempFolder.newFile();
  createRandomContents(file,rnd);
  try {
    limitedFs.open(new Path(file.toURI()));
    fail("this should have timed out");
  }
 catch (  IOException e) {
  }
  for (  BlockingReaderThread t : threads) {
    t.wakeup();
    t.sync();
  }
}
