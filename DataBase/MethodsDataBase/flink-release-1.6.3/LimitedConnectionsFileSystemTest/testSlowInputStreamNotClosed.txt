/** 
 * Tests that a slowly read stream is not accidentally closed too aggressively, due to a wrong initialization of the timestamps or bytes written that mark when the last progress was checked.
 */
@Test public void testSlowInputStreamNotClosed() throws Exception {
  final File file=tempFolder.newFile();
  createRandomContents(file,new Random(),50);
  final LimitedConnectionsFileSystem fs=new LimitedConnectionsFileSystem(LocalFileSystem.getSharedInstance(),1,0L,1000L);
  final WriterThread[] threads=new WriterThread[10];
  for (int i=0; i < threads.length; i++) {
    Path path=new Path(tempFolder.newFile().toURI());
    threads[i]=new WriterThread(fs,path,1,Integer.MAX_VALUE);
  }
  try (FSDataInputStream in=fs.open(new Path(file.toURI()))){
    for (    WriterThread t : threads) {
      t.start();
    }
    Thread.sleep(5);
    while (in.read() != -1) {
      Thread.sleep(5);
    }
  }
   for (  WriterThread t : threads) {
    t.sync();
  }
}
