@Test public void testOpenTimeoutOutputStreams() throws Exception {
  final long openTimeout=50L;
  final int maxConcurrentOpen=2;
  final LimitedConnectionsFileSystem limitedFs=new LimitedConnectionsFileSystem(LocalFileSystem.getSharedInstance(),maxConcurrentOpen,openTimeout,0L);
  final BlockingWriterThread[] threads=new BlockingWriterThread[maxConcurrentOpen];
  for (int i=0; i < maxConcurrentOpen; i++) {
    Path path=new Path(tempFolder.newFile().toURI());
    threads[i]=new BlockingWriterThread(limitedFs,path,Integer.MAX_VALUE,maxConcurrentOpen);
    threads[i].start();
  }
  while (limitedFs.getTotalNumberOfOpenStreams() < maxConcurrentOpen) {
    Thread.sleep(1);
  }
  try {
    limitedFs.create(new Path(tempFolder.newFile().toURI()),WriteMode.OVERWRITE);
    fail("this should have timed out");
  }
 catch (  IOException e) {
  }
  for (  BlockingWriterThread t : threads) {
    t.wakeup();
    t.sync();
  }
}
