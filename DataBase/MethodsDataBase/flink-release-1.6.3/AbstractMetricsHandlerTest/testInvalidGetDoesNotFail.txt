/** 
 * Verifies that a malformed request for a metric value does not throw an exception.
 */
@Test public void testInvalidGetDoesNotFail(){
  MetricFetcher fetcher=new MetricFetcher(mock(GatewayRetriever.class),mock(MetricQueryServiceRetriever.class),Executors.directExecutor(),TestingUtils.TIMEOUT());
  MetricStoreTest.setupStore(fetcher.getMetricStore());
  JobVertexMetricsHandler handler=new JobVertexMetricsHandler(Executors.directExecutor(),fetcher);
  Map<String,String> pathParams=new HashMap<>();
  Map<String,String> queryParams=new HashMap<>();
  pathParams.put("jobid","jobid");
  pathParams.put("vertexid","taskid");
  queryParams.put("get","");
  try {
    assertEquals("",handler.handleJsonRequest(pathParams,queryParams,null).get());
  }
 catch (  Exception e) {
    fail(e.getMessage());
  }
  pathParams.put("jobid","nonexistent");
  queryParams.put("get","subindex.opname.abc.metric5");
  try {
    assertEquals("",handler.handleJsonRequest(pathParams,queryParams,null).get());
  }
 catch (  Exception e) {
    fail(e.getMessage());
  }
  pathParams.put("jobid","nonexistant");
  queryParams.put("get","subindex.opname.abc.nonexistant");
  try {
    assertEquals("",handler.handleJsonRequest(pathParams,queryParams,null).get());
  }
 catch (  Exception e) {
    fail(e.getMessage());
  }
}
