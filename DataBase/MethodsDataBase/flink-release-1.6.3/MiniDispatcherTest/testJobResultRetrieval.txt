/** 
 * Tests that the  {@link MiniDispatcher} only terminates in {@link ClusterEntrypoint.ExecutionMode#NORMAL}after it has served the  {@link org.apache.flink.runtime.jobmaster.JobResult} once.
 */
@Test public void testJobResultRetrieval() throws Exception {
  final MiniDispatcher miniDispatcher=createMiniDispatcher(ClusterEntrypoint.ExecutionMode.NORMAL);
  miniDispatcher.start();
  try {
    dispatcherLeaderElectionService.isLeader(UUID.randomUUID()).get();
    jobGraphFuture.get();
    resultFuture.complete(archivedExecutionGraph);
    assertFalse(miniDispatcher.getTerminationFuture().isDone());
    final DispatcherGateway dispatcherGateway=miniDispatcher.getSelfGateway(DispatcherGateway.class);
    final CompletableFuture<JobResult> jobResultFuture=dispatcherGateway.requestJobResult(jobGraph.getJobID(),timeout);
    final JobResult jobResult=jobResultFuture.get();
    assertThat(jobResult.getJobId(),is(jobGraph.getJobID()));
  }
  finally {
    RpcUtils.terminateRpcEndpoint(miniDispatcher,timeout);
  }
}
