@Test @SuppressWarnings("unchecked") public void testRetryOnError() throws Exception {
  final String testId="Petit a petit, l'oiseau fait son nid";
  final String testEndpointAddress="<test-address>";
  final UUID leaderId=UUID.randomUUID();
  TestRegistrationGateway testGateway=mock(TestRegistrationGateway.class);
  when(testGateway.registrationCall(any(UUID.class),anyLong())).thenReturn(FutureUtils.completedExceptionally(new Exception("test exception")),CompletableFuture.completedFuture(new TestRegistrationSuccess(testId)));
  rpcService.registerGateway(testEndpointAddress,testGateway);
  TestRetryingRegistration registration=new TestRetryingRegistration(rpcService,testEndpointAddress,leaderId);
  long started=System.nanoTime();
  registration.startRegistration();
  CompletableFuture<Tuple2<TestRegistrationGateway,TestRegistrationSuccess>> future=registration.getFuture();
  Tuple2<TestRegistrationGateway,TestRegistrationSuccess> success=future.get(10,TimeUnit.SECONDS);
  long finished=System.nanoTime();
  long elapsedMillis=(finished - started) / 1000000;
  assertEquals(testId,success.f1.getCorrelationId());
  assertTrue("retries did not properly back off",elapsedMillis >= TestRetryingRegistration.DELAY_ON_ERROR);
}
