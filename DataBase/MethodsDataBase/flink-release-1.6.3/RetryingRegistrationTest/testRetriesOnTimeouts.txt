@Test(timeout=10000) public void testRetriesOnTimeouts() throws Exception {
  final String testId="rien ne va plus";
  final String testEndpointAddress="<test-address>";
  final UUID leaderId=UUID.randomUUID();
  TestRegistrationGateway testGateway=new TestRegistrationGateway(null,null,new TestRegistrationSuccess(testId));
  try {
    rpcService.registerGateway(testEndpointAddress,testGateway);
    final long initialTimeout=20L;
    TestRetryingRegistration registration=new TestRetryingRegistration(rpcService,testEndpointAddress,leaderId,initialTimeout,1000L,15000L,15000L);
    long started=System.nanoTime();
    registration.startRegistration();
    CompletableFuture<Tuple2<TestRegistrationGateway,TestRegistrationSuccess>> future=registration.getFuture();
    Tuple2<TestRegistrationGateway,TestRegistrationSuccess> success=future.get(10L,TimeUnit.SECONDS);
    long finished=System.nanoTime();
    long elapsedMillis=(finished - started) / 1000000;
    assertEquals(testId,success.f1.getCorrelationId());
    assertEquals(leaderId,testGateway.getInvocations().take().leaderId());
    assertTrue("retries did not properly back off",elapsedMillis >= 3 * initialTimeout);
  }
  finally {
    testGateway.stop();
  }
}
