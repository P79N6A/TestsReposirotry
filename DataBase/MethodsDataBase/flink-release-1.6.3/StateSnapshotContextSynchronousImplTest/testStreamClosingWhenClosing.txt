/** 
 * Tests that closing the StateSnapshotContextSynchronousImpl will also close the associated output streams.
 */
@Test public void testStreamClosingWhenClosing() throws Exception {
  long checkpointId=42L;
  long checkpointTimestamp=1L;
  CheckpointStreamFactory.CheckpointStateOutputStream outputStream1=mock(CheckpointStreamFactory.CheckpointStateOutputStream.class);
  CheckpointStreamFactory.CheckpointStateOutputStream outputStream2=mock(CheckpointStreamFactory.CheckpointStateOutputStream.class);
  CheckpointStreamFactory streamFactory=mock(CheckpointStreamFactory.class);
  when(streamFactory.createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE)).thenReturn(outputStream1,outputStream2);
  InsightCloseableRegistry closableRegistry=new InsightCloseableRegistry();
  KeyGroupRange keyGroupRange=new KeyGroupRange(0,2);
  StateSnapshotContextSynchronousImpl context=new StateSnapshotContextSynchronousImpl(checkpointId,checkpointTimestamp,streamFactory,keyGroupRange,closableRegistry);
  context.getRawKeyedOperatorStateOutput();
  context.getRawOperatorStateOutput();
  verify(streamFactory,times(2)).createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE);
  assertEquals(2,closableRegistry.size());
  assertTrue(closableRegistry.contains(outputStream1));
  assertTrue(closableRegistry.contains(outputStream2));
  context.close();
  verify(outputStream1).close();
  verify(outputStream2).close();
  assertEquals(0,closableRegistry.size());
}
