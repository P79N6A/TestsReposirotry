/** 
 * Tests reassignment works correctly in the case when: - the consumer already have some assignments - new unassigned partitions already have defined offsets - the consumer was woken up prior to the reassignment <p>In this case, reassignment should not have occurred at all, and the consumer retains the original assignment. <p>Setting a timeout because the test will not finish if there is logic error with the reassignment flow.
 */
@SuppressWarnings("unchecked") @Test(timeout=10000) public void testReassigningPartitionsWithDefinedOffsetsWhenEarlyWakeup() throws Exception {
  final String testTopic="test-topic";
  KafkaTopicPartitionState<TopicPartition> oldPartition1=new KafkaTopicPartitionState<>(new KafkaTopicPartition(testTopic,0),new TopicPartition(testTopic,0));
  oldPartition1.setOffset(23L);
  KafkaTopicPartitionState<TopicPartition> oldPartition2=new KafkaTopicPartitionState<>(new KafkaTopicPartition(testTopic,1),new TopicPartition(testTopic,1));
  oldPartition2.setOffset(32L);
  List<KafkaTopicPartitionState<TopicPartition>> oldPartitions=new ArrayList<>(2);
  oldPartitions.add(oldPartition1);
  oldPartitions.add(oldPartition2);
  KafkaTopicPartitionState<TopicPartition> newPartition=new KafkaTopicPartitionState<>(new KafkaTopicPartition(testTopic,2),new TopicPartition(testTopic,2));
  newPartition.setOffset(29L);
  final Map<TopicPartition,Long> mockConsumerAssignmentsToPositions=new LinkedHashMap<>();
  for (  KafkaTopicPartitionState<TopicPartition> oldPartition : oldPartitions) {
    mockConsumerAssignmentsToPositions.put(oldPartition.getKafkaPartitionHandle(),oldPartition.getOffset() + 1);
  }
  final KafkaConsumer<byte[],byte[]> mockConsumer=createMockConsumer(mockConsumerAssignmentsToPositions,Collections.<TopicPartition,Long>emptyMap(),true,null,null);
  final ClosableBlockingQueue<KafkaTopicPartitionState<TopicPartition>> unassignedPartitionsQueue=new ClosableBlockingQueue<>();
  unassignedPartitionsQueue.add(newPartition);
  final TestKafkaConsumerThread testThread=new TestKafkaConsumerThread(mockConsumer,unassignedPartitionsQueue,new Handover());
  testThread.start();
  testThread.waitPartitionReassignmentInvoked();
  testThread.setOffsetsToCommit(new HashMap<TopicPartition,OffsetAndMetadata>(),mock(KafkaCommitCallback.class));
  verify(mockConsumer,times(1)).wakeup();
  testThread.startPartitionReassignment();
  testThread.waitPartitionReassignmentComplete();
  assertEquals(oldPartitions.size(),mockConsumerAssignmentsToPositions.size());
  for (  KafkaTopicPartitionState<TopicPartition> oldPartition : oldPartitions) {
    assertTrue(mockConsumerAssignmentsToPositions.containsKey(oldPartition.getKafkaPartitionHandle()));
    assertEquals(oldPartition.getOffset() + 1,mockConsumerAssignmentsToPositions.get(oldPartition.getKafkaPartitionHandle()).longValue());
  }
  assertEquals(1,unassignedPartitionsQueue.size());
}
