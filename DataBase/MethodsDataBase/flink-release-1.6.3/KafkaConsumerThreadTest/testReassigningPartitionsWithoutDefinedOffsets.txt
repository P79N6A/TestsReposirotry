/** 
 * Tests reassignment works correctly in the case when: - the consumer already have some assignments - new unassigned partitions have undefined offsets (e.g. EARLIEST_OFFSET sentinel value) <p>Setting a timeout because the test will not finish if there is logic error with the reassignment flow.
 */
@SuppressWarnings("unchecked") @Test(timeout=10000) public void testReassigningPartitionsWithoutDefinedOffsets() throws Exception {
  final String testTopic="test-topic";
  KafkaTopicPartitionState<TopicPartition> oldPartition1=new KafkaTopicPartitionState<>(new KafkaTopicPartition(testTopic,0),new TopicPartition(testTopic,0));
  oldPartition1.setOffset(23L);
  KafkaTopicPartitionState<TopicPartition> oldPartition2=new KafkaTopicPartitionState<>(new KafkaTopicPartition(testTopic,1),new TopicPartition(testTopic,1));
  oldPartition2.setOffset(32L);
  List<KafkaTopicPartitionState<TopicPartition>> oldPartitions=new ArrayList<>(2);
  oldPartitions.add(oldPartition1);
  oldPartitions.add(oldPartition2);
  KafkaTopicPartitionState<TopicPartition> newPartition=new KafkaTopicPartitionState<>(new KafkaTopicPartition(testTopic,2),new TopicPartition(testTopic,2));
  newPartition.setOffset(KafkaTopicPartitionStateSentinel.EARLIEST_OFFSET);
  List<KafkaTopicPartitionState<TopicPartition>> totalPartitions=new ArrayList<>(3);
  totalPartitions.add(oldPartition1);
  totalPartitions.add(oldPartition2);
  totalPartitions.add(newPartition);
  final Map<TopicPartition,Long> mockConsumerAssignmentsAndPositions=new HashMap<>();
  for (  KafkaTopicPartitionState<TopicPartition> oldPartition : oldPartitions) {
    mockConsumerAssignmentsAndPositions.put(oldPartition.getKafkaPartitionHandle(),oldPartition.getOffset() + 1);
  }
  final Map<TopicPartition,Long> mockRetrievedPositions=new HashMap<>();
  mockRetrievedPositions.put(newPartition.getKafkaPartitionHandle(),30L);
  final KafkaConsumer<byte[],byte[]> mockConsumer=createMockConsumer(mockConsumerAssignmentsAndPositions,mockRetrievedPositions,false,null,null);
  final ClosableBlockingQueue<KafkaTopicPartitionState<TopicPartition>> unassignedPartitionsQueue=new ClosableBlockingQueue<>();
  unassignedPartitionsQueue.add(newPartition);
  final TestKafkaConsumerThread testThread=new TestKafkaConsumerThread(mockConsumer,unassignedPartitionsQueue,new Handover());
  testThread.start();
  testThread.startPartitionReassignment();
  testThread.waitPartitionReassignmentComplete();
  assertEquals(mockRetrievedPositions.get(newPartition.getKafkaPartitionHandle()) - 1,newPartition.getOffset());
  assertEquals(totalPartitions.size(),mockConsumerAssignmentsAndPositions.size());
  for (  KafkaTopicPartitionState<TopicPartition> partition : totalPartitions) {
    assertTrue(mockConsumerAssignmentsAndPositions.containsKey(partition.getKafkaPartitionHandle()));
    assertEquals(partition.getOffset() + 1,mockConsumerAssignmentsAndPositions.get(partition.getKafkaPartitionHandle()).longValue());
  }
  assertEquals(0,unassignedPartitionsQueue.size());
}
