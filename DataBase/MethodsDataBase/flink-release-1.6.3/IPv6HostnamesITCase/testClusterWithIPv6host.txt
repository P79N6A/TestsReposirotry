@Test public void testClusterWithIPv6host(){
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    env.setParallelism(4);
    env.getConfig().disableSysoutLogging();
    DataSet<String> text=env.fromElements(WordCountData.TEXT.split("\n"));
    DataSet<Tuple2<String,Integer>> counts=text.flatMap(new FlatMapFunction<String,Tuple2<String,Integer>>(){
      @Override public void flatMap(      String value,      Collector<Tuple2<String,Integer>> out) throws Exception {
        for (        String token : value.toLowerCase().split("\\W+")) {
          if (token.length() > 0) {
            out.collect(new Tuple2<String,Integer>(token,1));
          }
        }
      }
    }
).groupBy(0).sum(1);
    List<Tuple2<String,Integer>> result=counts.collect();
    TestBaseUtils.compareResultAsText(result,WordCountData.COUNTS_AS_TUPLES);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
