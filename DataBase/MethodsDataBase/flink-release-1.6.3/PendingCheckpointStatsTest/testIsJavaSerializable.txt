@Test public void testIsJavaSerializable() throws Exception {
  TaskStateStats task1=new TaskStateStats(new JobVertexID(),3);
  TaskStateStats task2=new TaskStateStats(new JobVertexID(),4);
  HashMap<JobVertexID,TaskStateStats> taskStats=new HashMap<>();
  taskStats.put(task1.getJobVertexId(),task1);
  taskStats.put(task2.getJobVertexId(),task2);
  PendingCheckpointStats pending=new PendingCheckpointStats(123123123L,10123L,CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION),1337,taskStats,mock(CheckpointStatsTracker.PendingCheckpointStatsCallback.class));
  PendingCheckpointStats copy=CommonTestUtils.createCopySerializable(pending);
  assertEquals(pending.getCheckpointId(),copy.getCheckpointId());
  assertEquals(pending.getTriggerTimestamp(),copy.getTriggerTimestamp());
  assertEquals(pending.getProperties(),copy.getProperties());
  assertEquals(pending.getNumberOfSubtasks(),copy.getNumberOfSubtasks());
  assertEquals(pending.getNumberOfAcknowledgedSubtasks(),copy.getNumberOfAcknowledgedSubtasks());
  assertEquals(pending.getEndToEndDuration(),copy.getEndToEndDuration());
  assertEquals(pending.getStateSize(),copy.getStateSize());
  assertEquals(pending.getLatestAcknowledgedSubtaskStats(),copy.getLatestAcknowledgedSubtaskStats());
  assertEquals(pending.getStatus(),copy.getStatus());
}
