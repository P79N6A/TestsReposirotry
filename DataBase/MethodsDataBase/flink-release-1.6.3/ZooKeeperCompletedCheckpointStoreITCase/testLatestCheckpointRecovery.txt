/** 
 * FLINK-6284 Tests that the latest recovered checkpoint is the one with the highest checkpoint id
 */
@Test public void testLatestCheckpointRecovery() throws Exception {
  final int numCheckpoints=3;
  SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  CompletedCheckpointStore checkpointStore=createCompletedCheckpoints(numCheckpoints);
  List<CompletedCheckpoint> checkpoints=new ArrayList<>(numCheckpoints);
  checkpoints.add(createCheckpoint(9,sharedStateRegistry));
  checkpoints.add(createCheckpoint(10,sharedStateRegistry));
  checkpoints.add(createCheckpoint(11,sharedStateRegistry));
  for (  CompletedCheckpoint checkpoint : checkpoints) {
    checkpointStore.addCheckpoint(checkpoint);
  }
  sharedStateRegistry.close();
  checkpointStore.recover();
  CompletedCheckpoint latestCheckpoint=checkpointStore.getLatestCheckpoint();
  assertEquals(checkpoints.get(checkpoints.size() - 1),latestCheckpoint);
}
