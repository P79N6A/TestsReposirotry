/** 
 * A test that verifies that two TaskManagers correctly register at the JobManager.
 */
@Test public void testSimpleRegistration() throws Exception {
  new JavaTestKit(actorSystem){
{
      ActorGateway jobManager=null;
      ActorGateway taskManager1=null;
      ActorGateway taskManager2=null;
      ActorGateway resourceManager=null;
      EmbeddedHaServices embeddedHaServices=null;
      try {
        embeddedHaServices=new EmbeddedHaServices(Executors.directExecutor());
        jobManager=TestingUtils.createJobManager(actorSystem,TestingUtils.defaultExecutor(),TestingUtils.defaultExecutor(),config,embeddedHaServices);
        resourceManager=new AkkaActorGateway(startResourceManager(config,embeddedHaServices),jobManager.leaderSessionID());
        taskManager1=createTaskManager(actorSystem,embeddedHaServices,config,true,false);
        taskManager2=createTaskManager(actorSystem,embeddedHaServices,config,true,false);
        Future<Object> responseFuture1=taskManager1.ask(TaskManagerMessages.getNotifyWhenRegisteredAtJobManagerMessage(),timeout);
        Future<Object> responseFuture2=taskManager2.ask(TaskManagerMessages.getNotifyWhenRegisteredAtJobManagerMessage(),timeout);
        Object response1=Await.result(responseFuture1,timeout);
        Object response2=Await.result(responseFuture2,timeout);
        assertTrue(response1 instanceof TaskManagerMessages.RegisteredAtJobManager);
        assertTrue(response2 instanceof TaskManagerMessages.RegisteredAtJobManager);
        Future<Object> numTaskManagersFuture=jobManager.ask(JobManagerMessages.getRequestNumberRegisteredTaskManager(),timeout);
        Integer count=(Integer)Await.result(numTaskManagersFuture,timeout);
        assertEquals(2,count.intValue());
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail(e.getMessage());
      }
 finally {
        stopActorGatewaysGracefully(Arrays.asList(taskManager1,taskManager2,jobManager,resourceManager));
        embeddedHaServices.closeAndCleanupAllData();
      }
    }
  }
;
}
