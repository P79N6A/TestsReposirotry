/** 
 * This tests the forwarding of jm and tm-local state from the futures reported by the backends, through the async checkpointing thread to the  {@link org.apache.flink.runtime.state.TaskStateManager}.
 */
@Test public void testReportingFromSnapshotToTaskStateManager(){
  TestTaskStateManager taskStateManager=new TestTaskStateManager();
  StreamMockEnvironment streamMockEnvironment=new StreamMockEnvironment(new Configuration(),new Configuration(),new ExecutionConfig(),1024 * 1024,new MockInputSplitProvider(),0,taskStateManager);
  StreamTask testStreamTask=new StreamTaskTest.NoOpStreamTask(streamMockEnvironment);
  CheckpointMetaData checkpointMetaData=new CheckpointMetaData(0L,0L);
  CheckpointMetrics checkpointMetrics=new CheckpointMetrics();
  Map<OperatorID,OperatorSnapshotFutures> snapshots=new HashMap<>(1);
  OperatorSnapshotFutures osFuture=new OperatorSnapshotFutures();
  osFuture.setKeyedStateManagedFuture(createSnapshotResult(KeyedStateHandle.class));
  osFuture.setKeyedStateRawFuture(createSnapshotResult(KeyedStateHandle.class));
  osFuture.setOperatorStateManagedFuture(createSnapshotResult(OperatorStateHandle.class));
  osFuture.setOperatorStateRawFuture(createSnapshotResult(OperatorStateHandle.class));
  OperatorID operatorID=new OperatorID();
  snapshots.put(operatorID,osFuture);
  StreamTask.AsyncCheckpointRunnable checkpointRunnable=new StreamTask.AsyncCheckpointRunnable(testStreamTask,snapshots,checkpointMetaData,checkpointMetrics,0L);
  checkpointRunnable.run();
  TaskStateSnapshot lastJobManagerTaskStateSnapshot=taskStateManager.getLastJobManagerTaskStateSnapshot();
  TaskStateSnapshot lastTaskManagerTaskStateSnapshot=taskStateManager.getLastTaskManagerTaskStateSnapshot();
  OperatorSubtaskState jmState=lastJobManagerTaskStateSnapshot.getSubtaskStateByOperatorID(operatorID);
  OperatorSubtaskState tmState=lastTaskManagerTaskStateSnapshot.getSubtaskStateByOperatorID(operatorID);
  performCheck(osFuture.getKeyedStateManagedFuture(),jmState.getManagedKeyedState(),tmState.getManagedKeyedState());
  performCheck(osFuture.getKeyedStateRawFuture(),jmState.getRawKeyedState(),tmState.getRawKeyedState());
  performCheck(osFuture.getOperatorStateManagedFuture(),jmState.getManagedOperatorState(),tmState.getManagedOperatorState());
  performCheck(osFuture.getOperatorStateRawFuture(),jmState.getRawOperatorState(),tmState.getRawOperatorState());
}
