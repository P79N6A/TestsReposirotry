/** 
 * Verifies that we can connect to multiple JMXReporters running on the same machine.
 * @throws Exception
 */
@Test public void testJMXAvailability() throws Exception {
  Configuration cfg=new Configuration();
  cfg.setString(ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX,TestReporter.class.getName());
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test1." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX,JMXReporter.class.getName());
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test1.port","9040-9055");
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test2." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX,JMXReporter.class.getName());
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test2.port","9040-9055");
  MetricRegistryImpl reg=new MetricRegistryImpl(MetricRegistryConfiguration.fromConfiguration(cfg));
  TaskManagerMetricGroup mg=new TaskManagerMetricGroup(reg,"host","tm");
  List<MetricReporter> reporters=reg.getReporters();
  assertTrue(reporters.size() == 2);
  MetricReporter rep1=reporters.get(0);
  MetricReporter rep2=reporters.get(1);
  Gauge<Integer> g1=new Gauge<Integer>(){
    @Override public Integer getValue(){
      return 1;
    }
  }
;
  Gauge<Integer> g2=new Gauge<Integer>(){
    @Override public Integer getValue(){
      return 2;
    }
  }
;
  rep1.notifyOfAddedMetric(g1,"rep1",new FrontMetricGroup<>(0,new TaskManagerMetricGroup(reg,"host","tm")));
  rep2.notifyOfAddedMetric(g2,"rep2",new FrontMetricGroup<>(1,new TaskManagerMetricGroup(reg,"host","tm")));
  ObjectName objectName1=new ObjectName(JMX_DOMAIN_PREFIX + "taskmanager.rep1",JMXReporter.generateJmxTable(mg.getAllVariables()));
  ObjectName objectName2=new ObjectName(JMX_DOMAIN_PREFIX + "taskmanager.rep2",JMXReporter.generateJmxTable(mg.getAllVariables()));
  JMXServiceURL url1=new JMXServiceURL("service:jmx:rmi://localhost:" + ((JMXReporter)rep1).getPort() + "/jndi/rmi://localhost:"+ ((JMXReporter)rep1).getPort()+ "/jmxrmi");
  JMXConnector jmxCon1=JMXConnectorFactory.connect(url1);
  MBeanServerConnection mCon1=jmxCon1.getMBeanServerConnection();
  assertEquals(1,mCon1.getAttribute(objectName1,"Value"));
  assertEquals(2,mCon1.getAttribute(objectName2,"Value"));
  jmxCon1.close();
  JMXServiceURL url2=new JMXServiceURL("service:jmx:rmi://localhost:" + ((JMXReporter)rep2).getPort() + "/jndi/rmi://localhost:"+ ((JMXReporter)rep2).getPort()+ "/jmxrmi");
  JMXConnector jmxCon2=JMXConnectorFactory.connect(url2);
  MBeanServerConnection mCon2=jmxCon2.getMBeanServerConnection();
  assertEquals(1,mCon2.getAttribute(objectName1,"Value"));
  assertEquals(2,mCon2.getAttribute(objectName2,"Value"));
  rep1.notifyOfRemovedMetric(g1,"rep1",null);
  rep1.notifyOfRemovedMetric(g2,"rep2",null);
  jmxCon2.close();
  rep1.close();
  rep2.close();
  mg.close();
  reg.shutdown().get();
}
