@Test public void testRunAfterwardsExceptional() throws Exception {
  final CompletableFuture<Void> inputFuture=new CompletableFuture<>();
  final OneShotLatch runnableLatch=new OneShotLatch();
  final FlinkException testException=new FlinkException("Test exception");
  final CompletableFuture<Void> runFuture=FutureUtils.runAfterwards(inputFuture,runnableLatch::trigger);
  assertThat(runnableLatch.isTriggered(),is(false));
  assertThat(runFuture.isDone(),is(false));
  inputFuture.completeExceptionally(testException);
  assertThat(runnableLatch.isTriggered(),is(true));
  assertThat(runFuture.isDone(),is(true));
  try {
    runFuture.get();
    fail("Expected an exceptional completion");
  }
 catch (  ExecutionException ee) {
    assertThat(ExceptionUtils.stripExecutionException(ee),is(testException));
  }
}
