/** 
 * Creates a JobGraph of the following form: <pre> v1-->v2-->|\ \ v4 / v3------>/ </pre>
 */
@Test public void testMultiRegionNotAllToAll() throws Exception {
  final JobID jobId=new JobID();
  final String jobName="Test Job Sample Name";
  JobVertex v1=new JobVertex("vertex1");
  JobVertex v2=new JobVertex("vertex2");
  JobVertex v3=new JobVertex("vertex3");
  JobVertex v4=new JobVertex("vertex4");
  JobVertex v5=new JobVertex("vertex5");
  v1.setParallelism(2);
  v2.setParallelism(2);
  v3.setParallelism(5);
  v4.setParallelism(5);
  v1.setInvokableClass(AbstractInvokable.class);
  v2.setInvokableClass(AbstractInvokable.class);
  v3.setInvokableClass(AbstractInvokable.class);
  v4.setInvokableClass(AbstractInvokable.class);
  v2.connectNewDataSetAsInput(v1,DistributionPattern.POINTWISE,ResultPartitionType.PIPELINED);
  v4.connectNewDataSetAsInput(v2,DistributionPattern.ALL_TO_ALL,ResultPartitionType.BLOCKING);
  v4.connectNewDataSetAsInput(v3,DistributionPattern.ALL_TO_ALL,ResultPartitionType.BLOCKING);
  List<JobVertex> ordered=new ArrayList<JobVertex>(Arrays.asList(v1,v2,v3,v4));
  Scheduler scheduler=new Scheduler(TestingUtils.defaultExecutor());
  final JobInformation jobInformation=new DummyJobInformation(jobId,jobName);
  ExecutionGraph eg=new ExecutionGraph(jobInformation,TestingUtils.defaultExecutor(),TestingUtils.defaultExecutor(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy(),new RestartPipelinedRegionStrategy.Factory(),scheduler,ExecutionGraph.class.getClassLoader(),VoidBlobWriter.getInstance(),AkkaUtils.getDefaultTimeout());
  try {
    eg.attachJobGraph(ordered);
  }
 catch (  JobException e) {
    e.printStackTrace();
    fail("Job failed with exception: " + e.getMessage());
  }
  RestartPipelinedRegionStrategy strategy=(RestartPipelinedRegionStrategy)eg.getFailoverStrategy();
  ExecutionJobVertex ejv1=eg.getJobVertex(v1.getID());
  ExecutionJobVertex ejv2=eg.getJobVertex(v2.getID());
  ExecutionJobVertex ejv3=eg.getJobVertex(v3.getID());
  ExecutionJobVertex ejv4=eg.getJobVertex(v4.getID());
  FailoverRegion region11=strategy.getFailoverRegion(ejv1.getTaskVertices()[0]);
  FailoverRegion region12=strategy.getFailoverRegion(ejv1.getTaskVertices()[1]);
  FailoverRegion region21=strategy.getFailoverRegion(ejv2.getTaskVertices()[0]);
  FailoverRegion region22=strategy.getFailoverRegion(ejv2.getTaskVertices()[1]);
  FailoverRegion region3=strategy.getFailoverRegion(ejv3.getTaskVertices()[0]);
  FailoverRegion region4=strategy.getFailoverRegion(ejv4.getTaskVertices()[3]);
  assertEquals(region11,region21);
  assertEquals(region12,region22);
  assertFalse(region11.equals(region12));
  assertFalse(region3.equals(region4));
}
