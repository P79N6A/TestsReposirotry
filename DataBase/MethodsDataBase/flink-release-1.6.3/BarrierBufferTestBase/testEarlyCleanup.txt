@Test public void testEarlyCleanup() throws Exception {
  BufferOrEvent[] sequence={createBuffer(0,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBarrier(1,1),createBarrier(1,2),createBarrier(1,0),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(2,1),createBuffer(1,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createEndOfPartition(1),createBuffer(0,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBarrier(2,2),createBuffer(2,PAGE_SIZE),createEndOfPartition(2),createBuffer(0,PAGE_SIZE),createEndOfPartition(0)};
  MockInputGate gate=new MockInputGate(PAGE_SIZE,3,Arrays.asList(sequence));
  BarrierBuffer buffer=createBarrierHandler(gate);
  ValidatingCheckpointHandler handler=new ValidatingCheckpointHandler();
  buffer.registerCheckpointEventHandler(handler);
  handler.setNextExpectedCheckpointId(1L);
  check(sequence[0],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[1],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[2],buffer.getNextNonBlocked(),PAGE_SIZE);
  assertEquals(1L,handler.getNextExpectedCheckpointId());
  check(sequence[6],buffer.getNextNonBlocked(),PAGE_SIZE);
  assertEquals(2L,handler.getNextExpectedCheckpointId());
  check(sequence[7],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[8],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[13],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[14],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[18],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[19],buffer.getNextNonBlocked(),PAGE_SIZE);
  buffer.getNextNonBlocked();
  buffer.cleanup();
}
