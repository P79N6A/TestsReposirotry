/** 
 * Validates that the buffer correctly aligns the streams in cases where some channels receive barriers from multiple successive checkpoints before the pending checkpoint is complete.
 */
@Test public void testMultiChannelWithQueuedFutureBarriers() throws Exception {
  BufferOrEvent[] sequence={createBuffer(0,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(1,1),createBarrier(1,2),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(1,0),createBuffer(1,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(2,1),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBarrier(2,0),createBarrier(3,0),createBuffer(0,PAGE_SIZE),createBarrier(3,1),createBuffer(0,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBarrier(4,1),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBarrier(2,2),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(4,0),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(5,1),createBarrier(3,2),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(6,1),createBarrier(4,2),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createEndOfPartition(1),createBuffer(2,PAGE_SIZE),createEndOfPartition(2),createBuffer(0,PAGE_SIZE),createEndOfPartition(0)};
  MockInputGate gate=new MockInputGate(PAGE_SIZE,3,Arrays.asList(sequence));
  BarrierBuffer buffer=createBarrierHandler(gate);
  ValidatingCheckpointHandler handler=new ValidatingCheckpointHandler();
  buffer.registerCheckpointEventHandler(handler);
  handler.setNextExpectedCheckpointId(1L);
  check(sequence[0],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[1],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[2],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[7],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[5],buffer.getNextNonBlocked(),PAGE_SIZE);
  assertEquals(2L,handler.getNextExpectedCheckpointId());
  check(sequence[6],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[9],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[10],buffer.getNextNonBlocked(),PAGE_SIZE);
  long startTs=System.nanoTime();
  check(sequence[13],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[20],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[23],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[12],buffer.getNextNonBlocked(),PAGE_SIZE);
  validateAlignmentTime(startTs,buffer.getAlignmentDurationNanos());
  check(sequence[25],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[27],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[30],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[32],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[16],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[18],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[19],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[28],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[36],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[38],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[22],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[26],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[31],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[33],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[39],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[42],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[45],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[46],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[37],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[47],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[48],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[43],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[44],buffer.getNextNonBlocked(),PAGE_SIZE);
  assertNull(buffer.getNextNonBlocked());
  assertNull(buffer.getNextNonBlocked());
  buffer.cleanup();
}
