@Test public void testAbortViaQueuedBarriers() throws Exception {
  BufferOrEvent[] sequence={createBuffer(1,PAGE_SIZE),createBarrier(1,1),createBarrier(1,2),createBuffer(2,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createCancellationBarrier(2,2),createBarrier(2,1),createBuffer(0,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE),createBarrier(1,0),createBuffer(2,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(0,PAGE_SIZE),createBarrier(2,0),createBuffer(0,PAGE_SIZE),createBuffer(1,PAGE_SIZE),createBuffer(2,PAGE_SIZE)};
  MockInputGate gate=new MockInputGate(PAGE_SIZE,3,Arrays.asList(sequence));
  BarrierBuffer buffer=createBarrierHandler(gate);
  AbstractInvokable toNotify=mock(AbstractInvokable.class);
  buffer.registerCheckpointEventHandler(toNotify);
  long startTs;
  check(sequence[0],buffer.getNextNonBlocked(),PAGE_SIZE);
  startTs=System.nanoTime();
  check(sequence[4],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[8],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[3],buffer.getNextNonBlocked(),PAGE_SIZE);
  verify(toNotify,times(1)).triggerCheckpointOnBarrier(argThat(new CheckpointMatcher(1L)),any(CheckpointOptions.class),any(CheckpointMetrics.class));
  validateAlignmentTime(startTs,buffer.getAlignmentDurationNanos());
  check(sequence[5],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[9],buffer.getNextNonBlocked(),PAGE_SIZE);
  verify(toNotify,times(1)).abortCheckpointOnBarrier(eq(2L),any(CheckpointDeclineOnCancellationBarrierException.class));
  assertEquals(0L,buffer.getAlignmentDurationNanos());
  check(sequence[10],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[12],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[13],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[14],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[16],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[17],buffer.getNextNonBlocked(),PAGE_SIZE);
  check(sequence[18],buffer.getNextNonBlocked(),PAGE_SIZE);
  assertEquals(0L,buffer.getAlignmentDurationNanos());
  verify(toNotify,times(1)).triggerCheckpointOnBarrier(any(CheckpointMetaData.class),any(CheckpointOptions.class),any(CheckpointMetrics.class));
  verify(toNotify,times(1)).abortCheckpointOnBarrier(anyLong(),any(CheckpointDeclineOnCancellationBarrierException.class));
  assertNull(buffer.getNextNonBlocked());
  assertNull(buffer.getNextNonBlocked());
  buffer.cleanup();
}
