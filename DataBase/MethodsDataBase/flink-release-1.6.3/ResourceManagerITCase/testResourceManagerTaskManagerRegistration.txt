/** 
 * Tests whether the resource manager gets informed upon TaskManager registration.
 */
@Test public void testResourceManagerTaskManagerRegistration(){
  new JavaTestKit(system){
{
      new Within(duration("30 seconds")){
        @Override protected void run(){
          ActorGateway jobManager=null;
          ActorGateway taskManager=null;
          ActorGateway resourceManager=null;
          ActorGateway forwardingActor=null;
          try {
            jobManager=TestingUtils.createJobManager(system,TestingUtils.defaultExecutor(),TestingUtils.defaultExecutor(),config,highAvailabilityServices,"RegTest");
            forwardingActor=TestingUtils.createForwardingActor(system,getTestActor(),jobManager.leaderSessionID(),Option.<String>empty());
            resourceManager=TestingUtils.createResourceManager(system,config,highAvailabilityServices);
            resourceManager.tell(new TestingResourceManager.NotifyWhenResourceManagerConnected(),forwardingActor);
            expectMsgEquals(Acknowledge.get());
            taskManager=TestingUtils.createTaskManager(system,highAvailabilityServices,config,true,true);
            resourceManager.tell(new TestingResourceManager.GetRegisteredResources(),forwardingActor);
            TestingResourceManager.GetRegisteredResourcesReply reply=expectMsgClass(TestingResourceManager.GetRegisteredResourcesReply.class);
            assertEquals(1,reply.resources.size());
          }
  finally {
            TestingUtils.stopActorGatewaysGracefully(Arrays.asList(jobManager,resourceManager,taskManager,forwardingActor));
          }
        }
      }
;
    }
  }
;
}
