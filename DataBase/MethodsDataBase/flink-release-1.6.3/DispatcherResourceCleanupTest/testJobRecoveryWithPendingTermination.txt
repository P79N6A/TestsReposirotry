/** 
 * Tests that recovered jobs will only be started after the complete termination of any other previously running JobMasters for the same job.
 */
@Test public void testJobRecoveryWithPendingTermination() throws Exception {
  submitJob();
  runningJobsRegistry.setJobRunning(jobId);
  dispatcherLeaderElectionService.notLeader();
  final UUID leaderSessionId=UUID.randomUUID();
  final CompletableFuture<UUID> leaderFuture=dispatcherLeaderElectionService.isLeader(leaderSessionId);
  try {
    leaderFuture.get(10L,TimeUnit.MILLISECONDS);
    fail("We should not become leader before all previously running JobMasters have terminated.");
  }
 catch (  TimeoutException ignored) {
  }
 finally {
    terminationFuture.complete(null);
  }
  assertThat(leaderFuture.get(),equalTo(leaderSessionId));
}
