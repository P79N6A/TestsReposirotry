@Test public void testFlatSchemaToTypeInfo1(){
  String schema="struct<" + "boolean1:boolean," + "byte1:tinyint,"+ "short1:smallint,"+ "int1:int,"+ "long1:bigint,"+ "float1:float,"+ "double1:double,"+ "bytes1:binary,"+ "string1:string,"+ "date1:date,"+ "timestamp1:timestamp,"+ "decimal1:decimal(5,2)"+ ">";
  TypeInformation typeInfo=OrcBatchReader.schemaToTypeInfo(TypeDescription.fromString(schema));
  Assert.assertNotNull(typeInfo);
  Assert.assertTrue(typeInfo instanceof RowTypeInfo);
  RowTypeInfo rowTypeInfo=(RowTypeInfo)typeInfo;
  Assert.assertArrayEquals(new TypeInformation[]{Types.BOOLEAN,Types.BYTE,Types.SHORT,Types.INT,Types.LONG,Types.FLOAT,Types.DOUBLE,PrimitiveArrayTypeInfo.BYTE_PRIMITIVE_ARRAY_TYPE_INFO,Types.STRING,Types.SQL_DATE,Types.SQL_TIMESTAMP,BasicTypeInfo.BIG_DEC_TYPE_INFO},rowTypeInfo.getFieldTypes());
  Assert.assertArrayEquals(new String[]{"boolean1","byte1","short1","int1","long1","float1","double1","bytes1","string1","date1","timestamp1","decimal1"},rowTypeInfo.getFieldNames());
}
