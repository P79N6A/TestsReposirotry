@Test public void testIsJavaSerializable() throws Exception {
  JobVertexID jobVertexId=new JobVertexID();
  SubtaskStateStats[] subtasks=new SubtaskStateStats[7];
  TaskStateStats taskStats=new TaskStateStats(jobVertexId,subtasks.length);
  long stateSize=0;
  long alignmentBuffered=0;
  for (int i=0; i < subtasks.length; i++) {
    subtasks[i]=new SubtaskStateStats(i,rand.nextInt(128),rand.nextInt(128),rand.nextInt(128),rand.nextInt(128),rand.nextInt(128),rand.nextInt(128));
    stateSize+=subtasks[i].getStateSize();
    alignmentBuffered+=subtasks[i].getAlignmentBuffered();
    taskStats.reportSubtaskStats(subtasks[i]);
  }
  TaskStateStats copy=CommonTestUtils.createCopySerializable(taskStats);
  assertEquals(stateSize,copy.getStateSize());
  assertEquals(alignmentBuffered,copy.getAlignmentBuffered());
  TaskStateStats.TaskStateStatsSummary summary=copy.getSummaryStats();
  assertEquals(subtasks.length,summary.getStateSizeStats().getCount());
  assertEquals(subtasks.length,summary.getAckTimestampStats().getCount());
  assertEquals(subtasks.length,summary.getSyncCheckpointDurationStats().getCount());
  assertEquals(subtasks.length,summary.getAsyncCheckpointDurationStats().getCount());
  assertEquals(subtasks.length,summary.getAlignmentBufferedStats().getCount());
  assertEquals(subtasks.length,summary.getAlignmentDurationStats().getCount());
}
