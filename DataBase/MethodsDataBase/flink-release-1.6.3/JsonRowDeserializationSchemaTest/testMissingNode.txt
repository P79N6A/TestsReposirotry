/** 
 * Tests deserialization with non-existing field name.
 */
@Test public void testMissingNode() throws Exception {
  ObjectMapper objectMapper=new ObjectMapper();
  ObjectNode root=objectMapper.createObjectNode();
  root.put("id",123123123);
  byte[] serializedJson=objectMapper.writeValueAsBytes(root);
  JsonRowDeserializationSchema deserializationSchema=new JsonRowDeserializationSchema(Types.ROW_NAMED(new String[]{"name"},Types.STRING));
  Row row=deserializationSchema.deserialize(serializedJson);
  assertEquals(1,row.getArity());
  Assert.assertNull("Missing field not null",row.getField(0));
  deserializationSchema.setFailOnMissingField(true);
  try {
    deserializationSchema.deserialize(serializedJson);
    Assert.fail("Did not throw expected Exception");
  }
 catch (  IOException e) {
    Assert.assertTrue(e.getCause() instanceof IllegalStateException);
  }
}
