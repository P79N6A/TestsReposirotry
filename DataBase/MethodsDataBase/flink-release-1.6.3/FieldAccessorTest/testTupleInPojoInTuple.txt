@Test public void testTupleInPojoInTuple(){
  Tuple2<String,Foo> t=Tuple2.of("aa",new Foo(8,Tuple2.of("ddd",9L),(short)2));
  TupleTypeInfo<Tuple2<String,Foo>> tpeInfo=(TupleTypeInfo<Tuple2<String,Foo>>)TypeExtractor.getForObject(t);
  FieldAccessor<Tuple2<String,Foo>,Long> f1tf1=FieldAccessorFactory.getAccessor(tpeInfo,"f1.t.f1",null);
  assertEquals(9L,(long)f1tf1.get(t));
  assertEquals(9L,(long)t.f1.t.f1);
  t=f1tf1.set(t,12L);
  assertEquals(12L,(long)f1tf1.get(t));
  assertEquals(12L,(long)t.f1.t.f1);
  FieldAccessor<Tuple2<String,Foo>,String> f1tf0=FieldAccessorFactory.getAccessor(tpeInfo,"f1.t.f0",null);
  assertEquals("ddd",f1tf0.get(t));
  assertEquals("ddd",t.f1.t.f0);
  t=f1tf0.set(t,"alma");
  assertEquals("alma",f1tf0.get(t));
  assertEquals("alma",t.f1.t.f0);
  FieldAccessor<Tuple2<String,Foo>,Foo> f1=FieldAccessorFactory.getAccessor(tpeInfo,"f1",null);
  FieldAccessor<Tuple2<String,Foo>,Foo> f1n=FieldAccessorFactory.getAccessor(tpeInfo,1,null);
  assertEquals(Tuple2.of("alma",12L),f1.get(t).t);
  assertEquals(Tuple2.of("alma",12L),f1n.get(t).t);
  assertEquals(Tuple2.of("alma",12L),t.f1.t);
  Foo newFoo=new Foo(8,Tuple2.of("ddd",9L),(short)2);
  f1.set(t,newFoo);
  assertEquals(newFoo,f1.get(t));
  assertEquals(newFoo,f1n.get(t));
  assertEquals(newFoo,t.f1);
}
