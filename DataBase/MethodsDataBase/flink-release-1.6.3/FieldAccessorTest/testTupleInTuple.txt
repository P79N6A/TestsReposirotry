@Test public void testTupleInTuple(){
  Tuple2<String,Tuple3<Integer,Long,Double>> t=Tuple2.of("aa",Tuple3.of(5,9L,2.0));
  TupleTypeInfo<Tuple2<String,Tuple3<Integer,Long,Double>>> tpeInfo=(TupleTypeInfo<Tuple2<String,Tuple3<Integer,Long,Double>>>)TypeExtractor.getForObject(t);
  FieldAccessor<Tuple2<String,Tuple3<Integer,Long,Double>>,String> f0=FieldAccessorFactory.getAccessor(tpeInfo,"f0",null);
  assertEquals("aa",f0.get(t));
  assertEquals("aa",t.f0);
  FieldAccessor<Tuple2<String,Tuple3<Integer,Long,Double>>,Double> f1f2=FieldAccessorFactory.getAccessor(tpeInfo,"f1.f2",null);
  assertEquals(2.0,f1f2.get(t),0);
  assertEquals(2.0,t.f1.f2,0);
  t=f1f2.set(t,3.0);
  assertEquals(3.0,f1f2.get(t),0);
  assertEquals(3.0,t.f1.f2,0);
  assertEquals("aa",f0.get(t));
  assertEquals("aa",t.f0);
  FieldAccessor<Tuple2<String,Tuple3<Integer,Long,Double>>,Tuple3<Integer,Long,Double>> f1=FieldAccessorFactory.getAccessor(tpeInfo,"f1",null);
  assertEquals(Tuple3.of(5,9L,3.0),f1.get(t));
  assertEquals(Tuple3.of(5,9L,3.0),t.f1);
  t=f1.set(t,Tuple3.of(8,12L,4.0));
  assertEquals(Tuple3.of(8,12L,4.0),f1.get(t));
  assertEquals(Tuple3.of(8,12L,4.0),t.f1);
  assertEquals("aa",f0.get(t));
  assertEquals("aa",t.f0);
  FieldAccessor<Tuple2<String,Tuple3<Integer,Long,Double>>,Tuple3<Integer,Long,Double>> f1n=FieldAccessorFactory.getAccessor(tpeInfo,1,null);
  assertEquals(Tuple3.of(8,12L,4.0),f1n.get(t));
  assertEquals(Tuple3.of(8,12L,4.0),t.f1);
  t=f1n.set(t,Tuple3.of(10,13L,5.0));
  assertEquals(Tuple3.of(10,13L,5.0),f1n.get(t));
  assertEquals(Tuple3.of(10,13L,5.0),f1.get(t));
  assertEquals(Tuple3.of(10,13L,5.0),t.f1);
  assertEquals("aa",f0.get(t));
  assertEquals("aa",t.f0);
}
