/** 
 * Tests that the garbage collection properties are respected when subsuming checkpoints.
 */
@Test public void testCleanUpOnSubsume() throws Exception {
  OperatorState state=mock(OperatorState.class);
  Map<OperatorID,OperatorState> operatorStates=new HashMap<>();
  operatorStates.put(new OperatorID(),state);
  EmptyStreamStateHandle metadata=new EmptyStreamStateHandle();
  TestCompletedCheckpointStorageLocation location=new TestCompletedCheckpointStorageLocation(metadata,"ptr");
  CheckpointProperties props=new CheckpointProperties(false,CheckpointType.CHECKPOINT,true,false,false,false,false);
  CompletedCheckpoint checkpoint=new CompletedCheckpoint(new JobID(),0,0,1,operatorStates,Collections.emptyList(),props,location);
  SharedStateRegistry sharedStateRegistry=new SharedStateRegistry();
  checkpoint.registerSharedStatesAfterRestored(sharedStateRegistry);
  verify(state,times(1)).registerSharedStates(sharedStateRegistry);
  checkpoint.discardOnSubsume();
  verify(state,times(1)).discardState();
  assertTrue(location.isDisposed());
  assertTrue(metadata.isDisposed());
}
