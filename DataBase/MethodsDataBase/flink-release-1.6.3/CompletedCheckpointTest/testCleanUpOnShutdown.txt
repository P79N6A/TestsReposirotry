/** 
 * Tests that the garbage collection properties are respected when shutting down.
 */
@Test public void testCleanUpOnShutdown() throws Exception {
  JobStatus[] terminalStates=new JobStatus[]{JobStatus.FINISHED,JobStatus.CANCELED,JobStatus.FAILED,JobStatus.SUSPENDED};
  for (  JobStatus status : terminalStates) {
    OperatorState state=mock(OperatorState.class);
    Map<OperatorID,OperatorState> operatorStates=new HashMap<>();
    operatorStates.put(new OperatorID(),state);
    EmptyStreamStateHandle retainedHandle=new EmptyStreamStateHandle();
    TestCompletedCheckpointStorageLocation retainedLocation=new TestCompletedCheckpointStorageLocation(retainedHandle,"ptr");
    CheckpointProperties retainProps=new CheckpointProperties(false,CheckpointType.CHECKPOINT,false,false,false,false,false);
    CompletedCheckpoint checkpoint=new CompletedCheckpoint(new JobID(),0,0,1,new HashMap<>(operatorStates),Collections.emptyList(),retainProps,retainedLocation);
    checkpoint.discardOnShutdown(status);
    verify(state,times(0)).discardState();
    assertFalse(retainedLocation.isDisposed());
    assertFalse(retainedHandle.isDisposed());
    EmptyStreamStateHandle discardHandle=new EmptyStreamStateHandle();
    TestCompletedCheckpointStorageLocation discardLocation=new TestCompletedCheckpointStorageLocation(discardHandle,"ptr");
    CheckpointProperties discardProps=new CheckpointProperties(false,CheckpointType.CHECKPOINT,true,true,true,true,true);
    checkpoint=new CompletedCheckpoint(new JobID(),0,0,1,new HashMap<>(operatorStates),Collections.emptyList(),discardProps,discardLocation);
    checkpoint.discardOnShutdown(status);
    verify(state,times(1)).discardState();
    assertTrue(discardLocation.isDisposed());
    assertTrue(discardHandle.isDisposed());
  }
}
