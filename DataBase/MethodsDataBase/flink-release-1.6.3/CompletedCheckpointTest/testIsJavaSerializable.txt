@Test public void testIsJavaSerializable() throws Exception {
  TaskStateStats task1=new TaskStateStats(new JobVertexID(),3);
  TaskStateStats task2=new TaskStateStats(new JobVertexID(),4);
  HashMap<JobVertexID,TaskStateStats> taskStats=new HashMap<>();
  taskStats.put(task1.getJobVertexId(),task1);
  taskStats.put(task2.getJobVertexId(),task2);
  CompletedCheckpointStats completed=new CompletedCheckpointStats(123123123L,10123L,CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION),1337,taskStats,1337,123129837912L,123819239812L,new SubtaskStateStats(123,213123,123123,0,0,0,0),null);
  CompletedCheckpointStats copy=CommonTestUtils.createCopySerializable(completed);
  assertEquals(completed.getCheckpointId(),copy.getCheckpointId());
  assertEquals(completed.getTriggerTimestamp(),copy.getTriggerTimestamp());
  assertEquals(completed.getProperties(),copy.getProperties());
  assertEquals(completed.getNumberOfSubtasks(),copy.getNumberOfSubtasks());
  assertEquals(completed.getNumberOfAcknowledgedSubtasks(),copy.getNumberOfAcknowledgedSubtasks());
  assertEquals(completed.getEndToEndDuration(),copy.getEndToEndDuration());
  assertEquals(completed.getStateSize(),copy.getStateSize());
  assertEquals(completed.getLatestAcknowledgedSubtaskStats().getSubtaskIndex(),copy.getLatestAcknowledgedSubtaskStats().getSubtaskIndex());
  assertEquals(completed.getStatus(),copy.getStatus());
}
