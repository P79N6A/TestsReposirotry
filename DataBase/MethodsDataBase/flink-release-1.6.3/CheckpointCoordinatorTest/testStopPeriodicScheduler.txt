@Test public void testStopPeriodicScheduler() throws Exception {
  final ExecutionAttemptID attemptID1=new ExecutionAttemptID();
  ExecutionVertex vertex1=mockExecutionVertex(attemptID1);
  CheckpointCoordinator coord=new CheckpointCoordinator(new JobID(),600000,600000,0,Integer.MAX_VALUE,CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION,new ExecutionVertex[]{vertex1},new ExecutionVertex[]{vertex1},new ExecutionVertex[]{vertex1},new StandaloneCheckpointIDCounter(),new StandaloneCompletedCheckpointStore(1),new MemoryStateBackend(),Executors.directExecutor(),SharedStateRegistry.DEFAULT_FACTORY);
  CheckpointTriggerResult triggerResult=coord.triggerCheckpoint(System.currentTimeMillis(),CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION),null,true);
  assertTrue(triggerResult.isFailure());
  assertEquals(CheckpointDeclineReason.PERIODIC_SCHEDULER_SHUTDOWN,triggerResult.getFailureReason());
  triggerResult=coord.triggerCheckpoint(System.currentTimeMillis(),CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION),null,false);
  assertFalse(triggerResult.isFailure());
}
