/** 
 * Tests that no minimum delay between savepoints is enforced.
 */
@Test public void testMinDelayBetweenSavepoints() throws Exception {
  JobID jobId=new JobID();
  final ExecutionAttemptID attemptID1=new ExecutionAttemptID();
  ExecutionVertex vertex1=mockExecutionVertex(attemptID1);
  CheckpointCoordinator coord=new CheckpointCoordinator(jobId,100000,200000,100000000L,1,CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION,new ExecutionVertex[]{vertex1},new ExecutionVertex[]{vertex1},new ExecutionVertex[]{vertex1},new StandaloneCheckpointIDCounter(),new StandaloneCompletedCheckpointStore(2),new MemoryStateBackend(),Executors.directExecutor(),SharedStateRegistry.DEFAULT_FACTORY);
  String savepointDir=tmpFolder.newFolder().getAbsolutePath();
  CompletableFuture<CompletedCheckpoint> savepoint0=coord.triggerSavepoint(0,savepointDir);
  assertFalse("Did not trigger savepoint",savepoint0.isDone());
  CompletableFuture<CompletedCheckpoint> savepoint1=coord.triggerSavepoint(1,savepointDir);
  assertFalse("Did not trigger savepoint",savepoint1.isDone());
}
