/** 
 * We connect two different data streams in a chain to a CoMap.
 */
@Test public void differentDataStreamSameChain() throws Exception {
  TestListResultSink<String> resultSink=new TestListResultSink<>();
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(1);
  DataStream<Integer> src=env.fromElements(1,3,5);
  DataStream<String> stringMap=src.map(value -> "x " + value);
  stringMap.connect(src).map(new CoMapFunction<String,Integer,String>(){
    @Override public String map1(    String value){
      return value;
    }
    @Override public String map2(    Integer value){
      return String.valueOf(value + 1);
    }
  }
).addSink(resultSink);
  env.execute();
  List<String> expected=Arrays.asList("x 1","x 3","x 5","2","4","6");
  List<String> result=resultSink.getResult();
  Collections.sort(expected);
  Collections.sort(result);
  assertEquals(expected,result);
}
