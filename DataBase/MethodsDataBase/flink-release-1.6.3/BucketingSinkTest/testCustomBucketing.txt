/** 
 * This uses a custom bucketing function which determines the bucket from the input.
 */
@Test public void testCustomBucketing() throws Exception {
  File dataDir=tempFolder.newFolder();
  final int numIds=4;
  final int numElements=20;
  OneInputStreamOperatorTestHarness<String,Object> testHarness=createTestSink(dataDir,1,0);
  testHarness.setProcessingTime(0L);
  testHarness.setup();
  testHarness.open();
  for (int i=0; i < numElements; i++) {
    testHarness.processElement(new StreamRecord<>(Integer.toString(i % numIds)));
  }
  testHarness.close();
  int numFiles=0;
  for (  File file : FileUtils.listFiles(dataDir,null,true)) {
    if (file.getName().startsWith(PART_PREFIX)) {
      numFiles++;
    }
  }
  Assert.assertEquals(4,numFiles);
}
