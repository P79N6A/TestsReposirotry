@Test public void testBucketStateTransitions() throws Exception {
  final File outDir=tempFolder.newFolder();
  OneInputStreamOperatorTestHarness<String,Object> testHarness=createRescalingTestSink(outDir,1,0,100);
  testHarness.setup();
  testHarness.open();
  testHarness.setProcessingTime(0L);
  testHarness.processElement(new StreamRecord<>("test1",1L));
  testHarness.processElement(new StreamRecord<>("test2",1L));
  checkLocalFs(outDir,2,0,0,0);
  testHarness.setProcessingTime(101L);
  checkLocalFs(outDir,0,2,0,0);
  testHarness.processElement(new StreamRecord<>("test3",1L));
  checkLocalFs(outDir,1,2,0,0);
  testHarness.snapshot(0,0);
  checkLocalFs(outDir,1,2,0,0);
  testHarness.notifyOfCompletedCheckpoint(0);
  checkLocalFs(outDir,1,0,2,0);
  OperatorSubtaskState snapshot=testHarness.snapshot(1,0);
  testHarness.close();
  checkLocalFs(outDir,0,1,2,0);
  testHarness=createRescalingTestSink(outDir,1,0,100);
  testHarness.setup();
  testHarness.initializeState(snapshot);
  testHarness.open();
  checkLocalFs(outDir,0,0,3,1);
  snapshot=testHarness.snapshot(2,0);
  testHarness.processElement(new StreamRecord<>("test4",10));
  checkLocalFs(outDir,1,0,3,1);
  testHarness=createRescalingTestSink(outDir,1,0,100);
  testHarness.setup();
  testHarness.initializeState(snapshot);
  testHarness.open();
  checkLocalFs(outDir,1,0,3,1);
  testHarness.close();
  checkLocalFs(outDir,1,0,3,1);
}
