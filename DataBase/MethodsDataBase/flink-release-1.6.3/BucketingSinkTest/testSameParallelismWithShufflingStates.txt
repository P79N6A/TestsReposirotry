@Test public void testSameParallelismWithShufflingStates() throws Exception {
  final File outDir=tempFolder.newFolder();
  OneInputStreamOperatorTestHarness<String,Object> testHarness1=createRescalingTestSink(outDir,2,0,100);
  testHarness1.setup();
  testHarness1.open();
  OneInputStreamOperatorTestHarness<String,Object> testHarness2=createRescalingTestSink(outDir,2,1,100);
  testHarness2.setup();
  testHarness2.open();
  testHarness1.processElement(new StreamRecord<>("test1",0L));
  checkLocalFs(outDir,1,0,0,0);
  testHarness2.processElement(new StreamRecord<>("test2",0L));
  checkLocalFs(outDir,2,0,0,0);
  OperatorSubtaskState mergedSnapshot=AbstractStreamOperatorTestHarness.repackageState(testHarness2.snapshot(0,0),testHarness1.snapshot(0,0));
  checkLocalFs(outDir,2,0,0,0);
  testHarness2.processElement(new StreamRecord<>("test3",0L));
  checkLocalFs(outDir,3,0,0,0);
  testHarness1=createRescalingTestSink(outDir,2,0,100);
  testHarness1.setup();
  testHarness1.initializeState(mergedSnapshot);
  testHarness1.open();
  checkLocalFs(outDir,2,0,1,1);
  testHarness2=createRescalingTestSink(outDir,2,1,100);
  testHarness2.setup();
  testHarness2.initializeState(mergedSnapshot);
  testHarness2.open();
  checkLocalFs(outDir,1,0,2,2);
  testHarness1.close();
  testHarness2.close();
  checkLocalFs(outDir,1,0,2,2);
}
