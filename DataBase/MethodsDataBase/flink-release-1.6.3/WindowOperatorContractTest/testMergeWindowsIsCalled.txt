@Test public void testMergeWindowsIsCalled() throws Exception {
  MergingWindowAssigner<Integer,TimeWindow> mockAssigner=mockMergingAssigner();
  Trigger<Integer,TimeWindow> mockTrigger=mockTrigger();
  InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction=mockWindowFunction();
  KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness=createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction);
  testHarness.open();
  when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(2,4),new TimeWindow(0,2)));
  assertEquals(0,testHarness.getOutput().size());
  assertEquals(0,testHarness.numKeyedStateEntries());
  testHarness.processElement(new StreamRecord<>(0,0L));
  verify(mockAssigner).mergeWindows(eq(Collections.singletonList(new TimeWindow(2,4))),anyMergeCallback());
  verify(mockAssigner).mergeWindows(eq(Collections.singletonList(new TimeWindow(2,4))),anyMergeCallback());
  verify(mockAssigner,times(2)).mergeWindows(anyCollection(),anyMergeCallback());
}
