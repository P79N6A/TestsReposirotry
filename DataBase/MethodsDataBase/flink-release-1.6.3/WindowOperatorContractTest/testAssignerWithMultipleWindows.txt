@Test public void testAssignerWithMultipleWindows() throws Exception {
  WindowAssigner<Integer,TimeWindow> mockAssigner=mockTimeWindowAssigner();
  Trigger<Integer,TimeWindow> mockTrigger=mockTrigger();
  InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction=mockWindowFunction();
  OneInputStreamOperatorTestHarness<Integer,Void> testHarness=createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction);
  testHarness.open();
  when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(2,4),new TimeWindow(0,2)));
  shouldFireOnElement(mockTrigger);
  testHarness.processElement(new StreamRecord<>(0,0L));
  verify(mockWindowFunction,times(2)).process(eq(0),anyTimeWindow(),anyInternalWindowContext(),anyIntIterable(),WindowOperatorContractTest.<Void>anyCollector());
  verify(mockWindowFunction,times(1)).process(eq(0),eq((new TimeWindow(0,2))),anyInternalWindowContext(),intIterable(0),WindowOperatorContractTest.<Void>anyCollector());
  verify(mockWindowFunction,times(1)).process(eq(0),eq(new TimeWindow(2,4)),anyInternalWindowContext(),intIterable(0),WindowOperatorContractTest.<Void>anyCollector());
}
