@Test public void testOnElementCalledPerWindow() throws Exception {
  WindowAssigner<Integer,TimeWindow> mockAssigner=mockTimeWindowAssigner();
  Trigger<Integer,TimeWindow> mockTrigger=mockTrigger();
  InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction=mockWindowFunction();
  OneInputStreamOperatorTestHarness<Integer,Void> testHarness=createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction);
  testHarness.open();
  when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(2,4),new TimeWindow(0,2)));
  testHarness.processElement(new StreamRecord<>(42,1L));
  verify(mockTrigger).onElement(eq(42),eq(1L),eq(new TimeWindow(2,4)),anyTriggerContext());
  verify(mockTrigger).onElement(eq(42),eq(1L),eq(new TimeWindow(0,2)),anyTriggerContext());
  verify(mockTrigger,times(2)).onElement(anyInt(),anyLong(),anyTimeWindow(),anyTriggerContext());
}
