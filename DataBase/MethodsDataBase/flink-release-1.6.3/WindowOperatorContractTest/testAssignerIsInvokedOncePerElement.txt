@Test public void testAssignerIsInvokedOncePerElement() throws Exception {
  WindowAssigner<Integer,TimeWindow> mockAssigner=mockTimeWindowAssigner();
  Trigger<Integer,TimeWindow> mockTrigger=mockTrigger();
  InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction=mockWindowFunction();
  OneInputStreamOperatorTestHarness<Integer,Void> testHarness=createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction);
  testHarness.open();
  when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Collections.singletonList(new TimeWindow(0,0)));
  testHarness.processElement(new StreamRecord<>(0,0L));
  verify(mockAssigner,times(1)).assignWindows(eq(0),eq(0L),anyAssignerContext());
  testHarness.processElement(new StreamRecord<>(0,0L));
  verify(mockAssigner,times(2)).assignWindows(eq(0),eq(0L),anyAssignerContext());
}
