@Test public void testArchiver() throws IOException {
  JsonArchivist archivist=new CheckpointStatsDetailsHandler.CheckpointStatsDetailsJsonArchivist();
  TestCheckpointStats testCheckpointStats=createTestCheckpointStats();
  when(testCheckpointStats.graph.getJobID()).thenReturn(new JobID());
  Collection<ArchivedJson> archives=archivist.archiveJsonWithPath(testCheckpointStats.graph);
  Assert.assertEquals(3,archives.size());
  ObjectMapper mapper=new ObjectMapper();
  Iterator<ArchivedJson> iterator=archives.iterator();
  ArchivedJson archive1=iterator.next();
  Assert.assertEquals("/jobs/" + testCheckpointStats.graph.getJobID() + "/checkpoints/details/"+ testCheckpointStats.inProgress.getCheckpointId(),archive1.getPath());
  compareInProgressCheckpoint(testCheckpointStats.inProgress,mapper.readTree(archive1.getJson()));
  ArchivedJson archive2=iterator.next();
  Assert.assertEquals("/jobs/" + testCheckpointStats.graph.getJobID() + "/checkpoints/details/"+ testCheckpointStats.completedSavepoint.getCheckpointId(),archive2.getPath());
  compareCompletedSavepoint(testCheckpointStats.completedSavepoint,mapper.readTree(archive2.getJson()));
  ArchivedJson archive3=iterator.next();
  Assert.assertEquals("/jobs/" + testCheckpointStats.graph.getJobID() + "/checkpoints/details/"+ testCheckpointStats.failed.getCheckpointId(),archive3.getPath());
  compareFailedCheckpoint(testCheckpointStats.failed,mapper.readTree(archive3.getJson()));
}
