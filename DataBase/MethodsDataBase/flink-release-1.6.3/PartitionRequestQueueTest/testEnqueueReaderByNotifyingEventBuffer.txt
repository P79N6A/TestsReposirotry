/** 
 * Tests  {@link PartitionRequestQueue#enqueueAvailableReader(NetworkSequenceViewReader)}, verifying the reader would be enqueued in the pipeline if the next sending buffer is an event even though it has no available credits.
 */
@Test public void testEnqueueReaderByNotifyingEventBuffer() throws Exception {
  final ResultSubpartitionView view=new NextIsEventResultSubpartitionView();
  ResultPartitionProvider partitionProvider=(partitionId,index,availabilityListener) -> view;
  final InputChannelID receiverId=new InputChannelID();
  final PartitionRequestQueue queue=new PartitionRequestQueue();
  final CreditBasedSequenceNumberingViewReader reader=new CreditBasedSequenceNumberingViewReader(receiverId,0,queue);
  final EmbeddedChannel channel=new EmbeddedChannel(queue);
  reader.requestSubpartitionView(partitionProvider,new ResultPartitionID(),0);
  ByteBuf channelBlockingBuffer=blockChannel(channel);
  assertNull(channel.readOutbound());
  reader.notifyDataAvailable();
  channel.runPendingTasks();
  assertThat(queue.getAvailableReaders(),contains(reader));
  assertEquals(0,reader.getNumCreditsAvailable());
  channel.flush();
  assertSame(channelBlockingBuffer,channel.readOutbound());
  assertEquals(0,queue.getAvailableReaders().size());
  assertEquals(0,reader.getNumCreditsAvailable());
  assertNull(channel.readOutbound());
}
