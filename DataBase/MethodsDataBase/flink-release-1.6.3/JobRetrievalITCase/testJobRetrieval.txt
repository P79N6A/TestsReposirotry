@Test public void testJobRetrieval() throws Exception {
  final JobID jobID=new JobID();
  final JobVertex imalock=new JobVertex("imalock");
  imalock.setInvokableClass(SemaphoreInvokable.class);
  final JobGraph jobGraph=new JobGraph(jobID,"testjob",imalock);
  lock.acquire();
  client.setDetached(true);
  client.submitJob(jobGraph,JobRetrievalITCase.class.getClassLoader());
  final CheckedThread resumingThread=new CheckedThread("Flink-Job-Retriever"){
    @Override public void go() throws Exception {
      assertNotNull(client.requestJobResult(jobID).get());
    }
  }
;
  while (client.listJobs().get().isEmpty()) {
    Thread.sleep(50);
  }
  resumingThread.start();
  while (resumingThread.getState() != Thread.State.WAITING) {
    Thread.sleep(10);
  }
  lock.release();
  resumingThread.sync();
}
