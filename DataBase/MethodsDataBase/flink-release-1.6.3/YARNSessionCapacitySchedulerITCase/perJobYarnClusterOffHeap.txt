/** 
 * Test per-job yarn cluster and memory calculations for off-heap use (see FLINK-7400) with the same job as  {@link #perJobYarnCluster()}. <p>This ensures that with (any) pre-allocated off-heap memory by us, there is some off-heap memory remaining for Flink's libraries. Creating task managers will thus fail if no off-heap memory remains.
 */
@Test public void perJobYarnClusterOffHeap() throws IOException {
  LOG.info("Starting perJobYarnCluster()");
  addTestAppender(JobClient.class,Level.INFO);
  File exampleJarLocation=getTestJarPath("BatchWordCount.jar");
  final long taskManagerMemoryMB=1024;
  final long networkBuffersMB=TaskManagerServices.calculateNetworkBufferMemory((taskManagerMemoryMB - ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN.defaultValue()) << 20,new Configuration()) >> 20;
  final long offHeapMemory=taskManagerMemoryMB - ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN.defaultValue() - networkBuffersMB- 100;
  runWithArgs(new String[]{"run","-m","yarn-cluster","-yj",flinkUberjar.getAbsolutePath(),"-yt",flinkLibFolder.getAbsolutePath(),"-yn","1","-ys","2","-yjm","768m","-ytm",taskManagerMemoryMB + "m","-yD","taskmanager.memory.off-heap=true","-yD","taskmanager.memory.size=" + offHeapMemory + "m","-yD","taskmanager.memory.preallocate=true",exampleJarLocation.getAbsolutePath()},"Program execution finished",new String[]{"DataSink \\(.*\\) \\(1/1\\) switched to FINISHED"},RunTypes.CLI_FRONTEND,0,true);
  LOG.info("Finished perJobYarnCluster()");
}
