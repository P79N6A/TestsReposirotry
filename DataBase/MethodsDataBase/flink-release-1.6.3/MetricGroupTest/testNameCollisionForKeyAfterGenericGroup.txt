/** 
 * Verifies that calling  {@link MetricGroup#addGroup(String,String)} if a generic group with the key name alreadyexists goes through the generic code path.
 */
@Test public void testNameCollisionForKeyAfterGenericGroup(){
  MetricRegistry registry=NoOpMetricRegistry.INSTANCE;
  GenericMetricGroup root=new GenericMetricGroup(registry,new DummyAbstractMetricGroup(registry),"root");
  String key="key";
  String value="value";
  root.addGroup(key);
  MetricGroup group=root.addGroup(key,value);
  String variableValue=group.getAllVariables().get(ScopeFormat.asVariable("key"));
  assertNull(variableValue);
  String identifier=group.getMetricIdentifier("metric");
  assertTrue("Key is missing from metric identifier.",identifier.contains("key"));
  assertTrue("Value is missing from metric identifier.",identifier.contains("value"));
  String logicalScope=((AbstractMetricGroup)group).getLogicalScope(new DummyCharacterFilter());
  assertTrue("Key is missing from logical scope.",logicalScope.contains(key));
  assertTrue("Value is missing from logical scope.",logicalScope.contains(value));
}
