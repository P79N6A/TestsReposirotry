/** 
 * Verifies that calling  {@link MetricGroup#addGroup(String,String)} on a {@link GenericKeyMetricGroup} goesthrough the generic code path.
 */
@Test public void testUserDefinedVariableOnKeyGroup(){
  MetricRegistry registry=NoOpMetricRegistry.INSTANCE;
  GenericMetricGroup root=new GenericMetricGroup(registry,new DummyAbstractMetricGroup(registry),"root");
  String key1="key1";
  String value1="value1";
  root.addGroup(key1,value1);
  String key2="key2";
  String value2="value2";
  MetricGroup group=root.addGroup(key1).addGroup(key2,value2);
  String variableValue=group.getAllVariables().get("value2");
  assertNull(variableValue);
  String identifier=group.getMetricIdentifier("metric");
  assertTrue("Key1 is missing from metric identifier.",identifier.contains("key1"));
  assertTrue("Key2 is missing from metric identifier.",identifier.contains("key2"));
  assertTrue("Value2 is missing from metric identifier.",identifier.contains("value2"));
  String logicalScope=((AbstractMetricGroup)group).getLogicalScope(new DummyCharacterFilter());
  assertTrue("Key1 is missing from logical scope.",logicalScope.contains(key1));
  assertTrue("Key2 is missing from logical scope.",logicalScope.contains(key2));
  assertTrue("Value2 is missing from logical scope.",logicalScope.contains(value2));
}
