/** 
 * Verifies that "Connection reset by peer" Exceptions are special-cased and are reported as an instance of  {@link RemoteTransportException}.
 */
@Test public void testConnectionResetByPeer() throws Throwable {
  EmbeddedChannel ch=createEmbeddedChannel();
  NetworkClientHandler handler=getClientHandler(ch);
  RemoteInputChannel rich=addInputChannel(handler);
  final Throwable[] error=new Throwable[1];
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      Throwable cause=(Throwable)invocation.getArguments()[0];
      try {
        assertEquals(RemoteTransportException.class,cause.getClass());
        assertNotEquals("Connection reset by peer",cause.getMessage());
        assertEquals(IOException.class,cause.getCause().getClass());
        assertEquals("Connection reset by peer",cause.getCause().getMessage());
      }
 catch (      Throwable t) {
        error[0]=t;
      }
      return null;
    }
  }
).when(rich).onError(any(Throwable.class));
  ch.pipeline().fireExceptionCaught(new IOException("Connection reset by peer"));
  assertNull(error[0]);
}
