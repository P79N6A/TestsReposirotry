@Test public void testCloseAndCleanup() throws Exception {
  final Configuration flinkConfig=new Configuration();
  flinkConfig.setString(YarnConfigOptions.APP_MASTER_RPC_ADDRESS,"localhost");
  flinkConfig.setInteger(YarnConfigOptions.APP_MASTER_RPC_PORT,1427);
  YarnHighAvailabilityServices services=new YarnPreConfiguredMasterNonHaServices(flinkConfig,hadoopConfig,HighAvailabilityServicesUtils.AddressResolution.NO_ADDRESS_RESOLUTION);
  services.closeAndCleanupAllData();
  final FileSystem fileSystem=hdfsRootPath.getFileSystem();
  final Path workDir=new Path(hdfsCluster.getFileSystem().getWorkingDirectory().toString());
  try {
    fileSystem.getFileStatus(new Path(workDir,YarnHighAvailabilityServices.FLINK_RECOVERY_DATA_DIR));
    fail("Flink recovery data directory still exists");
  }
 catch (  FileNotFoundException e) {
  }
  assertTrue(services.isClosed());
  try {
    services.closeAndCleanupAllData();
    fail("should fail with an IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
}
