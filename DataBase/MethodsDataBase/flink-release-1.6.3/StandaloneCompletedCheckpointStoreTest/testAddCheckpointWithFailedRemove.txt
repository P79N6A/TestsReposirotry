/** 
 * Tests that the checkpoint does not exist in the store when we fail to add it into the store (i.e., there exists an exception thrown by the method).
 */
@Test public void testAddCheckpointWithFailedRemove() throws Exception {
  final int numCheckpointsToRetain=1;
  CompletedCheckpointStore store=createCompletedCheckpoints(numCheckpointsToRetain);
  for (long i=0; i <= numCheckpointsToRetain; ++i) {
    CompletedCheckpoint checkpointToAdd=mock(CompletedCheckpoint.class);
    doReturn(i).when(checkpointToAdd).getCheckpointID();
    doReturn(Collections.emptyMap()).when(checkpointToAdd).getOperatorStates();
    doThrow(new IOException()).when(checkpointToAdd).discardOnSubsume();
    try {
      store.addCheckpoint(checkpointToAdd);
      List<CompletedCheckpoint> addedCheckpoints=store.getAllCheckpoints();
      assertTrue(addedCheckpoints.contains(checkpointToAdd));
    }
 catch (    Exception e) {
      List<CompletedCheckpoint> addedCheckpoints=store.getAllCheckpoints();
      assertFalse(addedCheckpoints.contains(checkpointToAdd));
    }
  }
}
