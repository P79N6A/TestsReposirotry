/** 
 * Tests that all runnable futures in an OperatorSnapshotResult are properly cancelled and if the StreamStateHandle result is retrievable that the state handle are discarded.
 */
@Test public void testCancelAndCleanup() throws Exception {
  OperatorSnapshotFutures operatorSnapshotResult=new OperatorSnapshotFutures();
  operatorSnapshotResult.cancel();
  KeyedStateHandle keyedManagedStateHandle=mock(KeyedStateHandle.class);
  SnapshotResult<KeyedStateHandle> keyedStateManagedResult=SnapshotResult.of(keyedManagedStateHandle);
  RunnableFuture<SnapshotResult<KeyedStateHandle>> keyedStateManagedFuture=spy(DoneFuture.of(keyedStateManagedResult));
  KeyedStateHandle keyedRawStateHandle=mock(KeyedStateHandle.class);
  SnapshotResult<KeyedStateHandle> keyedStateRawResult=SnapshotResult.of(keyedRawStateHandle);
  RunnableFuture<SnapshotResult<KeyedStateHandle>> keyedStateRawFuture=spy(DoneFuture.of(keyedStateRawResult));
  OperatorStateHandle operatorManagedStateHandle=mock(OperatorStreamStateHandle.class);
  SnapshotResult<OperatorStateHandle> operatorStateManagedResult=SnapshotResult.of(operatorManagedStateHandle);
  RunnableFuture<SnapshotResult<OperatorStateHandle>> operatorStateManagedFuture=spy(DoneFuture.of(operatorStateManagedResult));
  OperatorStateHandle operatorRawStateHandle=mock(OperatorStreamStateHandle.class);
  SnapshotResult<OperatorStateHandle> operatorStateRawResult=SnapshotResult.of(operatorRawStateHandle);
  RunnableFuture<SnapshotResult<OperatorStateHandle>> operatorStateRawFuture=spy(DoneFuture.of(operatorStateRawResult));
  operatorSnapshotResult=new OperatorSnapshotFutures(keyedStateManagedFuture,keyedStateRawFuture,operatorStateManagedFuture,operatorStateRawFuture);
  operatorSnapshotResult.cancel();
  verify(keyedStateManagedFuture).cancel(true);
  verify(keyedStateRawFuture).cancel(true);
  verify(operatorStateManagedFuture).cancel(true);
  verify(operatorStateRawFuture).cancel(true);
  verify(keyedManagedStateHandle).discardState();
  verify(keyedRawStateHandle).discardState();
  verify(operatorManagedStateHandle).discardState();
  verify(operatorRawStateHandle).discardState();
}
