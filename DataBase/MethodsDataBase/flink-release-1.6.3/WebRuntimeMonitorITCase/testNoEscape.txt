/** 
 * Files are copied from the flink-dist jar to a temporary directory and then served from there. Only allow to access files in this temporary directory.
 */
@Test public void testNoEscape() throws Exception {
  final Deadline deadline=TEST_TIMEOUT.fromNow();
  TestingCluster flink=null;
  final Configuration configuration=new Configuration();
  configuration.setBoolean(LOCAL_START_WEBSERVER,true);
  configuration.setInteger(WebOptions.PORT,0);
  try {
    flink=new TestingCluster(configuration);
    flink.start(true);
    WebRuntimeMonitor webMonitor=(WebRuntimeMonitor)flink.webMonitor().get();
    try (HttpTestClient client=new HttpTestClient("localhost",webMonitor.getServerPort())){
      String expectedIndex=new Scanner(new File(mainResourcesPath + "/index.html")).useDelimiter("\\A").next();
      client.sendGetRequest("index.html",deadline.timeLeft());
      HttpTestClient.SimpleHttpResponse response=client.getNextResponse(deadline.timeLeft());
      assertEquals(HttpResponseStatus.OK,response.getStatus());
      assertEquals(response.getType(),MimeTypes.getMimeTypeForExtension("html"));
      assertEquals(expectedIndex,response.getContent());
      File illegalFile=new File(webMonitor.getBaseDir(new Configuration()),"test-file-" + UUID.randomUUID());
      illegalFile.deleteOnExit();
      assertTrue("Failed to create test file",illegalFile.createNewFile());
      client.sendGetRequest("../" + illegalFile.getName(),deadline.timeLeft());
      response=client.getNextResponse(deadline.timeLeft());
      assertEquals("Unexpected status code " + response.getStatus() + " for file outside of web root.",HttpResponseStatus.NOT_FOUND,response.getStatus());
      client.sendGetRequest("not-existing-resource",deadline.timeLeft());
      response=client.getNextResponse(deadline.timeLeft());
      assertEquals("Unexpected status code " + response.getStatus() + " for file outside of web root.",HttpResponseStatus.NOT_FOUND,response.getStatus());
    }
   }
  finally {
    if (flink != null) {
      flink.stop();
    }
  }
}
