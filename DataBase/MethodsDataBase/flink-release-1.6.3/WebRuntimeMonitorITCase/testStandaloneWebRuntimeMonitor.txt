/** 
 * Tests operation of the monitor in standalone operation.
 */
@Test public void testStandaloneWebRuntimeMonitor() throws Exception {
  final Deadline deadline=TEST_TIMEOUT.fromNow();
  TestingCluster flink=null;
  final Configuration configuration=new Configuration();
  configuration.setBoolean(LOCAL_START_WEBSERVER,true);
  configuration.setInteger(WebOptions.PORT,0);
  try {
    flink=new TestingCluster(configuration);
    flink.start(true);
    WebMonitor webMonitor=flink.webMonitor().get();
    try (HttpTestClient client=new HttpTestClient("localhost",webMonitor.getServerPort())){
      String expected=new Scanner(new File(mainResourcesPath + "/index.html")).useDelimiter("\\A").next();
      client.sendGetRequest("index.html",deadline.timeLeft());
      HttpTestClient.SimpleHttpResponse response=client.getNextResponse(deadline.timeLeft());
      assertEquals(HttpResponseStatus.OK,response.getStatus());
      assertEquals(response.getType(),MimeTypes.getMimeTypeForExtension("html"));
      assertEquals(expected,response.getContent());
      client.sendGetRequest("/overview",deadline.timeLeft());
      response=client.getNextResponse(deadline.timeLeft());
      assertEquals(HttpResponseStatus.OK,response.getStatus());
      assertEquals("application/json; charset=UTF-8",response.getType());
      assertTrue(response.getContent().contains("\"taskmanagers\":1"));
    }
   }
  finally {
    if (flink != null) {
      flink.stop();
    }
  }
}
