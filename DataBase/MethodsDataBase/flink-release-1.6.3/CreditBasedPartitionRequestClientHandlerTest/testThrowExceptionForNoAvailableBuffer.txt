/** 
 * Verifies that  {@link RemoteInputChannel#onError(Throwable)} is called when a{@link BufferResponse} is received but no available buffer in input channel.
 */
@Test public void testThrowExceptionForNoAvailableBuffer() throws Exception {
  final SingleInputGate inputGate=createSingleInputGate();
  final RemoteInputChannel inputChannel=spy(createRemoteInputChannel(inputGate));
  final CreditBasedPartitionRequestClientHandler handler=new CreditBasedPartitionRequestClientHandler();
  handler.addInputChannel(inputChannel);
  assertEquals("There should be no buffers available in the channel.",0,inputChannel.getNumberOfAvailableBuffers());
  final BufferResponse bufferResponse=createBufferResponse(TestBufferFactory.createBuffer(TestBufferFactory.BUFFER_SIZE),0,inputChannel.getInputChannelId(),2);
  handler.channelRead(mock(ChannelHandlerContext.class),bufferResponse);
  verify(inputChannel,times(1)).onError(any(IllegalStateException.class));
}
