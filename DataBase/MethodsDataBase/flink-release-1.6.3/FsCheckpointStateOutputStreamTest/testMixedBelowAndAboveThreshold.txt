@Test public void testMixedBelowAndAboveThreshold() throws Exception {
  final byte[] state1=new byte[1274673];
  final byte[] state2=new byte[1];
  final byte[] state3=new byte[0];
  final byte[] state4=new byte[177];
  final Random rnd=new Random();
  rnd.nextBytes(state1);
  rnd.nextBytes(state2);
  rnd.nextBytes(state3);
  rnd.nextBytes(state4);
  final File directory=tempDir.newFolder();
  final Path basePath=Path.fromLocalFile(directory);
  final Supplier<CheckpointStateOutputStream> factory=() -> new FsCheckpointStateOutputStream(basePath,FileSystem.getLocalFileSystem(),1024,15);
  CheckpointStateOutputStream stream1=factory.get();
  CheckpointStateOutputStream stream2=factory.get();
  CheckpointStateOutputStream stream3=factory.get();
  stream1.write(state1);
  stream2.write(state2);
  stream3.write(state3);
  FileStateHandle handle1=(FileStateHandle)stream1.closeAndGetHandle();
  ByteStreamStateHandle handle2=(ByteStreamStateHandle)stream2.closeAndGetHandle();
  ByteStreamStateHandle handle3=(ByteStreamStateHandle)stream3.closeAndGetHandle();
  StreamStateHandle handle4;
  try (CheckpointStreamFactory.CheckpointStateOutputStream stream4=factory.get()){
    stream4.write(state4);
    handle4=stream4.closeAndGetHandle();
  }
   CheckpointStreamFactory.CheckpointStateOutputStream stream5=factory.get();
  stream5.write(state4);
  stream5.close();
  try {
    stream5.closeAndGetHandle();
    fail();
  }
 catch (  IOException e) {
  }
  validateBytesInStream(handle1.openInputStream(),state1);
  handle1.discardState();
  assertFalse(isDirectoryEmpty(directory));
  ensureLocalFileDeleted(handle1.getFilePath());
  validateBytesInStream(handle2.openInputStream(),state2);
  handle2.discardState();
  assertFalse(isDirectoryEmpty(directory));
  assertNull(handle3);
  assertFalse(isDirectoryEmpty(directory));
  validateBytesInStream(handle4.openInputStream(),state4);
  handle4.discardState();
  assertTrue(isDirectoryEmpty(directory));
}
