@Test public void testRpcConnectionFailures() throws Exception {
  final String connectionFailureMessage="Test RPC Connection failure";
  final String testRpcConnectionEndpointAddress="<TestRpcConnectionEndpointAddress>";
  final UUID leaderId=UUID.randomUUID();
  TestRegistrationGateway testGateway=mock(TestRegistrationGateway.class);
  final RuntimeException registrationException=new RuntimeException(connectionFailureMessage);
  when(testGateway.registrationCall(any(UUID.class),anyLong())).thenThrow(registrationException);
  rpcService.registerGateway(testRpcConnectionEndpointAddress,testGateway);
  TestRpcConnection connection=new TestRpcConnection(testRpcConnectionEndpointAddress,leaderId,rpcService.getExecutor(),rpcService);
  connection.start();
  try {
    connection.getConnectionFuture().get();
    fail("expected failure.");
  }
 catch (  ExecutionException ee) {
    assertEquals(registrationException,ee.getCause());
  }
  assertFalse(connection.isConnected());
  assertEquals(testRpcConnectionEndpointAddress,connection.getTargetAddress());
  assertEquals(leaderId,connection.getTargetLeaderId());
  assertNull(connection.getTargetGateway());
}
