@Test public void testTaskIOMetricGroup(){
  TaskMetricGroup task=UnregisteredMetricGroups.createUnregisteredTaskMetricGroup();
  TaskIOMetricGroup taskIO=task.getIOMetricGroup();
  assertNotNull(taskIO.getNumRecordsInCounter());
  assertNotNull(taskIO.getNumRecordsOutCounter());
  Counter c1=new SimpleCounter();
  c1.inc(32L);
  Counter c2=new SimpleCounter();
  c2.inc(64L);
  taskIO.reuseRecordsInputCounter(c1);
  taskIO.reuseRecordsOutputCounter(c2);
  assertEquals(32L,taskIO.getNumRecordsInCounter().getCount());
  assertEquals(64L,taskIO.getNumRecordsOutCounter().getCount());
  taskIO.getNumBytesInLocalCounter().inc(100L);
  taskIO.getNumBytesInRemoteCounter().inc(150L);
  taskIO.getNumBytesOutCounter().inc(250L);
  taskIO.getNumBuffersInLocalCounter().inc(1L);
  taskIO.getNumBuffersInRemoteCounter().inc(2L);
  taskIO.getNumBuffersOutCounter().inc(3L);
  IOMetrics io=taskIO.createSnapshot();
  assertEquals(32L,io.getNumRecordsIn());
  assertEquals(64L,io.getNumRecordsOut());
  assertEquals(100L,io.getNumBytesInLocal());
  assertEquals(150L,io.getNumBytesInRemote());
  assertEquals(250L,io.getNumBytesOut());
  assertEquals(1L,taskIO.getNumBuffersInLocalCounter().getCount());
  assertEquals(2L,taskIO.getNumBuffersInRemoteCounter().getCount());
  assertEquals(3L,taskIO.getNumBuffersOutCounter().getCount());
}
