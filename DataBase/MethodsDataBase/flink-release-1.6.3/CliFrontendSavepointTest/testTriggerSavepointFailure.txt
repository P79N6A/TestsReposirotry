@Test public void testTriggerSavepointFailure() throws Exception {
  replaceStdOutAndStdErr();
  JobID jobId=new JobID();
  String expectedTestException="expectedTestException";
  Exception testException=new Exception(expectedTestException);
  final ClusterClient<String> clusterClient=createFailingClusterClient(testException);
  try {
    MockedCliFrontend frontend=new MockedCliFrontend(clusterClient);
    String[] parameters={jobId.toString()};
    try {
      frontend.savepoint(parameters);
      fail("Savepoint should have failed.");
    }
 catch (    FlinkException e) {
      assertTrue(ExceptionUtils.findThrowableWithMessage(e,expectedTestException).isPresent());
    }
  }
  finally {
    clusterClient.shutdown();
    restoreStdOutAndStdErr();
  }
}
