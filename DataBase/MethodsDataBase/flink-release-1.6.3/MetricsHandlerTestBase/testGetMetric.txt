/** 
 * Tests that the metric with name defined under  {@link #TEST_METRIC_NAME} can be retrievedfrom the  {@link MetricStore.ComponentMetricStore} returned from{@link AbstractMetricsHandler#getComponentMetricStore(HandlerRequest,MetricStore)}.
 */
@Test public void testGetMetric() throws Exception {
  @SuppressWarnings("unchecked") final CompletableFuture<MetricCollectionResponseBody> completableFuture=metricsHandler.handleRequest(new HandlerRequest<>(EmptyRequestBody.getInstance(),metricsHandler.getMessageHeaders().getUnresolvedMessageParameters(),pathParameters,Collections.emptyMap()),mockDispatcherGateway);
  assertTrue(completableFuture.isDone());
  final MetricCollectionResponseBody metricCollectionResponseBody=completableFuture.get();
  assertThat(metricCollectionResponseBody.getMetrics(),hasSize(1));
  final Metric metric=metricCollectionResponseBody.getMetrics().iterator().next();
  assertThat(metric.getId(),equalTo(getExpectedIdForMetricName(TEST_METRIC_NAME)));
}
