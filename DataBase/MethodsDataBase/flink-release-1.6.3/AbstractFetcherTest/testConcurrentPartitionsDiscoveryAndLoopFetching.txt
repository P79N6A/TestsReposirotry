@Test public void testConcurrentPartitionsDiscoveryAndLoopFetching() throws Exception {
  final KafkaTopicPartition testPartition=new KafkaTopicPartition("test",42);
  @SuppressWarnings("unchecked") SourceContext<String> sourceContext=new TestSourceContext<>();
  Map<KafkaTopicPartition,Long> partitionsWithInitialOffsets=Collections.singletonMap(testPartition,KafkaTopicPartitionStateSentinel.GROUP_OFFSET);
  final OneShotLatch fetchLoopWaitLatch=new OneShotLatch();
  final OneShotLatch stateIterationBlockLatch=new OneShotLatch();
  final TestFetcher<String> fetcher=new TestFetcher<>(sourceContext,partitionsWithInitialOffsets,null,null,new TestProcessingTimeService(),10,fetchLoopWaitLatch,stateIterationBlockLatch);
  final CheckedThread checkedThread=new CheckedThread(){
    @Override public void go() throws Exception {
      fetcher.runFetchLoop();
    }
  }
;
  checkedThread.start();
  fetchLoopWaitLatch.await();
  fetcher.addDiscoveredPartitions(Collections.singletonList(testPartition));
  stateIterationBlockLatch.trigger();
  checkedThread.sync();
}
