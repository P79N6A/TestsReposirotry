@Test public void testStrictContiguityWithCondition(){
  Pattern<Event,?> pattern=Pattern.<Event>begin("start").next("next").where(new SimpleCondition<Event>(){
    private static final long serialVersionUID=-7657256242101104925L;
    @Override public boolean filter(    Event value) throws Exception {
      return value.getName().equals("foobar");
    }
  }
).next("end").where(new SimpleCondition<Event>(){
    private static final long serialVersionUID=-7597452389191504189L;
    @Override public boolean filter(    Event value) throws Exception {
      return value.getId() == 42;
    }
  }
);
  Pattern<Event,?> previous;
  Pattern<Event,?> previous2;
  assertNotNull(previous=pattern.getPrevious());
  assertNotNull(previous2=previous.getPrevious());
  assertNull(previous2.getPrevious());
  assertNotNull(pattern.getCondition());
  assertNotNull(previous.getCondition());
  assertNull(previous2.getCondition());
  assertEquals(pattern.getName(),"end");
  assertEquals(previous.getName(),"next");
  assertEquals(previous2.getName(),"start");
}
