@Test public void testShutdownAndWaitPending(){
  final Object lock=new Object();
  final OneShotLatch blockUntilTriggered=new OneShotLatch();
  final AtomicBoolean timerExecutionFinished=new AtomicBoolean(false);
  final SystemProcessingTimeService timeService=createBlockingSystemProcessingTimeService(lock,blockUntilTriggered,timerExecutionFinished);
  Assert.assertFalse(timeService.isTerminated());
  try {
    Assert.assertFalse(timeService.shutdownAndAwaitPending(1,TimeUnit.SECONDS));
  }
 catch (  InterruptedException e) {
    Assert.fail("Unexpected interruption.");
  }
  blockUntilTriggered.trigger();
  try {
    Assert.assertTrue(timeService.shutdownAndAwaitPending(60,TimeUnit.SECONDS));
  }
 catch (  InterruptedException e) {
    Assert.fail("Unexpected interruption.");
  }
  Assert.assertTrue(timerExecutionFinished.get());
  Assert.assertTrue(timeService.isTerminated());
}
