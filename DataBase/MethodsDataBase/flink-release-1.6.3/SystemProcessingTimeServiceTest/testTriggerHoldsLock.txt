@Test public void testTriggerHoldsLock() throws Exception {
  final Object lock=new Object();
  final AtomicReference<Throwable> errorRef=new AtomicReference<>();
  final SystemProcessingTimeService timer=new SystemProcessingTimeService(new ReferenceSettingExceptionHandler(errorRef),lock);
  try {
    assertEquals(0,timer.getNumTasksScheduled());
    ScheduledFuture<?> future=timer.registerTimer(System.currentTimeMillis(),new ProcessingTimeCallback(){
      @Override public void onProcessingTime(      long timestamp){
        assertTrue(Thread.holdsLock(lock));
      }
    }
);
    future.get();
    assertEquals(0,timer.getNumTasksScheduled());
    if (errorRef.get() != null) {
      throw new Exception(errorRef.get());
    }
  }
  finally {
    timer.shutdownService();
  }
}
