@Test public void testRowRegisterRowWithNames() throws Exception {
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  StreamTableEnvironment tableEnv=TableEnvironment.getTableEnvironment(env);
  StreamITCase.clear();
  List<Row> data=new ArrayList<>();
  data.add(Row.of(1,1L,"Hi"));
  data.add(Row.of(2,2L,"Hello"));
  data.add(Row.of(3,2L,"Hello world"));
  TypeInformation<?>[] types={BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.LONG_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO};
  String[] names={"a","b","c"};
  RowTypeInfo typeInfo=new RowTypeInfo(types,names);
  DataStream<Row> ds=env.fromCollection(data).returns(typeInfo);
  Table in=tableEnv.fromDataStream(ds,"a,b,c");
  tableEnv.registerTable("MyTableRow",in);
  String sqlQuery="SELECT a,c FROM MyTableRow";
  Table result=tableEnv.sqlQuery(sqlQuery);
  DataStream<Row> resultSet=tableEnv.toAppendStream(result,Row.class);
  resultSet.addSink(new StreamITCase.StringSink<Row>());
  env.execute();
  List<String> expected=new ArrayList<>();
  expected.add("1,Hi");
  expected.add("2,Hello");
  expected.add("3,Hello world");
  StreamITCase.compareWithList(expected);
}
