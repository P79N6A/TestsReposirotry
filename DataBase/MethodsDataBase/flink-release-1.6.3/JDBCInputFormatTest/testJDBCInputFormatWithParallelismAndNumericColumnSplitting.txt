@Test public void testJDBCInputFormatWithParallelismAndNumericColumnSplitting() throws IOException {
  final int fetchSize=1;
  final long min=TEST_DATA[0].id;
  final long max=TEST_DATA[TEST_DATA.length - fetchSize].id;
  ParameterValuesProvider pramProvider=new NumericBetweenParametersProvider(fetchSize,min,max);
  jdbcInputFormat=JDBCInputFormat.buildJDBCInputFormat().setDrivername(DRIVER_CLASS).setDBUrl(DB_URL).setQuery(JDBCTestBase.SELECT_ALL_BOOKS_SPLIT_BY_ID).setRowTypeInfo(ROW_TYPE_INFO).setParametersProvider(pramProvider).setResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE).finish();
  jdbcInputFormat.openInputFormat();
  InputSplit[] splits=jdbcInputFormat.createInputSplits(1);
  Assert.assertEquals(TEST_DATA.length,splits.length);
  int recordCount=0;
  Row row=new Row(5);
  for (  InputSplit split : splits) {
    jdbcInputFormat.open(split);
    while (!jdbcInputFormat.reachedEnd()) {
      Row next=jdbcInputFormat.nextRecord(row);
      assertEquals(TEST_DATA[recordCount],next);
      recordCount++;
    }
    jdbcInputFormat.close();
  }
  jdbcInputFormat.closeInputFormat();
  Assert.assertEquals(TEST_DATA.length,recordCount);
}
