@Test public void testWriteKeyGroupTracking() throws Exception {
  final KeyGroupRange keyRange=new KeyGroupRange(0,2);
  KeyedStateCheckpointOutputStream stream=createStream(keyRange);
  try {
    stream.startNewKeyGroup(4711);
    Assert.fail();
  }
 catch (  IllegalArgumentException expected) {
  }
  Assert.assertEquals(-1,stream.getCurrentKeyGroup());
  DataOutputView dov=new DataOutputViewStreamWrapper(stream);
  int previous=-1;
  for (  int kg : keyRange) {
    Assert.assertFalse(stream.isKeyGroupAlreadyStarted(kg));
    Assert.assertFalse(stream.isKeyGroupAlreadyFinished(kg));
    stream.startNewKeyGroup(kg);
    if (-1 != previous) {
      Assert.assertTrue(stream.isKeyGroupAlreadyStarted(previous));
      Assert.assertTrue(stream.isKeyGroupAlreadyFinished(previous));
    }
    Assert.assertTrue(stream.isKeyGroupAlreadyStarted(kg));
    Assert.assertFalse(stream.isKeyGroupAlreadyFinished(kg));
    dov.writeInt(kg);
    previous=kg;
  }
  KeyGroupsStateHandle fullHandle=stream.closeAndGetHandle();
  verifyRead(fullHandle,keyRange);
  for (  int kg : keyRange) {
    try {
      stream.startNewKeyGroup(kg);
      Assert.fail();
    }
 catch (    IOException ex) {
    }
  }
}
