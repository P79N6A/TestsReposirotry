/** 
 * Tests the checkpoint history with multiple checkpoints.
 */
@Test public void testCheckpointHistory() throws Exception {
  CheckpointStatsHistory history=new CheckpointStatsHistory(3);
  history.addInProgressCheckpoint(createPendingCheckpointStats(0));
  CheckpointStatsHistory snapshot=history.createSnapshot();
  for (  AbstractCheckpointStats stats : snapshot.getCheckpoints()) {
    assertEquals(0,stats.getCheckpointId());
    assertTrue(stats.getStatus().isInProgress());
  }
  history.addInProgressCheckpoint(createPendingCheckpointStats(1));
  history.addInProgressCheckpoint(createPendingCheckpointStats(2));
  history.addInProgressCheckpoint(createPendingCheckpointStats(3));
  snapshot=history.createSnapshot();
  Iterator<AbstractCheckpointStats> it=snapshot.getCheckpoints().iterator();
  for (int i=3; i > 0; i--) {
    assertTrue(it.hasNext());
    AbstractCheckpointStats stats=it.next();
    assertEquals(i,stats.getCheckpointId());
    assertTrue(stats.getStatus().isInProgress());
  }
  assertFalse(it.hasNext());
  history.replacePendingCheckpointById(createFailedCheckpointStats(1));
  history.replacePendingCheckpointById(createCompletedCheckpointStats(3));
  history.replacePendingCheckpointById(createFailedCheckpointStats(2));
  snapshot=history.createSnapshot();
  it=snapshot.getCheckpoints().iterator();
  assertTrue(it.hasNext());
  AbstractCheckpointStats stats=it.next();
  assertEquals(3,stats.getCheckpointId());
  assertNotNull(snapshot.getCheckpointById(3));
  assertTrue(stats.getStatus().isCompleted());
  assertTrue(snapshot.getCheckpointById(3).getStatus().isCompleted());
  assertTrue(it.hasNext());
  stats=it.next();
  assertEquals(2,stats.getCheckpointId());
  assertNotNull(snapshot.getCheckpointById(2));
  assertTrue(stats.getStatus().isFailed());
  assertTrue(snapshot.getCheckpointById(2).getStatus().isFailed());
  assertTrue(it.hasNext());
  stats=it.next();
  assertEquals(1,stats.getCheckpointId());
  assertNotNull(snapshot.getCheckpointById(1));
  assertTrue(stats.getStatus().isFailed());
  assertTrue(snapshot.getCheckpointById(1).getStatus().isFailed());
  assertFalse(it.hasNext());
}
