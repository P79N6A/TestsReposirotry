@Test public void testBuilder() throws Exception {
  OrcTableSource orc1=OrcTableSource.builder().path(getPath(TEST_FILE_NESTED)).forOrcSchema(TEST_SCHEMA_NESTED).build();
  DataSet<Row> rows1=orc1.getDataSet(ExecutionEnvironment.createLocalEnvironment());
  OrcRowInputFormat orcIF1=(OrcRowInputFormat)((DataSource)rows1).getInputFormat();
  assertEquals(true,orcIF1.getNestedFileEnumeration());
  assertEquals(getPath(TEST_FILE_NESTED),orcIF1.getFilePath().toString());
  assertEquals(TEST_SCHEMA_NESTED,orcIF1.getSchema());
  OrcTableSource orc2=OrcTableSource.builder().path(getPath(TEST_FILE_NESTED),false).forOrcSchema(TEST_SCHEMA_NESTED).build();
  DataSet<Row> rows2=orc2.getDataSet(ExecutionEnvironment.createLocalEnvironment());
  OrcRowInputFormat orcIF2=(OrcRowInputFormat)((DataSource)rows2).getInputFormat();
  assertEquals(false,orcIF2.getNestedFileEnumeration());
  Configuration conf=new Configuration();
  conf.set("testKey","testValue");
  OrcTableSource orc3=OrcTableSource.builder().path(getPath(TEST_FILE_NESTED)).forOrcSchema(TEST_SCHEMA_NESTED).withConfiguration(conf).build();
  DataSet<Row> rows3=orc3.getDataSet(ExecutionEnvironment.createLocalEnvironment());
  OrcRowInputFormat orcIF3=(OrcRowInputFormat)((DataSource)rows3).getInputFormat();
  assertEquals(conf,orcIF3.getConfiguration());
  OrcTableSource orc4=OrcTableSource.builder().path(getPath(TEST_FILE_NESTED)).forOrcSchema(TEST_SCHEMA_NESTED).withBatchSize(987).build();
  DataSet<Row> rows4=orc4.getDataSet(ExecutionEnvironment.createLocalEnvironment());
  OrcRowInputFormat orcIF4=(OrcRowInputFormat)((DataSource)rows4).getInputFormat();
  assertEquals(987,orcIF4.getBatchSize());
}
