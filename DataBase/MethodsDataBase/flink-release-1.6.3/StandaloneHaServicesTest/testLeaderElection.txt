/** 
 * Tests that the standalone leader election services return a fixed address and leader session id.
 */
@Test public void testLeaderElection() throws Exception {
  JobID jobId=new JobID();
  LeaderContender jmLeaderContender=mock(LeaderContender.class);
  LeaderContender rmLeaderContender=mock(LeaderContender.class);
  LeaderElectionService jmLeaderElectionService=standaloneHaServices.getJobManagerLeaderElectionService(jobId);
  LeaderElectionService rmLeaderElectionService=standaloneHaServices.getResourceManagerLeaderElectionService();
  jmLeaderElectionService.start(jmLeaderContender);
  rmLeaderElectionService.start(rmLeaderContender);
  verify(jmLeaderContender).grantLeadership(eq(HighAvailabilityServices.DEFAULT_LEADER_ID));
  verify(rmLeaderContender).grantLeadership(eq(HighAvailabilityServices.DEFAULT_LEADER_ID));
}
