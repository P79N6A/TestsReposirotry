/** 
 * Tests that the standalone leader retrieval services return the specified address and the fixed leader session id.
 */
@Test public void testJobManagerLeaderRetrieval() throws Exception {
  JobID jobId1=new JobID();
  JobID jobId2=new JobID();
  LeaderRetrievalListener jmListener1=mock(LeaderRetrievalListener.class);
  LeaderRetrievalListener jmListener2=mock(LeaderRetrievalListener.class);
  LeaderRetrievalListener rmListener=mock(LeaderRetrievalListener.class);
  LeaderRetrievalService jmLeaderRetrievalService1=standaloneHaServices.getJobManagerLeaderRetriever(jobId1);
  LeaderRetrievalService jmLeaderRetrievalService2=standaloneHaServices.getJobManagerLeaderRetriever(jobId2);
  LeaderRetrievalService rmLeaderRetrievalService=standaloneHaServices.getResourceManagerLeaderRetriever();
  jmLeaderRetrievalService1.start(jmListener1);
  jmLeaderRetrievalService2.start(jmListener2);
  rmLeaderRetrievalService.start(rmListener);
  verify(jmListener1).notifyLeaderAddress(eq(jobManagerAddress),eq(HighAvailabilityServices.DEFAULT_LEADER_ID));
  verify(jmListener2).notifyLeaderAddress(eq(jobManagerAddress),eq(HighAvailabilityServices.DEFAULT_LEADER_ID));
  verify(rmListener).notifyLeaderAddress(eq(resourceManagerAddress),eq(HighAvailabilityServices.DEFAULT_LEADER_ID));
}
