/** 
 * Tests that for multiple inputs, when some inputs are idle, the min watermark is correctly computed and advanced from the remaining active inputs.
 */
@Test public void testMultipleInputWatermarkAdvancingWithPartiallyIdleChannels(){
  BufferedValveOutputHandler valveOutput=new BufferedValveOutputHandler();
  StatusWatermarkValve valve=new StatusWatermarkValve(3,valveOutput);
  valve.inputWatermark(new Watermark(15),0);
  valve.inputWatermark(new Watermark(10),1);
  assertEquals(null,valveOutput.popLastSeenOutput());
  valve.inputStreamStatus(StreamStatus.IDLE,2);
  assertEquals(new Watermark(10),valveOutput.popLastSeenOutput());
  assertEquals(null,valveOutput.popLastSeenOutput());
  valve.inputWatermark(new Watermark(18),1);
  assertEquals(new Watermark(15),valveOutput.popLastSeenOutput());
  assertEquals(null,valveOutput.popLastSeenOutput());
  valve.inputWatermark(new Watermark(20),0);
  assertEquals(new Watermark(18),valveOutput.popLastSeenOutput());
  assertEquals(null,valveOutput.popLastSeenOutput());
}
