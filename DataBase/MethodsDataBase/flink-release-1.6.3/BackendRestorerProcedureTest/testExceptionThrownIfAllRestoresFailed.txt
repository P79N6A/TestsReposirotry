/** 
 * Tests if there is an exception if all restore attempts are exhausted and failed.
 */
@Test public void testExceptionThrownIfAllRestoresFailed() throws Exception {
  CloseableRegistry closeableRegistry=new CloseableRegistry();
  OperatorStateHandle firstFailHandle=mock(OperatorStateHandle.class);
  OperatorStateHandle secondFailHandle=mock(OperatorStateHandle.class);
  OperatorStateHandle thirdFailHandle=mock(OperatorStateHandle.class);
  List<StateObjectCollection<OperatorStateHandle>> sortedRestoreOptions=Arrays.asList(new StateObjectCollection<>(Collections.singletonList(firstFailHandle)),new StateObjectCollection<>(Collections.singletonList(secondFailHandle)),new StateObjectCollection<>(Collections.singletonList(thirdFailHandle)));
  BackendRestorerProcedure<OperatorStateBackend,OperatorStateHandle> restorerProcedure=new BackendRestorerProcedure<>(backendSupplier,closeableRegistry,"test op state backend");
  try {
    restorerProcedure.createAndRestore(sortedRestoreOptions);
    Assert.fail();
  }
 catch (  Exception ignore) {
  }
  verify(firstFailHandle).openInputStream();
  verify(secondFailHandle).openInputStream();
  verify(thirdFailHandle).openInputStream();
}
