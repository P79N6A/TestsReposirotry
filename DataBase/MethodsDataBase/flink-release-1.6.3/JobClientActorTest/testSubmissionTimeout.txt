/** 
 * Tests that a  {@link JobClientActorSubmissionTimeoutException} is thrown when the job cannotbe submitted by the JobSubmissionClientActor. This is here the case, because the started JobManager never replies to a  {@link SubmitJob} message.
 * @throws Exception
 */
@Test(expected=JobClientActorSubmissionTimeoutException.class) public void testSubmissionTimeout() throws Exception {
  FiniteDuration jobClientActorTimeout=new FiniteDuration(1L,TimeUnit.SECONDS);
  FiniteDuration timeout=jobClientActorTimeout.$times(2);
  UUID leaderSessionID=UUID.randomUUID();
  ActorRef jobManager=system.actorOf(Props.create(PlainActor.class,leaderSessionID));
  SettableLeaderRetrievalService settableLeaderRetrievalService=new SettableLeaderRetrievalService(jobManager.path().toString(),leaderSessionID);
  Props jobClientActorProps=JobSubmissionClientActor.createActorProps(settableLeaderRetrievalService,jobClientActorTimeout,false,clientConfig);
  ActorRef jobClientActor=system.actorOf(jobClientActorProps);
  Future<Object> jobExecutionResult=Patterns.ask(jobClientActor,new JobClientMessages.SubmitJobAndWait(testJobGraph),new Timeout(timeout));
  Await.result(jobExecutionResult,timeout);
}
