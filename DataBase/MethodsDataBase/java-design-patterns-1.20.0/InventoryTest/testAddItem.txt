/** 
 * Concurrently add multiple items to the inventory, and check if the items were added in order by checking the stdOut for continuous growth of the inventory. When 'items.size()=xx' shows up out of order, it means that the locking is not ok, increasing the risk of going over the inventory item limit.
 */
@Test public void testAddItem() throws Exception {
  assertTimeout(ofMillis(10000),() -> {
    final Inventory inventory=new Inventory(INVENTORY_SIZE);
    final ExecutorService executorService=Executors.newFixedThreadPool(THREAD_COUNT);
    for (int i=0; i < THREAD_COUNT; i++) {
      executorService.execute(() -> {
        while (inventory.addItem(new Item())) {
        }
        ;
      }
);
    }
    executorService.shutdown();
    executorService.awaitTermination(5,TimeUnit.SECONDS);
    final List<Item> items=inventory.getItems();
    assertNotNull(items);
    assertEquals(INVENTORY_SIZE,items.size());
    assertEquals(INVENTORY_SIZE,appender.getLogSize());
    for (int i=0; i < items.size(); i++) {
      assertTrue(appender.log.get(i).getFormattedMessage().contains("items.size()=" + (i + 1)));
    }
  }
);
}
