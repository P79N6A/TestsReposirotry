/** 
 * Test used to verify the happy path of  {@link ThreadAsyncExecutor#startProcess(Callable)} when a task takes a whileto execute
 */
@Test public void testLongRunningTaskWithoutCallback() throws Exception {
  assertTimeout(ofMillis(5000),() -> {
    final ThreadAsyncExecutor executor=new ThreadAsyncExecutor();
    final Object result=new Object();
    final Callable<Object> task=mock(Callable.class);
    when(task.call()).thenAnswer(i -> {
      Thread.sleep(1500);
      return result;
    }
);
    final AsyncResult<Object> asyncResult=executor.startProcess(task);
    assertNotNull(asyncResult);
    assertFalse(asyncResult.isCompleted());
    try {
      asyncResult.getValue();
      fail("Expected IllegalStateException when calling AsyncResult#getValue on a non-completed task");
    }
 catch (    IllegalStateException e) {
      assertNotNull(e.getMessage());
    }
    verify(task,timeout(3000).times(1)).call();
    asyncResult.await();
    assertTrue(asyncResult.isCompleted());
    verifyNoMoreInteractions(task);
    assertSame(result,asyncResult.getValue());
  }
);
}
