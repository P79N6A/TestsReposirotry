@Test public void testBakeCakes() throws CakeBakingException {
  final CakeBakingServiceImpl service=new CakeBakingServiceImpl();
  final List<CakeInfo> initialCakes=service.getAllCakes();
  assertNotNull(initialCakes);
  assertTrue(initialCakes.isEmpty());
  final CakeToppingInfo topping1=new CakeToppingInfo("Topping1",1000);
  final CakeToppingInfo topping2=new CakeToppingInfo("Topping2",2000);
  service.saveNewTopping(topping1);
  service.saveNewTopping(topping2);
  final CakeLayerInfo layer1=new CakeLayerInfo("Layer1",1000);
  final CakeLayerInfo layer2=new CakeLayerInfo("Layer2",2000);
  final CakeLayerInfo layer3=new CakeLayerInfo("Layer3",2000);
  service.saveNewLayer(layer1);
  service.saveNewLayer(layer2);
  service.saveNewLayer(layer3);
  service.bakeNewCake(new CakeInfo(topping1,Arrays.asList(layer1,layer2)));
  service.bakeNewCake(new CakeInfo(topping2,Collections.singletonList(layer3)));
  final List<CakeInfo> allCakes=service.getAllCakes();
  assertNotNull(allCakes);
  assertEquals(2,allCakes.size());
  for (  final CakeInfo cakeInfo : allCakes) {
    assertNotNull(cakeInfo.id);
    assertNotNull(cakeInfo.cakeToppingInfo);
    assertNotNull(cakeInfo.cakeLayerInfos);
    assertNotNull(cakeInfo.toString());
    assertFalse(cakeInfo.cakeLayerInfos.isEmpty());
    assertTrue(cakeInfo.calculateTotalCalories() > 0);
  }
}
