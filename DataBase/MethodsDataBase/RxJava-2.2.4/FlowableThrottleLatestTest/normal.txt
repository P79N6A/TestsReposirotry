@Test public void normal(){
  TestScheduler sch=new TestScheduler();
  PublishProcessor<Integer> pp=PublishProcessor.create();
  TestSubscriber<Integer> ts=pp.throttleLatest(1,TimeUnit.SECONDS,sch).test();
  pp.onNext(1);
  ts.assertValuesOnly(1);
  pp.onNext(2);
  ts.assertValuesOnly(1);
  pp.onNext(3);
  ts.assertValuesOnly(1);
  sch.advanceTimeBy(1,TimeUnit.SECONDS);
  ts.assertValuesOnly(1,3);
  pp.onNext(4);
  ts.assertValuesOnly(1,3);
  pp.onNext(5);
  sch.advanceTimeBy(1,TimeUnit.SECONDS);
  ts.assertValuesOnly(1,3,5);
  sch.advanceTimeBy(1,TimeUnit.SECONDS);
  ts.assertValuesOnly(1,3,5);
  pp.onNext(6);
  ts.assertValuesOnly(1,3,5,6);
  pp.onNext(7);
  pp.onComplete();
  ts.assertResult(1,3,5,6);
  sch.advanceTimeBy(1,TimeUnit.SECONDS);
  ts.assertResult(1,3,5,6);
}
