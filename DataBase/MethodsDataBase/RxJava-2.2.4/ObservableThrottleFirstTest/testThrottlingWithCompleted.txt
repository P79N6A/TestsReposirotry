@Test public void testThrottlingWithCompleted(){
  Observable<String> source=Observable.unsafeCreate(new ObservableSource<String>(){
    @Override public void subscribe(    Observer<? super String> innerObserver){
      innerObserver.onSubscribe(Disposables.empty());
      publishNext(innerObserver,100,"one");
      publishNext(innerObserver,300,"two");
      publishNext(innerObserver,900,"three");
      publishNext(innerObserver,905,"four");
      publishCompleted(innerObserver,1000);
    }
  }
);
  Observable<String> sampled=source.throttleFirst(400,TimeUnit.MILLISECONDS,scheduler);
  sampled.subscribe(observer);
  InOrder inOrder=inOrder(observer);
  scheduler.advanceTimeTo(1000,TimeUnit.MILLISECONDS);
  inOrder.verify(observer,times(1)).onNext("one");
  inOrder.verify(observer,times(0)).onNext("two");
  inOrder.verify(observer,times(1)).onNext("three");
  inOrder.verify(observer,times(0)).onNext("four");
  inOrder.verify(observer,times(1)).onComplete();
  inOrder.verifyNoMoreInteractions();
}
