@Test public void dispose(){
  final int[] call={0};
  TestObserver<Void> to=Completable.using(new Callable<Object>(){
    @Override public Object call() throws Exception {
      return 1;
    }
  }
,new Function<Object,CompletableSource>(){
    @Override public CompletableSource apply(    Object v) throws Exception {
      return Completable.never();
    }
  }
,new Consumer<Object>(){
    @Override public void accept(    Object d) throws Exception {
      call[0]++;
    }
  }
,false).test();
  to.cancel();
  assertEquals(1,call[0]);
}
