@Test public void supplierAndDisposerCrashNonEager(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Completable.using(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return 1;
      }
    }
,new Function<Object,CompletableSource>(){
      @Override public CompletableSource apply(      Object v) throws Exception {
        throw new TestException("Main");
      }
    }
,new Consumer<Object>(){
      @Override public void accept(      Object d) throws Exception {
        throw new TestException("Disposer");
      }
    }
,false).test().assertFailureAndMessage(TestException.class,"Main");
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Disposer");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
