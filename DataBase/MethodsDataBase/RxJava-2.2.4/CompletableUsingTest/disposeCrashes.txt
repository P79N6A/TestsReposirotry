@Test public void disposeCrashes(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    TestObserver<Void> to=Completable.using(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return 1;
      }
    }
,new Function<Object,CompletableSource>(){
      @Override public CompletableSource apply(      Object v) throws Exception {
        return Completable.never();
      }
    }
,new Consumer<Object>(){
      @Override public void accept(      Object d) throws Exception {
        throw new TestException();
      }
    }
,false).test();
    to.cancel();
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
