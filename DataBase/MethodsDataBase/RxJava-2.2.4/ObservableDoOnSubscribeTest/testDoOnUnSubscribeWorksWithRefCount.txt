@Test public void testDoOnUnSubscribeWorksWithRefCount() throws Exception {
  final AtomicInteger onSubscribed=new AtomicInteger();
  final AtomicInteger countBefore=new AtomicInteger();
  final AtomicInteger countAfter=new AtomicInteger();
  final AtomicReference<Observer<? super Integer>> sref=new AtomicReference<Observer<? super Integer>>();
  Observable<Integer> o=Observable.unsafeCreate(new ObservableSource<Integer>(){
    @Override public void subscribe(    Observer<? super Integer> observer){
      observer.onSubscribe(Disposables.empty());
      onSubscribed.incrementAndGet();
      sref.set(observer);
    }
  }
).doOnSubscribe(new Consumer<Disposable>(){
    @Override public void accept(    Disposable d){
      countBefore.incrementAndGet();
    }
  }
).publish().refCount().doOnSubscribe(new Consumer<Disposable>(){
    @Override public void accept(    Disposable d){
      countAfter.incrementAndGet();
    }
  }
);
  o.subscribe();
  o.subscribe();
  o.subscribe();
  assertEquals(1,countBefore.get());
  assertEquals(1,onSubscribed.get());
  assertEquals(3,countAfter.get());
  sref.get().onComplete();
  o.subscribe();
  o.subscribe();
  o.subscribe();
  assertEquals(2,countBefore.get());
  assertEquals(2,onSubscribed.get());
  assertEquals(6,countAfter.get());
}
