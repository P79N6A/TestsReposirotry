@Test(timeout=2000) public void backpressureWithBufferDropLatest() throws InterruptedException {
  int bufferSize=3;
  final AtomicInteger droppedCount=new AtomicInteger(0);
  Action incrementOnDrop=new Action(){
    @Override public void run() throws Exception {
      droppedCount.incrementAndGet();
    }
  }
;
  TestSubscriber<Long> ts=createTestSubscriber();
  Flowable.fromPublisher(send500ValuesAndComplete.onBackpressureBuffer(bufferSize,incrementOnDrop,DROP_LATEST)).subscribe(ts);
  ts.request(10);
  ts.awaitTerminalEvent();
  assertEquals(bufferSize,ts.values().size());
  ts.assertNoErrors();
  assertEquals(0,ts.values().get(0).intValue());
  assertEquals(1,ts.values().get(1).intValue());
  assertEquals(499,ts.values().get(2).intValue());
  assertEquals(droppedCount.get(),500 - bufferSize);
}
