/** 
 * This uses the public API collect which uses scan under the covers.
 */
@Test public void testSeedFactory(){
  Observable<List<Integer>> o=Observable.range(1,10).collect(new Callable<List<Integer>>(){
    @Override public List<Integer> call(){
      return new ArrayList<Integer>();
    }
  }
,new BiConsumer<List<Integer>,Integer>(){
    @Override public void accept(    List<Integer> list,    Integer t2){
      list.add(t2);
    }
  }
).toObservable().takeLast(1);
  assertEquals(Arrays.asList(1,2,3,4,5,6,7,8,9,10),o.blockingSingle());
  assertEquals(Arrays.asList(1,2,3,4,5,6,7,8,9,10),o.blockingSingle());
}
