@Test public void testDoOnEachWithErrorInCallback(){
  Observable<String> base=Observable.just("one","two","fail","three");
  Observable<String> doOnEach=base.doOnNext(new Consumer<String>(){
    @Override public void accept(    String s){
      if ("fail".equals(s)) {
        throw new RuntimeException("Forced Failure");
      }
    }
  }
);
  doOnEach.subscribe(subscribedObserver);
  verify(subscribedObserver,times(1)).onNext("one");
  verify(subscribedObserver,times(1)).onNext("two");
  verify(subscribedObserver,never()).onNext("three");
  verify(subscribedObserver,never()).onComplete();
  verify(subscribedObserver,times(1)).onError(any(Throwable.class));
}
