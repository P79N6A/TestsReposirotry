@Test public void switchMapSingleFunctionDoesntReturnSingle(){
  Observable.just(0).switchMapSingle(new Function<Object,SingleSource<Integer>>(){
    @Override public SingleSource<Integer> apply(    Object v) throws Exception {
      return new SingleSource<Integer>(){
        @Override public void subscribe(        SingleObserver<? super Integer> observer){
          observer.onSubscribe(Disposables.empty());
          observer.onSuccess(1);
        }
      }
;
    }
  }
).test().assertResult(1);
}
