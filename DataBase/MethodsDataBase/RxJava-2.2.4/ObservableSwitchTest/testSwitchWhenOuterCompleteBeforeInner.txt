@Test public void testSwitchWhenOuterCompleteBeforeInner(){
  Observable<Observable<String>> source=Observable.unsafeCreate(new ObservableSource<Observable<String>>(){
    @Override public void subscribe(    Observer<? super Observable<String>> outerObserver){
      outerObserver.onSubscribe(Disposables.empty());
      publishNext(outerObserver,50,Observable.unsafeCreate(new ObservableSource<String>(){
        @Override public void subscribe(        Observer<? super String> innerObserver){
          innerObserver.onSubscribe(Disposables.empty());
          publishNext(innerObserver,70,"one");
          publishNext(innerObserver,100,"two");
          publishCompleted(innerObserver,200);
        }
      }
));
      publishCompleted(outerObserver,60);
    }
  }
);
  Observable<String> sampled=Observable.switchOnNext(source);
  sampled.subscribe(observer);
  InOrder inOrder=inOrder(observer);
  scheduler.advanceTimeTo(350,TimeUnit.MILLISECONDS);
  inOrder.verify(observer,times(2)).onNext(anyString());
  inOrder.verify(observer,times(1)).onComplete();
}
