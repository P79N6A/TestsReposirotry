@Test public void testUnsubscribe(){
  final AtomicBoolean isUnsubscribed=new AtomicBoolean();
  Observable.switchOnNext(Observable.unsafeCreate(new ObservableSource<Observable<Integer>>(){
    @Override public void subscribe(    final Observer<? super Observable<Integer>> observer){
      Disposable bs=Disposables.empty();
      observer.onSubscribe(bs);
      observer.onNext(Observable.just(1));
      isUnsubscribed.set(bs.isDisposed());
    }
  }
)).take(1).subscribe();
  assertTrue("Switch doesn't propagate 'unsubscribe'",isUnsubscribed.get());
}
