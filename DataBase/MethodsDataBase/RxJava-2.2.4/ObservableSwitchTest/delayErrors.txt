@Test public void delayErrors(){
  PublishSubject<ObservableSource<Integer>> source=PublishSubject.create();
  TestObserver<Integer> to=source.switchMapDelayError(Functions.<ObservableSource<Integer>>identity()).test();
  to.assertNoValues().assertNoErrors().assertNotComplete();
  source.onNext(Observable.just(1));
  source.onNext(Observable.<Integer>error(new TestException("Forced failure 1")));
  source.onNext(Observable.just(2,3,4));
  source.onNext(Observable.<Integer>error(new TestException("Forced failure 2")));
  source.onNext(Observable.just(5));
  source.onError(new TestException("Forced failure 3"));
  to.assertValues(1,2,3,4,5).assertNotComplete().assertError(CompositeException.class);
  List<Throwable> errors=ExceptionHelper.flatten(to.errors().get(0));
  TestHelper.assertError(errors,0,TestException.class,"Forced failure 1");
  TestHelper.assertError(errors,1,TestException.class,"Forced failure 2");
  TestHelper.assertError(errors,2,TestException.class,"Forced failure 3");
}
