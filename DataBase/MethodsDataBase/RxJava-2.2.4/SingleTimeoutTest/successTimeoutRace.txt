@Test public void successTimeoutRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final SingleSubject<Integer> subj=SingleSubject.create();
    SingleSubject<Integer> fallback=SingleSubject.create();
    final TestScheduler sch=new TestScheduler();
    TestObserver<Integer> to=subj.timeout(1,TimeUnit.MILLISECONDS,sch,fallback).test();
    Runnable r1=new Runnable(){
      @Override public void run(){
        subj.onSuccess(1);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        sch.advanceTimeBy(1,TimeUnit.MILLISECONDS);
      }
    }
;
    TestHelper.race(r1,r2);
    if (!fallback.hasObservers()) {
      to.assertResult(1);
    }
 else {
      to.assertEmpty();
    }
  }
}
