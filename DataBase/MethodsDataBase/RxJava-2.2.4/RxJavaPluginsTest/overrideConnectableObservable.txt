@SuppressWarnings("rawtypes") @Test public void overrideConnectableObservable(){
  try {
    RxJavaPlugins.setOnConnectableObservableAssembly(new Function<ConnectableObservable,ConnectableObservable>(){
      @Override public ConnectableObservable apply(      ConnectableObservable co) throws Exception {
        return new ConnectableObservable(){
          @Override public void connect(          Consumer connection){
          }
          @SuppressWarnings("unchecked") @Override protected void subscribeActual(          Observer observer){
            observer.onSubscribe(Disposables.empty());
            observer.onNext(10);
            observer.onComplete();
          }
        }
;
      }
    }
);
    Observable.just(1).publish().autoConnect().test().assertResult(10);
  }
  finally {
    RxJavaPlugins.reset();
  }
  Observable.just(1).publish().autoConnect().test().assertResult(1);
}
