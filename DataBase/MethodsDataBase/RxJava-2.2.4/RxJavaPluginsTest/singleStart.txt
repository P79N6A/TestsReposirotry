@SuppressWarnings("rawtypes") @Test public void singleStart(){
  try {
    RxJavaPlugins.setOnSingleSubscribe(new BiFunction<Single,SingleObserver,SingleObserver>(){
      @Override public SingleObserver apply(      Single o,      final SingleObserver t){
        return new SingleObserver<Object>(){
          @Override public void onSubscribe(          Disposable d){
            t.onSubscribe(d);
          }
          @SuppressWarnings("unchecked") @Override public void onSuccess(          Object value){
            t.onSuccess(10);
          }
          @Override public void onError(          Throwable e){
            t.onError(e);
          }
        }
;
      }
    }
);
    Single.just(1).test().assertValue(10).assertNoErrors().assertComplete();
  }
  finally {
    RxJavaPlugins.reset();
  }
  Single.just(1).test().assertValue(1).assertNoErrors().assertComplete();
}
