@Test @SuppressWarnings("rawtypes") public void maybeStart(){
  try {
    RxJavaPlugins.setOnMaybeSubscribe(new BiFunction<Maybe,MaybeObserver,MaybeObserver>(){
      @Override public MaybeObserver apply(      Maybe o,      final MaybeObserver t){
        return new MaybeObserver(){
          @Override public void onSubscribe(          Disposable d){
            t.onSubscribe(d);
          }
          @SuppressWarnings("unchecked") @Override public void onSuccess(          Object value){
            t.onSuccess(value);
          }
          @Override public void onError(          Throwable e){
            t.onError(e);
          }
          @Override public void onComplete(){
            t.onError(new TestException());
          }
        }
;
      }
    }
);
    Maybe.empty().test().assertNoValues().assertNotComplete().assertError(TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
  Maybe.empty().test().assertNoValues().assertNoErrors().assertComplete();
}
