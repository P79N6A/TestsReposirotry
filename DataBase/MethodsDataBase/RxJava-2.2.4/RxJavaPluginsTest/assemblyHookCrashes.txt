@SuppressWarnings("rawtypes") @Test public void assemblyHookCrashes(){
  try {
    RxJavaPlugins.setOnFlowableAssembly(new Function<Flowable,Flowable>(){
      @Override public Flowable apply(      Flowable f) throws Exception {
        throw new IllegalArgumentException();
      }
    }
);
    try {
      Flowable.empty();
      fail("Should have thrown!");
    }
 catch (    IllegalArgumentException ex) {
    }
    RxJavaPlugins.setOnFlowableAssembly(new Function<Flowable,Flowable>(){
      @Override public Flowable apply(      Flowable f) throws Exception {
        throw new InternalError();
      }
    }
);
    try {
      Flowable.empty();
      fail("Should have thrown!");
    }
 catch (    InternalError ex) {
    }
    RxJavaPlugins.setOnFlowableAssembly(new Function<Flowable,Flowable>(){
      @Override public Flowable apply(      Flowable f) throws Exception {
        throw new IOException();
      }
    }
);
    try {
      Flowable.empty();
      fail("Should have thrown!");
    }
 catch (    RuntimeException ex) {
      if (!(ex.getCause() instanceof IOException)) {
        fail(ex.getCause().toString() + ": Should have thrown RuntimeException(IOException)");
      }
    }
  }
  finally {
    RxJavaPlugins.reset();
  }
}
