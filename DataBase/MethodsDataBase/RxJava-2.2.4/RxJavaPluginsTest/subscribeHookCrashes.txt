@SuppressWarnings("rawtypes") @Test public void subscribeHookCrashes(){
  try {
    RxJavaPlugins.setOnFlowableSubscribe(new BiFunction<Flowable,Subscriber,Subscriber>(){
      @Override public Subscriber apply(      Flowable f,      Subscriber s) throws Exception {
        throw new IllegalArgumentException();
      }
    }
);
    try {
      Flowable.empty().test();
      fail("Should have thrown!");
    }
 catch (    NullPointerException ex) {
      if (!(ex.getCause() instanceof IllegalArgumentException)) {
        fail(ex.getCause().toString() + ": Should have thrown NullPointerException(IllegalArgumentException)");
      }
    }
    RxJavaPlugins.setOnFlowableSubscribe(new BiFunction<Flowable,Subscriber,Subscriber>(){
      @Override public Subscriber apply(      Flowable f,      Subscriber s) throws Exception {
        throw new InternalError();
      }
    }
);
    try {
      Flowable.empty().test();
      fail("Should have thrown!");
    }
 catch (    InternalError ex) {
    }
    RxJavaPlugins.setOnFlowableSubscribe(new BiFunction<Flowable,Subscriber,Subscriber>(){
      @Override public Subscriber apply(      Flowable f,      Subscriber s) throws Exception {
        throw new IOException();
      }
    }
);
    try {
      Flowable.empty().test();
      fail("Should have thrown!");
    }
 catch (    NullPointerException ex) {
      if (!(ex.getCause() instanceof RuntimeException)) {
        fail(ex.getCause().toString() + ": Should have thrown NullPointerException(RuntimeException(IOException))");
      }
      if (!(ex.getCause().getCause() instanceof IOException)) {
        fail(ex.getCause().toString() + ": Should have thrown NullPointerException(RuntimeException(IOException))");
      }
    }
  }
  finally {
    RxJavaPlugins.reset();
  }
}
