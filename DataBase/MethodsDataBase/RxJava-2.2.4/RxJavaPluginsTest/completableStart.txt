@Test public void completableStart(){
  try {
    RxJavaPlugins.setOnCompletableSubscribe(new BiFunction<Completable,CompletableObserver,CompletableObserver>(){
      @Override public CompletableObserver apply(      Completable o,      final CompletableObserver t){
        return new CompletableObserver(){
          @Override public void onSubscribe(          Disposable d){
            t.onSubscribe(d);
          }
          @Override public void onError(          Throwable e){
            t.onError(e);
          }
          @Override public void onComplete(){
            t.onError(new TestException());
          }
        }
;
      }
    }
);
    Completable.complete().test().assertNoValues().assertNotComplete().assertError(TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
  Completable.complete().test().assertNoValues().assertNoErrors().assertComplete();
}
