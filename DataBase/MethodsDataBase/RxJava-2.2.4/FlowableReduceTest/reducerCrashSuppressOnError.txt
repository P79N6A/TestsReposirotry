@Test public void reducerCrashSuppressOnError(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Flowable.<Integer>fromPublisher(new Publisher<Integer>(){
      @Override public void subscribe(      Subscriber<? super Integer> s){
        s.onSubscribe(new BooleanSubscription());
        s.onNext(1);
        s.onNext(1);
        s.onError(new TestException("Source"));
        s.onComplete();
      }
    }
).reduce(new BiFunction<Integer,Integer,Integer>(){
      @Override public Integer apply(      Integer a,      Integer b) throws Exception {
        throw new TestException("Reducer");
      }
    }
).toFlowable().test().assertFailureAndMessage(TestException.class,"Reducer");
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Source");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
