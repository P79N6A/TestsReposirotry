@Test public void concatVeryLongObservableOfObservables(){
  final int n=10000;
  Observable<Observable<Integer>> source=Observable.range(0,n).map(new Function<Integer,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Integer v){
      return Observable.just(v);
    }
  }
);
  Single<List<Integer>> result=Observable.concat(source).toList();
  SingleObserver<List<Integer>> o=TestHelper.mockSingleObserver();
  InOrder inOrder=inOrder(o);
  result.subscribe(o);
  List<Integer> list=new ArrayList<Integer>(n);
  for (int i=0; i < n; i++) {
    list.add(i);
  }
  inOrder.verify(o).onSuccess(list);
  verify(o,never()).onError(any(Throwable.class));
}
