@Test public void testBlockedObservableOfObservables(){
  Observer<String> observer=TestHelper.mockObserver();
  final String[] o={"1","3","5","7"};
  final String[] e={"2","4","6"};
  final Observable<String> odds=Observable.fromArray(o);
  final Observable<String> even=Observable.fromArray(e);
  final CountDownLatch callOnce=new CountDownLatch(1);
  final CountDownLatch okToContinue=new CountDownLatch(1);
  @SuppressWarnings("unchecked") TestObservable<Observable<String>> observableOfObservables=new TestObservable<Observable<String>>(callOnce,okToContinue,odds,even);
  Observable<String> concatF=Observable.concat(Observable.unsafeCreate(observableOfObservables));
  concatF.subscribe(observer);
  try {
    callOnce.await();
  }
 catch (  Throwable ex) {
    ex.printStackTrace();
    fail(ex.getMessage());
  }
  verify(observer,times(1)).onNext("1");
  verify(observer,times(1)).onNext("3");
  verify(observer,times(1)).onNext("5");
  verify(observer,times(1)).onNext("7");
  try {
    okToContinue.countDown();
    observableOfObservables.t.join();
  }
 catch (  Throwable ex) {
    ex.printStackTrace();
    fail(ex.getMessage());
  }
  verify(observer,times(1)).onNext("2");
  verify(observer,times(1)).onNext("4");
  verify(observer,times(1)).onNext("6");
}
