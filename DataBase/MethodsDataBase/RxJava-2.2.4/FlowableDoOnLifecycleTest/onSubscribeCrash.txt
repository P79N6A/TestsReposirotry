@Test public void onSubscribeCrash(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final BooleanSubscription bs=new BooleanSubscription();
    new Flowable<Integer>(){
      @Override protected void subscribeActual(      Subscriber<? super Integer> s){
        s.onSubscribe(bs);
        s.onError(new TestException("Second"));
        s.onComplete();
      }
    }
.doOnSubscribe(new Consumer<Subscription>(){
      @Override public void accept(      Subscription s) throws Exception {
        throw new TestException("First");
      }
    }
).test().assertFailureAndMessage(TestException.class,"First");
    assertTrue(bs.isCancelled());
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
