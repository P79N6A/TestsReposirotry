@Test public void exactBoundedReentrant(){
  TestScheduler scheduler=new TestScheduler();
  final FlowableProcessor<Integer> ps=PublishProcessor.<Integer>create();
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      if (t == 1) {
        ps.onNext(2);
        ps.onComplete();
      }
    }
  }
;
  ps.window(1,TimeUnit.MILLISECONDS,scheduler,10,true).flatMap(new Function<Flowable<Integer>,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Flowable<Integer> v) throws Exception {
      return v;
    }
  }
).subscribe(ts);
  ps.onNext(1);
  ts.awaitDone(1,TimeUnit.SECONDS).assertResult(1,2);
}
