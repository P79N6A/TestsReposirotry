@Test public void basicWithCancellable(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final Disposable d1=Disposables.empty();
    final Disposable d2=Disposables.empty();
    Completable.create(new CompletableOnSubscribe(){
      @Override public void subscribe(      CompletableEmitter e) throws Exception {
        e.setDisposable(d1);
        e.setCancellable(new Cancellable(){
          @Override public void cancel() throws Exception {
            d2.dispose();
          }
        }
);
        e.onComplete();
        e.onError(new TestException());
        e.onComplete();
      }
    }
).test().assertResult();
    assertTrue(d1.isDisposed());
    assertTrue(d2.isDisposed());
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
