@Test public void errorAndDisposerThrowsEager(){
  TestObserver<Integer> to=Single.using(Functions.justCallable(Disposables.empty()),new Function<Disposable,SingleSource<Integer>>(){
    @Override public SingleSource<Integer> apply(    Disposable v) throws Exception {
      return Single.<Integer>error(new TestException("Mapper-run"));
    }
  }
,disposerThrows).test().assertFailure(CompositeException.class);
  List<Throwable> ce=TestHelper.compositeList(to.errors().get(0));
  TestHelper.assertError(ce,0,TestException.class,"Mapper-run");
  TestHelper.assertError(ce,1,TestException.class,"Disposer");
}
