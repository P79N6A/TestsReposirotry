@Test public void asIntermediate(){
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  int n=1000 * 1000;
  Flowable.range(1,n).concatMapIterable(mapper).concatMap(new Function<Integer,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Integer v){
      return Flowable.just(v);
    }
  }
).subscribe(ts);
  ts.assertValueCount(n * 2);
  ts.assertNoErrors();
  ts.assertComplete();
}
