@Test public void onErrorLate(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
    FlattenIterableSubscriber<Integer,Integer> f=new FlattenIterableSubscriber<Integer,Integer>(ts,Functions.justFunction(Collections.<Integer>emptyList()),128);
    f.onSubscribe(new BooleanSubscription());
    f.onError(new TestException("first"));
    ts.assertFailureAndMessage(TestException.class,"first");
    assertTrue(errors.isEmpty());
    f.done=false;
    f.onError(new TestException("second"));
    TestHelper.assertUndeliverable(errors,0,TestException.class,"second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
