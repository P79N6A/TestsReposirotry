@Test public void testSwitchWhenNotEmpty() throws Exception {
  final AtomicBoolean subscribed=new AtomicBoolean(false);
  final Flowable<Integer> flowable=Flowable.just(4).switchIfEmpty(Flowable.just(2).doOnSubscribe(new Consumer<Subscription>(){
    @Override public void accept(    Subscription s){
      subscribed.set(true);
    }
  }
));
  assertEquals(4,flowable.blockingSingle().intValue());
  assertFalse(subscribed.get());
}
