/** 
 * Issue #3425. The problem is that a request of 1 may create a new group, emit to the desired group or emit to a completely different group. In this test, the merge requests N which must be produced by the range, however it will create a bunch of groups before the actual group receives a value.
 */
@Test public void testBackpressureObserveOnOuter(){
  for (int j=0; j < 1000; j++) {
    Flowable.merge(Flowable.range(0,500).groupBy(new Function<Integer,Object>(){
      @Override public Object apply(      Integer i){
        return i % (Flowable.bufferSize() + 2);
      }
    }
).observeOn(Schedulers.computation())).blockingLast();
  }
}
