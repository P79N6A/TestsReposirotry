@Test public void testGroupByUnsubscribe(){
  final Subscription s=mock(Subscription.class);
  Flowable<Integer> f=Flowable.unsafeCreate(new Publisher<Integer>(){
    @Override public void subscribe(    Subscriber<? super Integer> subscriber){
      subscriber.onSubscribe(s);
    }
  }
);
  TestSubscriber<Object> ts=new TestSubscriber<Object>();
  f.groupBy(new Function<Integer,Integer>(){
    @Override public Integer apply(    Integer integer){
      return null;
    }
  }
).subscribe(ts);
  ts.dispose();
  verify(s).cancel();
}
