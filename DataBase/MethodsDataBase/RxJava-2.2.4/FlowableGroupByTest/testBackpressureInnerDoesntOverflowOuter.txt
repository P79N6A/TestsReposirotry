/** 
 * Synchronous verification of issue #3425.
 */
@Test public void testBackpressureInnerDoesntOverflowOuter(){
  TestSubscriber<GroupedFlowable<Integer,Integer>> ts=new TestSubscriber<GroupedFlowable<Integer,Integer>>(0L);
  Flowable.fromArray(1,2).groupBy(new Function<Integer,Integer>(){
    @Override public Integer apply(    Integer v){
      return v;
    }
  }
).doOnNext(new Consumer<GroupedFlowable<Integer,Integer>>(){
    @Override public void accept(    GroupedFlowable<Integer,Integer> g){
      g.subscribe();
    }
  }
).subscribe(ts);
  ts.request(1);
  ts.assertNotComplete();
  ts.assertNoErrors();
  ts.assertValueCount(1);
}
