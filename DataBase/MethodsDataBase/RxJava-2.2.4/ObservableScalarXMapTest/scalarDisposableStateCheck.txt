@Test public void scalarDisposableStateCheck(){
  TestObserver<Integer> to=new TestObserver<Integer>();
  ScalarDisposable<Integer> sd=new ScalarDisposable<Integer>(to,1);
  to.onSubscribe(sd);
  assertFalse(sd.isDisposed());
  assertTrue(sd.isEmpty());
  sd.run();
  assertTrue(sd.isDisposed());
  assertTrue(sd.isEmpty());
  to.assertResult(1);
  try {
    sd.offer(1);
    fail("Should have thrown");
  }
 catch (  UnsupportedOperationException ex) {
  }
  try {
    sd.offer(1,2);
    fail("Should have thrown");
  }
 catch (  UnsupportedOperationException ex) {
  }
}
