@Test public void testUnsubscribeTakesEffectEarlyOnFastPath(){
  final AtomicInteger count=new AtomicInteger();
  Flowable.range(0,100000).takeLast(100000).subscribe(new DefaultSubscriber<Integer>(){
    @Override public void onStart(){
      request(Long.MAX_VALUE);
    }
    @Override public void onComplete(){
    }
    @Override public void onError(    Throwable e){
    }
    @Override public void onNext(    Integer integer){
      count.incrementAndGet();
      cancel();
    }
  }
);
  assertEquals(1,count.get());
}
