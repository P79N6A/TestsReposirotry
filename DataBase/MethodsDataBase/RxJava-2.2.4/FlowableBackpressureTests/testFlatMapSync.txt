@Test public void testFlatMapSync(){
  int num=(int)(Flowable.bufferSize() * 2.1);
  AtomicInteger c=new AtomicInteger();
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  incrementingIntegers(c).flatMap(new Function<Integer,Publisher<Integer>>(){
    @Override public Publisher<Integer> apply(    Integer i){
      return incrementingIntegers(new AtomicInteger()).take(10);
    }
  }
).take(num).subscribe(ts);
  ts.awaitTerminalEvent();
  ts.assertNoErrors();
  System.out.println("testFlatMapSync => Received: " + ts.valueCount() + "  Emitted: "+ c.get());
  assertEquals(num,ts.valueCount());
  assertTrue(c.get() < Flowable.bufferSize());
}
