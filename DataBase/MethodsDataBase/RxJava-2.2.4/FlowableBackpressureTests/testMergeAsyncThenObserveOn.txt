@Test public void testMergeAsyncThenObserveOn(){
  int num=(int)(Flowable.bufferSize() * 4.1);
  AtomicInteger c1=new AtomicInteger();
  AtomicInteger c2=new AtomicInteger();
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable<Integer> merged=Flowable.merge(incrementingIntegers(c1).subscribeOn(Schedulers.computation()),incrementingIntegers(c2).subscribeOn(Schedulers.computation()));
  merged.observeOn(Schedulers.newThread()).take(num).subscribe(ts);
  ts.awaitTerminalEvent();
  ts.assertNoErrors();
  System.out.println("testMergeAsyncThenObserveOn => Received: " + ts.valueCount() + "  Emitted: "+ c1.get()+ " / "+ c2.get());
  assertEquals(num,ts.valueCount());
  assertTrue(c1.get() < Flowable.bufferSize() * 7);
  assertTrue(c2.get() < Flowable.bufferSize() * 7);
}
