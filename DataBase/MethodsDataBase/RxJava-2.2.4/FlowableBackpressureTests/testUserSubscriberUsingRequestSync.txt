@Test public void testUserSubscriberUsingRequestSync(){
  AtomicInteger c=new AtomicInteger();
  final AtomicInteger totalReceived=new AtomicInteger();
  final AtomicInteger batches=new AtomicInteger();
  final AtomicInteger received=new AtomicInteger();
  incrementingIntegers(c).subscribe(new ResourceSubscriber<Integer>(){
    @Override public void onStart(){
      request(100);
    }
    @Override public void onComplete(){
    }
    @Override public void onError(    Throwable e){
    }
    @Override public void onNext(    Integer t){
      int total=totalReceived.incrementAndGet();
      received.incrementAndGet();
      if (total >= 2000) {
        dispose();
      }
      if (received.get() == 100) {
        batches.incrementAndGet();
        request(100);
        received.set(0);
      }
    }
  }
);
  System.out.println("testUserSubscriberUsingRequestSync => Received: " + totalReceived.get() + "  Emitted: "+ c.get()+ " Request Batches: "+ batches.get());
  assertEquals(2000,c.get());
  assertEquals(2000,totalReceived.get());
  assertEquals(20,batches.get());
}
