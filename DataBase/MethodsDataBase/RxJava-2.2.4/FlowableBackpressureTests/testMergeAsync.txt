@Test public void testMergeAsync(){
  int num=(int)(Flowable.bufferSize() * 4.1);
  AtomicInteger c1=new AtomicInteger();
  AtomicInteger c2=new AtomicInteger();
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable<Integer> merged=Flowable.merge(incrementingIntegers(c1).subscribeOn(Schedulers.computation()),incrementingIntegers(c2).subscribeOn(Schedulers.computation()));
  merged.take(num).subscribe(ts);
  ts.awaitTerminalEvent();
  ts.assertNoErrors();
  System.out.println("testMergeAsync => Received: " + ts.valueCount() + "  Emitted: "+ c1.get()+ " / "+ c2.get());
  assertEquals(num,ts.valueCount());
  int max=Flowable.bufferSize() * 7;
  assertTrue("" + c1.get() + " >= "+ max,c1.get() < max);
  assertTrue("" + c2.get() + " >= "+ max,c2.get() < max);
}
