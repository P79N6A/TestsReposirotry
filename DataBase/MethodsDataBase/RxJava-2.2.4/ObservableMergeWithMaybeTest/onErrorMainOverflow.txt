@Test public void onErrorMainOverflow(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final AtomicReference<Observer<?>> observerRef=new AtomicReference<Observer<?>>();
    TestObserver<Integer> to=new Observable<Integer>(){
      @Override protected void subscribeActual(      Observer<? super Integer> observer){
        observer.onSubscribe(Disposables.empty());
        observerRef.set(observer);
      }
    }
.mergeWith(Maybe.<Integer>error(new IOException())).test();
    observerRef.get().onError(new TestException());
    to.assertFailure(IOException.class);
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
