@Test public void testMaterialize2(){
  final TestAsyncErrorObservable o1=new TestAsyncErrorObservable("one","two","three");
  TestNotificationSubscriber subscriber=new TestNotificationSubscriber();
  Flowable<Notification<String>> m=Flowable.unsafeCreate(o1).materialize();
  m.subscribe(subscriber);
  try {
    o1.t.join();
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
  assertFalse(subscriber.onError);
  assertTrue(subscriber.onComplete);
  assertEquals(4,subscriber.notifications.size());
  assertTrue(subscriber.notifications.get(0).isOnNext());
  assertEquals("one",subscriber.notifications.get(0).getValue());
  assertTrue(subscriber.notifications.get(1).isOnNext());
  assertEquals("two",subscriber.notifications.get(1).getValue());
  assertTrue(subscriber.notifications.get(2).isOnNext());
  assertEquals("three",subscriber.notifications.get(2).getValue());
  assertTrue(subscriber.notifications.get(3).isOnComplete());
}
