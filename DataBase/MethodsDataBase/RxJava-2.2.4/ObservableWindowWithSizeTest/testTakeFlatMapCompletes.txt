@Test public void testTakeFlatMapCompletes(){
  TestObserver<Integer> to=new TestObserver<Integer>();
  final int indicator=999999999;
  hotStream().window(10).take(2).flatMap(new Function<Observable<Integer>,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Observable<Integer> w){
      return w.startWith(indicator);
    }
  }
).subscribe(to);
  to.awaitTerminalEvent(2,TimeUnit.SECONDS);
  to.assertComplete();
  to.assertValueCount(22);
}
