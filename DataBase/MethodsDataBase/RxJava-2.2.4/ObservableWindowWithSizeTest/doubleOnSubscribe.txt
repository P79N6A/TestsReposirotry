@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeObservable(new Function<Observable<Object>,ObservableSource<Observable<Object>>>(){
    @Override public ObservableSource<Observable<Object>> apply(    Observable<Object> o) throws Exception {
      return o.window(1);
    }
  }
);
  TestHelper.checkDoubleOnSubscribeObservable(new Function<Observable<Object>,ObservableSource<Observable<Object>>>(){
    @Override public ObservableSource<Observable<Object>> apply(    Observable<Object> o) throws Exception {
      return o.window(2,1);
    }
  }
);
  TestHelper.checkDoubleOnSubscribeObservable(new Function<Observable<Object>,ObservableSource<Observable<Object>>>(){
    @Override public ObservableSource<Observable<Object>> apply(    Observable<Object> o) throws Exception {
      return o.window(1,2);
    }
  }
);
}
