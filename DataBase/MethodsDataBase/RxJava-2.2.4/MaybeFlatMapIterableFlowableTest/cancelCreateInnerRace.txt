@Test public void cancelCreateInnerRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final PublishSubject<Integer> ps=PublishSubject.create();
    ps.onNext(1);
    final TestSubscriber<Integer> ts=ps.singleElement().flattenAsFlowable(new Function<Integer,Iterable<Integer>>(){
      @Override public Iterable<Integer> apply(      Integer v) throws Exception {
        return Arrays.asList(1,2,3);
      }
    }
).test(0L);
    Runnable r1=new Runnable(){
      @Override public void run(){
        ps.onComplete();
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        ts.cancel();
      }
    }
;
    TestHelper.race(r1,r2);
  }
}
