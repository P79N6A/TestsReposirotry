@Test public void testAsync(){
  TestSubscriber<String> ts=new TestSubscriber<String>();
  Single.just("Hello").subscribeOn(Schedulers.io()).map(new Function<String,String>(){
    @Override public String apply(    String v){
      System.out.println("SubscribeOn Thread: " + Thread.currentThread());
      return v;
    }
  }
).observeOn(Schedulers.computation()).map(new Function<String,String>(){
    @Override public String apply(    String v){
      System.out.println("ObserveOn Thread: " + Thread.currentThread());
      return v;
    }
  }
).toFlowable().subscribe(ts);
  ts.awaitTerminalEvent();
  ts.assertValueSequence(Arrays.asList("Hello"));
}
