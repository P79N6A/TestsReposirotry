@Test public void testFlatMap(){
  TestSubscriber<String> ts=new TestSubscriber<String>();
  Single.just("Hello").flatMap(new Function<String,Single<String>>(){
    @Override public Single<String> apply(    String s){
      return Single.just(s + " World!").subscribeOn(Schedulers.computation());
    }
  }
).toFlowable().subscribe(ts);
  if (!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)) {
    ts.cancel();
    Assert.fail("TestSubscriber timed out.");
  }
  ts.assertValueSequence(Arrays.asList("Hello World!"));
}
