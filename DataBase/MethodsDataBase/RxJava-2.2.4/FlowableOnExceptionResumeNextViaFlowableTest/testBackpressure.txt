@Test public void testBackpressure(){
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable.range(0,100000).onExceptionResumeNext(Flowable.just(1)).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){
    int c;
    @Override public Integer apply(    Integer t1){
      if (c++ <= 1) {
        try {
          Thread.sleep(500);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
      return t1;
    }
  }
).subscribe(ts);
  ts.awaitTerminalEvent();
  ts.assertNoErrors();
}
