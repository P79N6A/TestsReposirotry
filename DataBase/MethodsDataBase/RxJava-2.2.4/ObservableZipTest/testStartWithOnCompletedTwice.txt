@Test public void testStartWithOnCompletedTwice(){
  final Observer<Integer> observer=TestHelper.mockObserver();
  Observable.zip(Observable.just(1),Observable.just(1),new BiFunction<Integer,Integer,Integer>(){
    @Override public Integer apply(    Integer a,    Integer b){
      return a + b;
    }
  }
).subscribe(new DefaultObserver<Integer>(){
    @Override public void onComplete(){
      observer.onComplete();
    }
    @Override public void onError(    Throwable e){
      observer.onError(e);
    }
    @Override public void onNext(    Integer args){
      observer.onNext(args);
    }
  }
);
  InOrder inOrder=inOrder(observer);
  inOrder.verify(observer,times(1)).onNext(2);
  inOrder.verify(observer,times(1)).onComplete();
  inOrder.verifyNoMoreInteractions();
}
