@Test public void testOnErrorTermination(){
  PublishSubject<String> oA=PublishSubject.create();
  PublishSubject<String> oB=PublishSubject.create();
  Observer<String> obs=TestHelper.mockObserver();
  Observable<String> o=Observable.zip(oA,oB,getConcat2Strings());
  o.subscribe(obs);
  InOrder io=inOrder(obs);
  oA.onNext("a1");
  io.verify(obs,never()).onNext(anyString());
  oB.onNext("b1");
  io.verify(obs,times(1)).onNext("a1-b1");
  oB.onNext("b2");
  io.verify(obs,never()).onNext(anyString());
  oA.onNext("a2");
  io.verify(obs,times(1)).onNext("a2-b2");
  oA.onNext("a3");
  oA.onNext("a4");
  oA.onNext("a5");
  oA.onError(new RuntimeException("forced failure"));
  io.verify(obs,times(1)).onError(any(RuntimeException.class));
  oB.onNext("b3");
  oB.onNext("b4");
  oB.onNext("b5");
  oB.onNext("b6");
  oB.onNext("b7");
  oB.onNext("b8");
  oB.onNext("b9");
  io.verifyNoMoreInteractions();
}
