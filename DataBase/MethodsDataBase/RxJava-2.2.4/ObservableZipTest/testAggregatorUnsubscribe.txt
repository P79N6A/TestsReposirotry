@Test public void testAggregatorUnsubscribe(){
  PublishSubject<String> r1=PublishSubject.create();
  PublishSubject<String> r2=PublishSubject.create();
  Observer<String> observer=TestHelper.mockObserver();
  TestObserver<String> to=new TestObserver<String>(observer);
  Observable.zip(r1,r2,zipr2).subscribe(to);
  r1.onNext("hello");
  r2.onNext("world");
  verify(observer,never()).onError(any(Throwable.class));
  verify(observer,never()).onComplete();
  verify(observer,times(1)).onNext("helloworld");
  to.dispose();
  r1.onNext("hello");
  r2.onNext("again");
  verify(observer,times(0)).onError(any(Throwable.class));
  verify(observer,never()).onComplete();
  verify(observer,times(0)).onNext("helloagain");
}
