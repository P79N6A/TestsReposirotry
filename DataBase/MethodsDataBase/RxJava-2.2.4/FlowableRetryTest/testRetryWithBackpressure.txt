@Test public void testRetryWithBackpressure() throws InterruptedException {
  final int NUM_LOOPS=1;
  for (int j=0; j < NUM_LOOPS; j++) {
    final int numRetries=Flowable.bufferSize() * 2;
    for (int i=0; i < 400; i++) {
      Subscriber<String> subscriber=TestHelper.mockSubscriber();
      Flowable<String> origin=Flowable.unsafeCreate(new FuncWithErrors(numRetries));
      TestSubscriber<String> ts=new TestSubscriber<String>(subscriber);
      origin.retry().observeOn(Schedulers.computation()).subscribe(ts);
      ts.awaitTerminalEvent(5,TimeUnit.SECONDS);
      InOrder inOrder=inOrder(subscriber);
      verify(subscriber,never()).onError(any(Throwable.class));
      inOrder.verify(subscriber,times(numRetries + 1)).onNext("beginningEveryTime");
      inOrder.verify(subscriber,times(1)).onNext("onSuccessOnly");
      inOrder.verify(subscriber,times(1)).onComplete();
      inOrder.verifyNoMoreInteractions();
    }
  }
}
