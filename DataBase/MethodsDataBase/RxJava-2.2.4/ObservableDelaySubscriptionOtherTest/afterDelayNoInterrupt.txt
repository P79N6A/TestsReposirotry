@Test public void afterDelayNoInterrupt(){
  ScheduledExecutorService exec=Executors.newSingleThreadScheduledExecutor();
  try {
    for (    Scheduler s : new Scheduler[]{Schedulers.single(),Schedulers.computation(),Schedulers.newThread(),Schedulers.io(),Schedulers.from(exec)}) {
      final TestObserver<Boolean> observer=TestObserver.create();
      observer.withTag(s.getClass().getSimpleName());
      Observable.<Boolean>create(new ObservableOnSubscribe<Boolean>(){
        @Override public void subscribe(        ObservableEmitter<Boolean> emitter) throws Exception {
          emitter.onNext(Thread.interrupted());
          emitter.onComplete();
        }
      }
).delaySubscription(100,TimeUnit.MILLISECONDS,s).subscribe(observer);
      observer.awaitTerminalEvent();
      observer.assertValue(false);
    }
  }
  finally {
    exec.shutdown();
  }
}
