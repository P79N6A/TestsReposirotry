@Test public void testCollectToList(){
  Single<List<Integer>> o=Observable.just(1,2,3).collect(new Callable<List<Integer>>(){
    @Override public List<Integer> call(){
      return new ArrayList<Integer>();
    }
  }
,new BiConsumer<List<Integer>,Integer>(){
    @Override public void accept(    List<Integer> list,    Integer v){
      list.add(v);
    }
  }
);
  List<Integer> list=o.blockingGet();
  assertEquals(3,list.size());
  assertEquals(1,list.get(0).intValue());
  assertEquals(2,list.get(1).intValue());
  assertEquals(3,list.get(2).intValue());
  List<Integer> list2=o.blockingGet();
  assertEquals(3,list2.size());
  assertEquals(1,list2.get(0).intValue());
  assertEquals(2,list2.get(1).intValue());
  assertEquals(3,list2.get(2).intValue());
}
