@Test public void dispose(){
  TestHelper.checkDisposed(Observable.range(1,3).collect(new Callable<List<Integer>>(){
    @Override public List<Integer> call() throws Exception {
      return new ArrayList<Integer>();
    }
  }
,new BiConsumer<List<Integer>,Integer>(){
    @Override public void accept(    List<Integer> a,    Integer b) throws Exception {
      a.add(b);
    }
  }
));
  TestHelper.checkDisposed(Observable.range(1,3).collect(new Callable<List<Integer>>(){
    @Override public List<Integer> call() throws Exception {
      return new ArrayList<Integer>();
    }
  }
,new BiConsumer<List<Integer>,Integer>(){
    @Override public void accept(    List<Integer> a,    Integer b) throws Exception {
      a.add(b);
    }
  }
).toObservable());
}
