@Test public void badSource(){
  TestHelper.checkBadSourceObservable(new Function<Observable<Integer>,Object>(){
    @Override public Object apply(    Observable<Integer> o) throws Exception {
      return o.collect(new Callable<List<Integer>>(){
        @Override public List<Integer> call() throws Exception {
          return new ArrayList<Integer>();
        }
      }
,new BiConsumer<List<Integer>,Integer>(){
        @Override public void accept(        List<Integer> a,        Integer b) throws Exception {
          a.add(b);
        }
      }
).toObservable();
    }
  }
,false,1,2,Arrays.asList(1));
}
