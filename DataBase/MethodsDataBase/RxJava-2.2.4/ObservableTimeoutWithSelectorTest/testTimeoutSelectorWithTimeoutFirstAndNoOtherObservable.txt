@Test public void testTimeoutSelectorWithTimeoutFirstAndNoOtherObservable(){
  PublishSubject<Integer> source=PublishSubject.create();
  final PublishSubject<Integer> timeout=PublishSubject.create();
  Function<Integer,Observable<Integer>> timeoutFunc=new Function<Integer,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Integer t1){
      return timeout;
    }
  }
;
  Observer<Object> o=TestHelper.mockObserver();
  source.timeout(PublishSubject.create(),timeoutFunc).subscribe(o);
  source.onNext(1);
  timeout.onNext(1);
  InOrder inOrder=inOrder(o);
  inOrder.verify(o).onNext(1);
  inOrder.verify(o).onError(isA(TimeoutException.class));
  inOrder.verifyNoMoreInteractions();
}
