@Test public void badInnerSource(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    PublishSubject<Integer> ps=PublishSubject.create();
    TestObserver<Integer> to=ps.timeout(Functions.justFunction(new Observable<Integer>(){
      @Override protected void subscribeActual(      Observer<? super Integer> observer){
        observer.onSubscribe(Disposables.empty());
        observer.onError(new TestException("First"));
        observer.onNext(2);
        observer.onError(new TestException("Second"));
        observer.onComplete();
      }
    }
)).test();
    ps.onNext(1);
    to.assertFailureAndMessage(TestException.class,"First",1);
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
