@Test public void testDebounceWithCompleted(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      publishNext(subscriber,100,"one");
      publishNext(subscriber,400,"two");
      publishNext(subscriber,900,"three");
      publishCompleted(subscriber,1000);
    }
  }
);
  Flowable<String> sampled=source.debounce(400,TimeUnit.MILLISECONDS,scheduler);
  sampled.subscribe(Subscriber);
  scheduler.advanceTimeTo(0,TimeUnit.MILLISECONDS);
  InOrder inOrder=inOrder(Subscriber);
  scheduler.advanceTimeTo(800,TimeUnit.MILLISECONDS);
  inOrder.verify(Subscriber,times(1)).onNext("two");
  scheduler.advanceTimeTo(1000,TimeUnit.MILLISECONDS);
  inOrder.verify(Subscriber,times(1)).onComplete();
  inOrder.verifyNoMoreInteractions();
}
