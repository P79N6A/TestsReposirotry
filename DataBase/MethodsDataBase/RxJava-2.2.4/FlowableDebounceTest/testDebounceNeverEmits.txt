@Test public void testDebounceNeverEmits(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      publishNext(subscriber,100,"a");
      publishNext(subscriber,200,"b");
      publishNext(subscriber,300,"c");
      publishNext(subscriber,400,"d");
      publishNext(subscriber,500,"e");
      publishNext(subscriber,600,"f");
      publishNext(subscriber,700,"g");
      publishNext(subscriber,800,"h");
      publishCompleted(subscriber,900);
    }
  }
);
  Flowable<String> sampled=source.debounce(200,TimeUnit.MILLISECONDS,scheduler);
  sampled.subscribe(Subscriber);
  scheduler.advanceTimeTo(0,TimeUnit.MILLISECONDS);
  InOrder inOrder=inOrder(Subscriber);
  inOrder.verify(Subscriber,times(0)).onNext(anyString());
  scheduler.advanceTimeTo(1000,TimeUnit.MILLISECONDS);
  inOrder.verify(Subscriber,times(1)).onComplete();
  inOrder.verifyNoMoreInteractions();
}
