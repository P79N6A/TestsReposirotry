@Test public void disposeInOnNext(){
  final TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  BehaviorProcessor.createDefault(1).debounce(new Function<Integer,Flowable<Object>>(){
    @Override public Flowable<Object> apply(    Integer o) throws Exception {
      ts.cancel();
      return Flowable.never();
    }
  }
).subscribeWith(ts).assertEmpty();
  assertTrue(ts.isDisposed());
}
