@Test(timeout=2000) @Ignore("PublishProcessor no longer emits without requests so this test fails due to the race of onComplete and request") public void testAsyncRequested(){
  Scheduler.Worker w=Schedulers.newThread().createWorker();
  try {
    for (int i=0; i < 1000; i++) {
      if (i % 50 == 0) {
        System.out.println("testAsyncRequested -> " + i);
      }
      PublishProcessor<Integer> source=PublishProcessor.create();
      Single<List<Integer>> sorted=source.toSortedList();
      final CyclicBarrier cb=new CyclicBarrier(2);
      final TestObserver<List<Integer>> to=new TestObserver<List<Integer>>();
      sorted.subscribe(to);
      w.schedule(new Runnable(){
        @Override public void run(){
          await(cb);
        }
      }
);
      source.onNext(1);
      await(cb);
      source.onComplete();
      to.awaitTerminalEvent(1,TimeUnit.SECONDS);
      to.assertTerminated();
      to.assertNoErrors();
      to.assertValue(Arrays.asList(1));
    }
  }
  finally {
    w.dispose();
  }
}
