@Test public void testThrottlingWithCompleted(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      publishNext(subscriber,100,"one");
      publishNext(subscriber,300,"two");
      publishNext(subscriber,900,"three");
      publishNext(subscriber,905,"four");
      publishCompleted(subscriber,1000);
    }
  }
);
  Flowable<String> sampled=source.throttleFirst(400,TimeUnit.MILLISECONDS,scheduler);
  sampled.subscribe(subscriber);
  InOrder inOrder=inOrder(subscriber);
  scheduler.advanceTimeTo(1000,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,times(1)).onNext("one");
  inOrder.verify(subscriber,times(0)).onNext("two");
  inOrder.verify(subscriber,times(1)).onNext("three");
  inOrder.verify(subscriber,times(0)).onNext("four");
  inOrder.verify(subscriber,times(1)).onComplete();
  inOrder.verifyNoMoreInteractions();
}
