@Test public void testThrottlingWithError(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      Exception error=new TestException();
      publishNext(subscriber,100,"one");
      publishNext(subscriber,200,"two");
      publishError(subscriber,300,error);
    }
  }
);
  Flowable<String> sampled=source.throttleFirst(400,TimeUnit.MILLISECONDS,scheduler);
  sampled.subscribe(subscriber);
  InOrder inOrder=inOrder(subscriber);
  scheduler.advanceTimeTo(400,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber).onNext("one");
  inOrder.verify(subscriber).onError(any(TestException.class));
  inOrder.verifyNoMoreInteractions();
}
