@Test public void onErrorMainOverflow(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final AtomicReference<Subscriber<?>> subscriber=new AtomicReference<Subscriber<?>>();
    TestSubscriber<Integer> ts=new Flowable<Integer>(){
      @Override protected void subscribeActual(      Subscriber<? super Integer> s){
        s.onSubscribe(new BooleanSubscription());
        subscriber.set(s);
      }
    }
.mergeWith(Maybe.<Integer>error(new IOException())).test();
    subscriber.get().onError(new TestException());
    ts.assertFailure(IOException.class);
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
