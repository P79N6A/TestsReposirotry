@Test public void mapFilterFusedHidden(){
  TestSubscriber<Integer> ts=SubscriberFusion.newTest(QueueFuseable.ANY);
  Flowable.range(1,2).hide().map(new Function<Integer,Integer>(){
    @Override public Integer apply(    Integer v) throws Exception {
      return v + 1;
    }
  }
).filter(new Predicate<Integer>(){
    @Override public boolean test(    Integer v) throws Exception {
      return true;
    }
  }
).subscribe(ts);
  ts.assertOf(SubscriberFusion.<Integer>assertFuseable()).assertOf(SubscriberFusion.<Integer>assertFusionMode(QueueFuseable.NONE)).assertResult(2,3);
}
