@Test public void testMapMany2(){
  Map<String,String> m1=getMap("One");
  Map<String,String> m2=getMap("Two");
  Flowable<Map<String,String>> flowable1=Flowable.just(m1,m2);
  Map<String,String> m3=getMap("Three");
  Map<String,String> m4=getMap("Four");
  Flowable<Map<String,String>> flowable2=Flowable.just(m3,m4);
  Flowable<Flowable<Map<String,String>>> f=Flowable.just(flowable1,flowable2);
  Flowable<String> m=f.flatMap(new Function<Flowable<Map<String,String>>,Flowable<String>>(){
    @Override public Flowable<String> apply(    Flowable<Map<String,String>> f){
      return f.map(new Function<Map<String,String>,String>(){
        @Override public String apply(        Map<String,String> map){
          return map.get("firstName");
        }
      }
);
    }
  }
);
  m.subscribe(stringSubscriber);
  verify(stringSubscriber,never()).onError(any(Throwable.class));
  verify(stringSubscriber,times(1)).onNext("OneFirst");
  verify(stringSubscriber,times(1)).onNext("TwoFirst");
  verify(stringSubscriber,times(1)).onNext("ThreeFirst");
  verify(stringSubscriber,times(1)).onNext("FourFirst");
  verify(stringSubscriber,times(1)).onComplete();
}
