@Test public void scalarDisposableStateCheck(){
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  ScalarSubscription<Integer> sd=new ScalarSubscription<Integer>(ts,1);
  ts.onSubscribe(sd);
  assertFalse(sd.isCancelled());
  assertTrue(sd.isEmpty());
  sd.request(1);
  assertFalse(sd.isCancelled());
  assertTrue(sd.isEmpty());
  ts.assertResult(1);
  try {
    sd.offer(1);
    fail("Should have thrown");
  }
 catch (  UnsupportedOperationException ex) {
  }
  try {
    sd.offer(1,2);
    fail("Should have thrown");
  }
 catch (  UnsupportedOperationException ex) {
  }
}
