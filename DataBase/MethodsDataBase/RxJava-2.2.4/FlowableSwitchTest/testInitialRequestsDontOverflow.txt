@Test(timeout=10000) public void testInitialRequestsDontOverflow(){
  TestSubscriber<Long> ts=new TestSubscriber<Long>(0L);
  Flowable.switchOnNext(Flowable.interval(100,TimeUnit.MILLISECONDS).map(new Function<Long,Flowable<Long>>(){
    @Override public Flowable<Long> apply(    Long t){
      return Flowable.fromIterable(Arrays.asList(1L,2L,3L)).hide();
    }
  }
).take(3)).subscribe(ts);
  ts.request(Long.MAX_VALUE - 1);
  ts.request(2);
  ts.awaitTerminalEvent();
  assertTrue(ts.valueCount() > 0);
}
