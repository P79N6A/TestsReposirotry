@Test(timeout=10000) @Ignore("Request pattern changed and I can't decide if this is okay or not") public void testSecondaryRequestsAdditivelyAreMoreThanLongMaxValueInducesMaxValueRequestFromUpstream() throws InterruptedException {
  final List<Long> requests=new CopyOnWriteArrayList<Long>();
  TestSubscriber<Long> ts=new TestSubscriber<Long>(1L);
  Flowable.switchOnNext(Flowable.interval(100,TimeUnit.MILLISECONDS).map(new Function<Long,Flowable<Long>>(){
    @Override public Flowable<Long> apply(    Long t){
      return Flowable.fromIterable(Arrays.asList(1L,2L,3L)).doOnRequest(new LongConsumer(){
        @Override public void accept(        long v){
          requests.add(v);
        }
      }
);
    }
  }
).take(3)).subscribe(ts);
  Thread.sleep(250);
  ts.request(Long.MAX_VALUE - 1);
  ts.request(Long.MAX_VALUE - 1);
  ts.awaitTerminalEvent();
  assertTrue(ts.valueCount() > 0);
  System.out.println(requests);
  assertEquals(5,requests.size());
  assertEquals(Long.MAX_VALUE,(long)requests.get(requests.size() - 1));
}
