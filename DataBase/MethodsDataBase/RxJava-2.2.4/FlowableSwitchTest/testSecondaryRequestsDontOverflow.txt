@Test(timeout=10000) public void testSecondaryRequestsDontOverflow() throws InterruptedException {
  TestSubscriber<Long> ts=new TestSubscriber<Long>(0L);
  Flowable.switchOnNext(Flowable.interval(100,TimeUnit.MILLISECONDS).map(new Function<Long,Flowable<Long>>(){
    @Override public Flowable<Long> apply(    Long t){
      return Flowable.fromIterable(Arrays.asList(1L,2L,3L)).hide();
    }
  }
).take(3)).subscribe(ts);
  ts.request(1);
  Thread.sleep(250);
  ts.request(Long.MAX_VALUE - 1);
  ts.request(Long.MAX_VALUE - 1);
  ts.awaitTerminalEvent();
  ts.assertValueCount(7);
}
