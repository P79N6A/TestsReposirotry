@Test public void testUnsubscribe(){
  final AtomicBoolean isUnsubscribed=new AtomicBoolean();
  Flowable.switchOnNext(Flowable.unsafeCreate(new Publisher<Flowable<Integer>>(){
    @Override public void subscribe(    final Subscriber<? super Flowable<Integer>> subscriber){
      BooleanSubscription bs=new BooleanSubscription();
      subscriber.onSubscribe(bs);
      subscriber.onNext(Flowable.just(1));
      isUnsubscribed.set(bs.isCancelled());
    }
  }
)).take(1).subscribe();
  assertTrue("Switch doesn't propagate 'unsubscribe'",isUnsubscribed.get());
}
