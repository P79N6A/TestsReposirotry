@Test public void sequentialMode(){
  Flowable<Integer> source=Flowable.range(1,1000000).hide();
  for (int i=1; i < 33; i++) {
    Flowable<Integer> result=ParallelFlowable.from(source,i).map(new Function<Integer,Integer>(){
      @Override public Integer apply(      Integer v) throws Exception {
        return v + 1;
      }
    }
).sequential();
    TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
    result.subscribe(ts);
    ts.assertSubscribed().assertValueCount(1000000).assertComplete().assertNoErrors();
  }
}
