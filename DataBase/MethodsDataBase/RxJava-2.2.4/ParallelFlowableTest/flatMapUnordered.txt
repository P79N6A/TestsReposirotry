@Test public void flatMapUnordered(){
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable.range(1,5).parallel().flatMap(new Function<Integer,Publisher<Integer>>(){
    @Override public Publisher<Integer> apply(    Integer v) throws Exception {
      return Flowable.range(v * 10 + 1,3);
    }
  }
).sequential().subscribe(ts);
  ts.assertValueSet(new HashSet<Integer>(Arrays.asList(11,12,13,21,22,23,31,32,33,41,42,43,51,52,53))).assertNoErrors().assertComplete();
}
