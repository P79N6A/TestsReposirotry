@Test public void parallelModeFused(){
  Flowable<Integer> source=Flowable.range(1,1000000);
  int ncpu=Math.max(8,Runtime.getRuntime().availableProcessors());
  for (int i=1; i < ncpu + 1; i++) {
    ExecutorService exec=Executors.newFixedThreadPool(i);
    Scheduler scheduler=Schedulers.from(exec);
    try {
      Flowable<Integer> result=ParallelFlowable.from(source,i).runOn(scheduler).map(new Function<Integer,Integer>(){
        @Override public Integer apply(        Integer v) throws Exception {
          return v + 1;
        }
      }
).sequential();
      TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
      result.subscribe(ts);
      ts.awaitDone(10,TimeUnit.SECONDS);
      ts.assertSubscribed().assertValueCount(1000000).assertComplete().assertNoErrors();
    }
  finally {
      exec.shutdown();
    }
  }
}
