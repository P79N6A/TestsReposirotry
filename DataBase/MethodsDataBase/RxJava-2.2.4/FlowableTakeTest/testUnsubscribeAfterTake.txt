@Test public void testUnsubscribeAfterTake(){
  TestFlowableFunc f=new TestFlowableFunc("one","two","three");
  Flowable<String> w=Flowable.unsafeCreate(f);
  Subscriber<String> subscriber=TestHelper.mockSubscriber();
  Flowable<String> take=w.take(1);
  take.subscribe(subscriber);
  try {
    f.t.join();
  }
 catch (  Throwable e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  System.out.println("TestFlowable thread finished");
  verify(subscriber).onSubscribe((Subscription)notNull());
  verify(subscriber,times(1)).onNext("one");
  verify(subscriber,never()).onNext("two");
  verify(subscriber,never()).onNext("three");
  verify(subscriber,times(1)).onComplete();
  verifyNoMoreInteractions(subscriber);
}
