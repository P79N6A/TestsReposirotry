@Test public void testTakeWithErrorHappeningInTheLastOnNext(){
  Flowable<Integer> w=Flowable.fromIterable(Arrays.asList(1,2,3)).take(1).map(new Function<Integer,Integer>(){
    @Override public Integer apply(    Integer t1){
      throw new IllegalArgumentException("some error");
    }
  }
);
  Subscriber<Integer> subscriber=TestHelper.mockSubscriber();
  w.subscribe(subscriber);
  InOrder inOrder=inOrder(subscriber);
  inOrder.verify(subscriber,times(1)).onError(any(IllegalArgumentException.class));
  inOrder.verifyNoMoreInteractions();
}
