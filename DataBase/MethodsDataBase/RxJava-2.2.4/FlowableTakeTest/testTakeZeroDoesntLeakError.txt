@Test @Ignore("take(0) is now empty() and doesn't even subscribe to the original source") public void testTakeZeroDoesntLeakError(){
  final AtomicBoolean subscribed=new AtomicBoolean(false);
  final BooleanSubscription bs=new BooleanSubscription();
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscribed.set(true);
      subscriber.onSubscribe(bs);
      subscriber.onError(new Throwable("test failed"));
    }
  }
);
  Subscriber<String> subscriber=TestHelper.mockSubscriber();
  source.take(0).subscribe(subscriber);
  assertTrue("source subscribed",subscribed.get());
  assertTrue("source unsubscribed",bs.isCancelled());
  verify(subscriber,never()).onNext(anyString());
  verify(subscriber,never()).onError(any(Throwable.class));
  verify(subscriber,times(1)).onComplete();
  verifyNoMoreInteractions(subscriber);
}
