@Test public void testTakeDoesntLeakErrors(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
      @Override public void subscribe(      Subscriber<? super String> subscriber){
        subscriber.onSubscribe(new BooleanSubscription());
        subscriber.onNext("one");
        subscriber.onError(new Throwable("test failed"));
      }
    }
);
    Subscriber<String> subscriber=TestHelper.mockSubscriber();
    source.take(1).subscribe(subscriber);
    verify(subscriber).onSubscribe((Subscription)notNull());
    verify(subscriber,times(1)).onNext("one");
    verify(subscriber,never()).onError(any(Throwable.class));
    verify(subscriber,times(1)).onComplete();
    verifyNoMoreInteractions(subscriber);
    TestHelper.assertUndeliverable(errors,0,Throwable.class,"test failed");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
