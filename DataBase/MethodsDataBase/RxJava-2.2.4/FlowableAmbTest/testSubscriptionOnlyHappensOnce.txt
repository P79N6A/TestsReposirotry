@SuppressWarnings("unchecked") @Test public void testSubscriptionOnlyHappensOnce() throws InterruptedException {
  final AtomicLong count=new AtomicLong();
  Consumer<Subscription> incrementer=new Consumer<Subscription>(){
    @Override public void accept(    Subscription s){
      count.incrementAndGet();
    }
  }
;
  Flowable<Integer> f1=Flowable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());
  Flowable<Integer> f2=Flowable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable.ambArray(f1,f2).subscribe(ts);
  ts.request(1);
  ts.awaitTerminalEvent(5,TimeUnit.SECONDS);
  ts.assertNoErrors();
  assertEquals(2,count.get());
}
