@Test public void retryBiPredicateDisposeRace(){
  RxJavaPlugins.setErrorHandler(Functions.emptyConsumer());
  try {
    for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
      final PublishProcessor<Integer> pp=PublishProcessor.create();
      final TestSubscriber<Integer> ts=pp.retry(new BiPredicate<Object,Object>(){
        @Override public boolean test(        Object t1,        Object t2) throws Exception {
          return true;
        }
      }
).test();
      final TestException ex=new TestException();
      Runnable r1=new Runnable(){
        @Override public void run(){
          pp.onError(ex);
        }
      }
;
      Runnable r2=new Runnable(){
        @Override public void run(){
          ts.cancel();
        }
      }
;
      TestHelper.race(r1,r2);
      ts.assertEmpty();
    }
  }
  finally {
    RxJavaPlugins.reset();
  }
}
