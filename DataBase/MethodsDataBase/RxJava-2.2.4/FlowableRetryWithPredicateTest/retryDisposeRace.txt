@Test public void retryDisposeRace(){
  final TestException ex=new TestException();
  RxJavaPlugins.setErrorHandler(Functions.emptyConsumer());
  try {
    for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
      final PublishProcessor<Integer> pp=PublishProcessor.create();
      final TestSubscriber<Integer> ts=pp.retry(Functions.alwaysTrue()).test();
      Runnable r1=new Runnable(){
        @Override public void run(){
          pp.onError(ex);
        }
      }
;
      Runnable r2=new Runnable(){
        @Override public void run(){
          ts.cancel();
        }
      }
;
      TestHelper.race(r1,r2);
      ts.assertEmpty();
    }
  }
  finally {
    RxJavaPlugins.reset();
  }
}
