@Test public void testRetryTwice(){
  Flowable<Integer> source=Flowable.unsafeCreate(new Publisher<Integer>(){
    int count;
    @Override public void subscribe(    Subscriber<? super Integer> t1){
      t1.onSubscribe(new BooleanSubscription());
      count++;
      t1.onNext(0);
      t1.onNext(1);
      if (count == 1) {
        t1.onError(new TestException());
        return;
      }
      t1.onNext(2);
      t1.onNext(3);
      t1.onComplete();
    }
  }
);
  Subscriber<Integer> subscriber=TestHelper.mockSubscriber();
  InOrder inOrder=inOrder(subscriber);
  source.retry(retryTwice).subscribe(subscriber);
  inOrder.verify(subscriber).onNext(0);
  inOrder.verify(subscriber).onNext(1);
  inOrder.verify(subscriber).onNext(0);
  inOrder.verify(subscriber).onNext(1);
  inOrder.verify(subscriber).onNext(2);
  inOrder.verify(subscriber).onNext(3);
  inOrder.verify(subscriber).onComplete();
  verify(subscriber,never()).onError(any(Throwable.class));
}
