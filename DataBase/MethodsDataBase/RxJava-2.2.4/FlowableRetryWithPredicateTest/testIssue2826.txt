@Test public void testIssue2826(){
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  final RuntimeException e=new RuntimeException("You shall not pass");
  final AtomicInteger c=new AtomicInteger();
  Flowable.just(1).map(new Function<Integer,Integer>(){
    @Override public Integer apply(    Integer t1){
      c.incrementAndGet();
      throw e;
    }
  }
).retry(retry5).subscribe(ts);
  ts.assertTerminated();
  assertEquals(6,c.get());
  assertEquals(Collections.singletonList(e),ts.errors());
}
