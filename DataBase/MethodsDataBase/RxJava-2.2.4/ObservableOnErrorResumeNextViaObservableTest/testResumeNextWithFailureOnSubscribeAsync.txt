@Test @Ignore("Publishers should not throw") public void testResumeNextWithFailureOnSubscribeAsync(){
  Observable<String> testObservable=Observable.unsafeCreate(new ObservableSource<String>(){
    @Override public void subscribe(    Observer<? super String> t1){
      throw new RuntimeException("force failure");
    }
  }
);
  Observable<String> resume=Observable.just("resume");
  Observable<String> observable=testObservable.subscribeOn(Schedulers.io()).onErrorResumeNext(resume);
  Observer<String> observer=TestHelper.mockObserver();
  TestObserver<String> to=new TestObserver<String>(observer);
  observable.subscribe(to);
  to.awaitTerminalEvent();
  verify(observer,Mockito.never()).onError(any(Throwable.class));
  verify(observer,times(1)).onComplete();
  verify(observer,times(1)).onNext("resume");
}
