@Test public void switchOverDelayError(){
  PublishSubject<Integer> ps=PublishSubject.create();
  final SingleSubject<Integer> ms1=SingleSubject.create();
  final SingleSubject<Integer> ms2=SingleSubject.create();
  TestObserver<Integer> to=ps.switchMapSingleDelayError(new Function<Integer,SingleSource<Integer>>(){
    @Override public SingleSource<Integer> apply(    Integer v) throws Exception {
      if (v == 1) {
        return ms1;
      }
      return ms2;
    }
  }
).test();
  to.assertEmpty();
  ps.onNext(1);
  to.assertEmpty();
  assertTrue(ms1.hasObservers());
  ps.onNext(2);
  assertFalse(ms1.hasObservers());
  assertTrue(ms2.hasObservers());
  ms2.onError(new TestException());
  to.assertEmpty();
  assertTrue(ps.hasObservers());
  ps.onComplete();
  to.assertFailure(TestException.class);
}
