@Test public void disposeOnNextAfterFirst(){
  final TestObserver<Integer> to=new TestObserver<Integer>();
  Observable.just(1,2).switchMapSingle(new Function<Integer,SingleSource<Integer>>(){
    @Override public SingleSource<Integer> apply(    Integer v) throws Exception {
      if (v == 2) {
        to.cancel();
      }
      return Single.just(1);
    }
  }
).subscribe(to);
  to.assertValue(1).assertNoErrors().assertNotComplete();
}
