@Test public void testWindowNoDuplication(){
  final PublishProcessor<Integer> source=PublishProcessor.create();
  final TestSubscriber<Integer> tsw=new TestSubscriber<Integer>(){
    boolean once;
    @Override public void onNext(    Integer t){
      if (!once) {
        once=true;
        source.onNext(2);
      }
      super.onNext(t);
    }
  }
;
  TestSubscriber<Flowable<Integer>> ts=new TestSubscriber<Flowable<Integer>>(){
    @Override public void onNext(    Flowable<Integer> t){
      t.subscribe(tsw);
      super.onNext(t);
    }
  }
;
  source.window(new Callable<Flowable<Object>>(){
    @Override public Flowable<Object> call(){
      return Flowable.never();
    }
  }
).subscribe(ts);
  source.onNext(1);
  source.onComplete();
  ts.assertValueCount(1);
  tsw.assertValues(1,2);
}
