@Test public void testShutdown() throws InterruptedException {
  tryOutSchedulers();
  System.out.println("testShutdown >> Giving time threads to spin-up");
  Thread.sleep(500);
  Set<Thread> rxThreads=new HashSet<Thread>();
  for (  Thread t : Thread.getAllStackTraces().keySet()) {
    if (t.getName().startsWith("Rx")) {
      rxThreads.add(t);
    }
  }
  Schedulers.shutdown();
  System.out.println("testShutdown >> Giving time to threads to stop");
  Thread.sleep(500);
  StringBuilder b=new StringBuilder();
  for (  Thread t : rxThreads) {
    if (t.isAlive()) {
      b.append("Thread " + t + " failed to shutdown\r\n");
      for (      StackTraceElement ste : t.getStackTrace()) {
        b.append("  ").append(ste).append("\r\n");
      }
    }
  }
  if (b.length() > 0) {
    System.out.print(b);
    System.out.println("testShutdown >> Restarting schedulers...");
    Schedulers.start();
    fail("Rx Threads were still alive:\r\n" + b);
  }
  System.out.println("testShutdown >> Restarting schedulers...");
  Schedulers.start();
  tryOutSchedulers();
}
