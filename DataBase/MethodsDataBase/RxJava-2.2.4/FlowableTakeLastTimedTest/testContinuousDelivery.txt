@Test public void testContinuousDelivery(){
  TestScheduler scheduler=new TestScheduler();
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>(0L);
  PublishProcessor<Integer> pp=PublishProcessor.create();
  pp.takeLast(1000,TimeUnit.MILLISECONDS,scheduler).subscribe(ts);
  pp.onNext(1);
  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);
  pp.onNext(2);
  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);
  pp.onNext(3);
  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);
  pp.onNext(4);
  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);
  pp.onComplete();
  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);
  ts.assertNoValues();
  ts.request(1);
  ts.assertValue(3);
  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);
  ts.request(1);
  ts.assertValues(3,4);
  ts.assertComplete();
  ts.assertNoErrors();
}
