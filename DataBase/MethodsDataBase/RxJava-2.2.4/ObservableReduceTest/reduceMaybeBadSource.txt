@Test public void reduceMaybeBadSource(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    new Observable<Object>(){
      @Override protected void subscribeActual(      Observer<? super Object> observer){
        observer.onSubscribe(Disposables.empty());
        observer.onComplete();
        observer.onNext(1);
        observer.onError(new TestException());
        observer.onComplete();
      }
    }
.reduce(new BiFunction<Object,Object,Object>(){
      @Override public Object apply(      Object a,      Object b) throws Exception {
        return a;
      }
    }
).test().assertResult();
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
