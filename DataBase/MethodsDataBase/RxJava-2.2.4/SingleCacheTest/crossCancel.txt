@Test public void crossCancel(){
  PublishSubject<Integer> ps=PublishSubject.create();
  Single<Integer> cache=ps.single(-99).cache();
  final TestSubscriber<Integer> ts1=new TestSubscriber<Integer>();
  TestSubscriber<Integer> ts2=new TestSubscriber<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      ts1.cancel();
    }
  }
;
  cache.toFlowable().subscribe(ts2);
  cache.toFlowable().subscribe(ts1);
  ps.onNext(1);
  ps.onComplete();
  ts1.assertNoValues().assertNoErrors().assertNotComplete();
  ts2.assertResult(1);
}
