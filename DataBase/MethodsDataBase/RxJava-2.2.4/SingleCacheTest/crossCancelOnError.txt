@Test public void crossCancelOnError(){
  PublishSubject<Integer> ps=PublishSubject.create();
  Single<Integer> cache=ps.single(-99).cache();
  final TestSubscriber<Integer> ts1=new TestSubscriber<Integer>();
  TestSubscriber<Integer> ts2=new TestSubscriber<Integer>(){
    @Override public void onError(    Throwable t){
      super.onError(t);
      ts1.cancel();
    }
  }
;
  cache.toFlowable().subscribe(ts2);
  cache.toFlowable().subscribe(ts1);
  ps.onError(new TestException());
  ts1.assertNoValues().assertNoErrors().assertNotComplete();
  ts2.assertFailure(TestException.class);
}
