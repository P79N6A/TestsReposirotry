@Test public void doubleDispose(){
  PublishProcessor<Integer> pp=PublishProcessor.create();
  final Single<Integer> cached=pp.single(-99).cache();
  SingleObserver<Integer> doubleDisposer=new SingleObserver<Integer>(){
    @Override public void onSubscribe(    Disposable d){
      d.dispose();
      d.dispose();
    }
    @Override public void onSuccess(    Integer value){
    }
    @Override public void onError(    Throwable e){
    }
  }
;
  cached.subscribe(doubleDisposer);
  cached.test();
  cached.subscribe(doubleDisposer);
}
