@Test public void testOnceObserverThrows(){
  Observable<Long> source=Observable.timer(100,TimeUnit.MILLISECONDS,scheduler);
  source.safeSubscribe(new DefaultObserver<Long>(){
    @Override public void onNext(    Long t){
      throw new TestException();
    }
    @Override public void onError(    Throwable e){
      observer.onError(e);
    }
    @Override public void onComplete(){
      observer.onComplete();
    }
  }
);
  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);
  verify(observer).onError(any(TestException.class));
  verify(observer,never()).onNext(anyLong());
  verify(observer,never()).onComplete();
}
