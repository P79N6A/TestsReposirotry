@Test public void resultSelectorThrows(){
  Maybe.just(1).flatMap(new Function<Integer,MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> apply(    Integer v) throws Exception {
      return Maybe.just(2);
    }
  }
,new BiFunction<Integer,Integer,Object>(){
    @Override public Object apply(    Integer a,    Integer b) throws Exception {
      throw new TestException();
    }
  }
).test().assertFailure(TestException.class);
}
