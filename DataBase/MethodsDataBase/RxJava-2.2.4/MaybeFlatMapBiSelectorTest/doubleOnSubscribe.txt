@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeMaybe(new Function<Maybe<Object>,MaybeSource<Object>>(){
    @Override public MaybeSource<Object> apply(    Maybe<Object> v) throws Exception {
      return v.flatMap(new Function<Object,MaybeSource<Integer>>(){
        @Override public MaybeSource<Integer> apply(        Object v) throws Exception {
          return Maybe.just(1);
        }
      }
,new BiFunction<Object,Integer,Object>(){
        @Override public Object apply(        Object a,        Integer b) throws Exception {
          return b;
        }
      }
);
    }
  }
);
}
