@Test public void testTakeWhileDoesntLeakErrors(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
      @Override public void subscribe(      Subscriber<? super String> subscriber){
        subscriber.onSubscribe(new BooleanSubscription());
        subscriber.onNext("one");
        subscriber.onError(new TestException("test failed"));
      }
    }
);
    source.takeWhile(new Predicate<String>(){
      @Override public boolean test(      String s){
        return false;
      }
    }
).blockingLast("");
    TestHelper.assertUndeliverable(errors,0,TestException.class,"test failed");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
