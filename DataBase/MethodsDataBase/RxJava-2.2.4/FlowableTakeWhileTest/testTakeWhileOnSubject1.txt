@Test public void testTakeWhileOnSubject1(){
  FlowableProcessor<Integer> s=PublishProcessor.create();
  Flowable<Integer> take=s.takeWhile(new Predicate<Integer>(){
    @Override public boolean test(    Integer input){
      return input < 3;
    }
  }
);
  Subscriber<Integer> subscriber=TestHelper.mockSubscriber();
  take.subscribe(subscriber);
  s.onNext(1);
  s.onNext(2);
  s.onNext(3);
  s.onNext(4);
  s.onNext(5);
  s.onComplete();
  verify(subscriber,times(1)).onNext(1);
  verify(subscriber,times(1)).onNext(2);
  verify(subscriber,never()).onNext(3);
  verify(subscriber,never()).onNext(4);
  verify(subscriber,never()).onNext(5);
  verify(subscriber,never()).onError(any(Throwable.class));
  verify(subscriber,times(1)).onComplete();
}
