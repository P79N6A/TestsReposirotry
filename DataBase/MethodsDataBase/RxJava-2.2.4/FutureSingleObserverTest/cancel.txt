@Test public void cancel(){
  final Future<?> f=Single.never().toFuture();
  assertFalse(f.isCancelled());
  assertFalse(f.isDone());
  f.cancel(true);
  assertTrue(f.isCancelled());
  assertTrue(f.isDone());
  try {
    f.get();
    fail("Should have thrown!");
  }
 catch (  CancellationException ex) {
  }
catch (  InterruptedException ex) {
    throw new AssertionError(ex);
  }
catch (  ExecutionException ex) {
    throw new AssertionError(ex);
  }
  try {
    f.get(5,TimeUnit.SECONDS);
    fail("Should have thrown!");
  }
 catch (  CancellationException ex) {
  }
catch (  InterruptedException ex) {
    throw new AssertionError(ex);
  }
catch (  ExecutionException ex) {
    throw new AssertionError(ex);
  }
catch (  TimeoutException ex) {
    throw new AssertionError(ex);
  }
}
