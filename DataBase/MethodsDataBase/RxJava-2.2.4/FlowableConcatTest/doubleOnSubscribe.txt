@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<Integer>>(){
    @Override public Publisher<Integer> apply(    Flowable<Object> f) throws Exception {
      return f.concatMap(Functions.justFunction(Flowable.just(2)));
    }
  }
);
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<Integer>>(){
    @Override public Publisher<Integer> apply(    Flowable<Object> f) throws Exception {
      return f.concatMapDelayError(Functions.justFunction(Flowable.just(2)));
    }
  }
);
}
