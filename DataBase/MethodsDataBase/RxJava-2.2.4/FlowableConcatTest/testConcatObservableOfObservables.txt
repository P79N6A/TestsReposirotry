@Test public void testConcatObservableOfObservables(){
  Subscriber<String> subscriber=TestHelper.mockSubscriber();
  final String[] o={"1","3","5","7"};
  final String[] e={"2","4","6"};
  final Flowable<String> odds=Flowable.fromArray(o);
  final Flowable<String> even=Flowable.fromArray(e);
  Flowable<Flowable<String>> flowableOfFlowables=Flowable.unsafeCreate(new Publisher<Flowable<String>>(){
    @Override public void subscribe(    Subscriber<? super Flowable<String>> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      subscriber.onNext(odds);
      subscriber.onNext(even);
      subscriber.onComplete();
    }
  }
);
  Flowable<String> concat=Flowable.concat(flowableOfFlowables);
  concat.subscribe(subscriber);
  verify(subscriber,times(7)).onNext(anyString());
}
