@Test public void afterDelayNoInterrupt(){
  ScheduledExecutorService exec=Executors.newSingleThreadScheduledExecutor();
  try {
    for (    Scheduler s : new Scheduler[]{Schedulers.single(),Schedulers.computation(),Schedulers.newThread(),Schedulers.io(),Schedulers.from(exec)}) {
      final TestSubscriber<Boolean> ts=TestSubscriber.create();
      ts.withTag(s.getClass().getSimpleName());
      Flowable.<Boolean>create(new FlowableOnSubscribe<Boolean>(){
        @Override public void subscribe(        FlowableEmitter<Boolean> emitter) throws Exception {
          emitter.onNext(Thread.interrupted());
          emitter.onComplete();
        }
      }
,BackpressureStrategy.MISSING).delaySubscription(100,TimeUnit.MILLISECONDS,s).subscribe(ts);
      ts.awaitTerminalEvent();
      ts.assertValue(false);
    }
  }
  finally {
    exec.shutdown();
  }
}
