@Test public void testJust(){
  TestObserver<Object> to=new TestObserver<Object>();
  Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){
    @Override public Observable<Object> apply(    Integer item){
      return Observable.just((Object)(item + 1));
    }
  }
,new Function<Throwable,Observable<Object>>(){
    @Override public Observable<Object> apply(    Throwable e){
      return Observable.error(e);
    }
  }
,new Callable<Observable<Object>>(){
    @Override public Observable<Object> call(){
      return Observable.never();
    }
  }
).subscribe(to);
  to.assertNoErrors();
  to.assertNotComplete();
  to.assertValue(2);
}
