@Test public void testNext(){
  FlowableProcessor<String> obs=PublishProcessor.create();
  Iterator<String> it=obs.blockingNext().iterator();
  fireOnNextInNewThread(obs,"one");
  assertTrue(it.hasNext());
  assertEquals("one",it.next());
  fireOnNextInNewThread(obs,"two");
  assertTrue(it.hasNext());
  assertEquals("two",it.next());
  fireOnNextInNewThread(obs,"three");
  try {
    assertEquals("three",it.next());
  }
 catch (  NoSuchElementException e) {
    fail("Calling next() without hasNext() should wait for next fire");
  }
  obs.onComplete();
  assertFalse(it.hasNext());
  try {
    it.next();
    fail("At the end of an iterator should throw a NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
  assertFalse(it.hasNext());
  try {
    it.next();
    fail("At the end of an iterator should throw a NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
}
