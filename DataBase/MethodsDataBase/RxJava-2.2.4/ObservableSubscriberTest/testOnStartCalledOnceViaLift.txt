@Test public void testOnStartCalledOnceViaLift(){
  final AtomicInteger c=new AtomicInteger();
  Observable.just(1,2,3,4).lift(new ObservableOperator<Integer,Integer>(){
    @Override public Observer<? super Integer> apply(    final Observer<? super Integer> child){
      return new DefaultObserver<Integer>(){
        @Override public void onStart(){
          c.incrementAndGet();
        }
        @Override public void onComplete(){
          child.onComplete();
        }
        @Override public void onError(        Throwable e){
          child.onError(e);
        }
        @Override public void onNext(        Integer t){
          child.onNext(t);
        }
      }
;
    }
  }
).subscribe();
  assertEquals(1,c.get());
}
