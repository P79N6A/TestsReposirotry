@Test public void plainExecutor() throws Exception {
  Scheduler s=Schedulers.from(new Executor(){
    @Override public void execute(    Runnable r){
      r.run();
    }
  }
);
  final CountDownLatch cdl=new CountDownLatch(5);
  Runnable r=new Runnable(){
    @Override public void run(){
      cdl.countDown();
    }
  }
;
  s.scheduleDirect(r);
  s.scheduleDirect(r,50,TimeUnit.MILLISECONDS);
  Disposable d=s.schedulePeriodicallyDirect(r,10,10,TimeUnit.MILLISECONDS);
  try {
    assertTrue(cdl.await(5,TimeUnit.SECONDS));
  }
  finally {
    d.dispose();
  }
  assertTrue(d.isDisposed());
}
