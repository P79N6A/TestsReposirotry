@Test public void testRangeUnsubscribe(){
  Observer<Long> observer=TestHelper.mockObserver();
  final AtomicInteger count=new AtomicInteger();
  Observable.rangeLong(1,1000).doOnNext(new Consumer<Long>(){
    @Override public void accept(    Long t1){
      count.incrementAndGet();
    }
  }
).take(3).subscribe(observer);
  verify(observer,times(1)).onNext(1L);
  verify(observer,times(1)).onNext(2L);
  verify(observer,times(1)).onNext(3L);
  verify(observer,never()).onNext(4L);
  verify(observer,never()).onError(any(Throwable.class));
  verify(observer,times(1)).onComplete();
  assertEquals(3,count.get());
}
