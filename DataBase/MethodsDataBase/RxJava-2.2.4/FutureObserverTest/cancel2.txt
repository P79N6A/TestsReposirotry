@Test public void cancel2(){
  fo.dispose();
  assertFalse(fo.isCancelled());
  assertFalse(fo.isDisposed());
  assertFalse(fo.isDone());
  for (int i=0; i < 2; i++) {
    fo.cancel(i == 0);
    assertTrue(fo.isCancelled());
    assertTrue(fo.isDisposed());
    assertTrue(fo.isDone());
  }
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    fo.onNext(1);
    fo.onError(new TestException("First"));
    fo.onError(new TestException("Second"));
    fo.onComplete();
    assertTrue(fo.isCancelled());
    assertTrue(fo.isDisposed());
    assertTrue(fo.isDone());
    TestHelper.assertUndeliverable(errors,0,TestException.class);
    TestHelper.assertUndeliverable(errors,1,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
