@Test public void assertFuseable(){
  TestSubscriber<Integer> ts=TestSubscriber.create();
  ts.onSubscribe(new BooleanSubscription());
  ts.assertNotFuseable();
  try {
    ts.assertFuseable();
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
  try {
    ts.assertFusionMode(QueueFuseable.SYNC);
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
  ts=TestSubscriber.create();
  ts.setInitialFusionMode(QueueFuseable.ANY);
  ts.onSubscribe(new ScalarSubscription<Integer>(ts,1));
  ts.assertFuseable();
  ts.assertFusionMode(QueueFuseable.SYNC);
  try {
    ts.assertFusionMode(QueueFuseable.NONE);
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
  try {
    ts.assertNotFuseable();
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
}
