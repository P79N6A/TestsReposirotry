@Test(timeout=5000) public void await() throws Exception {
  TestSubscriber<Integer> ts=TestSubscriber.create();
  ts.onSubscribe(new BooleanSubscription());
  assertFalse(ts.await(100,TimeUnit.MILLISECONDS));
  ts.awaitDone(100,TimeUnit.MILLISECONDS);
  assertTrue(ts.isDisposed());
  assertFalse(ts.awaitTerminalEvent(100,TimeUnit.MILLISECONDS));
  assertEquals(0,ts.completions());
  assertEquals(0,ts.errorCount());
  ts.onComplete();
  assertTrue(ts.await(100,TimeUnit.MILLISECONDS));
  ts.await();
  ts.awaitDone(5,TimeUnit.SECONDS);
  assertEquals(1,ts.completions());
  assertEquals(0,ts.errorCount());
  assertTrue(ts.awaitTerminalEvent());
  final TestSubscriber<Integer> ts1=TestSubscriber.create();
  ts1.onSubscribe(new BooleanSubscription());
  Schedulers.single().scheduleDirect(new Runnable(){
    @Override public void run(){
      ts1.onComplete();
    }
  }
,200,TimeUnit.MILLISECONDS);
  ts1.await();
  ts1.assertValueSet(Collections.<Integer>emptySet());
}
