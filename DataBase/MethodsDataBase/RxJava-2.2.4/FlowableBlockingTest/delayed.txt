@SuppressWarnings("rawtypes") @Test public void delayed() throws Exception {
  final TestSubscriber<Object> ts=new TestSubscriber<Object>();
  final Subscriber[] s={null};
  Schedulers.single().scheduleDirect(new Runnable(){
    @SuppressWarnings("unchecked") @Override public void run(){
      ts.dispose();
      s[0].onNext(1);
    }
  }
,200,TimeUnit.MILLISECONDS);
  new Flowable<Integer>(){
    @Override protected void subscribeActual(    Subscriber<? super Integer> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      s[0]=subscriber;
    }
  }
.blockingSubscribe(ts);
  while (!ts.isDisposed()) {
    Thread.sleep(100);
  }
  ts.assertEmpty();
}
