@Test public void testCompositeException(){
  final AtomicInteger counter=new AtomicInteger();
  CompositeDisposable cd=new CompositeDisposable();
  cd.add(Disposables.fromRunnable(new Runnable(){
    @Override public void run(){
      throw new RuntimeException("failed on first one");
    }
  }
));
  cd.add(Disposables.fromRunnable(new Runnable(){
    @Override public void run(){
      throw new RuntimeException("failed on second one too");
    }
  }
));
  cd.add(Disposables.fromRunnable(new Runnable(){
    @Override public void run(){
      counter.incrementAndGet();
    }
  }
));
  try {
    cd.dispose();
    fail("Expecting an exception");
  }
 catch (  CompositeException e) {
    assertEquals(e.getExceptions().size(),2);
  }
  assertEquals(1,counter.get());
}
