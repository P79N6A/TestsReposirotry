@Test public void disposeThrowsCheckedExceptionSneaky(){
  CompositeDisposable cd=new CompositeDisposable();
  cd.add(new Disposable(){
    @Override public void dispose(){
      CompositeDisposableTest.<RuntimeException>throwSneaky();
    }
    @Override public boolean isDisposed(){
      return false;
    }
  }
);
  Disposable d1=Disposables.empty();
  cd.add(d1);
  try {
    cd.dispose();
    fail("Failed to throw");
  }
 catch (  RuntimeException ex) {
    if (!(ex.getCause() instanceof IOException)) {
      fail(ex.toString() + " should have thrown RuntimeException(IOException)");
    }
  }
  assertTrue(d1.isDisposed());
}
