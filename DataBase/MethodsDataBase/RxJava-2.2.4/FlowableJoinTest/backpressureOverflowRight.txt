@Test public void backpressureOverflowRight(){
  PublishProcessor<Integer> pp1=PublishProcessor.create();
  PublishProcessor<Integer> pp2=PublishProcessor.create();
  TestSubscriber<Object> ts=pp1.join(pp2,Functions.justFunction(Flowable.never()),Functions.justFunction(Flowable.never()),new BiFunction<Integer,Integer,Object>(){
    @Override public Object apply(    Integer a,    Integer b) throws Exception {
      return a + b;
    }
  }
).test(0L);
  pp1.onNext(1);
  pp2.onNext(2);
  ts.assertFailure(MissingBackpressureException.class);
}
