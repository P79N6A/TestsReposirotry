@Test public void testLongDelay(){
  Flowable<Long> source=Flowable.interval(1L,TimeUnit.SECONDS,scheduler).take(3);
  Flowable<Long> delayed=source.delay(5L,TimeUnit.SECONDS,scheduler);
  delayed.subscribe(subscriber);
  InOrder inOrder=inOrder(subscriber);
  scheduler.advanceTimeTo(5999L,TimeUnit.MILLISECONDS);
  verify(subscriber,never()).onNext(anyLong());
  verify(subscriber,never()).onComplete();
  verify(subscriber,never()).onError(any(Throwable.class));
  scheduler.advanceTimeTo(6000L,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,times(1)).onNext(0L);
  scheduler.advanceTimeTo(6999L,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,never()).onNext(anyLong());
  scheduler.advanceTimeTo(7000L,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,times(1)).onNext(1L);
  scheduler.advanceTimeTo(7999L,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,never()).onNext(anyLong());
  scheduler.advanceTimeTo(8000L,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,times(1)).onNext(2L);
  inOrder.verify(subscriber,times(1)).onComplete();
  inOrder.verify(subscriber,never()).onNext(anyLong());
  inOrder.verify(subscriber,never()).onComplete();
  verify(subscriber,never()).onError(any(Throwable.class));
}
