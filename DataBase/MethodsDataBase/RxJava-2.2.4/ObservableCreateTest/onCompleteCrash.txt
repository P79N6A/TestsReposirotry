@Test public void onCompleteCrash(){
  Observable.create(new ObservableOnSubscribe<Object>(){
    @Override public void subscribe(    ObservableEmitter<Object> e) throws Exception {
      Disposable d=Disposables.empty();
      e.setDisposable(d);
      try {
        e.onComplete();
        fail("Should have thrown");
      }
 catch (      TestException ex) {
      }
      assertTrue(d.isDisposed());
    }
  }
).subscribe(new Observer<Object>(){
    @Override public void onSubscribe(    Disposable d){
    }
    @Override public void onNext(    Object value){
    }
    @Override public void onError(    Throwable e){
    }
    @Override public void onComplete(){
      throw new TestException();
    }
  }
);
}
