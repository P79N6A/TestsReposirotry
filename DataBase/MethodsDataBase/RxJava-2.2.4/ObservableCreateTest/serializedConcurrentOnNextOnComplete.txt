@Test public void serializedConcurrentOnNextOnComplete(){
  TestObserver<Object> to=Observable.create(new ObservableOnSubscribe<Object>(){
    @Override public void subscribe(    ObservableEmitter<Object> e) throws Exception {
      final ObservableEmitter<Object> f=e.serialize();
      Runnable r1=new Runnable(){
        @Override public void run(){
          for (int i=0; i < 1000; i++) {
            f.onNext(1);
          }
        }
      }
;
      Runnable r2=new Runnable(){
        @Override public void run(){
          for (int i=0; i < 100; i++) {
            f.onNext(1);
          }
          f.onComplete();
        }
      }
;
      TestHelper.race(r1,r2);
    }
  }
).test().assertSubscribed().assertComplete().assertNoErrors();
  int c=to.valueCount();
  assertTrue("" + c,c >= 100);
}
