@Test public void basicWithCancellable(){
  final Disposable d1=Disposables.empty();
  final Disposable d2=Disposables.empty();
  Observable.<Integer>create(new ObservableOnSubscribe<Integer>(){
    @Override public void subscribe(    ObservableEmitter<Integer> e) throws Exception {
      e.setDisposable(d1);
      e.setCancellable(new Cancellable(){
        @Override public void cancel() throws Exception {
          d2.dispose();
        }
      }
);
      e.onNext(1);
      e.onNext(2);
      e.onNext(3);
      e.onComplete();
      e.onError(new TestException());
      e.onNext(4);
      e.onError(new TestException());
      e.onComplete();
    }
  }
).test().assertResult(1,2,3);
  assertTrue(d1.isDisposed());
  assertTrue(d2.isDisposed());
}
