@Test(timeout=5000) public void observeOnError() throws InterruptedException {
  final AtomicReference<String> name=new AtomicReference<String>();
  final AtomicReference<Throwable> err=new AtomicReference<Throwable>();
  final CountDownLatch cdl=new CountDownLatch(1);
  Completable c=error.completable.observeOn(Schedulers.computation());
  c.subscribe(new CompletableObserver(){
    @Override public void onSubscribe(    Disposable d){
    }
    @Override public void onComplete(){
      name.set(Thread.currentThread().getName());
      cdl.countDown();
    }
    @Override public void onError(    Throwable e){
      name.set(Thread.currentThread().getName());
      err.set(e);
      cdl.countDown();
    }
  }
);
  cdl.await();
  Assert.assertTrue(err.get() instanceof TestException);
  Assert.assertTrue(name.get().startsWith("RxComputation"));
}
