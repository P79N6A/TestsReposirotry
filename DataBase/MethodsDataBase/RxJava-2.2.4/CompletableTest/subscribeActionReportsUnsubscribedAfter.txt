@Test public void subscribeActionReportsUnsubscribedAfter(){
  PublishSubject<String> stringSubject=PublishSubject.create();
  Completable completable=stringSubject.ignoreElements();
  final AtomicReference<Disposable> disposableRef=new AtomicReference<Disposable>();
  Disposable completableSubscription=completable.subscribe(new Action(){
    @Override public void run(){
      if (disposableRef.get().isDisposed()) {
        disposableRef.set(null);
      }
    }
  }
);
  disposableRef.set(completableSubscription);
  stringSubject.onComplete();
  assertTrue("Not unsubscribed?",completableSubscription.isDisposed());
  assertNotNull("Unsubscribed before the call to onComplete",disposableRef.get());
}
