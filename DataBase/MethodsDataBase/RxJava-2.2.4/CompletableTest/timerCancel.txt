@Test(timeout=2000) public void timerCancel() throws InterruptedException {
  Completable c=Completable.timer(250,TimeUnit.MILLISECONDS);
  final SequentialDisposable sd=new SequentialDisposable();
  final AtomicInteger calls=new AtomicInteger();
  c.subscribe(new CompletableObserver(){
    @Override public void onSubscribe(    Disposable d){
      sd.replace(d);
    }
    @Override public void onError(    Throwable e){
      calls.getAndIncrement();
    }
    @Override public void onComplete(){
      calls.getAndIncrement();
    }
  }
);
  Thread.sleep(100);
  sd.dispose();
  Thread.sleep(200);
  Assert.assertEquals(0,calls.get());
}
