@Test(timeout=5000) public void retryWhen5Times(){
  final AtomicInteger calls=new AtomicInteger(5);
  Completable c=Completable.fromAction(new Action(){
    @Override public void run(){
      if (calls.decrementAndGet() != 0) {
        throw new TestException();
      }
    }
  }
).retryWhen(new Function<Flowable<? extends Throwable>,Publisher<Object>>(){
    @SuppressWarnings({"rawtypes","unchecked"}) @Override public Publisher<Object> apply(    Flowable<? extends Throwable> f){
      return (Publisher)f;
    }
  }
);
  c.blockingAwait();
}
