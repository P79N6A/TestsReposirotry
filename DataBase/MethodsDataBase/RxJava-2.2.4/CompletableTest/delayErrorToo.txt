@Test(timeout=5000) public void delayErrorToo() throws InterruptedException {
  Completable c=error.completable.delay(250,TimeUnit.MILLISECONDS,Schedulers.computation(),true);
  final AtomicBoolean done=new AtomicBoolean();
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();
  c.subscribe(new CompletableObserver(){
    @Override public void onSubscribe(    Disposable d){
    }
    @Override public void onError(    Throwable e){
      error.set(e);
    }
    @Override public void onComplete(){
      done.set(true);
    }
  }
);
  Thread.sleep(100);
  Assert.assertFalse("Already done",done.get());
  Assert.assertNull(error.get());
  Thread.sleep(200);
  Assert.assertFalse("Already done",done.get());
  Assert.assertTrue(error.get() instanceof TestException);
}
