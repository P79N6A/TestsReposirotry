@Test(timeout=5000) public void repeatUntilNormal(){
  final AtomicInteger calls=new AtomicInteger();
  final AtomicInteger times=new AtomicInteger(5);
  Completable c=Completable.fromCallable(new Callable<Object>(){
    @Override public Object call() throws Exception {
      calls.getAndIncrement();
      return null;
    }
  }
).repeatUntil(new BooleanSupplier(){
    @Override public boolean getAsBoolean(){
      return times.decrementAndGet() == 0;
    }
  }
);
  c.blockingAwait();
  Assert.assertEquals(5,calls.get());
}
