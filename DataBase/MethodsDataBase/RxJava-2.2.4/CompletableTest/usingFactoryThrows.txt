@Test public void usingFactoryThrows() throws Exception {
  @SuppressWarnings("unchecked") Consumer<Integer> onDispose=mock(Consumer.class);
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Completable.using(new Callable<Integer>(){
    @Override public Integer call(){
      return 1;
    }
  }
,new Function<Integer,Completable>(){
    @Override public Completable apply(    Integer t){
      throw new TestException();
    }
  }
,onDispose).<Integer>toFlowable().subscribe(ts);
  verify(onDispose).accept(1);
  ts.assertNoValues();
  ts.assertNotComplete();
  ts.assertError(TestException.class);
}
