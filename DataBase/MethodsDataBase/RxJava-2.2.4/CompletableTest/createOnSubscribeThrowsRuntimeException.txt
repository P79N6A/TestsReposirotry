@Test(timeout=5000) public void createOnSubscribeThrowsRuntimeException(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Completable c=Completable.unsafeCreate(new CompletableSource(){
      @Override public void subscribe(      CompletableObserver observer){
        throw new TestException();
      }
    }
);
    c.blockingAwait();
    Assert.fail("Did not throw exception");
  }
 catch (  NullPointerException ex) {
    if (!(ex.getCause() instanceof TestException)) {
      ex.printStackTrace();
      Assert.fail("Did not wrap the TestException but it returned: " + ex);
    }
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
 finally {
    RxJavaPlugins.reset();
  }
}
