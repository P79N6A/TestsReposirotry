@Test(timeout=5000) public void andThenCompletableNormal(){
  final AtomicBoolean run=new AtomicBoolean();
  Completable c=normal.completable.andThen(Completable.fromCallable(new Callable<Object>(){
    @Override public Object call() throws Exception {
      run.set(normal.get() == 0);
      return null;
    }
  }
));
  c.blockingAwait();
  Assert.assertFalse("Start with other",run.get());
  normal.assertSubscriptions(1);
}
