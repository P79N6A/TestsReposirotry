@Test(timeout=5000) public void startWithFlowableNormal(){
  final AtomicBoolean run=new AtomicBoolean();
  Flowable<Object> c=normal.completable.startWith(Flowable.fromCallable(new Callable<Object>(){
    @Override public Object call() throws Exception {
      run.set(normal.get() == 0);
      return 1;
    }
  }
));
  TestSubscriber<Object> ts=new TestSubscriber<Object>();
  c.subscribe(ts);
  Assert.assertTrue("Did not start with other",run.get());
  normal.assertSubscriptions(1);
  ts.assertValue(1);
  ts.assertComplete();
  ts.assertNoErrors();
}
