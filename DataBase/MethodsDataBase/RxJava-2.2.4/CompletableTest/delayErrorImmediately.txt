@Test(timeout=5000) public void delayErrorImmediately() throws InterruptedException {
  final TestScheduler scheduler=new TestScheduler();
  final Completable c=error.completable.delay(250,TimeUnit.MILLISECONDS,scheduler);
  final AtomicBoolean done=new AtomicBoolean();
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();
  c.subscribe(new CompletableObserver(){
    @Override public void onSubscribe(    Disposable d){
    }
    @Override public void onError(    Throwable e){
      error.set(e);
    }
    @Override public void onComplete(){
      done.set(true);
    }
  }
);
  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);
  Assert.assertTrue(error.get().toString(),error.get() instanceof TestException);
  Assert.assertFalse("Already done",done.get());
  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);
  Assert.assertFalse("Already done",done.get());
}
