@Test public void andThenError(){
  TestSubscriber<String> ts=new TestSubscriber<String>(0);
  final AtomicBoolean hasRun=new AtomicBoolean(false);
  final Exception e=new Exception();
  Completable.unsafeCreate(new CompletableSource(){
    @Override public void subscribe(    CompletableObserver co){
      co.onSubscribe(Disposables.empty());
      co.onError(e);
    }
  }
).andThen(Flowable.<String>unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> s){
      hasRun.set(true);
      s.onSubscribe(new BooleanSubscription());
      s.onNext("foo");
      s.onComplete();
    }
  }
)).subscribe(ts);
  ts.assertNoValues();
  ts.assertError(e);
  Assert.assertFalse("Should not have subscribed to observable when completable errors",hasRun.get());
}
