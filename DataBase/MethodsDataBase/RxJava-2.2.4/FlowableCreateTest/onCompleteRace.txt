@Test public void onCompleteRace(){
  for (  BackpressureStrategy m : BackpressureStrategy.values()) {
    Flowable<Object> source=Flowable.create(new FlowableOnSubscribe<Object>(){
      @Override public void subscribe(      FlowableEmitter<Object> e) throws Exception {
        final FlowableEmitter<Object> f=e.serialize();
        Runnable r1=new Runnable(){
          @Override public void run(){
            f.onComplete();
          }
        }
;
        Runnable r2=new Runnable(){
          @Override public void run(){
            f.onComplete();
          }
        }
;
        TestHelper.race(r1,r2);
      }
    }
,m);
    for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
      source.test().assertResult();
    }
  }
}
