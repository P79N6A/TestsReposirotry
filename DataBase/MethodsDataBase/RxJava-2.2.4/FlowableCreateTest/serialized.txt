@Test public void serialized(){
  for (  BackpressureStrategy m : BackpressureStrategy.values()) {
    List<Throwable> errors=TestHelper.trackPluginErrors();
    try {
      Flowable.create(new FlowableOnSubscribe<Object>(){
        @Override public void subscribe(        FlowableEmitter<Object> e) throws Exception {
          FlowableEmitter<Object> f=e.serialize();
          assertSame(f,f.serialize());
          assertFalse(f.isCancelled());
          final int[] calls={0};
          f.setCancellable(new Cancellable(){
            @Override public void cancel() throws Exception {
              calls[0]++;
            }
          }
);
          e.onComplete();
          assertTrue(f.isCancelled());
          assertEquals(1,calls[0]);
        }
      }
,m).test().assertResult();
      assertTrue(errors.toString(),errors.isEmpty());
    }
  finally {
      RxJavaPlugins.reset();
    }
  }
}
