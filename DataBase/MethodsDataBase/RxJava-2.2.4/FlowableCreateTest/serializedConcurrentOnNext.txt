@Test public void serializedConcurrentOnNext(){
  for (  BackpressureStrategy m : BackpressureStrategy.values()) {
    Flowable.create(new FlowableOnSubscribe<Object>(){
      @Override public void subscribe(      FlowableEmitter<Object> e) throws Exception {
        final FlowableEmitter<Object> f=e.serialize();
        Runnable r1=new Runnable(){
          @Override public void run(){
            for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
              f.onNext(1);
            }
          }
        }
;
        TestHelper.race(r1,r1);
      }
    }
,m).take(TestHelper.RACE_DEFAULT_LOOPS).test().assertSubscribed().assertValueCount(TestHelper.RACE_DEFAULT_LOOPS).assertComplete().assertNoErrors();
  }
}
