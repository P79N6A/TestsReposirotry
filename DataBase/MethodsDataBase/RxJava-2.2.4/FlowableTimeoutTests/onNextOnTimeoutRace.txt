@Test public void onNextOnTimeoutRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final TestScheduler sch=new TestScheduler();
    final PublishProcessor<Integer> pp=PublishProcessor.create();
    TestSubscriber<Integer> ts=pp.timeout(1,TimeUnit.SECONDS,sch).test();
    Runnable r1=new Runnable(){
      @Override public void run(){
        pp.onNext(1);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        sch.advanceTimeBy(1,TimeUnit.SECONDS);
      }
    }
;
    TestHelper.race(r1,r2);
    if (ts.valueCount() != 0) {
      if (ts.errorCount() != 0) {
        ts.assertFailure(TimeoutException.class,1);
        ts.assertErrorMessage(timeoutMessage(1,TimeUnit.SECONDS));
      }
 else {
        ts.assertValuesOnly(1);
      }
    }
 else {
      ts.assertFailure(TimeoutException.class);
      ts.assertErrorMessage(timeoutMessage(1,TimeUnit.SECONDS));
    }
  }
}
