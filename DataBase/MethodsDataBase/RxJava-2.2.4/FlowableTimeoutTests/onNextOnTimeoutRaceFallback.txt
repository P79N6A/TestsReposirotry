@Test public void onNextOnTimeoutRaceFallback(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final TestScheduler sch=new TestScheduler();
    final PublishProcessor<Integer> pp=PublishProcessor.create();
    TestSubscriber<Integer> ts=pp.timeout(1,TimeUnit.SECONDS,sch,Flowable.just(2)).test();
    Runnable r1=new Runnable(){
      @Override public void run(){
        pp.onNext(1);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        sch.advanceTimeBy(1,TimeUnit.SECONDS);
      }
    }
;
    TestHelper.race(r1,r2);
    if (ts.isTerminated()) {
      int c=ts.valueCount();
      if (c == 1) {
        int v=ts.values().get(0);
        assertTrue("" + v,v == 1 || v == 2);
      }
 else {
        ts.assertResult(1,2);
      }
    }
 else {
      ts.assertValuesOnly(1);
    }
  }
}
