@Test public void shouldTimeoutIfSynchronizedFlowableEmitFirstOnNextNotWithinTimeout() throws InterruptedException {
  final CountDownLatch exit=new CountDownLatch(1);
  final CountDownLatch timeoutSetuped=new CountDownLatch(1);
  final TestSubscriber<String> subscriber=new TestSubscriber<String>();
  new Thread(new Runnable(){
    @Override public void run(){
      Flowable.unsafeCreate(new Publisher<String>(){
        @Override public void subscribe(        Subscriber<? super String> subscriber){
          subscriber.onSubscribe(new BooleanSubscription());
          try {
            timeoutSetuped.countDown();
            exit.await();
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
          subscriber.onNext("a");
          subscriber.onComplete();
        }
      }
).timeout(1,TimeUnit.SECONDS,testScheduler).subscribe(subscriber);
    }
  }
).start();
  timeoutSetuped.await();
  testScheduler.advanceTimeBy(2,TimeUnit.SECONDS);
  subscriber.assertFailureAndMessage(TimeoutException.class,timeoutMessage(1,TimeUnit.SECONDS));
  exit.countDown();
}
