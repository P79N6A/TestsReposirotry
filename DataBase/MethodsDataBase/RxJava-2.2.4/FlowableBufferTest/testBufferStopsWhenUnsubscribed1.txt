@Test public void testBufferStopsWhenUnsubscribed1(){
  Flowable<Integer> source=Flowable.never();
  Subscriber<List<Integer>> subscriber=TestHelper.mockSubscriber();
  TestSubscriber<List<Integer>> ts=new TestSubscriber<List<Integer>>(subscriber,0L);
  source.buffer(100,200,TimeUnit.MILLISECONDS,scheduler).doOnNext(new Consumer<List<Integer>>(){
    @Override public void accept(    List<Integer> pv){
      System.out.println(pv);
    }
  }
).subscribe(ts);
  InOrder inOrder=Mockito.inOrder(subscriber);
  scheduler.advanceTimeBy(1001,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,times(5)).onNext(Arrays.<Integer>asList());
  ts.dispose();
  scheduler.advanceTimeBy(999,TimeUnit.MILLISECONDS);
  inOrder.verifyNoMoreInteractions();
}
