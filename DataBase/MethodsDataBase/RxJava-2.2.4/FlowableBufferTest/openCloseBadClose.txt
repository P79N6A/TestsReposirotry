@Test @SuppressWarnings("unchecked") public void openCloseBadClose(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Flowable.never().buffer(Flowable.just(1).concatWith(Flowable.<Integer>never()),Functions.justFunction(new Flowable<Object>(){
      @Override protected void subscribeActual(      Subscriber<? super Object> s){
        assertFalse(((Disposable)s).isDisposed());
        BooleanSubscription bs1=new BooleanSubscription();
        BooleanSubscription bs2=new BooleanSubscription();
        s.onSubscribe(bs1);
        assertFalse(bs1.isCancelled());
        assertFalse(bs2.isCancelled());
        s.onSubscribe(bs2);
        assertFalse(bs1.isCancelled());
        assertTrue(bs2.isCancelled());
        s.onError(new IOException());
        assertTrue(((Disposable)s).isDisposed());
        s.onComplete();
        s.onNext(1);
        s.onError(new TestException());
      }
    }
)).test().assertFailure(IOException.class);
    TestHelper.assertError(errors,0,ProtocolViolationException.class);
    TestHelper.assertUndeliverable(errors,1,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
