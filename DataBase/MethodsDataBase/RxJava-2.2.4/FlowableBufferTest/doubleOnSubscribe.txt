@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<List<Object>>>(){
    @Override public Publisher<List<Object>> apply(    Flowable<Object> f) throws Exception {
      return f.buffer(1);
    }
  }
);
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<List<Object>>>(){
    @Override public Publisher<List<Object>> apply(    Flowable<Object> f) throws Exception {
      return f.buffer(1,2);
    }
  }
);
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<List<Object>>>(){
    @Override public Publisher<List<Object>> apply(    Flowable<Object> f) throws Exception {
      return f.buffer(2,1);
    }
  }
);
}
