@Test public void testSkipAndCountOverlappingBuffers(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      subscriber.onNext("one");
      subscriber.onNext("two");
      subscriber.onNext("three");
      subscriber.onNext("four");
      subscriber.onNext("five");
    }
  }
);
  Flowable<List<String>> buffered=source.buffer(3,1);
  buffered.subscribe(subscriber);
  InOrder inOrder=Mockito.inOrder(subscriber);
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("one","two","three"));
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("two","three","four"));
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("three","four","five"));
  inOrder.verify(subscriber,Mockito.never()).onNext(Mockito.<String>anyList());
  inOrder.verify(subscriber,Mockito.never()).onError(Mockito.any(Throwable.class));
  inOrder.verify(subscriber,Mockito.never()).onComplete();
}
