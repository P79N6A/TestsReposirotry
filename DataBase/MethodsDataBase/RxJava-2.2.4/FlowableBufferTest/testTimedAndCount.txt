@Test public void testTimedAndCount(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      push(subscriber,"one",10);
      push(subscriber,"two",90);
      push(subscriber,"three",110);
      push(subscriber,"four",190);
      push(subscriber,"five",210);
      complete(subscriber,250);
    }
  }
);
  Flowable<List<String>> buffered=source.buffer(100,TimeUnit.MILLISECONDS,scheduler,2);
  buffered.subscribe(subscriber);
  InOrder inOrder=Mockito.inOrder(subscriber);
  scheduler.advanceTimeTo(100,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("one","two"));
  scheduler.advanceTimeTo(200,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("three","four"));
  scheduler.advanceTimeTo(300,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("five"));
  inOrder.verify(subscriber,Mockito.never()).onNext(Mockito.<String>anyList());
  inOrder.verify(subscriber,Mockito.never()).onError(Mockito.any(Throwable.class));
  inOrder.verify(subscriber,Mockito.times(1)).onComplete();
}
