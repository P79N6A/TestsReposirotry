@Test(timeout=3000) public void testBufferWithTimeDoesntUnsubscribeDownstream() throws InterruptedException {
  final Subscriber<Object> subscriber=TestHelper.mockSubscriber();
  final CountDownLatch cdl=new CountDownLatch(1);
  ResourceSubscriber<Object> s=new ResourceSubscriber<Object>(){
    @Override public void onNext(    Object t){
      subscriber.onNext(t);
    }
    @Override public void onError(    Throwable e){
      subscriber.onError(e);
      cdl.countDown();
    }
    @Override public void onComplete(){
      subscriber.onComplete();
      cdl.countDown();
    }
  }
;
  Flowable.range(1,1).delay(1,TimeUnit.SECONDS).buffer(2,TimeUnit.SECONDS).subscribe(s);
  cdl.await();
  verify(subscriber).onNext(Arrays.asList(1));
  verify(subscriber).onComplete();
  verify(subscriber,never()).onError(any(Throwable.class));
  assertFalse(s.isDisposed());
}
