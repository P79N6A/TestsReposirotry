@Test public void withTimeAndSizeCapacityRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final TestScheduler scheduler=new TestScheduler();
    final PublishProcessor<Object> pp=PublishProcessor.create();
    TestSubscriber<List<Object>> ts=pp.buffer(1,TimeUnit.SECONDS,scheduler,5).test();
    pp.onNext(1);
    pp.onNext(2);
    pp.onNext(3);
    pp.onNext(4);
    Runnable r1=new Runnable(){
      @Override public void run(){
        pp.onNext(5);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        scheduler.advanceTimeBy(1,TimeUnit.SECONDS);
      }
    }
;
    TestHelper.race(r1,r2);
    pp.onComplete();
    int items=0;
    for (    List<Object> o : ts.values()) {
      items+=o.size();
    }
    assertEquals("Round: " + i,5,items);
  }
}
