@Test public void bufferedCanCompleteIfOpenNeverCompletesOverlapping(){
  Flowable.range(1,50).zipWith(Flowable.interval(5,TimeUnit.MILLISECONDS),new BiFunction<Integer,Long,Integer>(){
    @Override public Integer apply(    Integer integer,    Long aLong){
      return integer;
    }
  }
).buffer(Flowable.interval(0,100,TimeUnit.MILLISECONDS),new Function<Long,Publisher<?>>(){
    @Override public Publisher<?> apply(    Long a){
      return Flowable.just(a).delay(200,TimeUnit.MILLISECONDS);
    }
  }
).test().assertSubscribed().awaitDone(3,TimeUnit.SECONDS).assertComplete();
}
