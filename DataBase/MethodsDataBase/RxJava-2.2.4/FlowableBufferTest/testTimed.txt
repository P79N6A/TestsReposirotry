@Test public void testTimed(){
  Flowable<String> source=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> subscriber){
      subscriber.onSubscribe(new BooleanSubscription());
      push(subscriber,"one",97);
      push(subscriber,"two",98);
      push(subscriber,"three",99);
      push(subscriber,"four",101);
      push(subscriber,"five",102);
      complete(subscriber,150);
    }
  }
);
  Flowable<List<String>> buffered=source.buffer(100,TimeUnit.MILLISECONDS,scheduler);
  buffered.subscribe(subscriber);
  InOrder inOrder=Mockito.inOrder(subscriber);
  scheduler.advanceTimeTo(101,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("one","two","three"));
  scheduler.advanceTimeTo(201,TimeUnit.MILLISECONDS);
  inOrder.verify(subscriber,Mockito.times(1)).onNext(list("four","five"));
  inOrder.verify(subscriber,Mockito.never()).onNext(Mockito.<String>anyList());
  inOrder.verify(subscriber,Mockito.never()).onError(Mockito.any(Throwable.class));
  inOrder.verify(subscriber,Mockito.times(1)).onComplete();
}
