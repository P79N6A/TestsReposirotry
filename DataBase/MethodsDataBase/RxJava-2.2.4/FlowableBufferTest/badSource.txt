@Test public void badSource(){
  TestHelper.checkBadSourceFlowable(new Function<Flowable<Integer>,Object>(){
    @Override public Object apply(    Flowable<Integer> f) throws Exception {
      return f.buffer(1);
    }
  }
,false,1,1,Arrays.asList(1));
  TestHelper.checkBadSourceFlowable(new Function<Flowable<Integer>,Object>(){
    @Override public Object apply(    Flowable<Integer> f) throws Exception {
      return f.buffer(1,2);
    }
  }
,false,1,1,Arrays.asList(1));
  TestHelper.checkBadSourceFlowable(new Function<Flowable<Integer>,Object>(){
    @Override public Object apply(    Flowable<Integer> f) throws Exception {
      return f.buffer(2,1);
    }
  }
,false,1,1,Arrays.asList(1));
}
