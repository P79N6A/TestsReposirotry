@Test public void error(){
  MaybeSubject<Integer> ms=MaybeSubject.create();
  assertFalse(ms.hasValue());
  assertNull(ms.getValue());
  assertFalse(ms.hasComplete());
  assertFalse(ms.hasThrowable());
  assertNull(ms.getThrowable());
  assertFalse(ms.hasObservers());
  assertEquals(0,ms.observerCount());
  TestObserver<Integer> to=ms.test();
  to.assertEmpty();
  assertTrue(ms.hasObservers());
  assertEquals(1,ms.observerCount());
  ms.onError(new IOException());
  assertFalse(ms.hasValue());
  assertNull(ms.getValue());
  assertFalse(ms.hasComplete());
  assertTrue(ms.hasThrowable());
  assertTrue(ms.getThrowable().toString(),ms.getThrowable() instanceof IOException);
  assertFalse(ms.hasObservers());
  assertEquals(0,ms.observerCount());
  to.assertFailure(IOException.class);
  ms.test().assertFailure(IOException.class);
  assertFalse(ms.hasValue());
  assertNull(ms.getValue());
  assertFalse(ms.hasComplete());
  assertTrue(ms.hasThrowable());
  assertTrue(ms.getThrowable().toString(),ms.getThrowable() instanceof IOException);
  assertFalse(ms.hasObservers());
  assertEquals(0,ms.observerCount());
}
