@Test @Ignore("Publishers should not throw") public void testResumeNextWithFailureOnSubscribeAsync(){
  Flowable<String> testObservable=Flowable.unsafeCreate(new Publisher<String>(){
    @Override public void subscribe(    Subscriber<? super String> t1){
      throw new RuntimeException("force failure");
    }
  }
);
  Flowable<String> resume=Flowable.just("resume");
  Flowable<String> flowable=testObservable.subscribeOn(Schedulers.io()).onErrorResumeNext(resume);
  Subscriber<String> subscriber=TestHelper.mockSubscriber();
  TestSubscriber<String> ts=new TestSubscriber<String>(subscriber,Long.MAX_VALUE);
  flowable.subscribe(ts);
  ts.awaitTerminalEvent();
  verify(subscriber,Mockito.never()).onError(any(Throwable.class));
  verify(subscriber,times(1)).onComplete();
  verify(subscriber,times(1)).onNext("resume");
}
