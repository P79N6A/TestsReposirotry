@Test public void testTerminateOnce(){
  ReplaySubject<Integer> source=ReplaySubject.create();
  source.onNext(1);
  source.onNext(2);
  source.onComplete();
  final Observer<Integer> o=TestHelper.mockObserver();
  source.subscribe(new DefaultObserver<Integer>(){
    @Override public void onNext(    Integer t){
      o.onNext(t);
    }
    @Override public void onError(    Throwable e){
      o.onError(e);
    }
    @Override public void onComplete(){
      o.onComplete();
    }
  }
);
  verify(o).onNext(1);
  verify(o).onNext(2);
  verify(o).onComplete();
  verify(o,never()).onError(any(Throwable.class));
}
