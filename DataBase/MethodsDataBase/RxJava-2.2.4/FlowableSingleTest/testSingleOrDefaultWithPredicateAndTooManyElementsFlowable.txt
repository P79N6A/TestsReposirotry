@Test public void testSingleOrDefaultWithPredicateAndTooManyElementsFlowable(){
  Flowable<Integer> flowable=Flowable.just(1,2,3,4).filter(new Predicate<Integer>(){
    @Override public boolean test(    Integer t1){
      return t1 % 2 == 0;
    }
  }
).single(6).toFlowable();
  Subscriber<Integer> subscriber=TestHelper.mockSubscriber();
  flowable.subscribe(subscriber);
  InOrder inOrder=inOrder(subscriber);
  inOrder.verify(subscriber,times(1)).onError(isA(IllegalArgumentException.class));
  inOrder.verifyNoMoreInteractions();
}
