@Test public void testSingleDoesNotRequestMoreThanItNeedsIf1Then2RequestedFlowable(){
  final List<Long> requests=new ArrayList<Long>();
  Flowable.just(1).doOnRequest(new LongConsumer(){
    @Override public void accept(    long n){
      requests.add(n);
    }
  }
).singleElement().toFlowable().subscribe(new DefaultSubscriber<Integer>(){
    @Override public void onStart(){
      request(1);
    }
    @Override public void onComplete(){
    }
    @Override public void onError(    Throwable e){
    }
    @Override public void onNext(    Integer t){
      request(2);
    }
  }
);
  assertEquals(Arrays.asList(Long.MAX_VALUE),requests);
}
