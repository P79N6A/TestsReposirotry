@Test public void badSource(){
  TestHelper.checkBadSourceFlowable(new Function<Flowable<Object>,Object>(){
    @Override public Object apply(    Flowable<Object> f) throws Exception {
      return f.singleOrError();
    }
  }
,false,1,1,1);
  TestHelper.checkBadSourceFlowable(new Function<Flowable<Object>,Object>(){
    @Override public Object apply(    Flowable<Object> f) throws Exception {
      return f.singleElement();
    }
  }
,false,1,1,1);
  TestHelper.checkBadSourceFlowable(new Function<Flowable<Object>,Object>(){
    @Override public Object apply(    Flowable<Object> f) throws Exception {
      return f.singleOrError().toFlowable();
    }
  }
,false,1,1,1);
}
