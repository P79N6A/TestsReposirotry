@Test public void singleElementOperatorDoNotSwallowExceptionWhenDone(){
  final Throwable exception=new RuntimeException("some error");
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();
  try {
    RxJavaPlugins.setErrorHandler(new Consumer<Throwable>(){
      @Override public void accept(      final Throwable throwable) throws Exception {
        error.set(throwable);
      }
    }
);
    Flowable.unsafeCreate(new Publisher<Integer>(){
      @Override public void subscribe(      final Subscriber<? super Integer> subscriber){
        subscriber.onComplete();
        subscriber.onError(exception);
      }
    }
).singleElement().test().assertComplete();
    assertSame(exception,error.get().getCause());
  }
  finally {
    RxJavaPlugins.reset();
  }
}
