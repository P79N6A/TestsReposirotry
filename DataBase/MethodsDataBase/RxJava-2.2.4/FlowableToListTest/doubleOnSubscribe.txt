@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Flowable<List<Object>>>(){
    @Override public Flowable<List<Object>> apply(    Flowable<Object> f) throws Exception {
      return f.toList().toFlowable();
    }
  }
);
  TestHelper.checkDoubleOnSubscribeFlowableToSingle(new Function<Flowable<Object>,Single<List<Object>>>(){
    @Override public Single<List<Object>> apply(    Flowable<Object> f) throws Exception {
      return f.toList();
    }
  }
);
}
