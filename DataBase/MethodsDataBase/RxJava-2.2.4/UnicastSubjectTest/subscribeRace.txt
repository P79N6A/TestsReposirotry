@Test public void subscribeRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final UnicastSubject<Integer> us=UnicastSubject.create();
    final TestObserver<Integer> to1=new TestObserver<Integer>();
    final TestObserver<Integer> to2=new TestObserver<Integer>();
    Runnable r1=new Runnable(){
      @Override public void run(){
        us.subscribe(to1);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        us.subscribe(to2);
      }
    }
;
    TestHelper.race(r1,r2);
    if (to1.errorCount() == 0) {
      to2.assertFailure(IllegalStateException.class);
    }
 else     if (to2.errorCount() == 0) {
      to1.assertFailure(IllegalStateException.class);
    }
 else {
      fail("Neither TestObserver failed");
    }
  }
}
