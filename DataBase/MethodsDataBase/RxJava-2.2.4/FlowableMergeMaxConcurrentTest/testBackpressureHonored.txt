@Test(timeout=5000) public void testBackpressureHonored() throws Exception {
  List<Flowable<Integer>> sourceList=new ArrayList<Flowable<Integer>>(3);
  sourceList.add(Flowable.range(0,100000).subscribeOn(Schedulers.io()));
  sourceList.add(Flowable.range(0,100000).subscribeOn(Schedulers.io()));
  sourceList.add(Flowable.range(0,100000).subscribeOn(Schedulers.io()));
  final CountDownLatch cdl=new CountDownLatch(5);
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>(0L){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      cdl.countDown();
    }
  }
;
  Flowable.merge(sourceList,2).subscribe(ts);
  ts.request(5);
  cdl.await();
  ts.assertNoErrors();
  ts.assertValueCount(5);
  ts.assertNotComplete();
  ts.dispose();
}
