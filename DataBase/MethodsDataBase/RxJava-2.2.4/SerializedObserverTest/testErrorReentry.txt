@Test public void testErrorReentry(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final AtomicReference<Observer<Integer>> serial=new AtomicReference<Observer<Integer>>();
    TestObserver<Integer> to=new TestObserver<Integer>(){
      @Override public void onNext(      Integer v){
        serial.get().onError(new TestException());
        serial.get().onError(new TestException());
        super.onNext(v);
      }
    }
;
    SerializedObserver<Integer> sobs=new SerializedObserver<Integer>(to);
    sobs.onSubscribe(Disposables.empty());
    serial.set(sobs);
    sobs.onNext(1);
    to.assertValue(1);
    to.assertError(TestException.class);
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
