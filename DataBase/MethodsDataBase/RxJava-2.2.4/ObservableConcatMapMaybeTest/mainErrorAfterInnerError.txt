@Test public void mainErrorAfterInnerError(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    new Observable<Integer>(){
      @Override protected void subscribeActual(      Observer<? super Integer> observer){
        observer.onSubscribe(Disposables.empty());
        observer.onNext(1);
        observer.onError(new TestException("outer"));
      }
    }
.concatMapMaybe(Functions.justFunction(Maybe.error(new TestException("inner"))),1).test().assertFailureAndMessage(TestException.class,"inner");
    TestHelper.assertUndeliverable(errors,0,TestException.class,"outer");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
