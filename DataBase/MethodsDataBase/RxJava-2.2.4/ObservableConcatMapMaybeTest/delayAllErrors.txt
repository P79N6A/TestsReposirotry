@Test public void delayAllErrors(){
  Observable.range(1,5).concatMapMaybeDelayError(new Function<Integer,MaybeSource<? extends Object>>(){
    @Override public MaybeSource<? extends Object> apply(    Integer v) throws Exception {
      return Maybe.error(new TestException());
    }
  }
).test().assertFailure(CompositeException.class).assertOf(new Consumer<TestObserver<Object>>(){
    @Override public void accept(    TestObserver<Object> to) throws Exception {
      CompositeException ce=(CompositeException)to.errors().get(0);
      assertEquals(5,ce.getExceptions().size());
    }
  }
);
}
