@Test public void upstreamDisposedWhenOutputsDisposed(){
  PublishSubject<Integer> source=PublishSubject.create();
  PublishSubject<Integer> boundary=PublishSubject.create();
  TestObserver<Integer> to=source.window(boundary).take(1).flatMap(new Function<Observable<Integer>,ObservableSource<Integer>>(){
    @Override public ObservableSource<Integer> apply(    Observable<Integer> w) throws Exception {
      return w.take(1);
    }
  }
).test();
  source.onNext(1);
  assertFalse("source not disposed",source.hasObservers());
  assertFalse("boundary not disposed",boundary.hasObservers());
  to.assertResult(1);
}
