@Test public void testWindowNoDuplication(){
  final PublishSubject<Integer> source=PublishSubject.create();
  final TestObserver<Integer> tow=new TestObserver<Integer>(){
    boolean once;
    @Override public void onNext(    Integer t){
      if (!once) {
        once=true;
        source.onNext(2);
      }
      super.onNext(t);
    }
  }
;
  TestObserver<Observable<Integer>> to=new TestObserver<Observable<Integer>>(){
    @Override public void onNext(    Observable<Integer> t){
      t.subscribe(tow);
      super.onNext(t);
    }
  }
;
  source.window(new Callable<Observable<Object>>(){
    @Override public Observable<Object> call(){
      return Observable.never();
    }
  }
).subscribe(to);
  source.onNext(1);
  source.onComplete();
  to.assertValueCount(1);
  tow.assertValues(1,2);
}
