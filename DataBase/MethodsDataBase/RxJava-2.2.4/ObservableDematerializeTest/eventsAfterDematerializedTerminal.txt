@Test public void eventsAfterDematerializedTerminal(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    new Observable<Object>(){
      @Override protected void subscribeActual(      Observer<? super Object> observer){
        observer.onSubscribe(Disposables.empty());
        observer.onNext(Notification.createOnComplete());
        observer.onNext(Notification.createOnNext(1));
        observer.onNext(Notification.createOnError(new TestException("First")));
        observer.onError(new TestException("Second"));
      }
    }
.dematerialize().test().assertResult();
    TestHelper.assertUndeliverable(errors,0,TestException.class,"First");
    TestHelper.assertUndeliverable(errors,1,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
