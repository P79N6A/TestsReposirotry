@Test public void redoCancel(){
  final TestObserver<Integer> to=new TestObserver<Integer>();
  Observable.just(1).repeatWhen(new Function<Observable<Object>,ObservableSource<Object>>(){
    @Override public ObservableSource<Object> apply(    Observable<Object> o) throws Exception {
      return o.map(new Function<Object,Object>(){
        int count;
        @Override public Object apply(        Object v) throws Exception {
          if (++count == 1) {
            to.cancel();
          }
          return v;
        }
      }
);
    }
  }
).subscribe(to);
}
