@Test public void reentrant(){
  final Subject<Integer> ps=PublishSubject.<Integer>create();
  TestObserver<Integer> to=new TestObserver<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      if (t == 1) {
        ps.onNext(2);
        ps.onComplete();
      }
    }
  }
;
  ps.window(BehaviorSubject.createDefault(1),Functions.justFunction(Observable.never())).flatMap(new Function<Observable<Integer>,ObservableSource<Integer>>(){
    @Override public ObservableSource<Integer> apply(    Observable<Integer> v) throws Exception {
      return v;
    }
  }
).subscribe(to);
  ps.onNext(1);
  to.awaitDone(1,TimeUnit.SECONDS).assertResult(1,2);
}
