@Test public void boundarySelectorNormal(){
  PublishSubject<Integer> source=PublishSubject.create();
  PublishSubject<Integer> start=PublishSubject.create();
  final PublishSubject<Integer> end=PublishSubject.create();
  TestObserver<Integer> to=source.window(start,new Function<Integer,ObservableSource<Integer>>(){
    @Override public ObservableSource<Integer> apply(    Integer v) throws Exception {
      return end;
    }
  }
).flatMap(Functions.<Observable<Integer>>identity()).test();
  start.onNext(0);
  source.onNext(1);
  source.onNext(2);
  source.onNext(3);
  source.onNext(4);
  start.onNext(1);
  source.onNext(5);
  source.onNext(6);
  end.onNext(1);
  start.onNext(2);
  TestHelper.emit(source,7,8);
  to.assertResult(1,2,3,4,5,5,6,6,7,8);
}
