@Test public void windowCloseIngoresCancel(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    BehaviorSubject.createDefault(1).window(BehaviorSubject.createDefault(1),new Function<Integer,Observable<Integer>>(){
      @Override public Observable<Integer> apply(      Integer f) throws Exception {
        return new Observable<Integer>(){
          @Override protected void subscribeActual(          Observer<? super Integer> observer){
            observer.onSubscribe(Disposables.empty());
            observer.onNext(1);
            observer.onNext(2);
            observer.onError(new TestException());
          }
        }
;
      }
    }
).test().assertValueCount(1).assertNoErrors().assertNotComplete();
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
