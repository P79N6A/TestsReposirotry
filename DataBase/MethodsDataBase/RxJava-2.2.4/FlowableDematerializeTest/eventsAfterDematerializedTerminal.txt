@Test public void eventsAfterDematerializedTerminal(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    new Flowable<Object>(){
      @Override protected void subscribeActual(      Subscriber<? super Object> subscriber){
        subscriber.onSubscribe(new BooleanSubscription());
        subscriber.onNext(Notification.createOnComplete());
        subscriber.onNext(Notification.createOnNext(1));
        subscriber.onNext(Notification.createOnError(new TestException("First")));
        subscriber.onError(new TestException("Second"));
      }
    }
.dematerialize().test().assertResult();
    TestHelper.assertUndeliverable(errors,0,TestException.class,"First");
    TestHelper.assertUndeliverable(errors,1,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
