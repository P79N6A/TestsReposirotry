@Test public void doubleOnError(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    @SuppressWarnings("rawtypes") final Subscriber[] sub={null};
    new Flowable<Integer>(){
      @Override protected void subscribeActual(      Subscriber<? super Integer> s){
        sub[0]=s;
        s.onSubscribe(new BooleanSubscription());
        s.onNext(1);
        s.onError(new TestException("First"));
      }
    }
.concatMapEager(Functions.justFunction(Flowable.just(1))).test().assertFailureAndMessage(TestException.class,"First",1);
    sub[0].onError(new TestException("Second"));
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
