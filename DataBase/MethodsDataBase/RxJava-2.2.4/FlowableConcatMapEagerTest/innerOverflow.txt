@Test public void innerOverflow(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Flowable.just(1).concatMapEager(new Function<Integer,Publisher<Integer>>(){
      @Override public Publisher<Integer> apply(      Integer v) throws Exception {
        return new Flowable<Integer>(){
          @Override protected void subscribeActual(          Subscriber<? super Integer> s){
            s.onSubscribe(new BooleanSubscription());
            s.onNext(1);
            s.onNext(2);
            s.onError(new TestException());
          }
        }
;
      }
    }
,1,1).test(0L).assertFailure(MissingBackpressureException.class);
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
