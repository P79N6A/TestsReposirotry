@Test public void testMaxConcurrent5(){
  final List<Long> requests=new ArrayList<Long>();
  Flowable.range(1,100).doOnRequest(new LongConsumer(){
    @Override public void accept(    long reqCount){
      requests.add(reqCount);
    }
  }
).concatMapEager(toJust,5,Flowable.bufferSize()).subscribe(ts);
  ts.assertNoErrors();
  ts.assertValueCount(100);
  ts.assertComplete();
  Assert.assertEquals(5,(long)requests.get(0));
  Assert.assertEquals(1,(long)requests.get(1));
  Assert.assertEquals(1,(long)requests.get(2));
  Assert.assertEquals(1,(long)requests.get(3));
  Assert.assertEquals(1,(long)requests.get(4));
  Assert.assertEquals(1,(long)requests.get(5));
}
