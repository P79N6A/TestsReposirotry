@Test public void timeoutConsumerDoubleOnSubscribe(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    BehaviorProcessor.createDefault(1).timeout(Functions.justFunction(new Flowable<Integer>(){
      @Override protected void subscribeActual(      Subscriber<? super Integer> s){
        BooleanSubscription bs1=new BooleanSubscription();
        s.onSubscribe(bs1);
        BooleanSubscription bs2=new BooleanSubscription();
        s.onSubscribe(bs2);
        assertFalse(bs1.isCancelled());
        assertTrue(bs2.isCancelled());
        s.onComplete();
      }
    }
)).test().assertFailure(TimeoutException.class,1);
    TestHelper.assertError(errors,0,ProtocolViolationException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
