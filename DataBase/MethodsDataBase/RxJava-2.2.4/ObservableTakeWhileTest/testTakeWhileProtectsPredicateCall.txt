@Test public void testTakeWhileProtectsPredicateCall(){
  TestObservable source=new TestObservable(mock(Disposable.class),"one");
  final RuntimeException testException=new RuntimeException("test exception");
  Observer<String> observer=TestHelper.mockObserver();
  Observable<String> take=Observable.unsafeCreate(source).takeWhile(new Predicate<String>(){
    @Override public boolean test(    String s){
      throw testException;
    }
  }
);
  take.subscribe(observer);
  try {
    source.t.join();
  }
 catch (  Throwable e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  verify(observer,never()).onNext(any(String.class));
  verify(observer,times(1)).onError(testException);
}
