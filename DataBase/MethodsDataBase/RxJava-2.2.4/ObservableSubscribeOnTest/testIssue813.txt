@Test(timeout=2000) public void testIssue813() throws InterruptedException {
  final CountDownLatch scheduled=new CountDownLatch(1);
  final CountDownLatch latch=new CountDownLatch(1);
  final CountDownLatch doneLatch=new CountDownLatch(1);
  TestObserver<Integer> to=new TestObserver<Integer>();
  Observable.unsafeCreate(new ObservableSource<Integer>(){
    @Override public void subscribe(    final Observer<? super Integer> observer){
      observer.onSubscribe(Disposables.empty());
      scheduled.countDown();
      try {
        try {
          latch.await();
        }
 catch (        InterruptedException e) {
        }
        observer.onComplete();
      }
 catch (      Throwable e) {
        observer.onError(e);
      }
 finally {
        doneLatch.countDown();
      }
    }
  }
).subscribeOn(Schedulers.computation()).subscribe(to);
  scheduled.await();
  to.dispose();
  latch.countDown();
  doneLatch.await();
  to.assertNoErrors();
  to.assertComplete();
}
