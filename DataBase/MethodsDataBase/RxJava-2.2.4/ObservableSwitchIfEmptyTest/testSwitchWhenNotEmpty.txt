@Test public void testSwitchWhenNotEmpty() throws Exception {
  final AtomicBoolean subscribed=new AtomicBoolean(false);
  final Observable<Integer> o=Observable.just(4).switchIfEmpty(Observable.just(2).doOnSubscribe(new Consumer<Disposable>(){
    @Override public void accept(    Disposable d){
      subscribed.set(true);
    }
  }
));
  assertEquals(4,o.blockingSingle().intValue());
  assertFalse(subscribed.get());
}
