@Test public void overflowSlowpath(){
  @SuppressWarnings("unchecked") final Subscriber<? super Integer>[] subs=new Subscriber[1];
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>(1){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      subs[0].onNext(2);
      subs[0].onNext(3);
    }
  }
;
  new ParallelFlowable<Integer>(){
    @Override public void subscribe(    Subscriber<? super Integer>[] subscribers){
      subs[0]=subscribers[0];
      subscribers[0].onSubscribe(new BooleanSubscription());
      subscribers[0].onNext(1);
    }
    @Override public int parallelism(){
      return 1;
    }
  }
.sequential(1).subscribe(ts);
  ts.assertFailure(MissingBackpressureException.class,1);
}
