@Test public void noCancelPrevious(){
  final AtomicInteger counter=new AtomicInteger();
  Observable.range(1,5).concatMap(new Function<Integer,ObservableSource<Integer>>(){
    @Override public ObservableSource<Integer> apply(    Integer v) throws Exception {
      return Observable.just(v).doOnDispose(new Action(){
        @Override public void run() throws Exception {
          counter.getAndIncrement();
        }
      }
);
    }
  }
).test().assertResult(1,2,3,4,5);
  assertEquals(0,counter.get());
}
