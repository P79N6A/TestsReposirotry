@Test public void reentrantNoOverflowHidden(){
  final PublishSubject<Integer> ps=PublishSubject.create();
  TestObserver<Integer> to=ps.concatMap(new Function<Integer,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Integer v) throws Exception {
      return Observable.just(v + 1).hide();
    }
  }
,1).subscribeWith(new TestObserver<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      if (t == 1) {
        for (int i=1; i < 10; i++) {
          ps.onNext(i);
        }
        ps.onComplete();
      }
    }
  }
);
  ps.onNext(0);
  to.assertResult(1,2,3,4,5,6,7,8,9,10);
}
