@Test public void testErrorDelayed4WithThreading(){
  final TestAsyncErrorObservable o1=new TestAsyncErrorObservable("one","two","three");
  final TestAsyncErrorObservable o2=new TestAsyncErrorObservable("four","five","six");
  final TestAsyncErrorObservable o3=new TestAsyncErrorObservable("seven","eight");
  final TestAsyncErrorObservable o4=new TestAsyncErrorObservable("nine",null);
  Observable<String> m=Observable.mergeDelayError(Observable.unsafeCreate(o1),Observable.unsafeCreate(o2),Observable.unsafeCreate(o3),Observable.unsafeCreate(o4));
  m.subscribe(stringObserver);
  try {
    o1.t.join();
    o2.t.join();
    o3.t.join();
    o4.t.join();
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
  verify(stringObserver,times(1)).onNext("one");
  verify(stringObserver,times(1)).onNext("two");
  verify(stringObserver,times(1)).onNext("three");
  verify(stringObserver,times(1)).onNext("four");
  verify(stringObserver,times(1)).onNext("five");
  verify(stringObserver,times(1)).onNext("six");
  verify(stringObserver,times(1)).onNext("seven");
  verify(stringObserver,times(1)).onNext("eight");
  verify(stringObserver,times(1)).onNext("nine");
  verify(stringObserver,times(1)).onError(any(NullPointerException.class));
  verify(stringObserver,never()).onComplete();
}
