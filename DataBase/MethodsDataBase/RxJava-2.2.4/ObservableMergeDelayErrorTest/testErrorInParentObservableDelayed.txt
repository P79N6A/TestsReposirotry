@Test public void testErrorInParentObservableDelayed() throws Exception {
  for (int i=0; i < 50; i++) {
    final TestASynchronous1sDelayedObservable o1=new TestASynchronous1sDelayedObservable();
    final TestASynchronous1sDelayedObservable o2=new TestASynchronous1sDelayedObservable();
    Observable<Observable<String>> parentObservable=Observable.unsafeCreate(new ObservableSource<Observable<String>>(){
      @Override public void subscribe(      Observer<? super Observable<String>> op){
        op.onSubscribe(Disposables.empty());
        op.onNext(Observable.unsafeCreate(o1));
        op.onNext(Observable.unsafeCreate(o2));
        op.onError(new NullPointerException("throwing exception in parent"));
      }
    }
);
    Observer<String> stringObserver=TestHelper.mockObserver();
    TestObserver<String> to=new TestObserver<String>(stringObserver);
    Observable<String> m=Observable.mergeDelayError(parentObservable);
    m.subscribe(to);
    System.out.println("testErrorInParentObservableDelayed | " + i);
    to.awaitTerminalEvent(2000,TimeUnit.MILLISECONDS);
    to.assertTerminated();
    verify(stringObserver,times(2)).onNext("hello");
    verify(stringObserver,times(1)).onError(any(NullPointerException.class));
    verify(stringObserver,never()).onComplete();
  }
}
