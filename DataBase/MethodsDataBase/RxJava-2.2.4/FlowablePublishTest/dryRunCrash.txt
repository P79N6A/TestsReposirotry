@Test public void dryRunCrash(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final TestSubscriber<Object> ts=new TestSubscriber<Object>(1L){
      @Override public void onNext(      Object t){
        super.onNext(t);
        onComplete();
        cancel();
      }
    }
;
    Flowable.range(1,10).map(new Function<Integer,Object>(){
      @Override public Object apply(      Integer v) throws Exception {
        if (v == 2) {
          throw new TestException();
        }
        return v;
      }
    }
).publish().autoConnect().subscribe(ts);
    ts.assertResult(1);
    TestHelper.assertUndeliverable(errors,0,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
