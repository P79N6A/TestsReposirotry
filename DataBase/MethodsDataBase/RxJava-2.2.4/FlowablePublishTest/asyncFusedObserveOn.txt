@Test public void asyncFusedObserveOn(){
  ConnectableFlowable<Integer> cf=Flowable.range(0,1000).observeOn(ImmediateThinScheduler.INSTANCE).publish();
  for (int i=0; i < 1000; i++) {
    for (int j=1; j < 6; j++) {
      List<TestSubscriber<Integer>> tss=new ArrayList<TestSubscriber<Integer>>();
      for (int k=1; k < j; k++) {
        TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
        tss.add(ts);
        cf.subscribe(ts);
      }
      Disposable connection=cf.connect();
      for (      TestSubscriber<Integer> ts : tss) {
        ts.awaitDone(5,TimeUnit.SECONDS).assertSubscribed().assertValueCount(1000).assertNoErrors().assertComplete();
      }
      connection.dispose();
    }
  }
}
