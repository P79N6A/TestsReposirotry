@Test public void dispose(){
  TestHelper.checkDisposed(Observable.just(1).groupJoin(Observable.just(2),new Function<Integer,ObservableSource<Object>>(){
    @Override public ObservableSource<Object> apply(    Integer left) throws Exception {
      return Observable.never();
    }
  }
,new Function<Integer,ObservableSource<Object>>(){
    @Override public ObservableSource<Object> apply(    Integer right) throws Exception {
      return Observable.never();
    }
  }
,new BiFunction<Integer,Observable<Integer>,Object>(){
    @Override public Object apply(    Integer r,    Observable<Integer> l) throws Exception {
      return l;
    }
  }
));
}
