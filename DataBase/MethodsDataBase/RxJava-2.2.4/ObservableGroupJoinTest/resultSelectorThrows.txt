@Test public void resultSelectorThrows(){
  PublishSubject<Integer> source1=PublishSubject.create();
  PublishSubject<Integer> source2=PublishSubject.create();
  BiFunction<Integer,Observable<Integer>,Integer> fail=new BiFunction<Integer,Observable<Integer>,Integer>(){
    @Override public Integer apply(    Integer t1,    Observable<Integer> t2){
      throw new RuntimeException("Forced failure");
    }
  }
;
  Observable<Integer> m=source1.groupJoin(source2,just(Observable.never()),just(Observable.never()),fail);
  m.subscribe(observer);
  source1.onNext(1);
  source2.onNext(2);
  verify(observer,times(1)).onError(any(Throwable.class));
  verify(observer,never()).onComplete();
  verify(observer,never()).onNext(any());
}
