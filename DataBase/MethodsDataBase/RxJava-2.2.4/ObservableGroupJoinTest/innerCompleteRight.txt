@Test public void innerCompleteRight(){
  Observable.just(1).groupJoin(Observable.just(2),new Function<Integer,ObservableSource<Object>>(){
    @Override public ObservableSource<Object> apply(    Integer left) throws Exception {
      return Observable.never();
    }
  }
,new Function<Integer,ObservableSource<Object>>(){
    @Override public ObservableSource<Object> apply(    Integer right) throws Exception {
      return Observable.empty();
    }
  }
,new BiFunction<Integer,Observable<Integer>,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Integer r,    Observable<Integer> l) throws Exception {
      return l;
    }
  }
).flatMap(Functions.<Observable<Integer>>identity()).test().assertResult(2);
}
