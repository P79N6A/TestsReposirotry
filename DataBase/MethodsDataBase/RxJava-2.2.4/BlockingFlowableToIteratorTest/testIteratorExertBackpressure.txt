@Test public void testIteratorExertBackpressure(){
  final Counter src=new Counter();
  Flowable<Integer> obs=Flowable.fromIterable(new Iterable<Integer>(){
    @Override public Iterator<Integer> iterator(){
      return src;
    }
  }
);
  Iterator<Integer> it=obs.blockingIterable().iterator();
  while (it.hasNext()) {
    int i=it.next();
    int expected=i - (i % (Flowable.bufferSize() - (Flowable.bufferSize() >> 2))) + Flowable.bufferSize();
    expected=Math.min(expected,Counter.MAX);
    assertEquals(expected,src.count);
  }
}
