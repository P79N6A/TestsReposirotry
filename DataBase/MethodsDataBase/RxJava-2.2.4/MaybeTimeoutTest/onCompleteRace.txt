@Test public void onCompleteRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final PublishProcessor<Integer> pp1=PublishProcessor.create();
    final PublishProcessor<Integer> pp2=PublishProcessor.create();
    TestObserver<Integer> to=pp1.singleElement().timeout(pp2.singleElement()).test();
    Runnable r1=new Runnable(){
      @Override public void run(){
        pp1.onComplete();
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        pp2.onComplete();
      }
    }
;
    TestHelper.race(r1,r2);
    to.assertSubscribed().assertNoValues();
    if (to.errorCount() != 0) {
      to.assertError(TimeoutException.class).assertNotComplete();
    }
 else {
      to.assertNoErrors().assertComplete();
    }
  }
}
