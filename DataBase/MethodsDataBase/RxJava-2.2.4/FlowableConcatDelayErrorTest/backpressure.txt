@Test public void backpressure(){
  TestSubscriber<Integer> ts=TestSubscriber.create(0);
  Flowable.range(1,3).concatMapDelayError(new Function<Integer,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Integer v){
      return Flowable.range(v,2);
    }
  }
).subscribe(ts);
  ts.assertNoValues();
  ts.assertNoErrors();
  ts.assertNotComplete();
  ts.request(1);
  ts.assertValues(1);
  ts.assertNoErrors();
  ts.assertNotComplete();
  ts.request(3);
  ts.assertValues(1,2,2,3);
  ts.assertNoErrors();
  ts.assertNotComplete();
  ts.request(2);
  ts.assertValues(1,2,2,3,3,4);
  ts.assertNoErrors();
  ts.assertComplete();
}
