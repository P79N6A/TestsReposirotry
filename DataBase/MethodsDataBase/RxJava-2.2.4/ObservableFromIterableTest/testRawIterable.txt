/** 
 * This tests the path that can not optimize based on size so must use setProducer.
 */
@Test public void testRawIterable(){
  Iterable<String> it=new Iterable<String>(){
    @Override public Iterator<String> iterator(){
      return new Iterator<String>(){
        int i;
        @Override public boolean hasNext(){
          return i < 3;
        }
        @Override public String next(){
          return String.valueOf(++i);
        }
        @Override public void remove(){
        }
      }
;
    }
  }
;
  Observable<String> o=Observable.fromIterable(it);
  Observer<String> observer=TestHelper.mockObserver();
  o.subscribe(observer);
  verify(observer,times(1)).onNext("1");
  verify(observer,times(1)).onNext("2");
  verify(observer,times(1)).onNext("3");
  verify(observer,Mockito.never()).onError(any(Throwable.class));
  verify(observer,times(1)).onComplete();
}
