@Test public void fusionClear(){
  Observable.fromIterable(Arrays.asList(1,2,3)).subscribe(new Observer<Integer>(){
    @Override public void onSubscribe(    Disposable d){
      @SuppressWarnings("unchecked") QueueDisposable<Integer> qd=(QueueDisposable<Integer>)d;
      qd.requestFusion(QueueFuseable.ANY);
      try {
        assertEquals(1,qd.poll().intValue());
      }
 catch (      Throwable ex) {
        fail(ex.toString());
      }
      qd.clear();
      try {
        assertNull(qd.poll());
      }
 catch (      Throwable ex) {
        fail(ex.toString());
      }
    }
    @Override public void onNext(    Integer value){
    }
    @Override public void onError(    Throwable e){
    }
    @Override public void onComplete(){
    }
  }
);
}
