@Test public void noInterrupt() throws InterruptedException {
  for (int k=0; k < 100; k++) {
    final int count=10;
    final CountDownLatch latch=new CountDownLatch(count);
    final boolean[] interrupted={false};
    for (int i=0; i < count; i++) {
      Completable c0=Completable.fromAction(new Action(){
        @Override public void run() throws Exception {
          try {
            Thread.sleep(30);
          }
 catch (          InterruptedException e) {
            System.out.println("Interrupted! " + Thread.currentThread());
            interrupted[0]=true;
          }
        }
      }
);
      Completable.concat(Arrays.asList(Completable.complete().subscribeOn(Schedulers.io()).observeOn(Schedulers.io()),c0)).subscribe(new Action(){
        @Override public void run() throws Exception {
          latch.countDown();
        }
      }
);
    }
    latch.await();
    assertFalse("The second Completable was interrupted!",interrupted[0]);
  }
}
