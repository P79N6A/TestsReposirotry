@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<Object>>(){
    @Override public Publisher<Object> apply(    Flowable<Object> f) throws Exception {
      return f.doFinally(FlowableDoFinallyTest.this);
    }
  }
);
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<Object>>(){
    @Override public Publisher<Object> apply(    Flowable<Object> f) throws Exception {
      return f.doFinally(FlowableDoFinallyTest.this).filter(Functions.alwaysTrue());
    }
  }
);
}
