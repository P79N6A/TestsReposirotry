@Test public void drainRequestWhenLimitReached(){
  final PublishProcessor<Integer> pp=PublishProcessor.create();
  final SingleSubject<Integer> cs=SingleSubject.create();
  TestSubscriber<Integer> ts=pp.mergeWith(cs).subscribeWith(new TestSubscriber<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      if (t == 1) {
        for (int i=0; i < Flowable.bufferSize() - 1; i++) {
          pp.onNext(i + 2);
        }
      }
    }
  }
);
  cs.onSuccess(1);
  pp.onComplete();
  ts.request(2);
  ts.assertValueCount(Flowable.bufferSize());
  ts.assertComplete();
}
