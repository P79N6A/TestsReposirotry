@Test public void async3(){
  Single.just(1).flattenAsFlowable(new Function<Object,Iterable<Integer>>(){
    @Override public Iterable<Integer> apply(    Object v) throws Exception {
      Integer[] array=new Integer[1000 * 1000];
      Arrays.fill(array,1);
      return Arrays.asList(array);
    }
  }
).take(500 * 1000).observeOn(Schedulers.single()).test().awaitDone(5,TimeUnit.SECONDS).assertSubscribed().assertValueCount(500 * 1000).assertNoErrors().assertComplete();
}
