/** 
 * Make sure emission-subscription races are handled correctly. https://github.com/ReactiveX/RxJava/issues/1147
 */
@Test public void testRaceForTerminalState(){
  final List<Integer> expected=Arrays.asList(1);
  for (int i=0; i < 100000; i++) {
    TestObserver<Integer> to=new TestObserver<Integer>();
    Observable.just(1).subscribeOn(Schedulers.computation()).cache().subscribe(to);
    to.awaitTerminalEvent();
    to.assertValueSequence(expected);
    to.assertTerminated();
  }
}
