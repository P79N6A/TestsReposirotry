@Test public void checkFiles() throws Exception {
  File f=MaybeNo2Dot0Since.findSource("Flowable");
  if (f == null) {
    return;
  }
  Queue<File> dirs=new ArrayDeque<File>();
  File parent=f.getParentFile();
  dirs.offer(parent);
  StringBuilder fail=new StringBuilder();
  while (!dirs.isEmpty()) {
    f=dirs.poll();
    File[] list=f.listFiles();
    if (list != null && list.length != 0) {
      for (      File u : list) {
        if (u.isDirectory()) {
          dirs.offer(u);
        }
 else {
          if (u.getName().endsWith(".java")) {
            List<String> lines=new ArrayList<String>();
            BufferedReader in=new BufferedReader(new FileReader(u));
            try {
              for (; ; ) {
                String line=in.readLine();
                if (line == null) {
                  break;
                }
                lines.add(line);
              }
            }
  finally {
              in.close();
            }
            String clazz=u.getAbsolutePath().replace('\\','/');
            int idx=clazz.indexOf("/io/reactivex/");
            clazz=clazz.substring(idx + 14).replace(".java","");
            processFile(fail,lines,clazz,u.getName());
          }
        }
      }
    }
  }
  if (fail.length() != 0) {
    System.out.println(fail);
    throw new AssertionError(fail.toString());
  }
}
