@Test public void emissionQueueTrigger(){
  final PublishSubject<Integer> ps1=PublishSubject.create();
  final PublishSubject<Integer> ps2=PublishSubject.create();
  TestObserver<Integer> to=new TestObserver<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      if (t == 1) {
        ps2.onNext(2);
        ps2.onComplete();
      }
    }
  }
;
  Observable.just(ps1,ps2).flatMapMaybe(new Function<PublishSubject<Integer>,MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> apply(    PublishSubject<Integer> v) throws Exception {
      return v.singleElement();
    }
  }
).subscribe(to);
  ps1.onNext(1);
  ps1.onComplete();
  to.assertResult(1,2);
}
