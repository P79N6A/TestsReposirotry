@Test public void blockingSubscribeObserverError(){
  final List<Object> list=new ArrayList<Object>();
  final TestException ex=new TestException();
  Observable.range(1,5).concatWith(Observable.<Integer>error(ex)).subscribeOn(Schedulers.computation()).blockingSubscribe(new Observer<Object>(){
    @Override public void onSubscribe(    Disposable d){
    }
    @Override public void onNext(    Object value){
      list.add(value);
    }
    @Override public void onError(    Throwable e){
      list.add(e);
    }
    @Override public void onComplete(){
      list.add(100);
    }
  }
);
  assertEquals(Arrays.asList(1,2,3,4,5,ex),list);
}
