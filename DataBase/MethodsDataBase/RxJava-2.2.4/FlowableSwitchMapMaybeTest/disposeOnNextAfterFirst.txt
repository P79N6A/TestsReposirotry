@Test public void disposeOnNextAfterFirst(){
  final TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable.just(1,2).switchMapMaybe(new Function<Integer,MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> apply(    Integer v) throws Exception {
      if (v == 2) {
        ts.cancel();
      }
      return Maybe.just(1);
    }
  }
).subscribe(ts);
  ts.assertValue(1).assertNoErrors().assertNotComplete();
}
