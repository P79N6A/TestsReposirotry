@Test public void nextInnerSuccessRace(){
  for (int i=0; i < TestHelper.RACE_LONG_LOOPS; i++) {
    final PublishProcessor<Integer> pp=PublishProcessor.create();
    final MaybeSubject<Integer> ms=MaybeSubject.create();
    final TestSubscriber<Integer> ts=pp.switchMapMaybeDelayError(new Function<Integer,MaybeSource<Integer>>(){
      @Override public MaybeSource<Integer> apply(      Integer v) throws Exception {
        if (v == 1) {
          return ms;
        }
        return Maybe.empty();
      }
    }
).test();
    pp.onNext(1);
    Runnable r1=new Runnable(){
      @Override public void run(){
        pp.onNext(2);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        ms.onSuccess(3);
      }
    }
;
    TestHelper.race(r1,r2);
    ts.assertNoErrors().assertNotComplete();
  }
}
