@Test public void disposeOnCurrentThread() throws Exception {
  ExecutorService exec=Executors.newSingleThreadExecutor();
  try {
    InstantPeriodicTask task=new InstantPeriodicTask(new Runnable(){
      @Override public void run(){
        throw new TestException();
      }
    }
,exec);
    task.runner=Thread.currentThread();
    task.dispose();
    FutureTask<Void> f1=new FutureTask<Void>(Functions.EMPTY_RUNNABLE,null);
    task.setFirst(f1);
    assertTrue(f1.isCancelled());
    FutureTask<Void> f2=new FutureTask<Void>(Functions.EMPTY_RUNNABLE,null);
    task.setRest(f2);
    assertTrue(f2.isCancelled());
  }
  finally {
    exec.shutdownNow();
    RxJavaPlugins.reset();
  }
}
