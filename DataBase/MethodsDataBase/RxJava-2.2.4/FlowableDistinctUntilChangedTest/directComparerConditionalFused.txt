@Test public void directComparerConditionalFused(){
  Flowable.fromArray(1,2,2,3,2,4,1,1,2).distinctUntilChanged(new BiPredicate<Integer,Integer>(){
    @Override public boolean test(    Integer a,    Integer b){
      return a.equals(b);
    }
  }
).filter(new Predicate<Integer>(){
    @Override public boolean test(    Integer v){
      return true;
    }
  }
).to(SubscriberFusion.<Integer>test(Long.MAX_VALUE,QueueFuseable.ANY,false)).assertOf(SubscriberFusion.<Integer>assertFuseable()).assertOf(SubscriberFusion.<Integer>assertFusionMode(QueueFuseable.SYNC)).assertResult(1,2,3,2,4,1,2);
}
