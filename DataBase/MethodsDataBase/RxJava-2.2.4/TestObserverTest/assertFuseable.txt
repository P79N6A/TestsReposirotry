@Test public void assertFuseable(){
  TestObserver<Integer> to=TestObserver.create();
  to.onSubscribe(Disposables.empty());
  to.assertNotFuseable();
  try {
    to.assertFuseable();
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
  try {
    to.assertFusionMode(QueueFuseable.SYNC);
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
  to=TestObserver.create();
  to.setInitialFusionMode(QueueFuseable.ANY);
  to.onSubscribe(new ScalarDisposable<Integer>(to,1));
  to.assertFuseable();
  to.assertFusionMode(QueueFuseable.SYNC);
  try {
    to.assertFusionMode(QueueFuseable.NONE);
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
  try {
    to.assertNotFuseable();
    throw new RuntimeException("Should have thrown");
  }
 catch (  AssertionError ex) {
  }
}
