@Test(timeout=5000) public void await() throws Exception {
  TestObserver<Integer> to=TestObserver.create();
  to.onSubscribe(Disposables.empty());
  assertFalse(to.await(100,TimeUnit.MILLISECONDS));
  to.awaitDone(100,TimeUnit.MILLISECONDS);
  assertTrue(to.isDisposed());
  assertFalse(to.awaitTerminalEvent(100,TimeUnit.MILLISECONDS));
  assertEquals(0,to.completions());
  assertEquals(0,to.errorCount());
  to.onComplete();
  assertTrue(to.await(100,TimeUnit.MILLISECONDS));
  to.await();
  to.awaitDone(5,TimeUnit.SECONDS);
  assertEquals(1,to.completions());
  assertEquals(0,to.errorCount());
  assertTrue(to.awaitTerminalEvent());
  final TestObserver<Integer> to1=TestObserver.create();
  to1.onSubscribe(Disposables.empty());
  Schedulers.single().scheduleDirect(new Runnable(){
    @Override public void run(){
      to1.onComplete();
    }
  }
,200,TimeUnit.MILLISECONDS);
  to1.await();
  to1.assertValueSet(Collections.<Integer>emptySet());
}
