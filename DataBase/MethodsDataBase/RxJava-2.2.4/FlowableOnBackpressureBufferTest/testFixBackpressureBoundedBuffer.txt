@Test public void testFixBackpressureBoundedBuffer() throws InterruptedException {
  final CountDownLatch l1=new CountDownLatch(100);
  final CountDownLatch backpressureCallback=new CountDownLatch(1);
  TestSubscriber<Long> ts=new TestSubscriber<Long>(new DefaultSubscriber<Long>(){
    @Override protected void onStart(){
    }
    @Override public void onComplete(){
    }
    @Override public void onError(    Throwable e){
    }
    @Override public void onNext(    Long t){
      l1.countDown();
    }
  }
,0L);
  ts.request(100);
  infinite.subscribeOn(Schedulers.computation()).onBackpressureBuffer(500,new Action(){
    @Override public void run(){
      backpressureCallback.countDown();
    }
  }
).subscribe(ts);
  l1.await();
  ts.request(50);
  assertTrue(backpressureCallback.await(500,TimeUnit.MILLISECONDS));
  ts.awaitTerminalEvent(1,TimeUnit.SECONDS);
  ts.assertError(MissingBackpressureException.class);
  int size=ts.values().size();
  assertTrue(size <= 150);
  assertTrue(ts.values().get(size - 1) == size - 1);
}
