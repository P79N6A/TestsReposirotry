@Test public void recursionFromOuterActionAndUnsubscribeInside() throws InterruptedException {
  final CountDownLatch latch=new CountDownLatch(1);
  final Worker inner=getScheduler().createWorker();
  try {
    inner.schedule(new Runnable(){
      int i;
      @Override public void run(){
        i++;
        if (i % 100000 == 0) {
          System.out.println(i + "  Total Memory: " + Runtime.getRuntime().totalMemory()+ "  Free: "+ Runtime.getRuntime().freeMemory());
        }
        if (i < 1000000L) {
          inner.schedule(this);
        }
 else {
          latch.countDown();
        }
      }
    }
);
    latch.await();
  }
  finally {
    inner.dispose();
  }
}
