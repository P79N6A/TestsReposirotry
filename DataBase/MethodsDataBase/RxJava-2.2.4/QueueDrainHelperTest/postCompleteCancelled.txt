@Test public void postCompleteCancelled(){
  final TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  ArrayDeque<Integer> queue=new ArrayDeque<Integer>();
  AtomicLong state=new AtomicLong();
  BooleanSupplier isCancelled=new BooleanSupplier(){
    @Override public boolean getAsBoolean() throws Exception {
      return ts.isCancelled();
    }
  }
;
  ts.onSubscribe(new BooleanSubscription());
  queue.offer(1);
  state.getAndIncrement();
  ts.cancel();
  QueueDrainHelper.postComplete(ts,queue,state,isCancelled);
  ts.assertEmpty();
}
