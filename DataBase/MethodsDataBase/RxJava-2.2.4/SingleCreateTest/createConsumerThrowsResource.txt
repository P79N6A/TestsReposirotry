@Test public void createConsumerThrowsResource(){
  Single.create(new SingleOnSubscribe<Object>(){
    @Override public void subscribe(    SingleEmitter<Object> s) throws Exception {
      Disposable d=Disposables.empty();
      s.setDisposable(d);
      try {
        s.onSuccess(1);
        fail("Should have thrown");
      }
 catch (      TestException ex) {
      }
      assertTrue(d.isDisposed());
    }
  }
).subscribe(new SingleObserver<Object>(){
    @Override public void onSubscribe(    Disposable d){
    }
    @Override public void onSuccess(    Object value){
      throw new TestException();
    }
    @Override public void onError(    Throwable e){
    }
  }
);
}
