/** 
 * Make sure emission-subscription races are handled correctly. https://github.com/ReactiveX/RxJava/issues/1147
 */
@Test public void testRaceForTerminalState(){
  final List<Integer> expected=Arrays.asList(1);
  for (int i=0; i < 100000; i++) {
    TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
    Flowable.just(1).subscribeOn(Schedulers.computation()).cache().subscribe(ts);
    ts.awaitTerminalEvent();
    ts.assertValueSequence(expected);
    ts.assertTerminated();
  }
}
