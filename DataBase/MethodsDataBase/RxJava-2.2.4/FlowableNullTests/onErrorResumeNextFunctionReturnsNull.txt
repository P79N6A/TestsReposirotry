@Test public void onErrorResumeNextFunctionReturnsNull(){
  try {
    Flowable.error(new TestException()).onErrorResumeNext(new Function<Throwable,Publisher<Object>>(){
      @Override public Publisher<Object> apply(      Throwable e){
        return null;
      }
    }
).blockingSubscribe();
    fail("Should have thrown");
  }
 catch (  CompositeException ex) {
    List<Throwable> errors=ex.getExceptions();
    TestHelper.assertError(errors,0,TestException.class);
    TestHelper.assertError(errors,1,NullPointerException.class);
    assertEquals(2,errors.size());
  }
}
