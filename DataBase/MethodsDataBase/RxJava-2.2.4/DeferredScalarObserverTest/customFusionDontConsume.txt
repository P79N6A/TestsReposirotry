@Test public void customFusionDontConsume(){
  final TestObserver<Integer> to=new TestObserver<Integer>();
  TakeFirst source=new TakeFirst(new Observer<Integer>(){
    QueueDisposable<Integer> d;
    @SuppressWarnings("unchecked") @Override public void onSubscribe(    Disposable d){
      this.d=(QueueDisposable<Integer>)d;
      to.onSubscribe(d);
      this.d.requestFusion(QueueFuseable.ANY);
    }
    @Override public void onNext(    Integer value){
    }
    @Override public void onError(    Throwable e){
      to.onError(e);
    }
    @Override public void onComplete(){
      to.onComplete();
    }
  }
);
  source.onSubscribe(Disposables.empty());
  source.onNext(1);
  to.assertNoValues().assertNoErrors().assertComplete();
}
