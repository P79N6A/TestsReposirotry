@Test public void testToMultimapWithErrorObservable(){
  Observable<String> source=Observable.just("a","b","cc","dd");
  Function<String,Integer> lengthFuncErr=new Function<String,Integer>(){
    @Override public Integer apply(    String t1){
      if ("b".equals(t1)) {
        throw new RuntimeException("Forced Failure");
      }
      return t1.length();
    }
  }
;
  Observable<Map<Integer,Collection<String>>> mapped=source.toMultimap(lengthFuncErr).toObservable();
  Map<Integer,Collection<String>> expected=new HashMap<Integer,Collection<String>>();
  expected.put(1,Arrays.asList("a","b"));
  expected.put(2,Arrays.asList("cc","dd"));
  mapped.subscribe(objectObserver);
  verify(objectObserver,times(1)).onError(any(Throwable.class));
  verify(objectObserver,never()).onNext(expected);
  verify(objectObserver,never()).onComplete();
}
