@Test public void cancelScalarDrainRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    List<Throwable> errors=TestHelper.trackPluginErrors();
    try {
      final PublishProcessor<Flowable<Integer>> pp=PublishProcessor.create();
      final TestSubscriber<Integer> ts=pp.flatMap(Functions.<Flowable<Integer>>identity()).test(0);
      Runnable r1=new Runnable(){
        @Override public void run(){
          ts.cancel();
        }
      }
;
      Runnable r2=new Runnable(){
        @Override public void run(){
          pp.onComplete();
        }
      }
;
      TestHelper.race(r1,r2);
      assertTrue(errors.toString(),errors.isEmpty());
    }
  finally {
      RxJavaPlugins.reset();
    }
  }
}
