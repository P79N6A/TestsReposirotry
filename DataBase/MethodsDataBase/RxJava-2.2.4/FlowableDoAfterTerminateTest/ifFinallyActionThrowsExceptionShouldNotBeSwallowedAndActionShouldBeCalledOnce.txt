@Test public void ifFinallyActionThrowsExceptionShouldNotBeSwallowedAndActionShouldBeCalledOnce() throws Exception {
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Action finallyAction=Mockito.mock(Action.class);
    doThrow(new IllegalStateException()).when(finallyAction).run();
    TestSubscriber<String> testSubscriber=new TestSubscriber<String>();
    Flowable.just("value").doAfterTerminate(finallyAction).subscribe(testSubscriber);
    testSubscriber.assertValue("value");
    verify(finallyAction).run();
    TestHelper.assertError(errors,0,IllegalStateException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
