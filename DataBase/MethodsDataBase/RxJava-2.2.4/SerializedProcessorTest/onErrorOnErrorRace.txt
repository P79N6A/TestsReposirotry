@Test public void onErrorOnErrorRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final FlowableProcessor<Integer> s=PublishProcessor.<Integer>create().toSerialized();
    TestSubscriber<Integer> ts=s.test();
    final TestException ex=new TestException();
    List<Throwable> errors=TestHelper.trackPluginErrors();
    try {
      Runnable r1=new Runnable(){
        @Override public void run(){
          s.onError(ex);
        }
      }
;
      Runnable r2=new Runnable(){
        @Override public void run(){
          s.onError(ex);
        }
      }
;
      TestHelper.race(r1,r2);
      ts.assertFailure(TestException.class);
      TestHelper.assertUndeliverable(errors,0,TestException.class);
    }
  finally {
      RxJavaPlugins.reset();
    }
  }
}
