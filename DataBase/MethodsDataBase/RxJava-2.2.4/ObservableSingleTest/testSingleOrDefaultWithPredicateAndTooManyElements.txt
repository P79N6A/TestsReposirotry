@Test public void testSingleOrDefaultWithPredicateAndTooManyElements(){
  Single<Integer> o=Observable.just(1,2,3,4).filter(new Predicate<Integer>(){
    @Override public boolean test(    Integer t1){
      return t1 % 2 == 0;
    }
  }
).single(6);
  SingleObserver<Integer> observer=TestHelper.mockSingleObserver();
  o.subscribe(observer);
  InOrder inOrder=inOrder(observer);
  inOrder.verify(observer,times(1)).onError(isA(IllegalArgumentException.class));
  inOrder.verifyNoMoreInteractions();
}
