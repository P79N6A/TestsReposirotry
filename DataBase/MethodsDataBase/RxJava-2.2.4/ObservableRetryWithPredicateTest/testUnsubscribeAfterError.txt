@Test(timeout=10000) public void testUnsubscribeAfterError(){
  Observer<Long> observer=TestHelper.mockObserver();
  ObservableRetryTest.SlowObservable so=new ObservableRetryTest.SlowObservable(100,0,"testUnsubscribeAfterError");
  Observable<Long> o=Observable.unsafeCreate(so).retry(retry5);
  ObservableRetryTest.AsyncObserver<Long> async=new ObservableRetryTest.AsyncObserver<Long>(observer);
  o.subscribe(async);
  async.await();
  InOrder inOrder=inOrder(observer);
  inOrder.verify(observer,times(1)).onError(any(Throwable.class));
  inOrder.verify(observer,never()).onComplete();
  assertEquals("Start 6 threads, retry 5 then fail on 6",6,so.efforts.get());
  assertEquals("Only 1 active subscription",1,so.maxActive.get());
}
