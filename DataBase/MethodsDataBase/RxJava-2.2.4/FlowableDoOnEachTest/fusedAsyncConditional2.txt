@Test public void fusedAsyncConditional2(){
  TestSubscriber<Integer> ts=SubscriberFusion.newTest(QueueFuseable.ANY);
  final int[] call={0,0};
  UnicastProcessor<Integer> up=UnicastProcessor.create();
  up.hide().doOnNext(new Consumer<Integer>(){
    @Override public void accept(    Integer v) throws Exception {
      call[0]++;
    }
  }
).doOnComplete(new Action(){
    @Override public void run() throws Exception {
      call[1]++;
    }
  }
).filter(Functions.alwaysTrue()).subscribe(ts);
  TestHelper.emit(up,1,2,3,4,5);
  ts.assertOf(SubscriberFusion.<Integer>assertFuseable()).assertOf(SubscriberFusion.<Integer>assertFusionMode(QueueFuseable.NONE)).assertResult(1,2,3,4,5);
  assertEquals(5,call[0]);
  assertEquals(1,call[1]);
}
