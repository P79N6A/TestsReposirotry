@Test public void onErrorOnErrorCrashConditional(){
  TestSubscriber<Object> ts=Flowable.error(new TestException("Outer")).doOnError(new Consumer<Throwable>(){
    @Override public void accept(    Throwable e) throws Exception {
      throw new TestException("Inner");
    }
  }
).filter(Functions.alwaysTrue()).test().assertFailure(CompositeException.class);
  List<Throwable> errors=TestHelper.compositeList(ts.errors().get(0));
  TestHelper.assertError(errors,0,TestException.class,"Outer");
  TestHelper.assertError(errors,1,TestException.class,"Inner");
}
