@Test public void manyIteratorThrows(){
  Flowable.just(1).withLatestFrom(new CrashingMappedIterable<Flowable<Integer>>(1,100,100,new Function<Integer,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Integer v) throws Exception {
      return Flowable.just(2);
    }
  }
),new Function<Object[],Object>(){
    @Override public Object apply(    Object[] a) throws Exception {
      return a;
    }
  }
).test().assertFailureAndMessage(TestException.class,"iterator()");
}
