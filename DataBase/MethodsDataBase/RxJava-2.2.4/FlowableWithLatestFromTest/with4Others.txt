@Test public void with4Others(){
  Flowable<Integer> just=Flowable.just(1);
  TestSubscriber<List<Integer>> ts=new TestSubscriber<List<Integer>>();
  just.withLatestFrom(just,just,just,just,new Function5<Integer,Integer,Integer,Integer,Integer,List<Integer>>(){
    @Override public List<Integer> apply(    Integer a,    Integer b,    Integer c,    Integer d,    Integer e){
      return Arrays.asList(a,b,c,d,e);
    }
  }
).subscribe(ts);
  ts.assertValue(Arrays.asList(1,1,1,1,1));
  ts.assertNoErrors();
  ts.assertComplete();
}
