/** 
 * Outdated test: throwing from onError handler. https://github.com/ReactiveX/RxJava/issues/969
 */
@Ignore("v2 components should not throw") @Test public void testOnErrorExceptionIsThrown(){
  try {
    Observable.error(new IllegalArgumentException("original exception")).subscribe(new Observer<Object>(){
      @Override public void onSubscribe(      Disposable d){
      }
      @Override public void onComplete(){
      }
      @Override public void onError(      Throwable e){
        throw new IllegalStateException("This should be thrown");
      }
      @Override public void onNext(      Object o){
      }
    }
);
    fail("expecting an exception to be thrown");
  }
 catch (  RuntimeException t) {
    CompositeException cause=(CompositeException)t.getCause();
    assertTrue(cause.getExceptions().get(0) instanceof IllegalArgumentException);
    assertTrue(cause.getExceptions().get(1) instanceof IllegalStateException);
  }
}
