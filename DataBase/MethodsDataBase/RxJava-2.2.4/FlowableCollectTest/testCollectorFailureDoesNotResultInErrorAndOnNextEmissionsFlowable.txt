@Test public void testCollectorFailureDoesNotResultInErrorAndOnNextEmissionsFlowable(){
  final RuntimeException e=new RuntimeException();
  final AtomicBoolean added=new AtomicBoolean();
  BiConsumer<Object,Integer> throwOnFirstOnly=new BiConsumer<Object,Integer>(){
    boolean once=true;
    @Override public void accept(    Object o,    Integer t){
      if (once) {
        once=false;
        throw e;
      }
 else {
        added.set(true);
      }
    }
  }
;
  Burst.items(1,2).create().collect(callableListCreator(),throwOnFirstOnly).toFlowable().test().assertError(e).assertNoValues().assertNotComplete();
  assertFalse(added.get());
}
