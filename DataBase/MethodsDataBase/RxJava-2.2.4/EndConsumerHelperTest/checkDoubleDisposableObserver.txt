@Test public void checkDoubleDisposableObserver(){
  Observer<Integer> consumer=new DisposableObserver<Integer>(){
    @Override public void onNext(    Integer t){
    }
    @Override public void onError(    Throwable t){
    }
    @Override public void onComplete(){
    }
  }
;
  Disposable sub1=Disposables.empty();
  consumer.onSubscribe(sub1);
  assertFalse(sub1.isDisposed());
  Disposable sub2=Disposables.empty();
  consumer.onSubscribe(sub2);
  assertFalse(sub1.isDisposed());
  assertTrue(sub2.isDisposed());
  TestHelper.assertError(errors,0,ProtocolViolationException.class);
  assertEquals(EndConsumerHelper.composeMessage(consumer.getClass().getName()),errors.get(0).getMessage());
  assertEquals(errors.toString(),1,errors.size());
}
