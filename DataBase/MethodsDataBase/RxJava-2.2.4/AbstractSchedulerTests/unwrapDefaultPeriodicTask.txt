@Test(timeout=5000) public void unwrapDefaultPeriodicTask() throws InterruptedException {
  Scheduler s=getScheduler();
  if (s instanceof TrampolineScheduler) {
    return;
  }
  final CountDownLatch cdl=new CountDownLatch(1);
  Runnable countDownRunnable=new Runnable(){
    @Override public void run(){
      cdl.countDown();
    }
  }
;
  Disposable disposable=s.schedulePeriodicallyDirect(countDownRunnable,100,100,TimeUnit.MILLISECONDS);
  SchedulerRunnableIntrospection wrapper=(SchedulerRunnableIntrospection)disposable;
  assertSame(countDownRunnable,wrapper.getWrappedRunnable());
  assertTrue(cdl.await(5,TimeUnit.SECONDS));
  disposable.dispose();
}
