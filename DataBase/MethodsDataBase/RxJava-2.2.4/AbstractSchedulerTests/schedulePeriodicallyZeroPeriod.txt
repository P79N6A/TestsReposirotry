@Test(timeout=10000) public void schedulePeriodicallyZeroPeriod() throws Exception {
  Scheduler s=getScheduler();
  if (s instanceof TrampolineScheduler) {
    return;
  }
  for (int initial=0; initial < 2; initial++) {
    final CountDownLatch cdl=new CountDownLatch(1);
    final SequentialDisposable sd=new SequentialDisposable();
    Scheduler.Worker w=s.createWorker();
    try {
      sd.replace(w.schedulePeriodically(new Runnable(){
        int count;
        @Override public void run(){
          if (++count == 10) {
            sd.dispose();
            cdl.countDown();
          }
        }
      }
,initial,0,TimeUnit.MILLISECONDS));
      assertTrue("" + initial,cdl.await(5,TimeUnit.SECONDS));
    }
  finally {
      sd.dispose();
      w.dispose();
    }
  }
}
