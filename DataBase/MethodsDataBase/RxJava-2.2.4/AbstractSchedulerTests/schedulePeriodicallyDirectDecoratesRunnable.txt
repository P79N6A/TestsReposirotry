@Test(timeout=6000) public void schedulePeriodicallyDirectDecoratesRunnable() throws InterruptedException {
  final Scheduler scheduler=getScheduler();
  if (scheduler instanceof TrampolineScheduler) {
    return;
  }
  final AtomicReference<Disposable> disposable=new AtomicReference<Disposable>();
  try {
    assertRunnableDecorated(new Runnable(){
      @Override public void run(){
        disposable.set(scheduler.schedulePeriodicallyDirect(Functions.EMPTY_RUNNABLE,1,10000,TimeUnit.MILLISECONDS));
      }
    }
);
  }
  finally {
    disposable.get().dispose();
  }
}
