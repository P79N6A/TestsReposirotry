@Test public final void testRecursiveExecutionWithDelayTime() throws InterruptedException {
  Scheduler scheduler=getScheduler();
  final Scheduler.Worker inner=scheduler.createWorker();
  try {
    final AtomicInteger i=new AtomicInteger();
    final CountDownLatch latch=new CountDownLatch(1);
    inner.schedule(new Runnable(){
      int state;
      @Override public void run(){
        i.set(state);
        if (state++ < 100) {
          inner.schedule(this,1,TimeUnit.MILLISECONDS);
        }
 else {
          latch.countDown();
        }
      }
    }
);
    latch.await();
    assertEquals(100,i.get());
  }
  finally {
    inner.dispose();
  }
}
