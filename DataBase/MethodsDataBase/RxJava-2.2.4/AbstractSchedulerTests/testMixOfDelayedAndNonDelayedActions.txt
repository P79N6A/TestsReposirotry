@Test public void testMixOfDelayedAndNonDelayedActions() throws InterruptedException {
  Scheduler scheduler=getScheduler();
  final Scheduler.Worker inner=scheduler.createWorker();
  try {
    final CountDownLatch latch=new CountDownLatch(1);
    final Runnable first=mock(Runnable.class);
    final Runnable second=mock(Runnable.class);
    final Runnable third=mock(Runnable.class);
    final Runnable fourth=mock(Runnable.class);
    inner.schedule(new Runnable(){
      @Override public void run(){
        inner.schedule(first);
        inner.schedule(second,300,TimeUnit.MILLISECONDS);
        inner.schedule(third,100,TimeUnit.MILLISECONDS);
        inner.schedule(fourth);
        inner.schedule(new Runnable(){
          @Override public void run(){
            latch.countDown();
          }
        }
,400,TimeUnit.MILLISECONDS);
      }
    }
);
    latch.await();
    InOrder inOrder=inOrder(first,second,third,fourth);
    inOrder.verify(first,times(1)).run();
    inOrder.verify(fourth,times(1)).run();
    inOrder.verify(third,times(1)).run();
    inOrder.verify(second,times(1)).run();
  }
  finally {
    inner.dispose();
  }
}
