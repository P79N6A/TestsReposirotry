/** 
 * Make sure we get a MissingBackpressureException propagated through when we have a fast temporal (hot) producer.
 */
@Test public void testHotOperatorBackpressure(){
  TestSubscriber<String> ts=new TestSubscriber<String>();
  Flowable.interval(0,1,TimeUnit.MICROSECONDS).observeOn(Schedulers.computation()).map(new Function<Long,String>(){
    @Override public String apply(    Long t1){
      System.out.println(t1);
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
      }
      return t1 + " slow value";
    }
  }
).subscribe(ts);
  ts.awaitTerminalEvent();
  System.out.println("Errors: " + ts.errors());
  assertEquals(1,ts.errors().size());
  assertEquals(MissingBackpressureException.class,ts.errors().get(0).getClass());
}
