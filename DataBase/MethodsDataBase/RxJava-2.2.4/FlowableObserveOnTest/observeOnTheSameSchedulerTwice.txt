@Test public void observeOnTheSameSchedulerTwice(){
  Scheduler scheduler=ImmediateThinScheduler.INSTANCE;
  Flowable<Integer> f=Flowable.just(1,2,3);
  Flowable<Integer> f2=f.observeOn(scheduler);
  Subscriber<Object> subscriber1=TestHelper.mockSubscriber();
  Subscriber<Object> subscriber2=TestHelper.mockSubscriber();
  InOrder inOrder1=inOrder(subscriber1);
  InOrder inOrder2=inOrder(subscriber2);
  f2.subscribe(subscriber1);
  f2.subscribe(subscriber2);
  inOrder1.verify(subscriber1,times(1)).onNext(1);
  inOrder1.verify(subscriber1,times(1)).onNext(2);
  inOrder1.verify(subscriber1,times(1)).onNext(3);
  inOrder1.verify(subscriber1,times(1)).onComplete();
  verify(subscriber1,never()).onError(any(Throwable.class));
  inOrder1.verifyNoMoreInteractions();
  inOrder2.verify(subscriber2,times(1)).onNext(1);
  inOrder2.verify(subscriber2,times(1)).onNext(2);
  inOrder2.verify(subscriber2,times(1)).onNext(3);
  inOrder2.verify(subscriber2,times(1)).onComplete();
  verify(subscriber2,never()).onError(any(Throwable.class));
  inOrder2.verifyNoMoreInteractions();
}
