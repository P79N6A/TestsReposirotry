@Test public void flatMapTwoNestedSync(){
  for (  final int n : new int[]{1,1000,1000000}) {
    TestObserver<Integer> to=new TestObserver<Integer>();
    Observable.just(1,2).flatMap(new Function<Integer,Observable<Integer>>(){
      @Override public Observable<Integer> apply(      Integer t){
        return Observable.range(1,n);
      }
    }
).subscribe(to);
    System.out.println("flatMapTwoNestedSync >> @ " + n);
    to.assertNoErrors();
    to.assertComplete();
    to.assertValueCount(n * 2);
  }
}
