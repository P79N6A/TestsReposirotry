@Test public void testFlatMapTransformsOnErrorFuncThrows(){
  Observable<Integer> onNext=Observable.fromIterable(Arrays.asList(1,2,3));
  Observable<Integer> onComplete=Observable.fromIterable(Arrays.asList(4));
  Observable<Integer> onError=Observable.fromIterable(Arrays.asList(5));
  Observable<Integer> source=Observable.error(new TestException());
  Observer<Object> o=TestHelper.mockObserver();
  source.flatMap(just(onNext),funcThrow((Throwable)null,onError),just0(onComplete)).subscribe(o);
  verify(o).onError(any(CompositeException.class));
  verify(o,never()).onNext(any());
  verify(o,never()).onComplete();
}
