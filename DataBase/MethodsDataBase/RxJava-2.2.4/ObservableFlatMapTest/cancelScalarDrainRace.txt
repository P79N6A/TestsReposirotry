@Test public void cancelScalarDrainRace(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    List<Throwable> errors=TestHelper.trackPluginErrors();
    try {
      final PublishSubject<Observable<Integer>> ps=PublishSubject.create();
      final TestObserver<Integer> to=ps.flatMap(Functions.<Observable<Integer>>identity()).test();
      Runnable r1=new Runnable(){
        @Override public void run(){
          to.cancel();
        }
      }
;
      Runnable r2=new Runnable(){
        @Override public void run(){
          ps.onComplete();
        }
      }
;
      TestHelper.race(r1,r2);
      assertTrue(errors.toString(),errors.isEmpty());
    }
  finally {
      RxJavaPlugins.reset();
    }
  }
}
