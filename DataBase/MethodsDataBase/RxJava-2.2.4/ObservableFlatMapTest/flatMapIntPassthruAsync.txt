@Test public void flatMapIntPassthruAsync(){
  for (int i=0; i < 1000; i++) {
    TestObserver<Integer> to=new TestObserver<Integer>();
    Observable.range(1,1000).flatMap(new Function<Integer,Observable<Integer>>(){
      @Override public Observable<Integer> apply(      Integer t){
        return Observable.just(1).subscribeOn(Schedulers.computation());
      }
    }
).subscribe(to);
    to.awaitTerminalEvent(5,TimeUnit.SECONDS);
    to.assertNoErrors();
    to.assertComplete();
    to.assertValueCount(1000);
  }
}
