@SuppressWarnings("unchecked") @Test public void testSubscriptionOnlyHappensOnce() throws InterruptedException {
  final AtomicLong count=new AtomicLong();
  Consumer<Disposable> incrementer=new Consumer<Disposable>(){
    @Override public void accept(    Disposable d){
      count.incrementAndGet();
    }
  }
;
  Observable<Integer> o1=Observable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());
  Observable<Integer> o2=Observable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());
  TestObserver<Integer> to=new TestObserver<Integer>();
  Observable.ambArray(o1,o2).subscribe(to);
  to.awaitTerminalEvent(5,TimeUnit.SECONDS);
  to.assertNoErrors();
  assertEquals(2,count.get());
}
