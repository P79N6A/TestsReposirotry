@Test public void testMaterialize1(){
  final TestAsyncErrorObservable o1=new TestAsyncErrorObservable("one","two",null,"three");
  TestLocalObserver observer=new TestLocalObserver();
  Observable<Notification<String>> m=Observable.unsafeCreate(o1).materialize();
  m.subscribe(observer);
  try {
    o1.t.join();
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
  assertFalse(observer.onError);
  assertTrue(observer.onComplete);
  assertEquals(3,observer.notifications.size());
  assertTrue(observer.notifications.get(0).isOnNext());
  assertEquals("one",observer.notifications.get(0).getValue());
  assertTrue(observer.notifications.get(1).isOnNext());
  assertEquals("two",observer.notifications.get(1).getValue());
  assertTrue(observer.notifications.get(2).isOnError());
  assertEquals(NullPointerException.class,observer.notifications.get(2).getError().getClass());
}
