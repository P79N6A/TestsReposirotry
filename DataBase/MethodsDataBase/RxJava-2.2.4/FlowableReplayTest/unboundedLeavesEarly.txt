@Test public void unboundedLeavesEarly(){
  PublishProcessor<Integer> source=PublishProcessor.create();
  final List<Long> requests=new ArrayList<Long>();
  Flowable<Integer> out=source.doOnRequest(new LongConsumer(){
    @Override public void accept(    long t){
      requests.add(t);
    }
  }
).replay().autoConnect();
  TestSubscriber<Integer> ts1=new TestSubscriber<Integer>(5L);
  TestSubscriber<Integer> ts2=new TestSubscriber<Integer>(10L);
  out.subscribe(ts1);
  out.subscribe(ts2);
  ts2.dispose();
  Assert.assertEquals(Arrays.asList(5L,5L),requests);
}
