@Test public void testWindowedReplayError(){
  TestScheduler scheduler=new TestScheduler();
  PublishProcessor<Integer> source=PublishProcessor.create();
  ConnectableFlowable<Integer> cf=source.replay(100,TimeUnit.MILLISECONDS,scheduler);
  cf.connect();
{
    Subscriber<Object> subscriber1=TestHelper.mockSubscriber();
    InOrder inOrder=inOrder(subscriber1);
    cf.subscribe(subscriber1);
    source.onNext(1);
    scheduler.advanceTimeBy(60,TimeUnit.MILLISECONDS);
    source.onNext(2);
    scheduler.advanceTimeBy(60,TimeUnit.MILLISECONDS);
    source.onNext(3);
    scheduler.advanceTimeBy(60,TimeUnit.MILLISECONDS);
    source.onError(new RuntimeException("Forced failure"));
    scheduler.advanceTimeBy(60,TimeUnit.MILLISECONDS);
    inOrder.verify(subscriber1,times(1)).onNext(1);
    inOrder.verify(subscriber1,times(1)).onNext(2);
    inOrder.verify(subscriber1,times(1)).onNext(3);
    inOrder.verify(subscriber1,times(1)).onError(any(RuntimeException.class));
    inOrder.verifyNoMoreInteractions();
    verify(subscriber1,never()).onComplete();
  }
{
    Subscriber<Object> subscriber1=TestHelper.mockSubscriber();
    InOrder inOrder=inOrder(subscriber1);
    cf.subscribe(subscriber1);
    inOrder.verify(subscriber1,never()).onNext(3);
    inOrder.verify(subscriber1,times(1)).onError(any(RuntimeException.class));
    inOrder.verifyNoMoreInteractions();
    verify(subscriber1,never()).onComplete();
  }
}
