@Test public void testDelayErrorMaxConcurrent(){
  final List<Long> requests=new ArrayList<Long>();
  Flowable<Integer> source=Flowable.mergeDelayError(Flowable.just(Flowable.just(1).hide(),Flowable.<Integer>error(new TestException())).doOnRequest(new LongConsumer(){
    @Override public void accept(    long t1){
      requests.add(t1);
    }
  }
),1);
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  source.subscribe(ts);
  ts.assertValue(1);
  ts.assertTerminated();
  ts.assertError(TestException.class);
  assertEquals(Arrays.asList(1L,1L,1L),requests);
}
