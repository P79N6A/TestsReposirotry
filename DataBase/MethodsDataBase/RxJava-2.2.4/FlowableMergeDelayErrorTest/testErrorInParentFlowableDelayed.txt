@Test public void testErrorInParentFlowableDelayed() throws Exception {
  for (int i=0; i < 50; i++) {
    final TestASynchronous1sDelayedFlowable f1=new TestASynchronous1sDelayedFlowable();
    final TestASynchronous1sDelayedFlowable f2=new TestASynchronous1sDelayedFlowable();
    Flowable<Flowable<String>> parentFlowable=Flowable.unsafeCreate(new Publisher<Flowable<String>>(){
      @Override public void subscribe(      Subscriber<? super Flowable<String>> op){
        op.onSubscribe(new BooleanSubscription());
        op.onNext(Flowable.unsafeCreate(f1));
        op.onNext(Flowable.unsafeCreate(f2));
        op.onError(new NullPointerException("throwing exception in parent"));
      }
    }
);
    stringSubscriber=TestHelper.mockSubscriber();
    TestSubscriber<String> ts=new TestSubscriber<String>(stringSubscriber);
    Flowable<String> m=Flowable.mergeDelayError(parentFlowable);
    m.subscribe(ts);
    System.out.println("testErrorInParentFlowableDelayed | " + i);
    ts.awaitTerminalEvent(2000,TimeUnit.MILLISECONDS);
    ts.assertTerminated();
    verify(stringSubscriber,times(2)).onNext("hello");
    verify(stringSubscriber,times(1)).onError(any(NullPointerException.class));
    verify(stringSubscriber,never()).onComplete();
  }
}
