@SuppressWarnings("unchecked") @Test @Ignore("No 2-9 parameter mergeDelayError() overloads") public void mergeManyError() throws Exception {
  for (int i=2; i < 10; i++) {
    Class<?>[] clazz=new Class[i];
    Arrays.fill(clazz,Flowable.class);
    Flowable<Integer>[] obs=new Flowable[i];
    for (int j=0; j < i; j++) {
      obs[j]=withError(Flowable.just(1));
    }
    Integer[] expected=new Integer[i];
    Arrays.fill(expected,1);
    Method m=Flowable.class.getMethod("mergeDelayError",clazz);
    TestSubscriber<Integer> ts=TestSubscriber.create();
    ((Flowable<Integer>)m.invoke(null,(Object[])obs)).subscribe(ts);
    ts.assertValues(expected);
    ts.assertError(CompositeException.class);
    ts.assertNotComplete();
    CompositeException ce=(CompositeException)ts.errors().get(0);
    assertEquals(i,ce.getExceptions().size());
  }
}
