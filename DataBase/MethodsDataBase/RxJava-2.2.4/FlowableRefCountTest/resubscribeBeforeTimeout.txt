@Test public void resubscribeBeforeTimeout() throws Exception {
  final int[] subscriptions={0};
  PublishProcessor<Integer> pp=PublishProcessor.create();
  Flowable<Integer> source=pp.doOnSubscribe(new Consumer<Subscription>(){
    @Override public void accept(    Subscription s) throws Exception {
      subscriptions[0]++;
    }
  }
).publish().refCount(500,TimeUnit.MILLISECONDS);
  TestSubscriber<Integer> ts1=source.test(0);
  assertEquals(1,subscriptions[0]);
  ts1.cancel();
  Thread.sleep(100);
  ts1=source.test(0);
  assertEquals(1,subscriptions[0]);
  Thread.sleep(500);
  assertEquals(1,subscriptions[0]);
  pp.onNext(1);
  pp.onNext(2);
  pp.onNext(3);
  pp.onNext(4);
  pp.onNext(5);
  pp.onComplete();
  ts1.requestMore(5).assertResult(1,2,3,4,5);
}
