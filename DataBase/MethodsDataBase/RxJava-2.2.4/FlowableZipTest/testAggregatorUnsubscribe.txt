@Test public void testAggregatorUnsubscribe(){
  PublishProcessor<String> r1=PublishProcessor.create();
  PublishProcessor<String> r2=PublishProcessor.create();
  Subscriber<String> subscriber=TestHelper.mockSubscriber();
  TestSubscriber<String> ts=new TestSubscriber<String>(subscriber);
  Flowable.zip(r1,r2,zipr2).subscribe(ts);
  r1.onNext("hello");
  r2.onNext("world");
  verify(subscriber,never()).onError(any(Throwable.class));
  verify(subscriber,never()).onComplete();
  verify(subscriber,times(1)).onNext("helloworld");
  ts.dispose();
  r1.onNext("hello");
  r2.onNext("again");
  verify(subscriber,times(0)).onError(any(Throwable.class));
  verify(subscriber,never()).onComplete();
  verify(subscriber,times(0)).onNext("helloagain");
}
