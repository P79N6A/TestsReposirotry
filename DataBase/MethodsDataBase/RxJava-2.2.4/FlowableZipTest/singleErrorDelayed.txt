@Test public void singleErrorDelayed(){
  PublishProcessor<Object> pp1=PublishProcessor.create();
  PublishProcessor<Object> pp2=PublishProcessor.create();
  TestSubscriber<Object> ts=Flowable.zip(pp1,pp2,new BiFunction<Object,Object,Object>(){
    @Override public Object apply(    Object a,    Object b) throws Exception {
      return a;
    }
  }
,true).test();
  pp1.onError(new TestException("First"));
  pp2.onComplete();
  ts.assertFailureAndMessage(TestException.class,"First");
}
