@Test public void testStartAsync() throws InterruptedException {
  Flowable<String> os=ASYNC_OBSERVABLE_OF_INFINITE_INTEGERS(new CountDownLatch(1)).onBackpressureBuffer().zipWith(ASYNC_OBSERVABLE_OF_INFINITE_INTEGERS(new CountDownLatch(1)).onBackpressureBuffer(),new BiFunction<Integer,Integer,String>(){
    @Override public String apply(    Integer a,    Integer b){
      return a + "-" + b;
    }
  }
).take(5);
  TestSubscriber<String> ts=new TestSubscriber<String>();
  os.subscribe(ts);
  ts.awaitTerminalEvent();
  ts.assertNoErrors();
  assertEquals(5,ts.valueCount());
  assertEquals("1-1",ts.values().get(0));
  assertEquals("2-2",ts.values().get(1));
  assertEquals("5-5",ts.values().get(4));
}
