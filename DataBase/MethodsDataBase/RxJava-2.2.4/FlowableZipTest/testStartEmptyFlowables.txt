@Test public void testStartEmptyFlowables(){
  Flowable<String> f=Flowable.zip(Flowable.<Integer>empty(),Flowable.<String>empty(),new BiFunction<Integer,String,String>(){
    @Override public String apply(    Integer t1,    String t2){
      return t1 + "-" + t2;
    }
  }
);
  final ArrayList<String> list=new ArrayList<String>();
  f.subscribe(new Consumer<String>(){
    @Override public void accept(    String s){
      System.out.println(s);
      list.add(s);
    }
  }
);
  assertEquals(0,list.size());
}
