@Test public void testUnboundedDownstreamOverrequesting(){
  Flowable<Integer> source=Flowable.range(1,2).zipWith(Flowable.range(1,2),new BiFunction<Integer,Integer,Integer>(){
    @Override public Integer apply(    Integer t1,    Integer t2){
      return t1 + 10 * t2;
    }
  }
);
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>(){
    @Override public void onNext(    Integer t){
      super.onNext(t);
      request(5);
    }
  }
;
  source.subscribe(ts);
  ts.assertNoErrors();
  ts.assertTerminated();
  ts.assertValues(11,22);
}
