/** 
 * Testing internal private logic due to the complexity so I want to use TDD to test as a I build it rather than relying purely on the overall functionality expected by the public methods.
 */
@Test public void testAggregatorSimple(){
  PublishProcessor<String> r1=PublishProcessor.create();
  PublishProcessor<String> r2=PublishProcessor.create();
  Subscriber<String> subscriber=TestHelper.mockSubscriber();
  Flowable.zip(r1,r2,zipr2).subscribe(subscriber);
  r1.onNext("hello");
  r2.onNext("world");
  InOrder inOrder=inOrder(subscriber);
  verify(subscriber,never()).onError(any(Throwable.class));
  verify(subscriber,never()).onComplete();
  inOrder.verify(subscriber,times(1)).onNext("helloworld");
  r1.onNext("hello ");
  r2.onNext("again");
  verify(subscriber,never()).onError(any(Throwable.class));
  verify(subscriber,never()).onComplete();
  inOrder.verify(subscriber,times(1)).onNext("hello again");
  r1.onComplete();
  r2.onComplete();
  inOrder.verify(subscriber,never()).onNext(anyString());
  verify(subscriber,times(1)).onComplete();
}
