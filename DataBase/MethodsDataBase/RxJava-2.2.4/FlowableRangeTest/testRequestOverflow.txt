@Test public void testRequestOverflow(){
  final AtomicInteger count=new AtomicInteger();
  int n=10;
  Flowable.range(1,n).subscribe(new DefaultSubscriber<Integer>(){
    @Override public void onStart(){
      request(2);
    }
    @Override public void onComplete(){
    }
    @Override public void onError(    Throwable e){
      throw new RuntimeException(e);
    }
    @Override public void onNext(    Integer t){
      count.incrementAndGet();
      request(Long.MAX_VALUE - 1);
    }
  }
);
  assertEquals(n,count.get());
}
