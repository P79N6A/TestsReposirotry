@Test public void testNonFatalExceptionThrownByCombinatorForSingleSourceIsNotReportedByUpstreamOperator(){
  final AtomicBoolean errorOccurred=new AtomicBoolean(false);
  TestSubscriber<Integer> ts=TestSubscriber.create(1);
  Flowable<Integer> source=Flowable.just(1).doOnError(new Consumer<Throwable>(){
    @Override public void accept(    Throwable t){
      errorOccurred.set(true);
    }
  }
);
  Flowable.combineLatest(Collections.singletonList(source),THROW_NON_FATAL).subscribe(ts);
  assertFalse(errorOccurred.get());
}
