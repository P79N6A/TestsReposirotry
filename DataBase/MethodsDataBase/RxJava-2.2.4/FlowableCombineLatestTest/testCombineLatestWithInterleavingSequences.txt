@Test public void testCombineLatestWithInterleavingSequences(){
  Subscriber<String> w=TestHelper.mockSubscriber();
  PublishProcessor<String> w1=PublishProcessor.create();
  PublishProcessor<String> w2=PublishProcessor.create();
  PublishProcessor<String> w3=PublishProcessor.create();
  Flowable<String> combineLatestW=Flowable.combineLatest(w1,w2,w3,getConcat3StringsCombineLatestFunction());
  combineLatestW.subscribe(w);
  w1.onNext("1a");
  w2.onNext("2a");
  w2.onNext("2b");
  w3.onNext("3a");
  w1.onNext("1b");
  w2.onNext("2c");
  w2.onNext("2d");
  w3.onNext("3b");
  w1.onComplete();
  w2.onComplete();
  w3.onComplete();
  InOrder inOrder=inOrder(w);
  inOrder.verify(w).onNext("1a2b3a");
  inOrder.verify(w).onNext("1b2b3a");
  inOrder.verify(w).onNext("1b2c3a");
  inOrder.verify(w).onNext("1b2d3a");
  inOrder.verify(w).onNext("1b2d3b");
  inOrder.verify(w,never()).onNext(anyString());
  inOrder.verify(w,times(1)).onComplete();
}
