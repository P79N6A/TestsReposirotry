@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>,Publisher<Boolean>>(){
    @Override public Publisher<Boolean> apply(    Flowable<Object> f) throws Exception {
      return f.all(Functions.alwaysTrue()).toFlowable();
    }
  }
);
  TestHelper.checkDoubleOnSubscribeFlowableToSingle(new Function<Flowable<Object>,Single<Boolean>>(){
    @Override public Single<Boolean> apply(    Flowable<Object> f) throws Exception {
      return f.all(Functions.alwaysTrue());
    }
  }
);
}
