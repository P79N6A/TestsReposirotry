@Test public void dontfailIOObservableBlockingFirst(){
  try {
    RxJavaPlugins.setFailOnNonBlockingScheduler(true);
    Observable.just(1).subscribeOn(Schedulers.io()).map(new Function<Integer,Integer>(){
      @Override public Integer apply(      Integer v) throws Exception {
        return Observable.just(2).delay(100,TimeUnit.MILLISECONDS).blockingFirst();
      }
    }
).test().awaitDone(5,TimeUnit.SECONDS).assertResult(2);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
