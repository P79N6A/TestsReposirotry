@Test public void failComputationFlowableToFuture(){
  try {
    RxJavaPlugins.setFailOnNonBlockingScheduler(true);
    Flowable.just(1).subscribeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){
      @Override public Integer apply(      Integer v) throws Exception {
        Flowable.just(1).delay(10,TimeUnit.SECONDS).toFuture().get();
        return v;
      }
    }
).test().awaitDone(5,TimeUnit.SECONDS).assertFailure(IllegalStateException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
