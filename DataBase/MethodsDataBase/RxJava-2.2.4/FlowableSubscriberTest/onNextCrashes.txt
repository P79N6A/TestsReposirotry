@Test public void onNextCrashes(){
  final TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  ts.onSubscribe(new BooleanSubscription());
  ForEachWhileSubscriber<Integer> s=new ForEachWhileSubscriber<Integer>(new Predicate<Integer>(){
    @Override public boolean test(    Integer v) throws Exception {
      throw new TestException();
    }
  }
,new Consumer<Throwable>(){
    @Override public void accept(    Throwable e) throws Exception {
      ts.onError(e);
    }
  }
,new Action(){
    @Override public void run() throws Exception {
      ts.onComplete();
    }
  }
);
  BooleanSubscription b=new BooleanSubscription();
  s.onSubscribe(b);
  s.onNext(1);
  assertTrue(b.isCancelled());
  ts.assertFailure(TestException.class);
}
