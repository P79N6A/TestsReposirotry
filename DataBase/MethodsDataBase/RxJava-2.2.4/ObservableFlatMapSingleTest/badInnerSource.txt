@Test public void badInnerSource(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Observable.just(1).flatMapSingle(Functions.justFunction(new Single<Integer>(){
      @Override protected void subscribeActual(      SingleObserver<? super Integer> observer){
        observer.onSubscribe(Disposables.empty());
        observer.onError(new TestException("First"));
        observer.onError(new TestException("Second"));
      }
    }
)).test().assertFailureAndMessage(TestException.class,"First");
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
