/** 
 * Reduce consumes and produces T so can't do covariance. https://github.com/ReactiveX/RxJava/issues/360#issuecomment-24203016
 */
@Test public void reduceWithCovariantObjectsObservable(){
  Observable<Movie> horrorMovies=Observable.<Movie>just(new HorrorMovie());
  Observable<Movie> reduceResult2=horrorMovies.reduce(new BiFunction<Movie,Movie,Movie>(){
    @Override public Movie apply(    Movie t1,    Movie t2){
      return t2;
    }
  }
).toObservable();
  assertNotNull(reduceResult2);
}
