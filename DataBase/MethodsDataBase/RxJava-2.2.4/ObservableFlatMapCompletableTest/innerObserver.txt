@Test public void innerObserver(){
  Observable.range(1,3).flatMapCompletable(new Function<Integer,CompletableSource>(){
    @Override public CompletableSource apply(    Integer v) throws Exception {
      return new Completable(){
        @Override protected void subscribeActual(        CompletableObserver observer){
          observer.onSubscribe(Disposables.empty());
          assertFalse(((Disposable)observer).isDisposed());
          ((Disposable)observer).dispose();
          assertTrue(((Disposable)observer).isDisposed());
        }
      }
;
    }
  }
).test();
}
