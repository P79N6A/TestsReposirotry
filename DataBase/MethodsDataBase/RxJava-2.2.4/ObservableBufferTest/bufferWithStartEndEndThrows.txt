@Test public void bufferWithStartEndEndThrows(){
  PublishSubject<Integer> start=PublishSubject.create();
  Function<Integer,Observable<Integer>> end=new Function<Integer,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Integer t1){
      return Observable.error(new TestException());
    }
  }
;
  PublishSubject<Integer> source=PublishSubject.create();
  Observable<List<Integer>> result=source.buffer(start,end);
  Observer<Object> o=TestHelper.mockObserver();
  result.subscribe(o);
  start.onNext(1);
  source.onNext(1);
  source.onNext(2);
  verify(o,never()).onNext(any());
  verify(o,never()).onComplete();
  verify(o).onError(any(TestException.class));
}
