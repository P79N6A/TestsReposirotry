@Test public void timedSkipCancelWhenSecondBuffer(){
  TestScheduler sch=new TestScheduler();
  final TestObserver<List<Integer>> to=new TestObserver<List<Integer>>();
  BufferSkipBoundedObserver<Integer,List<Integer>> sub=new BufferSkipBoundedObserver<Integer,List<Integer>>(to,new Callable<List<Integer>>(){
    int calls;
    @Override public List<Integer> call() throws Exception {
      if (++calls == 2) {
        to.cancel();
      }
      return new ArrayList<Integer>();
    }
  }
,1,1,TimeUnit.SECONDS,sch.createWorker());
  sub.onSubscribe(Disposables.empty());
  sub.run();
  assertTrue(to.isCancelled());
}
