@Test public void testTimed(){
  Observable<String> source=Observable.unsafeCreate(new ObservableSource<String>(){
    @Override public void subscribe(    Observer<? super String> observer){
      observer.onSubscribe(Disposables.empty());
      push(observer,"one",97);
      push(observer,"two",98);
      push(observer,"three",99);
      push(observer,"four",101);
      push(observer,"five",102);
      complete(observer,150);
    }
  }
);
  Observable<List<String>> buffered=source.buffer(100,TimeUnit.MILLISECONDS,scheduler);
  buffered.subscribe(observer);
  InOrder inOrder=Mockito.inOrder(observer);
  scheduler.advanceTimeTo(101,TimeUnit.MILLISECONDS);
  inOrder.verify(observer,Mockito.times(1)).onNext(list("one","two","three"));
  scheduler.advanceTimeTo(201,TimeUnit.MILLISECONDS);
  inOrder.verify(observer,Mockito.times(1)).onNext(list("four","five"));
  inOrder.verify(observer,Mockito.never()).onNext(Mockito.<String>anyList());
  inOrder.verify(observer,Mockito.never()).onError(Mockito.any(Throwable.class));
  inOrder.verify(observer,Mockito.times(1)).onComplete();
}
