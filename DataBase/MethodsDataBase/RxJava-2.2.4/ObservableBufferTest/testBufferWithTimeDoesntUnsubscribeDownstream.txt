@Test(timeout=3000) public void testBufferWithTimeDoesntUnsubscribeDownstream() throws InterruptedException {
  final Observer<Object> o=TestHelper.mockObserver();
  final CountDownLatch cdl=new CountDownLatch(1);
  DisposableObserver<Object> observer=new DisposableObserver<Object>(){
    @Override public void onNext(    Object t){
      o.onNext(t);
    }
    @Override public void onError(    Throwable e){
      o.onError(e);
      cdl.countDown();
    }
    @Override public void onComplete(){
      o.onComplete();
      cdl.countDown();
    }
  }
;
  Observable.range(1,1).delay(1,TimeUnit.SECONDS).buffer(2,TimeUnit.SECONDS).subscribe(observer);
  cdl.await();
  verify(o).onNext(Arrays.asList(1));
  verify(o).onComplete();
  verify(o,never()).onError(any(Throwable.class));
  assertFalse(observer.isDisposed());
}
