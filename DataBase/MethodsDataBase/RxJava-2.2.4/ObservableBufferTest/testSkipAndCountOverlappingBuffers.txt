@Test public void testSkipAndCountOverlappingBuffers(){
  Observable<String> source=Observable.unsafeCreate(new ObservableSource<String>(){
    @Override public void subscribe(    Observer<? super String> observer){
      observer.onSubscribe(Disposables.empty());
      observer.onNext("one");
      observer.onNext("two");
      observer.onNext("three");
      observer.onNext("four");
      observer.onNext("five");
    }
  }
);
  Observable<List<String>> buffered=source.buffer(3,1);
  buffered.subscribe(observer);
  InOrder inOrder=Mockito.inOrder(observer);
  inOrder.verify(observer,Mockito.times(1)).onNext(list("one","two","three"));
  inOrder.verify(observer,Mockito.times(1)).onNext(list("two","three","four"));
  inOrder.verify(observer,Mockito.times(1)).onNext(list("three","four","five"));
  inOrder.verify(observer,Mockito.never()).onNext(Mockito.<String>anyList());
  inOrder.verify(observer,Mockito.never()).onError(Mockito.any(Throwable.class));
  inOrder.verify(observer,Mockito.never()).onComplete();
}
