@Test @SuppressWarnings("unchecked") public void openClosebadSource(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    new Observable<Object>(){
      @Override protected void subscribeActual(      Observer<? super Object> observer){
        Disposable bs1=Disposables.empty();
        Disposable bs2=Disposables.empty();
        observer.onSubscribe(bs1);
        assertFalse(bs1.isDisposed());
        assertFalse(bs2.isDisposed());
        observer.onSubscribe(bs2);
        assertFalse(bs1.isDisposed());
        assertTrue(bs2.isDisposed());
        observer.onError(new IOException());
        observer.onComplete();
        observer.onNext(1);
        observer.onError(new TestException());
      }
    }
.buffer(Observable.never(),Functions.justFunction(Observable.never())).test().assertFailure(IOException.class);
    TestHelper.assertError(errors,0,ProtocolViolationException.class);
    TestHelper.assertUndeliverable(errors,1,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
