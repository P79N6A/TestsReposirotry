@Test public void dispose(){
  TestHelper.checkDisposed(Observable.range(1,5).buffer(1,TimeUnit.DAYS,Schedulers.single()));
  TestHelper.checkDisposed(Observable.range(1,5).buffer(2,1,TimeUnit.DAYS,Schedulers.single()));
  TestHelper.checkDisposed(Observable.range(1,5).buffer(1,2,TimeUnit.DAYS,Schedulers.single()));
  TestHelper.checkDisposed(Observable.range(1,5).buffer(1,TimeUnit.DAYS,Schedulers.single(),2,Functions.<Integer>createArrayList(16),true));
  TestHelper.checkDisposed(Observable.range(1,5).buffer(1));
  TestHelper.checkDisposed(Observable.range(1,5).buffer(2,1));
  TestHelper.checkDisposed(Observable.range(1,5).buffer(1,2));
  TestHelper.checkDisposed(PublishSubject.create().buffer(Observable.never()));
  TestHelper.checkDisposed(PublishSubject.create().buffer(Functions.justCallable(Observable.never())));
  TestHelper.checkDisposed(PublishSubject.create().buffer(Observable.never(),Functions.justFunction(Observable.never())));
}
