@Test public void nextCancelRace(){
  for (int i=0; i < TestHelper.RACE_LONG_LOOPS; i++) {
    final PublishSubject<Integer> ps=PublishSubject.create();
    final MaybeSubject<Integer> ms=MaybeSubject.create();
    final TestObserver<Integer> to=ps.switchMapMaybeDelayError(new Function<Integer,MaybeSource<Integer>>(){
      @Override public MaybeSource<Integer> apply(      Integer v) throws Exception {
        return ms;
      }
    }
).test();
    Runnable r1=new Runnable(){
      @Override public void run(){
        ps.onNext(1);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        to.cancel();
      }
    }
;
    TestHelper.race(r1,r2);
    to.assertNoErrors().assertNotComplete();
  }
}
