@Test public void onNextOnTimeoutRaceFallback(){
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final TestScheduler sch=new TestScheduler();
    final PublishSubject<Integer> ps=PublishSubject.create();
    TestObserver<Integer> to=ps.timeout(1,TimeUnit.SECONDS,sch,Observable.just(2)).test();
    Runnable r1=new Runnable(){
      @Override public void run(){
        ps.onNext(1);
      }
    }
;
    Runnable r2=new Runnable(){
      @Override public void run(){
        sch.advanceTimeBy(1,TimeUnit.SECONDS);
      }
    }
;
    TestHelper.race(r1,r2);
    if (to.isTerminated()) {
      int c=to.valueCount();
      if (c == 1) {
        int v=to.values().get(0);
        assertTrue("" + v,v == 1 || v == 2);
      }
 else {
        to.assertResult(1,2);
      }
    }
 else {
      to.assertValuesOnly(1);
    }
  }
}
