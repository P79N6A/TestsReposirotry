@Test public void testCompose(){
  TestSubscriber<String> ts=new TestSubscriber<String>();
  Flowable.just(1,2,3).compose(new FlowableTransformer<Integer,String>(){
    @Override public Publisher<String> apply(    Flowable<Integer> t1){
      return t1.map(new Function<Integer,String>(){
        @Override public String apply(        Integer v){
          return String.valueOf(v);
        }
      }
);
    }
  }
).subscribe(ts);
  ts.assertTerminated();
  ts.assertNoErrors();
  ts.assertValues("1","2","3");
}
