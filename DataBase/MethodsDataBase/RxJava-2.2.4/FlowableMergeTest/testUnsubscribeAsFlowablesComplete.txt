@Test public void testUnsubscribeAsFlowablesComplete(){
  TestScheduler scheduler1=new TestScheduler();
  AtomicBoolean os1=new AtomicBoolean(false);
  Flowable<Long> f1=createFlowableOf5IntervalsOf1SecondIncrementsWithSubscriptionHook(scheduler1,os1);
  TestScheduler scheduler2=new TestScheduler();
  AtomicBoolean os2=new AtomicBoolean(false);
  Flowable<Long> f2=createFlowableOf5IntervalsOf1SecondIncrementsWithSubscriptionHook(scheduler2,os2);
  TestSubscriber<Long> ts=new TestSubscriber<Long>();
  Flowable.merge(f1,f2).subscribe(ts);
  ts.assertNoValues();
  scheduler1.advanceTimeBy(3,TimeUnit.SECONDS);
  scheduler2.advanceTimeBy(2,TimeUnit.SECONDS);
  ts.assertValues(0L,1L,2L,0L,1L);
  assertFalse(os1.get());
  assertFalse(os2.get());
  scheduler1.advanceTimeBy(3,TimeUnit.SECONDS);
  ts.assertValues(0L,1L,2L,0L,1L,3L,4L);
  assertTrue(os1.get());
  assertFalse(os2.get());
  scheduler2.advanceTimeBy(3,TimeUnit.SECONDS);
  ts.assertValues(0L,1L,2L,0L,1L,3L,4L,2L,3L,4L);
  assertTrue(os1.get());
  assertTrue(os2.get());
  ts.assertTerminated();
}
