@Test public void nonEagerDisposerCrash(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Flowable.using(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return 1;
      }
    }
,new Function<Object,Flowable<Object>>(){
      @Override public Flowable<Object> apply(      Object v) throws Exception {
        return Flowable.empty();
      }
    }
,new Consumer<Object>(){
      @Override public void accept(      Object e) throws Exception {
        throw new TestException("Second");
      }
    }
,false).test().assertResult();
    TestHelper.assertUndeliverable(errors,0,TestException.class,"Second");
  }
  finally {
    RxJavaPlugins.reset();
  }
}
