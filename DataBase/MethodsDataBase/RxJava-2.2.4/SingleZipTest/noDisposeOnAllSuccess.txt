@Test public void noDisposeOnAllSuccess(){
  final AtomicInteger counter=new AtomicInteger();
  Single<Integer> source=Single.just(1).doOnDispose(new Action(){
    @Override public void run() throws Exception {
      counter.getAndIncrement();
    }
  }
);
  Single.zip(source,source,new BiFunction<Integer,Integer,Object>(){
    @Override public Integer apply(    Integer a,    Integer b) throws Exception {
      return a + b;
    }
  }
).test().assertResult(2);
  assertEquals(0,counter.get());
}
