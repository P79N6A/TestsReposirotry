@Test public void testSimple(){
  PublishSubject<Integer> source=PublishSubject.create();
  PublishSubject<Integer> other=PublishSubject.create();
  Observer<Integer> o=TestHelper.mockObserver();
  InOrder inOrder=inOrder(o);
  Observable<Integer> result=source.withLatestFrom(other,COMBINER);
  result.subscribe(o);
  source.onNext(1);
  inOrder.verify(o,never()).onNext(anyInt());
  other.onNext(1);
  inOrder.verify(o,never()).onNext(anyInt());
  source.onNext(2);
  inOrder.verify(o).onNext((2 << 8) + 1);
  other.onNext(2);
  inOrder.verify(o,never()).onNext(anyInt());
  other.onComplete();
  inOrder.verify(o,never()).onComplete();
  source.onNext(3);
  inOrder.verify(o).onNext((3 << 8) + 2);
  source.onComplete();
  inOrder.verify(o).onComplete();
  verify(o,never()).onError(any(Throwable.class));
}
