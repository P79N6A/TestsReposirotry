@Test public void manyIteratorThrows(){
  Observable.just(1).withLatestFrom(new CrashingMappedIterable<Observable<Integer>>(1,100,100,new Function<Integer,Observable<Integer>>(){
    @Override public Observable<Integer> apply(    Integer v) throws Exception {
      return Observable.just(2);
    }
  }
),new Function<Object[],Object>(){
    @Override public Object apply(    Object[] a) throws Exception {
      return a;
    }
  }
).test().assertFailureAndMessage(TestException.class,"iterator()");
}
