@Test public void resubscribeBeforeTimeout() throws Exception {
  final int[] subscriptions={0};
  PublishSubject<Integer> ps=PublishSubject.create();
  Observable<Integer> source=ps.doOnSubscribe(new Consumer<Disposable>(){
    @Override public void accept(    Disposable d) throws Exception {
      subscriptions[0]++;
    }
  }
).publish().refCount(500,TimeUnit.MILLISECONDS);
  TestObserver<Integer> to1=source.test();
  assertEquals(1,subscriptions[0]);
  to1.cancel();
  Thread.sleep(100);
  to1=source.test();
  assertEquals(1,subscriptions[0]);
  Thread.sleep(500);
  assertEquals(1,subscriptions[0]);
  ps.onNext(1);
  ps.onNext(2);
  ps.onNext(3);
  ps.onNext(4);
  ps.onNext(5);
  ps.onComplete();
  to1.assertResult(1,2,3,4,5);
}
