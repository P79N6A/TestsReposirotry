@Test public void publishNoLeak() throws Exception {
  System.gc();
  Thread.sleep(100);
  long start=ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();
  source=Observable.fromCallable(new Callable<Object>(){
    @Override public Object call() throws Exception {
      throw new ExceptionData(new byte[100 * 1000 * 1000]);
    }
  }
).publish().refCount();
  source.subscribe(Functions.emptyConsumer(),Functions.emptyConsumer());
  System.gc();
  Thread.sleep(100);
  long after=ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();
  source=null;
  assertTrue(String.format("%,3d -> %,3d%n",start,after),start + 20 * 1000 * 1000 > after);
}
