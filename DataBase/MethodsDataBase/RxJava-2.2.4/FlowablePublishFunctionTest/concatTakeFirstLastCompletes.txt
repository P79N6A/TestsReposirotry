@Test public void concatTakeFirstLastCompletes(){
  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();
  Flowable.range(1,3).publish(new Function<Flowable<Integer>,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Flowable<Integer> f){
      return Flowable.concat(f.take(5),f.takeLast(5));
    }
  }
).subscribe(ts);
  ts.assertValues(1,2,3);
  ts.assertNoErrors();
  ts.assertComplete();
}
