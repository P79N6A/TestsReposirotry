@Test public void canBeCancelled(){
  TestSubscriber<Integer> ts=TestSubscriber.create();
  PublishProcessor<Integer> pp=PublishProcessor.create();
  pp.publish(new Function<Flowable<Integer>,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Flowable<Integer> f){
      return Flowable.concat(f.take(5),f.takeLast(5));
    }
  }
).subscribe(ts);
  pp.onNext(1);
  pp.onNext(2);
  ts.assertValues(1,2);
  ts.assertNoErrors();
  ts.assertNotComplete();
  ts.cancel();
  Assert.assertFalse("Source has subscribers?",pp.hasSubscribers());
}
