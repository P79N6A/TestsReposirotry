@Test public void independentlyMapped(){
  PublishProcessor<Integer> pp=PublishProcessor.create();
  TestSubscriber<Integer> ts=pp.publish(new Function<Flowable<Integer>,Publisher<Integer>>(){
    @Override public Publisher<Integer> apply(    Flowable<Integer> v) throws Exception {
      return Flowable.range(1,5);
    }
  }
).test(0);
  assertTrue("pp has no Subscribers?!",pp.hasSubscribers());
  ts.assertNoValues().assertNoErrors().assertNotComplete();
  ts.request(5);
  ts.assertResult(1,2,3,4,5);
  assertFalse("pp has Subscribers?!",pp.hasSubscribers());
}
