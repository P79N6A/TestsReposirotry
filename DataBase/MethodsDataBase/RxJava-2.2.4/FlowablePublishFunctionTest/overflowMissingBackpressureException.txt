@Test public void overflowMissingBackpressureException(){
  TestSubscriber<Integer> ts=TestSubscriber.create(0);
  PublishProcessor<Integer> pp=PublishProcessor.create();
  pp.publish(new Function<Flowable<Integer>,Flowable<Integer>>(){
    @Override public Flowable<Integer> apply(    Flowable<Integer> f){
      return f;
    }
  }
).subscribe(ts);
  for (int i=0; i < Flowable.bufferSize() * 2; i++) {
    pp.onNext(i);
  }
  ts.assertNoValues();
  ts.assertError(MissingBackpressureException.class);
  ts.assertNotComplete();
  Assert.assertEquals("Could not emit value due to lack of requests",ts.errors().get(0).getMessage());
  Assert.assertFalse("Source has subscribers?",pp.hasSubscribers());
}
