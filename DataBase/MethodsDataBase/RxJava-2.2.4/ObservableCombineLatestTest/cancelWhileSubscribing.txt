@Test public void cancelWhileSubscribing(){
  final TestObserver<Object> to=new TestObserver<Object>();
  Observable.combineLatest(Observable.just(1).doOnNext(new Consumer<Integer>(){
    @Override public void accept(    Integer v) throws Exception {
      to.cancel();
    }
  }
),Observable.never(),new BiFunction<Object,Object,Object>(){
    @Override public Object apply(    Object a,    Object b) throws Exception {
      return a;
    }
  }
).subscribe(to);
}
