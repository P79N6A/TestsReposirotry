@Test public void testSourceObservableCallsUnsubscribe() throws InterruptedException {
  final AtomicInteger subsCount=new AtomicInteger(0);
  final TestObserver<String> to=new TestObserver<String>();
  ObservableSource<String> onSubscribe=new ObservableSource<String>(){
    @Override public void subscribe(    Observer<? super String> observer){
      BooleanSubscription bs=new BooleanSubscription();
      if (!bs.isCancelled()) {
        subsCount.incrementAndGet();
        observer.onError(new RuntimeException("failed"));
        bs.cancel();
      }
 else {
        observer.onError(new RuntimeException());
      }
    }
  }
;
  Observable.unsafeCreate(onSubscribe).retry(3).subscribe(to);
  assertEquals(4,subsCount.get());
}
