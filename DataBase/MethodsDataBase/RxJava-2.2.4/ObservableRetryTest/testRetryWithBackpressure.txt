@Test public void testRetryWithBackpressure() throws InterruptedException {
  final int NUM_LOOPS=1;
  for (int j=0; j < NUM_LOOPS; j++) {
    final int NUM_RETRIES=Flowable.bufferSize() * 2;
    for (int i=0; i < 400; i++) {
      Observer<String> observer=TestHelper.mockObserver();
      Observable<String> origin=Observable.unsafeCreate(new FuncWithErrors(NUM_RETRIES));
      TestObserver<String> to=new TestObserver<String>(observer);
      origin.retry().observeOn(Schedulers.computation()).subscribe(to);
      to.awaitTerminalEvent(5,TimeUnit.SECONDS);
      InOrder inOrder=inOrder(observer);
      verify(observer,never()).onError(any(Throwable.class));
      inOrder.verify(observer,times(NUM_RETRIES + 1)).onNext("beginningEveryTime");
      inOrder.verify(observer,times(1)).onNext("onSuccessOnly");
      inOrder.verify(observer,times(1)).onComplete();
      inOrder.verifyNoMoreInteractions();
    }
  }
}
