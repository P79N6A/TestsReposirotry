@Test public void testRetryAllowsSubscriptionAfterAllSubscriptionsUnsubscribed() throws InterruptedException {
  final AtomicInteger subsCount=new AtomicInteger(0);
  ObservableSource<String> onSubscribe=new ObservableSource<String>(){
    @Override public void subscribe(    Observer<? super String> observer){
      subsCount.incrementAndGet();
      observer.onSubscribe(Disposables.fromRunnable(new Runnable(){
        @Override public void run(){
          subsCount.decrementAndGet();
        }
      }
));
    }
  }
;
  Observable<String> stream=Observable.unsafeCreate(onSubscribe);
  Observable<String> streamWithRetry=stream.retry();
  Disposable sub=streamWithRetry.subscribe();
  assertEquals(1,subsCount.get());
  sub.dispose();
  assertEquals(0,subsCount.get());
  streamWithRetry.subscribe();
  assertEquals(1,subsCount.get());
}
