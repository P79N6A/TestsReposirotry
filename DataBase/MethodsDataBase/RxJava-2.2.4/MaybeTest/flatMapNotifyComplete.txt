@Test public void flatMapNotifyComplete(){
  Maybe.<Integer>empty().flatMap(new Function<Integer,MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> apply(    Integer v) throws Exception {
      return Maybe.just(v * 10);
    }
  }
,new Function<Throwable,MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> apply(    Throwable v) throws Exception {
      return Maybe.just(100);
    }
  }
,new Callable<MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> call() throws Exception {
      return Maybe.just(200);
    }
  }
).test().assertResult(200);
}
