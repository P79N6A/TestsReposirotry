@Test public void basicWithComplete(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    final Disposable d=Disposables.empty();
    Maybe.<Integer>create(new MaybeOnSubscribe<Integer>(){
      @Override public void subscribe(      MaybeEmitter<Integer> e) throws Exception {
        e.setDisposable(d);
        e.onComplete();
        e.onSuccess(1);
        e.onError(new TestException());
        e.onComplete();
        e.onSuccess(2);
        e.onError(new TestException());
      }
    }
).test().assertResult();
    assertTrue(d.isDisposed());
    TestHelper.assertUndeliverable(errors,0,TestException.class);
    TestHelper.assertUndeliverable(errors,1,TestException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
