@Test public void retryTimesPredicateWithMatchingPredicate(){
  final AtomicInteger atomicInteger=new AtomicInteger(3);
  final AtomicInteger numberOfSubscribeCalls=new AtomicInteger(0);
  Completable.fromAction(new Action(){
    @Override public void run() throws Exception {
      numberOfSubscribeCalls.incrementAndGet();
      if (atomicInteger.decrementAndGet() != 0) {
        throw new RuntimeException();
      }
      throw new IllegalArgumentException();
    }
  }
).retry(Integer.MAX_VALUE,new Predicate<Throwable>(){
    @Override public boolean test(    final Throwable throwable) throws Exception {
      return !(throwable instanceof IllegalArgumentException);
    }
  }
).test().assertFailure(IllegalArgumentException.class);
  assertEquals(3,numberOfSubscribeCalls.get());
}
