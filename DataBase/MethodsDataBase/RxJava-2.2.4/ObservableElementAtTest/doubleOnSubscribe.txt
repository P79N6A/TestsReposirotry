@Test public void doubleOnSubscribe(){
  TestHelper.checkDoubleOnSubscribeObservable(new Function<Observable<Object>,ObservableSource<Object>>(){
    @Override public ObservableSource<Object> apply(    Observable<Object> o) throws Exception {
      return o.elementAt(0).toObservable();
    }
  }
);
  TestHelper.checkDoubleOnSubscribeObservableToMaybe(new Function<Observable<Object>,MaybeSource<Object>>(){
    @Override public MaybeSource<Object> apply(    Observable<Object> o) throws Exception {
      return o.elementAt(0);
    }
  }
);
  TestHelper.checkDoubleOnSubscribeObservableToSingle(new Function<Observable<Object>,SingleSource<Object>>(){
    @Override public SingleSource<Object> apply(    Observable<Object> o) throws Exception {
      return o.elementAt(0,1);
    }
  }
);
}
