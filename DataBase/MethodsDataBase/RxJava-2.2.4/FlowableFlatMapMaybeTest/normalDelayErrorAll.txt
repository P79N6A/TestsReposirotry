@Test public void normalDelayErrorAll(){
  TestSubscriber<Integer> ts=Flowable.range(1,10).concatWith(Flowable.<Integer>error(new TestException())).flatMapMaybe(new Function<Integer,MaybeSource<Integer>>(){
    @Override public MaybeSource<Integer> apply(    Integer v) throws Exception {
      return Maybe.error(new TestException());
    }
  }
,true,Integer.MAX_VALUE).test().assertFailure(CompositeException.class);
  List<Throwable> errors=TestHelper.compositeList(ts.errors().get(0));
  for (int i=0; i < 11; i++) {
    TestHelper.assertError(errors,i,TestException.class);
  }
}
