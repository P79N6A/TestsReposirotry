@Test public void ignoreCancel(){
  List<Throwable> errors=TestHelper.trackPluginErrors();
  try {
    Observable.wrap(new ObservableSource<Integer>(){
      @Override public void subscribe(      Observer<? super Integer> observer){
        observer.onSubscribe(Disposables.empty());
        observer.onNext(1);
        observer.onNext(2);
        observer.onNext(3);
        observer.onError(new IOException());
        observer.onComplete();
      }
    }
).distinctUntilChanged(new BiPredicate<Integer,Integer>(){
      @Override public boolean test(      Integer a,      Integer b) throws Exception {
        throw new TestException();
      }
    }
).test().assertFailure(TestException.class,1);
    TestHelper.assertUndeliverable(errors,0,IOException.class);
  }
  finally {
    RxJavaPlugins.reset();
  }
}
