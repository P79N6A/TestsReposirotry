@Test public void defaultMethod(){
  JavaFileObject source=JavaFileObjects.forSourceString("test.Test","" + "package test;\n" + "import butterknife.OnItemSelected;\n"+ "public class Test {\n"+ "  @OnItemSelected(1) void doStuff() {}\n"+ "}");
  JavaFileObject bindingSource=JavaFileObjects.forSourceString("test/Test_ViewBinding","" + "package test;\n" + "import android.view.View;\n"+ "import android.widget.AdapterView;\n"+ "import androidx.annotation.CallSuper;\n"+ "import androidx.annotation.UiThread;\n"+ "import butterknife.Unbinder;\n"+ "import butterknife.internal.Utils;\n"+ "import java.lang.IllegalStateException;\n"+ "import java.lang.Override;\n"+ "public class Test_ViewBinding implements Unbinder {\n"+ "  private Test target;\n"+ "  private View view1;\n"+ "  @UiThread\n"+ "  public Test_ViewBinding(final Test target, View source) {\n"+ "    this.target = target;\n"+ "    View view;\n"+ "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"+ "    view1 = view;\n"+ "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"+ "      @Override\n"+ "      public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"+ "        target.doStuff();\n"+ "      }\n"+ "      @Override\n"+ "      public void onNothingSelected(AdapterView<?> p0) {\n"+ "      }\n"+ "    });\n"+ "  }\n"+ "  @Override\n"+ "  @CallSuper\n"+ "  public void unbind() {\n"+ "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"+ "    target = null;\n"+ "    ((AdapterView<?>) view1).setOnItemSelectedListener(null);\n"+ "    view1 = null;\n"+ "  }\n"+ "}");
  assertAbout(javaSource()).that(source).withCompilerOptions("-Xlint:-processing").processedWith(new ButterKnifeProcessor()).compilesWithoutWarnings().and().generatesSources(bindingSource);
}
