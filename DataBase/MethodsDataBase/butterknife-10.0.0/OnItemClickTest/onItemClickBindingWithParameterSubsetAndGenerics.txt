@Test public void onItemClickBindingWithParameterSubsetAndGenerics(){
  JavaFileObject source=JavaFileObjects.forSourceString("test.Test","" + "package test;\n" + "import android.view.View;\n"+ "import android.widget.ListView;\n"+ "import butterknife.OnItemClick;\n"+ "public class Test<T extends ListView> {\n"+ "  @OnItemClick(1) void doStuff(\n"+ "    T parent,\n"+ "    int position\n"+ "  ) {}\n"+ "}");
  JavaFileObject bindingSource=JavaFileObjects.forSourceString("test/Test_ViewBinding","" + "package test;\n" + "import android.view.View;\n"+ "import android.widget.AdapterView;\n"+ "import android.widget.ListView;\n"+ "import androidx.annotation.CallSuper;\n"+ "import androidx.annotation.UiThread;\n"+ "import butterknife.Unbinder;\n"+ "import butterknife.internal.Utils;\n"+ "import java.lang.IllegalStateException;\n"+ "import java.lang.Override;\n"+ "public class Test_ViewBinding implements Unbinder {\n"+ "  private Test target;\n"+ "  private View view1;\n"+ "  @UiThread\n"+ "  public Test_ViewBinding(final Test target, View source) {\n"+ "    this.target = target;\n"+ "    View view;\n"+ "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"+ "    view1 = view;\n"+ "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {\n"+ "      @Override\n"+ "      public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {\n"+ "        target.doStuff(Utils.castParam(p0, \"onItemClick\", 0, \"doStuff\", 0, ListView.class)\n"+ "        , p2);\n"+ "      }\n"+ "    });\n"+ "  }\n"+ "  @Override\n"+ "  @CallSuper\n"+ "  public void unbind() {\n"+ "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"+ "    target = null;\n"+ "    ((AdapterView<?>) view1).setOnItemClickListener(null);\n"+ "    view1 = null;\n"+ "  }\n"+ "}");
  assertAbout(javaSource()).that(source).withCompilerOptions("-Xlint:-processing").processedWith(new ButterKnifeProcessor()).compilesWithoutError().and().generatesSources(bindingSource);
}
