@Test public void bindingViewFinalClassWithBaseClass(){
  JavaFileObject baseSource=JavaFileObjects.forSourceString("test.Base","" + "package test;\n" + "import android.view.View;\n"+ "import butterknife.BindView;\n"+ "public class Base {\n"+ "    @BindView(1) View thing;\n"+ "}");
  JavaFileObject testSource=JavaFileObjects.forSourceString("test.Test","" + "package test;\n" + "import android.view.View;\n"+ "import butterknife.BindView;\n"+ "public final class Test extends Base {\n"+ "    @BindView(1) View thing;\n"+ "}");
  JavaFileObject bindingBaseSource=JavaFileObjects.forSourceString("test/Base_ViewBinding","" + "package test;\n" + "import android.view.View;\n"+ "import androidx.annotation.CallSuper;\n"+ "import androidx.annotation.UiThread;\n"+ "import butterknife.Unbinder;\n"+ "import butterknife.internal.Utils;\n"+ "import java.lang.IllegalStateException;\n"+ "import java.lang.Override;\n"+ "public class Base_ViewBinding implements Unbinder {\n"+ "  private Base target;\n"+ "  @UiThread\n"+ "  public Base_ViewBinding(Base target, View source) {\n"+ "    this.target = target;\n"+ "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"+ "  }\n"+ "  @Override\n"+ "  @CallSuper\n"+ "  public void unbind() {\n"+ "    Base target = this.target;\n"+ "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"+ "    this.target = null;\n"+ "    target.thing = null;\n"+ "  }\n"+ "}");
  JavaFileObject bindingTestSource=JavaFileObjects.forSourceString("test/Test_ViewBinding","" + "package test;\n" + "import android.view.View;\n"+ "import androidx.annotation.UiThread;\n"+ "import butterknife.internal.Utils;\n"+ "import java.lang.IllegalStateException;\n"+ "import java.lang.Override;\n"+ "public final class Test_ViewBinding extends Base_ViewBinding {\n"+ "  private Test target;\n"+ "  @UiThread\n"+ "  public Test_ViewBinding(Test target, View source) {\n"+ "    super(target, source);\n"+ "    this.target = target;\n"+ "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"+ "  }\n"+ "  @Override\n"+ "  public void unbind() {\n"+ "    Test target = this.target;\n"+ "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"+ "    this.target = null\n"+ "    target.thing = null;\n"+ "    super.unbind();\n"+ "  }\n"+ "}");
  assertAbout(javaSources()).that(asList(baseSource,testSource)).withCompilerOptions("-Xlint:-processing").processedWith(new ButterKnifeProcessor()).compilesWithoutWarnings().and().generatesSources(bindingBaseSource,bindingTestSource);
}
