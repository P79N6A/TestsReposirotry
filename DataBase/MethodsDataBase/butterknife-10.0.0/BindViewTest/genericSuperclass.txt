@Test public void genericSuperclass(){
  JavaFileObject source1=JavaFileObjects.forSourceString("test.Test","" + "package test;\n" + "import android.view.View;\n"+ "import butterknife.BindView;\n"+ "public class Test<T> {\n"+ "  @BindView(1) View view;\n"+ "}");
  JavaFileObject source2=JavaFileObjects.forSourceString("test.TestOne","" + "package test;\n" + "import android.view.View;\n"+ "import butterknife.BindView;\n"+ "public class TestOne extends Test<String> {\n"+ "  @BindView(1) View thing;\n"+ "}");
  JavaFileObject source3=JavaFileObjects.forSourceString("test.TestTwo","" + "package test;\n" + "public class TestTwo extends Test<Object> {\n"+ "}");
  JavaFileObject binding1Source=JavaFileObjects.forSourceString("test/Test_ViewBinding","" + "package test;\n" + "import android.view.View;\n"+ "import androidx.annotation.CallSuper;\n"+ "import androidx.annotation.UiThread;\n"+ "import butterknife.Unbinder;\n"+ "import butterknife.internal.Utils;\n"+ "import java.lang.IllegalStateException;\n"+ "import java.lang.Override;\n"+ "public class Test_ViewBinding implements Unbinder {\n"+ "  private Test target;\n"+ "  @UiThread\n"+ "  public Test_ViewBinding(Test target, View source) {\n"+ "    this.target = target;\n"+ "    target.view = Utils.findRequiredView(source, 1, \"field 'view'\");\n"+ "  }\n"+ "  @Override\n"+ "  @CallSuper\n"+ "  public void unbind() {\n"+ "    Test target = this.target;\n"+ "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"+ "    this.target = null;\n"+ "    target.view = null;\n"+ "  }\n"+ "}");
  JavaFileObject binding2Source=JavaFileObjects.forSourceString("test/TestOne_ViewBinding","" + "package test;\n" + "import android.view.View;\n"+ "import androidx.annotation.UiThread;\n"+ "import butterknife.internal.Utils;\n"+ "import java.lang.IllegalStateException;\n"+ "import java.lang.Override;\n"+ "public class TestOne_ViewBinding extends Test_ViewBinding {\n"+ "  private TestOne target;\n"+ "  @UiThread\n"+ "  public TestOne_ViewBinding(TestOne target, View source) {\n"+ "    super(target, source);\n"+ "    this.target = target;\n"+ "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"+ "  }\n"+ "  @Override\n"+ "  public void unbind() {\n"+ "    TestOne target = this.target;\n"+ "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"+ "    this.target = null\n"+ "    target.thing = null;\n"+ "    super.unbind();\n"+ "  }\n"+ "}");
  assertAbout(javaSources()).that(asList(source1,source2,source3)).withCompilerOptions("-Xlint:-processing").processedWith(new ButterKnifeProcessor()).compilesWithoutError().and().generatesSources(binding1Source,binding2Source);
}
