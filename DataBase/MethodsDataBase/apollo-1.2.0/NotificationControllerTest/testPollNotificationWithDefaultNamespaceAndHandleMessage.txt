@Test public void testPollNotificationWithDefaultNamespaceAndHandleMessage() throws Exception {
  String someWatchKey="someKey";
  String anotherWatchKey=Joiner.on(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR).join(someAppId,someCluster,defaultNamespace);
  Set<String> watchKeys=Sets.newHashSet(someWatchKey,anotherWatchKey);
  when(watchKeysUtil.assembleAllWatchKeys(someAppId,someCluster,defaultNamespace,someDataCenter)).thenReturn(watchKeys);
  DeferredResult<ResponseEntity<ApolloConfigNotification>> deferredResult=controller.pollNotification(someAppId,someCluster,defaultNamespace,someDataCenter,someNotificationId,someClientIp);
  long someId=1;
  ReleaseMessage someReleaseMessage=new ReleaseMessage(anotherWatchKey);
  someReleaseMessage.setId(someId);
  controller.handleMessage(someReleaseMessage,Topics.APOLLO_RELEASE_TOPIC);
  ResponseEntity<ApolloConfigNotification> response=(ResponseEntity<ApolloConfigNotification>)deferredResult.getResult();
  ApolloConfigNotification notification=response.getBody();
  assertEquals(HttpStatus.OK,response.getStatusCode());
  assertEquals(defaultNamespace,notification.getNamespaceName());
  assertEquals(someId,notification.getNotificationId());
}
