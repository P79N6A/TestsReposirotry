@Test public void testRefreshConfig() throws Exception {
  final String someKey="someKey";
  final String someValue="someValue";
  final String anotherValue="anotherValue";
  int someRefreshInterval=500;
  TimeUnit someRefreshTimeUnit=TimeUnit.MILLISECONDS;
  setRefreshInterval(someRefreshInterval);
  setRefreshTimeUnit(someRefreshTimeUnit);
  Map<String,String> configurations=Maps.newHashMap();
  configurations.put(someKey,someValue);
  ApolloConfig apolloConfig=assembleApolloConfig(configurations);
  ContextHandler handler=mockConfigServerHandler(HttpServletResponse.SC_OK,apolloConfig);
  startServerWithHandlers(handler);
  Config config=ConfigService.getAppConfig();
  final List<ConfigChangeEvent> changeEvents=Lists.newArrayList();
  final SettableFuture<Boolean> refreshFinished=SettableFuture.create();
  config.addChangeListener(new ConfigChangeListener(){
    AtomicInteger counter=new AtomicInteger(0);
    @Override public void onChange(    ConfigChangeEvent changeEvent){
      if (counter.incrementAndGet() > 1) {
        return;
      }
      assertEquals(1,changeEvent.changedKeys().size());
      assertTrue(changeEvent.isChanged(someKey));
      assertEquals(someValue,changeEvent.getChange(someKey).getOldValue());
      assertEquals(anotherValue,changeEvent.getChange(someKey).getNewValue());
      changeEvents.add(changeEvent);
      refreshFinished.set(true);
    }
  }
);
  apolloConfig.getConfigurations().put(someKey,anotherValue);
  refreshFinished.get(someRefreshInterval * 5,someRefreshTimeUnit);
  assertThat("Change event's size should equal to one or there must be some assertion failed in change listener",1,equalTo(changeEvents.size()));
  assertEquals(anotherValue,config.getProperty(someKey,null));
}
