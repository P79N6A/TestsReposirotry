@Test public void testQueryConfigForNoAppIdPlaceHolderWithPublicNamespace() throws Exception {
  String someClientSideReleaseKey="1";
  String someServerSideReleaseKey="2";
  HttpServletResponse someResponse=mock(HttpServletResponse.class);
  String somePublicAppId="somePublicAppId";
  AppNamespace somePublicAppNamespace=assemblePublicAppNamespace(somePublicAppId,somePublicNamespaceName);
  String appId=ConfigConsts.NO_APPID_PLACEHOLDER;
  when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName)).thenReturn(somePublicAppNamespace);
  when(configService.loadConfig(appId,someClientIp,somePublicAppId,someClusterName,somePublicNamespaceName,someDataCenter,someNotificationMessages)).thenReturn(somePublicRelease);
  when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);
  when(namespaceUtil.normalizeNamespace(appId,somePublicNamespaceName)).thenReturn(somePublicNamespaceName);
  ApolloConfig result=configController.queryConfig(appId,someClusterName,somePublicNamespaceName,someDataCenter,someClientSideReleaseKey,someClientIp,someMessagesAsString,someRequest,someResponse);
  verify(configService,never()).loadConfig(appId,someClientIp,appId,someClusterName,somePublicNamespaceName,someDataCenter,someNotificationMessages);
  assertEquals(someServerSideReleaseKey,result.getReleaseKey());
  assertEquals(appId,result.getAppId());
  assertEquals(someClusterName,result.getCluster());
  assertEquals(somePublicNamespaceName,result.getNamespaceName());
  assertEquals("foo",result.getConfigurations().get("apollo.public.bar"));
}
