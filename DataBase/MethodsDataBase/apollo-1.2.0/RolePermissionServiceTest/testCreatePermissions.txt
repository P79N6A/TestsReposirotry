@Test @Sql(scripts="/sql/cleanup.sql",executionPhase=Sql.ExecutionPhase.AFTER_TEST_METHOD) public void testCreatePermissions() throws Exception {
  String someTargetId="someTargetId";
  String anotherTargetId="anotherTargetId";
  String somePermissionType="somePermissionType";
  String anotherPermissionType="anotherPermissionType";
  Permission somePermission=assemblePermission(somePermissionType,someTargetId);
  Permission anotherPermission=assemblePermission(anotherPermissionType,anotherTargetId);
  Set<Permission> created=rolePermissionService.createPermissions(Sets.newHashSet(somePermission,anotherPermission));
  Set<Long> permissionIds=FluentIterable.from(created).transform(BaseEntity::getId).toSet();
  Iterable<Permission> permissionsFromDB=permissionRepository.findAllById(permissionIds);
  Set<String> targetIds=Sets.newHashSet();
  Set<String> permissionTypes=Sets.newHashSet();
  for (  Permission permission : permissionsFromDB) {
    targetIds.add(permission.getTargetId());
    permissionTypes.add(permission.getPermissionType());
  }
  assertEquals(2,targetIds.size());
  assertEquals(2,permissionTypes.size());
  assertTrue(targetIds.containsAll(Sets.newHashSet(someTargetId,anotherTargetId)));
  assertTrue(permissionTypes.containsAll(Sets.newHashSet(somePermissionType,anotherPermissionType)));
}
