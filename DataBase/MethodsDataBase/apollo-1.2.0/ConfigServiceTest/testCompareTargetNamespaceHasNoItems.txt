@Test public void testCompareTargetNamespaceHasNoItems(){
  ItemDTO sourceItem1=new ItemDTO("a","b","comment",1);
  List<ItemDTO> sourceItems=Arrays.asList(sourceItem1);
  String appId="6666", env="LOCAL", clusterName=ConfigConsts.CLUSTER_NAME_DEFAULT, namespaceName=ConfigConsts.NAMESPACE_APPLICATION;
  List<NamespaceIdentifier> namespaceIdentifiers=generateNamespaceIdentifier(appId,env,clusterName,namespaceName);
  NamespaceDTO namespaceDTO=generateNamespaceDTO(appId,clusterName,namespaceName);
  when(namespaceAPI.loadNamespace(appId,Env.valueOf(env),clusterName,namespaceName)).thenReturn(namespaceDTO);
  when(itemAPI.findItems(appId,Env.valueOf(env),clusterName,namespaceName)).thenReturn(null);
  UserInfo userInfo=new UserInfo();
  userInfo.setUserId("test");
  when(userInfoHolder.getUser()).thenReturn(userInfo);
  List<ItemDiffs> itemDiffses=configService.compare(namespaceIdentifiers,sourceItems);
  assertEquals(1,itemDiffses.size());
  ItemDiffs itemDiffs=itemDiffses.get(0);
  ItemChangeSets changeSets=itemDiffs.getDiffs();
  assertEquals(0,changeSets.getUpdateItems().size());
  assertEquals(0,changeSets.getDeleteItems().size());
  List<ItemDTO> createItems=changeSets.getCreateItems();
  ItemDTO createItem=createItems.get(0);
  assertEquals(1,createItem.getLineNum());
  assertEquals("a",createItem.getKey());
  assertEquals("b",createItem.getValue());
  assertEquals("comment",createItem.getComment());
}
