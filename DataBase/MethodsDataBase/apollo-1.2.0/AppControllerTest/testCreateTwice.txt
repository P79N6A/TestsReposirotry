@Test @Sql(scripts="/controller/cleanup.sql",executionPhase=ExecutionPhase.AFTER_TEST_METHOD) public void testCreateTwice(){
  AppDTO dto=generateSampleDTOData();
  ResponseEntity<AppDTO> response=restTemplate.postForEntity(getBaseAppUrl(),dto,AppDTO.class);
  AppDTO first=response.getBody();
  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());
  Assert.assertEquals(dto.getAppId(),first.getAppId());
  Assert.assertTrue(first.getId() > 0);
  App savedApp=appRepository.findById(first.getId()).orElse(null);
  Assert.assertEquals(dto.getAppId(),savedApp.getAppId());
  Assert.assertNotNull(savedApp.getDataChangeCreatedTime());
  try {
    restTemplate.postForEntity(getBaseAppUrl(),dto,AppDTO.class);
  }
 catch (  HttpClientErrorException e) {
    Assert.assertEquals(HttpStatus.BAD_REQUEST,e.getStatusCode());
  }
}
