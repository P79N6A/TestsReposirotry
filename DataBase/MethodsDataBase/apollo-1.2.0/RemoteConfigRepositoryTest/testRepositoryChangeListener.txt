@Test public void testRepositoryChangeListener() throws Exception {
  Map<String,String> configurations=ImmutableMap.of("someKey","someValue");
  ApolloConfig someApolloConfig=assembleApolloConfig(configurations);
  when(someResponse.getStatusCode()).thenReturn(200);
  when(someResponse.getBody()).thenReturn(someApolloConfig);
  RepositoryChangeListener someListener=mock(RepositoryChangeListener.class);
  RemoteConfigRepository remoteConfigRepository=new RemoteConfigRepository(someNamespace);
  remoteConfigRepository.addChangeListener(someListener);
  final ArgumentCaptor<Properties> captor=ArgumentCaptor.forClass(Properties.class);
  Map<String,String> newConfigurations=ImmutableMap.of("someKey","anotherValue");
  ApolloConfig newApolloConfig=assembleApolloConfig(newConfigurations);
  when(someResponse.getBody()).thenReturn(newApolloConfig);
  remoteConfigRepository.sync();
  verify(someListener,times(1)).onRepositoryChange(eq(someNamespace),captor.capture());
  assertEquals(newConfigurations,captor.getValue());
  remoteConfigLongPollService.stopLongPollingRefresh();
}
