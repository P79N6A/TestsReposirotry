@Test public void testLongPollingRefresh() throws Exception {
  Map<String,String> configurations=ImmutableMap.of("someKey","someValue");
  ApolloConfig someApolloConfig=assembleApolloConfig(configurations);
  when(someResponse.getStatusCode()).thenReturn(200);
  when(someResponse.getBody()).thenReturn(someApolloConfig);
  final SettableFuture<Boolean> longPollFinished=SettableFuture.create();
  RepositoryChangeListener someListener=mock(RepositoryChangeListener.class);
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      longPollFinished.set(true);
      return null;
    }
  }
).when(someListener).onRepositoryChange(any(String.class),any(Properties.class));
  RemoteConfigRepository remoteConfigRepository=new RemoteConfigRepository(someNamespace);
  remoteConfigRepository.addChangeListener(someListener);
  final ArgumentCaptor<Properties> captor=ArgumentCaptor.forClass(Properties.class);
  Map<String,String> newConfigurations=ImmutableMap.of("someKey","anotherValue");
  ApolloConfig newApolloConfig=assembleApolloConfig(newConfigurations);
  ApolloNotificationMessages notificationMessages=new ApolloNotificationMessages();
  String someKey="someKey";
  long someNotificationId=1;
  notificationMessages.put(someKey,someNotificationId);
  ApolloConfigNotification someNotification=mock(ApolloConfigNotification.class);
  when(someNotification.getNamespaceName()).thenReturn(someNamespace);
  when(someNotification.getMessages()).thenReturn(notificationMessages);
  when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_OK);
  when(pollResponse.getBody()).thenReturn(Lists.newArrayList(someNotification));
  when(someResponse.getBody()).thenReturn(newApolloConfig);
  longPollFinished.get(500,TimeUnit.MILLISECONDS);
  remoteConfigLongPollService.stopLongPollingRefresh();
  verify(someListener,times(1)).onRepositoryChange(eq(someNamespace),captor.capture());
  assertEquals(newConfigurations,captor.getValue());
  final ArgumentCaptor<HttpRequest> httpRequestArgumentCaptor=ArgumentCaptor.forClass(HttpRequest.class);
  verify(httpUtil,atLeast(2)).doGet(httpRequestArgumentCaptor.capture(),eq(ApolloConfig.class));
  HttpRequest request=httpRequestArgumentCaptor.getValue();
  assertTrue(request.getUrl().contains("messages=%7B%22details%22%3A%7B%22someKey%22%3A1%7D%7D"));
}
