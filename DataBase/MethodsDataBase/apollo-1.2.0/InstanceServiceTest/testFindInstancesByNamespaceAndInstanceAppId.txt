@Test @Rollback public void testFindInstancesByNamespaceAndInstanceAppId() throws Exception {
  String someConfigAppId="someConfigAppId";
  String someConfigClusterName="someConfigClusterName";
  String someConfigNamespaceName="someConfigNamespaceName";
  String someReleaseKey="someReleaseKey";
  Date someValidDate=new Date();
  String someAppId="someAppId";
  String anotherAppId="anotherAppId";
  String someClusterName="someClusterName";
  String someDataCenter="someDataCenter";
  String someIp="someIp";
  Instance someInstance=instanceService.createInstance(assembleInstance(someAppId,someClusterName,someDataCenter,someIp));
  Instance anotherInstance=instanceService.createInstance(assembleInstance(anotherAppId,someClusterName,someDataCenter,someIp));
  prepareInstanceConfigForInstance(someInstance.getId(),someConfigAppId,someConfigClusterName,someConfigNamespaceName,someReleaseKey,someValidDate);
  prepareInstanceConfigForInstance(anotherInstance.getId(),someConfigAppId,someConfigClusterName,someConfigNamespaceName,someReleaseKey,someValidDate);
  Page<Instance> result=instanceService.findInstancesByNamespaceAndInstanceAppId(someAppId,someConfigAppId,someConfigClusterName,someConfigNamespaceName,PageRequest.of(0,10));
  Page<Instance> anotherResult=instanceService.findInstancesByNamespaceAndInstanceAppId(anotherAppId,someConfigAppId,someConfigClusterName,someConfigNamespaceName,PageRequest.of(0,10));
  assertEquals(Lists.newArrayList(someInstance),result.getContent());
  assertEquals(Lists.newArrayList(anotherInstance),anotherResult.getContent());
}
