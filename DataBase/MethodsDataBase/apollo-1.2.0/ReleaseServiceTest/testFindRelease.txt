@Test public void testFindRelease() throws Exception {
  String someAppId="1";
  String someClusterName="someClusterName";
  String someNamespaceName="someNamespaceName";
  long someReleaseId=1;
  String someReleaseKey="someKey";
  String someValidConfiguration="{\"apollo.bar\": \"foo\"}";
  Release someRelease=MockBeanFactory.mockRelease(someReleaseId,someReleaseKey,someAppId,someClusterName,someNamespaceName,someValidConfiguration);
  when(releaseRepository.findFirstByAppIdAndClusterNameAndNamespaceNameAndIsAbandonedFalseOrderByIdDesc(someAppId,someClusterName,someNamespaceName)).thenReturn(someRelease);
  Release result=releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName);
  verify(releaseRepository,times(1)).findFirstByAppIdAndClusterNameAndNamespaceNameAndIsAbandonedFalseOrderByIdDesc(someAppId,someClusterName,someNamespaceName);
  assertEquals(someAppId,result.getAppId());
  assertEquals(someClusterName,result.getClusterName());
  assertEquals(someReleaseId,result.getId());
  assertEquals(someReleaseKey,result.getReleaseKey());
  assertEquals(someValidConfiguration,result.getConfigurations());
}
