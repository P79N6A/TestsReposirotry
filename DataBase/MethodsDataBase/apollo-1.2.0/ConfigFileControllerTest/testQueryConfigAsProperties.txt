@Test public void testQueryConfigAsProperties() throws Exception {
  String someKey="someKey";
  String someValue="someValue";
  String anotherKey="anotherKey";
  String anotherValue="anotherValue";
  String someWatchKey="someWatchKey";
  String anotherWatchKey="anotherWatchKey";
  Set<String> watchKeys=Sets.newHashSet(someWatchKey,anotherWatchKey);
  String cacheKey=configFileController.assembleCacheKey(ConfigFileController.ConfigFileOutputFormat.PROPERTIES,someAppId,someClusterName,someNamespace,someDataCenter);
  Map<String,String> configurations=ImmutableMap.of(someKey,someValue,anotherKey,anotherValue);
  ApolloConfig someApolloConfig=mock(ApolloConfig.class);
  when(someApolloConfig.getConfigurations()).thenReturn(configurations);
  when(configController.queryConfig(someAppId,someClusterName,someNamespace,someDataCenter,"-1",someClientIp,null,someRequest,someResponse)).thenReturn(someApolloConfig);
  when(watchKeysUtil.assembleAllWatchKeys(someAppId,someClusterName,someNamespace,someDataCenter)).thenReturn(watchKeys);
  ResponseEntity<String> response=configFileController.queryConfigAsProperties(someAppId,someClusterName,someNamespace,someDataCenter,someClientIp,someRequest,someResponse);
  assertEquals(2,watchedKeys2CacheKey.size());
  assertEquals(2,cacheKey2WatchedKeys.size());
  assertTrue(watchedKeys2CacheKey.containsEntry(someWatchKey,cacheKey));
  assertTrue(watchedKeys2CacheKey.containsEntry(anotherWatchKey,cacheKey));
  assertTrue(cacheKey2WatchedKeys.containsEntry(cacheKey,someWatchKey));
  assertTrue(cacheKey2WatchedKeys.containsEntry(cacheKey,anotherWatchKey));
  assertEquals(HttpStatus.OK,response.getStatusCode());
  assertTrue(response.getBody().contains(String.format("%s=%s",someKey,someValue)));
  assertTrue(response.getBody().contains(String.format("%s=%s",anotherKey,anotherValue)));
  ResponseEntity<String> anotherResponse=configFileController.queryConfigAsProperties(someAppId,someClusterName,someNamespace,someDataCenter,someClientIp,someRequest,someResponse);
  assertEquals(response,anotherResponse);
  verify(configController,times(1)).queryConfig(someAppId,someClusterName,someNamespace,someDataCenter,"-1",someClientIp,null,someRequest,someResponse);
}
