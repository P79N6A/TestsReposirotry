@Test public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {
  Config applicationConfig=mock(Config.class);
  Config fxApolloConfig=mock(Config.class);
  mockConfig(ConfigConsts.NAMESPACE_APPLICATION,applicationConfig);
  mockConfig(FX_APOLLO_NAMESPACE,fxApolloConfig);
  TestApolloConfigChangeListenerWithInterestedKeysBean bean=getBean(TestApolloConfigChangeListenerWithInterestedKeysBean.class,AppConfig8.class);
  final ArgumentCaptor<Set> applicationConfigInterestedKeys=ArgumentCaptor.forClass(Set.class);
  final ArgumentCaptor<Set> fxApolloConfigInterestedKeys=ArgumentCaptor.forClass(Set.class);
  verify(applicationConfig,times(2)).addChangeListener(any(ConfigChangeListener.class),applicationConfigInterestedKeys.capture());
  verify(fxApolloConfig,times(1)).addChangeListener(any(ConfigChangeListener.class),fxApolloConfigInterestedKeys.capture());
  assertEquals(2,applicationConfigInterestedKeys.getAllValues().size());
  Set<String> result=Sets.newHashSet();
  for (  Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {
    result.addAll(interestedKeys);
  }
  assertEquals(Sets.newHashSet("someKey","anotherKey"),result);
  assertEquals(1,fxApolloConfigInterestedKeys.getAllValues().size());
  assertEquals(asList(Sets.newHashSet("anotherKey")),fxApolloConfigInterestedKeys.getAllValues());
}
