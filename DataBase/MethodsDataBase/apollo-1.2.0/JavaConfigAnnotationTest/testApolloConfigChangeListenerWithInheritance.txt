@Test public void testApolloConfigChangeListenerWithInheritance() throws Exception {
  Config applicationConfig=mock(Config.class);
  Config fxApolloConfig=mock(Config.class);
  mockConfig(ConfigConsts.NAMESPACE_APPLICATION,applicationConfig);
  mockConfig(FX_APOLLO_NAMESPACE,fxApolloConfig);
  final List<ConfigChangeListener> applicationListeners=Lists.newArrayList();
  final List<ConfigChangeListener> fxApolloListeners=Lists.newArrayList();
  doAnswer(new Answer(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      applicationListeners.add(invocation.getArgumentAt(0,ConfigChangeListener.class));
      return Void.class;
    }
  }
).when(applicationConfig).addChangeListener(any(ConfigChangeListener.class));
  doAnswer(new Answer(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      fxApolloListeners.add(invocation.getArgumentAt(0,ConfigChangeListener.class));
      return Void.class;
    }
  }
).when(fxApolloConfig).addChangeListener(any(ConfigChangeListener.class));
  ConfigChangeEvent someEvent=mock(ConfigChangeEvent.class);
  ConfigChangeEvent anotherEvent=mock(ConfigChangeEvent.class);
  TestApolloChildConfigChangeListener bean=getBean(TestApolloChildConfigChangeListener.class,AppConfig7.class);
  assertEquals(5,applicationListeners.size());
  assertEquals(1,fxApolloListeners.size());
  for (  ConfigChangeListener listener : applicationListeners) {
    listener.onChange(someEvent);
  }
  assertEquals(someEvent,bean.getChangeEvent1());
  assertEquals(someEvent,bean.getChangeEvent2());
  assertEquals(someEvent,bean.getChangeEvent3());
  assertEquals(someEvent,bean.getSomeChangeEvent());
  for (  ConfigChangeListener listener : fxApolloListeners) {
    listener.onChange(anotherEvent);
  }
  assertEquals(someEvent,bean.getChangeEvent1());
  assertEquals(someEvent,bean.getChangeEvent2());
  assertEquals(anotherEvent,bean.getChangeEvent3());
  assertEquals(someEvent,bean.getSomeChangeEvent());
}
