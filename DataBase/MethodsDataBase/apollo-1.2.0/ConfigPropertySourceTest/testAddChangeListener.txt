@Test public void testAddChangeListener() throws Exception {
  ConfigChangeListener someListener=mock(ConfigChangeListener.class);
  ConfigChangeListener anotherListener=mock(ConfigChangeListener.class);
  final List<ConfigChangeListener> listeners=Lists.newArrayList();
  doAnswer(new Answer(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      listeners.add(invocation.getArgumentAt(0,ConfigChangeListener.class));
      return Void.class;
    }
  }
).when(someConfig).addChangeListener(any(ConfigChangeListener.class));
  configPropertySource.addChangeListener(someListener);
  configPropertySource.addChangeListener(anotherListener);
  assertEquals(2,listeners.size());
  assertTrue(listeners.containsAll(Lists.newArrayList(someListener,anotherListener)));
}
