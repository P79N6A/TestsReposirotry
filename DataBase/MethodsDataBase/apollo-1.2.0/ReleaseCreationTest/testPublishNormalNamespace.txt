@Test @Sql(scripts="/sql/release-creation-test.sql",executionPhase=Sql.ExecutionPhase.BEFORE_TEST_METHOD) @Sql(scripts="/sql/clean.sql",executionPhase=Sql.ExecutionPhase.AFTER_TEST_METHOD) public void testPublishNormalNamespace(){
  long namespaceId=100;
  String clusterName="only-master";
  Namespace namespace=instanceNamespace(namespaceId,clusterName);
  releaseService.publish(namespace,"","",operator,false);
  Release latestRelease=releaseService.findLatestActiveRelease(namespace);
  Assert.assertNotNull(latestRelease);
  Map<String,String> configuration=parseConfiguration(latestRelease.getConfigurations());
  Assert.assertEquals(3,configuration.size());
  Assert.assertEquals("v1",configuration.get("k1"));
  Assert.assertEquals("v2",configuration.get("k2"));
  Assert.assertEquals("v3",configuration.get("k3"));
  Page<ReleaseHistory> releaseHistories=releaseHistoryService.findReleaseHistoriesByNamespace(testApp,clusterName,testNamespace,pageable);
  ReleaseHistory releaseHistory=releaseHistories.getContent().get(0);
  Assert.assertEquals(1,releaseHistories.getTotalElements());
  Assert.assertEquals(ReleaseOperation.NORMAL_RELEASE,releaseHistory.getOperation());
  Assert.assertEquals(latestRelease.getId(),releaseHistory.getReleaseId());
  Assert.assertEquals(0,releaseHistory.getPreviousReleaseId());
}
