@Test public void getByRelease() throws Exception {
  long someReleaseId=1;
  long someInstanceId=1;
  long anotherInstanceId=2;
  String someReleaseKey="someKey";
  Release someRelease=new Release();
  someRelease.setReleaseKey(someReleaseKey);
  String someAppId="someAppId";
  String anotherAppId="anotherAppId";
  String someCluster="someCluster";
  String someDataCenter="someDC";
  String someConfigAppId="someConfigAppId";
  String someConfigNamespace="someNamespace";
  String someIp="someIp";
  Date someReleaseDeliveryTime=new Date();
  Date anotherReleaseDeliveryTime=new Date();
  when(releaseService.findOne(someReleaseId)).thenReturn(someRelease);
  InstanceConfig someInstanceConfig=assembleInstanceConfig(someInstanceId,someConfigAppId,someConfigNamespace,someReleaseKey,someReleaseDeliveryTime);
  InstanceConfig anotherInstanceConfig=assembleInstanceConfig(anotherInstanceId,someConfigAppId,someConfigNamespace,someReleaseKey,anotherReleaseDeliveryTime);
  List<InstanceConfig> instanceConfigs=Lists.newArrayList(someInstanceConfig,anotherInstanceConfig);
  Page<InstanceConfig> instanceConfigPage=new PageImpl<>(instanceConfigs,pageable,instanceConfigs.size());
  when(instanceService.findActiveInstanceConfigsByReleaseKey(someReleaseKey,pageable)).thenReturn(instanceConfigPage);
  Instance someInstance=assembleInstance(someInstanceId,someAppId,someCluster,someDataCenter,someIp);
  Instance anotherInstance=assembleInstance(anotherInstanceId,anotherAppId,someCluster,someDataCenter,someIp);
  List<Instance> instances=Lists.newArrayList(someInstance,anotherInstance);
  Set<Long> instanceIds=Sets.newHashSet(someInstanceId,anotherInstanceId);
  when(instanceService.findInstancesByIds(instanceIds)).thenReturn(instances);
  PageDTO<InstanceDTO> result=instanceConfigController.getByRelease(someReleaseId,pageable);
  assertEquals(2,result.getContent().size());
  InstanceDTO someInstanceDto=null;
  InstanceDTO anotherInstanceDto=null;
  for (  InstanceDTO instanceDTO : result.getContent()) {
    if (instanceDTO.getId() == someInstanceId) {
      someInstanceDto=instanceDTO;
    }
 else     if (instanceDTO.getId() == anotherInstanceId) {
      anotherInstanceDto=instanceDTO;
    }
  }
  verifyInstance(someInstance,someInstanceDto);
  verifyInstance(anotherInstance,anotherInstanceDto);
  assertEquals(1,someInstanceDto.getConfigs().size());
  assertEquals(someReleaseDeliveryTime,someInstanceDto.getConfigs().get(0).getReleaseDeliveryTime());
  assertEquals(1,anotherInstanceDto.getConfigs().size());
  assertEquals(anotherReleaseDeliveryTime,anotherInstanceDto.getConfigs().get(0).getReleaseDeliveryTime());
}
