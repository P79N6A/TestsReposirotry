@Test public void testOverread() throws HttpDataSourceException {
  testDataSpec=new DataSpec(Uri.parse(TEST_URL),0,16,null);
  testResponseHeader.put("Content-Length",Long.toString(16L));
  mockResponseStartSuccess();
  mockReadSuccess(0,16);
  dataSourceUnderTest.open(testDataSpec);
  byte[] returnedBuffer=new byte[8];
  int bytesRead=dataSourceUnderTest.read(returnedBuffer,0,8);
  assertThat(bytesRead).isEqualTo(8);
  assertThat(returnedBuffer).isEqualTo(buildTestDataArray(0,8));
  returnedBuffer=new byte[8];
  bytesRead+=dataSourceUnderTest.read(returnedBuffer,0,6);
  assertThat(bytesRead).isEqualTo(14);
  assertThat(returnedBuffer).isEqualTo(suffixZeros(buildTestDataArray(8,6),8));
  returnedBuffer=new byte[8];
  bytesRead+=dataSourceUnderTest.read(returnedBuffer,0,8);
  assertThat(bytesRead).isEqualTo(16);
  assertThat(returnedBuffer).isEqualTo(suffixZeros(buildTestDataArray(14,2),8));
  verify(mockUrlRequest,times(1)).read(any(ByteBuffer.class));
  verify(mockTransferListener,times(1)).onBytesTransferred(dataSourceUnderTest,testDataSpec,true,8);
  verify(mockTransferListener,times(1)).onBytesTransferred(dataSourceUnderTest,testDataSpec,true,6);
  verify(mockTransferListener,times(1)).onBytesTransferred(dataSourceUnderTest,testDataSpec,true,2);
  returnedBuffer=new byte[16];
  int bytesOverRead=dataSourceUnderTest.read(returnedBuffer,0,16);
  assertThat(bytesOverRead).isEqualTo(C.RESULT_END_OF_INPUT);
  assertThat(returnedBuffer).isEqualTo(new byte[16]);
  verify(mockTransferListener,never()).onBytesTransferred(dataSourceUnderTest,testDataSpec,true,C.RESULT_END_OF_INPUT);
  verify(mockUrlRequest,times(1)).read(any(ByteBuffer.class));
  verify(mockUrlRequest,never()).cancel();
  assertThat(bytesRead).isEqualTo(16);
}
