@Test public void testParseMediaPlaylist() throws Exception {
  Uri playlistUri=Uri.parse("https://example.com/test.m3u8");
  String playlistString="#EXTM3U\n" + "#EXT-X-VERSION:3\n" + "#EXT-X-PLAYLIST-TYPE:VOD\n"+ "#EXT-X-START:TIME-OFFSET=-25"+ "#EXT-X-TARGETDURATION:8\n"+ "#EXT-X-MEDIA-SEQUENCE:2679\n"+ "#EXT-X-DISCONTINUITY-SEQUENCE:4\n"+ "#EXT-X-ALLOW-CACHE:YES\n"+ "\n"+ "#EXTINF:7.975,\n"+ "#EXT-X-BYTERANGE:51370@0\n"+ "https://priv.example.com/fileSequence2679.ts\n"+ "\n"+ "#EXT-X-KEY:METHOD=AES-128,"+ "URI=\"https://priv.example.com/key.php?r=2680\",IV=0x1566B\n"+ "#EXTINF:7.975,segment title\n"+ "#EXT-X-BYTERANGE:51501@2147483648\n"+ "https://priv.example.com/fileSequence2680.ts\n"+ "\n"+ "#EXT-X-KEY:METHOD=NONE\n"+ "#EXTINF:7.941,segment title .,:/# with interesting chars\n"+ "#EXT-X-BYTERANGE:51501\n"+ "https://priv.example.com/fileSequence2681.ts\n"+ "\n"+ "#EXT-X-DISCONTINUITY\n"+ "#EXT-X-KEY:METHOD=AES-128,URI=\"https://priv.example.com/key.php?r=2682\"\n"+ "#EXTINF:7.975\n"+ "#EXT-X-BYTERANGE:51740\n"+ "https://priv.example.com/fileSequence2682.ts\n"+ "\n"+ "#EXTINF:7.975,\n"+ "https://priv.example.com/fileSequence2683.ts\n"+ "#EXT-X-ENDLIST";
  InputStream inputStream=new ByteArrayInputStream(Util.getUtf8Bytes(playlistString));
  HlsPlaylist playlist=new HlsPlaylistParser().parse(playlistUri,inputStream);
  HlsMediaPlaylist mediaPlaylist=(HlsMediaPlaylist)playlist;
  assertThat(mediaPlaylist.playlistType).isEqualTo(HlsMediaPlaylist.PLAYLIST_TYPE_VOD);
  assertThat(mediaPlaylist.startOffsetUs).isEqualTo(mediaPlaylist.durationUs - 25000000);
  assertThat(mediaPlaylist.mediaSequence).isEqualTo(2679);
  assertThat(mediaPlaylist.version).isEqualTo(3);
  assertThat(mediaPlaylist.hasEndTag).isTrue();
  assertThat(mediaPlaylist.protectionSchemes).isNull();
  List<Segment> segments=mediaPlaylist.segments;
  assertThat(segments).isNotNull();
  assertThat(segments).hasSize(5);
  Segment segment=segments.get(0);
  assertThat(mediaPlaylist.discontinuitySequence + segment.relativeDiscontinuitySequence).isEqualTo(4);
  assertThat(segment.durationUs).isEqualTo(7975000);
  assertThat(segment.title).isEqualTo("");
  assertThat(segment.fullSegmentEncryptionKeyUri).isNull();
  assertThat(segment.encryptionIV).isNull();
  assertThat(segment.byterangeLength).isEqualTo(51370);
  assertThat(segment.byterangeOffset).isEqualTo(0);
  assertThat(segment.url).isEqualTo("https://priv.example.com/fileSequence2679.ts");
  segment=segments.get(1);
  assertThat(segment.relativeDiscontinuitySequence).isEqualTo(0);
  assertThat(segment.durationUs).isEqualTo(7975000);
  assertThat(segment.title).isEqualTo("segment title");
  assertThat(segment.fullSegmentEncryptionKeyUri).isEqualTo("https://priv.example.com/key.php?r=2680");
  assertThat(segment.encryptionIV).isEqualTo("0x1566B");
  assertThat(segment.byterangeLength).isEqualTo(51501);
  assertThat(segment.byterangeOffset).isEqualTo(2147483648L);
  assertThat(segment.url).isEqualTo("https://priv.example.com/fileSequence2680.ts");
  segment=segments.get(2);
  assertThat(segment.relativeDiscontinuitySequence).isEqualTo(0);
  assertThat(segment.durationUs).isEqualTo(7941000);
  assertThat(segment.title).isEqualTo("segment title .,:/# with interesting chars");
  assertThat(segment.fullSegmentEncryptionKeyUri).isNull();
  assertThat(segment.encryptionIV).isEqualTo(null);
  assertThat(segment.byterangeLength).isEqualTo(51501);
  assertThat(segment.byterangeOffset).isEqualTo(2147535149L);
  assertThat(segment.url).isEqualTo("https://priv.example.com/fileSequence2681.ts");
  segment=segments.get(3);
  assertThat(segment.relativeDiscontinuitySequence).isEqualTo(1);
  assertThat(segment.durationUs).isEqualTo(7975000);
  assertThat(segment.title).isEqualTo("");
  assertThat(segment.fullSegmentEncryptionKeyUri).isEqualTo("https://priv.example.com/key.php?r=2682");
  assertThat(segment.encryptionIV).isNotNull();
  assertThat(Util.toUpperInvariant(segment.encryptionIV)).isEqualTo("A7A");
  assertThat(segment.byterangeLength).isEqualTo(51740);
  assertThat(segment.byterangeOffset).isEqualTo(2147586650L);
  assertThat(segment.url).isEqualTo("https://priv.example.com/fileSequence2682.ts");
  segment=segments.get(4);
  assertThat(segment.relativeDiscontinuitySequence).isEqualTo(1);
  assertThat(segment.durationUs).isEqualTo(7975000);
  assertThat(segment.title).isEqualTo("");
  assertThat(segment.fullSegmentEncryptionKeyUri).isEqualTo("https://priv.example.com/key.php?r=2682");
  assertThat(segment.encryptionIV).isNotNull();
  assertThat(Util.toUpperInvariant(segment.encryptionIV)).isEqualTo("A7B");
  assertThat(segment.byterangeLength).isEqualTo(C.LENGTH_UNSET);
  assertThat(segment.byterangeOffset).isEqualTo(0);
  assertThat(segment.url).isEqualTo("https://priv.example.com/fileSequence2683.ts");
}
