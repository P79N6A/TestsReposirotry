@Test public void testException() throws IOException {
  String errorMessage="error, error, error";
  IOException exception=new IOException(errorMessage);
  FakeDataSource dataSource=new FakeDataSource(new FakeDataSet().newData(uri.toString()).appendReadData(TEST_DATA).appendReadError(exception).appendReadData(TEST_DATA).endData());
  assertThat(dataSource.open(new DataSpec(uri))).isEqualTo(30);
  assertThat(dataSource.read(BUFFER,0,BUFFER.length)).isEqualTo(15);
  assertBuffer(TEST_DATA);
  try {
    dataSource.read(BUFFER,0,BUFFER.length);
    fail("IOException expected.");
  }
 catch (  IOException e) {
    assertThat(e).hasMessageThat().isEqualTo(errorMessage);
  }
  try {
    dataSource.read(BUFFER,0,BUFFER.length);
    fail("IOException expected.");
  }
 catch (  IOException e) {
    assertThat(e).hasMessageThat().isEqualTo(errorMessage);
  }
  dataSource.close();
  assertThat(dataSource.open(new DataSpec(uri,15,15,null))).isEqualTo(15);
  assertThat(dataSource.read(BUFFER,0,BUFFER.length)).isEqualTo(15);
  assertBuffer(TEST_DATA);
  assertThat(dataSource.read(BUFFER,0,BUFFER.length)).isEqualTo(C.RESULT_END_OF_INPUT);
  dataSource.close();
}
