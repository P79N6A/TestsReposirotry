@Test public void testSleep() throws InterruptedException {
  FakeClock fakeClock=new FakeClock(0);
  SleeperThread sleeperThread=new SleeperThread(fakeClock,1000);
  sleeperThread.start();
  assertThat(sleeperThread.waitUntilAsleep(TIMEOUT_MS)).isTrue();
  assertThat(sleeperThread.isSleeping()).isTrue();
  fakeClock.advanceTime(1000);
  sleeperThread.join(TIMEOUT_MS);
  assertThat(sleeperThread.isSleeping()).isFalse();
  sleeperThread=new SleeperThread(fakeClock,0);
  sleeperThread.start();
  sleeperThread.join();
  assertThat(sleeperThread.isSleeping()).isFalse();
  SleeperThread[] sleeperThreads=new SleeperThread[5];
  sleeperThreads[0]=new SleeperThread(fakeClock,1000);
  sleeperThreads[1]=new SleeperThread(fakeClock,1000);
  sleeperThreads[2]=new SleeperThread(fakeClock,2000);
  sleeperThreads[3]=new SleeperThread(fakeClock,3000);
  sleeperThreads[4]=new SleeperThread(fakeClock,4000);
  for (  SleeperThread thread : sleeperThreads) {
    thread.start();
    assertThat(thread.waitUntilAsleep(TIMEOUT_MS)).isTrue();
  }
  assertSleepingStates(new boolean[]{true,true,true,true,true},sleeperThreads);
  fakeClock.advanceTime(1500);
  assertThat(sleeperThreads[0].waitUntilAwake(TIMEOUT_MS)).isTrue();
  assertThat(sleeperThreads[1].waitUntilAwake(TIMEOUT_MS)).isTrue();
  assertSleepingStates(new boolean[]{false,false,true,true,true},sleeperThreads);
  fakeClock.advanceTime(2000);
  assertThat(sleeperThreads[2].waitUntilAwake(TIMEOUT_MS)).isTrue();
  assertThat(sleeperThreads[3].waitUntilAwake(TIMEOUT_MS)).isTrue();
  assertSleepingStates(new boolean[]{false,false,false,false,true},sleeperThreads);
  fakeClock.advanceTime(2000);
  for (  SleeperThread thread : sleeperThreads) {
    thread.join(TIMEOUT_MS);
  }
  assertSleepingStates(new boolean[]{false,false,false,false,false},sleeperThreads);
}
