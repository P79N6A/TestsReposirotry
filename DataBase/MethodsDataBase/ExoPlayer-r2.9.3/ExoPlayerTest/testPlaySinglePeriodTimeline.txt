/** 
 * Tests playback of a source that exposes a single period. 
 */
@Test public void testPlaySinglePeriodTimeline() throws Exception {
  Timeline timeline=new FakeTimeline(1);
  Object manifest=new Object();
  FakeRenderer renderer=new FakeRenderer(Builder.VIDEO_FORMAT);
  ExoPlayerTestRunner testRunner=new Builder().setTimeline(timeline).setManifest(manifest).setRenderers(renderer).build(context).start().blockUntilEnded(TIMEOUT_MS);
  testRunner.assertNoPositionDiscontinuities();
  testRunner.assertTimelinesEqual(timeline);
  testRunner.assertManifestsEqual(manifest);
  testRunner.assertTimelineChangeReasonsEqual(Player.TIMELINE_CHANGE_REASON_PREPARED);
  testRunner.assertTrackGroupsEqual(new TrackGroupArray(new TrackGroup(Builder.VIDEO_FORMAT)));
  assertThat(renderer.formatReadCount).isEqualTo(1);
  assertThat(renderer.sampleBufferReadCount).isEqualTo(1);
  assertThat(renderer.isEnded).isTrue();
}
