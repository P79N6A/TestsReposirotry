@Test public void testSeekBeforeRepreparationPossibleAfterStopWithReset() throws Exception {
  Timeline timeline=new FakeTimeline(1);
  Timeline secondTimeline=new FakeTimeline(2);
  MediaSource secondSource=new FakeMediaSource(secondTimeline,null,Builder.VIDEO_FORMAT);
  ActionSchedule actionSchedule=new ActionSchedule.Builder("testSeekAfterStopWithReset").waitForPlaybackState(Player.STATE_READY).stop(true).waitForPlaybackState(Player.STATE_IDLE).seek(1,0).prepareSource(secondSource,false,true).build();
  ExoPlayerTestRunner testRunner=new ExoPlayerTestRunner.Builder().setTimeline(timeline).setActionSchedule(actionSchedule).setExpectedPlayerEndedCount(2).build(context).start().blockUntilEnded(TIMEOUT_MS);
  testRunner.assertTimelinesEqual(timeline,Timeline.EMPTY,secondTimeline);
  testRunner.assertTimelineChangeReasonsEqual(Player.TIMELINE_CHANGE_REASON_PREPARED,Player.TIMELINE_CHANGE_REASON_RESET,Player.TIMELINE_CHANGE_REASON_PREPARED);
  testRunner.assertPositionDiscontinuityReasonsEqual(Player.DISCONTINUITY_REASON_SEEK);
  testRunner.assertPlayedPeriodIndices(0,1);
}
