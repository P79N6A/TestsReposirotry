@Test public void testSetPlaybackParametersBeforePreparationCompletesSucceeds() throws Exception {
  final CountDownLatch createPeriodCalledCountDownLatch=new CountDownLatch(1);
  final FakeMediaPeriod[] fakeMediaPeriodHolder=new FakeMediaPeriod[1];
  MediaSource mediaSource=new FakeMediaSource(new FakeTimeline(1),null,Builder.VIDEO_FORMAT){
    @Override protected FakeMediaPeriod createFakeMediaPeriod(    MediaPeriodId id,    TrackGroupArray trackGroupArray,    Allocator allocator,    EventDispatcher eventDispatcher,    @Nullable TransferListener transferListener){
      fakeMediaPeriodHolder[0]=new FakeMediaPeriod(trackGroupArray,eventDispatcher,true);
      createPeriodCalledCountDownLatch.countDown();
      return fakeMediaPeriodHolder[0];
    }
  }
;
  ActionSchedule actionSchedule=new ActionSchedule.Builder("testSetPlaybackParametersBeforePreparationCompletesSucceeds").waitForPlaybackState(Player.STATE_BUFFERING).executeRunnable(() -> {
    try {
      createPeriodCalledCountDownLatch.await();
    }
 catch (    InterruptedException e) {
      throw new IllegalStateException(e);
    }
  }
).setPlaybackParameters(new PlaybackParameters(2f,2f)).executeRunnable(() -> fakeMediaPeriodHolder[0].setPreparationComplete()).build();
  new ExoPlayerTestRunner.Builder().setMediaSource(mediaSource).setActionSchedule(actionSchedule).build(context).start().blockUntilEnded(TIMEOUT_MS);
}
