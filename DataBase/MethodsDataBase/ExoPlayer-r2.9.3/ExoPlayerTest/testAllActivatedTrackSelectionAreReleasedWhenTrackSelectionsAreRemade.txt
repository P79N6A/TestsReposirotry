@Test public void testAllActivatedTrackSelectionAreReleasedWhenTrackSelectionsAreRemade() throws Exception {
  Timeline timeline=new FakeTimeline(1);
  MediaSource mediaSource=new FakeMediaSource(timeline,null,Builder.VIDEO_FORMAT,Builder.AUDIO_FORMAT);
  FakeRenderer videoRenderer=new FakeRenderer(Builder.VIDEO_FORMAT);
  FakeRenderer audioRenderer=new FakeRenderer(Builder.AUDIO_FORMAT);
  final FakeTrackSelector trackSelector=new FakeTrackSelector();
  ActionSchedule disableTrackAction=new ActionSchedule.Builder("testChangeTrackSelection").pause().waitForPlaybackState(Player.STATE_READY).disableRenderer(0).play().build();
  new Builder().setMediaSource(mediaSource).setRenderers(videoRenderer,audioRenderer).setTrackSelector(trackSelector).setActionSchedule(disableTrackAction).build(context).start().blockUntilEnded(TIMEOUT_MS);
  List<FakeTrackSelection> createdTrackSelections=trackSelector.getAllTrackSelections();
  int numSelectionsEnabled=0;
  for (  FakeTrackSelection trackSelection : createdTrackSelections) {
    assertThat(trackSelection.isEnabled).isFalse();
    numSelectionsEnabled+=trackSelection.enableCount;
  }
  assertThat(createdTrackSelections).hasSize(4);
  assertThat(numSelectionsEnabled).isEqualTo(3);
}
