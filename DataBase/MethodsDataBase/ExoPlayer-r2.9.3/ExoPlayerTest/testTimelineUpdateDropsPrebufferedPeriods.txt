@Test public void testTimelineUpdateDropsPrebufferedPeriods() throws Exception {
  Timeline timeline1=new FakeTimeline(new TimelineWindowDefinition(1,1),new TimelineWindowDefinition(1,2));
  final Timeline timeline2=new FakeTimeline(new TimelineWindowDefinition(1,1),new TimelineWindowDefinition(1,3));
  final FakeMediaSource mediaSource=new FakeMediaSource(timeline1,null,Builder.VIDEO_FORMAT);
  ActionSchedule actionSchedule=new ActionSchedule.Builder("testTimelineUpdateDropsPeriods").pause().waitForPlaybackState(Player.STATE_READY).playUntilPosition(0,C.usToMs(TimelineWindowDefinition.DEFAULT_WINDOW_DURATION_US)).executeRunnable(() -> mediaSource.setNewSourceInfo(timeline2,null)).waitForTimelineChanged(timeline2).play().build();
  ExoPlayerTestRunner testRunner=new ExoPlayerTestRunner.Builder().setMediaSource(mediaSource).setActionSchedule(actionSchedule).build(context).start().blockUntilEnded(TIMEOUT_MS);
  testRunner.assertPlayedPeriodIndices(0,1);
  assertThat(mediaSource.getCreatedMediaPeriods()).containsExactly(new MediaPeriodId(timeline1.getUidOfPeriod(0),0),new MediaPeriodId(timeline1.getUidOfPeriod(1),1),new MediaPeriodId(timeline2.getUidOfPeriod(1),2)).inOrder();
}
