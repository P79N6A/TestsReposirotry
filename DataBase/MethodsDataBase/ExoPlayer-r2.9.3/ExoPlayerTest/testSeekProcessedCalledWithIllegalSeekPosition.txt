@Test public void testSeekProcessedCalledWithIllegalSeekPosition() throws Exception {
  ActionSchedule actionSchedule=new ActionSchedule.Builder("testSeekProcessedCalledWithIllegalSeekPosition").waitForPlaybackState(Player.STATE_BUFFERING).seek(100,0).waitForPlaybackState(Player.STATE_IDLE).build();
  final boolean[] onSeekProcessedCalled=new boolean[1];
  EventListener listener=new EventListener(){
    @Override public void onSeekProcessed(){
      onSeekProcessedCalled[0]=true;
    }
  }
;
  ExoPlayerTestRunner testRunner=new Builder().setActionSchedule(actionSchedule).setEventListener(listener).build(context);
  try {
    testRunner.start().blockUntilActionScheduleFinished(TIMEOUT_MS).blockUntilEnded(TIMEOUT_MS);
    fail();
  }
 catch (  ExoPlaybackException e) {
    assertThat(e.getUnexpectedException()).isInstanceOf(IllegalSeekPositionException.class);
  }
  assertThat(onSeekProcessedCalled[0]).isTrue();
}
