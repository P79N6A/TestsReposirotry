@Test public void testPlaybackErrorAndReprepareDoesNotResetPosition() throws Exception {
  final Timeline timeline=new FakeTimeline(2);
  final long[] positionHolder=new long[3];
  final int[] windowIndexHolder=new int[3];
  final FakeMediaSource secondMediaSource=new FakeMediaSource(null,null);
  ActionSchedule actionSchedule=new ActionSchedule.Builder("testPlaybackErrorDoesNotResetPosition").pause().waitForPlaybackState(Player.STATE_READY).playUntilPosition(1,500).throwPlaybackException(ExoPlaybackException.createForSource(new IOException())).waitForPlaybackState(Player.STATE_IDLE).executeRunnable(new PlayerRunnable(){
    @Override public void run(    SimpleExoPlayer player){
      positionHolder[0]=player.getCurrentPosition();
      windowIndexHolder[0]=player.getCurrentWindowIndex();
    }
  }
).prepareSource(secondMediaSource,false,false).waitForPlaybackState(Player.STATE_BUFFERING).executeRunnable(new PlayerRunnable(){
    @Override public void run(    SimpleExoPlayer player){
      positionHolder[1]=player.getCurrentPosition();
      windowIndexHolder[1]=player.getCurrentWindowIndex();
      secondMediaSource.setNewSourceInfo(timeline,null);
    }
  }
).waitForPlaybackState(Player.STATE_READY).executeRunnable(new PlayerRunnable(){
    @Override public void run(    SimpleExoPlayer player){
      positionHolder[2]=player.getCurrentPosition();
      windowIndexHolder[2]=player.getCurrentWindowIndex();
    }
  }
).play().build();
  ExoPlayerTestRunner testRunner=new ExoPlayerTestRunner.Builder().setTimeline(timeline).setActionSchedule(actionSchedule).build(context);
  try {
    testRunner.start().blockUntilActionScheduleFinished(TIMEOUT_MS).blockUntilEnded(TIMEOUT_MS);
    fail();
  }
 catch (  ExoPlaybackException e) {
  }
  assertThat(positionHolder[0]).isAtLeast(500L);
  assertThat(positionHolder[1]).isEqualTo(positionHolder[0]);
  assertThat(positionHolder[2]).isEqualTo(positionHolder[0]);
  assertThat(windowIndexHolder[0]).isEqualTo(1);
  assertThat(windowIndexHolder[1]).isEqualTo(1);
  assertThat(windowIndexHolder[2]).isEqualTo(1);
}
