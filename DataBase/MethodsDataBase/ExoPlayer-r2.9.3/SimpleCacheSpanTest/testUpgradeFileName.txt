@Test public void testUpgradeFileName() throws Exception {
  String key="asd\u00aa";
  int id=index.assignIdForKey(key);
  File v3file=createTestFile(id + ".0.1.v3.exo");
  File v2file=createTestFile("asd%aa.1.2.v2.exo");
  File wrongEscapedV2file=createTestFile("asd%za.3.4.v2.exo");
  File v1File=createTestFile("asd\u00aa.5.6.v1.exo");
  for (  File file : cacheDir.listFiles()) {
    SimpleCacheSpan cacheEntry=SimpleCacheSpan.createCacheEntry(file,index);
    if (file.equals(wrongEscapedV2file)) {
      assertThat(cacheEntry).isNull();
    }
 else {
      assertThat(cacheEntry).isNotNull();
    }
  }
  assertThat(v3file.exists()).isTrue();
  assertThat(v2file.exists()).isFalse();
  assertThat(wrongEscapedV2file.exists()).isTrue();
  assertThat(v1File.exists()).isFalse();
  File[] files=cacheDir.listFiles();
  assertThat(files).hasLength(4);
  Set<String> keys=index.getKeys();
  assertWithMessage("There should be only one key for all files.").that(keys).hasSize(1);
  assertThat(keys).contains(key);
  TreeSet<SimpleCacheSpan> spans=index.get(key).getSpans();
  assertWithMessage("upgradeOldFiles() shouldn't add any spans.").that(spans.isEmpty()).isTrue();
  HashMap<Long,Long> cachedPositions=new HashMap<>();
  for (  File file : files) {
    SimpleCacheSpan cacheSpan=SimpleCacheSpan.createCacheEntry(file,index);
    if (cacheSpan != null) {
      assertThat(cacheSpan.key).isEqualTo(key);
      cachedPositions.put(cacheSpan.position,cacheSpan.lastAccessTimestamp);
    }
  }
  assertThat(cachedPositions.get((long)0)).isEqualTo(1);
  assertThat(cachedPositions.get((long)1)).isEqualTo(2);
  assertThat(cachedPositions.get((long)5)).isEqualTo(6);
}
