/** 
 * Tests text track selection flags. 
 */
@Test public void testsTextTrackSelectionFlags() throws ExoPlaybackException {
  Format forcedOnly=buildTextFormat("forcedOnly","eng",C.SELECTION_FLAG_FORCED);
  Format forcedDefault=buildTextFormat("forcedDefault","eng",C.SELECTION_FLAG_FORCED | C.SELECTION_FLAG_DEFAULT);
  Format defaultOnly=buildTextFormat("defaultOnly","eng",C.SELECTION_FLAG_DEFAULT);
  Format forcedOnlySpanish=buildTextFormat("forcedOnlySpanish","spa",C.SELECTION_FLAG_FORCED);
  Format noFlag=buildTextFormat("noFlag","eng");
  RendererCapabilities[] textRendererCapabilities=new RendererCapabilities[]{ALL_TEXT_FORMAT_SUPPORTED_RENDERER_CAPABILITIES};
  TrackSelectorResult result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(forcedOnly,forcedDefault,defaultOnly,noFlag));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(forcedDefault);
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(forcedOnly,noFlag,defaultOnly));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(defaultOnly);
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(forcedOnly,noFlag));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(forcedOnly);
  trackSelector.setParameters(Parameters.DEFAULT.buildUpon().setDisabledTextTrackSelectionFlags(C.SELECTION_FLAG_DEFAULT).build());
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(defaultOnly,noFlag,forcedOnly,forcedDefault));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(forcedOnly);
  trackSelector.setParameters(trackSelector.getParameters().buildUpon().setPreferredAudioLanguage("spa").build());
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(forcedDefault,forcedOnly,defaultOnly,noFlag,forcedOnlySpanish));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(forcedOnlySpanish);
  trackSelector.setParameters(trackSelector.getParameters().buildUpon().setDisabledTextTrackSelectionFlags(C.SELECTION_FLAG_DEFAULT | C.SELECTION_FLAG_FORCED).build());
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(forcedOnly,forcedDefault,defaultOnly,noFlag));
  assertThat(result.selections.get(0)).isNull();
  trackSelector.setParameters(Parameters.DEFAULT.buildUpon().setPreferredTextLanguage("eng").build());
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(forcedOnly,forcedDefault,defaultOnly,noFlag));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(forcedDefault);
  trackSelector.setParameters(trackSelector.getParameters().buildUpon().setDisabledTextTrackSelectionFlags(C.SELECTION_FLAG_DEFAULT).build());
  result=trackSelector.selectTracks(textRendererCapabilities,wrapFormats(noFlag,forcedOnly,forcedDefault,defaultOnly));
  assertThat(result.selections.get(0).getFormat(0)).isSameAs(noFlag);
}
