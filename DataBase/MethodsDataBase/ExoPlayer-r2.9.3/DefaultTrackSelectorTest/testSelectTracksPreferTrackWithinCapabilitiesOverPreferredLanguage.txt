/** 
 * Tests that track selector will prefer tracks that are within renderer's capabilities over track that have language matching preferred audio given by  {@link Parameters} but exceedrenderer's capabilities.
 */
@Test public void testSelectTracksPreferTrackWithinCapabilitiesOverPreferredLanguage() throws Exception {
  trackSelector.setParameters(new ParametersBuilder().setPreferredAudioLanguage("eng").build());
  Format supportedFrFormat=Format.createAudioSampleFormat("supportedFormat",MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,2,44100,null,null,0,"fra");
  Format exceededEnFormat=Format.createAudioSampleFormat("exceededFormat",MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,2,44100,null,null,0,"eng");
  Map<String,Integer> mappedCapabilities=new HashMap<>();
  mappedCapabilities.put(exceededEnFormat.id,FORMAT_EXCEEDS_CAPABILITIES);
  mappedCapabilities.put(supportedFrFormat.id,FORMAT_HANDLED);
  RendererCapabilities mappedAudioRendererCapabilities=new FakeMappedRendererCapabilities(C.TRACK_TYPE_AUDIO,mappedCapabilities);
  TrackSelectorResult result=trackSelector.selectTracks(new RendererCapabilities[]{mappedAudioRendererCapabilities},singleTrackGroup(exceededEnFormat,supportedFrFormat));
  assertThat(result.selections.get(0).getSelectedFormat()).isEqualTo(supportedFrFormat);
}
