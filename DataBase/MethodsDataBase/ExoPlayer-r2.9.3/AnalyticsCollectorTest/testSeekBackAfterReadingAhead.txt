@Test public void testSeekBackAfterReadingAhead() throws Exception {
  MediaSource mediaSource=new ConcatenatingMediaSource(new FakeMediaSource(SINGLE_PERIOD_TIMELINE,null,Builder.VIDEO_FORMAT),new FakeMediaSource(SINGLE_PERIOD_TIMELINE,null,Builder.VIDEO_FORMAT,Builder.AUDIO_FORMAT));
  long periodDurationMs=SINGLE_PERIOD_TIMELINE.getWindow(0,new Window()).getDurationMs();
  ActionSchedule actionSchedule=new ActionSchedule.Builder("AnalyticsCollectorTest").pause().waitForPlaybackState(Player.STATE_READY).playUntilPosition(0,periodDurationMs).seek(0).waitForPlaybackState(Player.STATE_READY).play().build();
  TestAnalyticsListener listener=runAnalyticsTest(mediaSource,actionSchedule);
  populateEventIds(listener.lastReportedTimeline);
  assertThat(listener.getEvents(EVENT_PLAYER_STATE_CHANGED)).containsExactly(WINDOW_0,WINDOW_0,WINDOW_0,period0,period0,period0,period0,period0,period0,period1Seq2,period1Seq2,period1Seq2);
  assertThat(listener.getEvents(EVENT_TIMELINE_CHANGED)).containsExactly(WINDOW_0);
  assertThat(listener.getEvents(EVENT_POSITION_DISCONTINUITY)).containsExactly(period0,period1Seq2);
  assertThat(listener.getEvents(EVENT_SEEK_STARTED)).containsExactly(period0);
  assertThat(listener.getEvents(EVENT_SEEK_PROCESSED)).containsExactly(period0);
  assertThat(listener.getEvents(EVENT_LOADING_CHANGED)).containsExactly(period0,period0,period0,period0,period0,period0);
  assertThat(listener.getEvents(EVENT_TRACKS_CHANGED)).containsExactly(period0,period1Seq2);
  assertThat(listener.getEvents(EVENT_LOAD_STARTED)).containsExactly(WINDOW_0,period0,WINDOW_1,period1Seq1,period1Seq2);
  assertThat(listener.getEvents(EVENT_LOAD_COMPLETED)).containsExactly(WINDOW_0,period0,WINDOW_1,period1Seq1,period1Seq2);
  assertThat(listener.getEvents(EVENT_DOWNSTREAM_FORMAT_CHANGED)).containsExactly(period0,period1Seq1,period1Seq2,period1Seq2);
  assertThat(listener.getEvents(EVENT_MEDIA_PERIOD_CREATED)).containsExactly(period0,period1Seq1,period1Seq2);
  assertThat(listener.getEvents(EVENT_MEDIA_PERIOD_RELEASED)).containsExactly(period0,period1Seq1);
  assertThat(listener.getEvents(EVENT_READING_STARTED)).containsExactly(period0,period1Seq1,period1Seq2);
  assertThat(listener.getEvents(EVENT_DECODER_ENABLED)).containsExactly(period0,period0,period1Seq2);
  assertThat(listener.getEvents(EVENT_DECODER_INIT)).containsExactly(period0,period1Seq1,period1Seq2,period1Seq2);
  assertThat(listener.getEvents(EVENT_DECODER_FORMAT_CHANGED)).containsExactly(period0,period1Seq1,period1Seq2,period1Seq2);
  assertThat(listener.getEvents(EVENT_DECODER_DISABLED)).containsExactly(period0);
  assertThat(listener.getEvents(EVENT_AUDIO_SESSION_ID)).containsExactly(period1Seq2);
  assertThat(listener.getEvents(EVENT_DROPPED_VIDEO_FRAMES)).containsExactly(period0,period0,period1Seq2);
  assertThat(listener.getEvents(EVENT_VIDEO_SIZE_CHANGED)).containsExactly(period0,period1Seq2);
  assertThat(listener.getEvents(EVENT_RENDERED_FIRST_FRAME)).containsExactly(period0,period1Seq2);
  listener.assertNoMoreEvents();
}
