@Test public void testDiscardToStopAtReadPosition(){
  writeTestData();
  sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP,false,true);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(0);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(0);
  assertAllocationCount(10);
  assertReadTestData(null,0,1);
  sampleQueue.discardTo(SAMPLE_TIMESTAMPS[1] - 1,false,true);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(0);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(1);
  assertAllocationCount(10);
  sampleQueue.discardTo(SAMPLE_TIMESTAMPS[1],false,true);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(1);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(1);
  assertAllocationCount(9);
  sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP,false,true);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(1);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(1);
  assertAllocationCount(9);
  assertReadTestData(FORMAT_1,1,7);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(1);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(8);
  sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP - 1,false,true);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(6);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(8);
  assertAllocationCount(3);
  sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP,false,true);
  assertThat(sampleQueue.getFirstIndex()).isEqualTo(7);
  assertThat(sampleQueue.getReadIndex()).isEqualTo(8);
  assertAllocationCount(1);
}
