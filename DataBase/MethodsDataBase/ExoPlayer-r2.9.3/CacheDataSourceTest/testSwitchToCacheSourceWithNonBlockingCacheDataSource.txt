@Test public void testSwitchToCacheSourceWithNonBlockingCacheDataSource() throws Exception {
  FakeDataSource upstream=new FakeDataSource();
  FakeData fakeData=upstream.getDataSet().newDefaultData().appendReadData(1024 * 1024 - 1);
  fakeData.appendReadAction(() -> fail("Read from upstream shouldn't reach to the end of the data.")).appendReadData(1);
  SimpleCacheSpan cacheSpan=cache.startReadWriteNonBlocking(expectedCacheKey,0);
  assertThat(cacheSpan).isNotNull();
  assertThat(cacheSpan.isHoleSpan()).isTrue();
  CacheDataSource cacheDataSource=new CacheDataSource(cache,upstream,0);
  DataSpec dataSpec=new DataSpec(testDataUri,0,C.LENGTH_UNSET,fixedCacheKey);
  cacheDataSource.open(dataSpec);
  byte[] buffer=new byte[1024];
  cacheDataSource.read(buffer,0,buffer.length);
  cache.releaseHoleSpan(cacheSpan);
  assertCacheEmpty(cache);
  FakeDataSource upstream2=new FakeDataSource(new FakeDataSource().getDataSet().newDefaultData().appendReadData(1024 * 1024).endData());
  CacheUtil.cache(dataSpec,cache,upstream2,null,null);
  TestUtil.readToEnd(cacheDataSource);
  cacheDataSource.close();
}
