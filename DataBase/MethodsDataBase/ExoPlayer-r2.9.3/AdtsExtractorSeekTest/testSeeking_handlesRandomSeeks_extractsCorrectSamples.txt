@Test public void testSeeking_handlesRandomSeeks_extractsCorrectSamples() throws IOException, InterruptedException {
  String fileName=TEST_FILE;
  Uri fileUri=TestUtil.buildAssetUri(fileName);
  expectedTrackOutput=TestUtil.extractAllSamplesFromFile(createAdtsExtractor(),RuntimeEnvironment.application,fileName).trackOutputs.get(0);
  AdtsExtractor extractor=createAdtsExtractor();
  FakeExtractorOutput extractorOutput=new FakeExtractorOutput();
  SeekMap seekMap=TestUtil.extractSeekMap(extractor,extractorOutput,dataSource,fileUri);
  FakeTrackOutput trackOutput=extractorOutput.trackOutputs.get(0);
  long numSeek=100;
  for (long i=0; i < numSeek; i++) {
    long targetSeekTimeUs=random.nextInt(FILE_DURATION_US + 1);
    int extractedSampleIndex=TestUtil.seekToTimeUs(extractor,seekMap,targetSeekTimeUs,dataSource,trackOutput,fileUri);
    assertThat(extractedSampleIndex).isNotEqualTo(-1);
    assertFirstSampleAfterSeekContainTargetSeekTime(trackOutput,targetSeekTimeUs,extractedSampleIndex);
  }
}
