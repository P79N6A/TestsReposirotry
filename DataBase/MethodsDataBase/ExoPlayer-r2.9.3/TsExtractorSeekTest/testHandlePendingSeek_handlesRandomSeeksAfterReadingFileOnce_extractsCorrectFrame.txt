@Test public void testHandlePendingSeek_handlesRandomSeeksAfterReadingFileOnce_extractsCorrectFrame() throws IOException, InterruptedException {
  TsExtractor extractor=new TsExtractor();
  Uri fileUri=TestUtil.buildAssetUri(TEST_FILE);
  FakeExtractorOutput extractorOutput=new FakeExtractorOutput();
  readInputFileOnce(extractor,extractorOutput,fileUri);
  SeekMap seekMap=extractorOutput.seekMap;
  FakeTrackOutput trackOutput=extractorOutput.trackOutputs.get(AUDIO_TRACK_ID);
  long numSeek=100;
  for (long i=0; i < numSeek; i++) {
    long targetSeekTimeUs=random.nextInt(DURATION_US + 1);
    int extractedFrameIndex=TestUtil.seekToTimeUs(extractor,seekMap,targetSeekTimeUs,dataSource,trackOutput,fileUri);
    assertThat(extractedFrameIndex).isNotEqualTo(-1);
    assertFirstFrameAfterSeekContainTargetSeekTime(trackOutput,targetSeekTimeUs,extractedFrameIndex);
  }
}
