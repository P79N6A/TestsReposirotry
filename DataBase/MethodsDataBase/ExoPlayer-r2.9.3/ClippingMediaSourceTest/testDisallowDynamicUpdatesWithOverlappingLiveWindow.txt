@Test public void testDisallowDynamicUpdatesWithOverlappingLiveWindow() throws IOException {
  Timeline timeline1=new SinglePeriodTimeline(2 * TEST_PERIOD_DURATION_US,TEST_PERIOD_DURATION_US,TEST_PERIOD_DURATION_US,TEST_CLIP_AMOUNT_US,true,true,null);
  Timeline timeline2=new SinglePeriodTimeline(3 * TEST_PERIOD_DURATION_US,TEST_PERIOD_DURATION_US,2 * TEST_PERIOD_DURATION_US,TEST_CLIP_AMOUNT_US,true,true,null);
  Timeline[] clippedTimelines=getClippedTimelines(0,TEST_PERIOD_DURATION_US,false,true,timeline1,timeline2);
  assertThat(clippedTimelines[0].getWindow(0,window).getDurationUs()).isEqualTo(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US);
  assertThat(clippedTimelines[0].getWindow(0,window).getDefaultPositionUs()).isEqualTo(0);
  assertThat(clippedTimelines[0].getWindow(0,window).isDynamic).isTrue();
  assertThat(clippedTimelines[0].getWindow(0,window).getPositionInFirstPeriodUs()).isEqualTo(TEST_PERIOD_DURATION_US + TEST_CLIP_AMOUNT_US);
  assertThat(clippedTimelines[0].getPeriod(0,period).getDurationUs()).isEqualTo(2 * TEST_PERIOD_DURATION_US);
  assertThat(clippedTimelines[1].getWindow(0,window).getDurationUs()).isEqualTo(TEST_CLIP_AMOUNT_US);
  assertThat(clippedTimelines[1].getWindow(0,window).getDefaultPositionUs()).isEqualTo(TEST_CLIP_AMOUNT_US);
  assertThat(clippedTimelines[1].getWindow(0,window).isDynamic).isFalse();
  assertThat(clippedTimelines[1].getWindow(0,window).getPositionInFirstPeriodUs()).isEqualTo(2 * TEST_PERIOD_DURATION_US);
  assertThat(clippedTimelines[1].getPeriod(0,period).getDurationUs()).isEqualTo(2 * TEST_PERIOD_DURATION_US + TEST_CLIP_AMOUNT_US);
}
