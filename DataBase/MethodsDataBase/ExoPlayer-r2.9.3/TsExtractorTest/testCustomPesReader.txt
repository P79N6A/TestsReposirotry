@Test public void testCustomPesReader() throws Exception {
  CustomTsPayloadReaderFactory factory=new CustomTsPayloadReaderFactory(true,false);
  TsExtractor tsExtractor=new TsExtractor(TsExtractor.MODE_MULTI_PMT,new TimestampAdjuster(0),factory);
  FakeExtractorInput input=new FakeExtractorInput.Builder().setData(TestUtil.getByteArray(RuntimeEnvironment.application,"ts/sample.ts")).setSimulateIOErrors(false).setSimulateUnknownLength(false).setSimulatePartialReads(false).build();
  FakeExtractorOutput output=new FakeExtractorOutput();
  tsExtractor.init(output);
  PositionHolder seekPositionHolder=new PositionHolder();
  int readResult=Extractor.RESULT_CONTINUE;
  while (readResult != Extractor.RESULT_END_OF_INPUT) {
    readResult=tsExtractor.read(input,seekPositionHolder);
    if (readResult == Extractor.RESULT_SEEK) {
      input.setPosition((int)seekPositionHolder.position);
    }
  }
  CustomEsReader reader=factory.esReader;
  assertThat(reader.packetsRead).isEqualTo(2);
  TrackOutput trackOutput=reader.getTrackOutput();
  assertThat(trackOutput == output.trackOutputs.get(257)).isTrue();
  assertThat(((FakeTrackOutput)trackOutput).format).isEqualTo(Format.createTextSampleFormat("1/257","mime",null,0,0,"und",null,0));
}
