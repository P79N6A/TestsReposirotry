@Test public void testSeeking_handlesSeekingForward_extractsCorrectFrames_forNarrowBandAmr() throws IOException, InterruptedException {
  String fileName=NARROW_BAND_AMR_FILE;
  Uri fileUri=TestUtil.buildAssetUri(fileName);
  expectedTrackOutput=TestUtil.extractAllSamplesFromFile(createAmrExtractor(),RuntimeEnvironment.application,fileName).trackOutputs.get(0);
  AmrExtractor extractor=createAmrExtractor();
  FakeExtractorOutput extractorOutput=new FakeExtractorOutput();
  SeekMap seekMap=TestUtil.extractSeekMap(extractor,extractorOutput,dataSource,fileUri);
  FakeTrackOutput trackOutput=extractorOutput.trackOutputs.get(0);
  long firstSeekTimeUs=980_000;
  TestUtil.seekToTimeUs(extractor,seekMap,firstSeekTimeUs,dataSource,trackOutput,fileUri);
  long targetSeekTimeUs=1_200_000;
  int extractedFrameIndex=TestUtil.seekToTimeUs(extractor,seekMap,targetSeekTimeUs,dataSource,trackOutput,fileUri);
  assertThat(extractedFrameIndex).isNotEqualTo(-1);
  assertFirstFrameAfterSeekContainTargetSeekTime(trackOutput,targetSeekTimeUs,extractedFrameIndex);
}
