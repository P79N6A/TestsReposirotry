@Test public void testParcelable(){
  DrmInitData.SchemeData drmData1=new DrmInitData.SchemeData(WIDEVINE_UUID,VIDEO_MP4,TestUtil.buildTestData(128,1));
  DrmInitData.SchemeData drmData2=new DrmInitData.SchemeData(C.UUID_NIL,VIDEO_WEBM,TestUtil.buildTestData(128,1));
  DrmInitData drmInitData=new DrmInitData(drmData1,drmData2);
  byte[] projectionData=new byte[]{1,2,3};
  Metadata metadata=new Metadata(new TextInformationFrame("id1","description1","value1"),new TextInformationFrame("id2","description2","value2"));
  ColorInfo colorInfo=new ColorInfo(C.COLOR_SPACE_BT709,C.COLOR_RANGE_LIMITED,C.COLOR_TRANSFER_SDR,new byte[]{1,2,3,4,5,6,7});
  Format formatToParcel=new Format("id","label",MimeTypes.VIDEO_MP4,MimeTypes.VIDEO_H264,"codec",1024,2048,1920,1080,24,90,2,projectionData,C.STEREO_MODE_TOP_BOTTOM,colorInfo,6,44100,C.ENCODING_PCM_24BIT,1001,1002,C.SELECTION_FLAG_DEFAULT,"language",Format.NO_VALUE,Format.OFFSET_SAMPLE_RELATIVE,INIT_DATA,drmInitData,metadata);
  Parcel parcel=Parcel.obtain();
  formatToParcel.writeToParcel(parcel,0);
  parcel.setDataPosition(0);
  Format formatFromParcel=Format.CREATOR.createFromParcel(parcel);
  assertThat(formatFromParcel).isEqualTo(formatToParcel);
  parcel.recycle();
}
