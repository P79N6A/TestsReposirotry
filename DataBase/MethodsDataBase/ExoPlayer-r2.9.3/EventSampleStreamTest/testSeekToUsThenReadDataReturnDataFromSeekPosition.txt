/** 
 * Tests that  {@link EventSampleStream#seekToUs(long)} (long)} will seek to the given position,and the next  {@link EventSampleStream#readData(FormatHolder,DecoderInputBuffer,boolean)} callwill return sample data from that position.
 */
@Test public void testSeekToUsThenReadDataReturnDataFromSeekPosition(){
  long presentationTimeUs1=1000000;
  long presentationTimeUs2=2000000;
  EventMessage eventMessage1=newEventMessageWithIdAndTime(1,presentationTimeUs1);
  EventMessage eventMessage2=newEventMessageWithIdAndTime(2,presentationTimeUs2);
  EventStream eventStream=new EventStream(SCHEME_ID,VALUE,TIME_SCALE,new long[]{presentationTimeUs1,presentationTimeUs2},new EventMessage[]{eventMessage1,eventMessage2});
  EventSampleStream sampleStream=new EventSampleStream(eventStream,FORMAT,false);
  readData(sampleStream);
  sampleStream.seekToUs(presentationTimeUs2);
  int result=readData(sampleStream);
  assertThat(result).isEqualTo(C.RESULT_BUFFER_READ);
  assertThat(inputBuffer.data.array()).isEqualTo(getEncodedMessage(eventMessage2));
}
