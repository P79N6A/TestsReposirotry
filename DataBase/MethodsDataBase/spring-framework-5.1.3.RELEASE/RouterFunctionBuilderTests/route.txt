@Test public void route(){
  RouterFunction<ServerResponse> route=RouterFunctions.route().GET("/foo",request -> ServerResponse.ok().build()).POST("/",RequestPredicates.contentType(MediaType.TEXT_PLAIN),request -> ServerResponse.noContent().build()).build();
  System.out.println(route);
  MockServerRequest fooRequest=MockServerRequest.builder().method(HttpMethod.GET).uri(URI.create("http://localhost/foo")).build();
  Mono<Integer> responseMono=route.route(fooRequest).flatMap(handlerFunction -> handlerFunction.handle(fooRequest)).map(ServerResponse::statusCode).map(HttpStatus::value);
  StepVerifier.create(responseMono).expectNext(200).verifyComplete();
  MockServerRequest barRequest=MockServerRequest.builder().method(HttpMethod.POST).uri(URI.create("http://localhost/")).header("Content-Type","text/plain").build();
  responseMono=route.route(barRequest).flatMap(handlerFunction -> handlerFunction.handle(barRequest)).map(ServerResponse::statusCode).map(HttpStatus::value);
  StepVerifier.create(responseMono).expectNext(204).verifyComplete();
  MockServerRequest invalidRequest=MockServerRequest.builder().method(HttpMethod.POST).uri(URI.create("http://localhost/")).build();
  responseMono=route.route(invalidRequest).flatMap(handlerFunction -> handlerFunction.handle(invalidRequest)).map(ServerResponse::statusCode).map(HttpStatus::value);
  StepVerifier.create(responseMono).verifyComplete();
}
