@Test public void resources(){
  Resource resource=new ClassPathResource("/org/springframework/web/reactive/function/server/");
  assertTrue(resource.exists());
  RouterFunction<ServerResponse> route=RouterFunctions.route().resources("/resources/**",resource).build();
  MockServerRequest resourceRequest=MockServerRequest.builder().method(HttpMethod.GET).uri(URI.create("http://localhost/resources/response.txt")).build();
  Mono<Integer> responseMono=route.route(resourceRequest).flatMap(handlerFunction -> handlerFunction.handle(resourceRequest)).map(ServerResponse::statusCode).map(HttpStatus::value);
  StepVerifier.create(responseMono).expectNext(200).verifyComplete();
  MockServerRequest invalidRequest=MockServerRequest.builder().method(HttpMethod.POST).uri(URI.create("http://localhost/resources/foo.txt")).build();
  responseMono=route.route(invalidRequest).flatMap(handlerFunction -> handlerFunction.handle(invalidRequest)).map(ServerResponse::statusCode).map(HttpStatus::value);
  StepVerifier.create(responseMono).verifyComplete();
}
