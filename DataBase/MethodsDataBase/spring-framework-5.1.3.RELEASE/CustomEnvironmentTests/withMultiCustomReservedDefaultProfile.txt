@Test public void withMultiCustomReservedDefaultProfile(){
class CustomEnvironment extends AbstractEnvironment {
    @Override @SuppressWarnings("serial") protected Set<String> getReservedDefaultProfiles(){
      return new HashSet<String>(){
{
          add("rd1");
          add("rd2");
        }
      }
;
    }
  }
  ConfigurableEnvironment env=new CustomEnvironment();
  assertThat(env.acceptsProfiles(defaultProfile()),is(false));
  assertThat(env.acceptsProfiles(Profiles.of("rd1 | rd2")),is(true));
  env.setDefaultProfiles("d1");
  assertThat(env.acceptsProfiles(Profiles.of("rd1 | rd2")),is(false));
  assertThat(env.acceptsProfiles(Profiles.of("d1")),is(true));
  env.setActiveProfiles("a1","a2");
  assertThat(env.acceptsProfiles(Profiles.of("d1")),is(false));
  assertThat(env.acceptsProfiles(Profiles.of("a1 | a2")),is(true));
  env.setActiveProfiles();
  assertThat(env.acceptsProfiles(Profiles.of("d1")),is(true));
  assertThat(env.acceptsProfiles(Profiles.of("a1 | a2")),is(false));
  env.setDefaultProfiles();
  assertThat(env.acceptsProfiles(defaultProfile()),is(false));
  assertThat(env.acceptsProfiles(Profiles.of("rd1 | rd2")),is(false));
  assertThat(env.acceptsProfiles(Profiles.of("d1")),is(false));
  assertThat(env.acceptsProfiles(Profiles.of("a1 | a2")),is(false));
}
