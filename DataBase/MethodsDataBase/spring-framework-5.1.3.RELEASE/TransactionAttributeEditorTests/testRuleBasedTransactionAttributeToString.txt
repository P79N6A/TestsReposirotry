@Test public void testRuleBasedTransactionAttributeToString(){
  RuleBasedTransactionAttribute source=new RuleBasedTransactionAttribute();
  source.setPropagationBehavior(TransactionDefinition.PROPAGATION_SUPPORTS);
  source.setIsolationLevel(TransactionDefinition.ISOLATION_REPEATABLE_READ);
  source.setTimeout(10);
  source.setReadOnly(true);
  source.getRollbackRules().add(new RollbackRuleAttribute("IllegalArgumentException"));
  source.getRollbackRules().add(new NoRollbackRuleAttribute("IllegalStateException"));
  TransactionAttributeEditor pe=new TransactionAttributeEditor();
  pe.setAsText(source.toString());
  TransactionAttribute ta=(TransactionAttribute)pe.getValue();
  assertEquals(ta,source);
  assertEquals(TransactionDefinition.PROPAGATION_SUPPORTS,ta.getPropagationBehavior());
  assertEquals(TransactionDefinition.ISOLATION_REPEATABLE_READ,ta.getIsolationLevel());
  assertEquals(10,ta.getTimeout());
  assertTrue(ta.isReadOnly());
  assertTrue(ta.rollbackOn(new IllegalArgumentException()));
  assertFalse(ta.rollbackOn(new IllegalStateException()));
  source.getRollbackRules().clear();
  assertNotSame(ta,source);
  source.getRollbackRules().add(new RollbackRuleAttribute("IllegalArgumentException"));
  source.getRollbackRules().add(new NoRollbackRuleAttribute("IllegalStateException"));
  assertEquals(ta,source);
}
