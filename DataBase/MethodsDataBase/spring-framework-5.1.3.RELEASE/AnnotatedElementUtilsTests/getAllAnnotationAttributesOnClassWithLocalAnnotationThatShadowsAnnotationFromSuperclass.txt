/** 
 * If the "value" entry contains both "DerivedTxConfig" AND "TxConfig", then the algorithm is accidentally picking up shadowed annotations of the same type within the class hierarchy. Such undesirable behavior would cause the logic in  {@link org.springframework.context.annotation.ProfileCondition}to fail.
 * @see org.springframework.core.env.EnvironmentSystemIntegrationTests#mostSpecificDerivedClassDrivesEnvironment_withDevEnvAndDerivedDevConfigClass
 */
@Test public void getAllAnnotationAttributesOnClassWithLocalAnnotationThatShadowsAnnotationFromSuperclass(){
  MultiValueMap<String,Object> attributes=getAllAnnotationAttributes(DerivedTxConfig.class,TX_NAME);
  assertNotNull("Annotation attributes map for @Transactional on DerivedTxConfig",attributes);
  assertEquals("value for DerivedTxConfig.",asList("DerivedTxConfig"),attributes.get("value"));
}
