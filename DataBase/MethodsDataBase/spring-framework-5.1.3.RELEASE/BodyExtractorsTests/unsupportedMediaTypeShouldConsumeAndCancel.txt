@Test public void unsupportedMediaTypeShouldConsumeAndCancel(){
  NettyDataBufferFactory factory=new NettyDataBufferFactory(new PooledByteBufAllocator(true));
  NettyDataBuffer buffer=factory.wrap(ByteBuffer.wrap("spring".getBytes(StandardCharsets.UTF_8)));
  TestPublisher<DataBuffer> body=TestPublisher.create();
  MockClientHttpResponse response=new MockClientHttpResponse(HttpStatus.OK);
  response.getHeaders().setContentType(MediaType.APPLICATION_PDF);
  response.setBody(body.flux());
  BodyExtractor<Mono<User>,ReactiveHttpInputMessage> extractor=BodyExtractors.toMono(User.class);
  StepVerifier.create(extractor.extract(response,this.context)).then(() -> {
    body.assertWasSubscribed();
    body.emit(buffer);
  }
).expectErrorSatisfies(throwable -> {
    assertTrue(throwable instanceof UnsupportedMediaTypeException);
    try {
      buffer.release();
      Assert.fail("releasing the buffer should have failed");
    }
 catch (    IllegalReferenceCountException exc) {
    }
    body.assertCancelled();
  }
).verify();
}
