@Test public void toParts(){
  BodyExtractor<Flux<Part>,ServerHttpRequest> extractor=BodyExtractors.toParts();
  String bodyContents="-----------------------------9051914041544843365972754266\r\n" + "Content-Disposition: form-data; name=\"text\"\r\n" + "\r\n"+ "text default\r\n"+ "-----------------------------9051914041544843365972754266\r\n"+ "Content-Disposition: form-data; name=\"file1\"; filename=\"a.txt\"\r\n"+ "Content-Type: text/plain\r\n"+ "\r\n"+ "Content of a.txt.\r\n"+ "\r\n"+ "-----------------------------9051914041544843365972754266\r\n"+ "Content-Disposition: form-data; name=\"file2\"; filename=\"a.html\"\r\n"+ "Content-Type: text/html\r\n"+ "\r\n"+ "<!DOCTYPE html><title>Content of a.html.</title>\r\n"+ "\r\n"+ "-----------------------------9051914041544843365972754266--\r\n";
  DefaultDataBufferFactory factory=new DefaultDataBufferFactory();
  DefaultDataBuffer dataBuffer=factory.wrap(ByteBuffer.wrap(bodyContents.getBytes(StandardCharsets.UTF_8)));
  Flux<DataBuffer> body=Flux.just(dataBuffer);
  MockServerHttpRequest request=MockServerHttpRequest.post("/").header("Content-Type","multipart/form-data; boundary=---------------------------9051914041544843365972754266").body(body);
  Flux<Part> result=extractor.extract(request,this.context);
  StepVerifier.create(result).consumeNextWith(part -> {
    assertEquals("text",part.name());
    assertTrue(part instanceof FormFieldPart);
    FormFieldPart formFieldPart=(FormFieldPart)part;
    assertEquals("text default",formFieldPart.value());
  }
).consumeNextWith(part -> {
    assertEquals("file1",part.name());
    assertTrue(part instanceof FilePart);
    FilePart filePart=(FilePart)part;
    assertEquals("a.txt",filePart.filename());
    assertEquals(MediaType.TEXT_PLAIN,filePart.headers().getContentType());
  }
).consumeNextWith(part -> {
    assertEquals("file2",part.name());
    assertTrue(part instanceof FilePart);
    FilePart filePart=(FilePart)part;
    assertEquals("a.html",filePart.filename());
    assertEquals(MediaType.TEXT_HTML,filePart.headers().getContentType());
  }
).expectComplete().verify();
}
