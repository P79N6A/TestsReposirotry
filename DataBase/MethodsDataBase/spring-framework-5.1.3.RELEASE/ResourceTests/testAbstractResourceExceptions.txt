@Test public void testAbstractResourceExceptions() throws Exception {
  final String name="test-resource";
  Resource resource=new AbstractResource(){
    @Override public String getDescription(){
      return name;
    }
    @Override public InputStream getInputStream() throws IOException {
      throw new FileNotFoundException();
    }
  }
;
  try {
    resource.getURL();
    fail("FileNotFoundException should have been thrown");
  }
 catch (  FileNotFoundException ex) {
    assertTrue(ex.getMessage().contains(name));
  }
  try {
    resource.getFile();
    fail("FileNotFoundException should have been thrown");
  }
 catch (  FileNotFoundException ex) {
    assertTrue(ex.getMessage().contains(name));
  }
  try {
    resource.createRelative("/testing");
    fail("FileNotFoundException should have been thrown");
  }
 catch (  FileNotFoundException ex) {
    assertTrue(ex.getMessage().contains(name));
  }
  assertThat(resource.getFilename(),nullValue());
}
