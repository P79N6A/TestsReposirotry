@Test public void transformExtLinksNotAllowed() throws Exception {
  this.request=new MockHttpServletRequest("GET","/static/external.css");
  List<ResourceTransformer> transformers=Collections.singletonList(new CssLinkResourceTransformer());
  ResourceResolverChain mockChain=Mockito.mock(DefaultResourceResolverChain.class);
  ResourceTransformerChain chain=new DefaultResourceTransformerChain(mockChain,transformers);
  Resource resource=getResource("external.css");
  String expected="@import url(\"http://example.org/fonts/css\");\n" + "body { background: url(\"file:///home/spring/image.png\") }\n" + "figure { background: url(\"//example.org/style.css\")}";
  TransformedResource transformedResource=(TransformedResource)chain.transform(this.request,resource);
  String result=new String(transformedResource.getByteArray(),StandardCharsets.UTF_8);
  result=StringUtils.deleteAny(result,"\r");
  assertEquals(expected,result);
  List<Resource> locations=Collections.singletonList(resource);
  Mockito.verify(mockChain,Mockito.never()).resolveUrlPath("http://example.org/fonts/css",locations);
  Mockito.verify(mockChain,Mockito.never()).resolveUrlPath("file:///home/spring/image.png",locations);
  Mockito.verify(mockChain,Mockito.never()).resolveUrlPath("//example.org/style.css",locations);
}
