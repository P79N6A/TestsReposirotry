@Test public void handleInfoOptionsWithForbiddenOrigin(){
  this.servletRequest.setServerName("mydomain3.com");
  this.servletRequest.addHeader(HttpHeaders.ORIGIN,"http://mydomain2.com");
  this.servletRequest.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,"GET");
  this.servletRequest.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS,"Last-Modified");
  resetResponseAndHandleRequest("OPTIONS","/echo/info",HttpStatus.FORBIDDEN);
  CorsConfiguration corsConfiguration=this.service.getCorsConfiguration(this.servletRequest);
  assertTrue(corsConfiguration.getAllowedOrigins().isEmpty());
  this.service.setAllowedOrigins(Collections.singletonList("http://mydomain1.com"));
  resetResponseAndHandleRequest("OPTIONS","/echo/info",HttpStatus.FORBIDDEN);
  corsConfiguration=this.service.getCorsConfiguration(this.servletRequest);
  assertEquals(Collections.singletonList("http://mydomain1.com"),corsConfiguration.getAllowedOrigins());
}
