@Test public void testStaticResultSetClosed() throws Exception {
  ResultSet resultSet2=mock(ResultSet.class);
  reset(this.preparedStatement);
  given(this.preparedStatement.executeQuery()).willReturn(resultSet2);
  given(this.connection.createStatement()).willReturn(this.statement);
  try {
    this.template.query("my query",(ResultSetExtractor<Object>)rs -> {
      throw new InvalidDataAccessApiUsageException("");
    }
);
    fail("Should have thrown InvalidDataAccessApiUsageException");
  }
 catch (  InvalidDataAccessApiUsageException ex) {
  }
  try {
    this.template.query(con -> con.prepareStatement("my query"),(ResultSetExtractor<Object>)rs2 -> {
      throw new InvalidDataAccessApiUsageException("");
    }
);
    fail("Should have thrown InvalidDataAccessApiUsageException");
  }
 catch (  InvalidDataAccessApiUsageException ex) {
  }
  verify(this.resultSet).close();
  verify(resultSet2).close();
  verify(this.preparedStatement).close();
  verify(this.connection,atLeastOnce()).close();
}
