@Test public void shouldEncodeMultipleResourceRegionsFileResource() throws Exception {
  Resource resource=new ClassPathResource("ResourceRegionEncoderTests.txt",getClass());
  Flux<ResourceRegion> regions=Flux.just(new ResourceRegion(resource,0,6),new ResourceRegion(resource,7,9),new ResourceRegion(resource,17,4),new ResourceRegion(resource,22,17));
  String boundary=MimeTypeUtils.generateMultipartBoundaryString();
  Flux<DataBuffer> result=this.encoder.encode(regions,this.bufferFactory,ResolvableType.forClass(ResourceRegion.class),MimeType.valueOf("text/plain"),Collections.singletonMap(ResourceRegionEncoder.BOUNDARY_STRING_HINT,boundary));
  StepVerifier.create(result).consumeNextWith(stringConsumer("\r\n--" + boundary + "\r\n")).consumeNextWith(stringConsumer("Content-Type: text/plain\r\n")).consumeNextWith(stringConsumer("Content-Range: bytes 0-5/39\r\n\r\n")).consumeNextWith(stringConsumer("Spring")).consumeNextWith(stringConsumer("\r\n--" + boundary + "\r\n")).consumeNextWith(stringConsumer("Content-Type: text/plain\r\n")).consumeNextWith(stringConsumer("Content-Range: bytes 7-15/39\r\n\r\n")).consumeNextWith(stringConsumer("Framework")).consumeNextWith(stringConsumer("\r\n--" + boundary + "\r\n")).consumeNextWith(stringConsumer("Content-Type: text/plain\r\n")).consumeNextWith(stringConsumer("Content-Range: bytes 17-20/39\r\n\r\n")).consumeNextWith(stringConsumer("test")).consumeNextWith(stringConsumer("\r\n--" + boundary + "\r\n")).consumeNextWith(stringConsumer("Content-Type: text/plain\r\n")).consumeNextWith(stringConsumer("Content-Range: bytes 22-38/39\r\n\r\n")).consumeNextWith(stringConsumer("resource content.")).consumeNextWith(stringConsumer("\r\n--" + boundary + "--")).expectComplete().verify();
}
