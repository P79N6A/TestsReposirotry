@Test public void relativeUrls(){
  String baseUrl="http://example.com";
  assertThat(UriComponentsBuilder.fromUriString(baseUrl + "/foo/../bar").build().toString(),equalTo(baseUrl + "/foo/../bar"));
  assertThat(UriComponentsBuilder.fromUriString(baseUrl + "/foo/../bar").build().toUriString(),equalTo(baseUrl + "/foo/../bar"));
  assertThat(UriComponentsBuilder.fromUriString(baseUrl + "/foo/../bar").build().toUri().getPath(),equalTo("/foo/../bar"));
  assertThat(UriComponentsBuilder.fromUriString("../../").build().toString(),equalTo("../../"));
  assertThat(UriComponentsBuilder.fromUriString("../../").build().toUriString(),equalTo("../../"));
  assertThat(UriComponentsBuilder.fromUriString("../../").build().toUri().getPath(),equalTo("../../"));
  assertThat(UriComponentsBuilder.fromUriString(baseUrl).path("foo/../bar").build().toString(),equalTo(baseUrl + "/foo/../bar"));
  assertThat(UriComponentsBuilder.fromUriString(baseUrl).path("foo/../bar").build().toUriString(),equalTo(baseUrl + "/foo/../bar"));
  assertThat(UriComponentsBuilder.fromUriString(baseUrl).path("foo/../bar").build().toUri().getPath(),equalTo("/foo/../bar"));
}
