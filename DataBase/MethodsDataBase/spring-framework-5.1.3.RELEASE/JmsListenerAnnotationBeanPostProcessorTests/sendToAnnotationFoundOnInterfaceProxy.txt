@Test public void sendToAnnotationFoundOnInterfaceProxy() throws Exception {
  ConfigurableApplicationContext context=new AnnotationConfigApplicationContext(Config.class,ProxyConfig.class,InterfaceProxyTestBean.class);
  try {
    JmsListenerContainerTestFactory factory=context.getBean(JmsListenerContainerTestFactory.class);
    assertEquals("one container should have been registered",1,factory.getListenerContainers().size());
    JmsListenerEndpoint endpoint=factory.getListenerContainers().get(0).getEndpoint();
    assertEquals("Wrong endpoint type",MethodJmsListenerEndpoint.class,endpoint.getClass());
    MethodJmsListenerEndpoint methodEndpoint=(MethodJmsListenerEndpoint)endpoint;
    assertTrue(AopUtils.isJdkDynamicProxy(methodEndpoint.getBean()));
    assertTrue(methodEndpoint.getBean() instanceof SimpleService);
    assertEquals(SimpleService.class.getMethod("handleIt",String.class,String.class),methodEndpoint.getMethod());
    assertEquals(InterfaceProxyTestBean.class.getMethod("handleIt",String.class,String.class),methodEndpoint.getMostSpecificMethod());
    Method method=ReflectionUtils.findMethod(endpoint.getClass(),"getDefaultResponseDestination");
    ReflectionUtils.makeAccessible(method);
    Object destination=ReflectionUtils.invokeMethod(method,endpoint);
    assertEquals("SendTo annotation not found on proxy","foobar",destination);
  }
  finally {
    context.close();
  }
}
