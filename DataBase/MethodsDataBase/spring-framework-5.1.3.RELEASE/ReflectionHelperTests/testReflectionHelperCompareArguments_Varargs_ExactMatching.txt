@Test public void testReflectionHelperCompareArguments_Varargs_ExactMatching(){
  StandardTypeConverter tc=new StandardTypeConverter();
  checkMatch2(new Class<?>[]{String[].class},new Class<?>[]{String[].class},tc,ArgumentsMatchKind.EXACT);
  checkMatch2(new Class<?>[]{Integer.class,String[].class},new Class<?>[]{Integer.class,String[].class},tc,ArgumentsMatchKind.EXACT);
  checkMatch2(new Class<?>[]{String.class,Integer.class,String[].class},new Class<?>[]{String.class,Integer.class,String[].class},tc,ArgumentsMatchKind.EXACT);
  checkMatch2(new Class<?>[]{Sub.class,String[].class},new Class<?>[]{Super.class,String[].class},tc,ArgumentsMatchKind.CLOSE);
  checkMatch2(new Class<?>[]{Integer.class,String[].class},new Class<?>[]{String.class,String[].class},tc,ArgumentsMatchKind.REQUIRES_CONVERSION);
  checkMatch2(new Class<?>[]{Integer.class,Sub.class,String[].class},new Class<?>[]{String.class,Super.class,String[].class},tc,ArgumentsMatchKind.REQUIRES_CONVERSION);
  checkMatch2(new Class<?>[]{String.class},new Class<?>[]{String[].class},tc,ArgumentsMatchKind.EXACT);
  checkMatch2(new Class<?>[]{Integer.class,String.class},new Class<?>[]{Integer.class,String[].class},tc,ArgumentsMatchKind.EXACT);
  checkMatch2(new Class<?>[]{String.class},new Class<?>[]{Integer[].class},tc,ArgumentsMatchKind.REQUIRES_CONVERSION);
  checkMatch2(new Class<?>[]{Sub.class},new Class<?>[]{Super[].class},tc,ArgumentsMatchKind.CLOSE);
  checkMatch2(new Class<?>[]{Super.class},new Class<?>[]{Sub[].class},tc,null);
  checkMatch2(new Class<?>[]{Unconvertable.class,String.class},new Class<?>[]{Sub.class,Super[].class},tc,null);
  checkMatch2(new Class<?>[]{Integer.class,Integer.class,String.class},new Class<?>[]{String.class,String.class,Super[].class},tc,null);
  checkMatch2(new Class<?>[]{Unconvertable.class,String.class},new Class<?>[]{Sub.class,Super[].class},tc,null);
  checkMatch2(new Class<?>[]{Integer.class,Integer.class,String.class},new Class<?>[]{String.class,String.class,Super[].class},tc,null);
  checkMatch2(new Class<?>[]{Integer.class,Integer.class,Sub.class},new Class<?>[]{String.class,String.class,Super[].class},tc,ArgumentsMatchKind.REQUIRES_CONVERSION);
  checkMatch2(new Class<?>[]{Integer.class,Integer.class,Integer.class},new Class<?>[]{Integer.class,String[].class},tc,ArgumentsMatchKind.REQUIRES_CONVERSION);
}
