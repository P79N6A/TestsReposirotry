/** 
 * Check that we can use a cflow pointcut only in conjunction with a static pointcut: e.g. all setter methods that are invoked under a particular class. This greatly reduces the number of calls to the cflow pointcut, meaning that it's not so prohibitively expensive.
 */
@Test public void testSelectiveApplication(){
  TestBean target=new TestBean();
  target.setAge(27);
  NopInterceptor nop=new NopInterceptor();
  ControlFlowPointcut cflow=new ControlFlowPointcut(One.class);
  Pointcut settersUnderOne=Pointcuts.intersection(Pointcuts.SETTERS,cflow);
  ProxyFactory pf=new ProxyFactory(target);
  ITestBean proxied=(ITestBean)pf.getProxy();
  pf.addAdvisor(new DefaultPointcutAdvisor(settersUnderOne,nop));
  target.setAge(16);
  assertEquals(0,nop.getCount());
  assertEquals(16,new One().getAge(proxied));
  assertEquals(0,nop.getCount());
  new One().set(proxied);
  assertEquals(1,nop.getCount());
  assertEquals(1,cflow.getEvaluations());
}
