@Test public void requestMappingHandlerMapping() throws Exception {
  ApplicationContext context=loadConfig(WebFluxConfig.class);
  final Field field=ReflectionUtils.findField(PathPatternParser.class,"matchOptionalTrailingSeparator");
  ReflectionUtils.makeAccessible(field);
  String name="requestMappingHandlerMapping";
  RequestMappingHandlerMapping mapping=context.getBean(name,RequestMappingHandlerMapping.class);
  assertNotNull(mapping);
  assertEquals(0,mapping.getOrder());
  PathPatternParser patternParser=mapping.getPathPatternParser();
  assertNotNull(patternParser);
  boolean matchOptionalTrailingSlash=(boolean)ReflectionUtils.getField(field,patternParser);
  assertTrue(matchOptionalTrailingSlash);
  name="webFluxContentTypeResolver";
  RequestedContentTypeResolver resolver=context.getBean(name,RequestedContentTypeResolver.class);
  assertSame(resolver,mapping.getContentTypeResolver());
  ServerWebExchange exchange=MockServerWebExchange.from(get("/path").accept(MediaType.APPLICATION_JSON));
  assertEquals(Collections.singletonList(MediaType.APPLICATION_JSON),resolver.resolveMediaTypes(exchange));
}
