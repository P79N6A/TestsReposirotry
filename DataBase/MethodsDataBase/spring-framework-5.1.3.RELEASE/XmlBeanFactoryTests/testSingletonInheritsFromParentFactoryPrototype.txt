/** 
 * Note that prototype/singleton distinction is <b>not</b> inherited. It's possible for a subclass singleton not to return independent instances even if derived from a prototype
 */
@Test public void testSingletonInheritsFromParentFactoryPrototype() throws Exception {
  DefaultListableBeanFactory parent=new DefaultListableBeanFactory();
  new XmlBeanDefinitionReader(parent).loadBeanDefinitions(PARENT_CONTEXT);
  DefaultListableBeanFactory child=new DefaultListableBeanFactory(parent);
  new XmlBeanDefinitionReader(child).loadBeanDefinitions(CHILD_CONTEXT);
  TestBean inherits=(TestBean)child.getBean("singletonInheritsFromParentFactoryPrototype");
  assertTrue(inherits.getName().equals("prototype-override"));
  assertTrue(inherits.getAge() == 2);
  TestBean inherits2=(TestBean)child.getBean("singletonInheritsFromParentFactoryPrototype");
  assertTrue(inherits2 == inherits);
}
