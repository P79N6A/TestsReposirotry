@Test public void plainMethodInvoker() throws Exception {
  TestClass1 tc1=new TestClass1();
  MethodInvoker mi=new MethodInvoker();
  mi.setTargetObject(tc1);
  mi.setTargetMethod("method1");
  mi.prepare();
  Integer i=(Integer)mi.invoke();
  assertEquals(1,i.intValue());
  tc1=new TestClass1();
  mi=new MethodInvoker();
  mi.setTargetObject(tc1);
  mi.setTargetMethod("method1");
  mi.setArguments((Object[])null);
  mi.prepare();
  i=(Integer)mi.invoke();
  assertEquals(1,i.intValue());
  mi=new MethodInvoker();
  mi.setTargetClass(TestClass1.class);
  mi.setTargetMethod("supertypes");
  mi.setArguments(new ArrayList<>(),new ArrayList<>(),"hello");
  mi.prepare();
  assertEquals("hello",mi.invoke());
  mi=new MethodInvoker();
  mi.setTargetClass(TestClass1.class);
  mi.setTargetMethod("supertypes2");
  mi.setArguments(new ArrayList<>(),new ArrayList<>(),"hello","bogus");
  mi.prepare();
  assertEquals("hello",mi.invoke());
  mi=new MethodInvoker();
  mi.setTargetClass(TestClass1.class);
  mi.setTargetMethod("supertypes2");
  mi.setArguments(new ArrayList<>(),new ArrayList<>(),"hello",Boolean.TRUE);
  exception.expect(NoSuchMethodException.class);
  mi.prepare();
}
