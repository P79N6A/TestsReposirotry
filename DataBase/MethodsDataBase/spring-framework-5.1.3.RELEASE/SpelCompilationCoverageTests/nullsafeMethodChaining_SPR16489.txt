@Test public void nullsafeMethodChaining_SPR16489() throws Exception {
  FooObjectHolder foh=new FooObjectHolder();
  StandardEvaluationContext context=new StandardEvaluationContext();
  context.setRootObject(foh);
  SpelExpression expression=(SpelExpression)parser.parseExpression("getFoo()?.getObject()");
  assertEquals("hello",expression.getValue(context));
  foh.foo=null;
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  foh.foo=new FooObject();
  assertEquals("hello",expression.getValue(context));
  foh.foo=null;
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.methoda()");
  context.setVariable("var",StaticsHelper.class);
  assertEquals("sh",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",StaticsHelper.class);
  assertEquals("sh",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.intValue()");
  context.setVariable("var",4);
  assertEquals("4",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",4);
  assertEquals("4",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.booleanValue()");
  context.setVariable("var",false);
  assertEquals("false",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",false);
  assertEquals("false",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.booleanValue()");
  context.setVariable("var",true);
  assertEquals("true",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",true);
  assertEquals("true",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.longValue()");
  context.setVariable("var",5L);
  assertEquals("5",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",5L);
  assertEquals("5",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.floatValue()");
  context.setVariable("var",3f);
  assertEquals("3.0",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",3f);
  assertEquals("3.0",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  expression=(SpelExpression)parser.parseExpression("#var?.shortValue()");
  context.setVariable("var",(short)8);
  assertEquals("8",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
  assertCanCompile(expression);
  context.setVariable("var",(short)8);
  assertEquals("8",expression.getValue(context).toString());
  context.setVariable("var",null);
  assertNull(expression.getValue(context));
}
