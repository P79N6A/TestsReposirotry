@Test public void limitResponseSize(){
  DefaultDataBufferFactory bufferFactory=new DefaultDataBufferFactory();
  DataBuffer b1=dataBuffer("foo",bufferFactory);
  DataBuffer b2=dataBuffer("bar",bufferFactory);
  DataBuffer b3=dataBuffer("baz",bufferFactory);
  ClientRequest request=ClientRequest.create(HttpMethod.GET,DEFAULT_URL).build();
  ClientResponse response=ClientResponse.create(HttpStatus.OK).body(Flux.just(b1,b2,b3)).build();
  Mono<ClientResponse> result=ExchangeFilterFunctions.limitResponseSize(5).filter(request,req -> Mono.just(response));
  StepVerifier.create(result.flatMapMany(res -> res.body(BodyExtractors.toDataBuffers()))).consumeNextWith(buffer -> assertEquals("foo",string(buffer))).consumeNextWith(buffer -> assertEquals("ba",string(buffer))).expectComplete().verify();
}
