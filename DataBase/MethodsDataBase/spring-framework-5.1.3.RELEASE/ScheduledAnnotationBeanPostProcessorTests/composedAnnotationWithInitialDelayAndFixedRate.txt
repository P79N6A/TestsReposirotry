@Test public void composedAnnotationWithInitialDelayAndFixedRate(){
  BeanDefinition processorDefinition=new RootBeanDefinition(ScheduledAnnotationBeanPostProcessor.class);
  BeanDefinition targetDefinition=new RootBeanDefinition(ComposedAnnotationFixedRateTestBean.class);
  context.registerBeanDefinition("postProcessor",processorDefinition);
  context.registerBeanDefinition("target",targetDefinition);
  context.refresh();
  ScheduledTaskHolder postProcessor=context.getBean("postProcessor",ScheduledTaskHolder.class);
  assertEquals(1,postProcessor.getScheduledTasks().size());
  Object target=context.getBean("target");
  ScheduledTaskRegistrar registrar=(ScheduledTaskRegistrar)new DirectFieldAccessor(postProcessor).getPropertyValue("registrar");
  @SuppressWarnings("unchecked") List<IntervalTask> fixedRateTasks=(List<IntervalTask>)new DirectFieldAccessor(registrar).getPropertyValue("fixedRateTasks");
  assertEquals(1,fixedRateTasks.size());
  IntervalTask task=fixedRateTasks.get(0);
  ScheduledMethodRunnable runnable=(ScheduledMethodRunnable)task.getRunnable();
  Object targetObject=runnable.getTarget();
  Method targetMethod=runnable.getMethod();
  assertEquals(target,targetObject);
  assertEquals("checkForUpdates",targetMethod.getName());
  assertEquals(5000L,task.getInterval());
  assertEquals(1000L,task.getInitialDelay());
}
