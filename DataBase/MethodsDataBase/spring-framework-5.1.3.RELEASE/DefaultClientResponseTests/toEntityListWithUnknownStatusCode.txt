@Test public void toEntityListWithUnknownStatusCode() throws Exception {
  DefaultDataBufferFactory factory=new DefaultDataBufferFactory();
  DefaultDataBuffer dataBuffer=factory.wrap(ByteBuffer.wrap("foo".getBytes(StandardCharsets.UTF_8)));
  Flux<DataBuffer> body=Flux.just(dataBuffer);
  HttpHeaders httpHeaders=new HttpHeaders();
  httpHeaders.setContentType(MediaType.TEXT_PLAIN);
  when(mockResponse.getHeaders()).thenReturn(httpHeaders);
  when(mockResponse.getStatusCode()).thenThrow(new IllegalArgumentException("999"));
  when(mockResponse.getRawStatusCode()).thenReturn(999);
  when(mockResponse.getBody()).thenReturn(body);
  List<HttpMessageReader<?>> messageReaders=Collections.singletonList(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()));
  when(mockExchangeStrategies.messageReaders()).thenReturn(messageReaders);
  ResponseEntity<List<String>> result=defaultClientResponse.toEntityList(String.class).block();
  assertEquals(Collections.singletonList("foo"),result.getBody());
  try {
    result.getStatusCode();
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException ex) {
  }
  assertEquals(999,result.getStatusCodeValue());
  assertEquals(MediaType.TEXT_PLAIN,result.getHeaders().getContentType());
}
