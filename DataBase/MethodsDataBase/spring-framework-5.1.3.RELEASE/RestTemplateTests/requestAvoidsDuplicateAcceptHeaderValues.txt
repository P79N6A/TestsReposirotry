@Test public void requestAvoidsDuplicateAcceptHeaderValues() throws Exception {
  HttpMessageConverter firstConverter=mock(HttpMessageConverter.class);
  given(firstConverter.canRead(any(),any())).willReturn(true);
  given(firstConverter.getSupportedMediaTypes()).willReturn(Collections.singletonList(MediaType.TEXT_PLAIN));
  HttpMessageConverter secondConverter=mock(HttpMessageConverter.class);
  given(secondConverter.canRead(any(),any())).willReturn(true);
  given(secondConverter.getSupportedMediaTypes()).willReturn(Collections.singletonList(MediaType.TEXT_PLAIN));
  HttpHeaders requestHeaders=new HttpHeaders();
  mockSentRequest(GET,"http://example.com/",requestHeaders);
  mockResponseStatus(HttpStatus.OK);
  mockTextResponseBody("Hello World");
  template.setMessageConverters(Arrays.asList(firstConverter,secondConverter));
  template.getForObject("http://example.com/",String.class);
  assertEquals("Sent duplicate Accept header values",1,requestHeaders.getAccept().size());
}
