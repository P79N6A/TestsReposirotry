@Test public void from(){
  Flux<DataBuffer> otherBody=Flux.just("foo","bar").map(s -> s.getBytes(StandardCharsets.UTF_8)).map(dataBufferFactory::wrap);
  ClientResponse other=ClientResponse.create(HttpStatus.BAD_REQUEST,ExchangeStrategies.withDefaults()).header("foo","bar").cookie("baz","qux").body(otherBody).build();
  Flux<DataBuffer> body=Flux.just("baz").map(s -> s.getBytes(StandardCharsets.UTF_8)).map(dataBufferFactory::wrap);
  ClientResponse result=ClientResponse.from(other).headers(httpHeaders -> httpHeaders.set("foo","baar")).cookies(cookies -> cookies.set("baz",ResponseCookie.from("baz","quux").build())).body(body).build();
  assertEquals(HttpStatus.BAD_REQUEST,result.statusCode());
  assertEquals(1,result.headers().asHttpHeaders().size());
  assertEquals("baar",result.headers().asHttpHeaders().getFirst("foo"));
  assertEquals(1,result.cookies().size());
  assertEquals("quux",result.cookies().getFirst("baz").getValue());
  StepVerifier.create(result.bodyToFlux(String.class)).expectNext("baz").verifyComplete();
}
