@Test public void fromMultipartDataWithMultipleValues(){
  MultiValueMap<String,Object> map=new LinkedMultiValueMap<>();
  map.put("name",Arrays.asList("value1","value2"));
  BodyInserters.FormInserter<Object> inserter=BodyInserters.fromMultipartData(map);
  MockClientHttpRequest request=new MockClientHttpRequest(HttpMethod.GET,URI.create("http://example.com"));
  Mono<Void> result=inserter.insert(request,this.context);
  StepVerifier.create(result).expectComplete().verify();
  StepVerifier.create(DataBufferUtils.join(request.getBody())).consumeNextWith(dataBuffer -> {
    byte[] resultBytes=new byte[dataBuffer.readableByteCount()];
    dataBuffer.read(resultBytes);
    DataBufferUtils.release(dataBuffer);
    String content=new String(resultBytes,StandardCharsets.UTF_8);
    assertThat(content,containsString("Content-Disposition: form-data; name=\"name\"\r\n" + "Content-Type: text/plain;charset=UTF-8\r\n" + "Content-Length: 6\r\n"+ "\r\n"+ "value1"));
    assertThat(content,containsString("Content-Disposition: form-data; name=\"name\"\r\n" + "Content-Type: text/plain;charset=UTF-8\r\n" + "Content-Length: 6\r\n"+ "\r\n"+ "value2"));
  }
).expectComplete().verify();
}
