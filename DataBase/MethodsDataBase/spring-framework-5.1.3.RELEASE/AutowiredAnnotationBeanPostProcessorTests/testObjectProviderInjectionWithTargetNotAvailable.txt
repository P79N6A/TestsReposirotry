@Test public void testObjectProviderInjectionWithTargetNotAvailable(){
  bf.registerBeanDefinition("annotatedBean",new RootBeanDefinition(ObjectProviderInjectionBean.class));
  ObjectProviderInjectionBean bean=(ObjectProviderInjectionBean)bf.getBean("annotatedBean");
  try {
    bean.getTestBean();
    fail("Should have thrown NoSuchBeanDefinitionException");
  }
 catch (  NoSuchBeanDefinitionException ex) {
  }
  assertNull(bean.getOptionalTestBean());
  assertNull(bean.consumeOptionalTestBean());
  assertEquals(new TestBean("default"),bean.getOptionalTestBeanWithDefault());
  assertEquals(new TestBean("default"),bean.getUniqueTestBeanWithDefault());
  assertNull(bean.getUniqueTestBean());
  assertNull(bean.consumeUniqueTestBean());
  List<?> testBeans=bean.iterateTestBeans();
  assertTrue(testBeans.isEmpty());
  testBeans=bean.forEachTestBeans();
  assertTrue(testBeans.isEmpty());
  testBeans=bean.streamTestBeans();
  assertTrue(testBeans.isEmpty());
  testBeans=bean.sortedTestBeans();
  assertTrue(testBeans.isEmpty());
}
