@Test @SuppressWarnings("unchecked") public void writeAsynchronousFileChannelErrorInWrite() throws Exception {
  DataBuffer foo=stringBuffer("foo");
  DataBuffer bar=stringBuffer("bar");
  Flux<DataBuffer> flux=Flux.just(foo,bar);
  AsynchronousFileChannel channel=mock(AsynchronousFileChannel.class);
  doAnswer(invocation -> {
    ByteBuffer buffer=invocation.getArgument(0);
    long pos=invocation.getArgument(1);
    CompletionHandler<Integer,ByteBuffer> completionHandler=invocation.getArgument(3);
    assertEquals(0,pos);
    int written=buffer.remaining();
    buffer.position(buffer.limit());
    completionHandler.completed(written,buffer);
    return null;
  }
).doAnswer(invocation -> {
    ByteBuffer buffer=invocation.getArgument(0);
    CompletionHandler<Integer,ByteBuffer> completionHandler=invocation.getArgument(3);
    completionHandler.failed(new IOException(),buffer);
    return null;
  }
).when(channel).write(isA(ByteBuffer.class),anyLong(),isA(ByteBuffer.class),isA(CompletionHandler.class));
  Flux<DataBuffer> writeResult=DataBufferUtils.write(flux,channel);
  StepVerifier.create(writeResult).consumeNextWith(stringConsumer("foo")).consumeNextWith(stringConsumer("bar")).expectError(IOException.class).verify();
  channel.close();
}
