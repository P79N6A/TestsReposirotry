@Test public void readAsynchronousFileChannelError() throws Exception {
  AsynchronousFileChannel channel=mock(AsynchronousFileChannel.class);
  doAnswer(invocation -> {
    ByteBuffer byteBuffer=invocation.getArgument(0);
    byteBuffer.put("foo".getBytes(StandardCharsets.UTF_8));
    byteBuffer.flip();
    long pos=invocation.getArgument(1);
    assertEquals(0,pos);
    DataBuffer dataBuffer=invocation.getArgument(2);
    CompletionHandler<Integer,DataBuffer> completionHandler=invocation.getArgument(3);
    completionHandler.completed(3,dataBuffer);
    return null;
  }
).doAnswer(invocation -> {
    DataBuffer dataBuffer=invocation.getArgument(2);
    CompletionHandler<Integer,DataBuffer> completionHandler=invocation.getArgument(3);
    completionHandler.failed(new IOException(),dataBuffer);
    return null;
  }
).when(channel).read(any(),anyLong(),any(),any());
  Flux<DataBuffer> result=DataBufferUtils.readAsynchronousFileChannel(() -> channel,this.bufferFactory,3);
  StepVerifier.create(result).consumeNextWith(stringConsumer("foo")).expectError(IOException.class).verify(Duration.ofSeconds(3));
}
