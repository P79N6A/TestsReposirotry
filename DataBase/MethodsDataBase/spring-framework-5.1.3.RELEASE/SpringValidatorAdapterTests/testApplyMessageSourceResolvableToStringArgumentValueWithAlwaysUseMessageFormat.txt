@Test public void testApplyMessageSourceResolvableToStringArgumentValueWithAlwaysUseMessageFormat(){
  messageSource.setAlwaysUseMessageFormat(true);
  TestBean testBean=new TestBean();
  testBean.setEmail("test@example.com");
  testBean.setConfirmEmail("TEST@EXAMPLE.IO");
  BeanPropertyBindingResult errors=new BeanPropertyBindingResult(testBean,"testBean");
  validatorAdapter.validate(testBean,errors);
  assertThat(errors.getFieldErrorCount("email"),is(1));
  assertThat(errors.getFieldValue("email"),is("test@example.com"));
  assertThat(errors.getFieldErrorCount("confirmEmail"),is(1));
  FieldError error1=errors.getFieldError("email");
  FieldError error2=errors.getFieldError("confirmEmail");
  assertNotNull(error1);
  assertNotNull(error2);
  assertThat(messageSource.getMessage(error1,Locale.ENGLISH),is("email must be same value as confirmEmail"));
  assertThat(messageSource.getMessage(error2,Locale.ENGLISH),is("Email required"));
  assertTrue(error1.contains(ConstraintViolation.class));
  assertThat(error1.unwrap(ConstraintViolation.class).getPropertyPath().toString(),is("email"));
  assertTrue(error2.contains(ConstraintViolation.class));
  assertThat(error2.unwrap(ConstraintViolation.class).getPropertyPath().toString(),is("confirmEmail"));
}
