@Test public void handlerMappings() throws Exception {
  RequestMappingHandlerMapping rmHandlerMapping=this.config.requestMappingHandlerMapping();
  rmHandlerMapping.setApplicationContext(this.context);
  rmHandlerMapping.afterPropertiesSet();
  assertEquals(TestPathHelper.class,rmHandlerMapping.getUrlPathHelper().getClass());
  assertEquals(TestPathMatcher.class,rmHandlerMapping.getPathMatcher().getClass());
  HandlerExecutionChain chain=rmHandlerMapping.getHandler(new MockHttpServletRequest("GET","/"));
  assertNotNull(chain);
  assertNotNull(chain.getInterceptors());
  assertEquals(3,chain.getInterceptors().length);
  assertEquals(LocaleChangeInterceptor.class,chain.getInterceptors()[0].getClass());
  assertEquals(ConversionServiceExposingInterceptor.class,chain.getInterceptors()[1].getClass());
  assertEquals(ResourceUrlProviderExposingInterceptor.class,chain.getInterceptors()[2].getClass());
  Map<RequestMappingInfo,HandlerMethod> map=rmHandlerMapping.getHandlerMethods();
  assertEquals(2,map.size());
  RequestMappingInfo info=map.entrySet().stream().filter(entry -> entry.getValue().getBeanType().equals(UserController.class)).findFirst().orElseThrow(() -> new AssertionError("UserController bean not found")).getKey();
  assertEquals(Collections.singleton("/api/user/{id}"),info.getPatternsCondition().getPatterns());
  AbstractHandlerMapping handlerMapping=(AbstractHandlerMapping)this.config.viewControllerHandlerMapping();
  handlerMapping.setApplicationContext(this.context);
  assertNotNull(handlerMapping);
  assertEquals(1,handlerMapping.getOrder());
  assertEquals(TestPathHelper.class,handlerMapping.getUrlPathHelper().getClass());
  assertEquals(TestPathMatcher.class,handlerMapping.getPathMatcher().getClass());
  chain=handlerMapping.getHandler(new MockHttpServletRequest("GET","/path"));
  assertNotNull(chain);
  assertNotNull(chain.getHandler());
  chain=handlerMapping.getHandler(new MockHttpServletRequest("GET","/bad"));
  assertNotNull(chain);
  assertNotNull(chain.getHandler());
  chain=handlerMapping.getHandler(new MockHttpServletRequest("GET","/old"));
  assertNotNull(chain);
  assertNotNull(chain.getHandler());
  handlerMapping=(AbstractHandlerMapping)this.config.resourceHandlerMapping();
  handlerMapping.setApplicationContext(this.context);
  assertNotNull(handlerMapping);
  assertEquals(Integer.MAX_VALUE - 1,handlerMapping.getOrder());
  assertEquals(TestPathHelper.class,handlerMapping.getUrlPathHelper().getClass());
  assertEquals(TestPathMatcher.class,handlerMapping.getPathMatcher().getClass());
  chain=handlerMapping.getHandler(new MockHttpServletRequest("GET","/resources/foo.gif"));
  assertNotNull(chain);
  assertNotNull(chain.getHandler());
  assertEquals(Arrays.toString(chain.getInterceptors()),4,chain.getInterceptors().length);
  assertEquals(LocaleChangeInterceptor.class,chain.getInterceptors()[1].getClass());
  assertEquals(ConversionServiceExposingInterceptor.class,chain.getInterceptors()[2].getClass());
  assertEquals(ResourceUrlProviderExposingInterceptor.class,chain.getInterceptors()[3].getClass());
  handlerMapping=(AbstractHandlerMapping)this.config.defaultServletHandlerMapping();
  handlerMapping.setApplicationContext(this.context);
  assertNotNull(handlerMapping);
  assertEquals(Integer.MAX_VALUE,handlerMapping.getOrder());
  chain=handlerMapping.getHandler(new MockHttpServletRequest("GET","/anyPath"));
  assertNotNull(chain);
  assertNotNull(chain.getHandler());
}
