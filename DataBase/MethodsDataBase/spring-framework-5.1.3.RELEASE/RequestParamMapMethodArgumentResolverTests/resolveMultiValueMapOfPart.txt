@Test @SuppressWarnings("unchecked") public void resolveMultiValueMapOfPart() throws Exception {
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.setContentType("multipart/form-data");
  Part expected1=new MockPart("mfilelist","Hello World 1".getBytes());
  Part expected2=new MockPart("mfilelist","Hello World 2".getBytes());
  Part expected3=new MockPart("other","Hello World 3".getBytes());
  request.addPart(expected1);
  request.addPart(expected2);
  request.addPart(expected3);
  webRequest=new ServletWebRequest(request);
  MethodParameter param=this.testMethod.annot(requestParam().noName()).arg(MultiValueMap.class,String.class,Part.class);
  Object result=resolver.resolveArgument(param,null,webRequest,null);
  assertTrue(result instanceof MultiValueMap);
  MultiValueMap<String,Part> resultMap=(MultiValueMap<String,Part>)result;
  assertEquals(2,resultMap.size());
  assertEquals(2,resultMap.get("mfilelist").size());
  assertEquals(expected1,resultMap.get("mfilelist").get(0));
  assertEquals(expected2,resultMap.get("mfilelist").get(1));
  assertEquals(1,resultMap.get("other").size());
  assertEquals(expected3,resultMap.get("other").get(0));
}
