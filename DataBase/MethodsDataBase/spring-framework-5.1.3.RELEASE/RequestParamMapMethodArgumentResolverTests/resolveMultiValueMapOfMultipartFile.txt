@Test @SuppressWarnings("unchecked") public void resolveMultiValueMapOfMultipartFile() throws Exception {
  MockMultipartHttpServletRequest request=new MockMultipartHttpServletRequest();
  MultipartFile expected1=new MockMultipartFile("mfilelist","Hello World 1".getBytes());
  MultipartFile expected2=new MockMultipartFile("mfilelist","Hello World 2".getBytes());
  MultipartFile expected3=new MockMultipartFile("other","Hello World 3".getBytes());
  request.addFile(expected1);
  request.addFile(expected2);
  request.addFile(expected3);
  webRequest=new ServletWebRequest(request);
  MethodParameter param=this.testMethod.annot(requestParam().noName()).arg(MultiValueMap.class,String.class,MultipartFile.class);
  Object result=resolver.resolveArgument(param,null,webRequest,null);
  assertTrue(result instanceof MultiValueMap);
  MultiValueMap<String,MultipartFile> resultMap=(MultiValueMap<String,MultipartFile>)result;
  assertEquals(2,resultMap.size());
  assertEquals(2,resultMap.get("mfilelist").size());
  assertEquals(expected1,resultMap.get("mfilelist").get(0));
  assertEquals(expected2,resultMap.get("mfilelist").get(1));
  assertEquals(1,resultMap.get("other").size());
  assertEquals(expected3,resultMap.get("other").get(0));
}
