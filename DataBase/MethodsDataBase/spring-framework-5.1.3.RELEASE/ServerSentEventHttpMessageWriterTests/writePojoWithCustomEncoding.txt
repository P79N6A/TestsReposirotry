@Test public void writePojoWithCustomEncoding(){
  Flux<Pojo> source=Flux.just(new Pojo("foo\uD834\uDD1E","bar\uD834\uDD1E"));
  Charset charset=StandardCharsets.UTF_16LE;
  MediaType mediaType=new MediaType("text","event-stream",charset);
  testWrite(source,mediaType,outputMessage,Pojo.class);
  assertEquals(mediaType,outputMessage.getHeaders().getContentType());
  StepVerifier.create(outputMessage.getBody()).consumeNextWith(dataBuffer1 -> {
    String value1=DataBufferTestUtils.dumpString(dataBuffer1,charset);
    DataBufferUtils.release(dataBuffer1);
    assertEquals("data:",value1);
  }
).consumeNextWith(dataBuffer -> {
    String value=DataBufferTestUtils.dumpString(dataBuffer,charset);
    DataBufferUtils.release(dataBuffer);
    assertEquals("{\"foo\":\"foo\uD834\uDD1E\",\"bar\":\"bar\uD834\uDD1E\"}",value);
  }
).consumeNextWith(dataBuffer2 -> {
    String value2=DataBufferTestUtils.dumpString(dataBuffer2,charset);
    DataBufferUtils.release(dataBuffer2);
    assertEquals("\n",value2);
  }
).consumeNextWith(dataBuffer3 -> {
    String value3=DataBufferTestUtils.dumpString(dataBuffer3,charset);
    DataBufferUtils.release(dataBuffer3);
    assertEquals("\n",value3);
  }
).expectComplete().verify();
}
