@Test public void testInvalidPath() throws Exception {
  Resource resource=mock(Resource.class);
  when(resource.getFilename()).thenThrow(new AssertionError("Resource should not be resolved"));
  when(resource.getInputStream()).thenThrow(new AssertionError("Resource should not be resolved"));
  ResourceResolver resolver=mock(ResourceResolver.class);
  when(resolver.resolveResource(any(),any(),any(),any())).thenReturn(Mono.just(resource));
  ResourceWebHandler handler=new ResourceWebHandler();
  handler.setLocations(Collections.singletonList(new ClassPathResource("test/",getClass())));
  handler.setResourceResolvers(Collections.singletonList(resolver));
  handler.afterPropertiesSet();
  testInvalidPath("../testsecret/secret.txt",handler);
  testInvalidPath("test/../../testsecret/secret.txt",handler);
  testInvalidPath(":/../../testsecret/secret.txt",handler);
  Resource location=new UrlResource(getClass().getResource("./test/"));
  this.handler.setLocations(Collections.singletonList(location));
  Resource secretResource=new UrlResource(getClass().getResource("testsecret/secret.txt"));
  String secretPath=secretResource.getURL().getPath();
  testInvalidPath("file:" + secretPath,handler);
  testInvalidPath("/file:" + secretPath,handler);
  testInvalidPath("url:" + secretPath,handler);
  testInvalidPath("/url:" + secretPath,handler);
  testInvalidPath("/../.." + secretPath,handler);
  testInvalidPath("/%2E%2E/testsecret/secret.txt",handler);
  testInvalidPath("/%2E%2E/testsecret/secret.txt",handler);
  testInvalidPath("%2F%2F%2E%2E%2F%2F%2E%2E" + secretPath,handler);
}
