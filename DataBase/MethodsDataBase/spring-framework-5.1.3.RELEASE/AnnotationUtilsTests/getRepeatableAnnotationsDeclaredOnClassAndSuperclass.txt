@Test public void getRepeatableAnnotationsDeclaredOnClassAndSuperclass(){
  final Class<?> clazz=SubMyRepeatableWithAdditionalLocalDeclarationsClass.class;
  final List<String> expectedValuesJava=asList("X","Y","Z");
  final List<String> expectedValuesSpring=asList("X","Y","Z","meta2");
  MyRepeatable[] array=clazz.getAnnotationsByType(MyRepeatable.class);
  assertNotNull(array);
  List<String> values=stream(array).map(MyRepeatable::value).collect(toList());
  assertThat(values,is(expectedValuesJava));
  Set<MyRepeatable> set=getRepeatableAnnotations(clazz,MyRepeatable.class,MyRepeatableContainer.class);
  assertNotNull(set);
  values=set.stream().map(MyRepeatable::value).collect(toList());
  assertThat(values,is(expectedValuesSpring));
  set=getRepeatableAnnotations(clazz,MyRepeatable.class);
  assertNotNull(set);
  values=set.stream().map(MyRepeatable::value).collect(toList());
  assertThat(values,is(expectedValuesSpring));
}
