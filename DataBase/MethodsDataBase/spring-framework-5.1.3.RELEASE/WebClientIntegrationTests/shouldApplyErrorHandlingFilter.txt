@Test public void shouldApplyErrorHandlingFilter(){
  ExchangeFilterFunction filter=ExchangeFilterFunction.ofResponseProcessor(clientResponse -> {
    List<String> headerValues=clientResponse.headers().header("Foo");
    return headerValues.isEmpty() ? Mono.error(new MyException("Response does not contain Foo header")) : Mono.just(clientResponse);
  }
);
  WebClient filteredClient=this.webClient.mutate().filter(filter).build();
  prepareResponse(response -> response.setHeader("Content-Type","text/plain").setBody("Hello Spring!"));
  Mono<String> result=filteredClient.get().uri("/greeting?name=Spring").retrieve().bodyToMono(String.class);
  StepVerifier.create(result).expectError(MyException.class).verify(Duration.ofSeconds(3));
  prepareResponse(response -> response.setHeader("Content-Type","text/plain").setHeader("Foo","Bar").setBody("Hello Spring!"));
  result=filteredClient.get().uri("/greeting?name=Spring").retrieve().bodyToMono(String.class);
  StepVerifier.create(result).expectNext("Hello Spring!").expectComplete().verify(Duration.ofSeconds(3));
  expectRequestCount(2);
}
