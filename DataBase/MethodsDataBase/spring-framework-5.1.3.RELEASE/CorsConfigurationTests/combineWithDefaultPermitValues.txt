@Test public void combineWithDefaultPermitValues(){
  CorsConfiguration config=new CorsConfiguration().applyPermitDefaultValues();
  CorsConfiguration other=new CorsConfiguration();
  other.addAllowedOrigin("http://domain.com");
  other.addAllowedHeader("header1");
  other.addAllowedMethod(HttpMethod.PUT.name());
  CorsConfiguration combinedConfig=config.combine(other);
  assertEquals(Arrays.asList("http://domain.com"),combinedConfig.getAllowedOrigins());
  assertEquals(Arrays.asList("header1"),combinedConfig.getAllowedHeaders());
  assertEquals(Arrays.asList(HttpMethod.PUT.name()),combinedConfig.getAllowedMethods());
  combinedConfig=other.combine(config);
  assertEquals(Arrays.asList("http://domain.com"),combinedConfig.getAllowedOrigins());
  assertEquals(Arrays.asList("header1"),combinedConfig.getAllowedHeaders());
  assertEquals(Arrays.asList(HttpMethod.PUT.name()),combinedConfig.getAllowedMethods());
  combinedConfig=config.combine(new CorsConfiguration());
  assertEquals(Arrays.asList("*"),config.getAllowedOrigins());
  assertEquals(Arrays.asList("*"),config.getAllowedHeaders());
  assertEquals(Arrays.asList(HttpMethod.GET.name(),HttpMethod.HEAD.name(),HttpMethod.POST.name()),combinedConfig.getAllowedMethods());
  combinedConfig=new CorsConfiguration().combine(config);
  assertEquals(Arrays.asList("*"),config.getAllowedOrigins());
  assertEquals(Arrays.asList("*"),config.getAllowedHeaders());
  assertEquals(Arrays.asList(HttpMethod.GET.name(),HttpMethod.HEAD.name(),HttpMethod.POST.name()),combinedConfig.getAllowedMethods());
}
