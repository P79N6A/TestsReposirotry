@Test public void composeResourceLookupFunction() throws Exception {
  ClassPathResource defaultResource=new ClassPathResource("response.txt",getClass());
  Function<ServerRequest,Mono<Resource>> lookupFunction=new PathResourceLookupFunction("/resources/**",new ClassPathResource("org/springframework/web/reactive/function/server/"));
  Function<ServerRequest,Mono<Resource>> customLookupFunction=lookupFunction.andThen(resourceMono -> resourceMono.switchIfEmpty(Mono.just(defaultResource)));
  MockServerRequest request=MockServerRequest.builder().uri(new URI("http://localhost/resources/foo")).build();
  Mono<Resource> result=customLookupFunction.apply(request);
  StepVerifier.create(result).expectNextMatches(resource -> {
    try {
      return defaultResource.getFile().equals(resource.getFile());
    }
 catch (    IOException ex) {
      return false;
    }
  }
).expectComplete().verify();
}
