@Test public void bodyInserter(){
  String body="foo";
  Publisher<String> publisher=Mono.just(body);
  Mono<EntityResponse<Publisher<String>>> result=EntityResponse.fromPublisher(publisher,String.class).build();
  MockServerWebExchange exchange=MockServerWebExchange.from(MockServerHttpRequest.get("http://localhost"));
  ServerResponse.Context context=new ServerResponse.Context(){
    @Override public List<HttpMessageWriter<?>> messageWriters(){
      return Collections.singletonList(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()));
    }
    @Override public List<ViewResolver> viewResolvers(){
      return Collections.emptyList();
    }
  }
;
  StepVerifier.create(result).consumeNextWith(response -> {
    StepVerifier.create(response.entity()).expectNext(body).expectComplete().verify();
    response.writeTo(exchange,context);
  }
).expectComplete().verify();
  assertNotNull(exchange.getResponse().getBody());
}
