/** 
 * Run some checks on sizing.
 */
@Test public void testSizing(){
  BlockContainer container=new BlockContainer(new BorderArrangement());
  BufferedImage image=new BufferedImage(200,100,BufferedImage.TYPE_INT_RGB);
  Graphics2D g2=image.createGraphics();
  Size2D size=container.arrange(g2);
  assertEquals(0.0,size.width,EPSILON);
  assertEquals(0.0,size.height,EPSILON);
  container.add(new EmptyBlock(123.4,567.8));
  size=container.arrange(g2);
  assertEquals(123.4,size.width,EPSILON);
  assertEquals(567.8,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.RIGHT);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0));
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.RIGHT);
  size=container.arrange(g2);
  assertEquals(22.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  Block rb=new EmptyBlock(12.3,15.6);
  container.add(new EmptyBlock(10.0,20.0));
  container.add(rb,RectangleEdge.RIGHT);
  size=container.arrange(g2);
  assertEquals(22.3,size.width,EPSILON);
  assertEquals(20.0,size.height,EPSILON);
  assertEquals(20.0,rb.getBounds().getHeight(),EPSILON);
  container.clear();
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.LEFT);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0));
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.LEFT);
  size=container.arrange(g2);
  assertEquals(22.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  Block lb=new EmptyBlock(12.3,15.6);
  container.add(new EmptyBlock(10.0,20.0));
  container.add(lb,RectangleEdge.LEFT);
  size=container.arrange(g2);
  assertEquals(22.3,size.width,EPSILON);
  assertEquals(20.0,size.height,EPSILON);
  assertEquals(20.0,lb.getBounds().getHeight(),EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.LEFT);
  size=container.arrange(g2);
  assertEquals(22.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0));
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.LEFT);
  container.add(new EmptyBlock(5.4,3.2),RectangleEdge.RIGHT);
  size=container.arrange(g2);
  assertEquals(27.7,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0));
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3));
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(31.0,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3));
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(31.0,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(31.0,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(3.0,4.0),RectangleEdge.BOTTOM);
  container.add(new EmptyBlock(5.0,6.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(7.0,8.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(9.0,10.0));
  size=container.arrange(g2);
  assertEquals(21.0,size.width,EPSILON);
  assertEquals(14.0,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.TOP);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(45.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0));
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.TOP);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.TOP);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3));
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.RIGHT);
  size=container.arrange(g2);
  assertEquals(33.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.TOP);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3));
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.LEFT);
  size=container.arrange(g2);
  assertEquals(33.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.LEFT);
  size=container.arrange(g2);
  assertEquals(33.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(1.0,2.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(5.0,6.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(7.0,8.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(9.0,10.0));
  size=container.arrange(g2);
  assertEquals(21.0,size.width,EPSILON);
  assertEquals(12.0,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(12.3,size.width,EPSILON);
  assertEquals(65.6,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3));
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(21.0,size.width,EPSILON);
  assertEquals(77.9,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(21.0,size.width,EPSILON);
  assertEquals(77.9,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(1.0,2.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(3.0,4.0),RectangleEdge.BOTTOM);
  container.add(new EmptyBlock(7.0,8.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(9.0,10.0));
  size=container.arrange(g2);
  assertEquals(16.0,size.width,EPSILON);
  assertEquals(16.0,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(21.0,12.3),RectangleEdge.LEFT);
  container.add(new EmptyBlock(10.0,20.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(12.3,45.6),RectangleEdge.BOTTOM);
  size=container.arrange(g2);
  assertEquals(21.0,size.width,EPSILON);
  assertEquals(77.9,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(1.0,2.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(3.0,4.0),RectangleEdge.BOTTOM);
  container.add(new EmptyBlock(5.0,6.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(9.0,10.0));
  size=container.arrange(g2);
  assertEquals(14.0,size.width,EPSILON);
  assertEquals(16.0,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(1.0,2.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(3.0,4.0),RectangleEdge.BOTTOM);
  container.add(new EmptyBlock(5.0,6.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(7.0,8.0),RectangleEdge.RIGHT);
  size=container.arrange(g2);
  assertEquals(12.0,size.width,EPSILON);
  assertEquals(14.0,size.height,EPSILON);
  container.clear();
  container.add(new EmptyBlock(1.0,2.0),RectangleEdge.TOP);
  container.add(new EmptyBlock(3.0,4.0),RectangleEdge.BOTTOM);
  container.add(new EmptyBlock(5.0,6.0),RectangleEdge.LEFT);
  container.add(new EmptyBlock(7.0,8.0),RectangleEdge.RIGHT);
  container.add(new EmptyBlock(9.0,10.0));
  size=container.arrange(g2);
  assertEquals(21.0,size.width,EPSILON);
  assertEquals(16.0,size.height,EPSILON);
}
