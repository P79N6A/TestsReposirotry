@Test public void getTrimmedStackForJUnit4TestFailingInTestMethodWithCause(){
  Result result=runTest(TestWithOneThrowingTestMethodWithCause.class);
  assertEquals("Should run the test",1,result.getRunCount());
  assertEquals("One test should fail",1,result.getFailureCount());
  Failure failure=result.getFailures().get(0);
  assertHasTrimmedTrace(failure,message("java.lang.RuntimeException: outer"),at("org.junit.internal.StackTracesTest$FakeClassUnderTest.doThrowExceptionWithCause"),at("org.junit.internal.StackTracesTest$FakeClassUnderTest.throwsExceptionWithCause"),at("org.junit.internal.StackTracesTest$TestWithOneThrowingTestMethodWithCause.alwaysThrows"),framesTrimmed(),message("Caused by: java.lang.RuntimeException: cause"),at("org.junit.internal.StackTracesTest$FakeClassUnderTest.doThrowExceptionWithoutCause"),at("org.junit.internal.StackTracesTest$FakeClassUnderTest.throwsExceptionWithoutCause"),at("org.junit.internal.StackTracesTest$FakeClassUnderTest.doThrowExceptionWithCause"),framesInCommon());
  assertNotEquals(failure.getTrace(),failure.getTrimmedTrace());
}
