@Test public void assertEmptyWrapsAssumptionFailuresForManyThrowables() throws Exception {
  List<Throwable> errors=new ArrayList<Throwable>();
  AssumptionViolatedException assumptionViolatedException=new AssumptionViolatedException("skip it");
  errors.add(assumptionViolatedException);
  errors.add(new RuntimeException("garlic"));
  try {
    MultipleFailureException.assertEmpty(errors);
    fail();
  }
 catch (  MultipleFailureException expected) {
    assertThat(expected.getFailures().size(),equalTo(2));
    assertTrue(expected.getMessage().startsWith("There were 2 errors:" + LINE_SEPARATOR));
    assertTrue(expected.getMessage().contains("TestCouldNotBeSkippedException(Test could not be skipped"));
    assertTrue(expected.getMessage().contains("RuntimeException(garlic)"));
    Throwable first=expected.getFailures().get(0);
    assertThat(first,instanceOf(TestCouldNotBeSkippedException.class));
    Throwable cause=((TestCouldNotBeSkippedException)first).getCause();
    assertThat(cause,instanceOf(AssumptionViolatedException.class));
    assertThat((AssumptionViolatedException)cause,CoreMatchers.sameInstance(assumptionViolatedException));
  }
}
