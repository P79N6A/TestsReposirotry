@Test public void shouldThrowMultipleFailureExceptionWhenTestFailsAndClosingResourceFails() throws Throwable {
  ExternalResource resourceRule=new ExternalResource(){
    @Override protected void after(){
      throw new RuntimeException("simulating resource tear down failure");
    }
  }
;
  Statement failingTest=new Fail(new RuntimeException("simulated test failure"));
  Description dummyDescription=Description.createTestDescription("dummy test class name","dummy test name");
  try {
    resourceRule.apply(failingTest,dummyDescription).evaluate();
    fail("ExternalResource should throw");
  }
 catch (  MultipleFailureException e) {
    assertThat(e.getMessage(),allOf(containsString("simulated test failure"),containsString("simulating resource tear down failure")));
  }
}
