@Test public void threadGroupNotLeaked() throws Throwable {
  Collection<ThreadGroup> groupsBeforeSet=subGroupsOfCurrentThread();
  evaluateWithWaitDuration(0);
  for (  ThreadGroup group : subGroupsOfCurrentThread()) {
    if (!groupsBeforeSet.contains(group) && "FailOnTimeoutGroup".equals(group.getName())) {
      fail("A 'FailOnTimeoutGroup' thread group remains referenced after the test execution.");
    }
  }
}
