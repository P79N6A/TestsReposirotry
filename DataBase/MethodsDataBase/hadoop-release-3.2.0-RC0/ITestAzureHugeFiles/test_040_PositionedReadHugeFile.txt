@Test public void test_040_PositionedReadHugeFile() throws Throwable {
  assumeHugeFileExists();
  describe("Positioned reads of file %s",hugefile);
  NativeAzureFileSystem fs=getFileSystem();
  FileStatus status=fs.getFileStatus(hugefile);
  long filesize=status.getLen();
  int ops=0;
  final int bufferSize=8192;
  byte[] buffer=new byte[bufferSize];
  long eof=filesize - 1;
  ContractTestUtils.NanoTimer timer=new ContractTestUtils.NanoTimer();
  ContractTestUtils.NanoTimer readAtByte0, readAtByte0Again, readAtEOF;
  try (FSDataInputStream in=openDataFile()){
    readAtByte0=new ContractTestUtils.NanoTimer();
    in.readFully(0,buffer);
    readAtByte0.end("time to read data at start of file");
    ops++;
    readAtEOF=new ContractTestUtils.NanoTimer();
    in.readFully(eof - bufferSize,buffer);
    readAtEOF.end("time to read data at end of file");
    ops++;
    readAtByte0Again=new ContractTestUtils.NanoTimer();
    in.readFully(0,buffer);
    readAtByte0Again.end("time to read data at start of file again");
    ops++;
    LOG.info("Final stream state: {}",in);
  }
   long mb=Math.max(filesize / S_1M,1);
  logFSState();
  timer.end("time to performed positioned reads of %d MB ",mb);
  LOG.info("Time per positioned read = {} nS",toHuman(timer.nanosPerOperation(ops)));
}
