/** 
 * This test verifies that if SafeMode is manually entered, name-node does not come out of safe mode even after the startup safe mode conditions are met. <ol> <li>Start cluster with 1 data-node.</li> <li>Create 2 files with replication 1.</li> <li>Re-start cluster with 0 data-nodes.  Name-node should stay in automatic safe-mode.</li> <li>Enter safe mode manually.</li> <li>Start the data-node.</li> <li>Wait longer than <tt>dfs.namenode.safemode.extension</tt> and  verify that the name-node is still in safe mode.</li> </ol>
 * @throws IOException
 */
@Test public void testManualSafeMode() throws IOException {
  fs=cluster.getFileSystem();
  Path file1=new Path("/tmp/testManualSafeMode/file1");
  Path file2=new Path("/tmp/testManualSafeMode/file2");
  DFSTestUtil.createFile(fs,file1,1000,(short)1,0);
  DFSTestUtil.createFile(fs,file2,1000,(short)1,0);
  fs.close();
  cluster.shutdown();
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(false).build();
  cluster.waitActive();
  dfs=cluster.getFileSystem();
  assertTrue("No datanode is started. Should be in SafeMode",dfs.setSafeMode(SafeModeAction.SAFEMODE_GET));
  dfs.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
  cluster.startDataNodes(conf,1,true,null,null);
  cluster.waitActive();
  try {
    Thread.sleep(2000);
  }
 catch (  InterruptedException ignored) {
  }
  assertTrue("should still be in SafeMode",dfs.setSafeMode(SafeModeAction.SAFEMODE_GET));
  assertFalse("should not be in SafeMode",dfs.setSafeMode(SafeModeAction.SAFEMODE_LEAVE));
}
