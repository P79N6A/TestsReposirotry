@Test public void testGetResourceTypesConfigs() throws Exception {
  Configuration conf=new YarnConfiguration();
  ResourceFileInformation testFile1=new ResourceFileInformation("resource-types-1.xml",2);
  ResourceFileInformation testFile2=new ResourceFileInformation("resource-types-2.xml",3);
  testFile2.resourceNameUnitsMap.put("resource1","G");
  ResourceFileInformation testFile3=new ResourceFileInformation("resource-types-3.xml",3);
  testFile3.resourceNameUnitsMap.put("resource2","");
  ResourceFileInformation testFile4=new ResourceFileInformation("resource-types-4.xml",5);
  testFile4.resourceNameUnitsMap.put("resource1","G");
  testFile4.resourceNameUnitsMap.put("resource2","m");
  testFile4.resourceNameUnitsMap.put("yarn.io/gpu","");
  ResourceFileInformation[] tests={testFile1,testFile2,testFile3,testFile4};
  Map<String,ResourceInformation> res;
  for (  ResourceFileInformation testInformation : tests) {
    ResourceUtils.resetResourceTypes();
    File source=new File(conf.getClassLoader().getResource(testInformation.filename).getFile());
    resourceTypesFile=new File(source.getParent(),"resource-types.xml");
    FileUtils.copyFile(source,resourceTypesFile);
    res=ResourceUtils.getResourceTypes();
    testMemoryAndVcores(res);
    Assert.assertEquals(testInformation.resourceCount,res.size());
    for (    Map.Entry<String,String> entry : testInformation.resourceNameUnitsMap.entrySet()) {
      String resourceName=entry.getKey();
      Assert.assertTrue("Missing key " + resourceName,res.containsKey(resourceName));
      Assert.assertEquals(entry.getValue(),res.get(resourceName).getUnits());
    }
  }
}
