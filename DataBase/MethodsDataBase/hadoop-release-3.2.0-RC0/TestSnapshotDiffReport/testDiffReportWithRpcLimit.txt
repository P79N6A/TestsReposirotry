/** 
 * Tests to verfy the diff report with maximum SnapsdiffReportEntries limit over an rpc being set to 3.
 * @throws Exception
 */
@Test public void testDiffReportWithRpcLimit() throws Exception {
  final Path root=new Path("/");
  hdfs.mkdirs(root);
  for (int i=1; i < 4; i++) {
    final Path path=new Path(root,"dir" + i);
    hdfs.mkdirs(path);
  }
  SnapshotTestHelper.createSnapshot(hdfs,root,"s0");
  for (int i=1; i < 4; i++) {
    final Path path=new Path(root,"dir" + i);
    for (int j=1; j < 4; j++) {
      final Path file=new Path(path,"file" + j);
      DFSTestUtil.createFile(hdfs,file,BLOCKSIZE,REPLICATION,SEED);
    }
  }
  SnapshotTestHelper.createSnapshot(hdfs,root,"s1");
  verifyDiffReport(root,"s0","s1",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir1/file1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir1/file2")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir1/file3")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir2")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir2/file1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir2/file2")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir2/file3")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir3")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir3/file1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir3/file2")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("dir3/file3")));
}
