/** 
 * Tests to verify that multiple files are giving to satisfy storage policy and should work well altogether.
 */
@Test(timeout=300000) public void testMultipleFilesForSatisfyStoragePolicy() throws Exception {
  try {
    createCluster();
    List<String> files=new ArrayList<>();
    files.add(FILE);
    for (int i=0; i < 4; i++) {
      String file1="/testMoveWhenStoragePolicyNotSatisfying_" + i;
      files.add(file1);
      writeContent(file1);
    }
    for (    String fileName : files) {
      dfs.setStoragePolicy(new Path(fileName),ONE_SSD);
      dfs.satisfyStoragePolicy(new Path(fileName));
    }
    StorageType[][] newtypes=new StorageType[][]{{StorageType.SSD,StorageType.DISK}};
    startAdditionalDNs(config,1,NUM_OF_DATANODES,newtypes,STORAGES_PER_DATANODE,CAPACITY,hdfsCluster);
    hdfsCluster.triggerHeartbeats();
    for (    String fileName : files) {
      DFSTestUtil.waitExpectedStorageType(fileName,StorageType.SSD,1,30000,dfs);
      DFSTestUtil.waitExpectedStorageType(fileName,StorageType.DISK,2,30000,dfs);
    }
    waitForBlocksMovementAttemptReport(files.size(),30000);
  }
  finally {
    shutdownCluster();
  }
}
