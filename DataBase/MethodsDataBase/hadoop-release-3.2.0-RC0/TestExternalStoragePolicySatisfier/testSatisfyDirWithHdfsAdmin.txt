/** 
 * Tests to verify hdfsAdmin.satisfyStoragePolicy works well for dir.
 * @throws Exception
 */
@Test(timeout=300000) public void testSatisfyDirWithHdfsAdmin() throws Exception {
  try {
    createCluster();
    HdfsAdmin hdfsAdmin=new HdfsAdmin(FileSystem.getDefaultUri(config),config);
    final String subDir="/subDir";
    final String subFile1=subDir + "/subFile1";
    final String subDir2=subDir + "/subDir2";
    final String subFile2=subDir2 + "/subFile2";
    dfs.mkdirs(new Path(subDir));
    writeContent(subFile1);
    dfs.mkdirs(new Path(subDir2));
    writeContent(subFile2);
    dfs.setStoragePolicy(new Path(subDir),ONE_SSD);
    StorageType[][] newtypes=new StorageType[][]{{StorageType.SSD,StorageType.DISK}};
    startAdditionalDNs(config,1,NUM_OF_DATANODES,newtypes,STORAGES_PER_DATANODE,CAPACITY,hdfsCluster);
    hdfsAdmin.satisfyStoragePolicy(new Path(subDir));
    hdfsCluster.triggerHeartbeats();
    DFSTestUtil.waitExpectedStorageType(subFile1,StorageType.SSD,1,30000,dfs);
    DFSTestUtil.waitExpectedStorageType(subFile1,StorageType.DISK,2,30000,dfs);
    DFSTestUtil.waitExpectedStorageType(subFile2,StorageType.SSD,1,30000,dfs);
    DFSTestUtil.waitExpectedStorageType(subFile2,StorageType.DISK,2,30000,dfs);
  }
  finally {
    shutdownCluster();
  }
}
