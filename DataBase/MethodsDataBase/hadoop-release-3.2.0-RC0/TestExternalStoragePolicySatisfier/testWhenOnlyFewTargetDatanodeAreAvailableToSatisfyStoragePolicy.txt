/** 
 * Tests to verify that for the given path, some of the blocks or block src locations(src nodes) under the given path will be scheduled for block movement. For example, there are two block for a file: File1 => blk_1[locations=A(DISK),B(DISK),C(DISK)], blk_2[locations=A(DISK),B(DISK),C(DISK)]. Now, set storage policy to COLD. Only one datanode is available with storage type ARCHIVE, say D. SPS will schedule block movement to the coordinator node with the details, blk_1[move A(DISK) -> D(ARCHIVE)], blk_2[move A(DISK) -> D(ARCHIVE)].
 */
@Test(timeout=300000) public void testWhenOnlyFewTargetDatanodeAreAvailableToSatisfyStoragePolicy() throws Exception {
  try {
    createCluster();
    dfs.setStoragePolicy(new Path(FILE),COLD);
    StorageType[][] newtypes=new StorageType[][]{{StorageType.ARCHIVE,StorageType.ARCHIVE}};
    startAdditionalDNs(config,1,NUM_OF_DATANODES,newtypes,STORAGES_PER_DATANODE,CAPACITY,hdfsCluster);
    dfs.satisfyStoragePolicy(new Path(FILE));
    hdfsCluster.triggerHeartbeats();
    DFSTestUtil.waitExpectedStorageType(FILE,StorageType.ARCHIVE,1,30000,dfs);
    DFSTestUtil.waitExpectedStorageType(FILE,StorageType.DISK,2,30000,dfs);
    waitForBlocksMovementAttemptReport(1,30000);
  }
  finally {
    shutdownCluster();
  }
}
