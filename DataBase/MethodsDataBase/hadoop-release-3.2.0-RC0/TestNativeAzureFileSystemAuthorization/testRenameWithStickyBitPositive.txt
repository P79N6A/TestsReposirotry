/** 
 * Positive test to check rename succeeds when sticky bit is set on source parent directory and user owns the source directory.
 */
@Test public void testRenameWithStickyBitPositive() throws Throwable {
  Path parentSrcDir=new Path("/testRenameWithStickyBitPositiveSrc");
  Path srcPath=new Path(parentSrcDir,"test1.dat");
  Path parentDstDir=new Path("/testRenameWithStickyBitPositiveDst");
  Path dstPath=new Path(parentDstDir,"test2.dat");
  authorizer.addAuthRuleForOwner("/",WRITE,true);
  authorizer.addAuthRuleForOwner(parentSrcDir.toString(),WRITE,true);
  authorizer.addAuthRuleForOwner(parentDstDir.toString(),WRITE,true);
  fs.updateWasbAuthorizer(authorizer);
  try {
    touch(fs,srcPath);
    assertPathExists(fs,"sourcePath does not exist",srcPath);
    fs.mkdirs(parentDstDir);
    assertIsDirectory(fs,parentDstDir);
    fs.setPermission(parentSrcDir,new FsPermission(STICKYBIT_PERMISSION_CONSTANT));
    assertRenameOutcome(fs,srcPath,dstPath,true);
    assertPathDoesNotExist(fs,"sourcePath exists",srcPath);
    assertPathExists(fs,"destPath does not exist",dstPath);
  }
  finally {
    recursiveDelete(parentSrcDir);
    recursiveDelete(parentDstDir);
  }
}
