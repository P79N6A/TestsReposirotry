/** 
 * Test case when owner matches current user
 */
@Test public void testOwnerPermissionPositive() throws Throwable {
  Path parentDir=new Path("/testOwnerPermissionPositive");
  Path testPath=new Path(parentDir,"test.data");
  authorizer.addAuthRuleForOwner("/",WRITE,true);
  authorizer.addAuthRuleForOwner(parentDir.toString(),WRITE,true);
  fs.updateWasbAuthorizer(authorizer);
  try {
    fs.mkdirs(parentDir);
    ContractTestUtils.assertPathExists(fs,"parentDir does not exist",parentDir);
    fs.create(testPath);
    fs.getFileStatus(testPath);
    ContractTestUtils.assertPathExists(fs,"testPath does not exist",testPath);
    fs.delete(parentDir,true);
    ContractTestUtils.assertPathDoesNotExist(fs,"testPath does not exist",testPath);
  }
  finally {
    allowRecursiveDelete(fs,parentDir.toString());
    fs.delete(parentDir,true);
  }
}
