/** 
 * Negative test to verify file delete access check.
 * @throws Throwable
 */
@Test public void testFileDeleteAccessCheckNegative() throws Throwable {
  Path parentDir=new Path("/");
  Path testPath=new Path(parentDir,"test.dat");
  setExpectedFailureMessage("delete",testPath);
  authorizer.addAuthRuleForOwner("/",WRITE,true);
  fs.updateWasbAuthorizer(authorizer);
  try {
    fs.create(testPath);
    ContractTestUtils.assertPathExists(fs,"testPath was not created",testPath);
    authorizer.deleteAllAuthRules();
    authorizer.addAuthRuleForOwner("/",WRITE,false);
    fs.updateWasbAuthorizer(authorizer);
    fs.delete(testPath,false);
  }
  finally {
    authorizer.deleteAllAuthRules();
    authorizer.addAuthRuleForOwner("/",WRITE,true);
    fs.updateWasbAuthorizer(authorizer);
    fs.delete(testPath,false);
    ContractTestUtils.assertPathDoesNotExist(fs,"testPath exists after deletion!",testPath);
  }
}
