@Test public void testMaximumAllocationRefresh() throws IOException {
  conf.set(YarnConfiguration.RESOURCE_TYPES,CUSTOM_RESOURCE);
  conf.set(YarnConfiguration.RESOURCE_TYPES + "." + CUSTOM_RESOURCE+ UNITS,"k");
  conf.setInt(YarnConfiguration.RESOURCE_TYPES + "." + CUSTOM_RESOURCE+ MAXIMUM_ALLOCATION,10000);
  conf.setInt(YarnConfiguration.RESOURCE_TYPES + "." + ResourceInformation.VCORES.getName()+ MAXIMUM_ALLOCATION,4);
  conf.setInt(YarnConfiguration.RESOURCE_TYPES + "." + ResourceInformation.MEMORY_MB.getName()+ MAXIMUM_ALLOCATION,512);
  scheduler.init(conf);
  scheduler.reinitialize(conf,null);
  Resource maxAllowedAllocation=scheduler.getNodeTracker().getMaxAllowedAllocation();
  ResourceInformation customResource=maxAllowedAllocation.getResourceInformation(CUSTOM_RESOURCE);
  assertEquals(512,maxAllowedAllocation.getMemorySize());
  assertEquals(4,maxAllowedAllocation.getVirtualCores());
  assertEquals(10000,customResource.getValue());
  conf=new YarnConfiguration();
  conf.set(YarnConfiguration.RESOURCE_TYPES,CUSTOM_RESOURCE);
  conf.set(YarnConfiguration.RESOURCE_TYPES + "." + CUSTOM_RESOURCE+ UNITS,"k");
  conf.setInt(YarnConfiguration.RESOURCE_TYPES + "." + CUSTOM_RESOURCE+ MAXIMUM_ALLOCATION,20000);
  conf.setInt(YarnConfiguration.RESOURCE_TYPES + "." + ResourceInformation.VCORES.getName()+ MAXIMUM_ALLOCATION,8);
  conf.setInt(YarnConfiguration.RESOURCE_TYPES + "." + ResourceInformation.MEMORY_MB.getName()+ MAXIMUM_ALLOCATION,2048);
  scheduler.reinitialize(conf,null);
  maxAllowedAllocation=scheduler.getNodeTracker().getMaxAllowedAllocation();
  customResource=maxAllowedAllocation.getResourceInformation(CUSTOM_RESOURCE);
  assertEquals(2048,maxAllowedAllocation.getMemorySize());
  assertEquals(8,maxAllowedAllocation.getVirtualCores());
  assertEquals(20000,customResource.getValue());
}
