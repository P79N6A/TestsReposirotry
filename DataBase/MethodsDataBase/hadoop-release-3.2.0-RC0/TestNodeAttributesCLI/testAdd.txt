@Test public void testAdd() throws Exception {
  String[] args=new String[]{"-add","x:"};
  assertTrue("It should have failed as no node is specified",0 != runTool(args));
  assertFailureMessageContains("Attributes cannot be null or empty for Operation [add] on the node x");
  args=new String[]{"-add","x:key2=123,key3=abc z:key4(string)","-failOnUnknownNodes"};
  assertTrue("Should not fail as attribute has been properly mapped",0 == runTool(args));
  List<NodeToAttributes> nodeAttributesList=new ArrayList<>();
  List<NodeAttribute> attributes=new ArrayList<>();
  attributes.add(NodeAttribute.newInstance("key2",NodeAttributeType.STRING,"123"));
  attributes.add(NodeAttribute.newInstance("key3",NodeAttributeType.STRING,"abc"));
  nodeAttributesList.add(NodeToAttributes.newInstance("x",attributes));
  attributes=new ArrayList<>();
  attributes.add(NodeAttribute.newInstance("key4",NodeAttributeType.STRING,""));
  nodeAttributesList.add(NodeToAttributes.newInstance("z",attributes));
  NodesToAttributesMappingRequest expected=NodesToAttributesMappingRequest.newInstance(AttributeMappingOperationType.ADD,nodeAttributesList,true);
  assertTrue(nodeToAttrRequest.equals(expected));
  args=new String[]{"-add","x:key2=123,key3=abc x:key4(string)","-failOnUnknownNodes"};
  assertTrue("Should not fail as attribute has been properly mapped",0 == runTool(args));
  nodeAttributesList=new ArrayList<>();
  attributes=new ArrayList<>();
  attributes.add(NodeAttribute.newInstance("key4",NodeAttributeType.STRING,""));
  nodeAttributesList.add(NodeToAttributes.newInstance("x",attributes));
  expected=NodesToAttributesMappingRequest.newInstance(AttributeMappingOperationType.ADD,nodeAttributesList,true);
  assertTrue(nodeToAttrRequest.equals(expected));
}
