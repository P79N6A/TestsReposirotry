/** 
 * Verifies that if for some reason NM fails to start ContainerManager RPC server, RM is oblivious to NM's presence. The behaviour is like this because otherwise, NM will report to RM even if all its servers are not started properly, RM will think that the NM is alive and will retire the NM only after NM_EXPIRY interval. See MAPREDUCE-2749.
 */
@Test public void testNoRegistrationWhenNMServicesFail() throws Exception {
  nm=new NodeManager(){
    @Override protected NodeStatusUpdater createNodeStatusUpdater(    Context context,    Dispatcher dispatcher,    NodeHealthCheckerService healthChecker){
      return new MyNodeStatusUpdater(context,dispatcher,healthChecker,metrics);
    }
    @Override protected ContainerManagerImpl createContainerManager(    Context context,    ContainerExecutor exec,    DeletionService del,    NodeStatusUpdater nodeStatusUpdater,    ApplicationACLsManager aclsManager,    LocalDirsHandlerService diskhandler){
      return new ContainerManagerImpl(context,exec,del,nodeStatusUpdater,metrics,diskhandler){
        @Override protected void serviceStart(){
          throw new YarnRuntimeException("Starting of RPC Server failed");
        }
      }
;
    }
  }
;
  verifyNodeStartFailure("Starting of RPC Server failed");
}
