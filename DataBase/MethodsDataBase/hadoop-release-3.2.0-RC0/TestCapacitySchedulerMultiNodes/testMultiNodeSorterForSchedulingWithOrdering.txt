@Test public void testMultiNodeSorterForSchedulingWithOrdering() throws Exception {
  MockRM rm=new MockRM(conf);
  rm.start();
  MockNM nm1=rm.registerNode("127.0.0.1:1234",10 * GB,10);
  MockNM nm2=rm.registerNode("127.0.0.2:1235",10 * GB,10);
  MockNM nm3=rm.registerNode("127.0.0.3:1236",10 * GB,10);
  MockNM nm4=rm.registerNode("127.0.0.4:1237",10 * GB,10);
  ResourceScheduler scheduler=rm.getRMContext().getScheduler();
  waitforNMRegistered(scheduler,4,5);
  MultiNodeSortingManager<SchedulerNode> mns=rm.getRMContext().getMultiNodeSortingManager();
  MultiNodeSorter<SchedulerNode> sorter=mns.getMultiNodePolicy(POLICY_CLASS_NAME);
  sorter.reSortClusterNodes();
  Set<SchedulerNode> nodes=sorter.getMultiNodeLookupPolicy().getNodesPerPartition("");
  Assert.assertEquals(4,nodes.size());
  RMApp app1=rm.submitApp(2048,"app-1","user1",null,"default");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm,nm1);
  SchedulerNodeReport reportNm1=rm.getResourceScheduler().getNodeReport(nm1.getNodeId());
  Assert.assertEquals(2 * GB,reportNm1.getUsedResource().getMemorySize());
  Assert.assertEquals(8 * GB,reportNm1.getAvailableResource().getMemorySize());
  sorter.reSortClusterNodes();
  RMApp app2=rm.submitApp(1024,"app-2","user2",null,"default");
  MockAM am2=MockRM.launchAndRegisterAM(app2,rm,nm2);
  SchedulerNodeReport reportNm2=rm.getResourceScheduler().getNodeReport(nm2.getNodeId());
  Assert.assertEquals(1 * GB,reportNm2.getUsedResource().getMemorySize());
  Assert.assertEquals(9 * GB,reportNm2.getAvailableResource().getMemorySize());
  sorter.reSortClusterNodes();
  nodes=sorter.getMultiNodeLookupPolicy().getNodesPerPartition("");
  List<NodeId> currentNodes=new ArrayList<>();
  currentNodes.add(nm3.getNodeId());
  currentNodes.add(nm4.getNodeId());
  currentNodes.add(nm2.getNodeId());
  currentNodes.add(nm1.getNodeId());
  Iterator<SchedulerNode> it=nodes.iterator();
  SchedulerNode current;
  int i=0;
  while (it.hasNext()) {
    current=it.next();
    Assert.assertEquals(current.getNodeID(),currentNodes.get(i++));
  }
  rm.stop();
}
