@Test public void testModifyLabelsOnUnknownNodes() throws IOException, YarnException {
  rm=new MockRM();
  ((RMContextImpl)rm.getRMContext()).setHAServiceState(HAServiceState.ACTIVE);
  setActiveAndInactiveNodes(rm);
  RMNodeLabelsManager labelMgr=rm.rmContext.getNodeLabelManager();
  labelMgr.addToCluserNodeLabelsWithDefaultExclusivity(ImmutableSet.of("x","y"));
  ReplaceLabelsOnNodeRequest request1=ReplaceLabelsOnNodeRequest.newInstance(ImmutableMap.of(NodeId.newInstance("host1",1111),(Set<String>)ImmutableSet.of("x")));
  request1.setFailOnUnknownNodes(true);
  try {
    rm.adminService.replaceLabelsOnNode(request1);
  }
 catch (  Exception ex) {
    fail("should not fail on known node");
  }
  ReplaceLabelsOnNodeRequest request2=ReplaceLabelsOnNodeRequest.newInstance(ImmutableMap.of(NodeId.newInstance("host1",0),(Set<String>)ImmutableSet.of("x")));
  request2.setFailOnUnknownNodes(true);
  try {
    rm.adminService.replaceLabelsOnNode(request2);
  }
 catch (  Exception ex) {
    fail("should not fail on known node");
  }
  ReplaceLabelsOnNodeRequest request3=ReplaceLabelsOnNodeRequest.newInstance(ImmutableMap.of(NodeId.newInstance("host5",0),(Set<String>)ImmutableSet.of("x")));
  request3.setFailOnUnknownNodes(true);
  try {
    rm.adminService.replaceLabelsOnNode(request3);
    fail("Should fail on unknown node");
  }
 catch (  Exception ex) {
  }
  ReplaceLabelsOnNodeRequest request4=ReplaceLabelsOnNodeRequest.newInstance(ImmutableMap.of(NodeId.newInstance("host2",1111),(Set<String>)ImmutableSet.of("x")));
  request4.setFailOnUnknownNodes(true);
  try {
    rm.adminService.replaceLabelsOnNode(request4);
    fail("Should fail on node with wrong port");
  }
 catch (  Exception ex) {
  }
  ReplaceLabelsOnNodeRequest request5=ReplaceLabelsOnNodeRequest.newInstance(ImmutableMap.of(NodeId.newInstance("host5",0),(Set<String>)ImmutableSet.of("x")));
  request5.setFailOnUnknownNodes(false);
  try {
    rm.adminService.replaceLabelsOnNode(request5);
  }
 catch (  Exception ex) {
    fail("Should not fail on unknown node when " + "fail-on-unkown-nodes is set false");
  }
  ReplaceLabelsOnNodeRequest request6=ReplaceLabelsOnNodeRequest.newInstance(ImmutableMap.of(NodeId.newInstance("host4",0),(Set<String>)ImmutableSet.of("x")));
  request6.setFailOnUnknownNodes(true);
  try {
    rm.adminService.replaceLabelsOnNode(request6);
  }
 catch (  Exception ex) {
    fail("should not fail on inactive node");
  }
  rm.close();
}
