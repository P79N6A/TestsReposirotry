@Test public void testRMHAWithFileSystemBasedConfiguration() throws IOException, YarnException {
  StateChangeRequestInfo requestInfo=new StateChangeRequestInfo(HAServiceProtocol.RequestSource.REQUEST_BY_USER);
  updateConfigurationForRMHA();
  Configuration conf1=new Configuration(configuration);
  conf1.set(YarnConfiguration.RM_HA_ID,"rm1");
  Configuration conf2=new Configuration(configuration);
  conf2.set(YarnConfiguration.RM_HA_ID,"rm2");
  uploadDefaultConfiguration();
  MockRM rm1=null;
  MockRM rm2=null;
  try {
    rm1=new MockRM(conf1);
    rm1.init(conf1);
    rm1.start();
    Assert.assertTrue(rm1.getRMContext().getHAServiceState() == HAServiceState.STANDBY);
    rm2=new MockRM(conf2);
    rm2.init(conf1);
    rm2.start();
    Assert.assertTrue(rm2.getRMContext().getHAServiceState() == HAServiceState.STANDBY);
    rm1.adminService.transitionToActive(requestInfo);
    Assert.assertTrue(rm1.getRMContext().getHAServiceState() == HAServiceState.ACTIVE);
    CapacitySchedulerConfiguration csConf=new CapacitySchedulerConfiguration();
    csConf.set(CapacitySchedulerConfiguration.MAXIMUM_SYSTEM_APPLICATIONS,"5000");
    uploadConfiguration(csConf,"capacity-scheduler.xml");
    rm1.adminService.refreshQueues(RefreshQueuesRequest.newInstance());
    int maxApps=((CapacityScheduler)rm1.getRMContext().getScheduler()).getConfiguration().getMaximumSystemApplications();
    Assert.assertEquals(maxApps,5000);
    int maxAppsBeforeFailOver=((CapacityScheduler)rm2.getRMContext().getScheduler()).getConfiguration().getMaximumSystemApplications();
    Assert.assertEquals(maxAppsBeforeFailOver,10000);
    rm1.adminService.transitionToStandby(requestInfo);
    rm2.adminService.transitionToActive(requestInfo);
    Assert.assertTrue(rm1.getRMContext().getHAServiceState() == HAServiceState.STANDBY);
    Assert.assertTrue(rm2.getRMContext().getHAServiceState() == HAServiceState.ACTIVE);
    int maxAppsAfter=((CapacityScheduler)rm2.getRMContext().getScheduler()).getConfiguration().getMaximumSystemApplications();
    Assert.assertEquals(maxAppsAfter,5000);
  }
  finally {
    if (rm1 != null) {
      rm1.stop();
    }
    if (rm2 != null) {
      rm2.stop();
    }
  }
}
