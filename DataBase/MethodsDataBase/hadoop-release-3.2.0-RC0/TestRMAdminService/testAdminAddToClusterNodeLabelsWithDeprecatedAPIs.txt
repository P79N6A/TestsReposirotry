@Test(timeout=30000) public void testAdminAddToClusterNodeLabelsWithDeprecatedAPIs() throws Exception, YarnException {
  configuration.set(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,"org.apache.hadoop.yarn.FileSystemBasedConfigurationProvider");
  uploadDefaultConfiguration();
  rm=new MockRM(configuration){
    protected ClientRMService createClientRMService(){
      return new ClientRMService(this.rmContext,scheduler,this.rmAppManager,this.applicationACLsManager,this.queueACLsManager,this.getRMContext().getRMDelegationTokenSecretManager());
    }
  }
;
  rm.init(configuration);
  rm.start();
  try {
    List<String> list=new ArrayList<String>();
    list.add("a");
    list.add("b");
    AddToClusterNodeLabelsRequestProto proto=AddToClusterNodeLabelsRequestProto.newBuilder().addAllDeprecatedNodeLabels(list).build();
    AddToClusterNodeLabelsRequestPBImpl protoImpl=new AddToClusterNodeLabelsRequestPBImpl(proto);
    rm.adminService.addToClusterNodeLabels((AddToClusterNodeLabelsRequest)protoImpl);
  }
 catch (  Exception ex) {
    fail("Could not update node labels." + ex);
  }
  Configuration conf=new Configuration();
  YarnRPC rpc=YarnRPC.create(conf);
  InetSocketAddress rmAddress=rm.getClientRMService().getBindAddress();
  ApplicationClientProtocol client=(ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class,rmAddress,conf);
  GetClusterNodeLabelsResponse response=client.getClusterNodeLabels(GetClusterNodeLabelsRequest.newInstance());
  NodeLabel labelX=NodeLabel.newInstance("a");
  NodeLabel labelY=NodeLabel.newInstance("b");
  Assert.assertTrue(response.getNodeLabelList().containsAll(Arrays.asList(labelX,labelY)));
}
