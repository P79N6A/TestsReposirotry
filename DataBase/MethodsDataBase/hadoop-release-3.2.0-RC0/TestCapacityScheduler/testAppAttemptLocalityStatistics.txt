@Test public void testAppAttemptLocalityStatistics() throws Exception {
  Configuration conf=TestUtils.getConfigurationWithMultipleQueues(new Configuration(false));
  conf.setBoolean(YarnConfiguration.NODE_LABELS_ENABLED,true);
  final RMNodeLabelsManager mgr=new NullRMNodeLabelsManager();
  mgr.init(conf);
  MockRM rm=new MockRM(conf){
    protected RMNodeLabelsManager createNodeLabelManager(){
      return mgr;
    }
  }
;
  rm.start();
  MockNM nm1=new MockNM("h1:1234",200 * GB,rm.getResourceTrackerService());
  nm1.registerNode();
  RMApp app1=rm.submitApp(1 * GB,"app","user",null,"a");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm,nm1);
  am1.allocate(Arrays.asList(ResourceRequest.newInstance(Priority.newInstance(1),"*",Resources.createResource(1 * GB),2),ResourceRequest.newInstance(Priority.newInstance(1),"/default-rack",Resources.createResource(1 * GB),2),ResourceRequest.newInstance(Priority.newInstance(1),"h1",Resources.createResource(1 * GB),1)),null);
  CapacityScheduler cs=(CapacityScheduler)rm.getRMContext().getScheduler();
  cs.nodeUpdate(rm.getRMContext().getRMNodes().get(nm1.getNodeId()));
  cs.nodeUpdate(rm.getRMContext().getRMNodes().get(nm1.getNodeId()));
  RMAppAttemptMetrics attemptMetrics=rm.getRMContext().getRMApps().get(app1.getApplicationId()).getCurrentAppAttempt().getRMAppAttemptMetrics();
  Assert.assertArrayEquals(new int[][]{{1,0,0},{0,1,0},{0,0,1}},attemptMetrics.getLocalityStatistics());
}
