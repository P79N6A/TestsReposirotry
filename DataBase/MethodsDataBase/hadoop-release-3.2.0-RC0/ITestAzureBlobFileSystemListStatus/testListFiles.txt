@Test public void testListFiles() throws Exception {
  final AzureBlobFileSystem fs=getFileSystem();
  Path testDir=new Path("/test");
  fs.mkdirs(testDir);
  FileStatus[] fileStatuses=fs.listStatus(new Path("/"));
  assertEquals(1,fileStatuses.length);
  fs.mkdirs(new Path("/test/sub"));
  fileStatuses=fs.listStatus(testDir);
  assertEquals(1,fileStatuses.length);
  assertEquals("sub",fileStatuses[0].getPath().getName());
  assertIsDirectoryReference(fileStatuses[0]);
  Path childF=fs.makeQualified(new Path("/test/f"));
  touch(childF);
  fileStatuses=fs.listStatus(testDir);
  assertEquals(2,fileStatuses.length);
  final FileStatus childStatus=fileStatuses[0];
  assertEquals(childF,childStatus.getPath());
  assertEquals("f",childStatus.getPath().getName());
  assertIsFileReference(childStatus);
  assertEquals(0,childStatus.getLen());
  final FileStatus status1=fileStatuses[1];
  assertEquals("sub",status1.getPath().getName());
  assertIsDirectoryReference(status1);
  LocatedFileStatus locatedChildStatus=fs.listFiles(childF,false).next();
  assertIsFileReference(locatedChildStatus);
  fs.delete(testDir,true);
  intercept(FileNotFoundException.class,() -> fs.listFiles(childF,false).next());
  assertEquals("Path mismatch of " + locatedChildStatus,childF,locatedChildStatus.getPath());
  assertEquals("locatedstatus.equals(status)",locatedChildStatus,childStatus);
  assertEquals("status.equals(locatedstatus)",childStatus,locatedChildStatus);
}
