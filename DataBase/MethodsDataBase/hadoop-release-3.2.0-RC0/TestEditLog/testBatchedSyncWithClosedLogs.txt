/** 
 * Test what happens with the following sequence: Thread A writes edit Thread B calls logSyncAll calls close() on stream Thread A calls logSync This sequence is legal and can occur if enterSafeMode() is closely followed by saveNamespace.
 */
@Test public void testBatchedSyncWithClosedLogs() throws Exception {
  Configuration conf=getConf();
  MiniDFSCluster cluster=null;
  FileSystem fileSys=null;
  ExecutorService threadA=Executors.newSingleThreadExecutor();
  ExecutorService threadB=Executors.newSingleThreadExecutor();
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build();
    cluster.waitActive();
    fileSys=cluster.getFileSystem();
    final FSNamesystem namesystem=cluster.getNamesystem();
    FSImage fsimage=namesystem.getFSImage();
    final FSEditLog editLog=fsimage.getEditLog();
    doLogEdit(threadA,editLog,"thread-a 1");
    if (!useAsyncEditLog) {
      assertEquals("logging edit without syncing should do not affect txid",1,editLog.getSyncTxId());
    }
    doCallLogSyncAll(threadB,editLog);
    assertEquals("logSyncAll should sync thread A's transaction",2,editLog.getSyncTxId());
    editLog.close();
    doCallLogSync(threadA,editLog);
  }
  finally {
    threadA.shutdown();
    threadB.shutdown();
    if (fileSys != null)     fileSys.close();
    if (cluster != null)     cluster.shutdown();
  }
}
