@Test(timeout=10000) public void testContainerLogsMetaForFinishedApps() throws Exception {
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId containerId1=ContainerId.newContainerId(appAttemptId,1);
  String fileName="syslog";
  String user="user1";
  String content="Hello." + containerId1;
  NodeId nodeId=NodeId.newInstance("test host",100);
  TestContainerLogsUtils.createContainerLogFileInRemoteFS(conf,fs,rootLogDir,containerId1,nodeId,fileName,user,content,true);
  WebResource r=resource();
  ClientResponse response=r.path("ws").path("v1").path("applicationhistory").path("containers").path(containerId1.toString()).path("logs").queryParam("user.name",user).accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  List<ContainerLogsInfo> responseText=response.getEntity(new GenericType<List<ContainerLogsInfo>>(){
  }
);
  assertTrue(responseText.size() == 1);
  assertEquals(responseText.get(0).getLogType(),ContainerLogAggregationType.AGGREGATED.toString());
  List<ContainerLogFileInfo> logMeta=responseText.get(0).getContainerLogsInfo();
  assertTrue(logMeta.size() == 1);
  assertEquals(logMeta.get(0).getFileName(),fileName);
  assertEquals(logMeta.get(0).getFileSize(),String.valueOf(content.length()));
}
