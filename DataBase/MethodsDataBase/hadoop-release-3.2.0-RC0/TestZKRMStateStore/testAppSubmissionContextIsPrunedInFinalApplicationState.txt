@Test public void testAppSubmissionContextIsPrunedInFinalApplicationState() throws Exception {
  TestZKRMStateStoreTester zkTester=new TestZKRMStateStoreTester();
  ApplicationId appId=ApplicationId.fromString("application_1234_0010");
  Configuration conf=createConfForDelegationTokenNodeSplit(1);
  RMStateStore store=zkTester.getRMStateStore(conf);
  ApplicationSubmissionContext ctx=new ApplicationSubmissionContextPBImpl();
  ctx.setApplicationId(appId);
  ctx.setQueue("a_queue");
  ContainerLaunchContextPBImpl containerLaunchCtx=new ContainerLaunchContextPBImpl();
  containerLaunchCtx.setCommands(Collections.singletonList("a_command"));
  ctx.setAMContainerSpec(containerLaunchCtx);
  Resource resource=new ResourcePBImpl();
  resource.setMemorySize(17L);
  ctx.setResource(resource);
  Map<String,String> schedulingPropertiesMap=Collections.singletonMap("a_key","a_value");
  ctx.setApplicationSchedulingPropertiesMap(schedulingPropertiesMap);
  ApplicationStateDataPBImpl appState=new ApplicationStateDataPBImpl();
  appState.setState(RMAppState.RUNNING);
  appState.setApplicationSubmissionContext(ctx);
  store.storeApplicationStateInternal(appId,appState);
  RMState rmState=store.loadState();
  assertEquals(1,rmState.getApplicationState().size());
  ctx=rmState.getApplicationState().get(appId).getApplicationSubmissionContext();
  appState.setState(RMAppState.RUNNING);
  store.handleStoreEvent(new RMStateUpdateAppEvent(appState,false,null));
  rmState=store.loadState();
  ctx=rmState.getApplicationState().get(appId).getApplicationSubmissionContext();
  assertEquals("ApplicationSchedulingPropertiesMap should not have been " + "pruned from the application submission context before the " + "FINISHED state",schedulingPropertiesMap,ctx.getApplicationSchedulingPropertiesMap());
  appState.setState(RMAppState.FINISHED);
  store.handleStoreEvent(new RMStateUpdateAppEvent(appState,false,null));
  rmState=store.loadState();
  ctx=rmState.getApplicationState().get(appId).getApplicationSubmissionContext();
  assertEquals(appId,ctx.getApplicationId());
  assertEquals("a_queue",ctx.getQueue());
  assertNotNull(ctx.getAMContainerSpec());
  assertEquals(17L,ctx.getResource().getMemorySize());
  assertEquals("ApplicationSchedulingPropertiesMap should have been pruned" + " from the application submission context when in FINISHED STATE",Collections.emptyMap(),ctx.getApplicationSchedulingPropertiesMap());
  store.close();
}
