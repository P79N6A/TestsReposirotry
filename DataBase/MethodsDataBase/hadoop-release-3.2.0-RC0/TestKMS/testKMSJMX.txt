@Test public void testKMSJMX() throws Exception {
  Configuration conf=new Configuration();
  final File confDir=getTestDir();
  conf=createBaseKMSConf(confDir,conf);
  final String processName="testkmsjmx";
  conf.set(KMSConfiguration.METRICS_PROCESS_NAME_KEY,processName);
  writeConf(confDir,conf);
  runServer(null,null,confDir,new KMSCallable<Void>(){
    @Override public Void call() throws Exception {
      final URL jmxUrl=new URL(getKMSUrl() + "/jmx?user.name=whatever&qry=Hadoop:service=" + processName+ ",name=JvmMetrics");
      LOG.info("Requesting jmx from " + jmxUrl);
      final StringBuilder sb=new StringBuilder();
      final InputStream in=jmxUrl.openConnection().getInputStream();
      final byte[] buffer=new byte[64 * 1024];
      int len;
      while ((len=in.read(buffer)) > 0) {
        sb.append(new String(buffer,0,len));
      }
      LOG.info("jmx returned: " + sb.toString());
      assertTrue(sb.toString().contains("JvmMetrics"));
      return null;
    }
  }
);
}
