@Test public void testRandomTreeWalkFork() throws Exception {
  Set<FileStatus> ns=new HashSet<>();
  final long seed=r.nextLong();
  RandomTreeWalk t1=new RandomTreeWalk(seed,10,.15f);
  int i=0;
  for (  TreePath p : t1) {
    p.accept(i++);
    assertTrue(ns.add(p.getFileStatus()));
  }
  RandomTreeWalk t2=new RandomTreeWalk(seed,10,.15f);
  int j=0;
  ArrayList<TreeWalk.TreeIterator> iters=new ArrayList<>();
  iters.add(t2.iterator());
  while (!iters.isEmpty()) {
    for (TreeWalk.TreeIterator sub=iters.remove(iters.size() - 1); sub.hasNext(); ) {
      TreePath p=sub.next();
      if (0 == (r.nextInt() % 4)) {
        iters.add(sub.fork());
        Collections.shuffle(iters,r);
      }
      p.accept(j++);
      assertTrue(ns.remove(p.getFileStatus()));
    }
  }
  assertTrue(ns.isEmpty());
}
