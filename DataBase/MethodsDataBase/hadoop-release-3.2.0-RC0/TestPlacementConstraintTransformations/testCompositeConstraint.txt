@Test public void testCompositeConstraint(){
  AbstractConstraint constraintExpr=or(targetIn(RACK,allocationTag("spark")),maxCardinality(NODE,3),targetCardinality(RACK,2,10,allocationTag("zk")));
  Assert.assertTrue(constraintExpr instanceof Or);
  PlacementConstraint constraint=PlacementConstraints.build(constraintExpr);
  Or orExpr=(Or)constraintExpr;
  for (  AbstractConstraint child : orExpr.getChildren()) {
    Assert.assertTrue(child instanceof SingleConstraint);
  }
  SpecializedConstraintTransformer specTransformer=new SpecializedConstraintTransformer(constraint);
  PlacementConstraint specConstraint=specTransformer.transform();
  Or specOrExpr=(Or)specConstraint.getConstraintExpr();
  List<AbstractConstraint> specChildren=specOrExpr.getChildren();
  Assert.assertEquals(3,specChildren.size());
  Assert.assertTrue(specChildren.get(0) instanceof TargetConstraint);
  Assert.assertTrue(specChildren.get(1) instanceof SingleConstraint);
  Assert.assertTrue(specChildren.get(2) instanceof SingleConstraint);
  SingleConstraintTransformer singleTransformer=new SingleConstraintTransformer(specConstraint);
  PlacementConstraint simConstraint=singleTransformer.transform();
  Assert.assertTrue(simConstraint.getConstraintExpr() instanceof Or);
  Or simOrExpr=(Or)specConstraint.getConstraintExpr();
  for (  AbstractConstraint child : simOrExpr.getChildren()) {
    Assert.assertTrue(child instanceof SingleConstraint);
  }
}
