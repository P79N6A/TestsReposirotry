@Test public void testBlacklistNodes() throws Exception {
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  final int GB=1024;
  String host="127.0.0.1";
  RMNode node=MockNodes.newNodeInfo(1,Resources.createResource(16 * GB,16),0,host);
  NodeAddedSchedulerEvent nodeEvent=new NodeAddedSchedulerEvent(node);
  NodeUpdateSchedulerEvent updateEvent=new NodeUpdateSchedulerEvent(node);
  scheduler.handle(nodeEvent);
  ApplicationAttemptId appAttemptId=createSchedulingRequest(GB,"root.default","user",1);
  FSAppAttempt app=scheduler.getSchedulerApp(appAttemptId);
  scheduler.allocate(appAttemptId,Collections.<ResourceRequest>emptyList(),null,Collections.<ContainerId>emptyList(),Collections.singletonList(host),null,NULL_UPDATE_REQUESTS);
  assertTrue(app.isPlaceBlacklisted(host));
  scheduler.allocate(appAttemptId,Collections.<ResourceRequest>emptyList(),null,Collections.<ContainerId>emptyList(),null,Collections.singletonList(host),NULL_UPDATE_REQUESTS);
  assertFalse(scheduler.getSchedulerApp(appAttemptId).isPlaceBlacklisted(host));
  List<ResourceRequest> update=Arrays.asList(createResourceRequest(GB,node.getHostName(),1,0,true));
  scheduler.allocate(appAttemptId,update,null,Collections.<ContainerId>emptyList(),Collections.singletonList(host),null,NULL_UPDATE_REQUESTS);
  assertTrue(app.isPlaceBlacklisted(host));
  scheduler.update();
  scheduler.handle(updateEvent);
  assertEquals("Incorrect number of containers allocated",0,app.getLiveContainers().size());
  scheduler.allocate(appAttemptId,update,null,Collections.<ContainerId>emptyList(),null,Collections.singletonList(host),NULL_UPDATE_REQUESTS);
  assertFalse(app.isPlaceBlacklisted(host));
  createSchedulingRequest(GB,"root.default","user",1);
  scheduler.update();
  scheduler.handle(updateEvent);
  assertEquals("Incorrect number of containers allocated",1,app.getLiveContainers().size());
}
