@Test public void testQueueMaximumCapacityAllocations() throws IOException {
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  int tooHighQueueAllocation=RM_SCHEDULER_MAXIMUM_ALLOCATION_MB_VALUE + 1;
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("  <queue name=\"queueA\">");
  out.println("   <maxContainerAllocation>512 mb 1 vcores</maxContainerAllocation>");
  out.println("  </queue>");
  out.println("  <queue name=\"queueB\">");
  out.println("  </queue>");
  out.println("  <queue name=\"queueC\">");
  out.println("   <maxContainerAllocation>2048 mb 3 vcores</maxContainerAllocation>");
  out.println("    <queue name=\"queueD\">");
  out.println("    </queue>");
  out.println("  </queue>");
  out.println("  <queue name=\"queueE\">");
  out.println("    <maxContainerAllocation>" + tooHighQueueAllocation + " mb 1 vcores</maxContainerAllocation>");
  out.println("  </queue>");
  out.println("</allocations>");
  out.close();
  scheduler.init(conf);
  Assert.assertEquals(1,scheduler.getMaximumResourceCapability("root.queueA").getVirtualCores());
  Assert.assertEquals(512,scheduler.getMaximumResourceCapability("root.queueA").getMemorySize());
  Assert.assertEquals(DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,scheduler.getMaximumResourceCapability("root.queueB").getVirtualCores());
  Assert.assertEquals(RM_SCHEDULER_MAXIMUM_ALLOCATION_MB_VALUE,scheduler.getMaximumResourceCapability("root.queueB").getMemorySize());
  Assert.assertEquals(3,scheduler.getMaximumResourceCapability("root.queueC").getVirtualCores());
  Assert.assertEquals(2048,scheduler.getMaximumResourceCapability("root.queueC").getMemorySize());
  Assert.assertEquals(3,scheduler.getMaximumResourceCapability("root.queueC.queueD").getVirtualCores());
  Assert.assertEquals(2048,scheduler.getMaximumResourceCapability("root.queueC.queueD").getMemorySize());
  Assert.assertEquals(RM_SCHEDULER_MAXIMUM_ALLOCATION_MB_VALUE,scheduler.getMaximumResourceCapability("root.queueE").getMemorySize());
}
