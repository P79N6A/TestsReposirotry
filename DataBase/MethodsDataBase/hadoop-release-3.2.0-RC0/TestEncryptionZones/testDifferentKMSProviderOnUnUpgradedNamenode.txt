/** 
 * This test makes sure the client trusts its local conf This test assumes the client is upgraded but the namenode is not.
 * @throws Exception
 */
@Test public void testDifferentKMSProviderOnUnUpgradedNamenode() throws Exception {
  Configuration clusterConf=cluster.getConfiguration(0);
  URI namenodeKeyProviderUri=URI.create(getKeyProviderURI());
  URI clientKeyProviderUri=cluster.getFileSystem().getClient().getKeyProviderUri();
  Assert.assertNotNull(clientKeyProviderUri);
  Assert.assertEquals("Key Provider for client and namenode are different",namenodeKeyProviderUri,clientKeyProviderUri);
  String dummyKeyProviderUri="dummy://foo:bar@test_provider";
  clusterConf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH,dummyKeyProviderUri);
  FsServerDefaults spyServerDefaults=getTestServerDefaults(null);
  DFSClient spyClient=Mockito.spy(cluster.getFileSystem().getClient());
  Mockito.doReturn(spyServerDefaults).when(spyClient).getServerDefaults();
  clientKeyProviderUri=spyClient.getKeyProviderUri();
  Assert.assertEquals("Client keyProvider should be " + dummyKeyProviderUri,dummyKeyProviderUri,clientKeyProviderUri.toString());
  Mockito.verify(spyClient,Mockito.times(1)).getServerDefaults();
}
