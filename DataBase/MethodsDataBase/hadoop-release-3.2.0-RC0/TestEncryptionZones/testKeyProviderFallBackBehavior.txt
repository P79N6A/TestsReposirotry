/** 
 * Testing the fallback behavior of keyProviderUri. This test tests first the key provider uri is used from conf and then used from serverDefaults.
 * @throws IOException
 */
@Test public void testKeyProviderFallBackBehavior() throws IOException {
  Configuration clusterConf=cluster.getConfiguration(0);
  String dummyKeyProviderUri1="dummy://foo:bar@test_provider1";
  clusterConf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH,dummyKeyProviderUri1);
  DFSClient mockClient=Mockito.spy(cluster.getFileSystem().getClient());
  FsServerDefaults serverDefaultsWithKeyProviderNull=getTestServerDefaults(null);
  Mockito.doReturn(serverDefaultsWithKeyProviderNull).when(mockClient).getServerDefaults();
  Assert.assertEquals("Key provider uri from client doesn't match with uri from conf",dummyKeyProviderUri1,mockClient.getKeyProviderUri().toString());
  Mockito.verify(mockClient,Mockito.times(1)).getServerDefaults();
  String dummyKeyProviderUri2="dummy://foo:bar@test_provider2";
  FsServerDefaults serverDefaultsWithDummyKeyProvider=getTestServerDefaults(dummyKeyProviderUri2);
  Mockito.doReturn(serverDefaultsWithDummyKeyProvider).when(mockClient).getServerDefaults();
  Assert.assertEquals("Key provider uri from client doesn't match with uri from namenode",dummyKeyProviderUri2,mockClient.getKeyProviderUri().toString());
  Mockito.verify(mockClient,Mockito.times(2)).getServerDefaults();
}
