/** 
 * This test returns mocked kms token when {@link WebHdfsFileSystem#addDelegationTokens(String,Credentials)} methodis called.
 * @throws Exception
 */
@Test public void addMockKmsToken() throws Exception {
  UserGroupInformation.createRemoteUser("JobTracker");
  WebHdfsFileSystem webfs=WebHdfsTestUtil.getWebHdfsFileSystem(conf,WebHdfsConstants.WEBHDFS_SCHEME);
  KeyProvider keyProvider=Mockito.mock(KeyProvider.class,withSettings().extraInterfaces(DelegationTokenExtension.class,CryptoExtension.class));
  Mockito.when(keyProvider.getConf()).thenReturn(conf);
  byte[] testIdentifier="Test identifier for delegation token".getBytes();
  Token testToken=new Token(testIdentifier,new byte[0],new Text("kms-dt"),new Text());
  Mockito.when(((DelegationTokenIssuer)keyProvider).getCanonicalServiceName()).thenReturn("service");
  Mockito.when(((DelegationTokenIssuer)keyProvider).getDelegationToken(anyString())).thenReturn(testToken);
  webfs.setTestProvider(keyProvider);
  Credentials creds=new Credentials();
  final Token<?>[] tokens=webfs.addDelegationTokens("JobTracker",creds);
  Assert.assertEquals(2,tokens.length);
  Assert.assertEquals(tokens[1],testToken);
  Assert.assertEquals(2,creds.numberOfTokens());
}
