/** 
 * This test performs encrypted read/write and picks up the key provider uri from the credentials and not the conf.
 * @throws Exception
 */
@Test public void testEncryptedReadWriteUsingDiffKeyProvider() throws Exception {
  final HdfsAdmin dfsAdmin=new HdfsAdmin(FileSystem.getDefaultUri(conf),conf);
  Configuration clusterConf=cluster.getConfiguration(0);
  clusterConf.unset(CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH);
  DFSClient client=cluster.getFileSystem().getClient();
  Credentials credentials=new Credentials();
  Text lookUpKey=HdfsKMSUtil.getKeyProviderMapKey(cluster.getFileSystem().getUri());
  credentials.addSecretKey(lookUpKey,DFSUtilClient.string2Bytes(getKeyProviderURI()));
  client.ugi.addCredentials(credentials);
  final Path baseFile=new Path("/base");
  final int len=8192;
  DFSTestUtil.createFile(fs,baseFile,len,(short)1,0xFEED);
  final Path zone=new Path("/zone");
  fs.mkdirs(zone);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  final Path encFile1=new Path(zone,"myfile");
  DFSTestUtil.createFile(fs,encFile1,len,(short)1,0xFEED);
  verifyFilesEqual(fs,baseFile,encFile1,len);
}
