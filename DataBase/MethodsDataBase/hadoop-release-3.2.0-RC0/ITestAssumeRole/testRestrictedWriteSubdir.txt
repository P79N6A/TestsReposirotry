/** 
 * Write successfully to the directory with full R/W access, fail to write or delete data elsewhere.
 */
@SuppressWarnings("StringConcatenationMissingWhitespace") @Test public void testRestrictedWriteSubdir() throws Throwable {
  describe("Attempt writing to paths where a role only has" + " write access to a subdir of the bucket");
  Path restrictedDir=methodPath();
  Path child=new Path(restrictedDir,"child");
  S3AFileSystem fs=getFileSystem();
  fs.delete(restrictedDir,true);
  Configuration conf=createAssumedRoleConfig();
  bindRolePolicyStatements(conf,STATEMENT_S3GUARD_CLIENT,statement(true,S3_ALL_BUCKETS,S3_ROOT_READ_OPERATIONS),STATEMENT_ALLOW_SSE_KMS_RW,new Statement(Effects.Allow).addActions(S3_ALL_OPERATIONS).addResources(directory(restrictedDir)));
  roleFS=(S3AFileSystem)restrictedDir.getFileSystem(conf);
  roleFS.getFileStatus(ROOT);
  roleFS.mkdirs(restrictedDir);
  assertIsDirectory(restrictedDir);
  touch(roleFS,child);
  assertIsFile(child);
  ContractTestUtils.assertDeleted(roleFS,child,true);
  ContractTestUtils.assertDeleted(roleFS,restrictedDir,true);
  roleFS.delete(restrictedDir,false);
  Path sibling=new Path(restrictedDir.toUri() + "sibling");
  touch(fs,sibling);
  assertTouchForbidden(roleFS,sibling);
  assertDeleteForbidden(roleFS,sibling);
}
