@Test public void testDomainIdTable() throws Exception {
  long l=System.currentTimeMillis();
  HBaseTimelineWriterImpl hbi=null;
  Configuration c1=util.getConfiguration();
  String clusterId="yarn-cluster";
  TimelineCollectorContext context=new TimelineCollectorContext(clusterId,null,null,null,null,null);
  TimelineDomain domain2;
  try {
    hbi=new HBaseTimelineWriterImpl();
    hbi.init(c1);
    domain2=new TimelineDomain();
    domain2.setCreatedTime(l);
    domain2.setDescription("domain-2");
    domain2.setId("domain-2");
    domain2.setModifiedTime(l);
    domain2.setOwner("owner1");
    domain2.setReaders("user1,user2 group1,group2");
    domain2.setWriters("writer1,writer2");
    hbi.write(context,domain2);
    hbi.flush();
  }
  finally {
    if (hbi != null) {
      hbi.close();
    }
  }
  Connection conn=ConnectionFactory.createConnection(c1);
  Table table1=conn.getTable(BaseTableRW.getTableName(c1,DomainTableRW.TABLE_NAME_CONF_NAME,DomainTableRW.DEFAULT_TABLE_NAME));
  byte[] startRow=new DomainRowKey(clusterId,domain2.getId()).getRowKey();
  Get g=new Get(startRow);
  Result result=table1.get(g);
  assertNotNull(result);
  assertTrue(!result.isEmpty());
  byte[] row=result.getRow();
  DomainRowKey domainRowKey=DomainRowKey.parseRowKey(row);
  assertEquals(domain2.getId(),domainRowKey.getDomainId());
  assertEquals(clusterId,domainRowKey.getClusterId());
  Long cTime=(Long)ColumnRWHelper.readResult(result,DomainColumn.CREATED_TIME);
  String description=(String)ColumnRWHelper.readResult(result,DomainColumn.DESCRIPTION);
  Long mTime=(Long)ColumnRWHelper.readResult(result,DomainColumn.MODIFICATION_TIME);
  String owners=(String)ColumnRWHelper.readResult(result,DomainColumn.OWNER);
  String readers=(String)ColumnRWHelper.readResult(result,DomainColumn.READERS);
  String writers=(String)ColumnRWHelper.readResult(result,DomainColumn.WRITERS);
  assertEquals(l,cTime.longValue());
  assertEquals(l,mTime.longValue());
  assertEquals("domain-2",description);
  assertEquals("owner1",owners);
  assertEquals("user1,user2 group1,group2",readers);
  assertEquals("writer1,writer2",writers);
}
