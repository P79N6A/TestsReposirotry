/** 
 * Test if  {@link BlockManager#computeInvalidateWork(int)}can schedule invalidate work correctly for both replicas and striped block groups, combined.
 */
@Test(timeout=120000) public void testComputeInvalidate() throws Exception {
  final int blockInvalidateLimit=bm.getDatanodeManager().getBlockInvalidateLimit();
  final Random random=new Random(System.currentTimeMillis());
  namesystem.writeLock();
  try {
    int nodeCount=ecPolicy.getNumDataUnits() + ecPolicy.getNumParityUnits();
    for (int i=0; i < nodeCount; i++) {
      for (int j=0; j < 3 * blockInvalidateLimit + 1; j++) {
        if (random.nextBoolean()) {
          Block stripedBlock=new Block(locatedStripedBlock.getBlock().getBlockId() + (i * 10 + j),stripesPerBlock * cellSize,locatedStripedBlock.getBlock().getGenerationStamp());
          bm.addToInvalidates(stripedBlock,nodes[i]);
        }
 else {
          Block replica=new Block(i * (blockInvalidateLimit + 1) + j,0,GenerationStamp.LAST_RESERVED_STAMP);
          bm.addToInvalidates(replica,nodes[i]);
        }
      }
    }
    verifyInvalidationWorkCounts(blockInvalidateLimit);
  }
  finally {
    namesystem.writeUnlock();
  }
}
