@Test public void testMountController() throws IOException {
  File parentDir=new File(tmpPath);
  File cgroup=new File(parentDir,controller.getName());
  assertTrue("cgroup dir should be cerated",cgroup.mkdirs());
  verifyZeroInteractions(privilegedOperationExecutorMock);
  File emptyMtab=createEmptyCgroups();
  try {
    CGroupsHandler cGroupsHandler=new CGroupsHandlerImpl(createMountConfiguration(),privilegedOperationExecutorMock,emptyMtab.getAbsolutePath());
    PrivilegedOperation expectedOp=new PrivilegedOperation(PrivilegedOperation.OperationType.MOUNT_CGROUPS);
    String controllerKV=controller.getName() + "=" + tmpPath+ Path.SEPARATOR+ controller.getName();
    expectedOp.appendArgs(hierarchy,controllerKV);
    cGroupsHandler.initializeCGroupController(controller);
    try {
      ArgumentCaptor<PrivilegedOperation> opCaptor=ArgumentCaptor.forClass(PrivilegedOperation.class);
      verify(privilegedOperationExecutorMock).executePrivilegedOperation(opCaptor.capture(),eq(false));
      Assert.assertEquals(expectedOp,opCaptor.getValue());
      verifyNoMoreInteractions(privilegedOperationExecutorMock);
      cGroupsHandler.initializeCGroupController(controller);
      verifyNoMoreInteractions(privilegedOperationExecutorMock);
    }
 catch (    PrivilegedOperationException e) {
      LOG.error("Caught exception: " + e);
      assertTrue("Unexpected PrivilegedOperationException from mock!",false);
    }
  }
 catch (  ResourceHandlerException e) {
    LOG.error("Caught exception: " + e);
    assertTrue("Unexpected ResourceHandler Exception!",false);
  }
}
