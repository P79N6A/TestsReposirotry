@Test public void testCGroupOperations() throws IOException {
  verifyZeroInteractions(privilegedOperationExecutorMock);
  CGroupsHandler cGroupsHandler=null;
  File mtab=createEmptyCgroups();
  assertTrue("Sample subsystem should be created",new File(controllerPath).mkdirs());
  try {
    cGroupsHandler=new CGroupsHandlerImpl(createMountConfiguration(),privilegedOperationExecutorMock,mtab.getAbsolutePath());
    cGroupsHandler.initializeCGroupController(controller);
  }
 catch (  ResourceHandlerException e) {
    LOG.error("Caught exception: " + e);
    assertTrue("Unexpected ResourceHandlerException when mounting controller!",false);
  }
  String testCGroup="container_01";
  String expectedPath=controllerPath + Path.SEPARATOR + testCGroup;
  try {
    String path=cGroupsHandler.createCGroup(controller,testCGroup);
    assertTrue(new File(expectedPath).exists());
    Assert.assertEquals(expectedPath,path);
    String param="test_param";
    String paramValue="test_param_value";
    cGroupsHandler.updateCGroupParam(controller,testCGroup,param,paramValue);
    String paramPath=expectedPath + Path.SEPARATOR + controller.getName()+ "."+ param;
    File paramFile=new File(paramPath);
    assertTrue(paramFile.exists());
    try {
      Assert.assertEquals(paramValue,new String(Files.readAllBytes(paramFile.toPath())));
    }
 catch (    IOException e) {
      LOG.error("Caught exception: " + e);
      Assert.fail("Unexpected IOException trying to read cgroup param!");
    }
    Assert.assertEquals(paramValue,cGroupsHandler.getCGroupParam(controller,testCGroup,param));
  }
 catch (  ResourceHandlerException e) {
    LOG.error("Caught exception: " + e);
    Assert.fail("Unexpected ResourceHandlerException during cgroup operations!");
  }
}
