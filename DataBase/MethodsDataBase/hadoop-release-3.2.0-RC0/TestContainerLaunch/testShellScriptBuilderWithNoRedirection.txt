/** 
 * Test that script exists with non-zero exit code when command fails.
 * @throws IOException
 */
@Test public void testShellScriptBuilderWithNoRedirection() throws IOException {
  ShellScriptBuilder builder=ShellScriptBuilder.create();
  Path logDir=new Path(localLogDir.getAbsolutePath());
  File stdout=new File(logDir.toString(),ContainerLaunch.CONTAINER_PRE_LAUNCH_STDOUT);
  File stderr=new File(logDir.toString(),ContainerLaunch.CONTAINER_PRE_LAUNCH_STDERR);
  String TEST_STDOUT_ECHO="Test stdout redirection";
  builder.echo(TEST_STDOUT_ECHO);
  builder.mkdir(new Path("/invalidSrcDir"));
  builder.command(Arrays.asList(new String[]{"unknownCommand"}));
  File shellFile=Shell.appendScriptExtension(tmpDir,"testShellScriptBuilderStdOutandErrRedirection");
  PrintStream writer=new PrintStream(new FileOutputStream(shellFile));
  builder.write(writer);
  writer.close();
  try {
    FileUtil.setExecutable(shellFile,true);
    Shell.ShellCommandExecutor shexc=new Shell.ShellCommandExecutor(new String[]{shellFile.getAbsolutePath()},tmpDir);
    try {
      shexc.execute();
      fail("builder shell command was expected to throw");
    }
 catch (    IOException e) {
      System.out.println("Received an expected exception: " + e.getMessage());
      Assert.assertEquals(false,stdout.exists());
      Assert.assertEquals(false,stderr.exists());
    }
  }
  finally {
    FileUtil.fullyDelete(shellFile);
  }
}
