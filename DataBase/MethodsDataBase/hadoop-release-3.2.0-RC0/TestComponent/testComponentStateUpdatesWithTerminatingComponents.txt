@Test public void testComponentStateUpdatesWithTerminatingComponents() throws Exception {
  final String serviceName="testComponentStateUpdatesWithTerminatingComponents";
  Service testService=ServiceTestUtils.createTerminatingJobExample(serviceName);
  TestServiceManager.createDef(serviceName,testService);
  ServiceContext context=new MockRunningServiceContext(rule,testService);
  for (  Component comp : context.scheduler.getAllComponents().values()) {
    Iterator<ComponentInstance> instanceIter=comp.getAllComponentInstances().iterator();
    while (instanceIter.hasNext()) {
      ComponentInstance componentInstance=instanceIter.next();
      Container instanceContainer=componentInstance.getContainer();
      ContainerStatus containerStatus=ContainerStatus.newInstance(instanceContainer.getId(),org.apache.hadoop.yarn.api.records.ContainerState.COMPLETE,"successful",0);
      comp.handle(new ComponentEvent(comp.getName(),ComponentEventType.CONTAINER_COMPLETED).setStatus(containerStatus).setContainerId(instanceContainer.getId()));
      componentInstance.handle(new ComponentInstanceEvent(componentInstance.getContainer().getId(),ComponentInstanceEventType.STOP).setStatus(containerStatus));
    }
    ComponentState componentState=comp.getComponentSpec().getState();
    Assert.assertEquals(ComponentState.SUCCEEDED,componentState);
  }
  ServiceState serviceState=testService.getState();
  Assert.assertEquals(ServiceState.SUCCEEDED,serviceState);
}
