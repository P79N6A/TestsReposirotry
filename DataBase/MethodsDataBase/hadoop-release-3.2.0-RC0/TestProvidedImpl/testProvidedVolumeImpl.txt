@Test public void testProvidedVolumeImpl() throws IOException {
  assertEquals(NUM_LOCAL_INIT_VOLUMES + NUM_PROVIDED_INIT_VOLUMES,getNumVolumes());
  assertEquals(NUM_PROVIDED_INIT_VOLUMES,providedVolumes.size());
  assertEquals(0,dataset.getNumFailedVolumes());
  for (int i=0; i < providedVolumes.size(); i++) {
    assertEquals(DFSConfigKeys.DFS_PROVIDER_STORAGEUUID_DEFAULT,providedVolumes.get(i).getStorageID());
    assertEquals(StorageType.PROVIDED,providedVolumes.get(i).getStorageType());
    long space=providedVolumes.get(i).getBlockPoolUsed(BLOCK_POOL_IDS[CHOSEN_BP_ID]);
    assertEquals(spaceUsed,space);
    assertEquals(NUM_PROVIDED_BLKS,providedVolumes.get(i).getNumBlocks());
    providedVolumes.get(i).shutdownBlockPool(BLOCK_POOL_IDS[1 - CHOSEN_BP_ID],null);
    try {
      assertEquals(0,providedVolumes.get(i).getBlockPoolUsed(BLOCK_POOL_IDS[1 - CHOSEN_BP_ID]));
      assertTrue(false);
    }
 catch (    IOException e) {
      LOG.info("Expected exception: " + e);
    }
  }
}
