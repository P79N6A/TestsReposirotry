@Test public void testProvidedReplicaSuffixExtraction(){
  assertEquals("B.txt",ProvidedVolumeImpl.getSuffix(new Path("file:///A/"),new Path("file:///A/B.txt")));
  assertEquals("B/C.txt",ProvidedVolumeImpl.getSuffix(new Path("file:///A/"),new Path("file:///A/B/C.txt")));
  assertEquals("B/C/D.txt",ProvidedVolumeImpl.getSuffix(new Path("file:///A/"),new Path("file:///A/B/C/D.txt")));
  assertEquals("D.txt",ProvidedVolumeImpl.getSuffix(new Path("file:///A/B/C/"),new Path("file:///A/B/C/D.txt")));
  assertEquals("file:/A/B/C/D.txt",ProvidedVolumeImpl.getSuffix(new Path("file:///X/B/C/"),new Path("file:///A/B/C/D.txt")));
  assertEquals("D.txt",ProvidedVolumeImpl.getSuffix(new Path("/A/B/C"),new Path("/A/B/C/D.txt")));
  assertEquals("D.txt",ProvidedVolumeImpl.getSuffix(new Path("/A/B/C/"),new Path("/A/B/C/D.txt")));
  assertEquals("data/current.csv",ProvidedVolumeImpl.getSuffix(new Path("wasb:///users/alice/"),new Path("wasb:///users/alice/data/current.csv")));
  assertEquals("current.csv",ProvidedVolumeImpl.getSuffix(new Path("wasb:///users/alice/data"),new Path("wasb:///users/alice/data/current.csv")));
  assertEquals("wasb:/users/alice/data/current.csv",ProvidedVolumeImpl.getSuffix(new Path("wasb:///users/bob/"),new Path("wasb:///users/alice/data/current.csv")));
}
