@Test public void testRemoveAcl() throws IOException {
  FileSystem.mkdirs(fs,path,FsPermission.createImmutable((short)0750));
  List<AclEntry> aclSpec=Lists.newArrayList(aclEntry(ACCESS,USER,ALL),aclEntry(ACCESS,USER,"foo",ALL),aclEntry(ACCESS,GROUP,READ_EXECUTE),aclEntry(ACCESS,OTHER,NONE),aclEntry(DEFAULT,USER,"foo",ALL));
  fs.setAcl(path,aclSpec);
  Assert.assertTrue(path + " should have ACLs in FileStatus!",fs.getFileStatus(path).hasAcl());
  Assert.assertTrue(path + " should have ACLs in FileStatus#toString()!",fs.getFileStatus(path).toString().contains("hasAcl=true"));
  fs.removeAcl(path);
  Assert.assertFalse(path + " should not have ACLs in FileStatus!",fs.getFileStatus(path).hasAcl());
  Assert.assertTrue(path + " should not have ACLs in FileStatus#toString()!",fs.getFileStatus(path).toString().contains("hasAcl=false"));
  AclStatus s=fs.getAclStatus(path);
  AclEntry[] returned=s.getEntries().toArray(new AclEntry[0]);
  assertArrayEquals(new AclEntry[]{},returned);
  assertPermission((short)0750);
  assertAclFeature(false);
}
