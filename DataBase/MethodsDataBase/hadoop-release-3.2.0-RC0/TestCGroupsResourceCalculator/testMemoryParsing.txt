@Test public void testMemoryParsing() throws Exception {
  File cgcpuacctDir=new File(basePath + "/cgcpuacct");
  File cgcpuacctContainerDir=new File(cgcpuacctDir,"/yarn/container_1");
  File cgmemoryDir=new File(basePath + "/memory");
  File cgMemoryContainerDir=new File(cgmemoryDir,"/yarn/container_1");
  File procfs=new File(basePath + "/1234");
  when(cGroupsHandler.getControllerPath(CGroupsHandler.CGroupController.MEMORY)).thenReturn(cgmemoryDir.getAbsolutePath());
  Assert.assertTrue("Setup error",procfs.mkdirs());
  Assert.assertTrue("Setup error",cgcpuacctContainerDir.mkdirs());
  Assert.assertTrue("Setup error",cgMemoryContainerDir.mkdirs());
  try {
    FileUtils.writeStringToFile(new File(procfs,CGroupsResourceCalculator.CGROUP),"6:cpuacct,cpu:/yarn/container_1\n" + "4:memory:/yarn/container_1\n",StandardCharsets.UTF_8);
    FileUtils.writeStringToFile(new File(cgMemoryContainerDir,CGroupsResourceCalculator.MEM_STAT),"418496512\n",StandardCharsets.UTF_8);
    CGroupsResourceCalculator calculator=new CGroupsResourceCalculator("1234",basePath,cGroupsHandler,clock,10);
    calculator.setCGroupFilePaths();
    calculator.updateProcessTree();
    Assert.assertEquals("Incorrect memory usage",418496512,calculator.getRssMemorySize());
    Assert.assertEquals("Incorrect swap usage",(long)ResourceCalculatorProcessTree.UNAVAILABLE,calculator.getVirtualMemorySize());
    FileUtils.writeStringToFile(new File(cgMemoryContainerDir,CGroupsResourceCalculator.MEMSW_STAT),"418496513\n",StandardCharsets.UTF_8);
    calculator.updateProcessTree();
    Assert.assertEquals("Incorrect swap usage",418496513,calculator.getVirtualMemorySize());
  }
  finally {
    FileUtils.deleteDirectory(new File(basePath));
  }
}
