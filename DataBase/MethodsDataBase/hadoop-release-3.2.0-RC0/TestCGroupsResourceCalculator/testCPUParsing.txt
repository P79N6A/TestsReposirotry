@Test public void testCPUParsing() throws Exception {
  File cgcpuacctDir=new File(basePath + "/cgcpuacct");
  File cgcpuacctContainerDir=new File(cgcpuacctDir,"/yarn/container_1");
  File procfs=new File(basePath + "/1234");
  when(cGroupsHandler.getControllerPath(CGroupsHandler.CGroupController.CPUACCT)).thenReturn(cgcpuacctDir.getAbsolutePath());
  Assert.assertTrue("Setup error",procfs.mkdirs());
  Assert.assertTrue("Setup error",cgcpuacctContainerDir.mkdirs());
  try {
    FileUtils.writeStringToFile(new File(procfs,CGroupsResourceCalculator.CGROUP),"7:devices:/yarn/container_1\n" + "6:cpuacct,cpu:/yarn/container_1\n" + "5:pids:/yarn/container_1\n"+ "4:memory:/yarn/container_1\n",StandardCharsets.UTF_8);
    FileUtils.writeStringToFile(new File(cgcpuacctContainerDir,CGroupsResourceCalculator.CPU_STAT),"Can you handle this?\n" + "user 5415\n" + "system 3632",StandardCharsets.UTF_8);
    CGroupsResourceCalculator calculator=new CGroupsResourceCalculator("1234",basePath,cGroupsHandler,clock,10);
    calculator.setCGroupFilePaths();
    calculator.updateProcessTree();
    Assert.assertEquals("Incorrect CPU usage",90470,calculator.getCumulativeCpuTime());
  }
  finally {
    FileUtils.deleteDirectory(new File(basePath));
  }
}
