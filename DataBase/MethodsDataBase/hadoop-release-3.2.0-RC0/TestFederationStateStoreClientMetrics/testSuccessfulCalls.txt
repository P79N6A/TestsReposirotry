@Test public void testSuccessfulCalls(){
  LOG.info("Test: Aggregate and method successful calls updated correctly");
  long totalGoodBefore=FederationStateStoreClientMetrics.getNumSucceededCalls();
  long apiGoodBefore=FederationStateStoreClientMetrics.getNumSucceessfulCallsForMethod("registerSubCluster");
  goodStateStore.registerSubCluster(100);
  Assert.assertEquals(totalGoodBefore + 1,FederationStateStoreClientMetrics.getNumSucceededCalls());
  Assert.assertEquals(100,FederationStateStoreClientMetrics.getLatencySucceededCalls(),0);
  Assert.assertEquals(apiGoodBefore + 1,FederationStateStoreClientMetrics.getNumSucceededCalls());
  Assert.assertEquals(100,FederationStateStoreClientMetrics.getLatencySucceessfulCallsForMethod("registerSubCluster"),0);
  LOG.info("Test: Running stats correctly calculated for 2 metrics");
  goodStateStore.registerSubCluster(200);
  Assert.assertEquals(totalGoodBefore + 2,FederationStateStoreClientMetrics.getNumSucceededCalls());
  Assert.assertEquals(150,FederationStateStoreClientMetrics.getLatencySucceededCalls(),0);
  Assert.assertEquals(apiGoodBefore + 2,FederationStateStoreClientMetrics.getNumSucceededCalls());
  Assert.assertEquals(150,FederationStateStoreClientMetrics.getLatencySucceessfulCallsForMethod("registerSubCluster"),0);
}
