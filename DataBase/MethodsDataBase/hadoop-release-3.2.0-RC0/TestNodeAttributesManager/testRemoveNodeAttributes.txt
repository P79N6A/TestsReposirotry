@Test public void testRemoveNodeAttributes() throws IOException {
  Map<String,Set<NodeAttribute>> toAddAttributes=new HashMap<>();
  Map<String,Set<NodeAttribute>> toRemoveAttributes=new HashMap<>();
  Set<NodeAttribute> allAttributesPerPrefix=new HashSet<>();
  Map<NodeAttribute,AttributeValue> nodeAttributes;
  Set<NodeAttribute> host1set=new HashSet<>();
  Set<NodeAttribute> host1set1=createAttributesForTest(PREFIXES[0],3,"A","host1_v1");
  Set<NodeAttribute> host1set2=createAttributesForTest(PREFIXES[1],5,"B","host1_v1");
  host1set.addAll(host1set1);
  host1set.addAll(host1set2);
  Set<NodeAttribute> host2set=new HashSet<>();
  Set<NodeAttribute> host2set1=createAttributesForTest(PREFIXES[0],2,"A","host2_v1");
  Set<NodeAttribute> host2set2=createAttributesForTest(PREFIXES[2],2,"C","host2_v3");
  host2set.addAll(host2set1);
  host2set.addAll(host2set2);
  toAddAttributes.put(HOSTNAMES[0],host1set);
  toAddAttributes.put(HOSTNAMES[1],host2set);
  attributesManager.addNodeAttributes(toAddAttributes);
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(8,nodeAttributes.size());
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[1]);
  Assert.assertEquals(4,nodeAttributes.size());
  allAttributesPerPrefix=attributesManager.getClusterNodeAttributes(Sets.newHashSet(PREFIXES[0]));
  Assert.assertEquals(3,allAttributesPerPrefix.size());
  allAttributesPerPrefix=attributesManager.getClusterNodeAttributes(Sets.newHashSet(PREFIXES[1]));
  Assert.assertEquals(5,allAttributesPerPrefix.size());
  allAttributesPerPrefix=attributesManager.getClusterNodeAttributes(Sets.newHashSet(PREFIXES[2]));
  Assert.assertEquals(2,allAttributesPerPrefix.size());
  Set<NodeAttribute> attributes2rm1=new HashSet<>();
  attributes2rm1.add(NodeAttribute.newInstance(PREFIXES[0],"A_2",NodeAttributeType.STRING,"anyValue"));
  toRemoveAttributes.put(HOSTNAMES[0],attributes2rm1);
  attributesManager.removeNodeAttributes(toRemoveAttributes);
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(7,nodeAttributes.size());
  attributes2rm1.clear();
  toRemoveAttributes.clear();
  attributes2rm1.add(NodeAttribute.newInstance(PREFIXES[0],"non_exist_name",NodeAttributeType.STRING,"anyValue"));
  toRemoveAttributes.put(HOSTNAMES[0],attributes2rm1);
  attributesManager.removeNodeAttributes(toRemoveAttributes);
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(7,nodeAttributes.size());
  Set<NodeAttribute> attributes2rm2=new HashSet<>();
  attributes2rm2.add(NodeAttribute.newInstance(PREFIXES[0],"A_2",NodeAttributeType.STRING,"anyValue"));
  toRemoveAttributes.clear();
  toRemoveAttributes.put(HOSTNAMES[1],attributes2rm2);
  attributesManager.removeNodeAttributes(toRemoveAttributes);
  allAttributesPerPrefix=attributesManager.getClusterNodeAttributes(Sets.newHashSet(PREFIXES[0]));
  Assert.assertEquals(2,allAttributesPerPrefix.size());
}
