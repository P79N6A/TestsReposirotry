@Test public void testReplaceNodeAttributes() throws IOException {
  Map<String,Set<NodeAttribute>> toAddAttributes=new HashMap<>();
  Map<String,Set<NodeAttribute>> toReplaceMap=new HashMap<>();
  Map<NodeAttribute,AttributeValue> nodeAttributes;
  Set<NodeAttribute> filteredAttributes;
  Set<NodeAttribute> clusterAttributes;
  toAddAttributes.put(HOSTNAMES[0],createAttributesForTest(PREFIXES[0],3,"A","host1_v1"));
  attributesManager.addNodeAttributes(toAddAttributes);
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(3,nodeAttributes.size());
  toAddAttributes.clear();
  toAddAttributes.put(HOSTNAMES[0],createAttributesForTest(NodeAttribute.PREFIX_DISTRIBUTED,10,"dist-node-attribute","dist_v1"));
  attributesManager.addNodeAttributes(toAddAttributes);
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(13,nodeAttributes.size());
  clusterAttributes=attributesManager.getClusterNodeAttributes(Sets.newHashSet(NodeAttribute.PREFIX_DISTRIBUTED,PREFIXES[0]));
  Assert.assertEquals(13,clusterAttributes.size());
  Set<NodeAttribute> toReplaceAttributes=createAttributesForTest(NodeAttribute.PREFIX_DISTRIBUTED,5,"dist-node-attribute","dist_v2");
  attributesManager.replaceNodeAttributes(NodeAttribute.PREFIX_DISTRIBUTED,ImmutableMap.of(HOSTNAMES[0],toReplaceAttributes));
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(8,nodeAttributes.size());
  clusterAttributes=attributesManager.getClusterNodeAttributes(Sets.newHashSet(NodeAttribute.PREFIX_DISTRIBUTED,PREFIXES[0]));
  Assert.assertEquals(8,clusterAttributes.size());
  filteredAttributes=NodeLabelUtil.filterAttributesByPrefix(nodeAttributes.keySet(),NodeAttribute.PREFIX_DISTRIBUTED);
  Assert.assertEquals(5,filteredAttributes.size());
  Assert.assertTrue(filteredAttributes.stream().allMatch(nodeAttribute -> nodeAttribute.getAttributeValue().startsWith("dist_v2")));
  filteredAttributes=NodeLabelUtil.filterAttributesByPrefix(nodeAttributes.keySet(),PREFIXES[0]);
  Assert.assertEquals(3,filteredAttributes.size());
  toReplaceAttributes=createAttributesForTest(NodeAttribute.PREFIX_DISTRIBUTED,1,"dist-node-attribute-v2","dist_v3");
  attributesManager.replaceNodeAttributes(NodeAttribute.PREFIX_DISTRIBUTED,ImmutableMap.of(HOSTNAMES[0],toReplaceAttributes));
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(4,nodeAttributes.size());
  clusterAttributes=attributesManager.getClusterNodeAttributes(Sets.newHashSet(NodeAttribute.PREFIX_DISTRIBUTED));
  Assert.assertEquals(1,clusterAttributes.size());
  NodeAttribute attr=clusterAttributes.iterator().next();
  Assert.assertEquals("dist-node-attribute-v2_0",attr.getAttributeKey().getAttributeName());
  Assert.assertEquals(NodeAttribute.PREFIX_DISTRIBUTED,attr.getAttributeKey().getAttributePrefix());
  Assert.assertEquals("dist_v3_0",attr.getAttributeValue());
  toReplaceMap.put(HOSTNAMES[0],createAttributesForTest(PREFIXES[1],2,"B","B_v1"));
  attributesManager.replaceNodeAttributes(null,toReplaceMap);
  nodeAttributes=attributesManager.getAttributesForNode(HOSTNAMES[0]);
  Assert.assertEquals(2,nodeAttributes.size());
  clusterAttributes=attributesManager.getClusterNodeAttributes(Sets.newHashSet(PREFIXES[1]));
  Assert.assertEquals(2,clusterAttributes.size());
  clusterAttributes=attributesManager.getClusterNodeAttributes(Sets.newHashSet(NodeAttribute.PREFIX_DISTRIBUTED));
  Assert.assertEquals(0,clusterAttributes.size());
}
