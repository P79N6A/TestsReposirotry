@Test public void testSetSafeMode() throws Exception {
  FSNamesystem fsNamesystem=spy(cluster.getNamesystem());
  when(fsNamesystem.isExternalInvocation()).thenReturn(true);
  Server.Call call=spy(new Server.Call(1,1,null,null,RPC.RpcKind.RPC_BUILTIN,new byte[]{1,2,3}));
  when(call.getRemoteUser()).thenReturn(UserGroupInformation.createRemoteUser(System.getProperty("user.name")));
  Server.getCurCall().set(call);
  verifySuccessfulSetSafeMode(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_ENTER);
  verifySuccessfulSetSafeMode(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_GET);
  verifySuccessfulSetSafeMode(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_LEAVE);
  verifySuccessfulSetSafeMode(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_FORCE_EXIT);
  String auditLogString;
  auditLogString=".*allowed=true.*cmd=safemode_get.*";
  fsNamesystem.setSafeMode(HdfsConstants.SafeModeAction.SAFEMODE_GET);
  verifyAuditLogs(auditLogString);
  auditLogString=".*allowed=true.*cmd=safemode_leave.*";
  fsNamesystem.setSafeMode(HdfsConstants.SafeModeAction.SAFEMODE_LEAVE);
  verifyAuditLogs(auditLogString);
  auditLogString=".*allowed=true.*cmd=safemode_force_exit.*";
  fsNamesystem.setSafeMode(HdfsConstants.SafeModeAction.SAFEMODE_FORCE_EXIT);
  verifyAuditLogs(auditLogString);
  when(call.getRemoteUser()).thenReturn(UserGroupInformation.createRemoteUser("theDoctor"));
  verifySafeModeAction(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_ENTER);
  verifySafeModeAction(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_LEAVE);
  verifySafeModeAction(fsNamesystem,HdfsConstants.SafeModeAction.SAFEMODE_FORCE_EXIT);
  when(call.getRemoteUser()).thenReturn(UserGroupInformation.createRemoteUser(System.getProperty("user.name")));
}
