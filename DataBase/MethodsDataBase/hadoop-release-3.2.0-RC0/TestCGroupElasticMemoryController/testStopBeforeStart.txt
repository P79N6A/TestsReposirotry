/** 
 * Test the scenario that the controller is stopped before. the child process starts
 * @throws Exception one exception
 */
@Test(timeout=20000) public void testStopBeforeStart() throws Exception {
  conf.set(YarnConfiguration.NM_ELASTIC_MEMORY_CONTROL_OOM_LISTENER_PATH,script.getAbsolutePath());
  try {
    FileUtils.writeStringToFile(script,"#!/bin/bash\nprintf oomevent;printf oomevent;\n",Charset.defaultCharset(),false);
    assertTrue("Could not set executable",script.setExecutable(true));
    CGroupsHandler cgroups=mock(CGroupsHandler.class);
    when(cgroups.getPathForCGroup(any(),any())).thenReturn("");
    when(cgroups.getCGroupParam(any(),any(),any())).thenReturn("under_oom 0");
    Runnable handler=mock(Runnable.class);
    doNothing().when(handler).run();
    CGroupElasticMemoryController controller=new CGroupElasticMemoryController(conf,null,cgroups,true,false,10000,handler);
    controller.stopListening();
    controller.run();
    verify(handler,times(0)).run();
  }
  finally {
    assertTrue(String.format("Could not clean up script %s",script.getAbsolutePath()),script.delete());
  }
}
