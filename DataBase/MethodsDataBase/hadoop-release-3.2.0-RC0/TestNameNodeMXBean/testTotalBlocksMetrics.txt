@Test public void testTotalBlocksMetrics() throws Exception {
  MiniDFSCluster cluster=null;
  FSNamesystem namesystem=null;
  DistributedFileSystem fs=null;
  try {
    Configuration conf=new HdfsConfiguration();
    int dataBlocks=StripedFileTestUtil.getDefaultECPolicy().getNumDataUnits();
    int parityBlocks=StripedFileTestUtil.getDefaultECPolicy().getNumParityUnits();
    int totalSize=dataBlocks + parityBlocks;
    int cellSize=StripedFileTestUtil.getDefaultECPolicy().getCellSize();
    int stripesPerBlock=2;
    int blockSize=stripesPerBlock * cellSize;
    conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,blockSize);
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(totalSize).build();
    namesystem=cluster.getNamesystem();
    fs=cluster.getFileSystem();
    fs.enableErasureCodingPolicy(StripedFileTestUtil.getDefaultECPolicy().getName());
    verifyTotalBlocksMetrics(0L,0L,namesystem.getTotalBlocks());
    Path replDirPath=new Path("/replicated");
    Path replFileSmall=new Path(replDirPath,"replfile_small");
    final short factor=3;
    DFSTestUtil.createFile(fs,replFileSmall,blockSize,factor,0);
    DFSTestUtil.waitReplication(fs,replFileSmall,factor);
    Path ecDirPath=new Path("/striped");
    fs.mkdir(ecDirPath,FsPermission.getDirDefault());
    fs.getClient().setErasureCodingPolicy(ecDirPath.toString(),StripedFileTestUtil.getDefaultECPolicy().getName());
    Path ecFileSmall=new Path(ecDirPath,"ecfile_small");
    final int smallLength=cellSize * dataBlocks;
    final byte[] smallBytes=StripedFileTestUtil.generateBytes(smallLength);
    DFSTestUtil.writeFile(fs,ecFileSmall,smallBytes);
    verifyTotalBlocksMetrics(1L,1L,namesystem.getTotalBlocks());
    Path replFileLarge=new Path(replDirPath,"replfile_large");
    DFSTestUtil.createFile(fs,replFileLarge,2 * blockSize,factor,0);
    DFSTestUtil.waitReplication(fs,replFileLarge,factor);
    Path ecFileLarge=new Path(ecDirPath,"ecfile_large");
    final int largeLength=blockSize * totalSize + smallLength;
    final byte[] largeBytes=StripedFileTestUtil.generateBytes(largeLength);
    DFSTestUtil.writeFile(fs,ecFileLarge,largeBytes);
    verifyTotalBlocksMetrics(3L,3L,namesystem.getTotalBlocks());
    fs.delete(replDirPath,true);
    verifyTotalBlocksMetrics(0L,3L,namesystem.getTotalBlocks());
    fs.delete(ecDirPath,true);
    verifyTotalBlocksMetrics(0L,0L,namesystem.getTotalBlocks());
  }
  finally {
    if (fs != null) {
      try {
        fs.close();
      }
 catch (      Exception e) {
        throw e;
      }
    }
    if (namesystem != null) {
      try {
        namesystem.close();
      }
 catch (      Exception e) {
        throw e;
      }
    }
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
