@Test public void testNodeAttributeScriptProvider() throws IOException, InterruptedException {
  String simpleScript="echo NODE_ATTRIBUTE:host,STRING,host1234\n " + "echo NODE_ATTRIBUTE:os,STRING,redhat_6_3\n " + "echo NODE_ATTRIBUTE:ip,STRING,10.0.0.1";
  writeNodeAttributeScriptFile(simpleScript,true);
  nodeAttributesProvider.init(getConfForNodeAttributeScript());
  nodeAttributesProvider.start();
  try {
    GenericTestUtils.waitFor(() -> nodeAttributesProvider.getDescriptors().size() == 3,500,3000);
  }
 catch (  TimeoutException e) {
    Assert.fail("Expecting node attributes size is 3, but got " + nodeAttributesProvider.getDescriptors().size());
  }
  Iterator<NodeAttribute> it=nodeAttributesProvider.getDescriptors().iterator();
  while (it.hasNext()) {
    NodeAttribute att=it.next();
switch (att.getAttributeKey().getAttributeName()) {
case "host":
      Assert.assertEquals(NodeAttributeType.STRING,att.getAttributeType());
    Assert.assertEquals("host1234",att.getAttributeValue());
  break;
case "os":
Assert.assertEquals(NodeAttributeType.STRING,att.getAttributeType());
Assert.assertEquals("redhat_6_3",att.getAttributeValue());
break;
case "ip":
Assert.assertEquals(NodeAttributeType.STRING,att.getAttributeType());
Assert.assertEquals("10.0.0.1",att.getAttributeValue());
break;
default :
Assert.fail("Unexpected attribute name " + att.getAttributeKey().getAttributeName());
break;
}
}
}
