@Test(timeout=90000) public void testMixedBytesPerChecksum() throws Exception {
  int fileLength=bytesPerCRC * 3;
  byte[] fileData=StripedFileTestUtil.generateBytes(fileLength);
  String replicatedFile1="/replicatedFile1";
  byte[] fileDataPart1=new byte[bytesPerCRC * 2];
  System.arraycopy(fileData,0,fileDataPart1,0,fileDataPart1.length);
  byte[] fileDataPart2=new byte[fileData.length - fileDataPart1.length];
  System.arraycopy(fileData,fileDataPart1.length,fileDataPart2,0,fileDataPart2.length);
  DFSTestUtil.writeFile(fs,new Path(replicatedFile1),fileDataPart1);
  conf.setInt(HdfsClientConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY,bytesPerCRC / 2);
  DFSTestUtil.appendFileNewBlock(((DistributedFileSystem)FileSystem.newInstance(conf)),new Path(replicatedFile1),fileDataPart2);
  if (expectSupportForSingleFileMixedBytesPerChecksum()) {
    String replicatedFile2="/replicatedFile2";
    DFSTestUtil.writeFile(fs,new Path(replicatedFile2),fileData);
    FileChecksum checksum1=getFileChecksum(replicatedFile1,-1,false);
    FileChecksum checksum2=getFileChecksum(replicatedFile2,-1,false);
    Assert.assertEquals(checksum1,checksum2);
  }
 else {
    exception.expect(IOException.class);
    FileChecksum checksum=getFileChecksum(replicatedFile1,-1,false);
  }
}
