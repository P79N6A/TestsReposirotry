/** 
 * Test the case when an expired report is replaced by a valid one.
 */
@Test public void testReplacement() throws Exception {
  addSlowDiskForTesting("dn1","disk1",ImmutableMap.of(DiskOp.METADATA,1.1,DiskOp.READ,1.8));
  timer.advance(reportValidityMs);
  addSlowDiskForTesting("dn1","disk1",ImmutableMap.of(DiskOp.READ,1.4));
  tracker.updateSlowDiskReportAsync(timer.monotonicNow());
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return !tracker.getSlowDisksReport().isEmpty();
    }
  }
,500,5000);
  Map<String,DiskLatency> reports=getSlowDisksReportForTesting(tracker);
  assertThat(reports.size(),is(1));
  assertTrue(reports.get("dn1:disk1").getLatency(DiskOp.METADATA) == null);
  assertTrue(Math.abs(reports.get("dn1:disk1").getLatency(DiskOp.READ) - 1.4) < 0.0000001);
}
