@Test public void testCancelWithLocalizedResource() throws YarnException {
  getPolicyInfo().setHeadroomAlpha(1.0f);
  initializePolicy();
  List<ResourceRequest> resourceRequests=new ArrayList<>();
  prepPolicyWithHeadroom(true);
  resourceRequests.add(FederationPoliciesTestUtil.createResourceRequest(0L,"subcluster0-rack0-host0",1024,1,1,1,null,false));
  resourceRequests.add(FederationPoliciesTestUtil.createResourceRequest(0L,"subcluster0-rack0",1024,1,1,1,null,false));
  resourceRequests.add(FederationPoliciesTestUtil.createResourceRequest(0L,ResourceRequest.ANY,1024,1,1,0,null,false));
  Map<SubClusterId,List<ResourceRequest>> response=((FederationAMRMProxyPolicy)getPolicy()).splitResourceRequests(resourceRequests);
  checkExpectedAllocation(response,"subcluster0",3,1);
  checkExpectedAllocation(response,"subcluster1",1,0);
  checkExpectedAllocation(response,"subcluster2",1,0);
  checkExpectedAllocation(response,"subcluster3",-1,-1);
  checkExpectedAllocation(response,"subcluster4",-1,-1);
  checkExpectedAllocation(response,"subcluster5",-1,-1);
  resourceRequests.clear();
  resourceRequests.add(FederationPoliciesTestUtil.createResourceRequest(0L,"subcluster0-rack0-host0",1024,1,1,0,null,false));
  resourceRequests.add(FederationPoliciesTestUtil.createResourceRequest(0L,"subcluster0-rack0",1024,1,1,0,null,false));
  resourceRequests.add(FederationPoliciesTestUtil.createResourceRequest(0L,ResourceRequest.ANY,1024,1,1,100,null,false));
  response=((FederationAMRMProxyPolicy)getPolicy()).splitResourceRequests(resourceRequests);
  checkExpectedAllocation(response,"subcluster0",3,60);
  checkExpectedAllocation(response,"subcluster1",1,-1);
  checkExpectedAllocation(response,"subcluster2",1,15);
  checkExpectedAllocation(response,"subcluster5",1,25);
  checkTotalContainerAllocation(response,100);
}
