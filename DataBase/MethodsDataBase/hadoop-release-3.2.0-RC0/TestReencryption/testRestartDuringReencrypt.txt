@Test public void testRestartDuringReencrypt() throws Exception {
  final int len=8196;
  final Path zoneParent=new Path("/zones");
  final Path zone=new Path(zoneParent,"zone");
  fsWrapper.mkdir(zone,FsPermission.getDirDefault(),true);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  fsWrapper.mkdir(new Path(zone,"dir_empty"),FsPermission.getDirDefault(),true);
  Path subdir=new Path(zone,"dir2");
  fsWrapper.mkdir(subdir,FsPermission.getDirDefault(),true);
  fsWrapper.mkdir(new Path(subdir,"dir_empty2"),FsPermission.getDirDefault(),true);
  DFSTestUtil.createFile(fs,new Path(subdir,"f"),len,(short)1,0xFEED);
  subdir=new Path(zone,"dir1");
  for (int i=0; i < 10; ++i) {
    DFSTestUtil.createFile(fs,new Path(subdir,Integer.toString(i)),len,(short)1,0xFEED);
  }
  fsWrapper.mkdir(new Path(subdir,"dir_empty1"),FsPermission.getDirDefault(),true);
  final Path encFile0=new Path(subdir,"0");
  final Path encFile9=new Path(subdir,"9");
  final FileEncryptionInfo fei0=getFileEncryptionInfo(encFile0);
  final FileEncryptionInfo fei9=getFileEncryptionInfo(encFile9);
  rollKey(TEST_KEY);
  getEzManager().pauseForTestingAfterNthSubmission(1);
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForReencryptedFiles(zone.toString(),5);
  restartClusterDisableReencrypt();
  final Long zoneId=fsn.getFSDirectory().getINode(zone.toString()).getId();
  assertEquals("Re-encrypt should restore to the last checkpoint zone",zoneId,getReencryptionStatus().getNextUnprocessedZone());
  assertEquals("Re-encrypt should restore to the last checkpoint file",new Path(subdir,"4").toString(),getEzManager().getZoneStatus(zone.toString()).getLastCheckpointFile());
  getEzManager().resumeReencryptForTesting();
  waitForReencryptedZones(1);
  assertKeyVersionChanged(encFile0,fei0);
  assertKeyVersionChanged(encFile9,fei9);
  assertNull("Re-encrypt queue should be empty after restart",getReencryptionStatus().getNextUnprocessedZone());
  assertEquals(11,getZoneStatus(zone.toString()).getFilesReencrypted());
}
