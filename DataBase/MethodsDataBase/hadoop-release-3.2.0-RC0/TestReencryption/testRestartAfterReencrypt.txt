@Test public void testRestartAfterReencrypt() throws Exception {
  final int len=8196;
  final Path zoneParent=new Path("/zones");
  final Path zone=new Path(zoneParent,"zone");
  fsWrapper.mkdir(zone,FsPermission.getDirDefault(),true);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  for (int i=0; i < 10; ++i) {
    DFSTestUtil.createFile(fs,new Path(zone,Integer.toString(i)),len,(short)1,0xFEED);
  }
  final Path subdir=new Path(zone,"dir");
  fsWrapper.mkdir(subdir,FsPermission.getDirDefault(),true);
  DFSTestUtil.createFile(fs,new Path(subdir,"f"),len,(short)1,0xFEED);
  final Path encFile0=new Path(zone,"0");
  final Path encFile9=new Path(zone,"9");
  final FileEncryptionInfo fei0=getFileEncryptionInfo(encFile0);
  final FileEncryptionInfo fei9=getFileEncryptionInfo(encFile9);
  rollKey(TEST_KEY);
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForReencryptedZones(1);
  assertKeyVersionChanged(encFile0,fei0);
  assertKeyVersionChanged(encFile9,fei9);
  final FileEncryptionInfo fei0new=getFileEncryptionInfo(encFile0);
  final FileEncryptionInfo fei9new=getFileEncryptionInfo(encFile9);
  restartClusterDisableReencrypt();
  assertKeyVersionEquals(encFile0,fei0new);
  assertKeyVersionEquals(encFile9,fei9new);
  assertNull("Re-encrypt queue should be empty after restart",getReencryptionStatus().getNextUnprocessedZone());
}
