@Test public void testReencryptRaceRename() throws Exception {
  final int len=8196;
  final Path zone=new Path("/dir");
  fsWrapper.mkdir(zone,FsPermission.getDirDefault(),true);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  for (int i=0; i < 10; ++i) {
    DFSTestUtil.createFile(fs,new Path(zone,"file" + i),len,(short)1,0xFEED);
  }
  final Path subdir=new Path(zone,"subdir");
  fsWrapper.mkdir(subdir,FsPermission.getDirDefault(),true);
  for (int i=10; i < 15; ++i) {
    DFSTestUtil.createFile(fs,new Path(subdir,"file" + i),len,(short)1,0xFEED);
  }
  rollKey(TEST_KEY);
  getEzManager().pauseReencryptForTesting();
  dfsAdmin.reencryptEncryptionZone(zone,ReencryptAction.START);
  waitForQueuedZones(1);
  getEzManager().pauseForTestingAfterNthSubmission(1);
  getEzManager().resumeReencryptForTesting();
  waitForReencryptedFiles(zone.toString(),5);
  try {
    fsWrapper.rename(new Path(zone,"file8"),new Path(zone,"file08"));
    fail("rename a file in an EZ should be disabled");
  }
 catch (  IOException e) {
    assertExceptionContains("under re-encryption",e);
  }
  getEzManager().pauseReencryptUpdaterForTesting();
  getEzManager().resumeReencryptForTesting();
  try {
    fsWrapper.rename(new Path(zone,"file8"),new Path(zone,"file08"));
    fail("rename a file in an EZ should be disabled");
  }
 catch (  IOException e) {
    assertExceptionContains("under re-encryption",e);
  }
}
