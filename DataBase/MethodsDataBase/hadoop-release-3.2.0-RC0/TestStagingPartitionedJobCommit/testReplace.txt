@Test public void testReplace() throws Exception {
  S3AFileSystem mockS3=getMockS3A();
  getJob().getConfiguration().set(FS_S3A_COMMITTER_STAGING_CONFLICT_MODE,CONFLICT_MODE_REPLACE);
  PartitionedStagingCommitter committer=newJobCommitter();
  committer.commitJob(getJob());
  verifyReplaceCommitActions(mockS3);
  verifyCompletion(mockS3);
  reset(mockS3);
  pathsExist(mockS3,"dateint=20161115","dateint=20161115/hour=12");
  committer.commitJob(getJob());
  verifyReplaceCommitActions(mockS3);
  verifyCompletion(mockS3);
  reset(mockS3);
  pathsExist(mockS3,"dateint=20161115/hour=12","dateint=20161115/hour=13");
  canDelete(mockS3,"dateint=20161115/hour=13");
  committer.commitJob(getJob());
  verifyDeleted(mockS3,"dateint=20161115/hour=13");
  verifyReplaceCommitActions(mockS3);
  verifyCompletion(mockS3);
  reset(mockS3);
  pathsExist(mockS3,"dateint=20161116/hour=13","dateint=20161116/hour=14");
  canDelete(mockS3,"dateint=20161116/hour=13","dateint=20161116/hour=14");
  committer.commitJob(getJob());
  verifyReplaceCommitActions(mockS3);
  verifyDeleted(mockS3,"dateint=20161116/hour=13");
  verifyDeleted(mockS3,"dateint=20161116/hour=14");
  verifyCompletion(mockS3);
}
