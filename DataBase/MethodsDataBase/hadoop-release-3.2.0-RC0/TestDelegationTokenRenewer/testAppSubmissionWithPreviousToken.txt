@Test(timeout=30000) public void testAppSubmissionWithPreviousToken() throws Exception {
  MockRM rm=new TestSecurityMockRM(conf,null);
  rm.start();
  final MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm.getResourceTrackerService());
  nm1.registerNode();
  Text userText1=new Text("user");
  DelegationTokenIdentifier dtId1=new DelegationTokenIdentifier(userText1,new Text("renewer1"),userText1);
  final Token<DelegationTokenIdentifier> token1=new Token<DelegationTokenIdentifier>(dtId1.getBytes(),"password1".getBytes(),dtId1.getKind(),new Text("service1"));
  Credentials credentials=new Credentials();
  credentials.addToken(userText1,token1);
  Resource resource=Records.newRecord(Resource.class);
  resource.setMemorySize(200);
  RMApp app1=rm.submitApp(resource,"name","user",null,false,null,2,credentials,null,true,false,false,null,0,null,false,null);
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm,nm1);
  rm.waitForState(app1.getApplicationId(),RMAppState.RUNNING);
  DelegationTokenRenewer renewer=rm.getRMContext().getDelegationTokenRenewer();
  DelegationTokenToRenew dttr=renewer.getAllTokens().get(token1);
  Assert.assertNotNull(dttr);
  RMApp app2=rm.submitApp(resource,"name","user",null,false,null,2,credentials,null,true,false,false,null,0,null,true,null);
  MockAM am2=MockRM.launchAndRegisterAM(app2,rm,nm1);
  rm.waitForState(app2.getApplicationId(),RMAppState.RUNNING);
  finishAMAndWaitForComplete(app2,rm,nm1,am2,dttr);
  Assert.assertTrue(rm.getRMContext().getDelegationTokenRenewer().getAllTokens().containsKey(token1));
  finishAMAndWaitForComplete(app1,rm,nm1,am1,dttr);
  Assert.assertFalse(Renewer.cancelled);
}
