@Test public void testSetupQueueConfigsWithSpecifiedConfiguration() throws IOException {
  try {
    CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration(new Configuration(false),false);
    final String leafQueueName="testSetupQueueConfigsWithSpecifiedConfiguration";
    assertEquals(0,conf.size());
    conf.setNodeLocalityDelay(60);
    conf.setCapacity(ROOT + DOT + leafQueueName,10);
    conf.setMaximumCapacity(ROOT + DOT + leafQueueName,100);
    conf.setUserLimitFactor(ROOT + DOT + leafQueueName,0.1f);
    csConf.setNodeLocalityDelay(30);
    csConf.setGlobalMaximumApplicationsPerQueue(20);
    LeafQueue leafQueue=new LeafQueue(csContext,conf,leafQueueName,cs.getRootQueue(),null);
    assertEquals(30,leafQueue.getNodeLocalityDelay());
    assertEquals(20,leafQueue.getMaxApplications());
    assertEquals(2,leafQueue.getMaxApplicationsPerUser());
    conf.setMaximumAMResourcePercentPerPartition(leafQueue.getQueueName(),NO_LABEL,10);
    conf.setMaximumCapacity(leafQueue.getQueueName(),10);
    assertEquals(0.1,leafQueue.getMaxAMResourcePerQueuePercent(),EPSILON);
    assertEquals(1,leafQueue.getMaximumCapacity(),EPSILON);
    assertEquals(0.1,leafQueue.getCapacity(),EPSILON);
    assertEquals(0.1,leafQueue.getAbsoluteCapacity(),EPSILON);
    assertEquals(1.0,leafQueue.getAbsoluteMaximumCapacity(),EPSILON);
  }
  finally {
    csConf.setNodeLocalityDelay(CapacitySchedulerConfiguration.DEFAULT_NODE_LOCALITY_DELAY);
    csConf.setGlobalMaximumApplicationsPerQueue((int)CapacitySchedulerConfiguration.UNDEFINED);
  }
}
