@Test public void testParseNodeAttributeSpec() throws PlacementConstraintParseException {
  Map<SourceTags,PlacementConstraint> result;
  PlacementConstraint.AbstractConstraint expectedPc1, expectedPc2;
  PlacementConstraint actualPc1, actualPc2;
  result=PlacementConstraintParser.parsePlacementSpec("xyz=4,rm.yarn.io/foo=true");
  Assert.assertEquals(1,result.size());
  TargetExpression target=PlacementTargets.nodeAttribute("rm.yarn.io/foo","true");
  expectedPc1=targetNodeAttribute("node",NodeAttributeOpCode.EQ,target);
  actualPc1=result.values().iterator().next();
  Assert.assertEquals(expectedPc1,actualPc1.getConstraintExpr());
  result=PlacementConstraintParser.parsePlacementSpec("xyz=3,rm.yarn.io/foo!=abc");
  Assert.assertEquals(1,result.size());
  target=PlacementTargets.nodeAttribute("rm.yarn.io/foo","abc");
  expectedPc1=targetNodeAttribute("node",NodeAttributeOpCode.NE,target);
  actualPc1=result.values().iterator().next();
  Assert.assertEquals(expectedPc1,actualPc1.getConstraintExpr());
  actualPc1=result.values().iterator().next();
  Assert.assertEquals(expectedPc1,actualPc1.getConstraintExpr());
  result=PlacementConstraintParser.parsePlacementSpec("xyz=1,rm.yarn.io/foo!=abc:zxy=1,rm.yarn.io/bar=true");
  Assert.assertEquals(2,result.size());
  target=PlacementTargets.nodeAttribute("rm.yarn.io/foo","abc");
  expectedPc1=targetNodeAttribute("node",NodeAttributeOpCode.NE,target);
  target=PlacementTargets.nodeAttribute("rm.yarn.io/bar","true");
  expectedPc2=targetNodeAttribute("node",NodeAttributeOpCode.EQ,target);
  Iterator<PlacementConstraint> valueIt=result.values().iterator();
  actualPc1=valueIt.next();
  actualPc2=valueIt.next();
  Assert.assertEquals(expectedPc1,actualPc1.getConstraintExpr());
  Assert.assertEquals(expectedPc2,actualPc2.getConstraintExpr());
  result=PlacementConstraintParser.parsePlacementSpec("rm.yarn.io/foo=true");
  Assert.assertEquals(1,result.size());
  target=PlacementTargets.nodeAttribute("rm.yarn.io/foo","true");
  expectedPc1=targetNodeAttribute("node",NodeAttributeOpCode.EQ,target);
  SourceTags actualSourceTags=result.keySet().iterator().next();
  Assert.assertTrue(actualSourceTags.isEmpty());
  actualPc1=result.values().iterator().next();
  Assert.assertEquals(expectedPc1,actualPc1.getConstraintExpr());
  try {
    PlacementConstraintParser.parsePlacementSpec("rm.yarn.io/foo=true:xyz=1,notin,node,xyz");
    Assert.fail("Expected a failure!");
  }
 catch (  Exception e) {
    Assert.assertTrue(e instanceof PlacementConstraintParseException);
  }
}
