/** 
 * The last block is truncated at mid. (non copy-on-truncate) dn0 is shutdown before truncate and restart after truncate successful.
 */
@Test(timeout=60000) public void testTruncateWithDataNodesRestart() throws Exception {
  int startingFileSize=3 * BLOCK_SIZE;
  byte[] contents=AppendTestUtil.initBuffer(startingFileSize);
  final Path p=new Path(parent,"testTruncateWithDataNodesRestart");
  writeContents(contents,startingFileSize,p);
  LocatedBlock oldBlock=getLocatedBlocks(p).getLastLocatedBlock();
  int dn=0;
  int toTruncateLength=1;
  int newLength=startingFileSize - toTruncateLength;
  cluster.getDataNodes().get(dn).shutdown();
  truncateAndRestartDN(p,dn,newLength);
  checkBlockRecovery(p);
  LocatedBlock newBlock=getLocatedBlocks(p).getLastLocatedBlock();
  assertEquals(newBlock.getBlock().getBlockId(),oldBlock.getBlock().getBlockId());
  assertEquals(newBlock.getBlock().getGenerationStamp(),oldBlock.getBlock().getGenerationStamp() + 1);
  Thread.sleep(2000);
  cluster.triggerBlockReports();
  DFSTestUtil.waitReplication(fs,p,REPLICATION);
  FsDatasetTestUtils utils=cluster.getFsDatasetTestUtils(dn);
  assertEquals(utils.getStoredDataLength(newBlock.getBlock()),newBlock.getBlockSize());
  assertEquals(utils.getStoredGenerationStamp(newBlock.getBlock()),newBlock.getBlock().getGenerationStamp());
  FileStatus fileStatus=fs.getFileStatus(p);
  assertThat(fileStatus.getLen(),is((long)newLength));
  checkFullFile(p,newLength,contents);
  fs.delete(parent,true);
}
