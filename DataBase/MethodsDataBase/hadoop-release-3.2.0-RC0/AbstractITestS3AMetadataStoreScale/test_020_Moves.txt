@Test public void test_020_Moves() throws Throwable {
  describe("Test workload of batched move() operations");
  int width=getConf().getInt(KEY_DIRECTORY_COUNT,DEFAULT_DIRECTORY_COUNT);
  int depth=width;
  long operations=getConf().getLong(KEY_OPERATION_COUNT,DEFAULT_OPERATION_COUNT);
  List<PathMetadata> origMetas=new ArrayList<>();
  createDirTree(BUCKET_ROOT,depth,width,origMetas);
  List<Path> origPaths=metasToPaths(origMetas);
  List<PathMetadata> movedMetas=moveMetas(origMetas,BUCKET_ROOT,new Path(BUCKET_ROOT,"moved-here"));
  List<Path> movedPaths=metasToPaths(movedMetas);
  long count=1;
  try (MetadataStore ms=createMetadataStore()){
    try {
      count=populateMetadataStore(origMetas,ms);
      describe("Running move workload");
      NanoTimer moveTimer=new NanoTimer();
      LOG.info("Running {} moves of {} paths each",operations,origMetas.size());
      for (int i=0; i < operations; i++) {
        Collection<Path> toDelete;
        Collection<PathMetadata> toCreate;
        if (i % 2 == 0) {
          toDelete=origPaths;
          toCreate=movedMetas;
        }
 else {
          toDelete=movedPaths;
          toCreate=origMetas;
        }
        ms.move(toDelete,toCreate);
      }
      moveTimer.end();
      printTiming(LOG,"move",moveTimer,operations);
    }
  finally {
      clearMetadataStore(ms,count);
    }
  }
 }
