/** 
 * Tests enable/disable Storage Policy Satisfier dynamically.
 */
@Test(timeout=30000) public void testReconfigureStoragePolicySatisfierEnabled() throws ReconfigurationException {
  final NameNode nameNode=cluster.getNameNode();
  verifySPSEnabled(nameNode,DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.NONE,false);
  try {
    nameNode.reconfigureProperty(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,"text");
    fail("ReconfigurationException expected");
  }
 catch (  ReconfigurationException e) {
    GenericTestUtils.assertExceptionContains("For enabling or disabling storage policy satisfier, must " + "pass either internal/external/none string value only",e.getCause());
  }
  nameNode.reconfigureProperty(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.NONE.toString());
  verifySPSEnabled(nameNode,DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.NONE,false);
  nameNode.reconfigureProperty(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.EXTERNAL.toString());
  assertEquals(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY + " has wrong value",false,nameNode.getNamesystem().getBlockManager().getSPSManager().isSatisfierRunning());
  assertEquals(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY + " has wrong value",StoragePolicySatisfierMode.EXTERNAL.toString(),nameNode.getConf().get(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT));
}
