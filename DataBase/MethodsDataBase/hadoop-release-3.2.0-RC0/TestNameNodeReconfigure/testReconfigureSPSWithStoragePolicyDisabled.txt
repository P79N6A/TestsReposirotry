/** 
 * Tests enable/disable Storage Policy Satisfier dynamically when "dfs.storage.policy.enabled" feature is disabled.
 * @throws ReconfigurationException
 * @throws IOException
 */
@Test(timeout=30000) public void testReconfigureSPSWithStoragePolicyDisabled() throws ReconfigurationException, IOException {
  cluster.shutdown();
  Configuration conf=new HdfsConfiguration();
  conf.setBoolean(DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,false);
  cluster=new MiniDFSCluster.Builder(conf).build();
  cluster.waitActive();
  final NameNode nameNode=cluster.getNameNode();
  verifySPSEnabled(nameNode,DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.NONE,false);
  nameNode.reconfigureProperty(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.EXTERNAL.toString());
  assertNull("SPS shouldn't start as " + DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY + " is disabled",nameNode.getNamesystem().getBlockManager().getSPSManager());
  verifySPSEnabled(nameNode,DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,StoragePolicySatisfierMode.EXTERNAL,false);
  assertEquals(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY + " has wrong value",StoragePolicySatisfierMode.EXTERNAL.toString(),nameNode.getConf().get(DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT));
}
