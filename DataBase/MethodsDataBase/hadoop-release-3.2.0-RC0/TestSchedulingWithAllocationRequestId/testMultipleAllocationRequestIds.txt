@Test(timeout=10000) public void testMultipleAllocationRequestIds() throws Exception {
  YarnConfiguration conf=getConf();
  MockRM rm=new MockRM(conf);
  try {
    rm.start();
    MockNM nm1=rm.registerNode("127.0.0.1:1234",4 * GB);
    MockNM nm2=rm.registerNode("127.0.0.2:5678",4 * GB);
    RMApp app1=rm.submitApp(2048);
    nm1.nodeHeartbeat(true);
    RMAppAttempt attempt1=app1.getCurrentAppAttempt();
    MockAM am1=rm.sendAMLaunched(attempt1.getAppAttemptId());
    am1.registerAppAttempt();
    am1.allocate(am1.createReq(new String[]{"127.0.0.1"},2 * GB,1,1,10L),null);
    am1.allocate(am1.createReq(new String[]{"127.0.0.2"},2 * GB,1,2,20L),null);
    AllocateResponse allocResponse=waitForAllocResponse(rm,am1,nm1,1);
    List<Container> allocated=allocResponse.getAllocatedContainers();
    Assert.assertEquals(1,allocated.size());
    checkAllocatedContainer(allocated.get(0),2 * GB,nm1.getNodeId(),10);
    allocResponse=waitForAllocResponse(rm,am1,nm2,2);
    allocated=allocResponse.getAllocatedContainers();
    Assert.assertEquals(2,allocated.size());
    for (    Container container : allocated) {
      checkAllocatedContainer(container,2 * GB,nm2.getNodeId(),20);
    }
  }
  finally {
    if (rm != null) {
      rm.stop();
    }
  }
}
