/** 
 * Test the basic functionality.
 */
@Test public void testSync() throws Exception {
  initData(source);
  initData(target);
  enableAndCreateFirstSnapshot();
  int numCreatedModified=changeData(source);
  dfs.createSnapshot(source,"s2");
  final Path toDelete=new Path(source,"foo/d1/foo/f1");
  dfs.delete(toDelete,true);
  final Path newdir=new Path(source,"foo/d1/foo/newdir");
  dfs.mkdirs(newdir);
  SnapshotDiffReport report=dfs.getSnapshotDiffReport(source,"s1","s2");
  System.out.println(report);
  DistCpSync distCpSync=new DistCpSync(context,conf);
  Assert.assertTrue(distCpSync.sync());
  final Path spath=new Path(source,HdfsConstants.DOT_SNAPSHOT_DIR + Path.SEPARATOR + "s2");
  Assert.assertEquals(spath,context.getSourcePaths().get(0));
  final Path listingPath=new Path("/tmp/META/fileList.seq");
  CopyListing listing=new SimpleCopyListing(conf,new Credentials(),distCpSync);
  listing.buildListing(listingPath,context);
  Map<Text,CopyListingFileStatus> copyListing=getListing(listingPath);
  CopyMapper copyMapper=new CopyMapper();
  StubContext stubContext=new StubContext(conf,null,0);
  Mapper<Text,CopyListingFileStatus,Text,Text>.Context mapContext=stubContext.getContext();
  mapContext.getConfiguration().setBoolean(DistCpOptionSwitch.APPEND.getConfigLabel(),true);
  copyMapper.setup(mapContext);
  for (  Map.Entry<Text,CopyListingFileStatus> entry : copyListing.entrySet()) {
    copyMapper.map(entry.getKey(),entry.getValue(),mapContext);
  }
  Assert.assertEquals(numCreatedModified,copyListing.size());
  Assert.assertEquals(BLOCK_SIZE * 3,stubContext.getReporter().getCounter(CopyMapper.Counter.BYTESCOPIED).getValue());
  verifyCopy(dfs.getFileStatus(spath),dfs.getFileStatus(target),false);
}
