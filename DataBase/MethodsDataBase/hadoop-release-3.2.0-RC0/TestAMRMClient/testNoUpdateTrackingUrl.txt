@Test(timeout=60000) public void testNoUpdateTrackingUrl(){
  try {
    AMRMClientImpl<ContainerRequest> amClient=null;
    amClient=new AMRMClientImpl<>();
    amClient.init(conf);
    amClient.start();
    amClient.registerApplicationMaster("Host",10000,"");
    assertEquals("",amClient.appTrackingUrl);
    ApplicationMasterProtocol mockRM=mock(ApplicationMasterProtocol.class);
    AllocateResponse mockResponse=mock(AllocateResponse.class);
    when(mockRM.allocate(any(AllocateRequest.class))).thenReturn(mockResponse);
    ApplicationMasterProtocol realRM=amClient.rmClient;
    amClient.rmClient=mockRM;
    amClient.allocate(0.1f);
    ArgumentCaptor<AllocateRequest> argument=ArgumentCaptor.forClass(AllocateRequest.class);
    verify(mockRM).allocate(argument.capture());
    assertNull(argument.getValue().getTrackingUrl());
    amClient.rmClient=realRM;
    amClient.unregisterApplicationMaster(FinalApplicationStatus.SUCCEEDED,null,null);
  }
 catch (  IOException|YarnException e) {
    throw new AssertionError("testNoUpdateTrackingUrl unexpectedly threw exception: " + e);
  }
}
