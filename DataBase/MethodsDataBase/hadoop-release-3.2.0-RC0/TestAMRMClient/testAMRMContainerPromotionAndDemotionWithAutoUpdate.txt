@Test public void testAMRMContainerPromotionAndDemotionWithAutoUpdate() throws Exception {
  AMRMClientImpl<AMRMClient.ContainerRequest> amClient=(AMRMClientImpl<AMRMClient.ContainerRequest>)AMRMClient.createAMRMClient();
  amClient.init(conf);
  amClient.start();
  NMClientImpl nmClient=(NMClientImpl)NMClient.createNMClient();
  Assert.assertNotNull(nmClient);
  nmClient.init(conf);
  nmClient.start();
  assertEquals(STATE.STARTED,nmClient.getServiceState());
  amClient.registerApplicationMaster("Host",10000,"");
  assertEquals(0,amClient.ask.size());
  assertEquals(0,amClient.release.size());
  Resource reqResource=Resource.newInstance(512,1);
  amClient.addContainerRequest(new AMRMClient.ContainerRequest(reqResource,null,null,priority2,0,true,null,ExecutionTypeRequest.newInstance(ExecutionType.OPPORTUNISTIC,true)));
  AllocateResponse allocResponse=waitForAllocation(amClient,1,0);
  assertEquals(1,allocResponse.getAllocatedContainers().size());
  startContainer(allocResponse,nmClient);
  Container c=allocResponse.getAllocatedContainers().get(0);
  amClient.requestContainerUpdate(c,UpdateContainerRequest.newInstance(c.getVersion(),c.getId(),ContainerUpdateType.PROMOTE_EXECUTION_TYPE,null,ExecutionType.GUARANTEED));
  allocResponse=waitForAllocation(amClient,0,1);
  UpdatedContainer updatedContainer=allocResponse.getUpdatedContainers().get(0);
  if (!autoUpdate) {
    nmClient.updateContainerResource(updatedContainer.getContainer());
  }
  waitForNMContextUpdate(updatedContainer,ExecutionType.GUARANTEED);
  amClient.requestContainerUpdate(updatedContainer.getContainer(),UpdateContainerRequest.newInstance(updatedContainer.getContainer().getVersion(),updatedContainer.getContainer().getId(),ContainerUpdateType.DEMOTE_EXECUTION_TYPE,null,ExecutionType.OPPORTUNISTIC));
  allocResponse=waitForAllocation(amClient,0,1);
  updatedContainer=allocResponse.getUpdatedContainers().get(0);
  if (!autoUpdate) {
    nmClient.updateContainerResource(updatedContainer.getContainer());
  }
  waitForNMContextUpdate(updatedContainer,ExecutionType.OPPORTUNISTIC);
  amClient.close();
}
