@Test public void testDockerCapabilities() throws ContainerExecutionException {
  DockerLinuxContainerRuntime runtime=new DockerLinuxContainerRuntime(mockExecutor,mockCGroupsHandler);
  try {
    conf.setStrings(YarnConfiguration.NM_DOCKER_CONTAINER_CAPABILITIES,"none","CHOWN","DAC_OVERRIDE");
    runtime.initialize(conf,nmContext);
    Assert.fail("Initialize didn't fail with invalid capabilities " + "'none', 'CHOWN', 'DAC_OVERRIDE'");
  }
 catch (  ContainerExecutionException e) {
  }
  try {
    conf.setStrings(YarnConfiguration.NM_DOCKER_CONTAINER_CAPABILITIES,"CHOWN","DAC_OVERRIDE","NONE");
    runtime.initialize(conf,nmContext);
    Assert.fail("Initialize didn't fail with invalid capabilities " + "'CHOWN', 'DAC_OVERRIDE', 'NONE'");
  }
 catch (  ContainerExecutionException e) {
  }
  conf.setStrings(YarnConfiguration.NM_DOCKER_CONTAINER_CAPABILITIES,"NONE");
  runtime.initialize(conf,nmContext);
  Assert.assertEquals(0,runtime.getCapabilities().size());
  conf.setStrings(YarnConfiguration.NM_DOCKER_CONTAINER_CAPABILITIES,"none");
  runtime.initialize(conf,nmContext);
  Assert.assertEquals(0,runtime.getCapabilities().size());
  conf.setStrings(YarnConfiguration.NM_DOCKER_CONTAINER_CAPABILITIES,"CHOWN","DAC_OVERRIDE");
  runtime.initialize(conf,nmContext);
  Iterator<String> it=runtime.getCapabilities().iterator();
  Assert.assertEquals("CHOWN",it.next());
  Assert.assertEquals("DAC_OVERRIDE",it.next());
}
