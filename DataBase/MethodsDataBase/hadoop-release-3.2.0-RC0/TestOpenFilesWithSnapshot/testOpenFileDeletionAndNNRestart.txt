/** 
 * Verify if the NameNode can restart properly after an OpenForWrite file and the only snapshot it was present in were deleted.
 * @throws Exception
 */
@Test(timeout=600000) public void testOpenFileDeletionAndNNRestart() throws Exception {
  final Path snapRootDir=new Path("/level_0_A/test");
  final String hbaseFileName="hbase.log";
  final String snap1Name="snap_1";
  final Path hbaseFile=new Path(snapRootDir,hbaseFileName);
  createFile(hbaseFile);
  FSDataOutputStream hbaseOutputStream=fs.append(hbaseFile);
  int newWriteLength=(int)(BLOCKSIZE * 1.5);
  byte[] buf=new byte[newWriteLength];
  Random random=new Random();
  random.nextBytes(buf);
  writeToStream(hbaseOutputStream,buf);
  final Path snap1Dir=SnapshotTestHelper.createSnapshot(fs,snapRootDir,snap1Name);
  LOG.info("Open file status in snap: " + fs.getFileStatus(new Path(snap1Dir,hbaseFileName)));
  fs.delete(hbaseFile,true);
  fs.deleteSnapshot(snapRootDir,snap1Name);
  Assert.assertFalse(fs.exists(hbaseFile));
  cluster.restartNameNode();
  cluster.waitActive();
  Assert.assertFalse(fs.exists(hbaseFile));
}
