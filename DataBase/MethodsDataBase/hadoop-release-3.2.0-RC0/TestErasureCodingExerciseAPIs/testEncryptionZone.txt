/** 
 * FileSystem.[createEncryptionZone, getLocatedBlocks, getEZForPath, reencryptEncryptionZone, addDelegationTokens] API call should succeed without failure.
 * @throws IOException if any IO operation failed.
 * @throws NoSuchAlgorithmException
 */
@Test public void testEncryptionZone() throws IOException, NoSuchAlgorithmException {
  final Path zoneRoot=new Path("ecRoot");
  final Path zonePath=new Path(zoneRoot,"/ec");
  fsWrapper.mkdir(zonePath,FsPermission.getDirDefault(),true);
  final String testKey="test_key";
  DFSTestUtil.createKey(testKey,cluster,conf);
  final EnumSet<CreateEncryptionZoneFlag> noTrash=EnumSet.of(CreateEncryptionZoneFlag.NO_TRASH);
  dfsAdmin.createEncryptionZone(zonePath,testKey,noTrash);
  final Path fp=new Path(zonePath,"encFile");
  DFSTestUtil.createFile(fs,fp,1 << 13,(short)1,0xFEEE);
  LocatedBlocks blocks=fs.getClient().getLocatedBlocks(fp.toString(),0);
  FileEncryptionInfo fei=blocks.getFileEncryptionInfo();
  assertEquals(testKey,fei.getKeyName());
  EncryptionZone ez=fs.getEZForPath(fp);
  assertEquals(zonePath.toString(),ez.getPath());
  dfsAdmin.reencryptEncryptionZone(zonePath,HdfsConstants.ReencryptAction.START);
  Credentials creds=new Credentials();
  final Token<?>[] tokens=fs.addDelegationTokens("JobTracker",creds);
  assertEquals(1,tokens.length);
}
