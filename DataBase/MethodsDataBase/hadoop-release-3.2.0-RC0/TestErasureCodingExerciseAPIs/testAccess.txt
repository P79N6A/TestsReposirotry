/** 
 * FileSystem.[access, setOwner, setTime] API call should succeed without failure.
 * @throws IOException if any IO operation failed.
 * @throws InterruptedException
 */
@Test public void testAccess() throws IOException, InterruptedException {
  final Path p1=new Path("/p1");
  final String userName="user1";
  final String groupName="group1";
  fs.mkdir(p1,new FsPermission((short)0444));
  fs.setOwner(p1,userName,groupName);
  UserGroupInformation userGroupInfo=UserGroupInformation.createUserForTesting(userName,new String[]{groupName});
  FileSystem userFs=userGroupInfo.doAs((PrivilegedExceptionAction<FileSystem>)() -> FileSystem.get(conf));
  userFs.setOwner(p1,userName,groupName);
  userFs.access(p1,FsAction.READ);
  long mtime=System.currentTimeMillis() - 1000L;
  long atime=System.currentTimeMillis() - 2000L;
  fs.setTimes(p1,mtime,atime);
  FileStatus fileStatus=fs.getFileStatus(p1);
  assertEquals(userName,fileStatus.getOwner());
  assertEquals(groupName,fileStatus.getGroup());
  assertEquals(new FsPermission(FsAction.READ,FsAction.READ,FsAction.READ),fileStatus.getPermission());
  assertEquals(mtime,fileStatus.getModificationTime());
  assertEquals(atime,fileStatus.getAccessTime());
}
