@Test public void testDeleteEZWithMultipleUsers() throws Exception {
  final Path zone=new Path("/zones");
  fs.mkdirs(zone);
  final Path zone1=new Path("/zones/zone" + zoneCounter.getAndIncrement());
  fs.mkdirs(zone1);
  dfsAdmin.createEncryptionZone(zone1,TEST_KEY,NO_TRASH);
  fsWrapper.setPermission(zone1,new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL));
  final Path encFile1=new Path(zone1,"encFile" + fileCounter.getAndIncrement());
  DFSTestUtil.createFile(fs,encFile1,LEN,(short)1,0xFEED);
  final UserGroupInformation user=UserGroupInformation.createUserForTesting("user",new String[]{"mygroup"});
  final Path encFile2=new Path(zone1,"encFile" + fileCounter.getAndIncrement());
  user.doAs(new PrivilegedExceptionAction<Object>(){
    @Override public Object run() throws Exception {
      FileSystem fs2=FileSystem.get(cluster.getConfiguration(0));
      DFSTestUtil.createFile(fs2,encFile2,LEN,(short)1,0xFEED);
      DFSTestUtil.verifyDelete(shell,fs,encFile2,true);
      String[] argv=new String[]{"-rm","-r",zone1.toString()};
      int res=ToolRunner.run(shell,argv);
      assertEquals("Non-admin could delete an encryption zone with multiple" + " users : " + zone1,1,res);
      return null;
    }
  }
);
  shell=new FsShell(clientConf);
  DFSTestUtil.verifyDelete(shell,fs,zone1,true);
}
