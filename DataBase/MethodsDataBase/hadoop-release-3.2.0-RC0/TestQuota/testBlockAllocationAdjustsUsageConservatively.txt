/** 
 * Violate a space quota using files of size < 1 block. Test that block allocation conservatively assumes that for quota checking the entire space of the block is used.
 */
@Test public void testBlockAllocationAdjustsUsageConservatively() throws Exception {
  final Path parent=new Path(PathUtils.getTestDir(getClass()).getPath(),GenericTestUtils.getMethodName());
  assertTrue(dfs.mkdirs(parent));
  DFSAdmin admin=new DFSAdmin(conf);
  Path dir=new Path(parent,"test");
  Path file1=new Path(parent,"test/test1");
  Path file2=new Path(parent,"test/test2");
  boolean exceededQuota=false;
  final int QUOTA_SIZE=3 * DEFAULT_BLOCK_SIZE;
  final int FILE_SIZE=DEFAULT_BLOCK_SIZE / 2;
  ContentSummary c;
  assertTrue(dfs.mkdirs(dir));
  runCommand(admin,false,"-setSpaceQuota",Integer.toString(QUOTA_SIZE),dir.toString());
  DFSTestUtil.createFile(dfs,file1,FILE_SIZE,(short)3,1L);
  DFSTestUtil.waitReplication(dfs,file1,(short)3);
  c=dfs.getContentSummary(dir);
  compareQuotaUsage(c,dfs,dir);
  checkContentSummary(c,webhdfs.getContentSummary(dir));
  assertEquals("Quota is half consumed",QUOTA_SIZE / 2,c.getSpaceConsumed());
  try {
    DFSTestUtil.createFile(dfs,file2,FILE_SIZE,(short)3,1L);
  }
 catch (  QuotaExceededException e) {
    exceededQuota=true;
  }
  assertTrue("Quota not exceeded",exceededQuota);
}
