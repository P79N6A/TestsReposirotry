@Test public void testReadAppsMetricTimeRange() throws Exception {
  Set<TimelineEntity> entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters.Builder().build(),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS),100,null,null));
  assertEquals(3,entities.size());
  int metricTimeSeriesCnt=0;
  int metricCnt=0;
  for (  TimelineEntity entity : entities) {
    metricCnt+=entity.getMetrics().size();
    for (    TimelineMetric m : entity.getMetrics()) {
      metricTimeSeriesCnt+=m.getValues().size();
    }
  }
  assertEquals(3,metricCnt);
  assertEquals(13,metricTimeSeriesCnt);
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters.Builder().build(),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS),100,CURRENT_TIME - 40000,CURRENT_TIME));
  assertEquals(3,entities.size());
  metricCnt=0;
  metricTimeSeriesCnt=0;
  for (  TimelineEntity entity : entities) {
    metricCnt+=entity.getMetrics().size();
    for (    TimelineMetric m : entity.getMetrics()) {
      for (      Long ts : m.getValues().keySet()) {
        assertTrue(ts >= CURRENT_TIME - 40000 && ts <= CURRENT_TIME);
      }
      metricTimeSeriesCnt+=m.getValues().size();
    }
  }
  assertEquals(3,metricCnt);
  assertEquals(5,metricTimeSeriesCnt);
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters.Builder().build(),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS),null,CURRENT_TIME - 40000,CURRENT_TIME));
  assertEquals(3,entities.size());
  metricCnt=0;
  metricTimeSeriesCnt=0;
  for (  TimelineEntity entity : entities) {
    metricCnt+=entity.getMetrics().size();
    for (    TimelineMetric m : entity.getMetrics()) {
      for (      Long ts : m.getValues().keySet()) {
        assertTrue(ts >= CURRENT_TIME - 40000 && ts <= CURRENT_TIME);
      }
      metricTimeSeriesCnt+=m.getValues().size();
    }
  }
  assertEquals(3,metricCnt);
  assertEquals(3,metricTimeSeriesCnt);
  TimelineEntity entity=reader.getEntity(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1111111111_2222",TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS),100,CURRENT_TIME - 40000,CURRENT_TIME));
  assertNotNull(entity);
  assertEquals(2,entity.getMetrics().size());
  metricTimeSeriesCnt=0;
  for (  TimelineMetric m : entity.getMetrics()) {
    for (    Long ts : m.getValues().keySet()) {
      assertTrue(ts >= CURRENT_TIME - 40000 && ts <= CURRENT_TIME);
    }
    metricTimeSeriesCnt+=m.getValues().size();
  }
  assertEquals(3,metricTimeSeriesCnt);
}
