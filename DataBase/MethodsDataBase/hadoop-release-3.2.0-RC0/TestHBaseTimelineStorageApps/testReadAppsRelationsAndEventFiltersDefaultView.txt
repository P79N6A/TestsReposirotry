@Test public void testReadAppsRelationsAndEventFiltersDefaultView() throws Exception {
  TimelineFilterList eventFilter=new TimelineFilterList();
  eventFilter.addFilter(new TimelineExistsFilter(TimelineCompareOp.NOT_EQUAL,"end_event"));
  TimelineFilterList relatesTo=new TimelineFilterList(Operator.OR);
  relatesTo.addFilter(new TimelineKeyValuesFilter(TimelineCompareOp.EQUAL,"container2",new HashSet<Object>(Arrays.asList("relatesto7"))));
  relatesTo.addFilter(new TimelineKeyValuesFilter(TimelineCompareOp.EQUAL,"container1",new HashSet<Object>(Arrays.asList("relatesto4"))));
  TimelineFilterList isRelatedTo=new TimelineFilterList();
  isRelatedTo.addFilter(new TimelineKeyValuesFilter(TimelineCompareOp.EQUAL,"task1",new HashSet<Object>(Arrays.asList("relatedto3"))));
  isRelatedTo.addFilter(new TimelineKeyValuesFilter(TimelineCompareOp.NOT_EQUAL,"task1",new HashSet<Object>(Arrays.asList("relatedto5"))));
  Set<TimelineEntity> entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters.Builder().relatesTo(relatesTo).isRelatedTo(isRelatedTo).eventFilters(eventFilter).build(),new TimelineDataToRetrieve());
  assertEquals(1,entities.size());
  int eventCnt=0;
  int isRelatedToCnt=0;
  int relatesToCnt=0;
  for (  TimelineEntity timelineEntity : entities) {
    eventCnt+=timelineEntity.getEvents().size();
    isRelatedToCnt+=timelineEntity.getIsRelatedToEntities().size();
    relatesToCnt+=timelineEntity.getRelatesToEntities().size();
    if (!timelineEntity.getId().equals("application_1111111111_4444")) {
      Assert.fail("Entity id should have been application_1111111111_4444");
    }
  }
  assertEquals(0,eventCnt);
  assertEquals(0,isRelatedToCnt);
  assertEquals(0,relatesToCnt);
}
