@Test(timeout=5000) public void testConcurrentRegister() throws InterruptedException, ExecutionException {
  ExecutorService threadpool=Executors.newCachedThreadPool();
  ExecutorCompletionService<RegisterApplicationMasterResponse> compSvc=new ExecutorCompletionService<>(threadpool);
  Object syncObj=MockResourceManagerFacade.getSyncObj();
synchronized (syncObj) {
    LOG.info("Starting first register thread");
    compSvc.submit(new ConcurrentRegisterAMCallable());
    try {
      LOG.info("Test main starts waiting for the first thread to block");
      syncObj.wait();
      LOG.info("Test main wait finished");
    }
 catch (    Exception e) {
      LOG.info("Test main wait interrupted",e);
    }
  }
  LOG.info("Starting second register thread");
  compSvc.submit(new ConcurrentRegisterAMCallable());
  LOG.info("Let first blocked register thread move on");
synchronized (syncObj) {
    syncObj.notifyAll();
  }
  RegisterApplicationMasterResponse response=compSvc.take().get();
  Assert.assertNotNull(response);
  response=compSvc.take().get();
  Assert.assertNotNull(response);
  threadpool.shutdown();
}
