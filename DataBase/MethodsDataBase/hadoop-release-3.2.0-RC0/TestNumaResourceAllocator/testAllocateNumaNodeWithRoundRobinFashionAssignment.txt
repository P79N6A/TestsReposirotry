@Test public void testAllocateNumaNodeWithRoundRobinFashionAssignment() throws Exception {
  NumaResourceAllocation nodeInfo1=numaResourceAllocator.allocateNumaNodes(getContainer(ContainerId.fromString("container_1481156246874_0001_01_000001"),Resource.newInstance(2048,2)));
  Assert.assertEquals("0",String.join(",",nodeInfo1.getMemNodes()));
  Assert.assertEquals("0",String.join(",",nodeInfo1.getCpuNodes()));
  NumaResourceAllocation nodeInfo2=numaResourceAllocator.allocateNumaNodes(getContainer(ContainerId.fromString("container_1481156246874_0001_01_000002"),Resource.newInstance(2048,2)));
  Assert.assertEquals("1",String.join(",",nodeInfo2.getMemNodes()));
  Assert.assertEquals("1",String.join(",",nodeInfo2.getCpuNodes()));
  NumaResourceAllocation nodeInfo3=numaResourceAllocator.allocateNumaNodes(getContainer(ContainerId.fromString("container_1481156246874_0001_01_000003"),Resource.newInstance(2048,2)));
  Assert.assertEquals("0",String.join(",",nodeInfo3.getMemNodes()));
  Assert.assertEquals("0",String.join(",",nodeInfo3.getCpuNodes()));
  NumaResourceAllocation nodeInfo4=numaResourceAllocator.allocateNumaNodes(getContainer(ContainerId.fromString("container_1481156246874_0001_01_000003"),Resource.newInstance(2048,2)));
  Assert.assertEquals("1",String.join(",",nodeInfo4.getMemNodes()));
  Assert.assertEquals("1",String.join(",",nodeInfo4.getCpuNodes()));
}
