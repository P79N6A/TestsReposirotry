/** 
 * Test case for old namenode where the namenode doesn't support returning keyProviderUri.
 */
@Test public void testFSServerDefaultsHelper(){
  HdfsProtos.FsServerDefaultsProto.Builder b=HdfsProtos.FsServerDefaultsProto.newBuilder();
  b.setBlockSize(DFSConfigKeys.DFS_BLOCK_SIZE_DEFAULT);
  b.setBytesPerChecksum(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT);
  b.setWritePacketSize(HdfsClientConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_DEFAULT);
  b.setReplication(DFSConfigKeys.DFS_REPLICATION_DEFAULT);
  b.setFileBufferSize(DFSConfigKeys.IO_FILE_BUFFER_SIZE_DEFAULT);
  b.setEncryptDataTransfer(DFSConfigKeys.DFS_ENCRYPT_DATA_TRANSFER_DEFAULT);
  b.setTrashInterval(DFSConfigKeys.FS_TRASH_INTERVAL_DEFAULT);
  b.setChecksumType(HdfsProtos.ChecksumTypeProto.valueOf(DataChecksum.Type.valueOf(DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT).id));
  HdfsProtos.FsServerDefaultsProto proto=b.build();
  assertFalse("KeyProvider uri is not supported",proto.hasKeyProviderUri());
  FsServerDefaults fsServerDefaults=PBHelperClient.convert(proto);
  Assert.assertNotNull("FsServerDefaults is null",fsServerDefaults);
  Assert.assertNull("KeyProviderUri should be null",fsServerDefaults.getKeyProviderUri());
}
