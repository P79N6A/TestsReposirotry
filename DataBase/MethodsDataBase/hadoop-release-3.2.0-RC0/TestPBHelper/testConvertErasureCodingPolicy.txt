@Test public void testConvertErasureCodingPolicy() throws Exception {
  for (  ErasureCodingPolicy policy : SystemErasureCodingPolicies.getPolicies()) {
    HdfsProtos.ErasureCodingPolicyProto proto=PBHelperClient.convertErasureCodingPolicy(policy);
    assertFalse("Unnecessary field is set.",proto.hasName());
    assertFalse("Unnecessary field is set.",proto.hasSchema());
    assertFalse("Unnecessary field is set.",proto.hasCellSize());
    ErasureCodingPolicy convertedPolicy=PBHelperClient.convertErasureCodingPolicy(proto);
    assertEquals("Converted policy not equal",policy,convertedPolicy);
  }
  ECSchema newSchema=new ECSchema("testcodec",3,2);
  ErasureCodingPolicy newPolicy=new ErasureCodingPolicy(newSchema,128 * 1024);
  HdfsProtos.ErasureCodingPolicyProto proto=PBHelperClient.convertErasureCodingPolicy(newPolicy);
  assertTrue("Optional field not set",proto.hasName());
  assertTrue("Optional field not set",proto.hasSchema());
  assertTrue("Optional field not set",proto.hasCellSize());
  ErasureCodingPolicy convertedPolicy=PBHelperClient.convertErasureCodingPolicy(proto);
  assertEquals("Converted policy not equal",newPolicy,convertedPolicy);
}
