@Test(timeout=300000) public void testInterleavedBlockReports() throws IOException, ExecutionException, InterruptedException {
  int numConcurrentBlockReports=3;
  DataNode dn=cluster.getDataNodes().get(DN_N0);
  final String poolId=cluster.getNamesystem().getBlockPoolId();
  LOG.info("Block pool id: " + poolId);
  final DatanodeRegistration dnR=dn.getDNRegistrationForBP(poolId);
  final StorageBlockReport[] reports=getBlockReports(dn,poolId,true,true);
  BlockManager bm=cluster.getNameNode().getNamesystem().getBlockManager();
  final DatanodeDescriptor dnDescriptor=bm.getDatanodeManager().getDatanode(dn.getDatanodeId());
  DatanodeStorageInfo[] storageInfos=dnDescriptor.getStorageInfos();
  ExecutorService executorService=Executors.newFixedThreadPool(numConcurrentBlockReports);
  List<Future<Void>> futureList=new ArrayList<>(numConcurrentBlockReports);
  for (int i=0; i < numConcurrentBlockReports; i++) {
    futureList.add(executorService.submit(new Callable<Void>(){
      @Override public Void call() throws IOException {
        sendBlockReports(dnR,poolId,reports);
        return null;
      }
    }
));
  }
  for (  Future<Void> future : futureList) {
    future.get();
  }
  executorService.shutdown();
  Assert.assertArrayEquals(storageInfos,dnDescriptor.getStorageInfos());
}
