/** 
 * Test writes a file and closes it. Block reported is generated with a bad GS for a single block. Block report is forced and the check for # of corrupted blocks is performed.
 * @throws IOException in case of an error
 */
@Test(timeout=300000) public void blockReport_03() throws IOException {
  final String METHOD_NAME=GenericTestUtils.getMethodName();
  Path filePath=new Path("/" + METHOD_NAME + ".dat");
  writeFile(METHOD_NAME,FILE_SIZE,filePath);
  DataNode dn=cluster.getDataNodes().get(DN_N0);
  String poolId=cluster.getNamesystem().getBlockPoolId();
  DatanodeRegistration dnR=dn.getDNRegistrationForBP(poolId);
  StorageBlockReport[] reports=getBlockReports(dn,poolId,true,false);
  sendBlockReports(dnR,poolId,reports);
  printStats();
  assertThat("Wrong number of corrupt blocks",cluster.getNamesystem().getCorruptReplicaBlocks(),is(1L));
  assertThat("Wrong number of PendingDeletion blocks",cluster.getNamesystem().getPendingDeletionBlocks(),is(0L));
}
