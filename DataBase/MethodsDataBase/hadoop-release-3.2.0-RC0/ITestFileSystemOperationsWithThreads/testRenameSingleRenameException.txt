@Test public void testRenameSingleRenameException() throws Exception {
  Path sourceFolder=new Path("root");
  Path destFolder=new Path("rootnew");
  NativeAzureFileSystem mockFs=Mockito.spy((NativeAzureFileSystem)fs);
  createFolder(mockFs,"root");
  String srcKey=mockFs.pathToKey(mockFs.makeAbsolute(sourceFolder));
  String dstKey=mockFs.pathToKey(mockFs.makeAbsolute(destFolder));
  FolderRenamePending mockRenameFs=Mockito.spy(mockFs.prepareAtomicFolderRename(srcKey,dstKey));
  Mockito.when(mockFs.prepareAtomicFolderRename(srcKey,dstKey)).thenReturn(mockRenameFs);
  String path=mockFs.pathToKey(mockFs.makeAbsolute(new Path("root/0")));
  Mockito.doThrow(new IOException()).when(mockRenameFs).renameFile(Mockito.any(FileMetadata.class));
  boolean exception=false;
  try {
    mockFs.rename(sourceFolder,destFolder);
  }
 catch (  IOException e) {
    exception=true;
  }
  assertTrue(exception);
  assertTrue(mockFs.exists(sourceFolder));
  String content=logs.getOutput();
  assertInLog(content,"Using thread pool for Rename operation with threads");
  assertInLog(content,"Encountered Exception for Rename operation for file " + path);
  assertInLog(content,"Terminating execution of Rename operation now as some other thread already got exception or operation failed");
}
