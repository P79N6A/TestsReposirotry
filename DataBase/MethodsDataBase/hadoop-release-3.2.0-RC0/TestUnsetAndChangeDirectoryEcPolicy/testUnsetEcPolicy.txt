@Test public void testUnsetEcPolicy() throws Exception {
  final int numBlocks=1;
  final int fileLen=blockGroupSize * numBlocks;
  final Path dirPath=new Path("/striped");
  final Path ecFilePath=new Path(dirPath,"ec_file");
  final Path replicateFilePath=new Path(dirPath,"3x_file");
  fs.mkdirs(dirPath);
  try {
    fs.unsetErasureCodingPolicy(dirPath);
    fail();
  }
 catch (  NoECPolicySetException e) {
  }
  fs.setErasureCodingPolicy(dirPath,ecPolicy.getName());
  DFSTestUtil.createFile(fs,ecFilePath,fileLen,(short)1,0L);
  fs.unsetErasureCodingPolicy(dirPath);
  DFSTestUtil.createFile(fs,replicateFilePath,fileLen,(short)1,0L);
  ErasureCodingPolicy tempEcPolicy=fs.getErasureCodingPolicy(ecFilePath);
  Assert.assertTrue("Erasure coding policy mismatch!",tempEcPolicy.getName().equals(ecPolicy.getName()));
  tempEcPolicy=fs.getErasureCodingPolicy(replicateFilePath);
  Assert.assertNull("Replicate file should not have erasure coding policy!",tempEcPolicy);
  tempEcPolicy=fs.getErasureCodingPolicy(dirPath);
  Assert.assertNull("Directory should no have erasure coding policy set!",tempEcPolicy);
  fs.delete(dirPath,true);
}
