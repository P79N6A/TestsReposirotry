@Test public void testNestedEcPolicy() throws Exception {
  final int numBlocks=1;
  final int fileLen=blockGroupSize * numBlocks;
  final Path parentDir=new Path("/ec-6-3");
  final Path childDir=new Path("/ec-6-3/ec-3-2");
  final Path ec63FilePath=new Path(childDir,"ec_6_3_file");
  final Path ec32FilePath=new Path(childDir,"ec_3_2_file");
  final Path ec63FilePath2=new Path(childDir,"ec_6_3_file_2");
  final ErasureCodingPolicy ec32Policy=SystemErasureCodingPolicies.getByID(SystemErasureCodingPolicies.RS_3_2_POLICY_ID);
  fs.mkdirs(parentDir);
  fs.setErasureCodingPolicy(parentDir,ecPolicy.getName());
  fs.mkdirs(childDir);
  DFSTestUtil.createFile(fs,ec63FilePath,fileLen,(short)1,0L);
  fs.setErasureCodingPolicy(childDir,ec32Policy.getName());
  DFSTestUtil.createFile(fs,ec32FilePath,fileLen,(short)1,0L);
  ErasureCodingPolicy tempEcPolicy=fs.getErasureCodingPolicy(ec63FilePath);
  Assert.assertTrue("Erasure coding policy mismatch!",tempEcPolicy.getName().equals(ecPolicy.getName()));
  tempEcPolicy=fs.getErasureCodingPolicy(ec32FilePath);
  Assert.assertTrue("Erasure coding policy mismatch!",tempEcPolicy.getName().equals(ec32Policy.getName()));
  tempEcPolicy=fs.getErasureCodingPolicy(childDir);
  Assert.assertTrue("Directory should have erasure coding policy set!",tempEcPolicy.getName().equals(ec32Policy.getName()));
  fs.unsetErasureCodingPolicy(childDir);
  DFSTestUtil.createFile(fs,ec63FilePath2,fileLen,(short)1,0L);
  tempEcPolicy=fs.getErasureCodingPolicy(ec63FilePath2);
  Assert.assertTrue("Erasure coding policy mismatch!",tempEcPolicy.getName().equals(ecPolicy.getName()));
  tempEcPolicy=fs.getErasureCodingPolicy(childDir);
  Assert.assertTrue("Directory should have erasure coding policy set!",tempEcPolicy.getName().equals(ecPolicy.getName()));
  fs.delete(parentDir,true);
}
