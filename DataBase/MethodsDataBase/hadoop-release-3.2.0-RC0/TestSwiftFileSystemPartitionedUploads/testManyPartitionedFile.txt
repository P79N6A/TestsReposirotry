/** 
 * Test sticks up a very large partitioned file and verifies that it comes back unchanged.
 * @throws Throwable
 */
@Test(timeout=SWIFT_BULK_IO_TEST_TIMEOUT) public void testManyPartitionedFile() throws Throwable {
  final Path path=new Path("/test/testManyPartitionedFile");
  int len=PART_SIZE_BYTES * 15;
  final byte[] src=SwiftTestUtils.dataset(len,32,144);
  FSDataOutputStream out=fs.create(path,false,getBufferSize(),(short)1,BLOCK_SIZE);
  out.write(src,0,src.length);
  int expected=getExpectedPartitionsWritten(len,PART_SIZE_BYTES,true);
  out.close();
  assertPartitionsWritten("write completed",out,expected);
  assertEquals("too few bytes written",len,SwiftNativeFileSystem.getBytesWritten(out));
  assertEquals("too few bytes uploaded",len,SwiftNativeFileSystem.getBytesUploaded(out));
  byte[] dest=readDataset(fs,path,len);
  SwiftTestUtils.compareByteArrays(src,dest,len);
  FileStatus[] stats=fs.listStatus(path);
  assertEquals("wrong entry count in " + SwiftTestUtils.dumpStats(path.toString(),stats),expected,stats.length);
}
