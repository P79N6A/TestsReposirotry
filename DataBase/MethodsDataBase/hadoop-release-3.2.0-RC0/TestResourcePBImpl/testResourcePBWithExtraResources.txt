@Test public void testResourcePBWithExtraResources() throws Exception {
  YarnProtos.ResourceInformationProto riProto=YarnProtos.ResourceInformationProto.newBuilder().setType(YarnProtos.ResourceTypeInfoProto.newBuilder().setName("resource1").setType(YarnProtos.ResourceTypesProto.COUNTABLE).getType()).setValue(4).setUnits("T").setKey("resource1").build();
  YarnProtos.ResourceProto proto=YarnProtos.ResourceProto.newBuilder().setMemory(1024).setVirtualCores(3).addResourceValueMap(riProto).build();
  Resource res=new ResourcePBImpl(proto);
  Assert.assertEquals(4000,res.getResourceInformation("resource1").getValue());
  Assert.assertEquals("G",res.getResourceInformation("resource1").getUnits());
  YarnProtos.ResourceInformationProto riProto1=YarnProtos.ResourceInformationProto.newBuilder().setType(YarnProtos.ResourceTypeInfoProto.newBuilder().setName("resource2").setType(YarnProtos.ResourceTypesProto.COUNTABLE).getType()).setValue(4).setUnits("M").setKey("resource2").build();
  YarnProtos.ResourceProto proto1=YarnProtos.ResourceProto.newBuilder().setMemory(1024).setVirtualCores(3).addResourceValueMap(riProto1).build();
  Resource res1=new ResourcePBImpl(proto1);
  Assert.assertEquals(4000000000L,res1.getResourceInformation("resource2").getValue());
  Assert.assertEquals("m",res1.getResourceInformation("resource2").getUnits());
  YarnProtos.ResourceInformationProto riProto2=YarnProtos.ResourceInformationProto.newBuilder().setType(YarnProtos.ResourceTypeInfoProto.newBuilder().setName("resource1").setType(YarnProtos.ResourceTypesProto.COUNTABLE).getType()).setValue(3).setUnits("M").setKey("resource1").build();
  YarnProtos.ResourceProto proto2=YarnProtos.ResourceProto.newBuilder().setMemory(1024).setVirtualCores(3).addResourceValueMap(riProto2).build();
  Resource res2=new ResourcePBImpl(proto2);
  Assert.assertEquals(0,res2.getResourceInformation("resource1").getValue());
  Assert.assertEquals("G",res2.getResourceInformation("resource1").getUnits());
}
