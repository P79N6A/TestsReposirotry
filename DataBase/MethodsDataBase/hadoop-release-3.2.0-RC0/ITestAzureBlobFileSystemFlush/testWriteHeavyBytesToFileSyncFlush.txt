@Test public void testWriteHeavyBytesToFileSyncFlush() throws Exception {
  final AzureBlobFileSystem fs=getFileSystem();
  final Path testFilePath=path(methodName.getMethodName());
  ExecutorService es;
  try (FSDataOutputStream stream=fs.create(testFilePath)){
    es=Executors.newFixedThreadPool(10);
    final byte[] b=new byte[TEST_BUFFER_SIZE];
    new Random().nextBytes(b);
    List<Future<Void>> tasks=new ArrayList<>();
    for (int i=0; i < FLUSH_TIMES; i++) {
      Callable<Void> callable=new Callable<Void>(){
        @Override public Void call() throws Exception {
          stream.write(b);
          return null;
        }
      }
;
      tasks.add(es.submit(callable));
    }
    boolean shouldStop=false;
    while (!shouldStop) {
      shouldStop=true;
      for (      Future<Void> task : tasks) {
        if (!task.isDone()) {
          stream.hsync();
          shouldStop=false;
          Thread.sleep(THREAD_SLEEP_TIME);
        }
      }
    }
    tasks.clear();
  }
   es.shutdownNow();
  FileStatus fileStatus=fs.getFileStatus(testFilePath);
  long expectedWrites=(long)TEST_BUFFER_SIZE * FLUSH_TIMES;
  assertEquals("Wrong file length in " + testFilePath,expectedWrites,fileStatus.getLen());
}
