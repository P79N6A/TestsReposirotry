@Test public void testForceStartGuaranteedContainersWhenOppContainerDisabled() throws Exception {
  containerManager.start();
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  containerLaunchContext.setCommands(Arrays.asList("echo"));
  List<StartContainerRequest> list=new ArrayList<>();
  list.add(StartContainerRequest.newInstance(containerLaunchContext,createContainerToken(createContainerId(0),DUMMY_RM_IDENTIFIER,context.getNodeId(),user,BuilderUtils.newResource(2048,4),context.getContainerTokenSecretManager(),null,ExecutionType.GUARANTEED)));
  StartContainersRequest allRequests=StartContainersRequest.newInstance(list);
  containerManager.startContainers(allRequests);
  ContainerScheduler cs=containerManager.getContainerScheduler();
  int nQueuedContainers=cs.getNumQueuedContainers();
  int nRunningContainers=cs.getNumRunningContainers();
  int maxTry=100;
  int nTried=1;
  while (nQueuedContainers != 0 || nRunningContainers != 0) {
    Thread.sleep(100);
    nQueuedContainers=cs.getNumQueuedContainers();
    nRunningContainers=cs.getNumRunningContainers();
    nTried++;
    if (nTried > maxTry) {
      Assert.fail("Failed to get either number of queuing containers to 0 or " + "number of running containers to 0, #queued=" + nQueuedContainers + ", #running="+ nRunningContainers);
    }
  }
}
