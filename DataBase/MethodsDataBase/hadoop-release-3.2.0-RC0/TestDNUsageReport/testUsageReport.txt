/** 
 * Ensure that storage type and storage state are propagated in Storage Reports.
 */
@Test(timeout=60000) public void testUsageReport() throws IOException {
  DataNodeUsageReport report=dnUsageUtil.getUsageReport(0,0,0,0,0,0,0);
  Assert.assertEquals(report,DataNodeUsageReport.EMPTY_REPORT);
  bytesWritten=200;
  bytesRead=200;
  writeTime=50;
  readTime=50;
  writeBlock=20;
  readBlock=10;
  timeSinceLastReport=5;
  report=dnUsageUtil.getUsageReport(bytesWritten,bytesRead,writeTime,readTime,writeBlock,readBlock,timeSinceLastReport);
  Assert.assertEquals(bytesWritten / timeSinceLastReport,report.getBytesWrittenPerSec());
  Assert.assertEquals(bytesRead / timeSinceLastReport,report.getBytesReadPerSec());
  Assert.assertEquals(writeTime,report.getWriteTime());
  Assert.assertEquals(readTime,report.getReadTime());
  Assert.assertEquals(writeBlock / timeSinceLastReport,report.getBlocksWrittenPerSec());
  Assert.assertEquals(readBlock / timeSinceLastReport,report.getBlocksReadPerSec());
  DataNodeUsageReport report2=dnUsageUtil.getUsageReport(bytesWritten,bytesRead,writeTime,readTime,writeBlock,readBlock,0);
  Assert.assertEquals(report,report2);
  long bytesWritten2=50000;
  long bytesRead2=40000;
  long writeTime2=5000;
  long readTime2=1500;
  long writeBlock2=1000;
  long readBlock2=200;
  timeSinceLastReport=60;
  report2=dnUsageUtil.getUsageReport(bytesWritten2,bytesRead2,writeTime2,readTime2,writeBlock2,readBlock2,timeSinceLastReport);
  Assert.assertEquals((bytesWritten2 - bytesWritten) / timeSinceLastReport,report2.getBytesWrittenPerSec());
  Assert.assertEquals((bytesRead2 - bytesRead) / timeSinceLastReport,report2.getBytesReadPerSec());
  Assert.assertEquals(writeTime2 - writeTime,report2.getWriteTime());
  Assert.assertEquals(readTime2 - readTime,report2.getReadTime());
  Assert.assertEquals((writeBlock2 - writeBlock) / timeSinceLastReport,report2.getBlocksWrittenPerSec());
  Assert.assertEquals((readBlock2 - readBlock) / timeSinceLastReport,report2.getBlocksReadPerSec());
}
