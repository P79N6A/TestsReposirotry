@Test public void testSetQuota() throws Exception {
  long nsQuota=5;
  long ssQuota=100;
  final FileSystem nnFs1=nnContext1.getFileSystem();
  final FileSystem nnFs2=nnContext2.getFileSystem();
  nnFs1.mkdirs(new Path("/testdir5"));
  nnFs2.mkdirs(new Path("/testdir6"));
  MountTable mountTable1=MountTable.newInstance("/setquota",Collections.singletonMap("ns0","/testdir5"));
  mountTable1.setQuota(new RouterQuotaUsage.Builder().quota(nsQuota).spaceQuota(ssQuota).build());
  addMountTable(mountTable1);
  MountTable mountTable2=MountTable.newInstance("/setquota/subdir",Collections.singletonMap("ns1","/testdir6"));
  addMountTable(mountTable2);
  RouterQuotaUpdateService updateService=routerContext.getRouter().getQuotaCacheUpdateService();
  updateService.periodicInvoke();
  ClientProtocol client1=nnContext1.getClient().getNamenode();
  ClientProtocol client2=nnContext2.getClient().getNamenode();
  final QuotaUsage quota1=client1.getQuotaUsage("/testdir5");
  final QuotaUsage quota2=client2.getQuotaUsage("/testdir6");
  assertEquals(nsQuota,quota1.getQuota());
  assertEquals(ssQuota,quota1.getSpaceQuota());
  assertEquals(nsQuota,quota2.getQuota());
  assertEquals(ssQuota,quota2.getSpaceQuota());
}
