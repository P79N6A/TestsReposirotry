@Test public void testUnexpectedKeyDoesntThrowException() throws IOException {
  List<RecoveredContainerState> recoveredContainers=loadContainersState(stateStore.getContainerStateIterator());
  assertTrue(recoveredContainers.isEmpty());
  ApplicationId appId=ApplicationId.newInstance(1234,3);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,4);
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,5);
  StartContainerRequest startContainerRequest=storeMockContainer(containerId);
  byte[] invalidKey=("ContainerManager/containers/" + containerId.toString() + "/invalidKey1234").getBytes();
  stateStore.getDB().put(invalidKey,new byte[1]);
  restartStateStore();
  recoveredContainers=loadContainersState(stateStore.getContainerStateIterator());
  assertEquals(1,recoveredContainers.size());
  RecoveredContainerState rcs=recoveredContainers.get(0);
  assertEquals(RecoveredContainerStatus.REQUESTED,rcs.getStatus());
  assertEquals(ContainerExitStatus.INVALID,rcs.getExitCode());
  assertEquals(false,rcs.getKilled());
  assertEquals(startContainerRequest,rcs.getStartRequest());
  assertTrue(rcs.getDiagnostics().isEmpty());
  assertEquals(RecoveredContainerType.KILL,rcs.getRecoveryType());
  assertNotNull(stateStore.getDB().get(invalidKey));
  stateStore.removeContainer(containerId);
  assertNull(stateStore.getDB().get(invalidKey));
}
