@Test public void testApplicationStorage() throws IOException {
  RecoveredApplicationsState state=stateStore.loadApplicationsState();
  List<ContainerManagerApplicationProto> apps=loadApplicationProtos(state.getIterator());
  assertTrue(apps.isEmpty());
  final ApplicationId appId1=ApplicationId.newInstance(1234,1);
  ContainerManagerApplicationProto.Builder builder=ContainerManagerApplicationProto.newBuilder();
  builder.setId(((ApplicationIdPBImpl)appId1).getProto());
  builder.setUser("user1");
  ContainerManagerApplicationProto appProto1=builder.build();
  stateStore.storeApplication(appId1,appProto1);
  restartStateStore();
  state=stateStore.loadApplicationsState();
  apps=loadApplicationProtos(state.getIterator());
  assertEquals(1,apps.size());
  assertEquals(appProto1,apps.get(0));
  final ApplicationId appId2=ApplicationId.newInstance(1234,2);
  builder=ContainerManagerApplicationProto.newBuilder();
  builder.setId(((ApplicationIdPBImpl)appId2).getProto());
  builder.setUser("user2");
  ContainerManagerApplicationProto appProto2=builder.build();
  stateStore.storeApplication(appId2,appProto2);
  restartStateStore();
  state=stateStore.loadApplicationsState();
  apps=loadApplicationProtos(state.getIterator());
  assertEquals(2,apps.size());
  assertTrue(apps.contains(appProto1));
  assertTrue(apps.contains(appProto2));
  stateStore.removeApplication(appId2);
  restartStateStore();
  state=stateStore.loadApplicationsState();
  apps=loadApplicationProtos(state.getIterator());
  assertEquals(1,apps.size());
  assertEquals(appProto1,apps.get(0));
}
