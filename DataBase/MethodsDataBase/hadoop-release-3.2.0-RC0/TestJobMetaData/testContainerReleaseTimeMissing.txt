@Test public final void testContainerReleaseTimeMissing() throws ParseException {
  recurrenceId=new RecurrenceId("Fraud Detection","17/07/16 16:27:25");
  jobMetaData=new JobMetaData(logParserUtil.stringToUnixTimestamp("17/07/16 16:27:25"));
  jobMetaData.setRecurrenceId(recurrenceId);
  jobMetaData.setContainerStart("C1",logParserUtil.stringToUnixTimestamp("17/07/16 16:27:30"));
  jobMetaData.setContainerEnd("C1",logParserUtil.stringToUnixTimestamp("17/07/16 16:37:30"));
  jobMetaData.setContainerStart("C2",logParserUtil.stringToUnixTimestamp("17/07/16 16:27:40"));
  jobMetaData.setJobFinishTime(logParserUtil.stringToUnixTimestamp("17/07/16 16:37:45"));
  final Resource containerAlloc=Resource.newInstance(1,1);
  jobMetaData.getResourceSkyline().setContainerSpec(containerAlloc);
  jobMetaData.getResourceSkyline().setJobInputDataSize(1024.5);
  jobMetaData.createSkyline();
  final RLESparseResourceAllocation skylineList=jobMetaData.getResourceSkyline().getSkylineList();
  final int containerCPU=jobMetaData.getResourceSkyline().getContainerSpec().getVirtualCores();
  int k;
  for (k=0; k < 5; k++) {
    Assert.assertEquals(0,skylineList.getCapacityAtTime(k).getVirtualCores() / containerCPU);
  }
  for (k=5; k < 605; k++) {
    Assert.assertEquals(1,skylineList.getCapacityAtTime(k).getVirtualCores() / containerCPU);
  }
  Assert.assertEquals(0,skylineList.getCapacityAtTime(605).getVirtualCores() / containerCPU);
}
