@Test public void testAMCleanupBeforeLaunch() throws Exception {
  MockRM rm=new MockRM();
  rm.start();
  MockNM nm1=rm.registerNode("127.0.0.1:1234",5120);
  RMApp app=rm.submitApp(2000);
  nm1.nodeHeartbeat(true);
  RMAppAttempt attempt=app.getCurrentAppAttempt();
  try {
    GenericTestUtils.waitFor(new Supplier<Boolean>(){
      @Override public Boolean get(){
        return attempt.getMasterContainer() != null;
      }
    }
,10,200 * 100);
  }
 catch (  TimeoutException e) {
    fail("timed out while waiting for AM Launch to happen.");
  }
  rm.killApp(app.getApplicationId());
  rm.waitForState(app.getApplicationId(),RMAppState.KILLED);
  AMLauncher launcher=new AMLauncher(rm.getRMContext(),attempt,AMLauncherEventType.LAUNCH,rm.getConfig()){
    @Override public void onAMLaunchFailed(    ContainerId containerId,    Exception e){
      Assert.assertFalse("NullPointerException happens " + " while launching " + containerId,e instanceof NullPointerException);
    }
    @Override protected ContainerManagementProtocol getContainerMgrProxy(    ContainerId containerId){
      return new MyContainerManagerImpl();
    }
  }
;
  launcher.run();
  rm.stop();
}
