@Test public void testGetRequestConstraint(){
  PlacementConstraint constraint;
  And mergedConstraint;
  SchedulingRequest request;
  constraint=pcm.getMultilevelConstraint(appId1,null,c1);
  Assert.assertTrue(constraint.getConstraintExpr() instanceof And);
  mergedConstraint=(And)constraint.getConstraintExpr();
  Assert.assertEquals(1,mergedConstraint.getChildren().size());
  Assert.assertEquals(c1,mergedConstraint.getChildren().get(0).build());
  pcm.registerApplication(appId1,constraintMap1);
  constraint=pcm.getMultilevelConstraint(appId1,Sets.newHashSet("not_exist_tag"),null);
  Assert.assertTrue(constraint.getConstraintExpr() instanceof And);
  mergedConstraint=(And)constraint.getConstraintExpr();
  Assert.assertEquals(0,mergedConstraint.getChildren().size());
  constraint=pcm.getMultilevelConstraint(appId1,sourceTag1,null);
  Assert.assertTrue(constraint.getConstraintExpr() instanceof And);
  mergedConstraint=(And)constraint.getConstraintExpr();
  Assert.assertEquals(1,mergedConstraint.getChildren().size());
  Assert.assertEquals(c1,mergedConstraint.getChildren().get(0).build());
  pcm.unregisterApplication(appId1);
  pcm.addGlobalConstraint(sourceTag1,c1,true);
  constraint=pcm.getMultilevelConstraint(appId1,Sets.newHashSet(sourceTag1),null);
  Assert.assertTrue(constraint.getConstraintExpr() instanceof And);
  mergedConstraint=(And)constraint.getConstraintExpr();
  Assert.assertEquals(1,mergedConstraint.getChildren().size());
  Assert.assertEquals(c1,mergedConstraint.getChildren().get(0).build());
  pcm.removeGlobalConstraint(sourceTag1);
  pcm.addGlobalConstraint(sourceTag1,c3,true);
  pcm.registerApplication(appId1,constraintMap1);
  constraint=pcm.getMultilevelConstraint(appId1,sourceTag1,c2);
  Assert.assertTrue(constraint.getConstraintExpr() instanceof And);
  mergedConstraint=(And)constraint.getConstraintExpr();
  Assert.assertEquals(3,mergedConstraint.getChildren().size());
  pcm.removeGlobalConstraint(sourceTag1);
  pcm.unregisterApplication(appId1);
  pcm.addGlobalConstraint(sourceTag1,c2,true);
  pcm.registerApplication(appId1,constraintMap1);
  constraint=pcm.getMultilevelConstraint(appId1,Sets.newHashSet(sourceTag1),c1);
  Assert.assertTrue(constraint.getConstraintExpr() instanceof And);
  mergedConstraint=(And)constraint.getConstraintExpr();
  Assert.assertEquals(2,mergedConstraint.getChildren().size());
  pcm.removeGlobalConstraint(sourceTag1);
  pcm.unregisterApplication(appId1);
}
