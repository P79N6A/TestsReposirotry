@Test public void testKillZKInstance() throws Exception {
  rm1=startRM("rm1",HAServiceState.ACTIVE);
  rm2=startRM("rm2",HAServiceState.STANDBY);
  CuratorBasedElectorService service=(CuratorBasedElectorService)rm1.getRMContext().getLeaderElectorService();
  ZooKeeper zkClient=service.getCuratorClient().getZookeeperClient().getZooKeeper();
  InstanceSpec connectionInstance=zkCluster.findConnectionInstance(zkClient);
  zkCluster.killServer(connectionInstance);
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      try {
        HAServiceState rm1State=rm1.getAdminService().getServiceStatus().getState();
        HAServiceState rm2State=rm2.getAdminService().getServiceStatus().getState();
        return (rm1State.equals(HAServiceState.ACTIVE) && rm2State.equals(HAServiceState.STANDBY)) || (rm1State.equals(HAServiceState.STANDBY) && rm2State.equals(HAServiceState.ACTIVE));
      }
 catch (      IOException e) {
      }
      return false;
    }
  }
,2000,15000);
}
