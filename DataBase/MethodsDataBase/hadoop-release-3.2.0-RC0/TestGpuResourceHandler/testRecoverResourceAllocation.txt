@Test public void testRecoverResourceAllocation() throws Exception {
  Configuration conf=new YarnConfiguration();
  conf.set(YarnConfiguration.NM_GPU_ALLOWED_DEVICES,"0:0,1:1,2:3,3:4");
  GpuDiscoverer.getInstance().initialize(conf);
  gpuResourceHandler.bootstrap(conf);
  Assert.assertEquals(4,gpuResourceHandler.getGpuAllocator().getAvailableGpus());
  Container nmContainer=mock(Container.class);
  ResourceMappings rmap=new ResourceMappings();
  ResourceMappings.AssignedResources ar=new ResourceMappings.AssignedResources();
  ar.updateAssignedResources(Arrays.asList(new GpuDevice(1,1),new GpuDevice(2,3)));
  rmap.addAssignedResources(ResourceInformation.GPU_URI,ar);
  when(nmContainer.getResourceMappings()).thenReturn(rmap);
  runningContainersMap.put(getContainerId(1),nmContainer);
  gpuResourceHandler.reacquireContainer(getContainerId(1));
  Map<GpuDevice,ContainerId> deviceAllocationMapping=gpuResourceHandler.getGpuAllocator().getDeviceAllocationMappingCopy();
  Assert.assertEquals(2,deviceAllocationMapping.size());
  Assert.assertTrue(deviceAllocationMapping.keySet().contains(new GpuDevice(1,1)));
  Assert.assertTrue(deviceAllocationMapping.keySet().contains(new GpuDevice(2,3)));
  Assert.assertEquals(deviceAllocationMapping.get(new GpuDevice(1,1)),getContainerId(1));
  nmContainer=mock(Container.class);
  rmap=new ResourceMappings();
  ar=new ResourceMappings.AssignedResources();
  ar.updateAssignedResources(Arrays.asList(new GpuDevice(3,4),new GpuDevice(4,5)));
  rmap.addAssignedResources(ResourceInformation.GPU_URI,ar);
  when(nmContainer.getResourceMappings()).thenReturn(rmap);
  runningContainersMap.put(getContainerId(2),nmContainer);
  boolean caughtException=false;
  try {
    gpuResourceHandler.reacquireContainer(getContainerId(1));
  }
 catch (  ResourceHandlerException e) {
    caughtException=true;
  }
  Assert.assertTrue("Should fail since requested device Id is not in allowed list",caughtException);
  deviceAllocationMapping=gpuResourceHandler.getGpuAllocator().getDeviceAllocationMappingCopy();
  Assert.assertEquals(2,deviceAllocationMapping.size());
  Assert.assertTrue(deviceAllocationMapping.keySet().containsAll(Arrays.asList(new GpuDevice(1,1),new GpuDevice(2,3))));
  Assert.assertEquals(deviceAllocationMapping.get(new GpuDevice(1,1)),getContainerId(1));
  nmContainer=mock(Container.class);
  rmap=new ResourceMappings();
  ar=new ResourceMappings.AssignedResources();
  ar.updateAssignedResources(Arrays.asList(new GpuDevice(3,4),new GpuDevice(2,3)));
  rmap.addAssignedResources("gpu",ar);
  when(nmContainer.getResourceMappings()).thenReturn(rmap);
  runningContainersMap.put(getContainerId(2),nmContainer);
  caughtException=false;
  try {
    gpuResourceHandler.reacquireContainer(getContainerId(1));
  }
 catch (  ResourceHandlerException e) {
    caughtException=true;
  }
  Assert.assertTrue("Should fail since requested device Id is not in allowed list",caughtException);
  deviceAllocationMapping=gpuResourceHandler.getGpuAllocator().getDeviceAllocationMappingCopy();
  Assert.assertEquals(2,deviceAllocationMapping.size());
  Assert.assertTrue(deviceAllocationMapping.keySet().containsAll(Arrays.asList(new GpuDevice(1,1),new GpuDevice(2,3))));
  Assert.assertEquals(deviceAllocationMapping.get(new GpuDevice(1,1)),getContainerId(1));
}
