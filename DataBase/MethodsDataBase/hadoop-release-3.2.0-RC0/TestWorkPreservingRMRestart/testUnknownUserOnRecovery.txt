@Test(timeout=30000) public void testUnknownUserOnRecovery() throws Exception {
  MockRM rm1=new MockRM(conf);
  rm1.start();
  MockMemoryRMStateStore memStore=(MockMemoryRMStateStore)rm1.getRMStateStore();
  MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app0=rm1.submitApp(200,true);
  MockAM am0=MockRM.launchUAM(app0,rm1,nm1);
  am0.registerAppAttempt();
  rm1.killApp(app0.getApplicationId());
  PlacementManager placementMgr=mock(PlacementManager.class);
  doThrow(new YarnException("No groups for user")).when(placementMgr).placeApplication(any(ApplicationSubmissionContext.class),any(String.class));
  MockRM rm2=new MockRM(conf,memStore){
    @Override protected RMAppManager createRMAppManager(){
      return new RMAppManager(this.rmContext,this.scheduler,this.masterService,this.applicationACLsManager,conf){
        @Override ApplicationPlacementContext placeApplication(        PlacementManager placementManager,        ApplicationSubmissionContext context,        String user,        boolean isRecovery) throws YarnException {
          return super.placeApplication(placementMgr,context,user,isRecovery);
        }
      }
;
    }
  }
;
  rm2.start();
  RMApp recoveredApp=rm2.getRMContext().getRMApps().get(app0.getApplicationId());
  Assert.assertEquals(RMAppState.KILLED,recoveredApp.getState());
}
