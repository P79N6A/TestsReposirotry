@Test(timeout=200000) public void testCreateFlexStopDestroyService() throws Exception {
  setupInternal(NUM_NMS);
  ServiceClient client=createClient(getConf());
  Service exampleApp=createExampleApplication();
  client.actionCreate(exampleApp);
  SliderFileSystem fileSystem=new SliderFileSystem(getConf());
  Path appDir=fileSystem.buildClusterDirPath(exampleApp.getName());
  Assert.assertTrue(getFS().exists(new Path(appDir,exampleApp.getName() + ".json")));
  waitForServiceToBeStable(client,exampleApp);
  flexComponents(client,exampleApp,3L);
  waitForServiceToBeStable(client,exampleApp);
  checkCompInstancesInOrder(client,exampleApp);
  flexComponents(client,exampleApp,1L);
  waitForServiceToBeStable(client,exampleApp);
  checkCompInstancesInOrder(client,exampleApp);
  flexComponents(client,exampleApp,2L);
  waitForServiceToBeStable(client,exampleApp);
  checkCompInstancesInOrder(client,exampleApp);
  LOG.info("Stop the service");
  client.actionStop(exampleApp.getName(),true);
  ApplicationReport report=client.getYarnClient().getApplicationReport(ApplicationId.fromString(exampleApp.getId()));
  Assert.assertEquals(FINISHED,report.getYarnApplicationState());
  Assert.assertEquals(FinalApplicationStatus.ENDED,report.getFinalApplicationStatus());
  String serviceZKPath=RegistryUtils.servicePath(RegistryUtils.currentUser(),YarnServiceConstants.APP_TYPE,exampleApp.getName());
  Assert.assertFalse("Registry ZK service path still exists after stop",getCuratorService().zkPathExists(serviceZKPath));
  LOG.info("Destroy the service");
  Assert.assertEquals(0,client.actionDestroy(exampleApp.getName()));
  Assert.assertFalse(getFS().exists(appDir));
  Assert.assertEquals(EXIT_NOT_FOUND,client.actionDestroy(exampleApp.getName()));
}
