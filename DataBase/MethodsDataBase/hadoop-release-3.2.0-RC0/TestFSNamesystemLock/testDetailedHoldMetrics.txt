@Test public void testDetailedHoldMetrics() throws Exception {
  Configuration conf=new Configuration();
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_LOCK_DETAILED_METRICS_KEY,true);
  FakeTimer timer=new FakeTimer();
  MetricsRegistry registry=new MetricsRegistry("Test");
  MutableRatesWithAggregation rates=registry.newRatesWithAggregation("Test");
  FSNamesystemLock fsLock=new FSNamesystemLock(conf,rates,timer);
  fsLock.readLock();
  timer.advanceNanos(1300000);
  fsLock.readUnlock("foo");
  fsLock.readLock();
  timer.advanceNanos(2400000);
  fsLock.readUnlock("foo");
  fsLock.readLock();
  timer.advance(1);
  fsLock.readLock();
  timer.advance(1);
  fsLock.readUnlock("bar");
  fsLock.readUnlock("bar");
  fsLock.writeLock();
  timer.advance(1);
  fsLock.writeUnlock("baz",false);
  MetricsRecordBuilder rb=MetricsAsserts.mockMetricsRecordBuilder();
  rates.snapshot(rb,true);
  assertGauge("FSNReadLockFooNanosAvgTime",1850000.0,rb);
  assertCounter("FSNReadLockFooNanosNumOps",2L,rb);
  assertGauge("FSNReadLockBarNanosAvgTime",2000000.0,rb);
  assertCounter("FSNReadLockBarNanosNumOps",1L,rb);
  assertGauge("FSNWriteLockBazNanosAvgTime",1000000.0,rb);
  assertCounter("FSNWriteLockBazNanosNumOps",1L,rb);
  assertGauge("FSNReadLockOverallNanosAvgTime",1900000.0,rb);
  assertCounter("FSNReadLockOverallNanosNumOps",3L,rb);
  assertGauge("FSNWriteLockOverallNanosAvgTime",1000000.0,rb);
  assertCounter("FSNWriteLockOverallNanosNumOps",1L,rb);
}
