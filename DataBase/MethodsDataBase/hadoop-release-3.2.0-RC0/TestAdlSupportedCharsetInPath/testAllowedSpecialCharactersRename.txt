@Test public void testAllowedSpecialCharactersRename() throws IOException, URISyntaxException {
  String parentPath=TEST_ROOT + UUID.randomUUID().toString() + "/";
  Path specialFile=new Path(parentPath + path);
  Path anotherLocation=new Path(parentPath + UUID.randomUUID().toString());
  FileSystem fs=AdlStorageConfiguration.createStorageConnector();
  Assert.assertTrue("Could not create " + specialFile.toString(),fs.createNewFile(specialFile));
  Assert.assertTrue("Failed to rename " + specialFile.toString() + " --> "+ anotherLocation.toString(),fs.rename(specialFile,anotherLocation));
  Assert.assertFalse("File should not be present after successful rename : " + specialFile.toString(),fs.exists(specialFile));
  Assert.assertTrue("File should be present after successful rename : " + anotherLocation.toString(),fs.exists(anotherLocation));
  Assert.assertFalse("Listed under parent whereas expected not listed : " + parentPath,contains(fs.listStatus(new Path(parentPath)),fs.makeQualified(specialFile).toString()));
  Assert.assertTrue("Failed to rename " + anotherLocation.toString() + " --> "+ specialFile.toString(),fs.rename(anotherLocation,specialFile));
  Assert.assertTrue("File should be present after successful rename : " + "" + specialFile.toString(),fs.exists(specialFile));
  Assert.assertFalse("File should not be present after successful rename : " + anotherLocation.toString(),fs.exists(anotherLocation));
  Assert.assertTrue("Not listed under parent " + parentPath,contains(fs.listStatus(new Path(parentPath)),fs.makeQualified(specialFile).toString()));
  Assert.assertTrue("Failed to delete " + parentPath,fs.delete(new Path(parentPath),true));
}
