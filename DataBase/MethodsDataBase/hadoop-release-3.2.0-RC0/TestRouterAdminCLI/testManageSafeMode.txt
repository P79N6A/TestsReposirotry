@Test public void testManageSafeMode() throws Exception {
  waitState(RouterServiceState.RUNNING);
  assertFalse(routerContext.getRouter().getSafemodeService().isInSafeMode());
  assertEquals(0,ToolRunner.run(admin,new String[]{"-safemode","enter"}));
  assertEquals(RouterServiceState.SAFEMODE,routerContext.getRouter().getRouterState());
  assertTrue(routerContext.getRouter().getSafemodeService().isInSafeMode());
  System.setOut(new PrintStream(out));
  System.setErr(new PrintStream(err));
  assertEquals(0,ToolRunner.run(admin,new String[]{"-safemode","get"}));
  assertTrue(out.toString().contains("true"));
  assertEquals(0,ToolRunner.run(admin,new String[]{"-safemode","leave"}));
  assertEquals(RouterServiceState.RUNNING,routerContext.getRouter().getRouterState());
  assertFalse(routerContext.getRouter().getSafemodeService().isInSafeMode());
  out.reset();
  assertEquals(0,ToolRunner.run(admin,new String[]{"-safemode","get"}));
  assertTrue(out.toString().contains("false"));
  out.reset();
  assertEquals(-1,ToolRunner.run(admin,new String[]{"-safemode","get","-random","check"}));
  assertTrue(err.toString(),err.toString().contains("safemode: Too many arguments, Max=1 argument allowed only"));
  err.reset();
  assertEquals(-1,ToolRunner.run(admin,new String[]{"-safemode","check"}));
  assertTrue(err.toString(),err.toString().contains("safemode: Invalid argument: check"));
  err.reset();
}
