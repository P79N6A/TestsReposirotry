@Test public void testWorkloadGenerateTime() throws IllegalArgumentException, IOException {
  String workloadJson="{\"job_classes\": [], \"time_distribution\":[" + "{\"time\": 0, \"weight\": 1}, " + "{\"time\": 30, \"weight\": 0},"+ "{\"time\": 60, \"weight\": 2},"+ "{\"time\": 90, \"weight\": 1}"+ "]}";
  ObjectMapper mapper=new ObjectMapper();
  mapper.configure(INTERN_FIELD_NAMES,true);
  mapper.configure(FAIL_ON_UNKNOWN_PROPERTIES,false);
  SynthTraceJobProducer.Workload wl=mapper.readValue(workloadJson,SynthTraceJobProducer.Workload.class);
  JDKRandomGenerator rand=new JDKRandomGenerator();
  rand.setSeed(0);
  wl.init(rand);
  int bucket0=0;
  int bucket1=0;
  int bucket2=0;
  int bucket3=0;
  for (int i=0; i < 1000; ++i) {
    long time=wl.generateSubmissionTime();
    LOG.info("Generated time " + time);
    if (time < 30) {
      bucket0++;
    }
 else     if (time < 60) {
      bucket1++;
    }
 else     if (time < 90) {
      bucket2++;
    }
 else {
      bucket3++;
    }
  }
  Assert.assertTrue(bucket0 > 0);
  Assert.assertTrue(bucket1 == 0);
  Assert.assertTrue(bucket2 > 0);
  Assert.assertTrue(bucket3 > 0);
  Assert.assertTrue(bucket2 > bucket0);
  Assert.assertTrue(bucket2 > bucket3);
  LOG.info("bucket0 {}, bucket1 {}, bucket2 {}, bucket3 {}",bucket0,bucket1,bucket2,bucket3);
}
