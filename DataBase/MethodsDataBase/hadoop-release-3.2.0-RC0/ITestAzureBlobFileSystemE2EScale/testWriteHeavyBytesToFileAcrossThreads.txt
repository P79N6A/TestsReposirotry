@Test public void testWriteHeavyBytesToFileAcrossThreads() throws Exception {
  final AzureBlobFileSystem fs=getFileSystem();
  final Path testFile=path(methodName.getMethodName());
  final FSDataOutputStream stream=fs.create(testFile);
  ExecutorService es=Executors.newFixedThreadPool(TEN);
  int testWriteBufferSize=2 * TEN * ONE_THOUSAND* BASE_SIZE;
  final byte[] b=new byte[testWriteBufferSize];
  new Random().nextBytes(b);
  List<Future<Void>> tasks=new ArrayList<>();
  int operationCount=DEFAULT_WRITE_TIMES;
  for (int i=0; i < operationCount; i++) {
    Callable<Void> callable=new Callable<Void>(){
      @Override public Void call() throws Exception {
        stream.write(b);
        return null;
      }
    }
;
    tasks.add(es.submit(callable));
  }
  for (  Future<Void> task : tasks) {
    task.get();
  }
  tasks.clear();
  stream.close();
  es.shutdownNow();
  FileStatus fileStatus=fs.getFileStatus(testFile);
  assertEquals(testWriteBufferSize * operationCount,fileStatus.getLen());
}
