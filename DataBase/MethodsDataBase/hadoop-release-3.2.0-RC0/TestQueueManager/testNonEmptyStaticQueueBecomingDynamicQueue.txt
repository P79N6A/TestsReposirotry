@Test public void testNonEmptyStaticQueueBecomingDynamicQueue(){
  AllocationConfiguration allocConf=scheduler.getAllocationConfiguration();
  queueManager.updateAllocationConfiguration(allocConf);
  FSLeafQueue q1=queueManager.getLeafQueue("root.test.childA",false);
  assertNotNull("Queue root.test.childA does not exist",q1);
  assertEquals("createQueue() returned wrong queue","root.test.childA",q1.getName());
  assertFalse("root.test.childA is not a static queue",q1.isDynamic());
  notEmptyQueues.add(q1);
  queueManager.removePendingIncompatibleQueues();
  queueManager.removeEmptyDynamicQueues();
  q1=queueManager.getLeafQueue("root.test.childA",false);
  assertNotNull("Queue root.test.childA was deleted",q1);
  assertFalse("root.test.childA is not a dynamic queue",q1.isDynamic());
  for (  Set<String> queueNames : allocConf.configuredQueues.values()) {
    queueManager.setQueuesToDynamic(queueNames);
    queueNames.clear();
  }
  queueManager.updateAllocationConfiguration(allocConf);
  q1=queueManager.getLeafQueue("root.test.childA",false);
  assertNotNull("Queue root.test.childA was deleted",q1);
  assertTrue("root.test.childA is not a dynamic queue",q1.isDynamic());
  notEmptyQueues.remove(q1);
  queueManager.removePendingIncompatibleQueues();
  queueManager.removeEmptyDynamicQueues();
  q1=queueManager.getLeafQueue("root.test.childA",false);
  assertNull("Queue root.test.childA was not deleted",q1);
  FSParentQueue p1=queueManager.getParentQueue("root.test",false);
  assertNull("Queue root.test was not deleted",p1);
}
