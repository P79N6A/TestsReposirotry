@Test public void testAppsQueryWithInvaildDeselects() throws JSONException, Exception {
  try {
    rm.start();
    MockNM amNodeManager=rm.registerNode("127.0.0.1:1234",2048);
    rm.submitApp(CONTAINER_MB);
    amNodeManager.nodeHeartbeat(true);
    WebResource r=resource();
    ClientResponse response=r.path("ws").path("v1").path("cluster").path("apps").queryParam("deSelects","INVALIED_deSelectsParam").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
    assertResponseStatusCode(Status.BAD_REQUEST,response.getStatusInfo());
    assertEquals(MediaType.APPLICATION_JSON_TYPE + "; " + JettyUtils.UTF_8,response.getType().toString());
    JSONObject msg=response.getEntity(JSONObject.class);
    JSONObject exception=msg.getJSONObject("RemoteException");
    assertEquals("incorrect number of elements",3,exception.length());
    String message=exception.getString("message");
    String type=exception.getString("exception");
    String classname=exception.getString("javaClassName");
    WebServicesTestUtils.checkStringContains("exception message","java.lang.Exception: Invalid deSelects string" + " INVALIED_deSelectsParam " + "specified. It should be one of",message);
    WebServicesTestUtils.checkStringEqual("exception type","BadRequestException",type);
    WebServicesTestUtils.checkStringEqual("exception classname","org.apache.hadoop.yarn.webapp.BadRequestException",classname);
  }
  finally {
    rm.stop();
  }
}
