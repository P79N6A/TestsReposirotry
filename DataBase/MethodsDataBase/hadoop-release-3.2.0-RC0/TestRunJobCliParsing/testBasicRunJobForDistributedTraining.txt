@Test public void testBasicRunJobForDistributedTraining() throws Exception {
  RunJobCli runJobCli=new RunJobCli(getMockClientContext());
  Assert.assertFalse(SubmarineLogs.isVerbose());
  runJobCli.run(new String[]{"--name","my-job","--docker_image","tf-docker:1.1.0","--input_path","hdfs://input","--checkpoint_path","hdfs://output","--num_workers","3","--num_ps","2","--worker_launch_cmd","python run-job.py","--worker_resources","memory=2048M,vcores=2","--ps_resources","memory=4G,vcores=4","--tensorboard","true","--ps_launch_cmd","python run-ps.py","--verbose"});
  RunJobParameters jobRunParameters=runJobCli.getRunJobParameters();
  Assert.assertEquals(jobRunParameters.getInputPath(),"hdfs://input");
  Assert.assertEquals(jobRunParameters.getCheckpointPath(),"hdfs://output");
  Assert.assertEquals(jobRunParameters.getNumPS(),2);
  Assert.assertEquals(jobRunParameters.getPSLaunchCmd(),"python run-ps.py");
  Assert.assertEquals(Resources.createResource(4096,4),jobRunParameters.getPsResource());
  Assert.assertEquals(jobRunParameters.getWorkerLaunchCmd(),"python run-job.py");
  Assert.assertEquals(Resources.createResource(2048,2),jobRunParameters.getWorkerResource());
  Assert.assertEquals(jobRunParameters.getDockerImageName(),"tf-docker:1.1.0");
  Assert.assertTrue(SubmarineLogs.isVerbose());
}
