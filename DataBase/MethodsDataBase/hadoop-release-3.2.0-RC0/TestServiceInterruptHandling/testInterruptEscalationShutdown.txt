@Test public void testInterruptEscalationShutdown() throws Throwable {
  ExitTrackingServiceLauncher<BreakableService> launcher=new ExitTrackingServiceLauncher<>(BreakableService.class.getName());
  BreakableService service=new BreakableService();
  launcher.setService(service);
  InterruptEscalator escalator=new InterruptEscalator(launcher,500);
  try {
    escalator.interrupted(new IrqHandler.InterruptData("INT",3));
    fail("Expected an exception to be raised in " + escalator);
  }
 catch (  ExitUtil.ExitException e) {
    assertExceptionDetails(EXIT_INTERRUPTED,"",e);
  }
  assertStopped(service);
  assertTrue("isSignalAlreadyReceived() == false in " + escalator,escalator.isSignalAlreadyReceived());
  assertFalse("isForcedShutdownTimedOut() == true in " + escalator,escalator.isForcedShutdownTimedOut());
  try {
    escalator.interrupted(new IrqHandler.InterruptData("INT",3));
    fail("Expected an exception to be raised in " + escalator);
  }
 catch (  ExitUtil.HaltException e) {
    assertExceptionDetails(EXIT_INTERRUPTED,"",e);
  }
}
