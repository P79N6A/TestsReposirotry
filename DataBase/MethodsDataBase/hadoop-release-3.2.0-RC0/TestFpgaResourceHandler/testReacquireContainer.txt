@Test public void testReacquireContainer() throws ResourceHandlerException {
  Container c0=mockContainer(0,2,"GEMM");
  List<FpgaResourceAllocator.FpgaDevice> assigned=new ArrayList<>();
  assigned.add(new FpgaResourceAllocator.FpgaDevice(vendorType,247,0,null));
  assigned.add(new FpgaResourceAllocator.FpgaDevice(vendorType,247,1,null));
  mockStateStoreForContainer(c0,assigned);
  configuration.set(YarnConfiguration.NM_FPGA_ALLOWED_DEVICES,"0,1,2");
  fpgaResourceHandler.bootstrap(configuration);
  Assert.assertEquals(0,fpgaResourceHandler.getFpgaAllocator().getUsedFpgaCount());
  Assert.assertEquals(3,fpgaResourceHandler.getFpgaAllocator().getAvailableFpgaCount());
  fpgaResourceHandler.reacquireContainer(getContainerId(0));
  List<FpgaResourceAllocator.FpgaDevice> used=fpgaResourceHandler.getFpgaAllocator().getUsedFpga().get(getContainerId(0).toString());
  int count=0;
  for (  FpgaResourceAllocator.FpgaDevice device : used) {
    if (device.getMinor().equals(0)) {
      count++;
    }
    if (device.getMinor().equals(1)) {
      count++;
    }
  }
  Assert.assertEquals("Unexpected used minor number in allocator",2,count);
  List<FpgaResourceAllocator.FpgaDevice> available=fpgaResourceHandler.getFpgaAllocator().getAvailableFpga().get(vendorType);
  count=0;
  for (  FpgaResourceAllocator.FpgaDevice device : available) {
    if (device.getMinor().equals(2)) {
      count++;
    }
  }
  Assert.assertEquals("Unexpected available minor number in allocator",1,count);
  Container c1=mockContainer(1,1,"GEMM");
  assigned=new ArrayList<>();
  assigned.add(new FpgaResourceAllocator.FpgaDevice(vendorType,247,5,null));
  mockStateStoreForContainer(c1,assigned);
  boolean flag=false;
  try {
    fpgaResourceHandler.reacquireContainer(getContainerId(1));
  }
 catch (  ResourceHandlerException e) {
    flag=true;
  }
  Assert.assertTrue(flag);
  Assert.assertEquals(2,fpgaResourceHandler.getFpgaAllocator().getUsedFpgaCount());
  Assert.assertEquals(1,fpgaResourceHandler.getFpgaAllocator().getAvailableFpgaCount());
  Container c2=mockContainer(2,1,"GEMM");
  assigned=new ArrayList<>();
  assigned.add(new FpgaResourceAllocator.FpgaDevice(vendorType,247,1,null));
  mockStateStoreForContainer(c2,assigned);
  flag=false;
  try {
    fpgaResourceHandler.reacquireContainer(getContainerId(2));
  }
 catch (  ResourceHandlerException e) {
    flag=true;
  }
  Assert.assertTrue(flag);
  Assert.assertEquals(2,fpgaResourceHandler.getFpgaAllocator().getUsedFpgaCount());
  Assert.assertEquals(1,fpgaResourceHandler.getFpgaAllocator().getAvailableFpgaCount());
  Container c3=mockContainer(3,1,"GEMM");
  assigned=new ArrayList<>();
  assigned.add(new FpgaResourceAllocator.FpgaDevice(vendorType,247,2,null));
  mockStateStoreForContainer(c3,assigned);
  fpgaResourceHandler.reacquireContainer(getContainerId(3));
  Assert.assertEquals(3,fpgaResourceHandler.getFpgaAllocator().getUsedFpgaCount());
  Assert.assertEquals(0,fpgaResourceHandler.getFpgaAllocator().getAvailableFpgaCount());
}
