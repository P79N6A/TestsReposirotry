@Test public void testSchedulingPolicyViolationInTheMiddleLevel() throws IOException {
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<queue name=\"root\">");
  out.println("<schedulingPolicy>fair</schedulingPolicy>");
  out.println("  <queue name=\"level2\">");
  out.println("    <schedulingPolicy>fair</schedulingPolicy>");
  out.println("    <queue name=\"level3\">");
  out.println("    <schedulingPolicy>drf</schedulingPolicy>");
  out.println("       <queue name=\"leaf\">");
  out.println("       <schedulingPolicy>fair</schedulingPolicy>");
  out.println("       </queue>");
  out.println("    </queue>");
  out.println("  </queue>");
  out.println("</queue>");
  out.println("</allocations>");
  out.close();
  scheduler.init(conf);
  FSQueue level2=scheduler.getQueueManager().getQueue("level2");
  assertNotNull("Queue 'level2' shouldn't be null since its policy is allowed" + " to be 'fair' if its parent policy is 'fair'.",level2);
  FSQueue level3=scheduler.getQueueManager().getQueue("level2.level3");
  assertNull("Queue 'level3' should be null since its policy isn't allowed" + " to be 'drf' if its parent policy is 'fair'.",level3);
  FSQueue leaf=scheduler.getQueueManager().getQueue("level2.level3.leaf");
  assertNull("Queue 'leaf' should be null since its parent failed to create.",leaf);
}
