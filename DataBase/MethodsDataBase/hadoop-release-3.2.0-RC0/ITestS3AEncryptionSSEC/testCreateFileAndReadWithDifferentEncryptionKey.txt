/** 
 * This will create and write to a file using encryption key A, then attempt to read from it again with encryption key B.  This will not work as it cannot decrypt the file. This is expected AWS S3 SSE-C behavior.
 * @throws Exception
 */
@Test public void testCreateFileAndReadWithDifferentEncryptionKey() throws Exception {
  assumeEnabled();
  skipIfEncryptionTestsDisabled(getConfiguration());
  intercept(AccessDeniedException.class,SERVICE_AMAZON_S3_STATUS_CODE_403,() -> {
    int len=TEST_FILE_LEN;
    describe("Create an encrypted file of size " + len);
    Path src=path("testCreateFileAndReadWithDifferentEncryptionKey");
    writeThenReadFile(src,len);
    fsKeyB=createNewFileSystemWithSSECKey("kX7SdwVc/1VXJr76kfKnkQ3ONYhxianyL2+C3rPVT9s=");
    byte[] data=dataset(len,'a','z');
    ContractTestUtils.verifyFileContents(fsKeyB,src,data);
    return fsKeyB.getFileStatus(src);
  }
);
}
