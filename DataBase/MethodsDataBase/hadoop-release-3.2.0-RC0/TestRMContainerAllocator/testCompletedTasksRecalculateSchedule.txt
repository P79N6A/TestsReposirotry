@Test public void testCompletedTasksRecalculateSchedule() throws Exception {
  LOG.info("Running testCompletedTasksRecalculateSchedule");
  Configuration conf=new Configuration();
  final MyResourceManager rm=new MyResourceManager(conf);
  rm.start();
  RMApp app=rm.submitApp(1024);
  rm.drainEvents();
  MockNM amNodeManager=rm.registerNode("amNM:1234",2048);
  amNodeManager.nodeHeartbeat(true);
  rm.drainEvents();
  ApplicationAttemptId appAttemptId=app.getCurrentAppAttempt().getAppAttemptId();
  rm.sendAMLaunched(appAttemptId);
  rm.drainEvents();
  JobId jobId=MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0);
  Job job=mock(Job.class);
  when(job.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,"job","user",JobState.RUNNING,0,0,0,0,0,0,0,"jobfile",null,false,""));
  doReturn(10).when(job).getTotalMaps();
  doReturn(10).when(job).getTotalReduces();
  doReturn(0).when(job).getCompletedMaps();
  RecalculateContainerAllocator allocator=new RecalculateContainerAllocator(rm,conf,appAttemptId,job);
  allocator.schedule();
  allocator.recalculatedReduceSchedule=false;
  allocator.schedule();
  Assert.assertFalse("Unexpected recalculate of reduce schedule",allocator.recalculatedReduceSchedule);
  doReturn(1).when(job).getCompletedMaps();
  allocator.schedule();
  Assert.assertTrue("Expected recalculate of reduce schedule",allocator.recalculatedReduceSchedule);
}
