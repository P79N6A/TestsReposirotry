/** 
 * Verify the support for decommissioning a datanode that is already dead. Under this scenario the datanode should immediately be marked as DECOMMISSIONED
 */
@Test(timeout=120000) public void testDecommissionDeadDN() throws Exception {
  Logger log=Logger.getLogger(DatanodeAdminManager.class);
  log.setLevel(Level.DEBUG);
  DatanodeID dnID=cluster.getDataNodes().get(0).getDatanodeId();
  String dnName=dnID.getXferAddr();
  DataNodeProperties stoppedDN=cluster.stopDataNode(0);
  DFSTestUtil.waitForDatanodeState(cluster,dnID.getDatanodeUuid(),false,30000);
  FSNamesystem fsn=cluster.getNamesystem();
  final DatanodeManager dm=fsn.getBlockManager().getDatanodeManager();
  DatanodeDescriptor dnDescriptor=dm.getDatanode(dnID);
  decommissionNode(dnName);
  dm.refreshNodes(conf);
  BlockManagerTestUtil.recheckDecommissionState(dm);
  assertTrue(dnDescriptor.isDecommissioned());
  cluster.restartDataNode(stoppedDN,true);
  cluster.waitActive();
  hostsFileWriter.initExcludeHost("");
  dm.refreshNodes(conf);
}
