/** 
 * Test creation of snapshot on directory which changes its erasure coding policy.
 */
@Test public void testSnapshotsOnErasureCodingDirAfterECPolicyChanges() throws Exception {
  final Path ecDir=new Path("/ecdir");
  fs.mkdirs(ecDir);
  fs.allowSnapshot(ecDir);
  final Path snap1=fs.createSnapshot(ecDir,"snap1");
  assertNull("Expected null erasure coding policy",fs.getErasureCodingPolicy(snap1));
  final ErasureCodingPolicy ec63Policy=SystemErasureCodingPolicies.getByID(SystemErasureCodingPolicies.RS_6_3_POLICY_ID);
  fs.setErasureCodingPolicy(ecDir,ec63Policy.getName());
  final Path snap2=fs.createSnapshot(ecDir,"snap2");
  assertEquals("Got unexpected erasure coding policy",ec63Policy,fs.getErasureCodingPolicy(snap2));
  fs.unsetErasureCodingPolicy(ecDir);
  final Path snap3=fs.createSnapshot(ecDir,"snap3");
  assertNull("Expected null erasure coding policy",fs.getErasureCodingPolicy(snap3));
  final ErasureCodingPolicy ec32Policy=SystemErasureCodingPolicies.getByID(SystemErasureCodingPolicies.RS_3_2_POLICY_ID);
  fs.enableErasureCodingPolicy(ec32Policy.getName());
  fs.setErasureCodingPolicy(ecDir,ec32Policy.getName());
  final Path snap4=fs.createSnapshot(ecDir,"snap4");
  assertEquals("Got unexpected erasure coding policy",ec32Policy,fs.getErasureCodingPolicy(snap4));
  assertNull("Expected null erasure coding policy",fs.getErasureCodingPolicy(snap1));
  assertEquals("Got unexpected erasure coding policy",ec63Policy,fs.getErasureCodingPolicy(snap2));
  assertNull("Expected null erasure coding policy",fs.getErasureCodingPolicy(snap3));
}
