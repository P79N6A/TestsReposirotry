@Test public void testBlobDataReader() throws Exception {
  String clientId=this.getConfiguration().get(TestConfigurationKeys.FS_AZURE_BLOB_DATA_READER_CLIENT_ID);
  Assume.assumeTrue("Reader client id not provided",clientId != null);
  String secret=this.getConfiguration().get(TestConfigurationKeys.FS_AZURE_BLOB_DATA_READER_CLIENT_SECRET);
  Assume.assumeTrue("Reader client secret not provided",secret != null);
  prepareFiles();
  final AzureBlobFileSystem fs=getBlobReader();
  AzureBlobFileSystemStore abfsStore=fs.getAbfsStore();
  Map<String,String> properties=abfsStore.getFilesystemProperties();
  assertTrue(fs.exists(EXISTED_FOLDER_PATH));
  try {
    abfsStore.delete(EXISTED_FOLDER_PATH,true);
  }
 catch (  AbfsRestOperationException e) {
    assertEquals(AzureServiceErrorCode.AUTHORIZATION_PERMISSION_MISS_MATCH,e.getErrorCode());
  }
  try (InputStream inputStream=abfsStore.openFileForRead(EXISTED_FILE_PATH,null)){
    assertTrue(inputStream.read() != 0);
  }
   try {
    abfsStore.openFileForWrite(EXISTED_FILE_PATH,true);
  }
 catch (  AbfsRestOperationException e) {
    assertEquals(AzureServiceErrorCode.AUTHORIZATION_PERMISSION_MISS_MATCH,e.getErrorCode());
  }
}
