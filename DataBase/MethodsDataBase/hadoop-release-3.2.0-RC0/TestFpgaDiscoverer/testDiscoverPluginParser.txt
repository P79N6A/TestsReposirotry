@Test public void testDiscoverPluginParser() throws YarnException {
  String output="------------------------- acl0 -------------------------\n" + "Vendor: Nallatech ltd\n" + "Phys Dev Name  Status   Information\n"+ "aclnalla_pcie0Passed   nalla_pcie (aclnalla_pcie0)\n"+ "                       PCIe dev_id = 2494, bus:slot.func = 02:00.00, Gen3 x8\n"+ "                       FPGA temperature = 53.1 degrees C.\n"+ "                       Total Card Power Usage = 31.7 Watts.\n"+ "                       Device Power Usage = 0.0 Watts.\n"+ "DIAGNOSTIC_PASSED"+ "---------------------------------------------------------\n";
  output=output + "------------------------- acl1 -------------------------\n" + "Vendor: Nallatech ltd\n"+ "Phys Dev Name  Status   Information\n"+ "aclnalla_pcie1Passed   nalla_pcie (aclnalla_pcie1)\n"+ "                       PCIe dev_id = 2495, bus:slot.func = 03:00.00, Gen3 x8\n"+ "                       FPGA temperature = 43.1 degrees C.\n"+ "                       Total Card Power Usage = 11.7 Watts.\n"+ "                       Device Power Usage = 0.0 Watts.\n"+ "DIAGNOSTIC_PASSED"+ "---------------------------------------------------------\n";
  output=output + "------------------------- acl2 -------------------------\n" + "Vendor: Intel(R) Corporation\n"+ "\n"+ "Phys Dev Name  Status   Information\n"+ "\n"+ "acla10_ref0   Passed   Arria 10 Reference Platform (acla10_ref0)\n"+ "                       PCIe dev_id = 2494, bus:slot.func = 09:00.00, Gen2 x8\n"+ "                       FPGA temperature = 50.5781 degrees C.\n"+ "\n"+ "DIAGNOSTIC_PASSED\n"+ "---------------------------------------------------------\n";
  Configuration conf=new Configuration(false);
  IntelFpgaOpenclPlugin openclPlugin=new IntelFpgaOpenclPlugin();
  FpgaDiscoverer.getInstance().setResourceHanderPlugin(openclPlugin);
  openclPlugin.initPlugin(conf);
  openclPlugin.setShell(mockPuginShell());
  FpgaDiscoverer.getInstance().initialize(conf);
  List<FpgaResourceAllocator.FpgaDevice> list=new LinkedList<>();
  openclPlugin.parseDiagnoseInfo(output,list);
  Assert.assertEquals(3,list.size());
  Assert.assertEquals("IntelOpenCL",list.get(0).getType());
  Assert.assertEquals("247",list.get(0).getMajor().toString());
  Assert.assertEquals("0",list.get(0).getMinor().toString());
  Assert.assertEquals("acl0",list.get(0).getAliasDevName());
  Assert.assertEquals("aclnalla_pcie0",list.get(0).getDevName());
  Assert.assertEquals("02:00.00",list.get(0).getBusNum());
  Assert.assertEquals("53.1 degrees C",list.get(0).getTemperature());
  Assert.assertEquals("31.7 Watts",list.get(0).getCardPowerUsage());
  Assert.assertEquals("IntelOpenCL",list.get(1).getType());
  Assert.assertEquals("247",list.get(1).getMajor().toString());
  Assert.assertEquals("1",list.get(1).getMinor().toString());
  Assert.assertEquals("acl1",list.get(1).getAliasDevName());
  Assert.assertEquals("aclnalla_pcie1",list.get(1).getDevName());
  Assert.assertEquals("03:00.00",list.get(1).getBusNum());
  Assert.assertEquals("43.1 degrees C",list.get(1).getTemperature());
  Assert.assertEquals("11.7 Watts",list.get(1).getCardPowerUsage());
  Assert.assertEquals("IntelOpenCL",list.get(2).getType());
  Assert.assertEquals("246",list.get(2).getMajor().toString());
  Assert.assertEquals("0",list.get(2).getMinor().toString());
  Assert.assertEquals("acl2",list.get(2).getAliasDevName());
  Assert.assertEquals("acla10_ref0",list.get(2).getDevName());
  Assert.assertEquals("09:00.00",list.get(2).getBusNum());
  Assert.assertEquals("50.5781 degrees C",list.get(2).getTemperature());
  Assert.assertEquals("",list.get(2).getCardPowerUsage());
  Map<String,String> aliasMap=openclPlugin.getAliasMap();
  Assert.assertEquals("acl0",aliasMap.get("247:0"));
  Assert.assertEquals("acl1",aliasMap.get("247:1"));
  Assert.assertEquals("acl2",aliasMap.get("246:0"));
}
