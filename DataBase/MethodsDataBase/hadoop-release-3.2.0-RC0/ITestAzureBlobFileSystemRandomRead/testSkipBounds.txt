/** 
 * Validates the implementation of InputStream.skip and ensures there is no network I/O for AbfsInputStream
 * @throws Exception
 */
@Test public void testSkipBounds() throws Exception {
  assumeHugeFileExists();
  try (FSDataInputStream inputStream=this.getFileSystem().open(TEST_FILE_PATH)){
    ContractTestUtils.NanoTimer timer=new ContractTestUtils.NanoTimer();
    long skipped=inputStream.skip(-1);
    assertEquals(0,skipped);
    skipped=inputStream.skip(0);
    assertEquals(0,skipped);
    assertTrue(testFileLength > 0);
    skipped=inputStream.skip(testFileLength);
    assertEquals(testFileLength,skipped);
    intercept(EOFException.class,new Callable<Long>(){
      @Override public Long call() throws Exception {
        return inputStream.skip(1);
      }
    }
);
    long elapsedTimeMs=timer.elapsedTimeMs();
    assertTrue(String.format("There should not be any network I/O (elapsedTimeMs=%1$d).",elapsedTimeMs),elapsedTimeMs < MAX_ELAPSEDTIMEMS);
  }
 }
