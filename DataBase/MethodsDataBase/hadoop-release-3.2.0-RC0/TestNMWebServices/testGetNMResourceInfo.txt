@Test public void testGetNMResourceInfo() throws YarnException, InterruptedException, JSONException {
  ResourcePluginManager rpm=mock(ResourcePluginManager.class);
  Map<String,ResourcePlugin> namesToPlugins=new HashMap<>();
  ResourcePlugin mockPlugin1=mock(ResourcePlugin.class);
  NMResourceInfo nmResourceInfo1=new NMResourceInfo(){
    public long a=1000L;
  }
;
  when(mockPlugin1.getNMResourceInfo()).thenReturn(nmResourceInfo1);
  namesToPlugins.put("resource-1",mockPlugin1);
  namesToPlugins.put("yarn.io/resource-1",mockPlugin1);
  ResourcePlugin mockPlugin2=mock(ResourcePlugin.class);
  namesToPlugins.put("resource-2",mockPlugin2);
  when(rpm.getNameToPlugins()).thenReturn(namesToPlugins);
  nmContext.setResourcePluginManager(rpm);
  WebResource r=resource();
  ClientResponse response=r.path("ws").path("v1").path("node").path("resources").path("resource-2").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON + "; " + JettyUtils.UTF_8,response.getType().toString());
  JSONObject json=response.getEntity(JSONObject.class);
  Assert.assertEquals(0,json.length());
  response=r.path("ws").path("v1").path("node").path("resources").path("resource-3").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON + "; " + JettyUtils.UTF_8,response.getType().toString());
  json=response.getEntity(JSONObject.class);
  Assert.assertEquals(0,json.length());
  response=r.path("ws").path("v1").path("node").path("resources").path("resource-1").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON + "; " + JettyUtils.UTF_8,response.getType().toString());
  json=response.getEntity(JSONObject.class);
  Assert.assertEquals(1000,json.get("a"));
  response=r.path("ws").path("v1").path("node").path("resources").path("yarn.io%2Fresource-1").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON + "; " + JettyUtils.UTF_8,response.getType().toString());
  json=response.getEntity(JSONObject.class);
  Assert.assertEquals(1000,json.get("a"));
}
