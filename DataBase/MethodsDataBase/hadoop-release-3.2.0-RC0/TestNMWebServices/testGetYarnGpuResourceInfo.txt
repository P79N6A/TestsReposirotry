@Test public void testGetYarnGpuResourceInfo() throws YarnException, InterruptedException, JSONException {
  ResourcePluginManager rpm=mock(ResourcePluginManager.class);
  Map<String,ResourcePlugin> namesToPlugins=new HashMap<>();
  ResourcePlugin mockPlugin1=mock(ResourcePlugin.class);
  GpuDeviceInformation gpuDeviceInformation=new GpuDeviceInformation();
  gpuDeviceInformation.setDriverVersion("1.2.3");
  gpuDeviceInformation.setGpus(Arrays.asList(new PerGpuDeviceInformation()));
  NMResourceInfo nmResourceInfo1=new NMGpuResourceInfo(gpuDeviceInformation,Arrays.asList(new GpuDevice(1,1),new GpuDevice(2,2),new GpuDevice(3,3)),Arrays.asList(new AssignedGpuDevice(2,2,createContainerId(1)),new AssignedGpuDevice(3,3,createContainerId(2))));
  when(mockPlugin1.getNMResourceInfo()).thenReturn(nmResourceInfo1);
  namesToPlugins.put("resource-1",mockPlugin1);
  namesToPlugins.put("yarn.io/resource-1",mockPlugin1);
  ResourcePlugin mockPlugin2=mock(ResourcePlugin.class);
  namesToPlugins.put("resource-2",mockPlugin2);
  when(rpm.getNameToPlugins()).thenReturn(namesToPlugins);
  nmContext.setResourcePluginManager(rpm);
  WebResource r=resource();
  ClientResponse response;
  JSONObject json;
  response=r.path("ws").path("v1").path("node").path("resources").path("resource-1").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON + "; " + JettyUtils.UTF_8,response.getType().toString());
  json=response.getEntity(JSONObject.class);
  Assert.assertEquals("1.2.3",json.getJSONObject("gpuDeviceInformation").get("driverVersion"));
  Assert.assertEquals(3,json.getJSONArray("totalGpuDevices").length());
  Assert.assertEquals(2,json.getJSONArray("assignedGpuDevices").length());
  Assert.assertEquals(2,json.getJSONArray("assignedGpuDevices").length());
}
