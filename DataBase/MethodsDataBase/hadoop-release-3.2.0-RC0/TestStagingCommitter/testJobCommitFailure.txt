@Test public void testJobCommitFailure() throws Exception {
  Path jobAttemptPath=jobCommitter.getJobAttemptPath(job);
  FileSystem fs=jobAttemptPath.getFileSystem(conf);
  Set<String> uploads=runTasks(job,4,3);
  assertPathExists(fs,"No job attempt path",jobAttemptPath);
  errors.failOnCommit(5);
  setMockLogLevel(MockS3AFileSystem.LOG_NAME);
  intercept(AWSClientIOException.class,"Fail on commit 5","Should propagate the commit failure",() -> {
    jobCommitter.commitJob(job);
    return jobCommitter.toString();
  }
);
  assertEquals("Should have succeeded to commit some uploads",5,results.getCommits().size());
  assertEquals("Should have deleted the files that succeeded",5,results.getDeletes().size());
  Set<String> commits=results.getCommits().stream().map((commit) -> commit.getBucketName() + commit.getKey()).collect(Collectors.toSet());
  Set<String> deletes=results.getDeletes().stream().map((delete) -> delete.getBucketName() + delete.getKey()).collect(Collectors.toSet());
  assertEquals("Committed and deleted objects should match",commits,deletes);
  assertEquals("Mismatch in aborted upload count",7,results.getAborts().size());
  Set<String> uploadIds=getCommittedIds(results.getCommits());
  uploadIds.addAll(getAbortedIds(results.getAborts()));
  assertEquals("Should have committed/deleted or aborted all uploads",uploads,uploadIds);
  assertPathDoesNotExist(fs,"jobAttemptPath not deleted",jobAttemptPath);
}
