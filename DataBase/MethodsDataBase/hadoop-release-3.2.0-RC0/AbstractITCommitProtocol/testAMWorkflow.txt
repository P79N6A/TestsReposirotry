/** 
 * Create a committer through reflection then use it to abort a task. This mimics the action of an AM when a container fails and the AM wants to abort the task attempt.
 */
@Test public void testAMWorkflow() throws Throwable {
  describe("Create a committer with a null output path & use as an AM");
  JobData jobData=startJob(true);
  JobContext jContext=jobData.jContext;
  TaskAttemptContext tContext=jobData.tContext;
  TaskAttemptContext newAttempt=taskAttemptForJob(MRBuilderUtils.newJobId(1,1,1),jContext);
  Configuration conf=jContext.getConfiguration();
  LoggingTextOutputFormat.bind(conf);
  OutputFormat<?,?> outputFormat=ReflectionUtils.newInstance(newAttempt.getOutputFormatClass(),conf);
  Path outputPath=FileOutputFormat.getOutputPath(newAttempt);
  assertNotNull("null output path in new task attempt",outputPath);
  AbstractS3ACommitter committer2=(AbstractS3ACommitter)outputFormat.getOutputCommitter(newAttempt);
  committer2.abortTask(tContext);
  assertNoMultipartUploadsPending(getOutDir());
}
