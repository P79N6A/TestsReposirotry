@Test(timeout=200000) public void testContainersFromPreviousAttemptsWithRMRestart() throws Exception {
  ApplicationId applicationId=ApplicationId.newInstance(System.currentTimeMillis(),1);
  Service exampleApp=new Service();
  exampleApp.setId(applicationId.toString());
  exampleApp.setVersion("v1");
  exampleApp.setName("testContainersRecovers");
  String comp1Name="comp1";
  String comp1InstName="comp1-0";
  org.apache.hadoop.yarn.service.api.records.Component compA=createComponent(comp1Name,1,"sleep");
  exampleApp.addComponent(compA);
  MockServiceAM am=new MockServiceAM(exampleApp);
  ContainerId containerId=am.createContainerId(1);
  am.feedRegistryComponent(containerId,comp1Name,comp1InstName);
  am.init(conf);
  am.start();
  ComponentInstance comp10=am.getCompInstance(comp1Name,comp1InstName);
  am.feedRecoveredContainer(containerId,comp1Name);
  am.waitForCompInstanceState(comp10,ComponentInstanceState.STARTED);
  Assert.assertEquals(0,am.getComponent(comp1Name).getPendingInstances().size());
  GenericTestUtils.waitFor(() -> am.getCompInstance(comp1Name,comp1InstName).getContainerStatus() != null,2000,200000);
  Assert.assertEquals("container state",org.apache.hadoop.yarn.api.records.ContainerState.RUNNING,am.getCompInstance(comp1Name,comp1InstName).getContainerStatus().getState());
  am.stop();
}
