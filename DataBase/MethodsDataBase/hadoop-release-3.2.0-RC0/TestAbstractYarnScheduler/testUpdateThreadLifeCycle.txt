@Test(timeout=10000) public void testUpdateThreadLifeCycle() throws Exception {
  MockRM rm=new MockRM(getConf());
  try {
    rm.start();
    AbstractYarnScheduler scheduler=(AbstractYarnScheduler)rm.getResourceScheduler();
    if (getSchedulerType().equals(SchedulerType.FAIR)) {
      Thread updateThread=scheduler.updateThread;
      Assert.assertTrue(updateThread.isAlive());
      scheduler.stop();
      int numRetries=100;
      while (numRetries-- > 0 && updateThread.isAlive()) {
        Thread.sleep(50);
      }
      Assert.assertNotEquals("The Update thread is still alive",0,numRetries);
    }
 else     if (getSchedulerType().equals(SchedulerType.CAPACITY)) {
      Assert.assertNull("updateThread shouldn't have been created",scheduler.updateThread);
    }
 else {
      Assert.fail("Unhandled SchedulerType, " + getSchedulerType() + ", please update this unit test.");
    }
  }
  finally {
    rm.stop();
  }
}
