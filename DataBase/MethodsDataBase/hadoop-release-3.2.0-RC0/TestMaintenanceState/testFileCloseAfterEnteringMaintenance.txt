@Test(timeout=120000) public void testFileCloseAfterEnteringMaintenance() throws Exception {
  LOG.info("Starting testFileCloseAfterEnteringMaintenance");
  int expirationInMs=30 * 1000;
  int numDataNodes=3;
  int numNameNodes=1;
  getConf().setInt(DFSConfigKeys.DFS_NAMENODE_REPLICATION_MIN_KEY,2);
  startCluster(numNameNodes,numDataNodes);
  getCluster().waitActive();
  FSNamesystem fsn=getCluster().getNameNode().getNamesystem();
  List<String> hosts=new ArrayList<>();
  for (  DataNode dn : getCluster().getDataNodes()) {
    hosts.add(dn.getDisplayName());
    putNodeInService(0,dn.getDatanodeUuid());
  }
  assertEquals(numDataNodes,fsn.getNumLiveDataNodes());
  Path openFile=new Path("/testClosingFileInMaintenance.dat");
  writeFile(getCluster().getFileSystem(),openFile,(short)3);
  FSDataOutputStream fsDataOutputStream=getCluster().getFileSystem().append(openFile);
  byte[] bytes=new byte[1024];
  fsDataOutputStream.write(bytes);
  fsDataOutputStream.hsync();
  LocatedBlocks lbs=NameNodeAdapter.getBlockLocations(getCluster().getNameNode(0),openFile.toString(),0,3 * blockSize);
  DatanodeInfo[] dnInfos4LastBlock=lbs.getLastLocatedBlock().getLocations();
  takeNodeOutofService(0,Lists.newArrayList(dnInfos4LastBlock[0].getDatanodeUuid(),dnInfos4LastBlock[1].getDatanodeUuid()),Time.now() + expirationInMs,null,null,AdminStates.ENTERING_MAINTENANCE);
  fsDataOutputStream.close();
  cleanupFile(getCluster().getFileSystem(),openFile);
}
