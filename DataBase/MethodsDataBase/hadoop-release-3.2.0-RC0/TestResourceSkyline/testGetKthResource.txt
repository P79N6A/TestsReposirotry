@Test public final void testGetKthResource(){
  Assert.assertNull(resourceSkyline);
  ReservationInterval riAdd=new ReservationInterval(10,20);
  skylineList.addInterval(riAdd,resource1);
  riAdd=new ReservationInterval(20,30);
  skylineList.addInterval(riAdd,resource2);
  resourceSkyline=new ResourceSkyline("1",1024.5,0,20,resource1,skylineList);
  final RLESparseResourceAllocation skylineList2=resourceSkyline.getSkylineList();
  for (int i=10; i < 20; i++) {
    Assert.assertEquals(resource1.getMemorySize(),skylineList2.getCapacityAtTime(i).getMemorySize());
    Assert.assertEquals(resource1.getVirtualCores(),skylineList2.getCapacityAtTime(i).getVirtualCores());
  }
  for (int i=20; i < 30; i++) {
    Assert.assertEquals(resource2.getMemorySize(),skylineList2.getCapacityAtTime(i).getMemorySize());
    Assert.assertEquals(resource2.getVirtualCores(),skylineList2.getCapacityAtTime(i).getVirtualCores());
  }
  Assert.assertEquals(0,skylineList2.getCapacityAtTime(9).getMemorySize());
  Assert.assertEquals(0,skylineList2.getCapacityAtTime(9).getVirtualCores());
  Assert.assertEquals(0,skylineList2.getCapacityAtTime(30).getMemorySize());
  Assert.assertEquals(0,skylineList2.getCapacityAtTime(30).getVirtualCores());
}
