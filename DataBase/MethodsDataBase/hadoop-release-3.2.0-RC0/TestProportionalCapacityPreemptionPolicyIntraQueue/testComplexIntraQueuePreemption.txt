@Test public void testComplexIntraQueuePreemption() throws IOException {
  conf.setFloat(CapacitySchedulerConfiguration.TOTAL_PREEMPTION_PER_ROUND,(float)0.5);
  conf.setFloat(CapacitySchedulerConfiguration.INTRAQUEUE_PREEMPTION_MAX_ALLOWABLE_LIMIT,(float)0.5);
  conf.set(CapacitySchedulerConfiguration.INTRAQUEUE_PREEMPTION_ORDER_POLICY,"priority_first");
  String labelsConfig="=100,true;";
  String nodesConfig="n1= res=100";
  String queuesConfig="root(=[100 100 75 130 0]);" + "-a(=[10 100 5 50 0]);" + "-b(=[40 100 35 60 0]);"+ "-c(=[20 100 10 10 0]);"+ "-d(=[30 100 25 10 0])";
  String appsConfig="a\t" + "(1,1,n1,,5,false,25);" + "a\t"+ "(4,1,n1,,0,false,25);"+ "a\t"+ "(5,1,n1,,0,false,2);"+ "b\t"+ "(3,1,n1,,5,false,20);"+ "b\t"+ "(4,1,n1,,15,false,10);"+ "b\t"+ "(4,1,n1,,10,false,10);"+ "b\t"+ "(5,1,n1,,3,false,5);"+ "b\t"+ "(5,1,n1,,0,false,2);"+ "b\t"+ "(6,1,n1,,2,false,10);"+ "c\t"+ "(1,1,n1,,8,false,10);"+ "c\t"+ "(1,1,n1,,2,false,5);"+ "c\t"+ "(2,1,n1,,0,false,3);"+ "d\t"+ "(2,1,n1,,25,false,0);"+ "d\t"+ "(1,1,n1,,0,false,20)";
  buildEnv(labelsConfig,nodesConfig,queuesConfig,appsConfig);
  policy.editSchedule();
  verify(mDisp,times(4)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(1))));
  verify(mDisp,times(4)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(4))));
  verify(mDisp,times(9)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(6))));
  verify(mDisp,times(4)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(5))));
  verify(mDisp,times(2)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(10))));
  verify(mDisp,times(1)).handle(argThat(new TestProportionalCapacityPreemptionPolicy.IsPreemptionRequestFor(getAppAttemptId(11))));
}
