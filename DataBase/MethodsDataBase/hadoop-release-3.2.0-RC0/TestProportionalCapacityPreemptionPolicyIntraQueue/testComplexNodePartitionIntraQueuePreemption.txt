@Test public void testComplexNodePartitionIntraQueuePreemption() throws IOException {
  conf.setFloat(CapacitySchedulerConfiguration.INTRAQUEUE_PREEMPTION_MAX_ALLOWABLE_LIMIT,(float)0.5);
  conf.set(CapacitySchedulerConfiguration.INTRAQUEUE_PREEMPTION_ORDER_POLICY,"priority_first");
  String labelsConfig="=100,true;" + "x=100,true";
  String nodesConfig="n1=x;" + "n2=";
  String queuesConfig="root(=[100 100 100 100],x=[100 100 100 100]);" + "-a(=[50 100 50 50],x=[50 100 40 50]);" + "-b(=[50 100 35 50],x=[50 100 50 50])";
  String appsConfig="a\t" + "(1,1,n1,x,35,false,10);" + "a\t"+ "(1,1,n1,x,5,false,10);"+ "a\t"+ "(2,1,n1,x,0,false,20);"+ "a\t"+ "(1,1,n2,,50,false);"+ "b\t"+ "(1,1,n1,x,50,false);"+ "b\t"+ "(1,1,n2,,25,false);"+ "b\t"+ "(1,1,n2,,3,false);"+ "b\t"+ "(1,1,n2,,2,false);"+ "b\t"+ "(5,1,n2,,5,false,30)";
  buildEnv(labelsConfig,nodesConfig,queuesConfig,appsConfig);
  policy.editSchedule();
  verify(mDisp,times(16)).handle(argThat(new IsPreemptionRequestFor(getAppAttemptId(1))));
  verify(mDisp,times(4)).handle(argThat(new IsPreemptionRequestFor(getAppAttemptId(2))));
  verify(mDisp,times(1)).handle(argThat(new IsPreemptionRequestFor(getAppAttemptId(8))));
  verify(mDisp,times(2)).handle(argThat(new IsPreemptionRequestFor(getAppAttemptId(7))));
  verify(mDisp,times(22)).handle(argThat(new IsPreemptionRequestFor(getAppAttemptId(6))));
}
