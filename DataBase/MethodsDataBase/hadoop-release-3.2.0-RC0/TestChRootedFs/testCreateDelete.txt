/** 
 * Test modify operations (create, mkdir, delete, etc)  Verify the operation via chrootedfs (ie fc) and *also* via the target file system (ie fclocal) that has been chrooted.
 */
@Test public void testCreateDelete() throws IOException {
  fileContextTestHelper.createFileNonRecursive(fc,"/foo");
  Assert.assertTrue(isFile(fc,new Path("/foo")));
  Assert.assertTrue(isFile(fcTarget,new Path(chrootedTo,"foo")));
  fileContextTestHelper.createFile(fc,"/newDir/foo");
  Assert.assertTrue(isFile(fc,new Path("/newDir/foo")));
  Assert.assertTrue(isFile(fcTarget,new Path(chrootedTo,"newDir/foo")));
  Assert.assertTrue(fc.delete(new Path("/newDir/foo"),false));
  Assert.assertFalse(exists(fc,new Path("/newDir/foo")));
  Assert.assertFalse(exists(fcTarget,new Path(chrootedTo,"newDir/foo")));
  fileContextTestHelper.createFile(fc,"/newDir/newDir2/foo");
  Assert.assertTrue(isFile(fc,new Path("/newDir/newDir2/foo")));
  Assert.assertTrue(isFile(fcTarget,new Path(chrootedTo,"newDir/newDir2/foo")));
  Assert.assertTrue(fc.delete(new Path("/newDir/newDir2/foo"),false));
  Assert.assertFalse(exists(fc,new Path("/newDir/newDir2/foo")));
  Assert.assertFalse(exists(fcTarget,new Path(chrootedTo,"newDir/newDir2/foo")));
}
