@Test public void testEmptyLegacyBlockTokenBytesIsLegacy() throws IOException {
  BlockTokenIdentifier emptyIdent=new BlockTokenIdentifier();
  DataOutputBuffer dob=new DataOutputBuffer(4096);
  DataInputBuffer dib=new DataInputBuffer();
  emptyIdent.writeLegacy(dob);
  byte[] emptyIdentBytes=Arrays.copyOf(dob.getData(),dob.getLength());
  BlockTokenIdentifier legacyToken=new BlockTokenIdentifier();
  BlockTokenIdentifier protobufToken=new BlockTokenIdentifier();
  BlockTokenIdentifier readToken=new BlockTokenIdentifier();
  dib.reset(emptyIdentBytes,emptyIdentBytes.length);
  legacyToken.readFieldsLegacy(dib);
  boolean invalidProtobufMessage=false;
  try {
    dib.reset(emptyIdentBytes,emptyIdentBytes.length);
    protobufToken.readFieldsProtobuf(dib);
  }
 catch (  IOException e) {
    invalidProtobufMessage=true;
  }
  assertTrue(invalidProtobufMessage);
  dib.reset(emptyIdentBytes,emptyIdentBytes.length);
  readToken.readFields(dib);
}
