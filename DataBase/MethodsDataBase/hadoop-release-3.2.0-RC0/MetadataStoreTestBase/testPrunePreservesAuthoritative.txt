@Test public void testPrunePreservesAuthoritative() throws Exception {
  String rootDir="/unpruned-root-dir";
  String grandparentDir=rootDir + "/pruned-grandparent-dir";
  String parentDir=grandparentDir + "/pruned-parent-dir";
  String staleFile=parentDir + "/stale-file";
  String freshFile=rootDir + "/fresh-file";
  String[] directories={rootDir,grandparentDir,parentDir};
  createNewDirs(rootDir,grandparentDir,parentDir);
  long time=System.currentTimeMillis();
  ms.put(new PathMetadata(new FileStatus(0,false,0,0,time + 1,strToPath(staleFile)),Tristate.FALSE,false));
  ms.put(new PathMetadata(new FileStatus(0,false,0,0,time + 1,strToPath(freshFile)),Tristate.FALSE,false));
  if (!allowMissing()) {
    DirListingMetadata parentDirMd=ms.listChildren(strToPath(parentDir));
    parentDirMd.setAuthoritative(true);
    ms.put(parentDirMd);
    ms.prune(time);
    DirListingMetadata rootDirMd=ms.listChildren(strToPath(rootDir));
    DirListingMetadata grandParentDirMd=ms.listChildren(strToPath(grandparentDir));
    parentDirMd=ms.listChildren(strToPath(parentDir));
    assertFalse(rootDirMd.isAuthoritative());
    assertFalse(grandParentDirMd.isAuthoritative());
    assertTrue(parentDirMd.isAuthoritative());
  }
}
