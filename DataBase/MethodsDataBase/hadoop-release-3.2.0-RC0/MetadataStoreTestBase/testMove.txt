@Test public void testMove() throws Exception {
  createNewDirs("/a1","/a2","/a3");
  createNewDirs("/a1/b1","/a1/b2");
  putListStatusFiles("/a1/b1",false,"/a1/b1/file1","/a1/b1/file2");
  Collection<PathMetadata> entries;
  DirListingMetadata dirMeta=ms.listChildren(strToPath("/"));
  if (!allowMissing() || dirMeta != null) {
    dirMeta=dirMeta.withoutTombstones();
    assertNotNull("Listing root",dirMeta);
    entries=dirMeta.getListing();
    assertListingsEqual(entries,"/a1","/a2","/a3");
  }
  dirMeta=ms.listChildren(strToPath("/a1/b1"));
  if (!allowMissing() || dirMeta != null) {
    assertNotNull("Listing /a1/b1",dirMeta);
    entries=dirMeta.getListing();
    assertListingsEqual(entries,"/a1/b1/file1","/a1/b1/file2");
  }
  Collection<Path> srcPaths=Arrays.asList(strToPath("/a1/b1"),strToPath("/a1/b1/file1"),strToPath("/a1/b1/file2"));
  ArrayList<PathMetadata> destMetas=new ArrayList<>();
  destMetas.add(new PathMetadata(makeDirStatus("/b1")));
  destMetas.add(new PathMetadata(makeFileStatus("/b1/file1",100)));
  destMetas.add(new PathMetadata(makeFileStatus("/b1/file2",100)));
  ms.move(srcPaths,destMetas);
  dirMeta=ms.listChildren(strToPath("/a1"));
  if (!allowMissing() || dirMeta != null) {
    assertNotNull("Listing /a1",dirMeta);
    entries=dirMeta.withoutTombstones().getListing();
    assertListingsEqual(entries,"/a1/b2");
  }
  PathMetadata meta=ms.get(strToPath("/a1/b1/file1"));
  assertTrue("Src path deleted",meta == null || meta.isDeleted());
  meta=ms.get(strToPath("/b1/file1"));
  if (!allowMissing() || meta != null) {
    assertNotNull("dest file not null",meta);
    verifyFileStatus(meta.getFileStatus(),100);
  }
  dirMeta=ms.listChildren(strToPath("/b1"));
  if (!allowMissing() || dirMeta != null) {
    assertNotNull("dest listing not null",dirMeta);
    entries=dirMeta.getListing();
    assertListingsEqual(entries,"/b1/file1","/b1/file2");
  }
}
