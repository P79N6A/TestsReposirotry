@Test public void testDynamoTableTagging() throws Exception {
  Configuration conf=getConfiguration();
  String ddbRegion=conf.get(S3GUARD_DDB_REGION_KEY);
  Assume.assumeTrue(S3GUARD_DDB_REGION_KEY + " should be set to run this test",ddbRegion != null && !ddbRegion.isEmpty());
  conf.getPropsWithPrefix(S3GUARD_DDB_TABLE_TAG).keySet().forEach(propKey -> conf.unset(S3GUARD_DDB_TABLE_TAG + propKey));
  conf.set(S3GUARD_DDB_TABLE_NAME_KEY,"testDynamoTableTagging-" + UUID.randomUUID());
  S3GuardTool.Init cmdR=new S3GuardTool.Init(conf);
  Map<String,String> tagMap=new HashMap<>();
  tagMap.put("hello","dynamo");
  tagMap.put("tag","youre it");
  String[] argsR=new String[]{cmdR.getName(),"-tag",tagMapToStringParams(tagMap)};
  cmdR.run(argsR);
  try (DynamoDBMetadataStore ddbms=new DynamoDBMetadataStore()){
    ddbms.initialize(conf);
    ListTagsOfResourceRequest listTagsOfResourceRequest=new ListTagsOfResourceRequest().withResourceArn(ddbms.getTable().getDescription().getTableArn());
    List<Tag> tags=ddbms.getAmazonDynamoDB().listTagsOfResource(listTagsOfResourceRequest).getTags();
    assertEquals(tagMap.size(),tags.size());
    for (    Tag tag : tags) {
      Assert.assertEquals(tagMap.get(tag.getKey()),tag.getValue());
    }
    ddbms.destroy();
  }
 }
