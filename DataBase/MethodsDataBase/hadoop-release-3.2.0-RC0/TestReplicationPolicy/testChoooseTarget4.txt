/** 
 * In this testcase, client is dataNodes[0], but none of the nodes on rack 1 is qualified to be chosen. So the 1st replica should be placed on either rack 2 or rack 3.  the 2nd replica should be placed on a different rack, the 3rd replica should be placed on the same rack as the 1st replica,
 * @throws Exception
 */
@Test public void testChoooseTarget4() throws Exception {
  for (int i=0; i < 2; i++) {
    updateHeartbeatWithUsage(dataNodes[i],2 * HdfsServerConstants.MIN_BLOCKS_FOR_WRITE * BLOCK_SIZE,0L,(HdfsServerConstants.MIN_BLOCKS_FOR_WRITE - 1) * BLOCK_SIZE,0L,0L,0L,0,0);
  }
  DatanodeStorageInfo[] targets;
  targets=chooseTarget(0);
  assertEquals(targets.length,0);
  targets=chooseTarget(1);
  assertEquals(targets.length,1);
  assertFalse(isOnSameRack(targets[0],dataNodes[0]));
  targets=chooseTarget(2);
  assertEquals(targets.length,2);
  assertFalse(isOnSameRack(targets[0],dataNodes[0]));
  assertFalse(isOnSameRack(targets[0],targets[1]));
  targets=chooseTarget(3);
  assertEquals(targets.length,3);
  for (int i=0; i < 3; i++) {
    assertFalse(isOnSameRack(targets[i],dataNodes[0]));
  }
  assertTrue(isOnSameRack(targets[0],targets[1]) || isOnSameRack(targets[1],targets[2]));
  assertFalse(isOnSameRack(targets[0],targets[2]));
  resetHeartbeatForStorages();
}
