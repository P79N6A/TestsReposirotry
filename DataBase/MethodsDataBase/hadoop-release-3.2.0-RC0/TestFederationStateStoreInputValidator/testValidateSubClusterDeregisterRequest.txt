@Test public void testValidateSubClusterDeregisterRequest(){
  try {
    SubClusterDeregisterRequest request=SubClusterDeregisterRequest.newInstance(subClusterId,stateLost);
    FederationMembershipStateStoreInputValidator.validate(request);
  }
 catch (  FederationStateStoreInvalidInputException e) {
    Assert.fail(e.getMessage());
  }
  try {
    SubClusterDeregisterRequest request=null;
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubClusterDeregister Request."));
  }
  try {
    SubClusterDeregisterRequest request=SubClusterDeregisterRequest.newInstance(subClusterIdNull,stateLost);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubCluster Id information."));
  }
  try {
    SubClusterDeregisterRequest request=SubClusterDeregisterRequest.newInstance(subClusterIdInvalid,stateLost);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Invalid SubCluster Id information."));
  }
  try {
    SubClusterDeregisterRequest request=SubClusterDeregisterRequest.newInstance(subClusterId,stateNull);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Missing SubCluster State information."));
  }
  try {
    SubClusterDeregisterRequest request=SubClusterDeregisterRequest.newInstance(subClusterId,stateNew);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Invalid non-final state: "));
  }
}
