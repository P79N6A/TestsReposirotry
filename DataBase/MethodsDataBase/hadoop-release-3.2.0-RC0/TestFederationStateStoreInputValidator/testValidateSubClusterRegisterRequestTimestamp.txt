@Test public void testValidateSubClusterRegisterRequestTimestamp(){
  SubClusterInfo subClusterInfo=SubClusterInfo.newInstance(subClusterId,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeatNegative,stateNew,lastStartTime,capability);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Invalid timestamp information."));
  }
  subClusterInfo=SubClusterInfo.newInstance(subClusterId,amRMServiceAddress,clientRMServiceAddress,rmAdminServiceAddress,rmWebServiceAddress,lastHeartBeat,stateNew,lastStartTimeNegative,capability);
  try {
    SubClusterRegisterRequest request=SubClusterRegisterRequest.newInstance(subClusterInfo);
    FederationMembershipStateStoreInputValidator.validate(request);
    Assert.fail();
  }
 catch (  FederationStateStoreInvalidInputException e) {
    LOG.info(e.getMessage());
    Assert.assertTrue(e.getMessage().startsWith("Invalid timestamp information."));
  }
}
