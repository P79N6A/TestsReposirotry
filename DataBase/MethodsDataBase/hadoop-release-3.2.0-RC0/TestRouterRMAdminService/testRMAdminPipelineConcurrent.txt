/** 
 * This test validates if the RMAdminRequestInterceptor chain for the user can build and init correctly when a multi-client process begins to request RouterRMAdminService for the same user simultaneously.
 */
@Test public void testRMAdminPipelineConcurrent() throws InterruptedException {
  final String user="test1";
class ClientTestThread extends Thread {
    private RMAdminRequestInterceptor interceptor;
    @Override public void run(){
      try {
        interceptor=pipeline();
      }
 catch (      IOException|InterruptedException e) {
        e.printStackTrace();
      }
    }
    private RMAdminRequestInterceptor pipeline() throws IOException, InterruptedException {
      return UserGroupInformation.createRemoteUser(user).doAs(new PrivilegedExceptionAction<RMAdminRequestInterceptor>(){
        @Override public RMAdminRequestInterceptor run() throws Exception {
          RequestInterceptorChainWrapper wrapper=getRouterRMAdminService().getInterceptorChain();
          RMAdminRequestInterceptor interceptor=wrapper.getRootInterceptor();
          Assert.assertNotNull(interceptor);
          LOG.info("init rm admin interceptor success for user" + user);
          return interceptor;
        }
      }
);
    }
  }
  ClientTestThread client1=new ClientTestThread();
  ClientTestThread client2=new ClientTestThread();
  client1.start();
  client2.start();
  client1.join();
  client2.join();
  Assert.assertNotNull(client1.interceptor);
  Assert.assertNotNull(client2.interceptor);
  Assert.assertTrue(client1.interceptor == client2.interceptor);
}
