@Test public void testUpdate(){
  SQLUndoLog SQLUndoLog=new SQLUndoLog();
  SQLUndoLog.setTableName("my_test_table");
  SQLUndoLog.setSqlType(SQLType.UPDATE);
  TableRecords beforeImage=new TableRecords(new MockTableMeta("product","id"));
  Row beforeRow=new Row();
  Field pkField=new Field();
  pkField.setKeyType(KeyType.PrimaryKey);
  pkField.setName("id");
  pkField.setType(Types.INTEGER);
  pkField.setValue(213);
  beforeRow.add(pkField);
  Field name=new Field();
  name.setName("name");
  name.setType(Types.VARCHAR);
  name.setValue("FESCAR");
  beforeRow.add(name);
  Field since=new Field();
  since.setName("since");
  since.setType(Types.VARCHAR);
  since.setValue("2014");
  beforeRow.add(since);
  beforeImage.add(beforeRow);
  TableRecords afterImage=new TableRecords(new MockTableMeta("product","id"));
  Row afterRow=new Row();
  Field pkField1=new Field();
  pkField1.setKeyType(KeyType.PrimaryKey);
  pkField1.setName("id");
  pkField1.setType(Types.INTEGER);
  pkField1.setValue(213);
  afterRow.add(pkField1);
  Field name1=new Field();
  name1.setName("name");
  name1.setType(Types.VARCHAR);
  name1.setValue("GTS");
  afterRow.add(name1);
  Field since1=new Field();
  since1.setName("since");
  since1.setType(Types.VARCHAR);
  since1.setValue("2016");
  afterRow.add(since1);
  afterImage.add(afterRow);
  SQLUndoLog.setBeforeImage(beforeImage);
  SQLUndoLog.setAfterImage(afterImage);
  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);
  try {
    executor.executeOn(new MockConnection());
  }
 catch (  SQLException e) {
    e.printStackTrace();
  }
}
