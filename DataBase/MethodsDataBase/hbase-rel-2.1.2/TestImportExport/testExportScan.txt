@Test public void testExportScan() throws Exception {
  int version=100;
  long startTime=System.currentTimeMillis();
  long endTime=startTime + 1;
  String prefix="row";
  String label_0="label_0";
  String label_1="label_1";
  String[] args={"table","outputDir",String.valueOf(version),String.valueOf(startTime),String.valueOf(endTime),prefix};
  Scan scan=ExportUtils.getScanFromCommandLine(UTIL.getConfiguration(),args);
  assertEquals(version,scan.getMaxVersions());
  assertEquals(startTime,scan.getTimeRange().getMin());
  assertEquals(endTime,scan.getTimeRange().getMax());
  assertEquals(true,(scan.getFilter() instanceof PrefixFilter));
  assertEquals(0,Bytes.compareTo(((PrefixFilter)scan.getFilter()).getPrefix(),Bytes.toBytesBinary(prefix)));
  String[] argsWithLabels={"-D " + ExportUtils.EXPORT_VISIBILITY_LABELS + "="+ label_0+ ","+ label_1,"table","outputDir",String.valueOf(version),String.valueOf(startTime),String.valueOf(endTime),prefix};
  Configuration conf=new Configuration(UTIL.getConfiguration());
  String[] otherArgs=new GenericOptionsParser(conf,argsWithLabels).getRemainingArgs();
  Scan scanWithLabels=ExportUtils.getScanFromCommandLine(conf,otherArgs);
  assertEquals(version,scanWithLabels.getMaxVersions());
  assertEquals(startTime,scanWithLabels.getTimeRange().getMin());
  assertEquals(endTime,scanWithLabels.getTimeRange().getMax());
  assertEquals(true,(scanWithLabels.getFilter() instanceof PrefixFilter));
  assertEquals(0,Bytes.compareTo(((PrefixFilter)scanWithLabels.getFilter()).getPrefix(),Bytes.toBytesBinary(prefix)));
  assertEquals(2,scanWithLabels.getAuthorizations().getLabels().size());
  assertEquals(label_0,scanWithLabels.getAuthorizations().getLabels().get(0));
  assertEquals(label_1,scanWithLabels.getAuthorizations().getLabels().get(1));
}
