@Test public void testWithDeletes() throws Throwable {
  TableDescriptor desc=TableDescriptorBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(FAMILYA).setMaxVersions(5).setKeepDeletedCells(KeepDeletedCells.TRUE).build()).build();
  UTIL.getAdmin().createTable(desc);
  try (Table t=UTIL.getConnection().getTable(desc.getTableName())){
    Put p=new Put(ROW1);
    p.addColumn(FAMILYA,QUAL,now,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 1,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 2,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 3,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 4,QUAL);
    t.put(p);
    Delete d=new Delete(ROW1,now + 3);
    t.delete(d);
    d=new Delete(ROW1);
    d.addColumns(FAMILYA,QUAL,now + 2);
    t.delete(d);
  }
   String[] args=new String[]{"-D" + ExportUtils.RAW_SCAN + "=true",name.getMethodName(),FQ_OUTPUT_DIR,"1000"};
  assertTrue(runExport(args));
  final String IMPORT_TABLE=name.getMethodName() + "import";
  desc=TableDescriptorBuilder.newBuilder(TableName.valueOf(IMPORT_TABLE)).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(FAMILYA).setMaxVersions(5).setKeepDeletedCells(KeepDeletedCells.TRUE).build()).build();
  UTIL.getAdmin().createTable(desc);
  try (Table t=UTIL.getConnection().getTable(desc.getTableName())){
    args=new String[]{IMPORT_TABLE,FQ_OUTPUT_DIR};
    assertTrue(runImport(args));
    Scan s=new Scan();
    s.setMaxVersions();
    s.setRaw(true);
    ResultScanner scanner=t.getScanner(s);
    Result r=scanner.next();
    Cell[] res=r.rawCells();
    assertTrue(PrivateCellUtil.isDeleteFamily(res[0]));
    assertEquals(now + 4,res[1].getTimestamp());
    assertEquals(now + 3,res[2].getTimestamp());
    assertTrue(CellUtil.isDelete(res[3]));
    assertEquals(now + 2,res[4].getTimestamp());
    assertEquals(now + 1,res[5].getTimestamp());
    assertEquals(now,res[6].getTimestamp());
  }
 }
