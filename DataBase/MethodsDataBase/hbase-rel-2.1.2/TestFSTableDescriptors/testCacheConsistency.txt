@Test public void testCacheConsistency() throws IOException, InterruptedException {
  final String name=this.name.getMethodName();
  FileSystem fs=FileSystem.get(UTIL.getConfiguration());
  Path rootdir=new Path(UTIL.getDataTestDir(),name);
  FSTableDescriptors chtds=new FSTableDescriptorsTest(UTIL.getConfiguration(),fs,rootdir);
  FSTableDescriptors nonchtds=new FSTableDescriptorsTest(UTIL.getConfiguration(),fs,rootdir,false,false);
  final int count=10;
  for (int i=0; i < count; i++) {
    nonchtds.createTableDescriptor(TableDescriptorBuilder.newBuilder(TableName.valueOf(name + i)).build());
  }
  for (int i=0; i < count; i++) {
    assertTrue(chtds.get(TableName.valueOf(name + i)) != null);
  }
  assertTrue(nonchtds.getAll().size() == chtds.getAll().size());
  TableDescriptor htd=TableDescriptorBuilder.newBuilder(TableName.META_TABLE_NAME).build();
  nonchtds.createTableDescriptor(htd);
  assertTrue(nonchtds.getAll().size() == chtds.getAll().size());
  for (  Map.Entry<String,TableDescriptor> entry : nonchtds.getAll().entrySet()) {
    String t=(String)entry.getKey();
    TableDescriptor nchtd=entry.getValue();
    assertTrue("expected " + htd.toString() + " got: "+ chtds.get(TableName.valueOf(t)).toString(),(nchtd.equals(chtds.get(TableName.valueOf(t)))));
  }
}
