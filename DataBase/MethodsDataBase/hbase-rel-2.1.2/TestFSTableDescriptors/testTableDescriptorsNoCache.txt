@Test public void testTableDescriptorsNoCache() throws IOException, InterruptedException {
  final String name=this.name.getMethodName();
  FileSystem fs=FileSystem.get(UTIL.getConfiguration());
  Path rootdir=new Path(UTIL.getDataTestDir(),name);
  FSTableDescriptors htds=new FSTableDescriptorsTest(UTIL.getConfiguration(),fs,rootdir,false,false);
  final int count=10;
  for (int i=0; i < count; i++) {
    htds.createTableDescriptor(TableDescriptorBuilder.newBuilder(TableName.valueOf(name + i)).build());
  }
  for (int i=0; i < 2 * count; i++) {
    assertNotNull("Expected HTD, got null instead",htds.get(TableName.valueOf(name + i % 2)));
  }
  for (int i=0; i < count; i++) {
    TableDescriptorBuilder builder=TableDescriptorBuilder.newBuilder(TableName.valueOf(name + i));
    builder.setColumnFamily(ColumnFamilyDescriptorBuilder.of("" + i));
    htds.updateTableDescriptor(builder.build());
  }
  for (int i=0; i < count; i++) {
    assertNotNull("Expected HTD, got null instead",htds.get(TableName.valueOf(name + i)));
    assertTrue("Column Family " + i + " missing",htds.get(TableName.valueOf(name + i)).hasColumnFamily(Bytes.toBytes("" + i)));
  }
  assertEquals(count * 4,htds.invocations);
  assertEquals("expected=0, actual=" + htds.cachehits,0,htds.cachehits);
}
