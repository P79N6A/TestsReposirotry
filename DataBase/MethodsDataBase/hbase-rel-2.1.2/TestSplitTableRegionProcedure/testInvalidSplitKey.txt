@Test public void testInvalidSplitKey() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  RegionInfo[] regions=MasterProcedureTestingUtility.createTable(procExec,tableName,null,ColumnFamilyName1,ColumnFamilyName2);
  insertData(tableName);
  assertTrue("not able to find a splittable region",regions != null);
  assertTrue("not able to find a splittable region",regions.length == 1);
  collectAssignmentManagerMetrics();
  try {
    long procId1=procExec.submitProcedure(new SplitTableRegionProcedure(procExec.getEnvironment(),regions[0],null));
    ProcedureTestingUtility.waitProcedure(procExec,procId1);
    fail("unexpected procedure start with invalid split-key");
  }
 catch (  DoNotRetryIOException e) {
    LOG.debug("Expected Split procedure construction failure: " + e.getMessage());
  }
  assertEquals(splitSubmittedCount,splitProcMetrics.getSubmittedCounter().getCount());
  assertEquals(splitFailedCount,splitProcMetrics.getFailedCounter().getCount());
}
