@Test public void testRemoteLocks() throws Exception {
  String namespace="preQueueNs";
  final TableName tableName=TableName.valueOf(namespace,name.getMethodName());
  HRegionInfo[] regionInfos=new HRegionInfo[]{new HRegionInfo(tableName)};
  User namespaceUser=User.createUserForTesting(conf,"qLNSUser",new String[0]);
  User tableACUser=User.createUserForTesting(conf,"qLTableACUser",new String[0]);
  User tableRWXUser=User.createUserForTesting(conf,"qLTableRWXUser",new String[0]);
  grantOnTable(TEST_UTIL,tableRWXUser.getShortName(),tableName,null,null,Action.READ,Action.WRITE,Action.EXEC);
  User globalRWXUser=User.createUserForTesting(conf,"qLGlobalRWXUser",new String[0]);
  grantGlobal(TEST_UTIL,globalRWXUser.getShortName(),Action.READ,Action.WRITE,Action.EXEC);
  AccessTestAction namespaceLockAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preRequestLock(ObserverContextImpl.createAndPrepare(CP_ENV),namespace,null,null,null);
      return null;
    }
  }
;
  verifyAllowed(namespaceLockAction,SUPERUSER,USER_ADMIN);
  verifyDenied(namespaceLockAction,globalRWXUser,tableACUser,namespaceUser,tableRWXUser);
  grantOnNamespace(TEST_UTIL,namespaceUser.getShortName(),namespace,Action.ADMIN);
  Threads.sleep(1000);
  verifyAllowed(namespaceLockAction,namespaceUser);
  AccessTestAction tableLockAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preRequestLock(ObserverContextImpl.createAndPrepare(CP_ENV),null,tableName,null,null);
      return null;
    }
  }
;
  verifyAllowed(tableLockAction,SUPERUSER,USER_ADMIN,namespaceUser);
  verifyDenied(tableLockAction,globalRWXUser,tableACUser,tableRWXUser);
  grantOnTable(TEST_UTIL,tableACUser.getShortName(),tableName,null,null,Action.ADMIN,Action.CREATE);
  verifyAllowed(tableLockAction,tableACUser);
  AccessTestAction regionsLockAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preRequestLock(ObserverContextImpl.createAndPrepare(CP_ENV),null,null,regionInfos,null);
      return null;
    }
  }
;
  verifyAllowed(regionsLockAction,SUPERUSER,USER_ADMIN,namespaceUser,tableACUser);
  verifyDenied(regionsLockAction,globalRWXUser,tableRWXUser);
  LockProcedure proc=new LockProcedure(conf,tableName,LockType.EXCLUSIVE,"test",null);
  AccessTestAction regionLockHeartbeatAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preLockHeartbeat(ObserverContextImpl.createAndPrepare(CP_ENV),proc.getTableName(),proc.getDescription());
      return null;
    }
  }
;
  verifyAllowed(regionLockHeartbeatAction,SUPERUSER,USER_ADMIN,namespaceUser,tableACUser);
  verifyDenied(regionLockHeartbeatAction,globalRWXUser,tableRWXUser);
}
