@Test public void testSplitRollbackOnRegionClosing() throws IOException, InterruptedException {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  Table t=createTableAndWait(tableName,HConstants.CATALOG_FAMILY);
  List<HRegion> regions=cluster.getRegions(tableName);
  RegionInfo hri=getAndCheckSingleTableRegion(regions);
  int tableRegionIndex=ensureTableRegionNotOnSameServerAsMeta(admin,hri);
  RegionStates regionStates=cluster.getMaster().getAssignmentManager().getRegionStates();
  this.admin.setBalancerRunning(false,true);
  cluster.getMaster().setCatalogJanitorEnabled(false);
  try {
    TESTING_UTIL.loadTable(t,HConstants.CATALOG_FAMILY,false);
    HRegionServer server=cluster.getRegionServer(tableRegionIndex);
    printOutRegions(server,"Initial regions: ");
    int regionCount=cluster.getRegions(hri.getTable()).size();
    regionStates.updateRegionState(hri,RegionState.State.CLOSING);
    try {
      this.admin.splitRegion(hri.getRegionName());
      fail();
    }
 catch (    DoNotRetryRegionException e) {
    }
    for (int i=0; i < 10; i++) {
      Thread.sleep(100);
      assertEquals(regionCount,cluster.getRegions(hri.getTable()).size());
    }
    regionStates.updateRegionState(hri,State.OPEN);
    split(hri,server,regionCount);
    checkAndGetDaughters(tableName);
  }
  finally {
    admin.setBalancerRunning(true,false);
    cluster.getMaster().setCatalogJanitorEnabled(true);
    t.close();
  }
}
