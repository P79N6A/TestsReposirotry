@Test public void testSplitFailedCompactionAndSplit() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  HTableDescriptor htd=new HTableDescriptor(tableName);
  byte[] cf=Bytes.toBytes("cf");
  htd.addFamily(new HColumnDescriptor(cf));
  admin.createTable(htd);
  for (int i=0; cluster.getRegions(tableName).isEmpty() && i < 100; i++) {
    Thread.sleep(100);
  }
  assertEquals(1,cluster.getRegions(tableName).size());
  HRegion region=cluster.getRegions(tableName).get(0);
  HStore store=region.getStore(cf);
  int regionServerIndex=cluster.getServerWith(region.getRegionInfo().getRegionName());
  HRegionServer regionServer=cluster.getRegionServer(regionServerIndex);
  Table t=TESTING_UTIL.getConnection().getTable(tableName);
  insertData(tableName,admin,t);
  insertData(tableName,admin,t);
  int fileNum=store.getStorefiles().size();
  store.triggerMajorCompaction();
  Optional<CompactionContext> cc=store.requestCompaction();
  assertTrue(cc.isPresent());
  assertEquals(2,region.close(false).get(cf).size());
  region.initialize();
  assertFalse(region.compact(cc.get(),store,NoLimitThroughputController.INSTANCE));
  assertTrue(fileNum > store.getStorefiles().size());
  requestSplitRegion(regionServer,region,Bytes.toBytes("row3"));
  assertEquals(2,cluster.getRegions(tableName).size());
}
