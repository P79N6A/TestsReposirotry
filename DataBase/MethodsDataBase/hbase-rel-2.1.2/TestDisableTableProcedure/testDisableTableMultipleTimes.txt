@Test public void testDisableTableMultipleTimes() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  MasterProcedureTestingUtility.createTable(procExec,tableName,null,"f1","f2");
  long procId1=procExec.submitProcedure(new DisableTableProcedure(procExec.getEnvironment(),tableName,false));
  ProcedureTestingUtility.waitProcedure(procExec,procId1);
  ProcedureTestingUtility.assertProcNotFailed(procExec,procId1);
  MasterProcedureTestingUtility.validateTableIsDisabled(getMaster(),tableName);
  Throwable e=null;
  Throwable cause=null;
  try {
    long procId2=procExec.submitProcedure(new DisableTableProcedure(procExec.getEnvironment(),tableName,false));
    ProcedureTestingUtility.waitProcedure(procExec,procId2);
    Procedure<?> result=procExec.getResult(procId2);
    assertTrue(result.isFailed());
    cause=ProcedureTestingUtility.getExceptionCause(result);
    e=result.getException();
  }
 catch (  TableNotEnabledException tnde) {
    e=tnde;
    cause=tnde;
  }
  LOG.debug("Disable failed with exception {}" + e);
  assertTrue(cause instanceof TableNotEnabledException);
  try {
    final ProcedurePrepareLatch prepareLatch=new ProcedurePrepareLatch.CompatibilityLatch();
    long procId3=procExec.submitProcedure(new DisableTableProcedure(procExec.getEnvironment(),tableName,false,prepareLatch));
    prepareLatch.await();
    Assert.fail("Disable should throw exception through latch.");
  }
 catch (  TableNotEnabledException tnee) {
    LOG.debug("Disable failed with expected exception {}",tnee);
  }
  try {
    long procId4=procExec.submitProcedure(new DisableTableProcedure(procExec.getEnvironment(),tableName,true));
    ProcedureTestingUtility.waitProcedure(procExec,procId4);
    ProcedureTestingUtility.assertProcNotFailed(procExec,procId4);
  }
 catch (  TableNotEnabledException tnee) {
    LOG.debug("Disable failed with expected exception {}",tnee);
  }
  MasterProcedureTestingUtility.validateTableIsDisabled(getMaster(),tableName);
}
