@Test public void testShutdownWhileBecomingActive() throws InterruptedException {
  MiniHBaseCluster cluster=UTIL.getHBaseCluster();
  HMaster activeMaster=null;
  HMaster backupMaster=null;
  for (  MasterThread t : cluster.getMasterThreads()) {
    if (t.getMaster().isActiveMaster()) {
      activeMaster=t.getMaster();
    }
 else {
      backupMaster=t.getMaster();
    }
  }
  assertNotNull(activeMaster);
  assertNotNull(backupMaster);
  ARRIVE=new CountDownLatch(1);
  CONTINUE=new CountDownLatch(1);
  activeMaster.abort("Aborting active master for test");
  ARRIVE.await();
  cluster.getRegionServerThreads().stream().map(t -> t.getRegionServer()).forEachOrdered(rs -> rs.abort("Aborting RS for test"));
  CONTINUE.countDown();
}
