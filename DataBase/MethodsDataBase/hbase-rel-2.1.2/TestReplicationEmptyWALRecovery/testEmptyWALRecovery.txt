@Test public void testEmptyWALRecovery() throws Exception {
  final int numRs=utility1.getHBaseCluster().getRegionServerThreads().size();
  final List<Path> emptyWalPaths=new ArrayList<>();
  long ts=System.currentTimeMillis();
  for (int i=0; i < numRs; i++) {
    RegionInfo regionInfo=utility1.getHBaseCluster().getRegions(htable1.getName()).get(0).getRegionInfo();
    WAL wal=utility1.getHBaseCluster().getRegionServer(i).getWAL(regionInfo);
    Path currentWalPath=AbstractFSWALProvider.getCurrentFileName(wal);
    String walGroupId=AbstractFSWALProvider.getWALPrefixFromWALName(currentWalPath.getName());
    Path emptyWalPath=new Path(utility1.getDataTestDir(),walGroupId + "." + ts);
    utility1.getTestFileSystem().create(emptyWalPath).close();
    emptyWalPaths.add(emptyWalPath);
  }
  for (int i=0; i < numRs; i++) {
    HRegionServer hrs=utility1.getHBaseCluster().getRegionServer(i);
    Replication replicationService=(Replication)hrs.getReplicationSourceService();
    replicationService.getReplicationManager().preLogRoll(emptyWalPaths.get(i));
    replicationService.getReplicationManager().postLogRoll(emptyWalPaths.get(i));
    RegionInfo regionInfo=utility1.getHBaseCluster().getRegions(htable1.getName()).get(0).getRegionInfo();
    WAL wal=hrs.getWAL(regionInfo);
    wal.rollWriter(true);
  }
  waitForLogAdvance(numRs);
  runSimplePutDeleteTest();
}
