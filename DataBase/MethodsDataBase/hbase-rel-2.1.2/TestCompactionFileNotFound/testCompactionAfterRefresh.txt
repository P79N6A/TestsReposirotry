@Test public void testCompactionAfterRefresh() throws Exception {
  Admin admin=util.getAdmin();
  table=util.createTable(TEST_TABLE,TEST_FAMILY);
  try {
    Put puta=new Put(ROW_A);
    puta.addColumn(TEST_FAMILY,qualifierCol1,bytes1);
    table.put(puta);
    admin.flush(TEST_TABLE);
    Put putb=new Put(ROW_B);
    putb.addColumn(TEST_FAMILY,qualifierCol1,bytes2);
    table.put(putb);
    admin.flush(TEST_TABLE);
    Put putc=new Put(ROW_C);
    putc.addColumn(TEST_FAMILY,qualifierCol1,bytes3);
    table.put(putc);
    admin.flush(TEST_TABLE);
    admin.compact(TEST_TABLE);
    while (admin.getCompactionState(TEST_TABLE) != CompactionState.NONE) {
      Thread.sleep(1000);
    }
    table.put(putb);
    HRegion hr1=(HRegion)util.getRSForFirstRegionInTable(TEST_TABLE).getRegionByEncodedName(admin.getTableRegions(TEST_TABLE).get(0).getEncodedName());
    hr1.refreshStoreFiles(true);
    for (    HStore store : hr1.getStores()) {
      store.closeAndArchiveCompactedFiles();
    }
    try {
      hr1.compact(false);
    }
 catch (    IOException e) {
      LOG.error("Got an exception during compaction",e);
      if (e instanceof FileNotFoundException) {
        Assert.fail("Got a FNFE during compaction");
      }
 else {
        Assert.fail();
      }
    }
  }
  finally {
    if (admin != null) {
      admin.close();
    }
  }
}
