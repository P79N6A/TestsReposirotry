@Test public void testRegionLoadAggregation(){
  ServerMetrics metrics=ServerMetricsBuilder.toServerMetrics(ServerName.valueOf("localhost,1,1"),createServerLoadProto());
  assertEquals(13,metrics.getRegionMetrics().values().stream().mapToInt(v -> v.getStoreCount()).sum());
  assertEquals(114,metrics.getRegionMetrics().values().stream().mapToInt(v -> v.getStoreFileCount()).sum());
  assertEquals(129,metrics.getRegionMetrics().values().stream().mapToDouble(v -> v.getUncompressedStoreFileSize().get(Size.Unit.MEGABYTE)).sum(),0);
  assertEquals(504,metrics.getRegionMetrics().values().stream().mapToDouble(v -> v.getStoreFileRootLevelIndexSize().get(Size.Unit.KILOBYTE)).sum(),0);
  assertEquals(820,metrics.getRegionMetrics().values().stream().mapToDouble(v -> v.getStoreFileSize().get(Size.Unit.MEGABYTE)).sum(),0);
  assertEquals(82,metrics.getRegionMetrics().values().stream().mapToDouble(v -> v.getStoreFileIndexSize().get(Size.Unit.KILOBYTE)).sum(),0);
  assertEquals(((long)Integer.MAX_VALUE) * 2,metrics.getRegionMetrics().values().stream().mapToLong(v -> v.getReadRequestCount()).sum());
  assertEquals(300,metrics.getRegionMetrics().values().stream().mapToLong(v -> v.getFilteredReadRequestCount()).sum());
}
