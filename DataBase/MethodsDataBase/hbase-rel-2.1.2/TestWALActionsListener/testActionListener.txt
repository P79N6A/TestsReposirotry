/** 
 * Add a bunch of dummy data and roll the logs every two insert. We should end up with 10 rolled files (plus the roll called in the constructor). Also test adding a listener while it's running.
 */
@Test public void testActionListener() throws Exception {
  DummyWALActionsListener observer=new DummyWALActionsListener();
  final WALFactory wals=new WALFactory(conf,"testActionListener");
  wals.getWALProvider().addWALActionsListener(observer);
  DummyWALActionsListener laterobserver=new DummyWALActionsListener();
  RegionInfo hri=RegionInfoBuilder.newBuilder(TableName.valueOf(SOME_BYTES)).setStartKey(SOME_BYTES).setEndKey(SOME_BYTES).build();
  final WAL wal=wals.getWAL(hri);
  MultiVersionConcurrencyControl mvcc=new MultiVersionConcurrencyControl();
  for (int i=0; i < 20; i++) {
    byte[] b=Bytes.toBytes(i + "");
    KeyValue kv=new KeyValue(b,b,b);
    WALEdit edit=new WALEdit();
    edit.add(kv);
    NavigableMap<byte[],Integer> scopes=new TreeMap<>(Bytes.BYTES_COMPARATOR);
    scopes.put(b,0);
    long txid=wal.append(hri,new WALKeyImpl(hri.getEncodedNameAsBytes(),TableName.valueOf(b),0,mvcc,scopes),edit,true);
    wal.sync(txid);
    if (i == 10) {
      wal.registerWALActionsListener(laterobserver);
    }
    if (i % 2 == 0) {
      wal.rollWriter();
    }
  }
  wal.close();
  assertEquals(11,observer.preLogRollCounter);
  assertEquals(11,observer.postLogRollCounter);
  assertEquals(5,laterobserver.preLogRollCounter);
  assertEquals(5,laterobserver.postLogRollCounter);
  assertEquals(1,observer.closedCount);
}
