@Test public void testRegionServerHostname() throws Exception {
  Enumeration<NetworkInterface> netInterfaceList=NetworkInterface.getNetworkInterfaces();
  while (netInterfaceList.hasMoreElements()) {
    NetworkInterface ni=netInterfaceList.nextElement();
    Enumeration<InetAddress> addrList=ni.getInetAddresses();
    while (addrList.hasMoreElements()) {
      InetAddress addr=addrList.nextElement();
      if (addr.isLoopbackAddress() || addr.isLinkLocalAddress() || addr.isMulticastAddress()) {
        continue;
      }
      String hostName=addr.getHostName();
      LOG.info("Found " + hostName + " on "+ ni);
      TEST_UTIL.getConfiguration().set(HRegionServer.MASTER_HOSTNAME_KEY,hostName);
      TEST_UTIL.getConfiguration().set(HRegionServer.RS_HOSTNAME_KEY,hostName);
      TEST_UTIL.startMiniCluster(NUM_MASTERS,NUM_RS);
      try {
        ZKWatcher zkw=TEST_UTIL.getZooKeeperWatcher();
        List<String> servers=ZKUtil.listChildrenNoWatch(zkw,zkw.getZNodePaths().rsZNode);
        assertTrue(servers.size() == NUM_RS + (LoadBalancer.isTablesOnMaster(TEST_UTIL.getConfiguration()) ? 1 : 0));
        for (        String server : servers) {
          assertTrue("From zookeeper: " + server + " hostname: "+ hostName,server.startsWith(hostName.toLowerCase(Locale.ROOT) + ","));
        }
        zkw.close();
      }
  finally {
        TEST_UTIL.shutdownMiniCluster();
      }
    }
  }
}
