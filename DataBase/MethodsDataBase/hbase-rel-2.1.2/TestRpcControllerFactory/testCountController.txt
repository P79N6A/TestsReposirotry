/** 
 * check some of the methods and make sure we are incrementing each time. Its a bit tediuous to cover all methods here and really is a bit brittle since we can always add new methods but won't be sure to add them here. So we just can cover the major ones.
 * @throws Exception on failure
 */
@Test public void testCountController() throws Exception {
  Configuration conf=new Configuration(UTIL.getConfiguration());
  conf.set(RpcControllerFactory.CUSTOM_CONTROLLER_CONF_KEY,StaticRpcControllerFactory.class.getName());
  final TableName tableName=TableName.valueOf(name.getMethodName());
  UTIL.createTable(tableName,fam1).close();
  conf.setInt(HConstants.HBASE_RPC_TIMEOUT_KEY,HConstants.DEFAULT_HBASE_RPC_TIMEOUT + 1);
  Connection connection=ConnectionFactory.createConnection(conf);
  Table table=connection.getTable(tableName);
  byte[] row=Bytes.toBytes("row");
  Put p=new Put(row);
  p.addColumn(fam1,fam1,Bytes.toBytes("val0"));
  table.put(p);
  Integer counter=1;
  counter=verifyCount(counter);
  Delete d=new Delete(row);
  d.addColumn(fam1,fam1);
  table.delete(d);
  counter=verifyCount(counter);
  Put p2=new Put(row);
  p2.addColumn(fam1,Bytes.toBytes("qual"),Bytes.toBytes("val1"));
  table.batch(Lists.newArrayList(p,p2),null);
  counter=verifyCount(counter);
  Append append=new Append(row);
  append.addColumn(fam1,fam1,Bytes.toBytes("val2"));
  table.append(append);
  counter=verifyCount(counter);
  Get g=new Get(row);
  table.get(g);
  counter=verifyCount(counter);
  ResultScanner scan=table.getScanner(fam1);
  scan.next();
  scan.close();
  counter=verifyCount(counter + 1);
  Get g2=new Get(row);
  table.get(Lists.newArrayList(g,g2));
  counter=verifyCount(counter);
  Scan scanInfo=new Scan(row);
  scanInfo.setSmall(true);
  counter=doScan(table,scanInfo,counter);
  scanInfo.setReversed(true);
  counter=doScan(table,scanInfo,counter);
  scanInfo.setSmall(false);
  counter=doScan(table,scanInfo,counter + 1);
  verifyPriorityGroupCount(HConstants.ADMIN_QOS,0);
  Get get=new Get(row);
  get.setPriority(HConstants.ADMIN_QOS);
  table.get(get);
  verifyPriorityGroupCount(HConstants.ADMIN_QOS,1);
  table.close();
  connection.close();
}
