@Test public void testWithColumnCountGetFilter() throws Exception {
  Get get=new Get(ONE);
  get.readAllVersions();
  get.addFamily(CF);
  get.setFilter(new ColumnCountGetFilter(2));
  try (CellWithVersionsNoOptimizeStoreScanner scannerNoOptimize=new CellWithVersionsNoOptimizeStoreScanner(new Scan(get),this.scanInfo)){
    List<Cell> results=new ArrayList<>();
    while (scannerNoOptimize.next(results)) {
      continue;
    }
    assertEquals(2,results.size());
    assertTrue(CellUtil.matchingColumn(results.get(0),CELL_WITH_VERSIONS[0]));
    assertTrue(CellUtil.matchingColumn(results.get(1),CELL_WITH_VERSIONS[2]));
    assertTrue("Optimize should do some optimizations",scannerNoOptimize.optimization.get() == 0);
  }
   get.setFilter(new ColumnCountGetFilter(2));
  try (CellWithVersionsStoreScanner scanner=new CellWithVersionsStoreScanner(new Scan(get),this.scanInfo)){
    List<Cell> results=new ArrayList<>();
    while (scanner.next(results)) {
      continue;
    }
    assertEquals(2,results.size());
    assertTrue(CellUtil.matchingColumn(results.get(0),CELL_WITH_VERSIONS[0]));
    assertTrue(CellUtil.matchingColumn(results.get(1),CELL_WITH_VERSIONS[2]));
    assertTrue("Optimize should do some optimizations",scanner.optimization.get() > 0);
  }
 }
