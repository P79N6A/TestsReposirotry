@Test public void testGrow(){
  BitSetNode node=new BitSetNode(1000,false);
  assertTrue(node.canGrow(1024));
  assertTrue(node.canGrow(900));
  assertTrue(node.canGrow(1100));
  assertFalse(node.canGrow(100));
  assertFalse(node.canGrow(10000));
  node.grow(1100);
  assertTrue(node.contains(1100));
  assertTrue(node.isModified(1000));
  node.grow(900);
  assertTrue(node.contains(900));
  assertTrue(node.isModified(1000));
  for (long i=node.getStart(); i <= node.getEnd(); i++) {
    if (i != 1000) {
      assertEquals(DeleteState.YES,node.isDeleted(i));
    }
 else {
      assertEquals(DeleteState.NO,node.isDeleted(i));
    }
  }
}
