@Test public void testOverconsumptionFixedIntervalRefillStrategy() throws InterruptedException {
  RateLimiter limiter=new FixedIntervalRateLimiter();
  limiter.set(10,TimeUnit.SECONDS);
  EnvironmentEdge edge=new EnvironmentEdge(){
    private final long ts=System.currentTimeMillis();
    @Override public long currentTime(){
      return ts;
    }
  }
;
  EnvironmentEdgeManager.injectEdge(edge);
  assertTrue(limiter.canExecute());
  limiter.consume(20);
  assertEquals(1000,limiter.waitInterval(1));
  assertEquals(1000,limiter.waitInterval(10));
  EnvironmentEdgeManager.reset();
  limiter.setNextRefillTime(limiter.getNextRefillTime() - 900);
  assertFalse(limiter.canExecute(1));
  limiter.setNextRefillTime(limiter.getNextRefillTime() - 100);
  assertTrue(limiter.canExecute());
  assertEquals(0,limiter.waitInterval());
}
