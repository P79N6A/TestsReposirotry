@Test public void testRemovesRegionDirOnArchive() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  UTIL.createTable(tableName,TEST_FAM);
  final Admin admin=UTIL.getAdmin();
  List<HRegion> servingRegions=UTIL.getHBaseCluster().getRegions(tableName);
  assertEquals(1,servingRegions.size());
  HRegion region=servingRegions.get(0);
  UTIL.loadRegion(region,TEST_FAM);
  admin.disableTable(tableName);
  FileSystem fs=UTIL.getTestFileSystem();
  Path rootDir=region.getRegionFileSystem().getTableDir().getParent();
  Path regionDir=HRegion.getRegionDir(rootDir,region.getRegionInfo());
  HFileArchiver.archiveRegion(UTIL.getConfiguration(),fs,region.getRegionInfo());
  Path archiveDir=HFileArchiveTestingUtil.getRegionArchiveDir(UTIL.getConfiguration(),region);
  assertTrue(fs.exists(archiveDir));
  FileStatus[] stores=fs.listStatus(archiveDir,new PathFilter(){
    @Override public boolean accept(    Path p){
      if (p.getName().contains(HConstants.RECOVERED_EDITS_DIR)) {
        return false;
      }
      return true;
    }
  }
);
  assertTrue(stores.length == 1);
  FileStatus[] storeFiles=fs.listStatus(stores[0].getPath());
  assertTrue(storeFiles.length > 0);
  assertFalse(fs.exists(regionDir));
  UTIL.deleteTable(tableName);
}
