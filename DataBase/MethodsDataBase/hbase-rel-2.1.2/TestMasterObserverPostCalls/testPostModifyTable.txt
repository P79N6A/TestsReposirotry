@Test public void testPostModifyTable() throws IOException {
  final Admin admin=UTIL.getAdmin();
  final TableName tn=TableName.valueOf("postmodifytable");
  final TableDescriptor td=TableDescriptorBuilder.newBuilder(tn).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes("f1")).build()).build();
  HMaster master=UTIL.getMiniHBaseCluster().getMaster();
  MasterObserverForTest observer=master.getMasterCoprocessorHost().findCoprocessor(MasterObserverForTest.class);
  admin.createTable(td);
  int preCount=observer.postHookCalls.get();
  admin.modifyTable(td);
  int postCount=observer.postHookCalls.get();
  assertEquals("Expected 1 invocation of postModifyTable",preCount + 1,postCount);
  preCount=observer.postHookCalls.get();
  try {
    admin.modifyTable(TableDescriptorBuilder.newBuilder(TableName.valueOf("missing")).setColumnFamily(td.getColumnFamily(Bytes.toBytes("f1"))).build());
    fail("Modifying a missing table should fail");
  }
 catch (  IOException e) {
  }
  postCount=observer.postHookCalls.get();
  assertEquals("Expected no invocations of postModifyTable when the operation fails",preCount,postCount);
}
