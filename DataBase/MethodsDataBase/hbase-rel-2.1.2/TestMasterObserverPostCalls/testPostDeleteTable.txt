@Test public void testPostDeleteTable() throws IOException {
  final Admin admin=UTIL.getAdmin();
  final TableName tn=TableName.valueOf("postdeletetable");
  final TableDescriptor td=TableDescriptorBuilder.newBuilder(tn).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes("f1")).build()).build();
  HMaster master=UTIL.getMiniHBaseCluster().getMaster();
  MasterObserverForTest observer=master.getMasterCoprocessorHost().findCoprocessor(MasterObserverForTest.class);
  admin.createTable(td);
  admin.disableTable(td.getTableName());
  int preCount=observer.postHookCalls.get();
  admin.deleteTable(td.getTableName());
  int postCount=observer.postHookCalls.get();
  assertEquals("Expected 1 invocation of postDeleteTable",preCount + 1,postCount);
  preCount=observer.postHookCalls.get();
  try {
    admin.deleteTable(TableName.valueOf("missing"));
    fail("Deleting a missing table should fail");
  }
 catch (  IOException e) {
  }
  postCount=observer.postHookCalls.get();
  assertEquals("Expected no invocations of postDeleteTable when the operation fails",preCount,postCount);
}
