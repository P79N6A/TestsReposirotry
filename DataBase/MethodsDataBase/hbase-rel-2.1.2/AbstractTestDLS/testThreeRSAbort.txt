@Test public void testThreeRSAbort() throws Exception {
  LOG.info("testThreeRSAbort");
  int numRegionsToCreate=40;
  int numRowsPerRegion=100;
  startCluster(NUM_RS);
  try (ZKWatcher zkw=new ZKWatcher(conf,"distributed log splitting test",null);Table table=installTable(zkw,numRegionsToCreate)){
    populateDataInTable(numRowsPerRegion);
    List<RegionServerThread> rsts=cluster.getLiveRegionServerThreads();
    assertEquals(NUM_RS,rsts.size());
    cluster.killRegionServer(rsts.get(0).getRegionServer().getServerName());
    cluster.killRegionServer(rsts.get(1).getRegionServer().getServerName());
    cluster.killRegionServer(rsts.get(2).getRegionServer().getServerName());
    TEST_UTIL.waitFor(60000,new Waiter.ExplainingPredicate<Exception>(){
      @Override public boolean evaluate() throws Exception {
        return cluster.getLiveRegionServerThreads().size() <= NUM_RS - 3;
      }
      @Override public String explainFailure() throws Exception {
        return "Timed out waiting for server aborts.";
      }
    }
);
    TEST_UTIL.waitUntilAllRegionsAssigned(tableName);
    int rows;
    try {
      rows=TEST_UTIL.countRows(table);
    }
 catch (    Exception e) {
      Threads.printThreadInfo(System.out,"Thread dump before fail");
      throw e;
    }
    assertEquals(numRegionsToCreate * numRowsPerRegion,rows);
  }
 }
