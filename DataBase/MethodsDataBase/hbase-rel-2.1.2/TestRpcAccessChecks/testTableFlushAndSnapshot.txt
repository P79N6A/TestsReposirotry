@Test public void testTableFlushAndSnapshot() throws Exception {
  TableName tn=TableName.valueOf(TEST_NAME.getMethodName());
  TableDescriptor desc=TableDescriptorBuilder.newBuilder(tn).setColumnFamily(ColumnFamilyDescriptorBuilder.of("f1")).build();
  Action adminAction=(admin) -> {
    admin.createTable(desc);
    SecureTestUtil.grantOnTable(TEST_UTIL,USER_NON_ADMIN.getShortName(),tn,null,null,Permission.Action.READ,Permission.Action.WRITE,Permission.Action.CREATE,Permission.Action.ADMIN);
  }
;
  verifyAllowed(USER_ADMIN,adminAction);
  Action userAction=(admin) -> {
    Connection conn=admin.getConnection();
    final byte[] rowKey=Bytes.toBytes("row1");
    final byte[] col=Bytes.toBytes("q1");
    final byte[] val=Bytes.toBytes("v1");
    try (Table table=conn.getTable(tn)){
      Put p=new Put(rowKey);
      p.addColumn(Bytes.toBytes("f1"),col,val);
      table.put(p);
      admin.flush(tn);
      admin.snapshot(tn.getNameAsString() + "_snapshot1",tn);
      Result result=table.get(new Get(rowKey));
      assertFalse(result.isEmpty());
      Cell c=result.getColumnLatestCell(Bytes.toBytes("f1"),col);
      assertArrayEquals(val,CellUtil.cloneValue(c));
    }
   }
;
  verifyAllowed(USER_NON_ADMIN,userAction);
}
