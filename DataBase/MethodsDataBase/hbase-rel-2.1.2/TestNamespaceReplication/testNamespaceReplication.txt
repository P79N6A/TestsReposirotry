@Test public void testNamespaceReplication() throws Exception {
  String peerId="2";
  Table htab1A=connection1.getTable(tabAName);
  Table htab2A=connection2.getTable(tabAName);
  Table htab1B=connection1.getTable(tabBName);
  Table htab2B=connection2.getTable(tabBName);
  ReplicationPeerConfig rpc=admin1.getReplicationPeerConfig(peerId);
  admin1.updateReplicationPeerConfig(peerId,ReplicationPeerConfig.newBuilder(rpc).setReplicateAllUserTables(false).build());
  rpc=admin1.getReplicationPeerConfig(peerId);
  Set<String> namespaces=new HashSet<>();
  namespaces.add(ns1);
  admin1.updateReplicationPeerConfig(peerId,ReplicationPeerConfig.newBuilder(rpc).setNamespaces(namespaces).build());
  LOG.info("update peer config");
  put(htab1A,row,f1Name,f2Name);
  ensureRowExisted(htab2A,row,f1Name,f2Name);
  delete(htab1A,row,f1Name,f2Name);
  ensureRowNotExisted(htab2A,row,f1Name,f2Name);
  put(htab1B,row,f1Name,f2Name);
  ensureRowNotExisted(htab2B,row,f1Name,f2Name);
  rpc=admin1.getReplicationPeerConfig(peerId);
  namespaces=new HashSet<>();
  namespaces.add(ns2);
  Map<TableName,List<String>> tableCfs=new HashMap<>();
  tableCfs.put(tabAName,new ArrayList<>());
  tableCfs.get(tabAName).add("f1");
  admin1.updateReplicationPeerConfig(peerId,ReplicationPeerConfig.newBuilder(rpc).setNamespaces(namespaces).setTableCFsMap(tableCfs).build());
  LOG.info("update peer config");
  put(htab1A,row,f1Name,f2Name);
  ensureRowExisted(htab2A,row,f1Name);
  delete(htab1A,row,f1Name,f2Name);
  ensureRowNotExisted(htab2A,row,f1Name);
  put(htab1B,row,f1Name,f2Name);
  ensureRowExisted(htab2B,row,f1Name,f2Name);
  delete(htab1B,row,f1Name,f2Name);
  ensureRowNotExisted(htab2B,row,f1Name,f2Name);
  admin1.removeReplicationPeer(peerId);
}
