@Test public void testRegionReplicaReplicationPeerIsCreatedForModifyTable() throws Exception {
  ReplicationAdmin admin=new ReplicationAdmin(HTU.getConfiguration());
  String peerId="region_replica_replication";
  ReplicationPeerConfig peerConfig=null;
  try {
    peerConfig=admin.getPeerConfig(peerId);
  }
 catch (  ReplicationPeerNotFoundException e) {
    LOG.warn("Region replica replication peer id=" + peerId + " not exist",e);
  }
  if (peerConfig != null) {
    admin.removePeer(peerId);
    peerConfig=null;
  }
  HTableDescriptor htd=HTU.createTableDescriptor("testRegionReplicaReplicationPeerIsCreatedForModifyTable");
  HTU.getAdmin().createTable(htd);
  try {
    peerConfig=admin.getPeerConfig(peerId);
    fail("Should throw ReplicationException, because replication peer id=" + peerId + " not exist");
  }
 catch (  ReplicationPeerNotFoundException e) {
  }
  assertNull(peerConfig);
  HTU.getAdmin().disableTable(htd.getTableName());
  htd.setRegionReplication(2);
  HTU.getAdmin().modifyTable(htd.getTableName(),htd);
  HTU.getAdmin().enableTable(htd.getTableName());
  peerConfig=admin.getPeerConfig(peerId);
  assertNotNull(peerConfig);
  assertEquals(peerConfig.getClusterKey(),ZKConfig.getZooKeeperClusterKey(HTU.getConfiguration()));
  assertEquals(RegionReplicaReplicationEndpoint.class.getName(),peerConfig.getReplicationEndpointImpl());
  admin.close();
}
