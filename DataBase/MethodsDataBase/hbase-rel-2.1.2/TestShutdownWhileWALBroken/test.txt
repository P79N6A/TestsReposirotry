@Test public void test() throws Exception {
  UTIL.createMultiRegionTable(TABLE_NAME,CF);
  try (Table table=UTIL.getConnection().getTable(TABLE_NAME)){
    UTIL.loadTable(table,CF);
  }
   int numRegions=UTIL.getMiniHBaseCluster().getRegions(TABLE_NAME).size();
  RegionServerThread rst0=UTIL.getMiniHBaseCluster().getRegionServerThreads().get(0);
  RegionServerThread rst1=UTIL.getMiniHBaseCluster().getRegionServerThreads().get(1);
  HRegionServer liveRS;
  RegionServerThread toKillRSThread;
  if (rst1.getRegionServer().getRegions(TableName.META_TABLE_NAME).isEmpty()) {
    liveRS=rst0.getRegionServer();
    toKillRSThread=rst1;
  }
 else {
    liveRS=rst1.getRegionServer();
    toKillRSThread=rst0;
  }
  assertTrue(liveRS.getRegions(TABLE_NAME).size() < numRegions);
  UTIL.expireSession(toKillRSThread.getRegionServer().getZooKeeper(),false);
  UTIL.waitFor(30000,new ExplainingPredicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return liveRS.getRegions(TABLE_NAME).size() == numRegions;
    }
    @Override public String explainFailure() throws Exception {
      return "Failover is not finished yet";
    }
  }
);
  toKillRSThread.getRegionServer().stop("Stop for test");
  toKillRSThread.join();
}
