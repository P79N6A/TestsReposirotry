@Test public void testCallQueueInfo() throws Exception {
  Configuration conf=HBaseConfiguration.create();
  AtomicInteger callExecutionCount=new AtomicInteger(0);
  RpcScheduler scheduler=new MockMasterFifoRpcScheduler(conf,2,1);
  scheduler.start();
  int totalCallMethods=30;
  int unableToDispatch=0;
  for (int i=totalCallMethods; i > 0; i--) {
    CallRunner task=createMockTask(callExecutionCount,i < 20);
    if (!scheduler.dispatch(task)) {
      unableToDispatch++;
    }
    Thread.sleep(10);
  }
  CallQueueInfo callQueueInfo=scheduler.getCallQueueInfo();
  int executionCount=callExecutionCount.get();
  String expectedQueueName="Master Fifo Queue";
  assertEquals(1,callQueueInfo.getCallQueueNames().size());
  long callQueueSize=0;
  for (  String queueName : callQueueInfo.getCallQueueNames()) {
    assertEquals(expectedQueueName,queueName);
    Set<String> methodNames=callQueueInfo.getCalledMethodNames(queueName);
    if (methodNames.size() == 2) {
      assertTrue(methodNames.contains(REGION_SERVER_REPORT));
      assertTrue(methodNames.contains(OTHER));
    }
    for (    String methodName : callQueueInfo.getCalledMethodNames(queueName)) {
      callQueueSize+=callQueueInfo.getCallMethodCount(queueName,methodName);
    }
  }
  assertEquals(totalCallMethods - unableToDispatch,callQueueSize + executionCount);
  scheduler.stop();
}
