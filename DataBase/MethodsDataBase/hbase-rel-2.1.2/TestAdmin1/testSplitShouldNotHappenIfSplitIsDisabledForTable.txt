@Test public void testSplitShouldNotHappenIfSplitIsDisabledForTable() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  HTableDescriptor htd=new HTableDescriptor(tableName);
  htd.addFamily(new HColumnDescriptor("f"));
  htd.setRegionSplitPolicyClassName(DisabledRegionSplitPolicy.class.getName());
  Table table=TEST_UTIL.createTable(htd,null);
  for (int i=0; i < 10; i++) {
    Put p=new Put(Bytes.toBytes("row" + i));
    byte[] q1=Bytes.toBytes("q1");
    byte[] v1=Bytes.toBytes("v1");
    p.addColumn(Bytes.toBytes("f"),q1,v1);
    table.put(p);
  }
  this.admin.flush(tableName);
  try {
    this.admin.split(tableName,Bytes.toBytes("row5"));
    Threads.sleep(10000);
  }
 catch (  Exception e) {
  }
  List<RegionInfo> allRegions=MetaTableAccessor.getTableRegions(this.admin.getConnection(),tableName,true);
  assertEquals(1,allRegions.size());
}
