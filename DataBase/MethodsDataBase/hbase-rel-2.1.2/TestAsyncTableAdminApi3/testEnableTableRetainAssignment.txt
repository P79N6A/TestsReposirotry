@Test public void testEnableTableRetainAssignment() throws Exception {
  byte[][] splitKeys={new byte[]{1,1,1},new byte[]{2,2,2},new byte[]{3,3,3},new byte[]{4,4,4},new byte[]{5,5,5},new byte[]{6,6,6},new byte[]{7,7,7},new byte[]{8,8,8},new byte[]{9,9,9}};
  int expectedRegions=splitKeys.length + 1;
  createTableWithDefaultConf(tableName,splitKeys);
  AsyncTable<AdvancedScanResultConsumer> metaTable=ASYNC_CONN.getTable(META_TABLE_NAME);
  List<HRegionLocation> regions=AsyncMetaTableAccessor.getTableHRegionLocations(metaTable,Optional.of(tableName)).get();
  assertEquals("Tried to create " + expectedRegions + " regions "+ "but only found "+ regions.size(),expectedRegions,regions.size());
  admin.disableTable(tableName).join();
  admin.enableTable(tableName).join();
  List<HRegionLocation> regions2=AsyncMetaTableAccessor.getTableHRegionLocations(metaTable,Optional.of(tableName)).get();
  assertEquals(regions.size(),regions2.size());
  assertTrue(regions2.containsAll(regions));
}
