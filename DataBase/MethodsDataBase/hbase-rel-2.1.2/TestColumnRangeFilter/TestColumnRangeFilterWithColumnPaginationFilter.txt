@Test public void TestColumnRangeFilterWithColumnPaginationFilter() throws Exception {
  String family="Family";
  String table="TestColumnRangeFilterWithColumnPaginationFilter";
  try (Table ht=TEST_UTIL.createTable(TableName.valueOf(table),Bytes.toBytes(family),Integer.MAX_VALUE)){
    String row="row";
    long timestamp=100;
    int[] columns={0,1,2,3,4,5,6,7,8,9};
    String valueString="ValueString";
    Put p=new Put(Bytes.toBytes(row));
    p.setDurability(Durability.SKIP_WAL);
    for (    int column : columns) {
      KeyValue kv=KeyValueTestUtil.create(row,family,Integer.toString(column),timestamp,valueString);
      p.add(kv);
    }
    ht.put(p);
    TEST_UTIL.flush();
    StringRange stringRange=new StringRange("1",true,"9",false);
    ColumnRangeFilter filter1=new ColumnRangeFilter(Bytes.toBytes(stringRange.getStart()),stringRange.isStartInclusive(),Bytes.toBytes(stringRange.getEnd()),stringRange.isEndInclusive());
    ColumnPaginationFilter filter2=new ColumnPaginationFilter(5,0);
    ColumnPaginationFilter filter3=new ColumnPaginationFilter(5,1);
    ColumnPaginationFilter filter4=new ColumnPaginationFilter(5,2);
    ColumnPaginationFilter filter5=new ColumnPaginationFilter(5,6);
    ColumnPaginationFilter filter6=new ColumnPaginationFilter(5,9);
    assertEquals(5,cellsCount(ht,new FilterList(Operator.MUST_PASS_ALL,filter1,filter2)));
    assertEquals(5,cellsCount(ht,new FilterList(Operator.MUST_PASS_ALL,filter1,filter3)));
    assertEquals(5,cellsCount(ht,new FilterList(Operator.MUST_PASS_ALL,filter1,filter4)));
    assertEquals(2,cellsCount(ht,new FilterList(Operator.MUST_PASS_ALL,filter1,filter5)));
    assertEquals(0,cellsCount(ht,new FilterList(Operator.MUST_PASS_ALL,filter1,filter6)));
  }
 }
