@Test public void TestColumnRangeFilterClient() throws Exception {
  String family="Family";
  Table ht=TEST_UTIL.createTable(TableName.valueOf(name.getMethodName()),Bytes.toBytes(family),Integer.MAX_VALUE);
  List<String> rows=generateRandomWords(10,8);
  long maxTimestamp=2;
  List<String> columns=generateRandomWords(20000,8);
  List<KeyValue> kvList=new ArrayList<>();
  Map<StringRange,List<KeyValue>> rangeMap=new HashMap<>();
  rangeMap.put(new StringRange(null,true,"b",false),new ArrayList<>());
  rangeMap.put(new StringRange("p",true,"q",false),new ArrayList<>());
  rangeMap.put(new StringRange("r",false,"s",true),new ArrayList<>());
  rangeMap.put(new StringRange("z",false,null,false),new ArrayList<>());
  String valueString="ValueString";
  for (  String row : rows) {
    Put p=new Put(Bytes.toBytes(row));
    p.setDurability(Durability.SKIP_WAL);
    for (    String column : columns) {
      for (long timestamp=1; timestamp <= maxTimestamp; timestamp++) {
        KeyValue kv=KeyValueTestUtil.create(row,family,column,timestamp,valueString);
        p.add(kv);
        kvList.add(kv);
        for (        StringRange s : rangeMap.keySet()) {
          if (s.inRange(column)) {
            rangeMap.get(s).add(kv);
          }
        }
      }
    }
    ht.put(p);
  }
  TEST_UTIL.flush();
  ColumnRangeFilter filter;
  Scan scan=new Scan();
  scan.setMaxVersions();
  for (  StringRange s : rangeMap.keySet()) {
    filter=new ColumnRangeFilter(s.getStart() == null ? null : Bytes.toBytes(s.getStart()),s.isStartInclusive(),s.getEnd() == null ? null : Bytes.toBytes(s.getEnd()),s.isEndInclusive());
    assertEquals(rangeMap.get(s).size(),cellsCount(ht,filter));
  }
  ht.close();
}
