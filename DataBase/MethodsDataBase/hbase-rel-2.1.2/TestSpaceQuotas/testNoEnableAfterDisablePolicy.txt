@Test public void testNoEnableAfterDisablePolicy() throws Exception {
  Put p=new Put(Bytes.toBytes("to_reject"));
  p.addColumn(Bytes.toBytes(SpaceQuotaHelperForTests.F1),Bytes.toBytes("to"),Bytes.toBytes("reject"));
  final TableName tn=writeUntilViolation(SpaceViolationPolicy.DISABLE);
  final Admin admin=TEST_UTIL.getAdmin();
  for (int i=0; i < NUM_RETRIES * 2; i++) {
    if (admin.isTableEnabled(tn)) {
      LOG.info(tn + " is still enabled, expecting it to be disabled. Will wait and re-check.");
      Thread.sleep(2000);
    }
  }
  assertFalse(tn + " is still enabled but it should be disabled",admin.isTableEnabled(tn));
  try {
    admin.enableTable(tn);
  }
 catch (  AccessDeniedException e) {
    String exceptionContents=StringUtils.stringifyException(e);
    final String expectedText="violated space quota";
    assertTrue("Expected the exception to contain " + expectedText + ", but was: "+ exceptionContents,exceptionContents.contains(expectedText));
  }
}
