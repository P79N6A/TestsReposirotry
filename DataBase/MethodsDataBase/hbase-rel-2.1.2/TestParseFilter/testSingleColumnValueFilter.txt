@Test public void testSingleColumnValueFilter() throws IOException {
  String filterString="SingleColumnValueFilter " + "('family', 'qualifier', >=, 'binary:a', true, false)";
  SingleColumnValueFilter singleColumnValueFilter=doTestFilter(filterString,SingleColumnValueFilter.class);
  assertEquals("family",new String(singleColumnValueFilter.getFamily(),StandardCharsets.UTF_8));
  assertEquals("qualifier",new String(singleColumnValueFilter.getQualifier(),StandardCharsets.UTF_8));
  assertEquals(CompareOperator.GREATER_OR_EQUAL,singleColumnValueFilter.getCompareOperator());
  assertTrue(singleColumnValueFilter.getComparator() instanceof BinaryComparator);
  BinaryComparator binaryComparator=(BinaryComparator)singleColumnValueFilter.getComparator();
  assertEquals("a",new String(binaryComparator.getValue(),StandardCharsets.UTF_8));
  assertTrue(singleColumnValueFilter.getFilterIfMissing());
  assertFalse(singleColumnValueFilter.getLatestVersionOnly());
  filterString="SingleColumnValueFilter ('family', 'qualifier', >, 'binaryprefix:a')";
  singleColumnValueFilter=doTestFilter(filterString,SingleColumnValueFilter.class);
  assertEquals("family",new String(singleColumnValueFilter.getFamily(),StandardCharsets.UTF_8));
  assertEquals("qualifier",new String(singleColumnValueFilter.getQualifier(),StandardCharsets.UTF_8));
  assertEquals(CompareOperator.GREATER,singleColumnValueFilter.getCompareOperator());
  assertTrue(singleColumnValueFilter.getComparator() instanceof BinaryPrefixComparator);
  BinaryPrefixComparator binaryPrefixComparator=(BinaryPrefixComparator)singleColumnValueFilter.getComparator();
  assertEquals("a",new String(binaryPrefixComparator.getValue(),StandardCharsets.UTF_8));
  assertFalse(singleColumnValueFilter.getFilterIfMissing());
  assertTrue(singleColumnValueFilter.getLatestVersionOnly());
}
