@Test public void test2FavoredNodesDead() throws Exception {
  TableName tableName=TableName.valueOf("testAllFavoredNodesDead");
  HTableDescriptor desc=new HTableDescriptor(tableName);
  desc.addFamily(new HColumnDescriptor(HConstants.CATALOG_FAMILY));
  admin.createTable(desc,Bytes.toBytes("aaa"),Bytes.toBytes("zzz"),REGION_NUM);
  TEST_UTIL.waitTableAvailable(tableName);
  final RegionInfo region=admin.getTableRegions(tableName).get(0);
  LOG.info("Region that's supposed to be in transition: " + region);
  FavoredNodesManager fnm=master.getFavoredNodesManager();
  List<ServerName> currentFN=fnm.getFavoredNodes(region);
  assertNotNull(currentFN);
  List<ServerName> serversToStop=Lists.newArrayList(currentFN);
  serversToStop.remove(currentFN.get(0));
  stopServersAndWaitUntilProcessed(serversToStop);
  TEST_UTIL.waitUntilNoRegionsInTransition();
  final RegionStates regionStates=master.getAssignmentManager().getRegionStates();
  TEST_UTIL.waitFor(10000,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return regionStates.getRegionState(region).isOpened();
    }
  }
);
  assertEquals("Not all regions are online",REGION_NUM,admin.getTableRegions(tableName).size());
  admin.setBalancerRunning(true,true);
  assertTrue("Balancer did not run",admin.balancer());
  TEST_UTIL.waitUntilNoRegionsInTransition(60000);
  checkFavoredNodeAssignments(tableName,fnm,regionStates);
}
