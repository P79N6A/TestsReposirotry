@Test public void testBasicRegionPlacementAndReplicaLoad() throws Exception {
  String tableName="testBasicRegionPlacement";
  HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(tableName));
  desc.addFamily(new HColumnDescriptor(HConstants.CATALOG_FAMILY));
  admin.createTable(desc,Bytes.toBytes("aaa"),Bytes.toBytes("zzz"),REGION_NUM);
  TEST_UTIL.waitTableAvailable(desc.getTableName());
  FavoredNodesManager fnm=master.getFavoredNodesManager();
  List<RegionInfo> regionsOfTable=admin.getRegions(TableName.valueOf(tableName));
  for (  RegionInfo rInfo : regionsOfTable) {
    Set<ServerName> favNodes=Sets.newHashSet(fnm.getFavoredNodes(rInfo));
    assertNotNull(favNodes);
    assertEquals(FavoredNodeAssignmentHelper.FAVORED_NODES_NUM,favNodes.size());
  }
  Map<ServerName,List<Integer>> replicaLoadMap=fnm.getReplicaLoad(Lists.newArrayList(admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().keySet()));
  assertTrue("Not all replica load collected.",admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().size() == replicaLoadMap.size());
  for (  Entry<ServerName,List<Integer>> entry : replicaLoadMap.entrySet()) {
    assertTrue(entry.getValue().size() == FavoredNodeAssignmentHelper.FAVORED_NODES_NUM);
    assertTrue(entry.getValue().get(0) >= 0);
    assertTrue(entry.getValue().get(1) >= 0);
    assertTrue(entry.getValue().get(2) >= 0);
  }
  admin.disableTable(TableName.valueOf(tableName));
  admin.deleteTable(TableName.valueOf(tableName));
  replicaLoadMap=fnm.getReplicaLoad(Lists.newArrayList(admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().keySet()));
  assertTrue("replica load found " + replicaLoadMap.size() + " instead of 0.",replicaLoadMap.size() == admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().size());
}
