@Test public void testRoundRobinAssignment() throws Exception {
  TableName tableName=TableName.valueOf("testRoundRobinAssignment");
  HTableDescriptor desc=new HTableDescriptor(tableName);
  desc.addFamily(new HColumnDescriptor(HConstants.CATALOG_FAMILY));
  admin.createTable(desc,Bytes.toBytes("aaa"),Bytes.toBytes("zzz"),REGION_NUM);
  TEST_UTIL.waitTableAvailable(tableName);
  TEST_UTIL.loadTable(admin.getConnection().getTable(tableName),HConstants.CATALOG_FAMILY);
  admin.flush(tableName);
  LoadBalancer balancer=master.getLoadBalancer();
  List<RegionInfo> regions=admin.getRegions(tableName);
  regions.addAll(admin.getTableRegions(TableName.META_TABLE_NAME));
  regions.addAll(admin.getTableRegions(TableName.NAMESPACE_TABLE_NAME));
  List<ServerName> servers=Lists.newArrayList(admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().keySet());
  Map<ServerName,List<RegionInfo>> map=balancer.roundRobinAssignment(regions,servers);
  for (  List<RegionInfo> regionInfos : map.values()) {
    regions.removeAll(regionInfos);
  }
  assertEquals("No region should be missed by balancer",0,regions.size());
}
