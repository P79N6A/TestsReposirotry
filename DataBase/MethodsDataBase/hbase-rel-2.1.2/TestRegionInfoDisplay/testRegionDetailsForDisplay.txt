@Test public void testRegionDetailsForDisplay() throws IOException {
  byte[] startKey=new byte[]{0x01,0x01,0x02,0x03};
  byte[] endKey=new byte[]{0x01,0x01,0x02,0x04};
  Configuration conf=new Configuration();
  conf.setBoolean("hbase.display.keys",false);
  RegionInfo ri=RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(startKey).setEndKey(endKey).build();
  checkEquality(ri,conf);
  ri=RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(startKey).setEndKey(endKey).setSplit(false).setRegionId(System.currentTimeMillis()).setReplicaId(1).build();
  checkEquality(ri,conf);
  Assert.assertArrayEquals(RegionInfoDisplay.HIDDEN_END_KEY,RegionInfoDisplay.getEndKeyForDisplay(ri,conf));
  Assert.assertArrayEquals(RegionInfoDisplay.HIDDEN_START_KEY,RegionInfoDisplay.getStartKeyForDisplay(ri,conf));
  RegionState state=RegionState.createForTesting(convert(ri),RegionState.State.OPEN);
  String descriptiveNameForDisplay=RegionInfoDisplay.getDescriptiveNameFromRegionStateForDisplay(state,conf);
  checkDescriptiveNameEquality(descriptiveNameForDisplay,state.toDescriptiveString(),startKey);
  conf.setBoolean("hbase.display.keys",true);
  Assert.assertArrayEquals(endKey,RegionInfoDisplay.getEndKeyForDisplay(ri,conf));
  Assert.assertArrayEquals(startKey,RegionInfoDisplay.getStartKeyForDisplay(ri,conf));
  Assert.assertEquals(state.toDescriptiveString(),RegionInfoDisplay.getDescriptiveNameFromRegionStateForDisplay(state,conf));
}
