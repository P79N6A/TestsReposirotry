@Test public void testDeleteColumnsWithDiffColsAndTags1() throws Exception {
  TableName tableName=createTable(5);
  try (Table table=TEST_UTIL.getConnection().getTable(tableName)){
    Put put=new Put(Bytes.toBytes("row1"));
    put.addColumn(fam,qual1,125L,value);
    put.setCellVisibility(new CellVisibility(CONFIDENTIAL));
    table.put(put);
    put=new Put(Bytes.toBytes("row1"));
    put.addColumn(fam,qual1,126L,value);
    put.setCellVisibility(new CellVisibility(SECRET));
    table.put(put);
    TEST_UTIL.getAdmin().flush(tableName);
    PrivilegedExceptionAction<Void> actiona=new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws Exception {
        Delete d1=new Delete(row1);
        d1.setCellVisibility(new CellVisibility(SECRET));
        d1.addColumns(fam,qual,126L);
        Delete d2=new Delete(row1);
        d2.setCellVisibility(new CellVisibility(CONFIDENTIAL));
        d2.addColumns(fam,qual1,126L);
        try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
          table.delete(createList(d1,d2));
        }
 catch (        Throwable t) {
          throw new IOException(t);
        }
        return null;
      }
    }
;
    SUPERUSER.runAs(actiona);
    Scan s=new Scan();
    s.readVersions(5);
    s.setAuthorizations(new Authorizations(SECRET,CONFIDENTIAL));
    ResultScanner scanner=table.getScanner(s);
    Result[] next=scanner.next(3);
    assertEquals(1,next.length);
  }
 }
