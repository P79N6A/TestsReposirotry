@Test public void testRecover() throws IOException, InterruptedException, ExecutionException {
  Path f=new Path("/" + name.getMethodName());
  EventLoop eventLoop=EVENT_LOOP_GROUP.next();
  FanOutOneBlockAsyncDFSOutput out=FanOutOneBlockAsyncDFSOutputHelper.createOutput(FS,f,true,false,(short)3,FS.getDefaultBlockSize(),eventLoop,CHANNEL_CLASS);
  byte[] b=new byte[10];
  ThreadLocalRandom.current().nextBytes(b);
  out.write(b,0,b.length);
  out.flush(false).get();
  TEST_UTIL.getDFSCluster().restartDataNode(0);
  out.write(b,0,b.length);
  try {
    out.flush(false).get();
    fail("flush should fail");
  }
 catch (  ExecutionException e) {
    LOG.info("expected exception caught",e);
  }
  out.recoverAndClose(null);
  assertEquals(b.length,FS.getFileStatus(f).getLen());
  byte[] actual=new byte[b.length];
  try (FSDataInputStream in=FS.open(f)){
    in.readFully(actual);
  }
   assertArrayEquals(b,actual);
}
