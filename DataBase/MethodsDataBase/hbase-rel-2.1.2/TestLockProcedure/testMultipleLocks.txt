@Test public void testMultipleLocks() throws Exception {
  LockRequest nsLock=getNamespaceLock(namespace,testMethodName);
  LockRequest tableLock1=getTableExclusiveLock(tableName1,testMethodName);
  LockRequest tableLock2=getTableExclusiveLock(tableName2,testMethodName);
  LockRequest regionsLock1=getRegionLock(tableRegions1,testMethodName);
  LockRequest regionsLock2=getRegionLock(tableRegions2,testMethodName);
  long nsProcId=queueLock(nsLock);
  assertTrue(awaitForLocked(nsProcId,2000));
  long start=System.currentTimeMillis();
  sendHeartbeatAndCheckLocked(nsProcId,true);
  long table1ProcId=queueLock(tableLock1);
  long table2ProcId=queueLock(tableLock2);
  long regions1ProcId=queueLock(regionsLock1);
  long regions2ProcId=queueLock(regionsLock2);
  long now=System.currentTimeMillis();
  Thread.sleep(Math.min(HEARTBEAT_TIMEOUT / 2,Math.max(HEARTBEAT_TIMEOUT - (now - start) - 10,0)));
  sendHeartbeatAndCheckLocked(nsProcId,true);
  sendHeartbeatAndCheckLocked(table1ProcId,false);
  sendHeartbeatAndCheckLocked(table2ProcId,false);
  sendHeartbeatAndCheckLocked(regions1ProcId,false);
  sendHeartbeatAndCheckLocked(regions2ProcId,false);
  releaseLock(nsProcId);
  assertTrue(awaitForLocked(table1ProcId,2000));
  assertTrue(awaitForLocked(table2ProcId,2000));
  sendHeartbeatAndCheckLocked(regions1ProcId,false);
  sendHeartbeatAndCheckLocked(regions2ProcId,false);
  releaseLock(table1ProcId);
  sendHeartbeatAndCheckLocked(table1ProcId,false);
  assertTrue(awaitForLocked(regions1ProcId,2000));
  sendHeartbeatAndCheckLocked(table2ProcId,true);
  sendHeartbeatAndCheckLocked(regions2ProcId,false);
  releaseLock(table2ProcId);
  sendHeartbeatAndCheckLocked(table2ProcId,false);
  assertTrue(awaitForLocked(regions2ProcId,2000));
  sendHeartbeatAndCheckLocked(regions1ProcId,true);
  sendHeartbeatAndCheckLocked(regions2ProcId,true);
  releaseLock(regions1ProcId);
  releaseLock(regions2ProcId);
  sendHeartbeatAndCheckLocked(regions1ProcId,false);
  sendHeartbeatAndCheckLocked(regions2ProcId,false);
  ProcedureTestingUtility.waitAllProcedures(procExec);
  ProcedureTestingUtility.assertProcNotFailed(procExec,nsProcId);
  ProcedureTestingUtility.assertProcNotFailed(procExec,table1ProcId);
  ProcedureTestingUtility.assertProcNotFailed(procExec,table2ProcId);
  ProcedureTestingUtility.assertProcNotFailed(procExec,regions1ProcId);
  ProcedureTestingUtility.assertProcNotFailed(procExec,regions2ProcId);
}
