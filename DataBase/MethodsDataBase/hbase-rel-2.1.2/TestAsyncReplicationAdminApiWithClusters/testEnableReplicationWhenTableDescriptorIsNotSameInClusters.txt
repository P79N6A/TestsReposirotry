@Test public void testEnableReplicationWhenTableDescriptorIsNotSameInClusters() throws Exception {
  createTableWithDefaultConf(admin,tableName);
  createTableWithDefaultConf(admin2,tableName);
  TableDescriptorBuilder builder=TableDescriptorBuilder.newBuilder(admin.getDescriptor(tableName).get());
  builder.setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes("newFamily")).build());
  admin2.disableTable(tableName).join();
  admin2.modifyTable(builder.build()).join();
  admin2.enableTable(tableName).join();
  try {
    admin.enableTableReplication(tableName).join();
    fail("Exception should be thrown if table descriptors in the clusters are not same.");
  }
 catch (  Exception ignored) {
  }
  admin.disableTable(tableName).join();
  admin.modifyTable(builder.build()).join();
  admin.enableTable(tableName).join();
  admin.enableTableReplication(tableName).join();
  TableDescriptor tableDesc=admin.getDescriptor(tableName).get();
  for (  ColumnFamilyDescriptor fam : tableDesc.getColumnFamilies()) {
    assertEquals(HConstants.REPLICATION_SCOPE_GLOBAL,fam.getScope());
  }
}
