@Test public void testEnableReplicationForExplicitSetTableCfs() throws Exception {
  TableName tableName2=TableName.valueOf(tableName.getNameAsString() + "2");
  createTableWithDefaultConf(tableName);
  createTableWithDefaultConf(tableName2);
  assertFalse("Table should not exists in the peer cluster",admin2.tableExists(tableName).get());
  assertFalse("Table should not exists in the peer cluster",admin2.tableExists(tableName2).get());
  Map<TableName,? extends Collection<String>> tableCfs=new HashMap<>();
  tableCfs.put(tableName,null);
  ReplicationPeerConfig rpc=admin.getReplicationPeerConfig(ID_SECOND).get();
  rpc.setReplicateAllUserTables(false);
  rpc.setTableCFsMap(tableCfs);
  try {
    admin.updateReplicationPeerConfig(ID_SECOND,rpc).join();
    admin.enableTableReplication(tableName2).join();
    assertFalse("Table should not be created if user has set table cfs explicitly for the " + "peer and this is not part of that collection",admin2.tableExists(tableName2).get());
    tableCfs.put(tableName2,null);
    rpc.setTableCFsMap(tableCfs);
    admin.updateReplicationPeerConfig(ID_SECOND,rpc).join();
    admin.enableTableReplication(tableName2).join();
    assertTrue("Table should be created if user has explicitly added table into table cfs collection",admin2.tableExists(tableName2).get());
  }
  finally {
    rpc.setTableCFsMap(null);
    rpc.setReplicateAllUserTables(true);
    admin.updateReplicationPeerConfig(ID_SECOND,rpc).join();
  }
}
