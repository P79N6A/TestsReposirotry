@Test public void testCellUtilTypeMethods() throws IOException {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  Table table=TEST_UTIL.createTable(tableName,FAMILY);
  final byte[] row=Bytes.toBytes("p");
  Put p=new Put(row);
  p.addColumn(FAMILY,QUALIFIER,VALUE);
  table.put(p);
  try (ResultScanner scanner=table.getScanner(new Scan())){
    Result result=scanner.next();
    assertNotNull(result);
    CellScanner cs=result.cellScanner();
    assertTrue(cs.advance());
    Cell c=cs.current();
    assertTrue(CellUtil.isPut(c));
    assertFalse(CellUtil.isDelete(c));
    assertFalse(cs.advance());
    assertNull(scanner.next());
  }
   Delete d=new Delete(row);
  d.addColumn(FAMILY,QUALIFIER);
  table.delete(d);
  Scan scan=new Scan();
  scan.setRaw(true);
  try (ResultScanner scanner=table.getScanner(scan)){
    Result result=scanner.next();
    assertNotNull(result);
    CellScanner cs=result.cellScanner();
    assertTrue(cs.advance());
    Cell c=cs.current();
    assertTrue("Cell should be a Delete: " + c,CellUtil.isDelete(c));
    assertFalse("Cell should not be a Put: " + c,CellUtil.isPut(c));
    assertTrue(cs.advance());
    c=cs.current();
    assertFalse("Cell should not be a Delete: " + c,CellUtil.isDelete(c));
    assertTrue("Cell should be a Put: " + c,CellUtil.isPut(c));
    assertFalse(cs.advance());
    assertNull(scanner.next());
  }
 }
