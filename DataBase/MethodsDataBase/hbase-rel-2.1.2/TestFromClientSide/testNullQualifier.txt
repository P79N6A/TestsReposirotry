@Test public void testNullQualifier() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  Table table=TEST_UTIL.createTable(tableName,FAMILY);
  Put put=new Put(ROW);
  put.addColumn(FAMILY,null,VALUE);
  table.put(put);
  getTestNull(table,ROW,FAMILY,VALUE);
  scanTestNull(table,ROW,FAMILY,VALUE);
  Delete delete=new Delete(ROW);
  delete.addColumns(FAMILY,null);
  table.delete(delete);
  Get get=new Get(ROW);
  Result result=table.get(get);
  assertEmptyResult(result);
  Increment increment=new Increment(ROW);
  increment.addColumn(FAMILY,null,1L);
  table.increment(increment);
  getTestNull(table,ROW,FAMILY,1L);
  table.incrementColumnValue(ROW,FAMILY,null,1L);
  getTestNull(table,ROW,FAMILY,2L);
  delete=new Delete(ROW);
  delete.addColumns(FAMILY,null);
  table.delete(delete);
  Append append=new Append(ROW);
  append.addColumn(FAMILY,null,VALUE);
  table.append(append);
  getTestNull(table,ROW,FAMILY,VALUE);
  put=new Put(ROW);
  put.addColumn(FAMILY,null,Bytes.toBytes("checkAndPut"));
  table.put(put);
  table.checkAndMutate(ROW,FAMILY).ifEquals(VALUE).thenPut(put);
  RowMutations mutate=new RowMutations(ROW);
  mutate.add(new Put(ROW).addColumn(FAMILY,null,Bytes.toBytes("checkAndMutate")));
  table.checkAndMutate(ROW,FAMILY).ifEquals(Bytes.toBytes("checkAndPut")).thenMutate(mutate);
  delete=new Delete(ROW);
  delete.addColumns(FAMILY,null);
  table.checkAndMutate(ROW,FAMILY).ifEquals(Bytes.toBytes("checkAndMutate")).thenDelete(delete);
}
