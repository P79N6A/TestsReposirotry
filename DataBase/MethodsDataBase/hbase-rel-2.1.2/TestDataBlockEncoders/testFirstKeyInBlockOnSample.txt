/** 
 * Test whether the decompression of first key is implemented correctly.
 * @throws IOException
 */
@Test public void testFirstKeyInBlockOnSample() throws IOException {
  List<KeyValue> sampleKv=generator.generateTestKeyValues(NUMBER_OF_KV,includesTags);
  for (  DataBlockEncoding encoding : DataBlockEncoding.values()) {
    if (encoding.getEncoder() == null) {
      continue;
    }
    DataBlockEncoder encoder=encoding.getEncoder();
    ByteBuffer encodedBuffer=encodeKeyValues(encoding,sampleKv,getEncodingContext(Compression.Algorithm.NONE,encoding),this.useOffheapData);
    Cell key=encoder.getFirstKeyCellInBlock(new SingleByteBuff(encodedBuffer));
    KeyValue firstKv=sampleKv.get(0);
    if (0 != PrivateCellUtil.compareKeyIgnoresMvcc(CellComparatorImpl.COMPARATOR,key,firstKv)) {
      int commonPrefix=PrivateCellUtil.findCommonPrefixInFlatKey(key,firstKv,false,true);
      fail(String.format("Bug in '%s' commonPrefix %d",encoder.toString(),commonPrefix));
    }
  }
}
