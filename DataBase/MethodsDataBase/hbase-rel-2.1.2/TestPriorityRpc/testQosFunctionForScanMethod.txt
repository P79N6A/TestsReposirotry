@Test public void testQosFunctionForScanMethod() throws IOException {
  RequestHeader.Builder headerBuilder=RequestHeader.newBuilder();
  headerBuilder.setMethodName("Scan");
  RequestHeader header=headerBuilder.build();
  ScanRequest.Builder scanBuilder=ScanRequest.newBuilder();
  ScanRequest scanRequest=scanBuilder.build();
  HRegion mockRegion=Mockito.mock(HRegion.class);
  HRegionServer mockRS=Mockito.mock(HRegionServer.class);
  RSRpcServices mockRpc=Mockito.mock(RSRpcServices.class);
  Mockito.when(mockRS.getRSRpcServices()).thenReturn(mockRpc);
  RegionInfo mockRegionInfo=Mockito.mock(RegionInfo.class);
  Mockito.when(mockRpc.getRegion(Mockito.any())).thenReturn(mockRegion);
  Mockito.when(mockRegion.getRegionInfo()).thenReturn(mockRegionInfo);
  Mockito.when(mockRegionInfo.getTable()).thenReturn(TableName.valueOf("testQosFunctionForScanMethod"));
  ((AnnotationReadingPriorityFunction)priority).setRegionServer(mockRS);
  int qos=priority.getPriority(header,scanRequest,User.createUserForTesting(regionServer.conf,"someuser",new String[]{"somegroup"}));
  assertTrue("" + qos,qos == HConstants.NORMAL_QOS);
  scanBuilder=ScanRequest.newBuilder();
  scanBuilder.setScannerId(12345);
  scanRequest=scanBuilder.build();
  RegionScanner mockRegionScanner=Mockito.mock(RegionScanner.class);
  Mockito.when(mockRpc.getScanner(12345)).thenReturn(mockRegionScanner);
  Mockito.when(mockRegionScanner.getRegionInfo()).thenReturn(mockRegionInfo);
  Mockito.when(mockRpc.getRegion((RegionSpecifier)Mockito.any())).thenReturn(mockRegion);
  Mockito.when(mockRegion.getRegionInfo()).thenReturn(mockRegionInfo);
  Mockito.when(mockRegionInfo.getTable()).thenReturn(RegionInfoBuilder.FIRST_META_REGIONINFO.getTable());
  ((AnnotationReadingPriorityFunction)priority).setRegionServer(mockRS);
  assertEquals(HConstants.SYSTEMTABLE_QOS,priority.getPriority(header,scanRequest,User.createUserForTesting(regionServer.conf,"someuser",new String[]{"somegroup"})));
  Mockito.when(mockRegionInfo.getTable()).thenReturn(TableName.valueOf("testQosFunctionForScanMethod"));
  assertEquals(HConstants.NORMAL_QOS,priority.getPriority(header,scanRequest,User.createUserForTesting(regionServer.conf,"someuser",new String[]{"somegroup"})));
}
