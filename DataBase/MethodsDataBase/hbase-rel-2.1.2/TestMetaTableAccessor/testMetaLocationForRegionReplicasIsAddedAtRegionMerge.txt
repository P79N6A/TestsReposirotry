@Test public void testMetaLocationForRegionReplicasIsAddedAtRegionMerge() throws IOException {
  long regionId=System.currentTimeMillis();
  ServerName serverName0=ServerName.valueOf("foo",60010,random.nextLong());
  RegionInfo parentA=RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(Bytes.toBytes("a")).setEndKey(HConstants.EMPTY_END_ROW).setSplit(false).setRegionId(regionId).setReplicaId(0).build();
  RegionInfo parentB=RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(HConstants.EMPTY_START_ROW).setEndKey(Bytes.toBytes("a")).setSplit(false).setRegionId(regionId).setReplicaId(0).build();
  RegionInfo merged=RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(HConstants.EMPTY_START_ROW).setEndKey(HConstants.EMPTY_END_ROW).setSplit(false).setRegionId(regionId + 1).setReplicaId(0).build();
  try (Table meta=MetaTableAccessor.getMetaHTable(connection)){
    List<RegionInfo> regionInfos=Lists.newArrayList(parentA,parentB);
    MetaTableAccessor.addRegionsToMeta(connection,regionInfos,3);
    MetaTableAccessor.mergeRegions(connection,merged,parentA,-1L,parentB,-1L,serverName0,3);
    assertEmptyMetaLocation(meta,merged.getRegionName(),1);
    assertEmptyMetaLocation(meta,merged.getRegionName(),2);
  }
 }
