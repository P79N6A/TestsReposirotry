@Test public void testMetaScanner() throws Exception {
  LOG.info("Starting " + name.getMethodName());
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final byte[] FAMILY=Bytes.toBytes("family");
  final byte[][] SPLIT_KEYS=new byte[][]{Bytes.toBytes("region_a"),Bytes.toBytes("region_b")};
  UTIL.createTable(tableName,FAMILY,SPLIT_KEYS);
  Table table=connection.getTable(tableName);
  UTIL.countRows(table);
  MetaTableAccessor.Visitor visitor=mock(MetaTableAccessor.Visitor.class);
  doReturn(true).when(visitor).visit((Result)anyObject());
  MetaTableAccessor.scanMetaForTableRegions(connection,visitor,tableName);
  verify(visitor,times(3)).visit((Result)anyObject());
  reset(visitor);
  doReturn(true).when(visitor).visit((Result)anyObject());
  MetaTableAccessor.scanMeta(connection,visitor,tableName,null,1000);
  verify(visitor,times(3)).visit((Result)anyObject());
  reset(visitor);
  doReturn(true).when(visitor).visit((Result)anyObject());
  MetaTableAccessor.scanMeta(connection,visitor,tableName,Bytes.toBytes("region_ac"),1000);
  verify(visitor,times(2)).visit((Result)anyObject());
  reset(visitor);
  doReturn(true).when(visitor).visit((Result)anyObject());
  MetaTableAccessor.scanMeta(connection,visitor,tableName,Bytes.toBytes("region_ac"),1);
  verify(visitor,times(1)).visit((Result)anyObject());
  table.close();
}
