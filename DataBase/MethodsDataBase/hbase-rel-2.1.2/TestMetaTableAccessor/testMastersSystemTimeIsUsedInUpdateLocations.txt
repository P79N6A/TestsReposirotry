/** 
 * Tests whether maximum of masters system time versus RSs local system time is used
 */
@Test public void testMastersSystemTimeIsUsedInUpdateLocations() throws IOException {
  long regionId=System.currentTimeMillis();
  RegionInfo regionInfo=RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(HConstants.EMPTY_START_ROW).setEndKey(HConstants.EMPTY_END_ROW).setSplit(false).setRegionId(regionId).setReplicaId(0).build();
  ServerName sn=ServerName.valueOf("bar",0,0);
  try (Table meta=MetaTableAccessor.getMetaHTable(connection)){
    List<RegionInfo> regionInfos=Lists.newArrayList(regionInfo);
    MetaTableAccessor.addRegionsToMeta(connection,regionInfos,1);
    long masterSystemTime=EnvironmentEdgeManager.currentTime() + 123456789;
    MetaTableAccessor.updateRegionLocation(connection,regionInfo,sn,1,masterSystemTime);
    Get get=new Get(regionInfo.getRegionName());
    Result result=meta.get(get);
    Cell serverCell=result.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getServerColumn(0));
    Cell startCodeCell=result.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getStartCodeColumn(0));
    Cell seqNumCell=result.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getSeqNumColumn(0));
    assertNotNull(serverCell);
    assertNotNull(startCodeCell);
    assertNotNull(seqNumCell);
    assertTrue(serverCell.getValueLength() > 0);
    assertTrue(startCodeCell.getValueLength() > 0);
    assertTrue(seqNumCell.getValueLength() > 0);
    assertEquals(masterSystemTime,serverCell.getTimestamp());
    assertEquals(masterSystemTime,startCodeCell.getTimestamp());
    assertEquals(masterSystemTime,seqNumCell.getTimestamp());
  }
 }
