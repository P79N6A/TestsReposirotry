@Test public void testEmptyMetaDaughterLocationDuringSplit() throws IOException {
  long regionId=System.currentTimeMillis();
  ServerName serverName0=ServerName.valueOf("foo",60010,random.nextLong());
  RegionInfo parent=RegionInfoBuilder.newBuilder(TableName.valueOf("table_foo")).setStartKey(HConstants.EMPTY_START_ROW).setEndKey(HConstants.EMPTY_END_ROW).setSplit(false).setRegionId(regionId).setReplicaId(0).build();
  RegionInfo splitA=RegionInfoBuilder.newBuilder(TableName.valueOf("table_foo")).setStartKey(HConstants.EMPTY_START_ROW).setEndKey(Bytes.toBytes("a")).setSplit(false).setRegionId(regionId + 1).setReplicaId(0).build();
  RegionInfo splitB=RegionInfoBuilder.newBuilder(TableName.valueOf("table_foo")).setStartKey(Bytes.toBytes("a")).setEndKey(HConstants.EMPTY_END_ROW).setSplit(false).setRegionId(regionId + 1).setReplicaId(0).build();
  Table meta=MetaTableAccessor.getMetaHTable(connection);
  try {
    List<RegionInfo> regionInfos=Lists.newArrayList(parent);
    MetaTableAccessor.addRegionsToMeta(connection,regionInfos,3);
    MetaTableAccessor.splitRegion(connection,parent,-1L,splitA,splitB,serverName0,3);
    Get get1=new Get(splitA.getRegionName());
    Result resultA=meta.get(get1);
    Cell serverCellA=resultA.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getServerColumn(splitA.getReplicaId()));
    Cell startCodeCellA=resultA.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getStartCodeColumn(splitA.getReplicaId()));
    assertNull(serverCellA);
    assertNull(startCodeCellA);
    Get get2=new Get(splitA.getRegionName());
    Result resultB=meta.get(get2);
    Cell serverCellB=resultB.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getServerColumn(splitB.getReplicaId()));
    Cell startCodeCellB=resultB.getColumnLatestCell(HConstants.CATALOG_FAMILY,MetaTableAccessor.getStartCodeColumn(splitB.getReplicaId()));
    assertNull(serverCellB);
    assertNull(startCodeCellB);
  }
  finally {
    if (meta != null) {
      meta.close();
    }
  }
}
