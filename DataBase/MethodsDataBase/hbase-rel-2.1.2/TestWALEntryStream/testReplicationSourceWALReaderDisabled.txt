@Test public void testReplicationSourceWALReaderDisabled() throws IOException, InterruptedException, ExecutionException {
  appendEntriesToLogAndSync(3);
  long position;
  try (WALEntryStream entryStream=new WALEntryStream(walQueue,fs,CONF,0,log,null,new MetricsSource("1"))){
    entryStream.next();
    entryStream.next();
    entryStream.next();
    position=entryStream.getPosition();
  }
   Path walPath=walQueue.peek();
  ReplicationSource source=mockReplicationSource(false,CONF);
  AtomicInteger invokeCount=new AtomicInteger(0);
  AtomicBoolean enabled=new AtomicBoolean(false);
  when(source.isPeerEnabled()).then(i -> {
    invokeCount.incrementAndGet();
    return enabled.get();
  }
);
  ReplicationSourceWALReader reader=new ReplicationSourceWALReader(fs,CONF,walQueue,0,getDummyFilter(),source);
  reader.start();
  Future<WALEntryBatch> future=ForkJoinPool.commonPool().submit(() -> {
    return reader.take();
  }
);
  TEST_UTIL.waitFor(30000,() -> invokeCount.get() >= 5);
  assertFalse(future.isDone());
  enabled.set(true);
  WALEntryBatch entryBatch=future.get();
  assertNotNull(entryBatch);
  assertEquals(3,entryBatch.getWalEntries().size());
  assertEquals(position,entryBatch.getLastWalPosition());
  assertEquals(walPath,entryBatch.getLastWalPath());
  assertEquals(3,entryBatch.getNbRowKeys());
}
