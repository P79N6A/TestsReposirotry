/** 
 * Add keyvalues with a fixed memstoreTs, and checks that memstore size is decreased as older keyvalues are deleted from the memstore.
 * @throws Exception
 */
@Override @Test public void testUpsertMemstoreSize() throws Exception {
  MemStoreSize oldSize=memstore.size();
  List<Cell> l=new ArrayList<>();
  KeyValue kv1=KeyValueTestUtil.create("r","f","q",100,"v");
  KeyValue kv2=KeyValueTestUtil.create("r","f","q",101,"v");
  KeyValue kv3=KeyValueTestUtil.create("r","f","q",102,"v");
  kv1.setSequenceId(1);
  kv2.setSequenceId(1);
  kv3.setSequenceId(1);
  l.add(kv1);
  l.add(kv2);
  l.add(kv3);
  this.memstore.upsert(l,2,null);
  MemStoreSize newSize=this.memstore.size();
  assert (newSize.getDataSize() > oldSize.getDataSize());
  assert (memstore.getActive().getCellsCount() == 2);
  KeyValue kv4=KeyValueTestUtil.create("r","f","q",104,"v");
  kv4.setSequenceId(1);
  l.clear();
  l.add(kv4);
  this.memstore.upsert(l,3,null);
  assertEquals(newSize,this.memstore.size());
  assert (memstore.getActive().getCellsCount() == 2);
}
