@Test public void testPuttingBackChunksWithOpeningPipelineScanner() throws IOException {
  MemoryCompactionPolicy compactionType=MemoryCompactionPolicy.EAGER;
  memstore.getConfiguration().set(CompactingMemStore.COMPACTING_MEMSTORE_TYPE_KEY,String.valueOf(compactionType));
  ((MyCompactingMemStore)memstore).initiateType(compactionType,memstore.getConfiguration());
  byte[] row=Bytes.toBytes("testrow");
  byte[] fam=Bytes.toBytes("testfamily");
  byte[] qf1=Bytes.toBytes("testqualifier1");
  byte[] qf2=Bytes.toBytes("testqualifier2");
  byte[] qf3=Bytes.toBytes("testqualifier3");
  byte[] val=Bytes.toBytes("testval");
  memstore.add(new KeyValue(row,fam,qf1,1,val),null);
  memstore.add(new KeyValue(row,fam,qf2,1,val),null);
  memstore.add(new KeyValue(row,fam,qf3,1,val),null);
  ((MyCompactingMemStore)memstore).disableCompaction();
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(0,memstore.getActive().getCellsCount());
  memstore.add(new KeyValue(row,fam,qf1,2,val),null);
  memstore.add(new KeyValue(row,fam,qf2,2,val),null);
  assertEquals(2,memstore.getActive().getCellsCount());
  ((CompactingMemStore)memstore).flushInMemory();
  List<KeyValueScanner> scanners=memstore.getScanners(0);
  ((MyCompactingMemStore)memstore).enableCompaction();
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(0,memstore.getActive().getCellsCount());
  memstore.add(new KeyValue(row,fam,qf3,3,val),null);
  memstore.add(new KeyValue(row,fam,qf2,3,val),null);
  memstore.add(new KeyValue(row,fam,qf1,3,val),null);
  assertEquals(3,memstore.getActive().getCellsCount());
  assertTrue(chunkCreator.getPoolSize() == 0);
  for (  KeyValueScanner scanner : scanners) {
    scanner.close();
  }
  assertTrue(chunkCreator.getPoolSize() > 0);
  chunkCreator.clearChunksInPool();
  MemStoreSnapshot snapshot=memstore.snapshot();
  for (  KeyValueScanner scanner : snapshot.getScanners()) {
    scanner.close();
  }
  memstore.clearSnapshot(snapshot.getId());
  snapshot=memstore.snapshot();
  memstore.add(new KeyValue(row,fam,qf2,4,val),null);
  memstore.add(new KeyValue(row,fam,qf3,4,val),null);
  scanners=memstore.getScanners(0);
  for (  KeyValueScanner scanner : scanners) {
    scanner.close();
  }
  for (  KeyValueScanner scanner : snapshot.getScanners()) {
    scanner.close();
  }
  memstore.clearSnapshot(snapshot.getId());
  assertTrue(chunkCreator.getPoolSize() > 0);
}
