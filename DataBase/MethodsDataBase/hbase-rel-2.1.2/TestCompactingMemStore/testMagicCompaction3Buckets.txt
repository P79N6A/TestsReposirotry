@Test public void testMagicCompaction3Buckets() throws IOException {
  MemoryCompactionPolicy compactionType=MemoryCompactionPolicy.ADAPTIVE;
  memstore.getConfiguration().set(CompactingMemStore.COMPACTING_MEMSTORE_TYPE_KEY,String.valueOf(compactionType));
  memstore.getConfiguration().setDouble(AdaptiveMemStoreCompactionStrategy.ADAPTIVE_COMPACTION_THRESHOLD_KEY,0.45);
  memstore.getConfiguration().setInt(AdaptiveMemStoreCompactionStrategy.COMPACTING_MEMSTORE_THRESHOLD_KEY,2);
  memstore.getConfiguration().setInt(CompactingMemStore.IN_MEMORY_FLUSH_THRESHOLD_FACTOR_KEY,1);
  ((MyCompactingMemStore)memstore).initiateType(compactionType,memstore.getConfiguration());
  String[] keys1={"A","B","D"};
  String[] keys2={"A"};
  String[] keys3={"A","A","B","C"};
  String[] keys4={"D","B","B"};
  int totalCellsLen1=addRowsByKeys(memstore,keys1);
  int oneCellOnCSLMHeapSize=120;
  assertEquals(totalCellsLen1,region.getMemStoreDataSize());
  long totalHeapSize=MutableSegment.DEEP_OVERHEAD + 3 * oneCellOnCSLMHeapSize;
  assertEquals(totalHeapSize,memstore.heapSize());
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(3,((CompactingMemStore)memstore).getImmutableSegments().getNumOfCells());
  assertEquals(1.0,((CompactingMemStore)memstore).getImmutableSegments().getEstimatedUniquesFrac(),0);
  assertEquals(0,memstore.getSnapshot().getCellsCount());
  addRowsByKeys(memstore,keys2);
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(4,((CompactingMemStore)memstore).getImmutableSegments().getNumOfCells());
  assertEquals(1.0,((CompactingMemStore)memstore).getImmutableSegments().getEstimatedUniquesFrac(),0);
  assertEquals(0,memstore.getSnapshot().getCellsCount());
  addRowsByKeys(memstore,keys3);
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(8,((CompactingMemStore)memstore).getImmutableSegments().getNumOfCells());
  assertEquals((4.0 / 8.0),((CompactingMemStore)memstore).getImmutableSegments().getEstimatedUniquesFrac(),0);
  assertEquals(0,memstore.getSnapshot().getCellsCount());
  addRowsByKeys(memstore,keys4);
  ((CompactingMemStore)memstore).flushInMemory();
  int numCells=((CompactingMemStore)memstore).getImmutableSegments().getNumOfCells();
  assertTrue(4 == numCells || 11 == numCells);
  assertEquals(0,memstore.getSnapshot().getCellsCount());
  MemStoreSize mss=memstore.getFlushableSize();
  MemStoreSnapshot snapshot=memstore.snapshot();
  region.decrMemStoreSize(mss);
  ImmutableSegment s=memstore.getSnapshot();
  numCells=s.getCellsCount();
  assertTrue(4 == numCells || 11 == numCells);
  assertEquals(0,regionServicesForStores.getMemStoreSize());
  memstore.clearSnapshot(snapshot.getId());
}
