/** 
 * Test meta in transition when master failover. This test used to manipulate region state up in zk. That is not allowed any more in hbase2 so I removed that messing. That makes this test anemic.
 */
@Test public void testMetaInTransitionWhenMasterFailover() throws Exception {
  final int NUM_MASTERS=1;
  final int NUM_RS=1;
  HBaseTestingUtility TEST_UTIL=new HBaseTestingUtility();
  TEST_UTIL.startMiniCluster(NUM_MASTERS,NUM_RS);
  try {
    MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
    LOG.info("Cluster started");
    HMaster activeMaster=cluster.getMaster();
    ServerName metaServerName=cluster.getServerHoldingMeta();
    HRegionServer hrs=cluster.getRegionServer(metaServerName);
    LOG.info("Aborting master");
    activeMaster.abort("test-kill");
    cluster.waitForMasterToStop(activeMaster.getServerName(),30000);
    LOG.info("Master has aborted");
    RegionState metaState=MetaTableLocator.getMetaRegionState(hrs.getZooKeeper());
    assertEquals("hbase:meta should be online on RS",metaState.getServerName(),metaServerName);
    assertEquals("hbase:meta should be online on RS",State.OPEN,metaState.getState());
    LOG.info("Starting up a new master");
    activeMaster=cluster.startMaster().getMaster();
    LOG.info("Waiting for master to be ready");
    cluster.waitForActiveAndReadyMaster();
    LOG.info("Master is ready");
    metaState=MetaTableLocator.getMetaRegionState(activeMaster.getZooKeeper());
    assertEquals("hbase:meta should be online on RS",metaState.getServerName(),metaServerName);
    assertEquals("hbase:meta should be online on RS",State.OPEN,metaState.getState());
  }
  finally {
    TEST_UTIL.shutdownMiniCluster();
  }
}
