@Test public void testAddRemoveLog() throws ReplicationException {
  ServerName serverName1=ServerName.valueOf("127.0.0.1",8000,10000);
  assertTrue(STORAGE.getAllQueues(serverName1).isEmpty());
  String queue1="1";
  String queue2="2";
  for (int i=0; i < 10; i++) {
    STORAGE.addWAL(serverName1,queue1,getFileName("file1",i));
    STORAGE.addWAL(serverName1,queue2,getFileName("file2",i));
  }
  List<String> queueIds=STORAGE.getAllQueues(serverName1);
  assertEquals(2,queueIds.size());
  assertThat(queueIds,hasItems("1","2"));
  List<String> wals1=STORAGE.getWALsInQueue(serverName1,queue1);
  List<String> wals2=STORAGE.getWALsInQueue(serverName1,queue2);
  assertEquals(10,wals1.size());
  assertEquals(10,wals2.size());
  for (int i=0; i < 10; i++) {
    assertThat(wals1,hasItems(getFileName("file1",i)));
    assertThat(wals2,hasItems(getFileName("file2",i)));
  }
  for (int i=0; i < 10; i++) {
    assertEquals(0,STORAGE.getWALPosition(serverName1,queue1,getFileName("file1",i)));
    assertEquals(0,STORAGE.getWALPosition(serverName1,queue2,getFileName("file2",i)));
    STORAGE.setWALPosition(serverName1,queue1,getFileName("file1",i),(i + 1) * 100,Collections.emptyMap());
    STORAGE.setWALPosition(serverName1,queue2,getFileName("file2",i),(i + 1) * 100 + 10,Collections.emptyMap());
  }
  for (int i=0; i < 10; i++) {
    assertEquals((i + 1) * 100,STORAGE.getWALPosition(serverName1,queue1,getFileName("file1",i)));
    assertEquals((i + 1) * 100 + 10,STORAGE.getWALPosition(serverName1,queue2,getFileName("file2",i)));
  }
  for (int i=0; i < 10; i++) {
    if (i % 2 == 0) {
      STORAGE.removeWAL(serverName1,queue1,getFileName("file1",i));
    }
 else {
      STORAGE.removeWAL(serverName1,queue2,getFileName("file2",i));
    }
  }
  queueIds=STORAGE.getAllQueues(serverName1);
  assertEquals(2,queueIds.size());
  assertThat(queueIds,hasItems("1","2"));
  ServerName serverName2=ServerName.valueOf("127.0.0.1",8001,10001);
  Pair<String,SortedSet<String>> peer1=STORAGE.claimQueue(serverName1,"1",serverName2);
  assertEquals("1-" + serverName1.getServerName(),peer1.getFirst());
  assertEquals(5,peer1.getSecond().size());
  int i=1;
  for (  String wal : peer1.getSecond()) {
    assertEquals(getFileName("file1",i),wal);
    assertEquals((i + 1) * 100,STORAGE.getWALPosition(serverName2,peer1.getFirst(),getFileName("file1",i)));
    i+=2;
  }
  queueIds=STORAGE.getAllQueues(serverName1);
  assertEquals(1,queueIds.size());
  assertThat(queueIds,hasItems("2"));
  wals2=STORAGE.getWALsInQueue(serverName1,queue2);
  assertEquals(5,wals2.size());
  for (i=0; i < 10; i+=2) {
    assertThat(wals2,hasItems(getFileName("file2",i)));
  }
  queueIds=STORAGE.getAllQueues(serverName2);
  assertEquals(1,queueIds.size());
  assertThat(queueIds,hasItems(peer1.getFirst()));
  wals1=STORAGE.getWALsInQueue(serverName2,peer1.getFirst());
  assertEquals(5,wals1.size());
  for (i=1; i < 10; i+=2) {
    assertThat(wals1,hasItems(getFileName("file1",i)));
  }
  Set<String> allWals=STORAGE.getAllWALs();
  assertEquals(10,allWals.size());
  for (i=0; i < 10; i++) {
    assertThat(allWals,hasItems(i % 2 == 0 ? getFileName("file2",i) : getFileName("file1",i)));
  }
}
