@Test public void testColumnWithEmptyQualifier() throws IOException, JAXBException {
  StringBuilder builder=new StringBuilder();
  builder.append("/*");
  builder.append("?");
  builder.append(Constants.SCAN_COLUMN + "=" + COLUMN_EMPTY);
  Response response=client.get("/" + TABLE + builder.toString(),Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  assertEquals(Constants.MIMETYPE_JSON,response.getHeader("content-type"));
  ObjectMapper mapper=new JacksonJaxbJsonProvider().locateMapper(CellSetModel.class,MediaType.APPLICATION_JSON_TYPE);
  CellSetModel model=mapper.readValue(response.getStream(),CellSetModel.class);
  int count=TestScannerResource.countCellSet(model);
  assertEquals(expectedRows3,count);
  checkRowsNotNull(model);
  RowModel startRow=model.getRows().get(0);
  assertEquals("aaa",Bytes.toString(startRow.getKey()));
  assertEquals(1,startRow.getCells().size());
  builder=new StringBuilder();
  builder.append("/*");
  builder.append("?");
  builder.append(Constants.SCAN_COLUMN + "=" + COLUMN_1);
  builder.append("&");
  builder.append(Constants.SCAN_COLUMN + "=" + COLUMN_EMPTY);
  response=client.get("/" + TABLE + builder.toString(),Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  assertEquals(Constants.MIMETYPE_JSON,response.getHeader("content-type"));
  mapper=new JacksonJaxbJsonProvider().locateMapper(CellSetModel.class,MediaType.APPLICATION_JSON_TYPE);
  model=mapper.readValue(response.getStream(),CellSetModel.class);
  count=TestScannerResource.countCellSet(model);
  assertEquals(expectedRows1 + expectedRows3,count);
  checkRowsNotNull(model);
}
