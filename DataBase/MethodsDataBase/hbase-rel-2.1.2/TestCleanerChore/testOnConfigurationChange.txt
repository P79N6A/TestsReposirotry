@Test public void testOnConfigurationChange() throws Exception {
  int availableProcessorNum=Runtime.getRuntime().availableProcessors();
  if (availableProcessorNum == 1) {
    return;
  }
  int initPoolSize=availableProcessorNum / 2;
  int changedPoolSize=availableProcessorNum;
  Stoppable stop=new StoppableImplementation();
  Configuration conf=UTIL.getConfiguration();
  Path testDir=UTIL.getDataTestDir();
  FileSystem fs=UTIL.getTestFileSystem();
  String confKey="hbase.test.cleaner.delegates";
  conf.set(confKey,AlwaysDelete.class.getName());
  conf.set(CleanerChore.CHORE_POOL_SIZE,String.valueOf(initPoolSize));
  AllValidPaths chore=new AllValidPaths("test-file-cleaner",stop,conf,fs,testDir,confKey);
  chore.setEnabled(true);
  int dirNums=6;
  Path[] subdirs=new Path[dirNums];
  for (int i=0; i < dirNums; i++) {
    subdirs[i]=new Path(testDir,"subdir-" + i);
    fs.mkdirs(subdirs[i]);
  }
  for (  Path subdir : subdirs) {
    createFiles(fs,subdir,6);
  }
  Thread t=new Thread(() -> chore.chore());
  t.setDaemon(true);
  t.start();
  conf.set(CleanerChore.CHORE_POOL_SIZE,String.valueOf(changedPoolSize));
  chore.onConfigurationChange(conf);
  assertEquals(changedPoolSize,chore.getChorePoolSize());
  t.join();
}
