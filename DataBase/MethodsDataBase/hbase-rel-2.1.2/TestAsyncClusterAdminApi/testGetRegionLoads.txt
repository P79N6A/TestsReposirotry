@Test public void testGetRegionLoads() throws Exception {
  admin.balancerSwitch(false).join();
  TableName[] tables=new TableName[]{TableName.valueOf(tableName.getNameAsString() + "1"),TableName.valueOf(tableName.getNameAsString() + "2"),TableName.valueOf(tableName.getNameAsString() + "3")};
  createAndLoadTable(tables);
  Thread.sleep(TEST_UTIL.getConfiguration().getInt("hbase.regionserver.msginterval",3 * 1000) * 2);
  Collection<ServerName> servers=admin.getRegionServers().get();
  for (  ServerName serverName : servers) {
    List<RegionInfo> regions=admin.getRegions(serverName).get();
    checkRegionsAndRegionLoads(regions,admin.getRegionMetrics(serverName).get());
  }
  for (  TableName table : tables) {
    List<RegionInfo> tableRegions=admin.getRegions(table).get();
    List<RegionMetrics> regionLoads=Lists.newArrayList();
    for (    ServerName serverName : servers) {
      regionLoads.addAll(admin.getRegionMetrics(serverName,table).get());
    }
    checkRegionsAndRegionLoads(tableRegions,regionLoads);
  }
  ClusterMetrics clusterStatus=admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).get();
  for (  Map.Entry<ServerName,ServerMetrics> entry : clusterStatus.getLiveServerMetrics().entrySet()) {
    ServerName sn=entry.getKey();
    ServerMetrics sm=entry.getValue();
    compareRegionLoads(sm.getRegionMetrics().values(),admin.getRegionMetrics(sn).get());
  }
  for (  ServerName serverName : clusterStatus.getLiveServerMetrics().keySet()) {
    ServerMetrics serverLoad=clusterStatus.getLiveServerMetrics().get(serverName);
  }
}
