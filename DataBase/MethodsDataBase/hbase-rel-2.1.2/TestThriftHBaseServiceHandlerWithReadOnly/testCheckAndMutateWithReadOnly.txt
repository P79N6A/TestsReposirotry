@Test public void testCheckAndMutateWithReadOnly() throws Exception {
  ThriftHBaseServiceHandler handler=createHandler();
  ByteBuffer table=wrap(tableAname);
  ByteBuffer row=wrap(Bytes.toBytes("row"));
  ByteBuffer family=wrap(familyAname);
  ByteBuffer qualifier=wrap(qualifierAname);
  ByteBuffer value=wrap(valueAname);
  List<TColumnValue> columnValuesB=new ArrayList<>(1);
  TColumnValue columnValueB=new TColumnValue(family,wrap(qualifierBname),wrap(valueBname));
  columnValuesB.add(columnValueB);
  TPut putB=new TPut(row,columnValuesB);
  putB.setColumnValues(columnValuesB);
  TRowMutations tRowMutations=new TRowMutations(row,Arrays.<TMutation>asList(TMutation.put(putB)));
  boolean exceptionCaught=false;
  try {
    handler.checkAndMutate(table,row,family,qualifier,TCompareOp.EQUAL,value,tRowMutations);
  }
 catch (  TIOError e) {
    exceptionCaught=true;
    assertTrue(e.getCause() instanceof DoNotRetryIOException);
    assertEquals("Thrift Server is in Read-only mode.",e.getMessage());
  }
 finally {
    assertTrue(exceptionCaught);
  }
}
