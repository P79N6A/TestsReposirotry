/** 
 * Test clearing a split parent from memory.
 */
@Test public void testInMemoryParentCleanup() throws IOException, InterruptedException {
  final AssignmentManager am=TEST_UTIL.getHBaseCluster().getMaster().getAssignmentManager();
  final ServerManager sm=TEST_UTIL.getHBaseCluster().getMaster().getServerManager();
  final CatalogJanitor janitor=TEST_UTIL.getHBaseCluster().getMaster().getCatalogJanitor();
  Admin admin=TEST_UTIL.getAdmin();
  admin.enableCatalogJanitor(false);
  final TableName tableName=TableName.valueOf(name.getMethodName());
  Table t=TEST_UTIL.createTable(tableName,FAMILY);
  int rowCount=TEST_UTIL.loadTable(t,FAMILY,false);
  RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(tableName);
  List<HRegionLocation> allRegionLocations=locator.getAllRegionLocations();
  HRegionLocation parent=allRegionLocations.get(0);
  List<HRegionLocation> daughters=splitRegion(parent.getRegionInfo());
  LOG.info("Parent region: " + parent);
  LOG.info("Daughter regions: " + daughters);
  assertNotNull("Should have found daughter regions for " + parent,daughters);
  assertTrue("Parent region should exist in RegionStates",am.getRegionStates().isRegionInRegionStates(parent.getRegionInfo()));
  assertTrue("Parent region should exist in ServerManager",sm.isRegionInServerManagerStates(parent.getRegionInfo()));
  Result r=MetaMockingUtil.getMetaTableRowResult(parent.getRegionInfo(),null,daughters.get(0).getRegionInfo(),daughters.get(1).getRegionInfo());
  janitor.cleanParent(parent.getRegionInfo(),r);
  assertFalse("Parent region should have been removed from RegionStates",am.getRegionStates().isRegionInRegionStates(parent.getRegionInfo()));
  assertFalse("Parent region should have been removed from ServerManager",sm.isRegionInServerManagerStates(parent.getRegionInfo()));
}
