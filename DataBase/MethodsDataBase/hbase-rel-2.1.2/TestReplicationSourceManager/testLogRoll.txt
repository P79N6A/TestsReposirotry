@Test public void testLogRoll() throws Exception {
  long baseline=1000;
  long time=baseline;
  MultiVersionConcurrencyControl mvcc=new MultiVersionConcurrencyControl();
  KeyValue kv=new KeyValue(r1,f1,r1);
  WALEdit edit=new WALEdit();
  edit.add(kv);
  WALFactory wals=new WALFactory(utility.getConfiguration(),URLEncoder.encode("regionserver:60020","UTF8"));
  ReplicationSourceManager replicationManager=replication.getReplicationManager();
  wals.getWALProvider().addWALActionsListener(new ReplicationSourceWALActionListener(conf,replicationManager));
  final WAL wal=wals.getWAL(hri);
  manager.init();
  HTableDescriptor htd=new HTableDescriptor(TableName.valueOf("tableame"));
  htd.addFamily(new HColumnDescriptor(f1));
  NavigableMap<byte[],Integer> scopes=new TreeMap<>(Bytes.BYTES_COMPARATOR);
  for (  byte[] fam : htd.getFamiliesKeys()) {
    scopes.put(fam,0);
  }
  for (long i=1; i < 101; i++) {
    if (i > 1 && i % 20 == 0) {
      wal.rollWriter();
    }
    LOG.info(Long.toString(i));
    final long txid=wal.append(hri,new WALKeyImpl(hri.getEncodedNameAsBytes(),test,System.currentTimeMillis(),mvcc,scopes),edit,true);
    wal.sync(txid);
  }
  LOG.info(baseline + " and " + time);
  baseline+=101;
  time=baseline;
  LOG.info(baseline + " and " + time);
  for (int i=0; i < 3; i++) {
    wal.append(hri,new WALKeyImpl(hri.getEncodedNameAsBytes(),test,System.currentTimeMillis(),mvcc,scopes),edit,true);
  }
  wal.sync();
  int logNumber=0;
  for (  Map.Entry<String,NavigableSet<String>> entry : manager.getWALs().get(slaveId).entrySet()) {
    logNumber+=entry.getValue().size();
  }
  assertEquals(6,logNumber);
  wal.rollWriter();
  manager.logPositionAndCleanOldLogs("1",false,new WALEntryBatch(0,manager.getSources().get(0).getCurrentPath()));
  wal.append(hri,new WALKeyImpl(hri.getEncodedNameAsBytes(),test,System.currentTimeMillis(),mvcc,scopes),edit,true);
  wal.sync();
  assertEquals(1,manager.getWALs().size());
}
