/** 
 * Firstly write 10 cells (with different time stamp) to a qualifier and flush to hfile1, then write 10 cells (with different time stamp) to the same qualifier and flush to hfile2. The latest cell (cell-A) in hfile1 and the oldest cell (cell-B) in hfile2 are with the same time stamp but different sequence id, and will get scanned successively during compaction. <p/> We set compaction.kv.max to 10 so compaction will scan 10 versions each round, meanwhile we set keepSeqIdPeriod=0 in  {@link DummyCompactor} so all10 versions of hfile2 will be written out with seqId cleaned (set to 0) including cell-B, then when scanner goes to cell-A it will cause a scan out-of-order assertion error before HBASE-16931
 * @throws Exception if error occurs during the test
 */
@Test public void testCompactionSeqId() throws Exception {
  final byte[] ROW=Bytes.toBytes("row");
  final byte[] QUALIFIER=Bytes.toBytes("qualifier");
  long timestamp=10000;
  for (int i=0; i < 10; i++) {
    Put put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER,timestamp + i,Bytes.toBytes("v" + i));
    r.put(put);
  }
  r.flush(true);
  for (int i=18; i > 8; i--) {
    Put put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER,timestamp + i,Bytes.toBytes("v" + i));
    r.put(put);
  }
  r.flush(true);
  r.compact(true);
}
