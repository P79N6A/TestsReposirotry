@Test public void testCancelPeriodicFlush() throws InterruptedException, ExecutionException {
  Put put=new Put(Bytes.toBytes(0)).addColumn(CF,CQ,VALUE);
  try (AsyncBufferedMutatorImpl mutator=(AsyncBufferedMutatorImpl)CONN.getBufferedMutatorBuilder(TABLE_NAME).setWriteBufferPeriodicFlush(1,TimeUnit.SECONDS).setWriteBufferSize(10 * put.heapSize()).build()){
    List<CompletableFuture<?>> futures=new ArrayList<>();
    futures.add(mutator.mutate(put));
    Timeout task=mutator.periodicFlushTask;
    assertNotNull(task);
    for (int i=1; ; i++) {
      futures.add(mutator.mutate(new Put(Bytes.toBytes(i)).addColumn(CF,CQ,VALUE)));
      if (mutator.periodicFlushTask == null) {
        break;
      }
    }
    assertTrue(task.isCancelled());
    CompletableFuture.allOf(futures.toArray(new CompletableFuture[0])).join();
    AsyncTable<?> table=CONN.getTable(TABLE_NAME);
    for (int i=0; i < futures.size(); i++) {
      assertArrayEquals(VALUE,table.get(new Get(Bytes.toBytes(i))).get().getValue(CF,CQ));
    }
  }
 }
