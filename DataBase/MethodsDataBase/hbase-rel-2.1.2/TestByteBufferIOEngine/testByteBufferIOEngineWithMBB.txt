@Test public void testByteBufferIOEngineWithMBB() throws Exception {
  int capacity=32 * 1024 * 1024;
  int testNum=100;
  int maxBlockSize=64 * 1024;
  ByteBufferIOEngine ioEngine=new ByteBufferIOEngine(capacity);
  int testOffsetAtStartNum=testNum / 10;
  int testOffsetAtEndNum=testNum / 10;
  for (int i=0; i < testNum; i++) {
    byte val=(byte)(Math.random() * 255);
    int blockSize=(int)(Math.random() * maxBlockSize);
    if (blockSize == 0) {
      blockSize=1;
    }
    byte[] byteArray=new byte[blockSize];
    for (int j=0; j < byteArray.length; ++j) {
      byteArray[j]=val;
    }
    ByteBuffer srcBuffer=ByteBuffer.wrap(byteArray);
    int offset=0;
    if (testOffsetAtStartNum > 0) {
      testOffsetAtStartNum--;
      offset=0;
    }
 else     if (testOffsetAtEndNum > 0) {
      testOffsetAtEndNum--;
      offset=capacity - blockSize;
    }
 else {
      offset=(int)(Math.random() * (capacity - maxBlockSize));
    }
    ioEngine.write(srcBuffer,offset);
    BufferGrabbingDeserializer deserializer=new BufferGrabbingDeserializer();
    ioEngine.read(offset,blockSize,deserializer);
    ByteBuff dstBuffer=deserializer.buf;
    for (int j=0; j < byteArray.length; ++j) {
      assertTrue(srcBuffer.get(j) == dstBuffer.get(j));
    }
  }
  assert testOffsetAtStartNum == 0;
  assert testOffsetAtEndNum == 0;
}
