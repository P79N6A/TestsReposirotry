@Test public void testReadRequestsCountNotFiltered() throws Exception {
  int resultCount;
  Scan scan;
  Append append;
  Put put;
  Increment increment;
  Get get;
  scan=new Scan();
  try (ResultScanner scanner=table.getScanner(scan)){
    resultCount=0;
    for (    Result ignore : scanner) {
      resultCount++;
    }
    testReadRequests(resultCount,3,0);
  }
   scan=new Scan(ROW2,ROW3);
  try (ResultScanner scanner=table.getScanner(scan)){
    resultCount=0;
    for (    Result ignore : scanner) {
      resultCount++;
    }
    testReadRequests(resultCount,1,0);
  }
   get=new Get(ROW2);
  Result result=table.get(get);
  resultCount=result.isEmpty() ? 0 : 1;
  testReadRequests(resultCount,1,0);
  increment=new Increment(ROW1);
  increment.addColumn(CF1,COL3,1);
  result=table.increment(increment);
  resultCount=result.isEmpty() ? 0 : 1;
  testReadRequests(resultCount,1,0);
  put=new Put(ROW1);
  put.addColumn(CF1,COL2,VAL2);
  boolean checkAndPut=table.checkAndMutate(ROW1,CF1).qualifier(COL2).ifEquals(VAL2).thenPut(put);
  resultCount=checkAndPut ? 1 : 0;
  testReadRequests(resultCount,1,0);
  append=new Append(ROW1);
  append.addColumn(CF1,COL2,VAL2);
  result=table.append(append);
  resultCount=result.isEmpty() ? 0 : 1;
  testReadRequests(resultCount,1,0);
  put=new Put(ROW1);
  put.addColumn(CF1,COL1,VAL1);
  RowMutations rm=new RowMutations(ROW1);
  rm.add(put);
  boolean checkAndMutate=table.checkAndMutate(ROW1,CF1).qualifier(COL1).ifEquals(VAL1).thenMutate(rm);
  resultCount=checkAndMutate ? 1 : 0;
  testReadRequests(resultCount,1,0);
}
