@Test public void testSecondaryAndTertiaryPlacementWithMultipleRacks(){
  Map<String,Integer> rackToServerCount=new HashMap<>();
  rackToServerCount.put("rack1",10);
  rackToServerCount.put("rack2",10);
  Triple<Map<RegionInfo,ServerName>,FavoredNodeAssignmentHelper,List<RegionInfo>> primaryRSMapAndHelper=secondaryAndTertiaryRSPlacementHelper(60000,rackToServerCount);
  FavoredNodeAssignmentHelper helper=primaryRSMapAndHelper.getSecond();
  Map<RegionInfo,ServerName> primaryRSMap=primaryRSMapAndHelper.getFirst();
  assertTrue(primaryRSMap.size() == 60000);
  Map<RegionInfo,ServerName[]> secondaryAndTertiaryMap=helper.placeSecondaryAndTertiaryRS(primaryRSMap);
  assertTrue(secondaryAndTertiaryMap.size() == 60000);
  for (  Map.Entry<RegionInfo,ServerName[]> entry : secondaryAndTertiaryMap.entrySet()) {
    ServerName[] allServersForRegion=entry.getValue();
    String primaryRSRack=rackManager.getRack(primaryRSMap.get(entry.getKey()));
    String secondaryRSRack=rackManager.getRack(allServersForRegion[0]);
    String tertiaryRSRack=rackManager.getRack(allServersForRegion[1]);
    Set<String> racks=Sets.newHashSet(primaryRSRack);
    racks.add(secondaryRSRack);
    racks.add(tertiaryRSRack);
    assertTrue(racks.size() >= 2);
  }
}
