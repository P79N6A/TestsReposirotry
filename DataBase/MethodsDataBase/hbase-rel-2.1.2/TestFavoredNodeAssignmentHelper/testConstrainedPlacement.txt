@Test public void testConstrainedPlacement() throws Exception {
  List<ServerName> servers=Lists.newArrayList();
  servers.add(ServerName.valueOf("foo" + 1 + ":1234",-1));
  servers.add(ServerName.valueOf("foo" + 2 + ":1234",-1));
  servers.add(ServerName.valueOf("foo" + 15 + ":1234",-1));
  FavoredNodeAssignmentHelper helper=new FavoredNodeAssignmentHelper(servers,rackManager);
  helper.initialize();
  assertTrue(helper.canPlaceFavoredNodes());
  List<RegionInfo> regions=new ArrayList<>(20);
  for (int i=0; i < 20; i++) {
    regions.add(RegionInfoBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setStartKey(Bytes.toBytes(i)).setEndKey(Bytes.toBytes(i + 1)).build());
  }
  Map<ServerName,List<RegionInfo>> assignmentMap=new HashMap<ServerName,List<RegionInfo>>();
  Map<RegionInfo,ServerName> primaryRSMap=new HashMap<RegionInfo,ServerName>();
  helper.placePrimaryRSAsRoundRobin(assignmentMap,primaryRSMap,regions);
  assertTrue(primaryRSMap.size() == regions.size());
  Map<RegionInfo,ServerName[]> secondaryAndTertiary=helper.placeSecondaryAndTertiaryRS(primaryRSMap);
  assertEquals(regions.size(),secondaryAndTertiary.size());
}
