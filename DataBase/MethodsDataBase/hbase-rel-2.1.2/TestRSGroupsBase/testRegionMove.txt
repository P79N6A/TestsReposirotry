@Test public void testRegionMove() throws Exception {
  final RSGroupInfo newGroup=addGroup(getGroupName(name.getMethodName()),1);
  final byte[] familyNameBytes=Bytes.toBytes("f");
  TEST_UTIL.createMultiRegionTable(tableName,familyNameBytes,6);
  TEST_UTIL.waitFor(WAIT_TIMEOUT,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      List<String> regions=getTableRegionMap().get(tableName);
      if (regions == null) {
        return false;
      }
      return getTableRegionMap().get(tableName).size() >= 6;
    }
  }
);
  Map<ServerName,List<String>> assignMap=getTableServerRegionMap().get(tableName);
  String targetRegion=null;
  for (  ServerName server : assignMap.keySet()) {
    targetRegion=assignMap.get(server).size() > 0 ? assignMap.get(server).get(0) : null;
    if (targetRegion != null) {
      break;
    }
  }
  ServerName targetServer=null;
  for (  ServerName server : admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().keySet()) {
    if (!newGroup.containsServer(server.getAddress())) {
      targetServer=server;
      break;
    }
  }
  final AdminProtos.AdminService.BlockingInterface targetRS=((ClusterConnection)admin.getConnection()).getAdmin(targetServer);
  rsGroupAdmin.moveServers(Sets.newHashSet(targetServer.getAddress()),newGroup.getName());
  TEST_UTIL.waitFor(WAIT_TIMEOUT,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return ProtobufUtil.getOnlineRegions(targetRS).size() <= 0;
    }
  }
);
  TEST_UTIL.getAdmin().move(Bytes.toBytes(RegionInfo.encodeRegionName(Bytes.toBytes(targetRegion))),Bytes.toBytes(targetServer.getServerName()));
  TEST_UTIL.waitFor(WAIT_TIMEOUT,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return getTableRegionMap().get(tableName) != null && getTableRegionMap().get(tableName).size() == 6 && admin.getClusterMetrics(EnumSet.of(Option.REGIONS_IN_TRANSITION)).getRegionStatesInTransition().size() < 1;
    }
  }
);
  for (  RegionInfo region : ProtobufUtil.getOnlineRegions(targetRS)) {
    if (targetRegion.equals(region.getRegionNameAsString())) {
      fail("Target server opened region");
    }
  }
}
