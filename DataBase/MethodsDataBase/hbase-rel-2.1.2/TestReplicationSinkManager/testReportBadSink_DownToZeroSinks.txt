@Test public void testReportBadSink_DownToZeroSinks(){
  List<ServerName> serverNames=Lists.newArrayList();
  int totalServers=4;
  for (int i=0; i < totalServers; i++) {
    serverNames.add(mock(ServerName.class));
  }
  when(replicationEndpoint.getRegionServers()).thenReturn(serverNames);
  sinkManager.chooseSinks();
  List<ServerName> sinkList=sinkManager.getSinksForTesting();
  int expected=(int)(totalServers * ReplicationSinkManager.DEFAULT_REPLICATION_SOURCE_RATIO);
  assertEquals(expected,sinkList.size());
  ServerName serverNameA=sinkList.get(0);
  ServerName serverNameB=sinkList.get(1);
  SinkPeer sinkPeerA=new SinkPeer(serverNameA,mock(AdminService.BlockingInterface.class));
  SinkPeer sinkPeerB=new SinkPeer(serverNameB,mock(AdminService.BlockingInterface.class));
  for (int i=0; i <= ReplicationSinkManager.DEFAULT_BAD_SINK_THRESHOLD; i++) {
    sinkManager.reportBadSink(sinkPeerA);
    sinkManager.reportBadSink(sinkPeerB);
  }
  expected=(int)((totalServers - 2) * ReplicationSinkManager.DEFAULT_REPLICATION_SOURCE_RATIO);
  assertEquals(expected,sinkManager.getNumSinks());
}
