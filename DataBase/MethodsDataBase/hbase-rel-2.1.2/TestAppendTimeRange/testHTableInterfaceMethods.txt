@Test public void testHTableInterfaceMethods() throws Exception {
  try (Table table=util.createTable(TableName.valueOf(name.getMethodName()),TEST_FAMILY)){
    table.put(new Put(ROW).addColumn(TEST_FAMILY,QUAL,VALUE));
    long time=EnvironmentEdgeManager.currentTime();
    mee.setValue(time);
    table.put(new Put(ROW).addColumn(TEST_FAMILY,QUAL,Bytes.toBytes("a")));
    checkRowValue(table,ROW,Bytes.toBytes("a"));
    time=EnvironmentEdgeManager.currentTime();
    mee.setValue(time);
    TimeRange range10=new TimeRange(1,time + 10);
    Result r=table.append(new Append(ROW).addColumn(TEST_FAMILY,QUAL,Bytes.toBytes("b")).setTimeRange(range10.getMin(),range10.getMax()));
    checkRowValue(table,ROW,Bytes.toBytes("ab"));
    assertEquals(MyObserver.tr10.getMin(),range10.getMin());
    assertEquals(MyObserver.tr10.getMax(),range10.getMax());
    time=EnvironmentEdgeManager.currentTime();
    mee.setValue(time);
    TimeRange range2=new TimeRange(1,time + 20);
    List<Row> actions=Arrays.asList(new Row[]{new Append(ROW).addColumn(TEST_FAMILY,QUAL,Bytes.toBytes("c")).setTimeRange(range2.getMin(),range2.getMax()),new Append(ROW).addColumn(TEST_FAMILY,QUAL,Bytes.toBytes("c")).setTimeRange(range2.getMin(),range2.getMax())});
    Object[] results1=new Object[actions.size()];
    table.batch(actions,results1);
    assertEquals(MyObserver.tr2.getMin(),range2.getMin());
    assertEquals(MyObserver.tr2.getMax(),range2.getMax());
    for (    Object r2 : results1) {
      assertTrue(r2 instanceof Result);
    }
    checkRowValue(table,ROW,Bytes.toBytes("abcc"));
  }
 }
