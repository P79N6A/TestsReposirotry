/** 
 * Test to ensure correctness when using Stores with multiple timestamps
 * @throws IOException
 */
@Test public void testMultipleTimestamps() throws IOException {
  int numRows=1;
  long[] timestamps1=new long[]{1,5,10,20};
  long[] timestamps2=new long[]{30,80};
  init(this.name.getMethodName());
  List<Cell> kvList1=getKeyValueSet(timestamps1,numRows,qf1,family);
  for (  Cell kv : kvList1) {
    this.store.add(kv,null);
  }
  this.store.snapshot();
  flushStore(store,id++);
  List<Cell> kvList2=getKeyValueSet(timestamps2,numRows,qf1,family);
  for (  Cell kv : kvList2) {
    this.store.add(kv,null);
  }
  List<Cell> result;
  Get get=new Get(Bytes.toBytes(1));
  get.addColumn(family,qf1);
  get.setTimeRange(0,15);
  result=HBaseTestingUtility.getFromStoreFile(store,get);
  assertTrue(result.size() > 0);
  get.setTimeRange(40,90);
  result=HBaseTestingUtility.getFromStoreFile(store,get);
  assertTrue(result.size() > 0);
  get.setTimeRange(10,45);
  result=HBaseTestingUtility.getFromStoreFile(store,get);
  assertTrue(result.size() > 0);
  get.setTimeRange(80,145);
  result=HBaseTestingUtility.getFromStoreFile(store,get);
  assertTrue(result.size() > 0);
  get.setTimeRange(1,2);
  result=HBaseTestingUtility.getFromStoreFile(store,get);
  assertTrue(result.size() > 0);
  get.setTimeRange(90,200);
  result=HBaseTestingUtility.getFromStoreFile(store,get);
  assertTrue(result.size() == 0);
}
