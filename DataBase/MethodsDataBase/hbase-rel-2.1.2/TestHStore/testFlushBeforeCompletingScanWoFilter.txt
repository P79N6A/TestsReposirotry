@Test public void testFlushBeforeCompletingScanWoFilter() throws IOException, InterruptedException {
  final AtomicBoolean timeToGoNextRow=new AtomicBoolean(false);
  final int expectedSize=3;
  testFlushBeforeCompletingScan(new MyListHook(){
    @Override public void hook(    int currentSize){
      if (currentSize == expectedSize - 1) {
        try {
          flushStore(store,id++);
          timeToGoNextRow.set(true);
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
,new FilterBase(){
    @Override public Filter.ReturnCode filterCell(    final Cell c) throws IOException {
      return ReturnCode.INCLUDE;
    }
  }
,expectedSize);
}
