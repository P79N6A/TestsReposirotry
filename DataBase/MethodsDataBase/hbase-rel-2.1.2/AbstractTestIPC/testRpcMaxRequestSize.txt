/** 
 * Tests that the rpc scheduler is called when requests arrive. 
 */
@Test public void testRpcMaxRequestSize() throws IOException, ServiceException {
  Configuration conf=new Configuration(CONF);
  conf.setInt(RpcServer.MAX_REQUEST_SIZE,1000);
  RpcServer rpcServer=createRpcServer(null,"testRpcServer",Lists.newArrayList(new RpcServer.BlockingServiceAndInterface(SERVICE,null)),new InetSocketAddress("localhost",0),conf,new FifoRpcScheduler(conf,1));
  try (AbstractRpcClient<?> client=createRpcClient(conf)){
    rpcServer.start();
    BlockingInterface stub=newBlockingStub(client,rpcServer.getListenerAddress());
    StringBuilder message=new StringBuilder(1200);
    for (int i=0; i < 200; i++) {
      message.append("hello.");
    }
    EchoRequestProto param=EchoRequestProto.newBuilder().setMessage(message.toString()).build();
    stub.echo(new HBaseRpcControllerImpl(CellUtil.createCellScanner(ImmutableList.<Cell>of(CELL))),param);
    fail("RPC should have failed because it exceeds max request size");
  }
 catch (  ServiceException e) {
    LOG.info("Caught expected exception: " + e);
    assertTrue(e.toString(),StringUtils.stringifyException(e).contains("RequestTooBigException"));
  }
 finally {
    rpcServer.stop();
  }
}
