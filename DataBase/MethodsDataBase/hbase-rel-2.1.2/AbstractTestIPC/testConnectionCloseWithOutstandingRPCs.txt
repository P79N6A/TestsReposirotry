/** 
 * Tests that the connection closing is handled by the client with outstanding RPC calls 
 */
@Test public void testConnectionCloseWithOutstandingRPCs() throws InterruptedException, IOException {
  Configuration conf=new Configuration(CONF);
  RpcServer rpcServer=createTestFailingRpcServer(null,"testRpcServer",Lists.newArrayList(new RpcServer.BlockingServiceAndInterface(SERVICE,null)),new InetSocketAddress("localhost",0),CONF,new FifoRpcScheduler(CONF,1));
  try (AbstractRpcClient<?> client=createRpcClient(conf)){
    rpcServer.start();
    BlockingInterface stub=newBlockingStub(client,rpcServer.getListenerAddress());
    EchoRequestProto param=EchoRequestProto.newBuilder().setMessage("hello").build();
    stub.echo(null,param);
    fail("RPC should have failed because connection closed");
  }
 catch (  ServiceException e) {
    LOG.info("Caught expected exception: " + e.toString());
  }
 finally {
    rpcServer.stop();
  }
}
