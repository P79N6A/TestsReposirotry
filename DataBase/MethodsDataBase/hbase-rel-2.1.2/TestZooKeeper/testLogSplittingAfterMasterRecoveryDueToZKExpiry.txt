/** 
 * Tests whether the logs are split when master recovers from a expired zookeeper session and an RS goes down.
 */
@Test public void testLogSplittingAfterMasterRecoveryDueToZKExpiry() throws Exception {
  MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  cluster.startRegionServer();
  TableName tableName=TableName.valueOf(name.getMethodName());
  byte[] family=Bytes.toBytes("col");
  try (Admin admin=TEST_UTIL.getAdmin()){
    byte[][] SPLIT_KEYS=new byte[][]{Bytes.toBytes("1"),Bytes.toBytes("2"),Bytes.toBytes("3"),Bytes.toBytes("4"),Bytes.toBytes("5")};
    TableDescriptor htd=TableDescriptorBuilder.newBuilder(tableName).setColumnFamily(ColumnFamilyDescriptorBuilder.of(family)).build();
    admin.createTable(htd,SPLIT_KEYS);
  }
   TEST_UTIL.waitUntilNoRegionsInTransition(60000);
  HMaster m=cluster.getMaster();
  try (Table table=TEST_UTIL.getConnection().getTable(tableName)){
    int numberOfPuts;
    for (numberOfPuts=0; numberOfPuts < 6; numberOfPuts++) {
      Put p=new Put(Bytes.toBytes(numberOfPuts));
      p.addColumn(Bytes.toBytes("col"),Bytes.toBytes("ql"),Bytes.toBytes("value" + numberOfPuts));
      table.put(p);
    }
    m.abort("Test recovery from zk session expired",new KeeperException.SessionExpiredException());
    assertTrue(m.isStopped());
    cluster.killRegionServer(TEST_UTIL.getRSForFirstRegionInTable(tableName).getServerName());
    int numberOfRows=0;
    try (ResultScanner scanner=table.getScanner(new Scan())){
      while (scanner.next() != null) {
        numberOfRows++;
      }
    }
     assertEquals("Number of rows should be equal to number of puts.",numberOfPuts,numberOfRows);
  }
 }
