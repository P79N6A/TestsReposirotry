@Test public void testRITAssignmentManagerMetrics() throws Exception {
  final TableName TABLENAME=TableName.valueOf(name.getMethodName());
  final byte[] FAMILY=Bytes.toBytes("family");
  try (Table table=TEST_UTIL.createTable(TABLENAME,FAMILY)){
    final byte[] row=Bytes.toBytes("row");
    final byte[] qualifier=Bytes.toBytes("qualifier");
    final byte[] value=Bytes.toBytes("value");
    Put put=new Put(row);
    put.addColumn(FAMILY,qualifier,value);
    table.put(put);
    Thread.sleep(MSG_INTERVAL * 3);
    MetricsAssignmentManagerSource amSource=MASTER.getAssignmentManager().getAssignmentManagerMetrics().getMetricsProcSource();
    METRICS_HELPER.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_NAME,0,amSource);
    METRICS_HELPER.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_OVER_THRESHOLD_NAME,0,amSource);
    TableDescriptor htd=TableDescriptorBuilder.newBuilder(TABLENAME).setColumnFamily(ColumnFamilyDescriptorBuilder.of(FAMILY)).setCoprocessor(CoprocessorDescriptorBuilder.newBuilder("com.foo.FooRegionObserver").setJarPath("hdfs:///foo.jar").setPriority(1001).setProperty("arg1","1").setProperty("arg2","2").build()).build();
    try {
      TEST_UTIL.getAdmin().modifyTable(htd);
      fail("Expected region failed to open");
    }
 catch (    IOException e) {
      LOG.info("Expected error",e);
    }
    TEST_UTIL.waitUntilNoRegionsInTransition();
    Thread.sleep(MSG_INTERVAL * 5);
    METRICS_HELPER.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_NAME,1,amSource);
    METRICS_HELPER.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_OVER_THRESHOLD_NAME,1,amSource);
  }
 }
