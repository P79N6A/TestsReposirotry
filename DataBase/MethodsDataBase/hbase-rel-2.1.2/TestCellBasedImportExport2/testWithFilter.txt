/** 
 * Create a simple table, run an Export Job on it, Import with filtering on,  verify counts, attempt with invalid values.
 */
@Test public void testWithFilter() throws Throwable {
  TableDescriptor desc=TableDescriptorBuilder.newBuilder(TableName.valueOf(name.getMethodName())).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(FAMILYA).setMaxVersions(5).build()).build();
  UTIL.getAdmin().createTable(desc);
  Table exportTable=UTIL.getConnection().getTable(desc.getTableName());
  Put p1=new Put(ROW1);
  p1.addColumn(FAMILYA,QUAL,now,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 1,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 2,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 3,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 4,QUAL);
  Put p2=new Put(ROW2);
  p2.addColumn(FAMILYA,QUAL,now,QUAL);
  exportTable.put(Arrays.asList(p1,p2));
  String[] args=new String[]{name.getMethodName(),FQ_OUTPUT_DIR,"1000"};
  assertTrue(runExport(args));
  final String IMPORT_TABLE=name.getMethodName() + "import";
  desc=TableDescriptorBuilder.newBuilder(TableName.valueOf(IMPORT_TABLE)).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(FAMILYA).setMaxVersions(5).build()).build();
  UTIL.getAdmin().createTable(desc);
  Table importTable=UTIL.getConnection().getTable(desc.getTableName());
  args=new String[]{"-D" + Import.FILTER_CLASS_CONF_KEY + "="+ PrefixFilter.class.getName(),"-D" + Import.FILTER_ARGS_CONF_KEY + "="+ Bytes.toString(ROW1),IMPORT_TABLE,FQ_OUTPUT_DIR,"1000"};
  assertTrue(runImport(args));
  PrefixFilter filter=new PrefixFilter(ROW1);
  int count=getCount(exportTable,filter);
  Assert.assertEquals("Unexpected row count between export and import tables",count,getCount(importTable,null));
  args=new String[]{"-D" + Import.FILTER_CLASS_CONF_KEY + "="+ Filter.class.getName(),"-D" + Import.FILTER_ARGS_CONF_KEY + "="+ Bytes.toString(ROW1)+ "",name.getMethodName(),FQ_OUTPUT_DIR,"1000"};
  assertFalse(runImport(args));
  exportTable.close();
  importTable.close();
}
