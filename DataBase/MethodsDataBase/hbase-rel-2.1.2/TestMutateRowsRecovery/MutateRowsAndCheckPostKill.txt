@Test public void MutateRowsAndCheckPostKill() throws IOException, InterruptedException {
  final TableName tableName=TableName.valueOf("test");
  Admin admin=null;
  Table hTable=null;
  try {
    admin=connection.getAdmin();
    hTable=connection.getTable(tableName);
    HTableDescriptor desc=new HTableDescriptor(tableName);
    desc.addFamily(new HColumnDescriptor(fam1));
    admin.createTable(desc);
    RowMutations rm=new RowMutations(row1);
    Put p1=new Put(row1);
    p1.addColumn(fam1,qual1,value1);
    p1.setDurability(Durability.SYNC_WAL);
    rm.add(p1);
    hTable.mutateRow(rm);
    Put p2=new Put(row1);
    p2.addColumn(fam1,qual2,value2);
    p2.setDurability(Durability.SYNC_WAL);
    hTable.put(p2);
    HRegionServer rs1=TESTING_UTIL.getRSForFirstRegionInTable(tableName);
    long now=EnvironmentEdgeManager.currentTime();
    rs1.tryRegionServerReport(now - 30000,now);
    cluster.killRegionServer(rs1.serverName);
    Get g1=new Get(row1);
    Result result=hTable.get(g1);
    assertTrue(result.getValue(fam1,qual1) != null);
    assertEquals(0,Bytes.compareTo(result.getValue(fam1,qual1),value1));
    assertTrue(result.getValue(fam1,qual2) != null);
    assertEquals(0,Bytes.compareTo(result.getValue(fam1,qual2),value2));
  }
  finally {
    if (admin != null) {
      admin.close();
    }
    if (hTable != null) {
      hTable.close();
    }
  }
}
