@Test public void testWriteEntryCanBeNull() throws IOException {
  String testName=currentTest.getMethodName();
  AbstractFSWAL<?> wal=newWAL(FS,CommonFSUtils.getWALRootDir(CONF),DIR.toString(),testName,CONF,null,true,null,null);
  wal.close();
  TableDescriptor td=TableDescriptorBuilder.newBuilder(TableName.valueOf("table")).setColumnFamily(ColumnFamilyDescriptorBuilder.of("row")).build();
  RegionInfo ri=RegionInfoBuilder.newBuilder(td.getTableName()).build();
  MultiVersionConcurrencyControl mvcc=new MultiVersionConcurrencyControl();
  NavigableMap<byte[],Integer> scopes=new TreeMap<>(Bytes.BYTES_COMPARATOR);
  for (  byte[] fam : td.getColumnFamilyNames()) {
    scopes.put(fam,0);
  }
  long timestamp=System.currentTimeMillis();
  byte[] row=Bytes.toBytes("row");
  WALEdit cols=new WALEdit();
  cols.add(new KeyValue(row,row,row,timestamp,row));
  WALKeyImpl key=new WALKeyImpl(ri.getEncodedNameAsBytes(),td.getTableName(),SequenceId.NO_SEQUENCE_ID,timestamp,WALKey.EMPTY_UUIDS,HConstants.NO_NONCE,HConstants.NO_NONCE,mvcc,scopes);
  try {
    wal.append(ri,key,cols,true);
    fail("Should fail since the wal has already been closed");
  }
 catch (  IOException e) {
    assertThat(e.getMessage(),containsString("log is closed"));
    assertNull(key.getWriteEntry());
  }
}
