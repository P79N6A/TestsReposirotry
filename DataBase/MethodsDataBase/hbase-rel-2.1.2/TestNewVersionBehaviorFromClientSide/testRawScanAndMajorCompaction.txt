@Test public void testRawScanAndMajorCompaction() throws IOException {
  try (Table t=createTable()){
    t.put(new Put(ROW).addColumn(FAMILY,col1,1000001,value));
    t.put(new Put(ROW).addColumn(FAMILY,col1,1000002,value));
    t.put(new Put(ROW).addColumn(FAMILY,col1,1000003,value));
    t.put(new Put(ROW).addColumn(FAMILY,col1,1000004,value));
    t.delete(new Delete(ROW).addColumn(FAMILY,col1,1000004));
    t.delete(new Delete(ROW).addColumn(FAMILY,col1,1000003));
    try (ResultScanner scannner=t.getScanner(new Scan().setRaw(true).setMaxVersions())){
      Result r=scannner.next();
      assertNull(scannner.next());
      assertEquals(6,r.size());
    }
     TEST_UTIL.getAdmin().flush(t.getName());
    try (ResultScanner scannner=t.getScanner(new Scan().setRaw(true).setMaxVersions())){
      Result r=scannner.next();
      assertNull(scannner.next());
      assertEquals(6,r.size());
    }
     TEST_UTIL.getAdmin().majorCompact(t.getName());
    Threads.sleep(5000);
    try (ResultScanner scannner=t.getScanner(new Scan().setRaw(true).setMaxVersions())){
      Result r=scannner.next();
      assertNull(scannner.next());
      assertEquals(1,r.size());
      assertEquals(1000002,r.rawCells()[0].getTimestamp());
    }
   }
 }
