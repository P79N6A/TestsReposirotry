@Test public void testFileIOEngine() throws IOException {
  for (int i=0; i < 500; i++) {
    int len=(int)Math.floor(Math.random() * 100) + 1;
    long offset=(long)Math.floor(Math.random() * TOTAL_CAPACITY % (TOTAL_CAPACITY - len));
    if (i < boundaryStartPositions.size()) {
      offset=boundaryStartPositions.get(i);
    }
 else     if ((i - boundaryStartPositions.size()) < boundaryStopPositions.size()) {
      offset=boundaryStopPositions.get(i - boundaryStartPositions.size()) - len + 1;
    }
 else     if (i % 2 == 0) {
      offset=Math.max(1,i % FILE_PATHS.length) * SIZE_PER_FILE - len / 2;
    }
    byte[] data1=new byte[len];
    for (int j=0; j < data1.length; ++j) {
      data1[j]=(byte)(Math.random() * 255);
    }
    fileIOEngine.write(ByteBuffer.wrap(data1),offset);
    BufferGrabbingDeserializer deserializer=new BufferGrabbingDeserializer();
    fileIOEngine.read(offset,len,deserializer);
    ByteBuff data2=deserializer.getDeserializedByteBuff();
    assertArrayEquals(data1,data2.array());
  }
}
