/** 
 * For HBASE-71. Try a few different configurations of starting and stopping region servers to see if the assignment or regions is pretty balanced.
 * @throws IOException
 * @throws InterruptedException
 */
@Test public void testRebalanceOnRegionServerNumberChange() throws IOException, InterruptedException {
  try (Connection connection=ConnectionFactory.createConnection(UTIL.getConfiguration());Admin admin=connection.getAdmin()){
    admin.createTable(this.desc,Arrays.copyOfRange(HBaseTestingUtility.KEYS,1,HBaseTestingUtility.KEYS.length));
    this.regionLocator=connection.getRegionLocator(this.desc.getTableName());
    MetaTableAccessor.fullScanMetaAndPrint(admin.getConnection());
    assertEquals("Test table should have right number of regions",HBaseTestingUtility.KEYS.length,this.regionLocator.getStartKeys().length);
    assertRegionsAreBalanced();
    LOG.info("Started second server=" + UTIL.getHBaseCluster().startRegionServer().getRegionServer().getServerName());
    UTIL.getHBaseCluster().getMaster().balance();
    assertRegionsAreBalanced();
    assert (UTIL.getHBaseCluster().getMaster().balance() == true);
    LOG.info("Started third server=" + UTIL.getHBaseCluster().startRegionServer().getRegionServer().getServerName());
    waitForAllRegionsAssigned();
    assert (UTIL.getHBaseCluster().getMaster().balance() == true);
    assertRegionsAreBalanced();
    LOG.info("Stopped third server=" + UTIL.getHBaseCluster().stopRegionServer(2,false));
    UTIL.getHBaseCluster().waitOnRegionServer(2);
    waitOnCrashProcessing();
    UTIL.getHBaseCluster().getMaster().balance();
    assertRegionsAreBalanced();
    LOG.info("Readding third server=" + UTIL.getHBaseCluster().startRegionServer().getRegionServer().getServerName());
    LOG.info("Added fourth server=" + UTIL.getHBaseCluster().startRegionServer().getRegionServer().getServerName());
    waitOnCrashProcessing();
    waitForAllRegionsAssigned();
    assert (UTIL.getHBaseCluster().getMaster().balance() == true);
    assertRegionsAreBalanced();
    for (int i=0; i < 6; i++) {
      LOG.info("Adding " + (i + 5) + "th region server");
      UTIL.getHBaseCluster().startRegionServer();
    }
    waitForAllRegionsAssigned();
    assert (UTIL.getHBaseCluster().getMaster().balance() == true);
    assertRegionsAreBalanced();
    regionLocator.close();
  }
 }
