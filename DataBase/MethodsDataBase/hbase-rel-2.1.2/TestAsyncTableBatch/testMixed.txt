@Test public void testMixed() throws InterruptedException, ExecutionException, IOException {
  AsyncTable<?> table=tableGetter.apply(TABLE_NAME);
  table.putAll(IntStream.range(0,7).mapToObj(i -> new Put(Bytes.toBytes(i)).addColumn(FAMILY,CQ,Bytes.toBytes((long)i))).collect(Collectors.toList())).get();
  List<Row> actions=new ArrayList<>();
  actions.add(new Get(Bytes.toBytes(0)));
  actions.add(new Put(Bytes.toBytes(1)).addColumn(FAMILY,CQ,Bytes.toBytes(2L)));
  actions.add(new Delete(Bytes.toBytes(2)));
  actions.add(new Increment(Bytes.toBytes(3)).addColumn(FAMILY,CQ,1));
  actions.add(new Append(Bytes.toBytes(4)).addColumn(FAMILY,CQ,Bytes.toBytes(4)));
  RowMutations rm=new RowMutations(Bytes.toBytes(5));
  rm.add(new Put(Bytes.toBytes(5)).addColumn(FAMILY,CQ,Bytes.toBytes(100L)));
  rm.add(new Put(Bytes.toBytes(5)).addColumn(FAMILY,CQ1,Bytes.toBytes(200L)));
  actions.add(rm);
  actions.add(new Get(Bytes.toBytes(6)));
  List<Object> results=table.batchAll(actions).get();
  assertEquals(7,results.size());
  Result getResult=(Result)results.get(0);
  assertEquals(0,Bytes.toLong(getResult.getValue(FAMILY,CQ)));
  assertEquals(2,Bytes.toLong(table.get(new Get(Bytes.toBytes(1))).get().getValue(FAMILY,CQ)));
  assertTrue(table.get(new Get(Bytes.toBytes(2))).get().isEmpty());
  Result incrementResult=(Result)results.get(3);
  assertEquals(4,Bytes.toLong(incrementResult.getValue(FAMILY,CQ)));
  Result appendResult=(Result)results.get(4);
  byte[] appendValue=appendResult.getValue(FAMILY,CQ);
  assertEquals(12,appendValue.length);
  assertEquals(4,Bytes.toLong(appendValue));
  assertEquals(4,Bytes.toInt(appendValue,8));
  assertEquals(100,Bytes.toLong(table.get(new Get(Bytes.toBytes(5))).get().getValue(FAMILY,CQ)));
  assertEquals(200,Bytes.toLong(table.get(new Get(Bytes.toBytes(5))).get().getValue(FAMILY,CQ1)));
  getResult=(Result)results.get(6);
  assertEquals(6,Bytes.toLong(getResult.getValue(FAMILY,CQ)));
}
