@Test public void testCheckAndMutate_WithEmptyRowValue() throws IOException {
  byte[] row1=Bytes.toBytes("row1");
  byte[] fam1=Bytes.toBytes("fam1");
  byte[] qf1=Bytes.toBytes("qualifier");
  byte[] emptyVal=new byte[]{};
  byte[] val1=Bytes.toBytes("value1");
  byte[] val2=Bytes.toBytes("value2");
  this.region=initHRegion(tableName,method,CONF,fam1);
  try {
    Put put=new Put(row1);
    put.addColumn(fam1,qf1,emptyVal);
    boolean res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(emptyVal),put);
    assertTrue(res);
    put=new Put(row1);
    put.addColumn(fam1,qf1,val1);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(emptyVal),put);
    assertTrue(res);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(emptyVal),put);
    assertFalse(res);
    Delete delete=new Delete(row1);
    delete.addColumn(fam1,qf1);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(emptyVal),delete);
    assertFalse(res);
    put=new Put(row1);
    put.addColumn(fam1,qf1,val2);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(val1),put);
    assertTrue(res);
    delete=new Delete(row1);
    delete.addColumn(fam1,qf1);
    delete.addColumn(fam1,qf1);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(val2),delete);
    assertTrue(res);
    delete=new Delete(row1);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new BinaryComparator(emptyVal),delete);
    assertTrue(res);
    put=new Put(row1);
    put.addColumn(fam1,qf1,val1);
    res=region.checkAndMutate(row1,fam1,qf1,CompareOperator.EQUAL,new NullComparator(),put);
    assertTrue(res);
  }
  finally {
    HBaseTestingUtility.closeRegionAndWAL(this.region);
    this.region=null;
  }
}
