@Test public void testSyncRunnerIndexOverflow() throws IOException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {
  final String name=this.name.getMethodName();
  FSHLog log=new FSHLog(FS,FSUtils.getRootDir(CONF),name,HConstants.HREGION_OLDLOGDIR_NAME,CONF,null,true,null,null);
  try {
    Field ringBufferEventHandlerField=FSHLog.class.getDeclaredField("ringBufferEventHandler");
    ringBufferEventHandlerField.setAccessible(true);
    FSHLog.RingBufferEventHandler ringBufferEventHandler=(FSHLog.RingBufferEventHandler)ringBufferEventHandlerField.get(log);
    Field syncRunnerIndexField=FSHLog.RingBufferEventHandler.class.getDeclaredField("syncRunnerIndex");
    syncRunnerIndexField.setAccessible(true);
    syncRunnerIndexField.set(ringBufferEventHandler,Integer.MAX_VALUE - 1);
    TableDescriptor htd=TableDescriptorBuilder.newBuilder(TableName.valueOf(this.name.getMethodName())).setColumnFamily(ColumnFamilyDescriptorBuilder.of("row")).build();
    NavigableMap<byte[],Integer> scopes=new TreeMap<>(Bytes.BYTES_COMPARATOR);
    for (    byte[] fam : htd.getColumnFamilyNames()) {
      scopes.put(fam,0);
    }
    RegionInfo hri=RegionInfoBuilder.newBuilder(htd.getTableName()).build();
    MultiVersionConcurrencyControl mvcc=new MultiVersionConcurrencyControl();
    for (int i=0; i < 10; i++) {
      addEdits(log,hri,htd,1,mvcc,scopes);
    }
  }
  finally {
    log.close();
  }
}
