@Test public void testSingleStripeDropDeletes() throws Exception {
  Configuration conf=HBaseConfiguration.create();
  conf.unset("hbase.hstore.compaction.min.size");
  StripeCompactionPolicy policy=createPolicy(conf);
  Long[][] stripes=new Long[][]{new Long[]{3L,2L,2L,2L},new Long[]{6L}};
  StripeInformationProvider si=createStripesWithSizes(0,0,stripes);
  verifySingleStripeCompaction(policy,si,0,true);
  si=createStripesWithSizes(2,2,stripes);
  verifySingleStripeCompaction(policy,si,0,false);
  si=createStripesWithSizes(6,2,stripes);
  ConcatenatedLists<HStoreFile> sfs=new ConcatenatedLists<>();
  sfs.addSublist(si.getLevel0Files());
  sfs.addSublist(si.getStripes().get(0));
  verifyCompaction(policy,si,sfs,si.getStartRow(0),si.getEndRow(0),si.getStripeBoundaries());
  si=createStripesWithSizes(6,2,new Long[][]{new Long[]{10L,1L,1L,1L,1L},new Long[]{12L}});
  verifyCompaction(policy,si,si.getLevel0Files(),null,null,si.getStripeBoundaries());
  stripes=new Long[][]{new Long[]{100L,3L,2L,2L,2L},new Long[]{6L}};
  si=createStripesWithSizes(0,0,stripes);
  List<HStoreFile> compactFile=new ArrayList<>();
  Iterator<HStoreFile> iter=si.getStripes().get(0).listIterator(1);
  while (iter.hasNext()) {
    compactFile.add(iter.next());
  }
  verifyCompaction(policy,si,compactFile,false,1,null,si.getStartRow(0),si.getEndRow(0),true);
}
