@Test public void testRowMutations() throws InterruptedException, IOException {
  Put put=new Put(Bytes.toBytes("good")).addColumn(FAMILY,null,new byte[1]);
  List<Row> batches=new ArrayList<>();
  RowMutations mutations=new RowMutations(Bytes.toBytes("fail"));
  mutations.add(new Put(Bytes.toBytes("fail")).addColumn(FAMILY,null,new byte[CELL_SIZE]));
  mutations.add(new Put(Bytes.toBytes("fail")).addColumn(FAMILY,null,new byte[CELL_SIZE]));
  batches.add(mutations);
  mutations=new RowMutations(Bytes.toBytes("good"));
  mutations.add(put);
  mutations.add(put);
  batches.add(mutations);
  Object[] objs=new Object[batches.size()];
  try (Table table=TEST_UTIL.getConnection().getTable(TABLE_NAME)){
    table.batch(batches,objs);
    fail("Where is the exception? We put the malformed cells!!!");
  }
 catch (  RetriesExhaustedWithDetailsException e) {
    assertEquals(1,e.getNumExceptions());
    for (int i=0; i != e.getNumExceptions(); ++i) {
      assertNotNull(e.getCause(i));
      assertTrue(e.getCause(i) instanceof IOException);
      assertEquals("fail",Bytes.toString(e.getRow(i).getRow()));
    }
  }
 finally {
    assertObjects(objs,batches.size());
    assertTrue(objs[0] instanceof IOException);
    assertEquals(Result.class,objs[1].getClass());
  }
}
