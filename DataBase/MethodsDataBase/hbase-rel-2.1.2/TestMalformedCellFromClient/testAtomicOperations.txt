/** 
 * The invalid cells is in rm. The rm should fail but the subsequent mutations should succeed. Currently, we have no client api to submit the request consisting of condition-rm and mutation. Hence, this test build the request manually.
 */
@Test public void testAtomicOperations() throws Exception {
  RowMutations rm=new RowMutations(Bytes.toBytes("fail"));
  rm.add(new Put(rm.getRow()).addColumn(FAMILY,null,new byte[CELL_SIZE]));
  rm.add(new Put(rm.getRow()).addColumn(FAMILY,null,new byte[10]));
  Put put=new Put(Bytes.toBytes("good")).addColumn(FAMILY,null,new byte[10]);
  HRegion r=TEST_UTIL.getMiniHBaseCluster().getRegions(TABLE_NAME).get(0);
  ClientProtos.MultiRequest request=ClientProtos.MultiRequest.newBuilder(createRequest(rm,r.getRegionInfo().getRegionName())).addRegionAction(ClientProtos.RegionAction.newBuilder().setRegion(RequestConverter.buildRegionSpecifier(HBaseProtos.RegionSpecifier.RegionSpecifierType.REGION_NAME,r.getRegionInfo().getRegionName())).addAction(ClientProtos.Action.newBuilder().setMutation(ProtobufUtil.toMutationNoData(ClientProtos.MutationProto.MutationType.PUT,put)))).build();
  List<Cell> cells=new ArrayList<>();
  for (  Mutation m : rm.getMutations()) {
    cells.addAll(m.getCellList(FAMILY));
  }
  cells.addAll(put.getCellList(FAMILY));
  assertEquals(3,cells.size());
  HBaseRpcController controller=Mockito.mock(HBaseRpcController.class);
  Mockito.when(controller.cellScanner()).thenReturn(CellUtil.createCellScanner(cells));
  HRegionServer rs=TEST_UTIL.getMiniHBaseCluster().getRegionServer(TEST_UTIL.getMiniHBaseCluster().getServerHoldingRegion(TABLE_NAME,r.getRegionInfo().getRegionName()));
  ClientProtos.MultiResponse response=rs.getRSRpcServices().multi(controller,request);
  assertEquals(2,response.getRegionActionResultCount());
  assertTrue(response.getRegionActionResultList().get(0).hasException());
  assertFalse(response.getRegionActionResultList().get(1).hasException());
  assertEquals(1,response.getRegionActionResultList().get(1).getResultOrExceptionCount());
  assertTrue(response.getRegionActionResultList().get(1).getResultOrExceptionList().get(0).hasResult());
  try (Table table=TEST_UTIL.getConnection().getTable(TABLE_NAME)){
    Result result=table.get(new Get(Bytes.toBytes("good")));
    assertEquals(1,result.size());
    Cell cell=result.getColumnLatestCell(FAMILY,null);
    assertTrue(Bytes.equals(CellUtil.cloneValue(cell),new byte[10]));
  }
 }
