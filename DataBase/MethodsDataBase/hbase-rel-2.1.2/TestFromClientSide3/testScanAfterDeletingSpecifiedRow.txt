@Test public void testScanAfterDeletingSpecifiedRow() throws IOException {
  TableName tableName=TableName.valueOf(name.getMethodName());
  TableDescriptor desc=TableDescriptorBuilder.newBuilder(tableName).setColumnFamily(ColumnFamilyDescriptorBuilder.of(FAMILY)).build();
  TEST_UTIL.getAdmin().createTable(desc);
  byte[] row=Bytes.toBytes("SpecifiedRow");
  byte[] value0=Bytes.toBytes("value_0");
  byte[] value1=Bytes.toBytes("value_1");
  try (Table t=TEST_UTIL.getConnection().getTable(tableName)){
    Put put=new Put(row);
    put.addColumn(FAMILY,QUALIFIER,VALUE);
    t.put(put);
    Delete d=new Delete(row);
    t.delete(d);
    put=new Put(row);
    put.addColumn(FAMILY,null,value0);
    t.put(put);
    put=new Put(row);
    put.addColumn(FAMILY,null,value1);
    t.put(put);
    List<Cell> cells=toList(t.getScanner(new Scan()));
    assertEquals(1,cells.size());
    assertEquals("value_1",Bytes.toString(CellUtil.cloneValue(cells.get(0))));
    cells=toList(t.getScanner(new Scan().addFamily(FAMILY)));
    assertEquals(1,cells.size());
    assertEquals("value_1",Bytes.toString(CellUtil.cloneValue(cells.get(0))));
    cells=toList(t.getScanner(new Scan().addColumn(FAMILY,QUALIFIER)));
    assertEquals(0,cells.size());
    TEST_UTIL.getAdmin().flush(tableName);
    cells=toList(t.getScanner(new Scan()));
    assertEquals(1,cells.size());
    assertEquals("value_1",Bytes.toString(CellUtil.cloneValue(cells.get(0))));
    cells=toList(t.getScanner(new Scan().addFamily(FAMILY)));
    assertEquals(1,cells.size());
    assertEquals("value_1",Bytes.toString(CellUtil.cloneValue(cells.get(0))));
    cells=toList(t.getScanner(new Scan().addColumn(FAMILY,QUALIFIER)));
    assertEquals(0,cells.size());
  }
 }
