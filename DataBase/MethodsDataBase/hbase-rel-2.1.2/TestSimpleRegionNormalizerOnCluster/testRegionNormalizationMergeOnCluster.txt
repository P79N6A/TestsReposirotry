@Test @SuppressWarnings("deprecation") public void testRegionNormalizationMergeOnCluster() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  HMaster m=cluster.getMaster();
  try (Table ht=TEST_UTIL.createMultiRegionTable(tableName,FAMILYNAME,5)){
    List<HRegion> generatedRegions=TEST_UTIL.getHBaseCluster().getRegions(tableName);
    Collections.sort(generatedRegions,Comparator.comparing(HRegion::getRegionInfo,RegionInfo.COMPARATOR));
    HRegion region=generatedRegions.get(0);
    generateTestData(region,1);
    region.flush(true);
    region=generatedRegions.get(1);
    generateTestData(region,1);
    region.flush(true);
    region=generatedRegions.get(2);
    generateTestData(region,3);
    region.flush(true);
    region=generatedRegions.get(3);
    generateTestData(region,3);
    region.flush(true);
    region=generatedRegions.get(4);
    generateTestData(region,5);
    region.flush(true);
  }
   HTableDescriptor htd=new HTableDescriptor(admin.getTableDescriptor(tableName));
  htd.setNormalizationEnabled(true);
  admin.modifyTable(tableName,htd);
  admin.flush(tableName);
  assertEquals(5,MetaTableAccessor.getRegionCount(TEST_UTIL.getConnection(),tableName));
  Thread.sleep(5000);
  m.normalizeRegions();
  while (MetaTableAccessor.getRegionCount(TEST_UTIL.getConnection(),tableName) > 4) {
    LOG.info("Waiting for normalization merge to complete");
    Thread.sleep(100);
  }
  assertEquals(4,MetaTableAccessor.getRegionCount(TEST_UTIL.getConnection(),tableName));
  admin.disableTable(tableName);
  admin.deleteTable(tableName);
}
