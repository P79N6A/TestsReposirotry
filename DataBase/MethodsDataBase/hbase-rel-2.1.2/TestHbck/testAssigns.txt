@Test public void testAssigns() throws IOException {
  Hbck hbck=TEST_UTIL.getHbck();
  try (Admin admin=TEST_UTIL.getConnection().getAdmin()){
    List<RegionInfo> regions=admin.getRegions(TABLE_NAME);
    for (    RegionInfo ri : regions) {
      RegionState rs=TEST_UTIL.getHBaseCluster().getMaster().getAssignmentManager().getRegionStates().getRegionState(ri.getEncodedName());
      LOG.info("RS: {}",rs.toString());
    }
    List<Long> pids=hbck.unassigns(regions.stream().map(r -> r.getEncodedName()).collect(Collectors.toList()));
    waitOnPids(pids);
    for (    RegionInfo ri : regions) {
      RegionState rs=TEST_UTIL.getHBaseCluster().getMaster().getAssignmentManager().getRegionStates().getRegionState(ri.getEncodedName());
      LOG.info("RS: {}",rs.toString());
      assertTrue(rs.toString(),rs.isClosed());
    }
    pids=hbck.assigns(regions.stream().map(r -> r.getEncodedName()).collect(Collectors.toList()));
    waitOnPids(pids);
    for (    RegionInfo ri : regions) {
      RegionState rs=TEST_UTIL.getHBaseCluster().getMaster().getAssignmentManager().getRegionStates().getRegionState(ri.getEncodedName());
      LOG.info("RS: {}",rs.toString());
      assertTrue(rs.toString(),rs.isOpened());
    }
    pids=hbck.assigns(Arrays.stream(new String[]{"a","some rubbish name"}).collect(Collectors.toList()));
    for (    long pid : pids) {
      assertEquals(org.apache.hadoop.hbase.procedure2.Procedure.NO_PROC_ID,pid);
    }
  }
 }
