/** 
 * Tests a case where we replay only a flush start marker, then the region is closed. This region should not block indefinitely
 */
@Test public void testOnlyReplayingFlushStartDoesNotHoldUpRegionClose() throws IOException {
  int start=0;
  LOG.info("-- Writing some data to primary from " + start + " to "+ (start + 100));
  putData(primaryRegion,Durability.SYNC_WAL,start,100,cq,families);
  LOG.info("-- Flushing primary, creating 3 files for 3 stores");
  primaryRegion.flush(true);
  reader=createWALReaderForPrimary();
  LOG.info("-- Replaying edits and flush events in secondary");
  while (true) {
    WAL.Entry entry=reader.next();
    if (entry == null) {
      break;
    }
    FlushDescriptor flushDesc=WALEdit.getFlushDescriptor(entry.getEdit().getCells().get(0));
    if (flushDesc != null) {
      if (flushDesc.getAction() == FlushAction.START_FLUSH) {
        LOG.info("-- Replaying flush start in secondary");
        secondaryRegion.replayWALFlushStartMarker(flushDesc);
      }
 else       if (flushDesc.getAction() == FlushAction.COMMIT_FLUSH) {
        LOG.info("-- NOT Replaying flush commit in secondary");
      }
    }
 else {
      replayEdit(secondaryRegion,entry);
    }
  }
  assertTrue(rss.getRegionServerAccounting().getGlobalMemStoreDataSize() > 0);
  secondaryRegion.close();
  assertEquals(0,rss.getRegionServerAccounting().getGlobalMemStoreDataSize());
}
