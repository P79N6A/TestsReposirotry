/** 
 * ReplicationHFileCleaner should be able to ride over ZooKeeper errors without aborting.
 */
@Test public void testZooKeeperAbort() throws Exception {
  ReplicationHFileCleaner cleaner=new ReplicationHFileCleaner();
  List<FileStatus> dummyFiles=Lists.newArrayList(new FileStatus(100,false,3,100,System.currentTimeMillis(),new Path("hfile1")),new FileStatus(100,false,3,100,System.currentTimeMillis(),new Path("hfile2")));
  FaultyZooKeeperWatcher faultyZK=new FaultyZooKeeperWatcher(conf,"testZooKeeperAbort-faulty",null);
  try {
    faultyZK.init();
    cleaner.setConf(conf,faultyZK);
    Iterable<FileStatus> toDelete=cleaner.getDeletableFiles(dummyFiles);
    assertFalse(toDelete.iterator().hasNext());
    assertFalse(cleaner.isStopped());
  }
  finally {
    faultyZK.close();
  }
  cleaner=new ReplicationHFileCleaner();
  ZKWatcher zkw=new ZKWatcher(conf,"testZooKeeperAbort-normal",null);
  try {
    cleaner.setConf(conf,zkw);
    Iterable<FileStatus> filesToDelete=cleaner.getDeletableFiles(dummyFiles);
    Iterator<FileStatus> iter=filesToDelete.iterator();
    assertTrue(iter.hasNext());
    assertEquals(new Path("hfile1"),iter.next().getPath());
    assertTrue(iter.hasNext());
    assertEquals(new Path("hfile2"),iter.next().getPath());
    assertFalse(iter.hasNext());
  }
  finally {
    zkw.close();
  }
}
