@Test public void testRegionMove() throws IOException, InterruptedException, ExecutionException {
  createSingleRegionTable();
  ServerName serverName=TEST_UTIL.getRSForFirstRegionInTable(TABLE_NAME).getServerName();
  HRegionLocation loc=LOCATOR.getRegionLocation(TABLE_NAME,EMPTY_START_ROW,RegionLocateType.CURRENT,false).get();
  assertLocEquals(EMPTY_START_ROW,EMPTY_END_ROW,serverName,loc);
  ServerName newServerName=TEST_UTIL.getHBaseCluster().getRegionServerThreads().stream().map(t -> t.getRegionServer().getServerName()).filter(sn -> !sn.equals(serverName)).findAny().get();
  TEST_UTIL.getAdmin().move(Bytes.toBytes(loc.getRegion().getEncodedName()),Bytes.toBytes(newServerName.getServerName()));
  while (!TEST_UTIL.getRSForFirstRegionInTable(TABLE_NAME).getServerName().equals(newServerName)) {
    Thread.sleep(100);
  }
  assertSame(loc,LOCATOR.getRegionLocation(TABLE_NAME,EMPTY_START_ROW,RegionLocateType.CURRENT,false).get());
  LOCATOR.updateCachedLocation(loc,null);
  assertSame(loc,LOCATOR.getRegionLocation(TABLE_NAME,EMPTY_START_ROW,RegionLocateType.CURRENT,false).get());
  LOCATOR.updateCachedLocation(loc,new NotServingRegionException());
  assertLocEquals(EMPTY_START_ROW,EMPTY_END_ROW,newServerName,LOCATOR.getRegionLocation(TABLE_NAME,EMPTY_START_ROW,RegionLocateType.CURRENT,false).get());
}
