@Test public void testLocateAfter() throws IOException, InterruptedException, ExecutionException {
  byte[] row=Bytes.toBytes("1");
  byte[] splitKey=Arrays.copyOf(row,2);
  TEST_UTIL.createTable(TABLE_NAME,FAMILY,new byte[][]{splitKey});
  TEST_UTIL.waitTableAvailable(TABLE_NAME);
  HRegionLocation currentLoc=LOCATOR.getRegionLocation(TABLE_NAME,row,RegionLocateType.CURRENT,false).get();
  ServerName currentServerName=TEST_UTIL.getRSForFirstRegionInTable(TABLE_NAME).getServerName();
  assertLocEquals(EMPTY_START_ROW,splitKey,currentServerName,currentLoc);
  HRegionLocation afterLoc=LOCATOR.getRegionLocation(TABLE_NAME,row,RegionLocateType.AFTER,false).get();
  ServerName afterServerName=TEST_UTIL.getHBaseCluster().getRegionServerThreads().stream().map(t -> t.getRegionServer()).filter(rs -> rs.getRegions(TABLE_NAME).stream().anyMatch(r -> Bytes.equals(splitKey,r.getRegionInfo().getStartKey()))).findAny().get().getServerName();
  assertLocEquals(splitKey,EMPTY_END_ROW,afterServerName,afterLoc);
  assertSame(afterLoc,LOCATOR.getRegionLocation(TABLE_NAME,row,RegionLocateType.AFTER,false).get());
}
