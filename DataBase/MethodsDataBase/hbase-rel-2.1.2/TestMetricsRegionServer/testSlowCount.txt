@Test public void testSlowCount(){
  for (int i=0; i < 12; i++) {
    rsm.updateAppend(null,12);
    rsm.updateAppend(null,1002);
  }
  for (int i=0; i < 13; i++) {
    rsm.updateDeleteBatch(null,13);
    rsm.updateDeleteBatch(null,1003);
  }
  for (int i=0; i < 14; i++) {
    rsm.updateGet(null,14);
    rsm.updateGet(null,1004);
  }
  for (int i=0; i < 15; i++) {
    rsm.updateIncrement(null,15);
    rsm.updateIncrement(null,1005);
  }
  for (int i=0; i < 16; i++) {
    rsm.updatePutBatch(null,16);
    rsm.updatePutBatch(null,1006);
  }
  for (int i=0; i < 17; i++) {
    rsm.updatePut(null,17);
    rsm.updateDelete(null,17);
    rsm.updateCheckAndDelete(17);
    rsm.updateCheckAndPut(17);
  }
  HELPER.assertCounter("appendNumOps",24,serverSource);
  HELPER.assertCounter("deleteBatchNumOps",26,serverSource);
  HELPER.assertCounter("getNumOps",28,serverSource);
  HELPER.assertCounter("incrementNumOps",30,serverSource);
  HELPER.assertCounter("putBatchNumOps",32,serverSource);
  HELPER.assertCounter("putNumOps",17,serverSource);
  HELPER.assertCounter("deleteNumOps",17,serverSource);
  HELPER.assertCounter("checkAndDeleteNumOps",17,serverSource);
  HELPER.assertCounter("checkAndPutNumOps",17,serverSource);
  HELPER.assertCounter("slowAppendCount",12,serverSource);
  HELPER.assertCounter("slowDeleteCount",13,serverSource);
  HELPER.assertCounter("slowGetCount",14,serverSource);
  HELPER.assertCounter("slowIncrementCount",15,serverSource);
  HELPER.assertCounter("slowPutCount",16,serverSource);
}
