@Test public void testPutbackChunksMultiThreaded() throws Exception {
  final int maxCount=10;
  final int initialCount=5;
  final int chunkSize=40;
  final int valSize=7;
  ChunkCreator oldCreator=ChunkCreator.getInstance();
  ChunkCreator newCreator=new ChunkCreator(chunkSize,false,400,1,0.5f,null,0);
  assertEquals(initialCount,newCreator.getPoolSize());
  assertEquals(maxCount,newCreator.getMaxCount());
  ChunkCreator.instance=newCreator;
  final KeyValue kv=new KeyValue(Bytes.toBytes("r"),Bytes.toBytes("f"),Bytes.toBytes("q"),new byte[valSize]);
  try {
    Runnable r=new Runnable(){
      @Override public void run(){
        MemStoreLAB memStoreLAB=new MemStoreLABImpl(conf);
        for (int i=0; i < maxCount; i++) {
          memStoreLAB.copyCellInto(kv);
        }
        memStoreLAB.close();
      }
    }
;
    Thread t1=new Thread(r);
    Thread t2=new Thread(r);
    Thread t3=new Thread(r);
    t1.start();
    t2.start();
    t3.start();
    t1.join();
    t2.join();
    t3.join();
    assertTrue(newCreator.getPoolSize() <= maxCount);
  }
  finally {
    ChunkCreator.instance=oldCreator;
  }
}
