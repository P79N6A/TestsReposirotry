/** 
 * Test for  {@link HFileOutputFormat2#configureDataBlockEncoding(HTableDescriptor,Configuration)}and  {@link HFileOutputFormat2#createFamilyDataBlockEncodingMap(Configuration)}. Tests that the compression map is correctly serialized into and deserialized from configuration
 * @throws IOException
 */
@Ignore("Goes zombie too frequently; needs work. See HBASE-14563") @Test public void testSerializeDeserializeFamilyDataBlockEncodingMap() throws IOException {
  for (int numCfs=0; numCfs <= 3; numCfs++) {
    Configuration conf=new Configuration(this.util.getConfiguration());
    Map<String,DataBlockEncoding> familyToDataBlockEncoding=getMockColumnFamiliesForDataBlockEncoding(numCfs);
    Table table=Mockito.mock(Table.class);
    setupMockColumnFamiliesForDataBlockEncoding(table,familyToDataBlockEncoding);
    HTableDescriptor tableDescriptor=table.getTableDescriptor();
    conf.set(HFileOutputFormat2.DATABLOCK_ENCODING_FAMILIES_CONF_KEY,HFileOutputFormat2.serializeColumnFamilyAttribute(HFileOutputFormat2.dataBlockEncodingDetails,Arrays.asList(tableDescriptor)));
    Map<byte[],DataBlockEncoding> retrievedFamilyToDataBlockEncodingMap=HFileOutputFormat2.createFamilyDataBlockEncodingMap(conf);
    for (    Entry<String,DataBlockEncoding> entry : familyToDataBlockEncoding.entrySet()) {
      assertEquals("DataBlockEncoding configuration incorrect for column family:" + entry.getKey(),entry.getValue(),retrievedFamilyToDataBlockEncodingMap.get(entry.getKey().getBytes("UTF-8")));
    }
  }
}
