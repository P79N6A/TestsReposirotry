/** 
 * Test that  {@link HFileOutputFormat2} RecordWriter writes tags such as ttl intohfile.
 */
@Test public void test_WritingTagData() throws Exception {
  Configuration conf=new Configuration(this.util.getConfiguration());
  final String HFILE_FORMAT_VERSION_CONF_KEY="hfile.format.version";
  conf.setInt(HFILE_FORMAT_VERSION_CONF_KEY,HFile.MIN_FORMAT_VERSION_WITH_TAGS);
  RecordWriter<ImmutableBytesWritable,Cell> writer=null;
  TaskAttemptContext context=null;
  Path dir=util.getDataTestDir("WritingTagData");
  try {
    conf.set(HFileOutputFormat2.OUTPUT_TABLE_NAME_CONF_KEY,TABLE_NAMES[0].getNameAsString());
    conf.setBoolean(HFileOutputFormat2.LOCALITY_SENSITIVE_CONF_KEY,false);
    Job job=new Job(conf);
    FileOutputFormat.setOutputPath(job,dir);
    context=createTestTaskAttemptContext(job);
    HFileOutputFormat2 hof=new HFileOutputFormat2();
    writer=hof.getRecordWriter(context);
    final byte[] b=Bytes.toBytes("b");
    List<Tag> tags=new ArrayList<>();
    tags.add(new ArrayBackedTag(TagType.TTL_TAG_TYPE,Bytes.toBytes(978670)));
    KeyValue kv=new KeyValue(b,b,b,HConstants.LATEST_TIMESTAMP,b,tags);
    writer.write(new ImmutableBytesWritable(),kv);
    writer.close(context);
    writer=null;
    FileSystem fs=dir.getFileSystem(conf);
    RemoteIterator<LocatedFileStatus> iterator=fs.listFiles(dir,true);
    while (iterator.hasNext()) {
      LocatedFileStatus keyFileStatus=iterator.next();
      HFile.Reader reader=HFile.createReader(fs,keyFileStatus.getPath(),new CacheConfig(conf),true,conf);
      HFileScanner scanner=reader.getScanner(false,false,false);
      scanner.seekTo();
      Cell cell=scanner.getCell();
      List<Tag> tagsFromCell=TagUtil.asList(cell.getTagsArray(),cell.getTagsOffset(),cell.getTagsLength());
      assertTrue(tagsFromCell.size() > 0);
      for (      Tag tag : tagsFromCell) {
        assertTrue(tag.getType() == TagType.TTL_TAG_TYPE);
      }
    }
  }
  finally {
    if (writer != null && context != null)     writer.close(context);
    dir.getFileSystem(conf).delete(dir,true);
  }
}
