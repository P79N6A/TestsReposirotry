/** 
 * Test for  {@link HFileOutputFormat2#configureCompression(Configuration,HTableDescriptor)} and{@link HFileOutputFormat2#createFamilyCompressionMap(Configuration)}. Tests that the compression map is correctly serialized into and deserialized from configuration
 * @throws IOException
 */
@Ignore("Goes zombie too frequently; needs work. See HBASE-14563") @Test public void testSerializeDeserializeFamilyCompressionMap() throws IOException {
  for (int numCfs=0; numCfs <= 3; numCfs++) {
    Configuration conf=new Configuration(this.util.getConfiguration());
    Map<String,Compression.Algorithm> familyToCompression=getMockColumnFamiliesForCompression(numCfs);
    Table table=Mockito.mock(Table.class);
    setupMockColumnFamiliesForCompression(table,familyToCompression);
    conf.set(HFileOutputFormat2.COMPRESSION_FAMILIES_CONF_KEY,HFileOutputFormat2.serializeColumnFamilyAttribute(HFileOutputFormat2.compressionDetails,Arrays.asList(table.getTableDescriptor())));
    Map<byte[],Algorithm> retrievedFamilyToCompressionMap=HFileOutputFormat2.createFamilyCompressionMap(conf);
    for (    Entry<String,Algorithm> entry : familyToCompression.entrySet()) {
      assertEquals("Compression configuration incorrect for column family:" + entry.getKey(),entry.getValue(),retrievedFamilyToCompressionMap.get(entry.getKey().getBytes("UTF-8")));
    }
  }
}
