/** 
 * Test Increment Mutate conversions.
 * @throws IOException
 */
@Test public void testIncrement() throws IOException {
  long timeStamp=111111;
  MutationProto.Builder mutateBuilder=MutationProto.newBuilder();
  mutateBuilder.setRow(ByteString.copyFromUtf8("row"));
  mutateBuilder.setMutateType(MutationType.INCREMENT);
  ColumnValue.Builder valueBuilder=ColumnValue.newBuilder();
  valueBuilder.setFamily(ByteString.copyFromUtf8("f1"));
  QualifierValue.Builder qualifierBuilder=QualifierValue.newBuilder();
  qualifierBuilder.setQualifier(ByteString.copyFromUtf8("c1"));
  qualifierBuilder.setValue(ByteString.copyFrom(Bytes.toBytes(11L)));
  qualifierBuilder.setTimestamp(timeStamp);
  valueBuilder.addQualifierValue(qualifierBuilder.build());
  qualifierBuilder.setQualifier(ByteString.copyFromUtf8("c2"));
  qualifierBuilder.setValue(ByteString.copyFrom(Bytes.toBytes(22L)));
  valueBuilder.addQualifierValue(qualifierBuilder.build());
  mutateBuilder.addColumnValue(valueBuilder.build());
  MutationProto proto=mutateBuilder.build();
  assertEquals(MutationProto.Durability.USE_DEFAULT,proto.getDurability());
  mutateBuilder=MutationProto.newBuilder(proto);
  mutateBuilder.setDurability(MutationProto.Durability.USE_DEFAULT);
  Increment increment=ProtobufUtil.toIncrement(proto,null);
  mutateBuilder.setTimestamp(increment.getTimestamp());
  mutateBuilder.setTimeRange(ProtobufUtil.toTimeRange(increment.getTimeRange()));
  assertEquals(mutateBuilder.build(),ProtobufUtil.toMutation(MutationType.INCREMENT,increment));
}
