@Test public void testContainsRange(){
  TableDescriptor tableDesc=TableDescriptorBuilder.newBuilder(TableName.valueOf(name.getMethodName())).build();
  RegionInfo ri=RegionInfoBuilder.newBuilder(tableDesc.getTableName()).setStartKey(Bytes.toBytes("a")).setEndKey(Bytes.toBytes("g")).build();
  assertTrue(ri.containsRange(Bytes.toBytes("a"),Bytes.toBytes("a")));
  assertTrue(ri.containsRange(Bytes.toBytes("b"),Bytes.toBytes("c")));
  assertTrue(ri.containsRange(Bytes.toBytes("a"),Bytes.toBytes("c")));
  assertTrue(ri.containsRange(Bytes.toBytes("c"),Bytes.toBytes("c")));
  assertFalse(ri.containsRange(Bytes.toBytes("a"),Bytes.toBytes("g")));
  assertFalse(ri.containsRange(Bytes.toBytes("g"),Bytes.toBytes("g")));
  assertFalse(ri.containsRange(Bytes.toBytes("z"),Bytes.toBytes("z")));
  try {
    ri.containsRange(Bytes.toBytes("z"),Bytes.toBytes("a"));
    fail("Invalid range did not throw IAE");
  }
 catch (  IllegalArgumentException iae) {
  }
}
