@Test public void testModifyTableDeleteCF() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final String cf1="cf1";
  final String cf2="cf2";
  final String cf3="cf3";
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  MasterProcedureTestingUtility.createTable(procExec,tableName,null,cf1,cf2,cf3);
  HTableDescriptor currentHtd=UTIL.getAdmin().getTableDescriptor(tableName);
  assertEquals(3,currentHtd.getFamiliesKeys().size());
  HTableDescriptor htd=new HTableDescriptor(UTIL.getAdmin().getTableDescriptor(tableName));
  htd.removeFamily(Bytes.toBytes(cf2));
  long procId=ProcedureTestingUtility.submitAndWait(procExec,new ModifyTableProcedure(procExec.getEnvironment(),htd));
  ProcedureTestingUtility.assertProcNotFailed(procExec.getResult(procId));
  currentHtd=UTIL.getAdmin().getTableDescriptor(tableName);
  assertEquals(2,currentHtd.getFamiliesKeys().size());
  assertFalse(currentHtd.hasFamily(Bytes.toBytes(cf2)));
  UTIL.getAdmin().disableTable(tableName);
  ProcedureTestingUtility.waitNoProcedureRunning(procExec);
  HTableDescriptor htd2=new HTableDescriptor(UTIL.getAdmin().getTableDescriptor(tableName));
  htd2.removeFamily(Bytes.toBytes(cf3));
  htd2.setConfiguration("hbase.table.sanity.checks",Boolean.FALSE.toString());
  long procId2=ProcedureTestingUtility.submitAndWait(procExec,new ModifyTableProcedure(procExec.getEnvironment(),htd2));
  ProcedureTestingUtility.assertProcNotFailed(procExec.getResult(procId2));
  currentHtd=UTIL.getAdmin().getTableDescriptor(tableName);
  assertEquals(1,currentHtd.getFamiliesKeys().size());
  assertFalse(currentHtd.hasFamily(Bytes.toBytes(cf3)));
  HTableDescriptor htd3=new HTableDescriptor(UTIL.getAdmin().getTableDescriptor(tableName));
  htd3.removeFamily(Bytes.toBytes(cf1));
  long procId3=ProcedureTestingUtility.submitAndWait(procExec,new ModifyTableProcedure(procExec.getEnvironment(),htd3));
  final Procedure<?> result=procExec.getResult(procId3);
  assertEquals(true,result.isFailed());
  Throwable cause=ProcedureTestingUtility.getExceptionCause(result);
  assertTrue("expected DoNotRetryIOException, got " + cause,cause instanceof DoNotRetryIOException);
  assertEquals(1,currentHtd.getFamiliesKeys().size());
  assertTrue(currentHtd.hasFamily(Bytes.toBytes(cf1)));
}
