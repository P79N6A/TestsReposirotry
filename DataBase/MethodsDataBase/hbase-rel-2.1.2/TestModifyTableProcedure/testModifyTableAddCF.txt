@Test public void testModifyTableAddCF() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  MasterProcedureTestingUtility.createTable(procExec,tableName,null,"cf1");
  HTableDescriptor currentHtd=UTIL.getAdmin().getTableDescriptor(tableName);
  assertEquals(1,currentHtd.getFamiliesKeys().size());
  String cf2="cf2";
  HTableDescriptor htd=new HTableDescriptor(UTIL.getAdmin().getTableDescriptor(tableName));
  htd.addFamily(new HColumnDescriptor(cf2));
  long procId=ProcedureTestingUtility.submitAndWait(procExec,new ModifyTableProcedure(procExec.getEnvironment(),htd));
  ProcedureTestingUtility.assertProcNotFailed(procExec.getResult(procId));
  currentHtd=UTIL.getAdmin().getTableDescriptor(tableName);
  assertEquals(2,currentHtd.getFamiliesKeys().size());
  assertTrue(currentHtd.hasFamily(Bytes.toBytes(cf2)));
  UTIL.getAdmin().disableTable(tableName);
  ProcedureTestingUtility.waitNoProcedureRunning(procExec);
  String cf3="cf3";
  HTableDescriptor htd2=new HTableDescriptor(UTIL.getAdmin().getTableDescriptor(tableName));
  htd2.addFamily(new HColumnDescriptor(cf3));
  long procId2=ProcedureTestingUtility.submitAndWait(procExec,new ModifyTableProcedure(procExec.getEnvironment(),htd2));
  ProcedureTestingUtility.assertProcNotFailed(procExec.getResult(procId2));
  currentHtd=UTIL.getAdmin().getTableDescriptor(tableName);
  assertTrue(currentHtd.hasFamily(Bytes.toBytes(cf3)));
  assertEquals(3,currentHtd.getFamiliesKeys().size());
}
