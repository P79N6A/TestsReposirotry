@Test public void testSplitTable() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  Table t=TEST_UTIL.createTable(tableName,Bytes.toBytes("f"),splitKeys);
  TEST_UTIL.waitUntilAllRegionsAssigned(tableName);
  final int numberOfRegions=admin.getTableRegions(t.getName()).size();
  checkIfFavoredNodeInformationIsCorrect(tableName);
  byte[] splitPoint=Bytes.toBytes(0);
  RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(tableName);
  HRegionInfo parent=locator.getRegionLocation(splitPoint).getRegionInfo();
  List<ServerName> parentFN=fnm.getFavoredNodes(parent);
  assertNotNull("FN should not be null for region: " + parent,parentFN);
  LOG.info("SPLITTING TABLE");
  admin.split(tableName,splitPoint);
  TEST_UTIL.waitUntilNoRegionsInTransition(WAIT_TIMEOUT);
  LOG.info("FINISHED WAITING ON RIT");
  waitUntilTableRegionCountReached(tableName,numberOfRegions + 1);
  HRegionInfo daughter1=locator.getRegionLocation(parent.getStartKey(),true).getRegionInfo();
  List<ServerName> daughter1FN=fnm.getFavoredNodes(daughter1);
  HRegionInfo daughter2=locator.getRegionLocation(splitPoint,true).getRegionInfo();
  List<ServerName> daughter2FN=fnm.getFavoredNodes(daughter2);
  checkIfDaughterInherits2FN(parentFN,daughter1FN);
  checkIfDaughterInherits2FN(parentFN,daughter2FN);
  assertEquals("Daughter's PRIMARY FN should be PRIMARY of parent",parentFN.get(PRIMARY.ordinal()),daughter1FN.get(PRIMARY.ordinal()));
  assertEquals("Daughter's SECONDARY FN should be SECONDARY of parent",parentFN.get(SECONDARY.ordinal()),daughter1FN.get(SECONDARY.ordinal()));
  assertEquals("Daughter's PRIMARY FN should be PRIMARY of parent",parentFN.get(PRIMARY.ordinal()),daughter2FN.get(PRIMARY.ordinal()));
  assertEquals("Daughter's SECONDARY FN should be TERTIARY of parent",parentFN.get(TERTIARY.ordinal()),daughter2FN.get(SECONDARY.ordinal()));
  TEST_UTIL.getMiniHBaseCluster().compact(tableName,true);
  admin.runCatalogScan();
  ProcedureTestingUtility.waitAllProcedures(TEST_UTIL.getMiniHBaseCluster().getMaster().getMasterProcedureExecutor());
  assertNull("Parent FN should be null",fnm.getFavoredNodes(parent));
  List<HRegionInfo> regions=admin.getTableRegions(tableName);
  Threads.sleep(2000);
  LOG.info("STARTING DELETE");
  TEST_UTIL.deleteTable(tableName);
  checkNoFNForDeletedTable(regions);
}
