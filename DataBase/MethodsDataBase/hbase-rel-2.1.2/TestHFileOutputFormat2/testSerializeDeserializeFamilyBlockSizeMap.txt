/** 
 * Test for  {@link HFileOutputFormat2#configureBlockSize(HTableDescriptor,Configuration)} and{@link HFileOutputFormat2#createFamilyBlockSizeMap(Configuration)}. Tests that the compression map is correctly serialized into and deserialized from configuration
 * @throws IOException
 */
@Ignore("Goes zombie too frequently; needs work. See HBASE-14563") @Test public void testSerializeDeserializeFamilyBlockSizeMap() throws IOException {
  for (int numCfs=0; numCfs <= 3; numCfs++) {
    Configuration conf=new Configuration(this.util.getConfiguration());
    Map<String,Integer> familyToBlockSize=getMockColumnFamiliesForBlockSize(numCfs);
    Table table=Mockito.mock(Table.class);
    setupMockColumnFamiliesForBlockSize(table,familyToBlockSize);
    conf.set(HFileOutputFormat2.BLOCK_SIZE_FAMILIES_CONF_KEY,HFileOutputFormat2.serializeColumnFamilyAttribute(HFileOutputFormat2.blockSizeDetails,Arrays.asList(table.getTableDescriptor())));
    Map<byte[],Integer> retrievedFamilyToBlockSizeMap=HFileOutputFormat2.createFamilyBlockSizeMap(conf);
    for (    Entry<String,Integer> entry : familyToBlockSize.entrySet()) {
      assertEquals("BlockSize configuration incorrect for column family:" + entry.getKey(),entry.getValue(),retrievedFamilyToBlockSizeMap.get(entry.getKey().getBytes("UTF-8")));
    }
  }
}
