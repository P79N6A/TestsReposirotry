@Test public void testCombine1() throws IOException {
  Result previousResult=Result.create(Arrays.asList(createCell(0,CQ1)),null,false,true);
  Result result1=Result.create(Arrays.asList(createCell(1,CQ1)),null,false,true);
  Result result2=Result.create(Arrays.asList(createCell(1,CQ2)),null,false,true);
  Result result3=Result.create(Arrays.asList(createCell(1,CQ3)),null,false,true);
  Result[] results=resultCache.addAndGet(new Result[]{previousResult,result1},false);
  assertEquals(1,results.length);
  assertSame(previousResult,results[0]);
  assertEquals(0,resultCache.addAndGet(new Result[]{result2},false).length);
  assertEquals(0,resultCache.addAndGet(new Result[]{result3},false).length);
  assertEquals(0,resultCache.addAndGet(new Result[0],true).length);
  results=resultCache.addAndGet(new Result[0],false);
  assertEquals(1,results.length);
  assertEquals(1,Bytes.toInt(results[0].getRow()));
  assertEquals(3,results[0].rawCells().length);
  assertEquals(1,Bytes.toInt(results[0].getValue(CF,CQ1)));
  assertEquals(1,Bytes.toInt(results[0].getValue(CF,CQ2)));
  assertEquals(1,Bytes.toInt(results[0].getValue(CF,CQ3)));
}
