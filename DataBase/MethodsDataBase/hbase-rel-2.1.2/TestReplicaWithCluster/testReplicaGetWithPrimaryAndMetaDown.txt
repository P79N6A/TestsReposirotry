@Test public void testReplicaGetWithPrimaryAndMetaDown() throws IOException, InterruptedException {
  HTU.getAdmin().setBalancerRunning(false,true);
  ((ConnectionImplementation)HTU.getAdmin().getConnection()).setUseMetaReplicas(true);
  HTableDescriptor hdt=HTU.createTableDescriptor("testReplicaGetWithPrimaryAndMetaDown");
  hdt.setRegionReplication(2);
  try {
    Table table=HTU.createTable(hdt,new byte[][]{f},null);
    RegionLocations mrl=((ClusterConnection)HTU.getConnection()).locateRegion(TableName.META_TABLE_NAME,HConstants.EMPTY_START_ROW,false,false);
    RegionLocations url=((ClusterConnection)HTU.getConnection()).locateRegion(hdt.getTableName(),row,false,false);
    if (!url.getDefaultRegionLocation().getServerName().equals(mrl.getDefaultRegionLocation().getServerName())) {
      HTU.moveRegionAndWait(url.getDefaultRegionLocation().getRegionInfo(),mrl.getDefaultRegionLocation().getServerName());
    }
    if (url.getRegionLocation(1).getServerName().equals(mrl.getDefaultRegionLocation().getServerName())) {
      HTU.moveRegionAndWait(url.getRegionLocation(1).getRegionInfo(),url.getDefaultRegionLocation().getServerName());
    }
    while (true) {
      mrl=((ClusterConnection)HTU.getConnection()).locateRegion(TableName.META_TABLE_NAME,HConstants.EMPTY_START_ROW,false,false);
      url=((ClusterConnection)HTU.getConnection()).locateRegion(hdt.getTableName(),row,false,true);
      LOG.info("meta locations " + mrl);
      LOG.info("table locations " + url);
      ServerName a=url.getDefaultRegionLocation().getServerName();
      ServerName b=mrl.getDefaultRegionLocation().getServerName();
      if (a.equals(b)) {
        break;
      }
 else {
        LOG.info("Waiting for new region info to be updated in meta table");
        Thread.sleep(100);
      }
    }
    Put p=new Put(row);
    p.addColumn(f,row,row);
    table.put(p);
    HTU.flush(table.getName());
    try {
      Thread.sleep(2 * REFRESH_PERIOD);
    }
 catch (    InterruptedException e1) {
      LOG.error(e1.toString(),e1);
    }
    RegionServerHostingPrimayMetaRegionSlowOrStopCopro.throwException=true;
    Get g=new Get(row);
    g.setConsistency(Consistency.TIMELINE);
    Result r=table.get(g);
    Assert.assertTrue(r.isStale());
    r=table.get(g);
    Assert.assertTrue(r.isStale());
  }
  finally {
    ((ConnectionImplementation)HTU.getAdmin().getConnection()).setUseMetaReplicas(false);
    RegionServerHostingPrimayMetaRegionSlowOrStopCopro.throwException=false;
    HTU.getAdmin().setBalancerRunning(true,true);
    HTU.getAdmin().disableTable(hdt.getTableName());
    HTU.deleteTable(hdt.getTableName());
  }
}
