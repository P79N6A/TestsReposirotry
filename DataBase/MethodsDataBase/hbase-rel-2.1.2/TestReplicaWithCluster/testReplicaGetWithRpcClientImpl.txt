@Test public void testReplicaGetWithRpcClientImpl() throws IOException {
  HTU.getConfiguration().setBoolean("hbase.ipc.client.specificThreadForWriting",true);
  HTU.getConfiguration().set("hbase.rpc.client.impl","org.apache.hadoop.hbase.ipc.RpcClientImpl");
  HTableDescriptor hdt=HTU.createTableDescriptor("testReplicaGetWithRpcClientImpl");
  hdt.setRegionReplication(NB_SERVERS);
  hdt.addCoprocessor(SlowMeCopro.class.getName());
  try {
    Table table=HTU.createTable(hdt,new byte[][]{f},null);
    Put p=new Put(row);
    p.addColumn(f,row,row);
    table.put(p);
    HTU.flush(table.getName());
    try {
      Thread.sleep(2 * REFRESH_PERIOD);
    }
 catch (    InterruptedException e1) {
      LOG.error(e1.toString(),e1);
    }
    try {
      Connection connection=ConnectionFactory.createConnection(HTU.getConfiguration());
      Table t=connection.getTable(hdt.getTableName());
      SlowMeCopro.cdl.set(new CountDownLatch(1));
      Get g=new Get(row);
      g.setConsistency(Consistency.TIMELINE);
      Result r=t.get(g);
      Assert.assertTrue(r.isStale());
      SlowMeCopro.cdl.get().countDown();
    }
  finally {
      SlowMeCopro.cdl.get().countDown();
      SlowMeCopro.sleepTime.set(0);
    }
  }
  finally {
    HTU.getConfiguration().unset("hbase.ipc.client.specificThreadForWriting");
    HTU.getConfiguration().unset("hbase.rpc.client.impl");
    HTU.getAdmin().disableTable(hdt.getTableName());
    HTU.deleteTable(hdt.getTableName());
  }
}
