@Test public void testChangeTable() throws Exception {
  TableDescriptor td=TableDescriptorBuilder.newBuilder(TableName.valueOf("testChangeTable")).setRegionReplication(NB_SERVERS).setCoprocessor(SlowMeCopro.class.getName()).setColumnFamily(ColumnFamilyDescriptorBuilder.of(f)).build();
  HTU.getAdmin().createTable(td);
  Table table=HTU.getConnection().getTable(td.getTableName());
  Put p=new Put(row);
  p.addColumn(f,row,row);
  table.put(p);
  Get g=new Get(row);
  Result r=table.get(g);
  Assert.assertFalse(r.isStale());
  TableDescriptor bHdt=HTU.getAdmin().getDescriptor(td.getTableName());
  td=TableDescriptorBuilder.newBuilder(td).setColumnFamily(ColumnFamilyDescriptorBuilder.of(row)).build();
  HTU.getAdmin().disableTable(td.getTableName());
  HTU.getAdmin().modifyTable(td);
  HTU.getAdmin().enableTable(td.getTableName());
  TableDescriptor nHdt=HTU.getAdmin().getDescriptor(td.getTableName());
  Assert.assertEquals("fams=" + Arrays.toString(nHdt.getColumnFamilies()),bHdt.getColumnFamilyCount() + 1,nHdt.getColumnFamilyCount());
  p=new Put(row);
  p.addColumn(row,row,row);
  table.put(p);
  g=new Get(row);
  r=table.get(g);
  Assert.assertFalse(r.isStale());
  try {
    SlowMeCopro.cdl.set(new CountDownLatch(1));
    g=new Get(row);
    g.setConsistency(Consistency.TIMELINE);
    r=table.get(g);
    Assert.assertTrue(r.isStale());
  }
  finally {
    SlowMeCopro.cdl.get().countDown();
    SlowMeCopro.sleepTime.set(0);
  }
  Admin admin=HTU.getAdmin();
  nHdt=admin.getDescriptor(td.getTableName());
  Assert.assertEquals("fams=" + Arrays.toString(nHdt.getColumnFamilies()),bHdt.getColumnFamilyCount() + 1,nHdt.getColumnFamilyCount());
  admin.disableTable(td.getTableName());
  admin.deleteTable(td.getTableName());
  admin.close();
}
