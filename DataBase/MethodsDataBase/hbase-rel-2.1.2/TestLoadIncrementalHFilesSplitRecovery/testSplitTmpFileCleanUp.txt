/** 
 * This test creates a table with many small regions. The bulk load files would be splitted multiple times before all of them can be loaded successfully.
 */
@Test public void testSplitTmpFileCleanUp() throws Exception {
  final TableName table=TableName.valueOf(name.getMethodName());
  byte[][] SPLIT_KEYS=new byte[][]{Bytes.toBytes("row_00000010"),Bytes.toBytes("row_00000020"),Bytes.toBytes("row_00000030"),Bytes.toBytes("row_00000040"),Bytes.toBytes("row_00000050")};
  try (Connection connection=ConnectionFactory.createConnection(util.getConfiguration())){
    setupTableWithSplitkeys(table,10,SPLIT_KEYS);
    LoadIncrementalHFiles lih=new LoadIncrementalHFiles(util.getConfiguration());
    Path bulk=buildBulkFiles(table,2);
    try (Table t=connection.getTable(table);RegionLocator locator=connection.getRegionLocator(table);Admin admin=connection.getAdmin()){
      lih.doBulkLoad(bulk,admin,t,locator);
    }
     Path tmpPath=new Path(bulk,family(0));
    tmpPath=new Path(tmpPath,LoadIncrementalHFiles.TMP_DIR);
    FileSystem fs=bulk.getFileSystem(util.getConfiguration());
    assertTrue(fs.exists(tmpPath));
    assertNull(LoadIncrementalHFiles.TMP_DIR + " should be empty.",FSUtils.listStatus(fs,tmpPath));
    assertExpectedTable(connection,table,ROWCOUNT,2);
  }
 }
