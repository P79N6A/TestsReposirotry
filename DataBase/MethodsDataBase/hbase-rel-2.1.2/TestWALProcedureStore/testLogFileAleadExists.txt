@Test public void testLogFileAleadExists() throws IOException {
  final boolean[] tested={false};
  WALProcedureStore mStore=Mockito.spy(procStore);
  Answer<Boolean> ans=new Answer<Boolean>(){
    @Override public Boolean answer(    InvocationOnMock invocationOnMock) throws Throwable {
      long logId=((Long)invocationOnMock.getArgument(0)).longValue();
switch ((int)logId) {
case 2:
        Path logFilePath=mStore.getLogFilePath(logId);
      mStore.getFileSystem().create(logFilePath);
    break;
case 3:
  tested[0]=true;
default :
break;
}
return (Boolean)invocationOnMock.callRealMethod();
}
}
;
Mockito.doAnswer(ans).when(mStore).rollWriter(2);
Mockito.doAnswer(ans).when(mStore).rollWriter(3);
mStore.recoverLease();
assertTrue(tested[0]);
}
