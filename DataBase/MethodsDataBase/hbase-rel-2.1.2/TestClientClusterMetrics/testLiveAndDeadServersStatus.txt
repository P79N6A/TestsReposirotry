@Test public void testLiveAndDeadServersStatus() throws Exception {
  List<RegionServerThread> regionserverThreads=CLUSTER.getLiveRegionServerThreads();
  int numRs=0;
  int len=regionserverThreads.size();
  for (int i=0; i < len; i++) {
    if (regionserverThreads.get(i).isAlive()) {
      numRs++;
    }
  }
  Waiter.waitFor(CLUSTER.getConfiguration(),10 * 1000,100,new Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      ClusterMetrics metrics=ADMIN.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS));
      Assert.assertNotNull(metrics);
      return metrics.getRegionCount() > 0;
    }
  }
);
  EnumSet<Option> options=EnumSet.of(Option.LIVE_SERVERS,Option.DEAD_SERVERS);
  ClusterMetrics metrics=ADMIN.getClusterMetrics(options);
  Assert.assertNotNull(metrics);
  Assert.assertEquals(SLAVES - 1,numRs);
  Assert.assertEquals(numRs,metrics.getLiveServerMetrics().size());
  Assert.assertTrue(metrics.getRegionCount() > 0);
  Assert.assertNotNull(metrics.getDeadServerNames());
  Assert.assertEquals(1,metrics.getDeadServerNames().size());
  ServerName deadServerName=metrics.getDeadServerNames().iterator().next();
  Assert.assertEquals(DEAD.getServerName(),deadServerName);
}
