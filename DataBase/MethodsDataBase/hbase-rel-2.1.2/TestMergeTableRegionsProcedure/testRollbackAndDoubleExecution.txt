@Test public void testRollbackAndDoubleExecution() throws Exception {
  final TableName tableName=TableName.valueOf("testRollbackAndDoubleExecution");
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  List<RegionInfo> tableRegions=createTable(tableName);
  ProcedureTestingUtility.waitNoProcedureRunning(procExec);
  ProcedureTestingUtility.setKillAndToggleBeforeStoreUpdate(procExec,true);
  RegionInfo[] regionsToMerge=new RegionInfo[2];
  regionsToMerge[0]=tableRegions.get(0);
  regionsToMerge[1]=tableRegions.get(1);
  long procId=procExec.submitProcedure(new MergeTableRegionsProcedure(procExec.getEnvironment(),regionsToMerge,true));
  int lastStep=8;
  MasterProcedureTestingUtility.testRollbackAndDoubleExecution(procExec,procId,lastStep,true);
  assertEquals(initialRegionCount,UTIL.getAdmin().getRegions(tableName).size());
  UTIL.waitUntilAllRegionsAssigned(tableName);
  List<HRegion> regions=UTIL.getMiniHBaseCluster().getRegions(tableName);
  assertEquals(initialRegionCount,regions.size());
}
