/** 
 * Test clearing a split parent.
 */
@Test public void testCleanParent() throws IOException, InterruptedException {
  TableDescriptor td=createTableDescriptorForCurrentMethod();
  HRegionInfo parent=new HRegionInfo(td.getTableName(),Bytes.toBytes("aaa"),Bytes.toBytes("eee"));
  HRegionInfo splita=new HRegionInfo(td.getTableName(),Bytes.toBytes("aaa"),Bytes.toBytes("ccc"));
  HRegionInfo splitb=new HRegionInfo(td.getTableName(),Bytes.toBytes("ccc"),Bytes.toBytes("eee"));
  Result r=createResult(parent,splita,splitb);
  Path rootdir=this.masterServices.getMasterFileSystem().getRootDir();
  Path tabledir=FSUtils.getTableDir(rootdir,td.getTableName());
  Path parentdir=new Path(tabledir,parent.getEncodedName());
  Path storedir=HStore.getStoreHomedir(tabledir,splita,td.getColumnFamilies()[0].getName());
  Reference ref=Reference.createTopReference(Bytes.toBytes("ccc"));
  long now=System.currentTimeMillis();
  Path p=new Path(storedir,Long.toString(now) + "." + parent.getEncodedName());
  FileSystem fs=this.masterServices.getMasterFileSystem().getFileSystem();
  Path path=ref.write(fs,p);
  assertTrue(fs.exists(path));
  LOG.info("Created reference " + path);
  fs.mkdirs(parentdir);
  assertFalse(this.janitor.cleanParent(parent,r));
  ProcedureTestingUtility.waitAllProcedures(masterServices.getMasterProcedureExecutor());
  assertTrue(fs.exists(parentdir));
  assertTrue(fs.delete(p,true));
  assertTrue(this.janitor.cleanParent(parent,r));
  ProcedureTestingUtility.waitAllProcedures(masterServices.getMasterProcedureExecutor());
  assertTrue(!fs.exists(parentdir));
}
