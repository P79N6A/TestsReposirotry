@Test public void testArchiveOldRegion() throws Exception {
  TableDescriptor td=createTableDescriptorForCurrentMethod();
  HRegionInfo parent=new HRegionInfo(td.getTableName(),Bytes.toBytes("aaa"),Bytes.toBytes("eee"));
  HRegionInfo splita=new HRegionInfo(td.getTableName(),Bytes.toBytes("aaa"),Bytes.toBytes("ccc"));
  HRegionInfo splitb=new HRegionInfo(td.getTableName(),Bytes.toBytes("ccc"),Bytes.toBytes("eee"));
  Result parentMetaRow=createResult(parent,splita,splitb);
  FileSystem fs=FileSystem.get(HTU.getConfiguration());
  Path rootdir=this.masterServices.getMasterFileSystem().getRootDir();
  FSUtils.setRootDir(fs.getConf(),rootdir);
  Path tabledir=FSUtils.getTableDir(rootdir,td.getTableName());
  Path storedir=HStore.getStoreHomedir(tabledir,parent,td.getColumnFamilies()[0].getName());
  Path storeArchive=HFileArchiveUtil.getStoreArchivePath(this.masterServices.getConfiguration(),parent,tabledir,td.getColumnFamilies()[0].getName());
  LOG.debug("Table dir:" + tabledir);
  LOG.debug("Store dir:" + storedir);
  LOG.debug("Store archive dir:" + storeArchive);
  FileStatus[] mockFiles=addMockStoreFiles(2,this.masterServices,storedir);
  FileStatus[] storeFiles=fs.listStatus(storedir);
  int index=0;
  for (  FileStatus file : storeFiles) {
    LOG.debug("Have store file:" + file.getPath());
    assertEquals("Got unexpected store file",mockFiles[index].getPath(),storeFiles[index].getPath());
    index++;
  }
  assertTrue(janitor.cleanParent(parent,parentMetaRow));
  Path parentDir=new Path(tabledir,parent.getEncodedName());
  ProcedureTestingUtility.waitAllProcedures(masterServices.getMasterProcedureExecutor());
  assertTrue(!fs.exists(parentDir));
  LOG.debug("Finished cleanup of parent region");
  FileStatus[] archivedStoreFiles=fs.listStatus(storeArchive);
  logFiles("archived files",storeFiles);
  logFiles("archived files",archivedStoreFiles);
  assertArchiveEqualToOriginal(storeFiles,archivedStoreFiles,fs);
  FSUtils.delete(fs,rootdir,true);
}
