@Test public void testClusterRequests() throws Exception {
  RegionServerStatusProtos.RegionServerReportRequest.Builder request=RegionServerStatusProtos.RegionServerReportRequest.newBuilder();
  ServerName serverName=cluster.getMaster(0).getServerName();
  request.setServer(ProtobufUtil.toServerName(serverName));
  long expectedRequestNumber=10000;
  MetricsMasterSource masterSource=master.getMasterMetrics().getMetricsSource();
  ClusterStatusProtos.ServerLoad sl=ClusterStatusProtos.ServerLoad.newBuilder().setTotalNumberOfRequests(expectedRequestNumber).build();
  request.setLoad(sl);
  master.getMasterRpcServices().regionServerReport(null,request.build());
  boolean tablesOnMaster=LoadBalancer.isTablesOnMaster(TEST_UTIL.getConfiguration());
  if (tablesOnMaster) {
    metricsHelper.assertCounter("cluster_requests",expectedRequestNumber,masterSource);
  }
 else {
    metricsHelper.assertCounterGt("cluster_requests",expectedRequestNumber,masterSource);
  }
  expectedRequestNumber=15000;
  sl=ClusterStatusProtos.ServerLoad.newBuilder().setTotalNumberOfRequests(expectedRequestNumber).build();
  request.setLoad(sl);
  master.getMasterRpcServices().regionServerReport(null,request.build());
  if (tablesOnMaster) {
    metricsHelper.assertCounter("cluster_requests",expectedRequestNumber,masterSource);
  }
 else {
    metricsHelper.assertCounterGt("cluster_requests",expectedRequestNumber,masterSource);
  }
  master.stopMaster();
}
