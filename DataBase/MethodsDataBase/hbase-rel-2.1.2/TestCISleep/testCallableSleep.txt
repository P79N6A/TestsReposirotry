@Test public void testCallableSleep() throws Exception {
  long pauseTime;
  long baseTime=100;
  final TableName tableName=TableName.valueOf(name.getMethodName());
  TEST_UTIL.createTable(tableName,FAM_NAM);
  ClientServiceCallable<Object> regionServerCallable=new ClientServiceCallable<Object>(TEST_UTIL.getConnection(),tableName,FAM_NAM,new RpcControllerFactory(TEST_UTIL.getConfiguration()).newController(),HConstants.PRIORITY_UNSET){
    @Override protected Object rpcCall() throws Exception {
      return null;
    }
  }
;
  regionServerCallable.prepare(false);
  for (int i=0; i < HConstants.RETRY_BACKOFF.length; i++) {
    pauseTime=regionServerCallable.sleep(baseTime,i);
    assertTrue(pauseTime >= (baseTime * HConstants.RETRY_BACKOFF[i]));
    assertTrue(pauseTime <= (baseTime * HConstants.RETRY_BACKOFF[i] * 1.01f));
  }
  RegionAdminServiceCallable<Object> regionAdminServiceCallable=new RegionAdminServiceCallable<Object>((ClusterConnection)TEST_UTIL.getConnection(),new RpcControllerFactory(TEST_UTIL.getConfiguration()),tableName,FAM_NAM){
    @Override public Object call(    HBaseRpcController controller) throws Exception {
      return null;
    }
  }
;
  regionAdminServiceCallable.prepare(false);
  for (int i=0; i < HConstants.RETRY_BACKOFF.length; i++) {
    pauseTime=regionAdminServiceCallable.sleep(baseTime,i);
    assertTrue(pauseTime >= (baseTime * HConstants.RETRY_BACKOFF[i]));
    assertTrue(pauseTime <= (baseTime * HConstants.RETRY_BACKOFF[i] * 1.01f));
  }
  try (MasterCallable<Object> masterCallable=new MasterCallable<Object>(TEST_UTIL.getConnection(),new RpcControllerFactory(TEST_UTIL.getConfiguration())){
    @Override protected Object rpcCall() throws Exception {
      return null;
    }
  }
){
    for (int i=0; i < HConstants.RETRY_BACKOFF.length; i++) {
      pauseTime=masterCallable.sleep(baseTime,i);
      assertTrue(pauseTime >= (baseTime * HConstants.RETRY_BACKOFF[i]));
      assertTrue(pauseTime <= (baseTime * HConstants.RETRY_BACKOFF[i] * 1.01f));
    }
  }
 }
