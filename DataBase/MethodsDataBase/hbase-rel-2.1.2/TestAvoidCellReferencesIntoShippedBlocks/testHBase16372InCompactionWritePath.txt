@Test public void testHBase16372InCompactionWritePath() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final Table table=TEST_UTIL.createTable(tableName,FAMILIES_1,1,1024,CompactorRegionObserver.class.getName());
  try {
    RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(tableName);
    String regionName=locator.getAllRegionLocations().get(0).getRegion().getEncodedName();
    HRegion region=(HRegion)TEST_UTIL.getRSForFirstRegionInTable(tableName).getRegion(regionName);
    HStore store=region.getStores().iterator().next();
    CacheConfig cacheConf=store.getCacheConfig();
    cacheConf.setCacheDataOnWrite(true);
    cacheConf.setEvictOnClose(true);
    final BlockCache cache=cacheConf.getBlockCache();
    Put put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW1);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW1);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW2);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW2);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW3);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW3);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW4);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW4);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW5);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW5);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    region.flush(true);
    Scan s=new Scan();
    s.setMaxResultSize(1000);
    int count;
    try (ResultScanner scanner=table.getScanner(s)){
      count=Iterables.size(scanner);
    }
     assertEquals("Count all the rows ",6,count);
    ScannerThread scannerThread=new ScannerThread(table,cache);
    scannerThread.start();
    region.compact(true);
    s=new Scan();
    s.setMaxResultSize(1000);
    try (ResultScanner scanner=table.getScanner(s)){
      count=Iterables.size(scanner);
    }
     assertEquals("Count all the rows ",6,count);
  }
  finally {
    table.close();
  }
}
