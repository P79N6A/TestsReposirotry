@Test public void testValidBucketCacheConfigs() throws IOException {
  Configuration conf=HBaseConfiguration.create();
  conf.setFloat(BucketCache.ACCEPT_FACTOR_CONFIG_NAME,0.9f);
  conf.setFloat(BucketCache.MIN_FACTOR_CONFIG_NAME,0.5f);
  conf.setFloat(BucketCache.EXTRA_FREE_FACTOR_CONFIG_NAME,0.5f);
  conf.setFloat(BucketCache.SINGLE_FACTOR_CONFIG_NAME,0.1f);
  conf.setFloat(BucketCache.MULTI_FACTOR_CONFIG_NAME,0.7f);
  conf.setFloat(BucketCache.MEMORY_FACTOR_CONFIG_NAME,0.2f);
  BucketCache cache=new BucketCache(ioEngineName,capacitySize,constructedBlockSize,constructedBlockSizes,writeThreads,writerQLen,persistencePath,100,conf);
  assertEquals(BucketCache.ACCEPT_FACTOR_CONFIG_NAME + " failed to propagate.",0.9f,cache.getAcceptableFactor(),0);
  assertEquals(BucketCache.MIN_FACTOR_CONFIG_NAME + " failed to propagate.",0.5f,cache.getMinFactor(),0);
  assertEquals(BucketCache.EXTRA_FREE_FACTOR_CONFIG_NAME + " failed to propagate.",0.5f,cache.getExtraFreeFactor(),0);
  assertEquals(BucketCache.SINGLE_FACTOR_CONFIG_NAME + " failed to propagate.",0.1f,cache.getSingleFactor(),0);
  assertEquals(BucketCache.MULTI_FACTOR_CONFIG_NAME + " failed to propagate.",0.7f,cache.getMultiFactor(),0);
  assertEquals(BucketCache.MEMORY_FACTOR_CONFIG_NAME + " failed to propagate.",0.2f,cache.getMemoryFactor(),0);
}
