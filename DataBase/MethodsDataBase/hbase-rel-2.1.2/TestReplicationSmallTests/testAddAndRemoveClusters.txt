/** 
 * Integration test for TestReplicationAdmin, removes and re-add a peer cluster
 */
@Test public void testAddAndRemoveClusters() throws Exception {
  LOG.info("testAddAndRemoveClusters");
  hbaseAdmin.removeReplicationPeer(PEER_ID);
  Thread.sleep(SLEEP_TIME);
  byte[] rowKey=Bytes.toBytes("Won't be replicated");
  Put put=new Put(rowKey);
  put.addColumn(famName,row,row);
  htable1.put(put);
  Get get=new Get(rowKey);
  for (int i=0; i < NB_RETRIES; i++) {
    if (i == NB_RETRIES - 1) {
      break;
    }
    Result res=htable2.get(get);
    if (res.size() >= 1) {
      fail("Not supposed to be replicated");
    }
 else {
      LOG.info("Row not replicated, let's wait a bit more...");
      Thread.sleep(SLEEP_TIME);
    }
  }
  ReplicationPeerConfig rpc=ReplicationPeerConfig.newBuilder().setClusterKey(utility2.getClusterKey()).build();
  hbaseAdmin.addReplicationPeer(PEER_ID,rpc);
  Thread.sleep(SLEEP_TIME);
  rowKey=Bytes.toBytes("do rep");
  put=new Put(rowKey);
  put.addColumn(famName,row,row);
  LOG.info("Adding new row");
  htable1.put(put);
  get=new Get(rowKey);
  for (int i=0; i < NB_RETRIES; i++) {
    if (i == NB_RETRIES - 1) {
      fail("Waited too much time for put replication");
    }
    Result res=htable2.get(get);
    if (res.isEmpty()) {
      LOG.info("Row not available");
      Thread.sleep(SLEEP_TIME * i);
    }
 else {
      assertArrayEquals(row,res.value());
      break;
    }
  }
}
