/** 
 * Test for HBASE-8663 <p> Create two new Tables with colfamilies enabled for replication then run ReplicationAdmin.listReplicated(). Finally verify the table:colfamilies. Note: TestReplicationAdmin is a better place for this testing but it would need mocks.
 */
@Test public void testVerifyListReplicatedTable() throws Exception {
  LOG.info("testVerifyListReplicatedTable");
  final String tName="VerifyListReplicated_";
  final String colFam="cf1";
  final int numOfTables=3;
  Admin hadmin=utility1.getAdmin();
  for (int i=0; i < numOfTables; i++) {
    hadmin.createTable(TableDescriptorBuilder.newBuilder(TableName.valueOf(tName + i)).setColumnFamily(ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes(colFam)).setScope(HConstants.REPLICATION_SCOPE_GLOBAL).build()).build());
  }
  List<TableCFs> replicationColFams=hbaseAdmin.listReplicatedTableCFs();
  int[] match=new int[numOfTables];
  for (int i=0; i < replicationColFams.size(); i++) {
    TableCFs replicationEntry=replicationColFams.get(i);
    String tn=replicationEntry.getTable().getNameAsString();
    if (tn.startsWith(tName) && replicationEntry.getColumnFamilyMap().containsKey(colFam)) {
      int m=Integer.parseInt(tn.substring(tn.length() - 1));
      match[m]++;
    }
  }
  for (int i=0; i < match.length; i++) {
    assertTrue("listReplicated() does not match table " + i,(match[i] == 1));
  }
  for (int i=0; i < numOfTables; i++) {
    TableName tableName=TableName.valueOf(tName + i);
    hadmin.disableTable(tableName);
    hadmin.deleteTable(tableName);
  }
  hadmin.close();
}
