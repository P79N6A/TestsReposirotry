@Ignore @Test public void testRpcScheduler() throws IOException, InterruptedException {
  PriorityFunction qosFunction=mock(PriorityFunction.class);
  Abortable abortable=new AbortServer();
  CONF.set(RpcServerFactory.CUSTOM_RPC_SERVER_IMPL_CONF_KEY,rpcServerImpl);
  RpcScheduler scheduler=new SimpleRpcScheduler(CONF,2,0,0,qosFunction,abortable,0);
  RpcServer rpcServer=RpcServerFactory.createRpcServer(null,"testRpcServer",Lists.newArrayList(new BlockingServiceAndInterface((BlockingService)SERVICE,null)),new InetSocketAddress("localhost",0),CONF,scheduler);
  try (BlockingRpcClient client=new BlockingRpcClient(CONF)){
    rpcServer.start();
    BlockingInterface stub=newBlockingStub(client,rpcServer.getListenerAddress());
    stub.echo(null,EchoRequestProto.newBuilder().setMessage("hello").build());
  }
 catch (  Throwable e) {
    assert (abortable.isAborted() == true);
  }
 finally {
    rpcServer.stop();
  }
}
