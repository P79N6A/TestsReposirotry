@Test public void test() throws IOException {
  assertSame(ScanResultCache.EMPTY_RESULT_ARRAY,resultCache.addAndGet(ScanResultCache.EMPTY_RESULT_ARRAY,false));
  assertSame(ScanResultCache.EMPTY_RESULT_ARRAY,resultCache.addAndGet(ScanResultCache.EMPTY_RESULT_ARRAY,true));
  Cell[] cells1=createCells(CF,1,10);
  Cell[] cells2=createCells(CF,2,10);
  Cell[] cells3=createCells(CF,3,10);
  assertEquals(0,resultCache.addAndGet(new Result[]{Result.create(Arrays.copyOf(cells1,3),null,false,true)},false).length);
  Result[] results=resultCache.addAndGet(new Result[]{Result.create(Arrays.copyOfRange(cells1,3,7),null,false,true),Result.create(Arrays.copyOfRange(cells1,7,10),null,false,true)},false);
  assertEquals(2,results.length);
  assertResultEquals(results[0],1,0,4);
  assertResultEquals(results[1],1,4,8);
  results=resultCache.addAndGet(ScanResultCache.EMPTY_RESULT_ARRAY,false);
  assertEquals(1,results.length);
  assertResultEquals(results[0],1,8,10);
  results=resultCache.addAndGet(new Result[]{Result.create(Arrays.copyOfRange(cells2,0,4),null,false,true),Result.create(Arrays.copyOfRange(cells2,4,8),null,false,true),Result.create(Arrays.copyOfRange(cells2,8,10),null,false,true),Result.create(Arrays.copyOfRange(cells3,0,4),null,false,true),Result.create(Arrays.copyOfRange(cells3,4,8),null,false,true),Result.create(Arrays.copyOfRange(cells3,8,10),null,false,false)},false);
  assertEquals(6,results.length);
  assertResultEquals(results[0],2,0,4);
  assertResultEquals(results[1],2,4,8);
  assertResultEquals(results[2],2,8,10);
  assertResultEquals(results[3],3,0,4);
  assertResultEquals(results[4],3,4,8);
  assertResultEquals(results[5],3,8,10);
}
