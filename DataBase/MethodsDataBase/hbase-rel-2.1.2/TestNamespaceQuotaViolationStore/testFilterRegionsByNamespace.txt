@Test public void testFilterRegionsByNamespace(){
  TableName tn1=TableName.valueOf("foo");
  TableName tn2=TableName.valueOf("sn","bar");
  TableName tn3=TableName.valueOf("ns","foo");
  TableName tn4=TableName.valueOf("ns","bar");
  assertEquals(0,size(store.filterBySubject("asdf")));
  for (int i=0; i < 5; i++) {
    regionReports.put(RegionInfoBuilder.newBuilder(tn1).setStartKey(Bytes.toBytes(i)).setEndKey(Bytes.toBytes(i + 1)).build(),0L);
  }
  for (int i=0; i < 3; i++) {
    regionReports.put(RegionInfoBuilder.newBuilder(tn2).setStartKey(Bytes.toBytes(i)).setEndKey(Bytes.toBytes(i + 1)).build(),0L);
  }
  for (int i=0; i < 10; i++) {
    regionReports.put(RegionInfoBuilder.newBuilder(tn3).setStartKey(Bytes.toBytes(i)).setEndKey(Bytes.toBytes(i + 1)).build(),0L);
  }
  for (int i=0; i < 8; i++) {
    regionReports.put(RegionInfoBuilder.newBuilder(tn4).setStartKey(Bytes.toBytes(i)).setEndKey(Bytes.toBytes(i + 1)).build(),0L);
  }
  assertEquals(26,regionReports.size());
  assertEquals(5,size(store.filterBySubject(NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR)));
  assertEquals(3,size(store.filterBySubject("sn")));
  assertEquals(18,size(store.filterBySubject("ns")));
}
