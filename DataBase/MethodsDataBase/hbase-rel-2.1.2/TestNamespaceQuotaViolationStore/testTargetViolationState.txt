@Test public void testTargetViolationState() throws IOException {
  mockNoSnapshotSizes();
  final String NS="ns";
  TableName tn1=TableName.valueOf(NS,"tn1");
  TableName tn2=TableName.valueOf(NS,"tn2");
  TableName tn3=TableName.valueOf("tn3");
  SpaceQuota quota=SpaceQuota.newBuilder().setSoftLimit(ONE_MEGABYTE).setViolationPolicy(ProtobufUtil.toProtoViolationPolicy(SpaceViolationPolicy.DISABLE)).build();
  for (int i=0; i < 3; i++) {
    regionReports.put(RegionInfoBuilder.newBuilder(tn3).setStartKey(Bytes.toBytes(i)).setEndKey(Bytes.toBytes(i + 1)).build(),5L * ONE_MEGABYTE);
  }
  regionReports.put(RegionInfoBuilder.newBuilder(tn1).setStartKey(Bytes.toBytes(0)).setEndKey(Bytes.toBytes(1)).build(),1024L * 512L);
  regionReports.put(RegionInfoBuilder.newBuilder(tn1).setStartKey(Bytes.toBytes(1)).setEndKey(Bytes.toBytes(2)).build(),1024L * 256L);
  assertEquals(false,store.getTargetState(NS,quota).getQuotaStatus().isInViolation());
  regionReports.put(RegionInfoBuilder.newBuilder(tn2).setStartKey(Bytes.toBytes(2)).setEndKey(Bytes.toBytes(3)).build(),1024L * 256L);
  assertEquals(false,store.getTargetState(NS,quota).getQuotaStatus().isInViolation());
  regionReports.put(RegionInfoBuilder.newBuilder(tn2).setStartKey(Bytes.toBytes(3)).setEndKey(Bytes.toBytes(4)).build(),1024L);
  assertEquals(true,store.getTargetState(NS,quota).getQuotaStatus().isInViolation());
  assertEquals(SpaceViolationPolicy.DISABLE,store.getTargetState(NS,quota).getQuotaStatus().getPolicy());
}
