/** 
 * With a single member, verify ordered execution.  The Coordinator side is run in a separate thread so we can only trigger from members and wait for particular state latches.
 */
@Test public void testSingleMember() throws Exception {
  List<String> members=new ArrayList<>();
  members.add("member");
  LatchedProcedure proc=new LatchedProcedure(coord,new ForeignExceptionDispatcher(),100,Integer.MAX_VALUE,"op",null,members);
  final LatchedProcedure procspy=spy(proc);
  new Thread(){
    @Override public void run(){
      procspy.call();
    }
  }
.start();
  proc.startedAcquireBarrier.await();
  verify(procspy).sendGlobalBarrierStart();
  verify(procspy,never()).sendGlobalBarrierReached();
  verify(procspy,never()).sendGlobalBarrierComplete();
  verify(procspy,never()).barrierAcquiredByMember(anyString());
  proc.barrierAcquiredByMember(members.get(0));
  proc.acquiredBarrierLatch.await();
  verify(procspy).sendGlobalBarrierStart();
  proc.barrierReleasedByMember(members.get(0),new byte[0]);
  proc.completedProcedure.await();
  verify(procspy).sendGlobalBarrierReached();
  verify(procspy).sendGlobalBarrierComplete();
  verify(procspy,never()).receive(any());
}
