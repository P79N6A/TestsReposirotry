/** 
 * Test cps in the table description
 * @throws Exception
 */
@Test public void testSetListRemoveCP() throws Exception {
  TableDescriptor desc=TableDescriptorBuilder.newBuilder(TableName.valueOf(name.getMethodName())).build();
  assertTrue(desc.getCoprocessorDescriptors().isEmpty());
  String className1="org.apache.hadoop.hbase.coprocessor.SimpleRegionObserver";
  String className2="org.apache.hadoop.hbase.coprocessor.SampleRegionWALObserver";
  desc=TableDescriptorBuilder.newBuilder(desc).setCoprocessor(className1).build();
  assertTrue(desc.getCoprocessorDescriptors().size() == 1);
  assertTrue(desc.getCoprocessorDescriptors().stream().map(CoprocessorDescriptor::getClassName).anyMatch(name -> name.equals(className1)));
  desc=TableDescriptorBuilder.newBuilder(desc).setCoprocessor(className2).build();
  assertTrue(desc.getCoprocessorDescriptors().size() == 2);
  assertTrue(desc.getCoprocessorDescriptors().stream().map(CoprocessorDescriptor::getClassName).anyMatch(name -> name.equals(className2)));
  desc=TableDescriptorBuilder.newBuilder(desc).removeCoprocessor(className1).build();
  assertTrue(desc.getCoprocessorDescriptors().size() == 1);
  assertFalse(desc.getCoprocessorDescriptors().stream().map(CoprocessorDescriptor::getClassName).anyMatch(name -> name.equals(className1)));
  assertTrue(desc.getCoprocessorDescriptors().stream().map(CoprocessorDescriptor::getClassName).anyMatch(name -> name.equals(className2)));
  desc=TableDescriptorBuilder.newBuilder(desc).removeCoprocessor(className2).build();
  assertTrue(desc.getCoprocessorDescriptors().isEmpty());
  assertFalse(desc.getCoprocessorDescriptors().stream().map(CoprocessorDescriptor::getClassName).anyMatch(name -> name.equals(className1)));
  assertFalse(desc.getCoprocessorDescriptors().stream().map(CoprocessorDescriptor::getClassName).anyMatch(name -> name.equals(className2)));
}
