@Test public void testOnRegionChange() throws Exception {
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final int NUM_REGIONS=10;
  Table htable=TEST_UTIL.createTable(tableName,new byte[][]{FAMILY},3,Bytes.toBytes("aaaaa"),Bytes.toBytes("zzzzz"),NUM_REGIONS);
  HTableMultiplexer multiplexer=new HTableMultiplexer(TEST_UTIL.getConfiguration(),PER_REGIONSERVER_QUEUE_SIZE);
  try (RegionLocator r=TEST_UTIL.getConnection().getRegionLocator(tableName)){
    byte[][] startRows=r.getStartKeys();
    byte[] row=startRows[1];
    assertTrue("2nd region should not start with empty row",row != null && row.length > 0);
    Put put=new Put(row).addColumn(FAMILY,QUALIFIER1,VALUE1);
    assertTrue("multiplexer.put returns",multiplexer.put(tableName,put));
    checkExistence(htable,row,FAMILY,QUALIFIER1,VALUE1);
    HRegionLocation loc=r.getRegionLocation(row);
    MiniHBaseCluster hbaseCluster=TEST_UTIL.getHBaseCluster();
    hbaseCluster.stopRegionServer(loc.getServerName());
    TEST_UTIL.waitUntilAllRegionsAssigned(tableName);
    put=new Put(row).addColumn(FAMILY,QUALIFIER2,VALUE2);
    assertTrue("multiplexer.put returns",multiplexer.put(tableName,put));
    checkExistence(htable,row,FAMILY,QUALIFIER2,VALUE2);
  }
 }
