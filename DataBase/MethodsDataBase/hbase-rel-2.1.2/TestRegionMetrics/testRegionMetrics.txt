@Test public void testRegionMetrics() throws Exception {
  for (  ServerName serverName : admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().keySet()) {
    List<RegionInfo> regions=admin.getRegions(serverName);
    Collection<RegionMetrics> regionMetricsList=admin.getRegionMetrics(serverName);
    checkRegionsAndRegionMetrics(regions,regionMetricsList);
  }
  for (  TableName table : new TableName[]{TABLE_1,TABLE_2,TABLE_3}) {
    List<RegionInfo> tableRegions=admin.getRegions(table);
    List<RegionMetrics> regionMetrics=new ArrayList<>();
    for (    ServerName serverName : admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().keySet()) {
      regionMetrics.addAll(admin.getRegionMetrics(serverName,table));
    }
    checkRegionsAndRegionMetrics(tableRegions,regionMetrics);
  }
  TimeUnit.MILLISECONDS.sleep(3 * MSG_INTERVAL);
  for (  Map.Entry<ServerName,ServerMetrics> entry : admin.getClusterMetrics(EnumSet.of(Option.LIVE_SERVERS)).getLiveServerMetrics().entrySet()) {
    ServerName serverName=entry.getKey();
    ServerMetrics serverMetrics=entry.getValue();
    List<RegionMetrics> regionMetrics=admin.getRegionMetrics(serverName);
    LOG.debug("serverName=" + serverName + ", getRegionLoads="+ serverMetrics.getRegionMetrics().keySet().stream().map(r -> Bytes.toString(r)).collect(Collectors.toList()));
    LOG.debug("serverName=" + serverName + ", regionLoads="+ regionMetrics.stream().map(r -> Bytes.toString(r.getRegionName())).collect(Collectors.toList()));
    assertEquals(serverMetrics.getRegionMetrics().size(),regionMetrics.size());
  }
}
