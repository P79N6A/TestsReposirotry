@Test public void testFlushTableAndRegion() throws Exception {
  RegionInfo hri=createTableAndGetOneRegion(tableName);
  ServerName serverName=TEST_UTIL.getHBaseCluster().getMaster().getAssignmentManager().getRegionStates().getRegionServerOfRegion(hri);
  HRegionServer regionServer=TEST_UTIL.getHBaseCluster().getLiveRegionServerThreads().stream().map(rsThread -> rsThread.getRegionServer()).filter(rs -> rs.getServerName().equals(serverName)).findFirst().get();
  ASYNC_CONN.getTable(tableName).put(new Put(hri.getStartKey()).addColumn(FAMILY,FAMILY_0,Bytes.toBytes("value-1"))).join();
  assertTrue(regionServer.getOnlineRegion(hri.getRegionName()).getMemStoreDataSize() > 0);
  LOG.info("flushing region: " + Bytes.toStringBinary(hri.getRegionName()));
  admin.flushRegion(hri.getRegionName()).get();
  LOG.info("blocking until flush is complete: " + Bytes.toStringBinary(hri.getRegionName()));
  Threads.sleepWithoutInterrupt(500);
  while (regionServer.getOnlineRegion(hri.getRegionName()).getMemStoreDataSize() > 0) {
    Threads.sleep(50);
  }
  assertEquals(regionServer.getOnlineRegion(hri.getRegionName()).getMemStoreDataSize(),0);
  ASYNC_CONN.getTable(tableName).put(new Put(hri.getStartKey()).addColumn(FAMILY,FAMILY_0,Bytes.toBytes("value-2"))).join();
  assertTrue(regionServer.getOnlineRegion(hri.getRegionName()).getMemStoreDataSize() > 0);
  admin.flush(tableName).get();
  Threads.sleepWithoutInterrupt(500);
  while (regionServer.getOnlineRegion(hri.getRegionName()).getMemStoreDataSize() > 0) {
    Threads.sleep(50);
  }
  assertEquals(regionServer.getOnlineRegion(hri.getRegionName()).getMemStoreDataSize(),0);
}
