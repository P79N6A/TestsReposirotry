@Test public void test() throws IOException {
  assertSame(ScanResultCache.EMPTY_RESULT_ARRAY,resultCache.addAndGet(ScanResultCache.EMPTY_RESULT_ARRAY,false));
  assertSame(ScanResultCache.EMPTY_RESULT_ARRAY,resultCache.addAndGet(ScanResultCache.EMPTY_RESULT_ARRAY,true));
  Cell[] cells1=createCells(CF,1,10);
  Cell[] cells2=createCells(CF,2,10);
  Result[] results1=resultCache.addAndGet(new Result[]{Result.create(Arrays.copyOf(cells1,5),null,false,true)},false);
  assertEquals(1,results1.length);
  assertEquals(1,Bytes.toInt(results1[0].getRow()));
  assertEquals(5,results1[0].rawCells().length);
  for (int i=0; i < 5; i++) {
    assertEquals(1,Bytes.toInt(results1[0].getValue(CF,Bytes.toBytes("cq" + i))));
  }
  Result[] results2=resultCache.addAndGet(new Result[]{Result.create(Arrays.copyOfRange(cells1,1,10),null,false,true)},false);
  assertEquals(1,results2.length);
  assertEquals(1,Bytes.toInt(results2[0].getRow()));
  assertEquals(5,results2[0].rawCells().length);
  for (int i=5; i < 10; i++) {
    assertEquals(1,Bytes.toInt(results2[0].getValue(CF,Bytes.toBytes("cq" + i))));
  }
  Result[] results3=resultCache.addAndGet(new Result[]{Result.create(cells1),Result.create(cells2)},false);
  assertEquals(1,results3.length);
  assertEquals(2,Bytes.toInt(results3[0].getRow()));
  assertEquals(10,results3[0].rawCells().length);
  for (int i=0; i < 10; i++) {
    assertEquals(2,Bytes.toInt(results3[0].getValue(CF,Bytes.toBytes("cq" + i))));
  }
}
