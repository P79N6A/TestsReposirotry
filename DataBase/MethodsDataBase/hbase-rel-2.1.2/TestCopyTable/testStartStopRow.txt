@Test public void testStartStopRow() throws Exception {
  final TableName tableName1=TableName.valueOf(name.getMethodName() + "1");
  final TableName tableName2=TableName.valueOf(name.getMethodName() + "2");
  final byte[] FAMILY=Bytes.toBytes("family");
  final byte[] COLUMN1=Bytes.toBytes("c1");
  final byte[] ROW0=Bytes.toBytesBinary("\\x01row0");
  final byte[] ROW1=Bytes.toBytesBinary("\\x01row1");
  final byte[] ROW2=Bytes.toBytesBinary("\\x01row2");
  Table t1=TEST_UTIL.createTable(tableName1,FAMILY);
  Table t2=TEST_UTIL.createTable(tableName2,FAMILY);
  Put p=new Put(ROW0);
  p.addColumn(FAMILY,COLUMN1,COLUMN1);
  t1.put(p);
  p=new Put(ROW1);
  p.addColumn(FAMILY,COLUMN1,COLUMN1);
  t1.put(p);
  p=new Put(ROW2);
  p.addColumn(FAMILY,COLUMN1,COLUMN1);
  t1.put(p);
  CopyTable copy=new CopyTable();
  assertEquals(0,ToolRunner.run(new Configuration(TEST_UTIL.getConfiguration()),copy,new String[]{"--new.name=" + tableName2,"--startrow=\\x01row1","--stoprow=\\x01row2",tableName1.getNameAsString()}));
  Get g=new Get(ROW1);
  Result r=t2.get(g);
  assertEquals(1,r.size());
  assertTrue(CellUtil.matchingQualifier(r.rawCells()[0],COLUMN1));
  g=new Get(ROW0);
  r=t2.get(g);
  assertEquals(0,r.size());
  g=new Get(ROW2);
  r=t2.get(g);
  assertEquals(0,r.size());
  t1.close();
  t2.close();
  TEST_UTIL.deleteTable(tableName1);
  TEST_UTIL.deleteTable(tableName2);
}
