@Test public void testAddRemovePeer() throws Exception {
  ReplicationPeerConfig rpc1=new ReplicationPeerConfig();
  rpc1.setClusterKey(KEY_ONE);
  ReplicationPeerConfig rpc2=new ReplicationPeerConfig();
  rpc2.setClusterKey(KEY_TWO);
  admin.addReplicationPeer(ID_ONE,rpc1).join();
  try {
    admin.addReplicationPeer(ID_ONE,rpc1).join();
    fail("Test case should fail as adding a same peer.");
  }
 catch (  CompletionException e) {
  }
  assertEquals(1,admin.listReplicationPeers().get().size());
  try {
    admin.removeReplicationPeer(ID_TWO).join();
    fail("Test case should fail as removing a inexisting peer.");
  }
 catch (  CompletionException e) {
  }
  assertEquals(1,admin.listReplicationPeers().get().size());
  admin.addReplicationPeer(ID_TWO,rpc2).join();
  assertEquals(2,admin.listReplicationPeers().get().size());
  admin.removeReplicationPeer(ID_ONE).join();
  assertEquals(1,admin.listReplicationPeers().get().size());
  admin.removeReplicationPeer(ID_TWO).join();
  assertEquals(0,admin.listReplicationPeers().get().size());
}
