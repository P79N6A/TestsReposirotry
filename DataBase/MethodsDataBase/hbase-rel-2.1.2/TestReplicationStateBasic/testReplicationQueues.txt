@Test public void testReplicationQueues() throws ReplicationException {
  rp.init();
  rqs.removeQueue(server1,"bogus");
  rqs.removeWAL(server1,"bogus","bogus");
  removeAllQueues(server1);
  assertEquals(0,rqs.getAllQueues(server1).size());
  assertEquals(0,rqs.getWALPosition(server1,"bogus","bogus"));
  assertTrue(rqs.getWALsInQueue(server1,"bogus").isEmpty());
  assertTrue(rqs.getAllQueues(ServerName.valueOf("bogus",1234,12345)).isEmpty());
  populateQueues();
  assertEquals(3,rqs.getListOfReplicators().size());
  assertEquals(0,rqs.getWALsInQueue(server2,"qId1").size());
  assertEquals(5,rqs.getWALsInQueue(server3,"qId5").size());
  assertEquals(0,rqs.getWALPosition(server3,"qId1","filename0"));
  rqs.setWALPosition(server3,"qId5","filename4",354L,Collections.emptyMap());
  assertEquals(354L,rqs.getWALPosition(server3,"qId5","filename4"));
  assertEquals(5,rqs.getWALsInQueue(server3,"qId5").size());
  assertEquals(0,rqs.getWALsInQueue(server2,"qId1").size());
  assertEquals(0,rqs.getAllQueues(server1).size());
  assertEquals(1,rqs.getAllQueues(server2).size());
  assertEquals(5,rqs.getAllQueues(server3).size());
  assertEquals(0,rqs.getAllQueues(server1).size());
  rqs.removeReplicatorIfQueueIsEmpty(server1);
  assertEquals(2,rqs.getListOfReplicators().size());
  List<String> queues=rqs.getAllQueues(server3);
  assertEquals(5,queues.size());
  for (  String queue : queues) {
    rqs.claimQueue(server3,queue,server2);
  }
  rqs.removeReplicatorIfQueueIsEmpty(server3);
  assertEquals(1,rqs.getListOfReplicators().size());
  assertEquals(6,rqs.getAllQueues(server2).size());
  removeAllQueues(server2);
  rqs.removeReplicatorIfQueueIsEmpty(server2);
  assertEquals(0,rqs.getListOfReplicators().size());
}
