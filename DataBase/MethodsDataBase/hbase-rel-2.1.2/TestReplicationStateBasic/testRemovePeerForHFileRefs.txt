@Test public void testRemovePeerForHFileRefs() throws ReplicationException, KeeperException {
  rp.init();
  rp.getPeerStorage().addPeer(ID_ONE,ReplicationPeerConfig.newBuilder().setClusterKey(KEY_ONE).build(),true);
  rqs.addPeerToHFileRefs(ID_ONE);
  rp.getPeerStorage().addPeer(ID_TWO,ReplicationPeerConfig.newBuilder().setClusterKey(KEY_TWO).build(),true);
  rqs.addPeerToHFileRefs(ID_TWO);
  List<Pair<Path,Path>> files1=new ArrayList<>(3);
  files1.add(new Pair<>(null,new Path("file_1")));
  files1.add(new Pair<>(null,new Path("file_2")));
  files1.add(new Pair<>(null,new Path("file_3")));
  rqs.addHFileRefs(ID_ONE,files1);
  rqs.addHFileRefs(ID_TWO,files1);
  assertEquals(2,rqs.getAllPeersFromHFileRefsQueue().size());
  assertEquals(3,rqs.getReplicableHFiles(ID_ONE).size());
  assertEquals(3,rqs.getReplicableHFiles(ID_TWO).size());
  rp.getPeerStorage().removePeer(ID_ONE);
  rqs.removePeerFromHFileRefs(ID_ONE);
  assertEquals(1,rqs.getAllPeersFromHFileRefsQueue().size());
  assertTrue(rqs.getReplicableHFiles(ID_ONE).isEmpty());
  assertEquals(3,rqs.getReplicableHFiles(ID_TWO).size());
  rp.getPeerStorage().removePeer(ID_TWO);
  rqs.removePeerFromHFileRefs(ID_TWO);
  assertEquals(0,rqs.getAllPeersFromHFileRefsQueue().size());
  assertTrue(rqs.getReplicableHFiles(ID_TWO).isEmpty());
}
