@Test public void testRowLock() throws IOException {
  TableName tableName=TableName.valueOf(testName.getMethodName());
  HTableDescriptor hdt=TEST_UTIL.createTableDescriptor(tableName);
  hdt.addCoprocessor(SleepCoprocessor.class.getName());
  TEST_UTIL.createTable(hdt,new byte[][]{FAM},TEST_UTIL.getConfiguration());
  Thread incrementThread=new Thread(() -> {
    try {
      try (Table table=TEST_UTIL.getConnection().getTable(tableName)){
        table.incrementColumnValue(ROW1,FAM,FAM,1);
      }
     }
 catch (    IOException e) {
      Assert.fail(e.getMessage());
    }
  }
);
  Thread getThread=new Thread(() -> {
    try {
      try (Table table=TEST_UTIL.getConnection().getTable(tableName)){
        table.setRpcTimeout(1000);
        Delete delete=new Delete(ROW1);
        table.delete(delete);
      }
     }
 catch (    IOException e) {
      Assert.fail(e.getMessage());
    }
  }
);
  incrementThread.start();
  Threads.sleep(1000);
  getThread.start();
  Threads.sleep(2000);
  try (Table table=TEST_UTIL.getConnection().getTable(tableName)){
    table.setRpcTimeout(1000);
    table.get(new Get(ROW2));
  }
  finally {
    incrementThread.interrupt();
    getThread.interrupt();
  }
}
