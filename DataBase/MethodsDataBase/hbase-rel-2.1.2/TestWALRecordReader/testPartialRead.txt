/** 
 * Test partial reads from the log based on passed time range
 * @throws Exception
 */
@Test public void testPartialRead() throws Exception {
  final WALFactory walfactory=new WALFactory(conf,getName());
  WAL log=walfactory.getWAL(info);
  long ts=System.currentTimeMillis();
  WALEdit edit=new WALEdit();
  edit.add(new KeyValue(rowName,family,Bytes.toBytes("1"),ts,value));
  log.append(info,getWalKeyImpl(ts,scopes),edit,true);
  edit=new WALEdit();
  edit.add(new KeyValue(rowName,family,Bytes.toBytes("2"),ts + 1,value));
  log.append(info,getWalKeyImpl(ts + 1,scopes),edit,true);
  log.sync();
  LOG.info("Before 1st WAL roll " + log.toString());
  log.rollWriter();
  LOG.info("Past 1st WAL roll " + log.toString());
  Thread.sleep(1);
  long ts1=System.currentTimeMillis();
  edit=new WALEdit();
  edit.add(new KeyValue(rowName,family,Bytes.toBytes("3"),ts1 + 1,value));
  log.append(info,getWalKeyImpl(ts1 + 1,scopes),edit,true);
  edit=new WALEdit();
  edit.add(new KeyValue(rowName,family,Bytes.toBytes("4"),ts1 + 2,value));
  log.append(info,getWalKeyImpl(ts1 + 2,scopes),edit,true);
  log.sync();
  log.shutdown();
  walfactory.shutdown();
  LOG.info("Closed WAL " + log.toString());
  WALInputFormat input=new WALInputFormat();
  Configuration jobConf=new Configuration(conf);
  jobConf.set("mapreduce.input.fileinputformat.inputdir",logDir.toString());
  jobConf.setLong(WALInputFormat.END_TIME_KEY,ts);
  List<InputSplit> splits=input.getSplits(MapreduceTestingShim.createJobContext(jobConf));
  assertEquals(1,splits.size());
  testSplit(splits.get(0),Bytes.toBytes("1"));
  jobConf.setLong(WALInputFormat.START_TIME_KEY,ts + 1);
  jobConf.setLong(WALInputFormat.END_TIME_KEY,ts1 + 1);
  splits=input.getSplits(MapreduceTestingShim.createJobContext(jobConf));
  assertEquals(2,splits.size());
  testSplit(splits.get(0),Bytes.toBytes("2"));
  testSplit(splits.get(1),Bytes.toBytes("3"));
}
