@Test public void testSpaceQuotaViolation() throws IOException, InterruptedException {
  region.getRegionServerServices().getRegionServerSpaceQuotaManager().enforceViolationPolicy(NAME,new SpaceQuotaSnapshot(new SpaceQuotaStatus(SpaceViolationPolicy.NO_WRITES_COMPACTIONS),10L,100L));
  Tracker tracker=new Tracker();
  TRACKER=tracker;
  region.requestCompaction("test",Store.PRIORITY_USER,false,tracker);
  tracker.await();
  assertEquals(2,tracker.notExecutedStores.size());
  tracker.notExecutedStores.sort((p1,p2) -> p1.getFirst().getColumnFamilyName().compareTo(p2.getFirst().getColumnFamilyName()));
  assertEquals(Bytes.toString(CF1),tracker.notExecutedStores.get(0).getFirst().getColumnFamilyName());
  assertThat(tracker.notExecutedStores.get(0).getSecond(),containsString("space quota violation"));
  assertEquals(Bytes.toString(CF2),tracker.notExecutedStores.get(1).getFirst().getColumnFamilyName());
  assertThat(tracker.notExecutedStores.get(1).getSecond(),containsString("space quota violation"));
  assertTrue(tracker.beforeExecuteStores.isEmpty());
  assertTrue(tracker.afterExecuteStores.isEmpty());
}
