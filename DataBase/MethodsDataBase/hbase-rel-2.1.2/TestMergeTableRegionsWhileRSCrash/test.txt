@Test public void test() throws Exception {
  for (int i=0; i < 10; i++) {
    byte[] row=Bytes.toBytes("row" + i);
    Put put=new Put(row);
    put.addColumn(CF,CF,CF);
    TABLE.put(put);
  }
  MasterProcedureEnv env=UTIL.getMiniHBaseCluster().getMaster().getMasterProcedureExecutor().getEnvironment();
  final ProcedureExecutor<MasterProcedureEnv> executor=UTIL.getMiniHBaseCluster().getMaster().getMasterProcedureExecutor();
  List<RegionInfo> regionInfos=admin.getRegions(TABLE_NAME);
  MergeTableRegionsProcedure mergeTableRegionsProcedure=new MergeTableRegionsProcedure(env,regionInfos.get(0),regionInfos.get(1));
  executor.submitProcedure(mergeTableRegionsProcedure);
  UTIL.waitFor(30000,() -> executor.getProcedures().stream().filter(p -> p instanceof UnassignProcedure).map(p -> (UnassignProcedure)p).anyMatch(p -> TABLE_NAME.equals(p.getTableName())));
  UTIL.getMiniHBaseCluster().killRegionServer(UTIL.getMiniHBaseCluster().getRegionServer(0).getServerName());
  UTIL.getMiniHBaseCluster().startRegionServer();
  UTIL.waitUntilNoRegionsInTransition();
  Scan scan=new Scan();
  ResultScanner results=TABLE.getScanner(scan);
  int count=0;
  Result result=null;
  while ((result=results.next()) != null) {
    count++;
  }
  Assert.assertEquals("There should be 10 rows!",10,count);
}
