@Test public void testIfWeHaveNewReferenceFilesButOldStoreFiles() throws Exception {
  TableName table=TableName.valueOf("TestMajorCompactor");
  TableDescriptor htd=UTILITY.createTableDescriptor(table,Bytes.toBytes(FAMILY));
  RegionInfo hri=RegionInfoBuilder.newBuilder(htd.getTableName()).build();
  HRegion region=HBaseTestingUtility.createRegionAndWAL(hri,rootRegionDir,UTILITY.getConfiguration(),htd);
  Configuration configuration=mock(Configuration.class);
  List<StoreFileInfo> storeFiles=mockStoreFiles(regionStoreDir,4,101);
  List<Path> paths=storeFiles.stream().map(StoreFileInfo::getPath).collect(Collectors.toList());
  HRegionFileSystem fileSystem=mockFileSystem(region.getRegionInfo(),true,storeFiles,50);
  MajorCompactionRequest majorCompactionRequest=spy(new MajorCompactionRequest(configuration,region.getRegionInfo(),Sets.newHashSet(FAMILY),100));
  doReturn(mock(Connection.class)).when(majorCompactionRequest).getConnection(eq(configuration));
  doReturn(paths).when(majorCompactionRequest).getReferenceFilePaths(any(FileSystem.class),any(Path.class));
  doReturn(fileSystem).when(majorCompactionRequest).getFileSystem(any(Connection.class));
  Set<String> result=majorCompactionRequest.getStoresRequiringCompaction(Sets.newHashSet("a"));
  assertEquals(FAMILY,Iterables.getOnlyElement(result));
}
