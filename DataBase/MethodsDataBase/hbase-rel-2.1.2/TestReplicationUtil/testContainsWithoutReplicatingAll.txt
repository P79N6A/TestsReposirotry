@Test public void testContainsWithoutReplicatingAll(){
  ReplicationPeerConfig peerConfig;
  ReplicationPeerConfig.ReplicationPeerConfigBuilderImpl builder=new ReplicationPeerConfig.ReplicationPeerConfigBuilderImpl();
  Map<TableName,List<String>> tableCfs=new HashMap<>();
  Set<String> namespaces=new HashSet<>();
  builder.setReplicateAllUserTables(false);
  peerConfig=builder.build();
  Assert.assertFalse(ReplicationUtils.contains(peerConfig,TABLE_A));
  builder.setReplicateAllUserTables(false);
  builder.setTableCFsMap(tableCfs);
  peerConfig=builder.build();
  Assert.assertFalse(ReplicationUtils.contains(peerConfig,TABLE_A));
  tableCfs=new HashMap<>();
  tableCfs.put(TABLE_B,null);
  builder.setReplicateAllUserTables(false);
  builder.setTableCFsMap(tableCfs);
  peerConfig=builder.build();
  Assert.assertFalse(ReplicationUtils.contains(peerConfig,TABLE_A));
  tableCfs=new HashMap<>();
  tableCfs.put(TABLE_A,null);
  builder.setReplicateAllUserTables(false);
  builder.setTableCFsMap(tableCfs);
  peerConfig=builder.build();
  Assert.assertTrue(ReplicationUtils.contains(peerConfig,TABLE_A));
  builder.setTableCFsMap(null);
  builder.setReplicateAllUserTables(false);
  builder.setNamespaces(namespaces);
  peerConfig=builder.build();
  Assert.assertFalse(ReplicationUtils.contains(peerConfig,TABLE_A));
  namespaces=new HashSet<>();
  namespaces.add("default");
  builder.setReplicateAllUserTables(false);
  builder.setNamespaces(namespaces);
  peerConfig=builder.build();
  Assert.assertFalse(ReplicationUtils.contains(peerConfig,TABLE_A));
  namespaces=new HashSet<>();
  namespaces.add("replication");
  builder.setReplicateAllUserTables(false);
  builder.setNamespaces(namespaces);
  peerConfig=builder.build();
  Assert.assertTrue(ReplicationUtils.contains(peerConfig,TABLE_A));
  namespaces=new HashSet<>();
  tableCfs=new HashMap<>();
  namespaces.add("replication");
  tableCfs.put(TABLE_A,null);
  builder.setReplicateAllUserTables(false);
  builder.setTableCFsMap(tableCfs);
  builder.setNamespaces(namespaces);
  peerConfig=builder.build();
  Assert.assertTrue(ReplicationUtils.contains(peerConfig,TABLE_A));
  namespaces=new HashSet<>();
  tableCfs=new HashMap<>();
  namespaces.add("default");
  tableCfs.put(TABLE_A,null);
  builder.setReplicateAllUserTables(false);
  builder.setTableCFsMap(tableCfs);
  builder.setNamespaces(namespaces);
  peerConfig=builder.build();
  Assert.assertTrue(ReplicationUtils.contains(peerConfig,TABLE_A));
  namespaces=new HashSet<>();
  tableCfs=new HashMap<>();
  namespaces.add("replication");
  tableCfs.put(TABLE_B,null);
  builder.setReplicateAllUserTables(false);
  builder.setTableCFsMap(tableCfs);
  builder.setNamespaces(namespaces);
  peerConfig=builder.build();
  Assert.assertTrue(ReplicationUtils.contains(peerConfig,TABLE_A));
}
