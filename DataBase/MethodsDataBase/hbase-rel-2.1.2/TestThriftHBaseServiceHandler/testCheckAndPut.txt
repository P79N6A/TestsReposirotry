/** 
 * check that checkAndPut fails if the cell does not exist, then put in the cell, then check that the checkAndPut succeeds.
 */
@Test public void testCheckAndPut() throws Exception {
  ThriftHBaseServiceHandler handler=createHandler();
  byte[] rowName=Bytes.toBytes("testCheckAndPut");
  ByteBuffer table=wrap(tableAname);
  List<TColumnValue> columnValuesA=new ArrayList<>(1);
  TColumnValue columnValueA=new TColumnValue(wrap(familyAname),wrap(qualifierAname),wrap(valueAname));
  columnValuesA.add(columnValueA);
  TPut putA=new TPut(wrap(rowName),columnValuesA);
  putA.setColumnValues(columnValuesA);
  List<TColumnValue> columnValuesB=new ArrayList<>(1);
  TColumnValue columnValueB=new TColumnValue(wrap(familyBname),wrap(qualifierBname),wrap(valueBname));
  columnValuesB.add(columnValueB);
  TPut putB=new TPut(wrap(rowName),columnValuesB);
  putB.setColumnValues(columnValuesB);
  assertFalse(handler.checkAndPut(table,wrap(rowName),wrap(familyAname),wrap(qualifierAname),wrap(valueAname),putB));
  TGet get=new TGet(wrap(rowName));
  TResult result=handler.get(table,get);
  assertEquals(0,result.getColumnValuesSize());
  handler.put(table,putA);
  assertTrue(handler.checkAndPut(table,wrap(rowName),wrap(familyAname),wrap(qualifierAname),wrap(valueAname),putB));
  result=handler.get(table,get);
  assertArrayEquals(rowName,result.getRow());
  List<TColumnValue> returnedColumnValues=result.getColumnValues();
  List<TColumnValue> expectedColumnValues=new ArrayList<>(2);
  expectedColumnValues.add(columnValueA);
  expectedColumnValues.add(columnValueB);
  assertTColumnValuesEqual(expectedColumnValues,returnedColumnValues);
}
