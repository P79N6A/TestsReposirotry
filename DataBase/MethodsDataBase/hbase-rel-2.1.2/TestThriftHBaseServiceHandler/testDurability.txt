/** 
 * Create TPut, TDelete , TIncrement objects, set durability then call ThriftUtility functions to get Put , Delete and Increment respectively. Use getDurability to make sure the returned objects have the appropriate durability setting.
 */
@Test public void testDurability() throws Exception {
  byte[] rowName=Bytes.toBytes("testDurability");
  List<TColumnValue> columnValues=new ArrayList<>(1);
  columnValues.add(new TColumnValue(wrap(familyAname),wrap(qualifierAname),wrap(valueAname)));
  List<TColumnIncrement> incrementColumns=new ArrayList<>(1);
  incrementColumns.add(new TColumnIncrement(wrap(familyAname),wrap(qualifierAname)));
  TDelete tDelete=new TDelete(wrap(rowName));
  tDelete.setDurability(TDurability.SKIP_WAL);
  Delete delete=deleteFromThrift(tDelete);
  assertEquals(Durability.SKIP_WAL,delete.getDurability());
  tDelete.setDurability(TDurability.ASYNC_WAL);
  delete=deleteFromThrift(tDelete);
  assertEquals(Durability.ASYNC_WAL,delete.getDurability());
  tDelete.setDurability(TDurability.SYNC_WAL);
  delete=deleteFromThrift(tDelete);
  assertEquals(Durability.SYNC_WAL,delete.getDurability());
  tDelete.setDurability(TDurability.FSYNC_WAL);
  delete=deleteFromThrift(tDelete);
  assertEquals(Durability.FSYNC_WAL,delete.getDurability());
  TPut tPut=new TPut(wrap(rowName),columnValues);
  tPut.setDurability(TDurability.SKIP_WAL);
  Put put=putFromThrift(tPut);
  assertEquals(Durability.SKIP_WAL,put.getDurability());
  tPut.setDurability(TDurability.ASYNC_WAL);
  put=putFromThrift(tPut);
  assertEquals(Durability.ASYNC_WAL,put.getDurability());
  tPut.setDurability(TDurability.SYNC_WAL);
  put=putFromThrift(tPut);
  assertEquals(Durability.SYNC_WAL,put.getDurability());
  tPut.setDurability(TDurability.FSYNC_WAL);
  put=putFromThrift(tPut);
  assertEquals(Durability.FSYNC_WAL,put.getDurability());
  TIncrement tIncrement=new TIncrement(wrap(rowName),incrementColumns);
  tIncrement.setDurability(TDurability.SKIP_WAL);
  Increment increment=incrementFromThrift(tIncrement);
  assertEquals(Durability.SKIP_WAL,increment.getDurability());
  tIncrement.setDurability(TDurability.ASYNC_WAL);
  increment=incrementFromThrift(tIncrement);
  assertEquals(Durability.ASYNC_WAL,increment.getDurability());
  tIncrement.setDurability(TDurability.SYNC_WAL);
  increment=incrementFromThrift(tIncrement);
  assertEquals(Durability.SYNC_WAL,increment.getDurability());
  tIncrement.setDurability(TDurability.FSYNC_WAL);
  increment=incrementFromThrift(tIncrement);
  assertEquals(Durability.FSYNC_WAL,increment.getDurability());
}
