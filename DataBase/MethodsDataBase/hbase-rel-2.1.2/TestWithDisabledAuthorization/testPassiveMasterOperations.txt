/** 
 * Test master observer 
 */
@Test public void testPassiveMasterOperations() throws Exception {
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
      htd.addFamily(new HColumnDescriptor(TEST_FAMILY));
      ACCESS_CONTROLLER.preCreateTable(ObserverContextImpl.createAndPrepare(CP_ENV),htd,null);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
      htd.addFamily(new HColumnDescriptor(TEST_FAMILY));
      htd.addFamily(new HColumnDescriptor(TEST_FAMILY2));
      ACCESS_CONTROLLER.preModifyTable(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName(),htd);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preDeleteTable(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName());
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preTruncateTable(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName());
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preEnableTable(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName());
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preDisableTable(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName());
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HRegionInfo region=new HRegionInfo(TEST_TABLE.getTableName());
      ServerName srcServer=ServerName.valueOf("1.1.1.1",1,0);
      ServerName destServer=ServerName.valueOf("2.2.2.2",2,0);
      ACCESS_CONTROLLER.preMove(ObserverContextImpl.createAndPrepare(CP_ENV),region,srcServer,destServer);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HRegionInfo region=new HRegionInfo(TEST_TABLE.getTableName());
      ACCESS_CONTROLLER.preAssign(ObserverContextImpl.createAndPrepare(CP_ENV),region);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HRegionInfo region=new HRegionInfo(TEST_TABLE.getTableName());
      ACCESS_CONTROLLER.preUnassign(ObserverContextImpl.createAndPrepare(CP_ENV),region,true);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preBalance(ObserverContextImpl.createAndPrepare(CP_ENV));
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preBalanceSwitch(ObserverContextImpl.createAndPrepare(CP_ENV),true);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      SnapshotDescription snapshot=new SnapshotDescription("foo");
      HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
      ACCESS_CONTROLLER.preSnapshot(ObserverContextImpl.createAndPrepare(CP_ENV),snapshot,htd);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      SnapshotDescription snapshot=new SnapshotDescription("foo");
      ACCESS_CONTROLLER.preListSnapshot(ObserverContextImpl.createAndPrepare(CP_ENV),snapshot);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      SnapshotDescription snapshot=new SnapshotDescription("foo");
      HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
      ACCESS_CONTROLLER.preCloneSnapshot(ObserverContextImpl.createAndPrepare(CP_ENV),snapshot,htd);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      SnapshotDescription snapshot=new SnapshotDescription("foo");
      HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
      ACCESS_CONTROLLER.preRestoreSnapshot(ObserverContextImpl.createAndPrepare(CP_ENV),snapshot,htd);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      SnapshotDescription snapshot=new SnapshotDescription("foo");
      ACCESS_CONTROLLER.preDeleteSnapshot(ObserverContextImpl.createAndPrepare(CP_ENV),snapshot);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      List<TableName> tableNamesList=Lists.newArrayList();
      tableNamesList.add(TEST_TABLE.getTableName());
      List<TableDescriptor> descriptors=Lists.newArrayList();
      ACCESS_CONTROLLER.preGetTableDescriptors(ObserverContextImpl.createAndPrepare(CP_ENV),tableNamesList,descriptors,".+");
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      List<TableDescriptor> descriptors=Lists.newArrayList();
      ACCESS_CONTROLLER.preGetTableNames(ObserverContextImpl.createAndPrepare(CP_ENV),descriptors,".+");
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      NamespaceDescriptor ns=NamespaceDescriptor.create("test").build();
      ACCESS_CONTROLLER.preCreateNamespace(ObserverContextImpl.createAndPrepare(CP_ENV),ns);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preDeleteNamespace(ObserverContextImpl.createAndPrepare(CP_ENV),"test");
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      NamespaceDescriptor ns=NamespaceDescriptor.create("test").build();
      ACCESS_CONTROLLER.preModifyNamespace(ObserverContextImpl.createAndPrepare(CP_ENV),ns);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preGetNamespaceDescriptor(ObserverContextImpl.createAndPrepare(CP_ENV),"test");
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      List<NamespaceDescriptor> descriptors=Lists.newArrayList();
      ACCESS_CONTROLLER.preListNamespaceDescriptors(ObserverContextImpl.createAndPrepare(CP_ENV),descriptors);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preSplitRegion(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName(),Bytes.toBytes("ss"));
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preSetUserQuota(ObserverContextImpl.createAndPrepare(CP_ENV),"testuser",null);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preSetTableQuota(ObserverContextImpl.createAndPrepare(CP_ENV),TEST_TABLE.getTableName(),null);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preSetNamespaceQuota(ObserverContextImpl.createAndPrepare(CP_ENV),"test",null);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
}
