@Test public void testSafemodeBringsDownMaster() throws Exception {
  final TableName tableName=TableName.valueOf("testSafemodeBringsDownMaster");
  final byte[][] splitKeys=new byte[][]{Bytes.toBytes("a"),Bytes.toBytes("b"),Bytes.toBytes("c")};
  RegionInfo[] regions=MasterProcedureTestingUtility.createTable(getMasterProcedureExecutor(),tableName,splitKeys,"f1","f2");
  MiniDFSCluster dfsCluster=UTIL.getDFSCluster();
  DistributedFileSystem dfs=(DistributedFileSystem)dfsCluster.getFileSystem();
  dfs.setSafeMode(HdfsConstants.SafeModeAction.SAFEMODE_ENTER);
  final long timeOut=180000;
  long startTime=System.currentTimeMillis();
  int index=-1;
  do {
    index=UTIL.getMiniHBaseCluster().getServerWithMeta();
  }
 while (index == -1 && startTime + timeOut < System.currentTimeMillis());
  if (index != -1) {
    UTIL.getMiniHBaseCluster().abortRegionServer(index);
    UTIL.getMiniHBaseCluster().waitOnRegionServer(index);
  }
  UTIL.waitFor(timeOut,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      List<JVMClusterUtil.MasterThread> threads=UTIL.getMiniHBaseCluster().getLiveMasterThreads();
      return threads == null || threads.isEmpty();
    }
  }
);
  dfs.setSafeMode(HdfsConstants.SafeModeAction.SAFEMODE_LEAVE);
}
