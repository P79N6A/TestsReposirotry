@Test public void testXLockWaitingForExecutingSharedLockToRelease(){
  final TableName tableName=TableName.valueOf(name.getMethodName());
  final RegionInfo regionA=RegionInfoBuilder.newBuilder(tableName).setStartKey(Bytes.toBytes("a")).setEndKey(Bytes.toBytes("b")).build();
  queue.addBack(new TestRegionProcedure(1,tableName,TableProcedureInterface.TableOperationType.REGION_ASSIGN,regionA));
  queue.addBack(new TestTableProcedure(2,tableName,TableProcedureInterface.TableOperationType.EDIT));
  Procedure<?> proc=queue.poll();
  assertEquals(1,proc.getProcId());
  assertEquals(false,queue.waitRegion(proc,regionA));
  assertEquals(null,queue.poll(0));
  queue.wakeRegion(proc,regionA);
  proc=queue.poll();
  assertEquals(2,proc.getProcId());
  assertEquals(false,queue.waitTableExclusiveLock(proc,tableName));
  queue.addBack(new TestRegionProcedure(3,tableName,TableProcedureInterface.TableOperationType.REGION_UNASSIGN,regionA));
  assertEquals(null,queue.poll(0));
  queue.wakeTableExclusiveLock(proc,tableName);
  proc=queue.poll();
  assertEquals(3,proc.getProcId());
  assertEquals(false,queue.waitRegion(proc,regionA));
  assertEquals(null,queue.poll(0));
  queue.wakeRegion(proc,regionA);
}
