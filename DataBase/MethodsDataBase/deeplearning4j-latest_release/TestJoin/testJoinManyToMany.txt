@Test public void testJoinManyToMany(){
  Schema schema1=new Schema.Builder().addColumnLong("id").addColumnCategorical("category",Arrays.asList("cat0","cat1","cat2")).build();
  Schema schema2=new Schema.Builder().addColumnLong("otherId").addColumnCategorical("otherCategory",Arrays.asList("cat0","cat1","cat2")).build();
  List<List<Writable>> first=new ArrayList<>();
  first.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0")));
  first.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0")));
  first.add(Arrays.<Writable>asList(new LongWritable(2),new Text("cat1")));
  List<List<Writable>> second=new ArrayList<>();
  second.add(Arrays.<Writable>asList(new LongWritable(100),new Text("cat0")));
  second.add(Arrays.<Writable>asList(new LongWritable(101),new Text("cat0")));
  second.add(Arrays.<Writable>asList(new LongWritable(102),new Text("cat2")));
  List<List<Writable>> expOuterJoin=new ArrayList<>();
  expOuterJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(100)));
  expOuterJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(101)));
  expOuterJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(100)));
  expOuterJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(101)));
  expOuterJoin.add(Arrays.<Writable>asList(new LongWritable(2),new Text("cat1"),new NullWritable()));
  expOuterJoin.add(Arrays.<Writable>asList(new NullWritable(),new Text("cat2"),new LongWritable(102)));
  List<List<Writable>> expLeftJoin=new ArrayList<>();
  expLeftJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(100)));
  expLeftJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(101)));
  expLeftJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(100)));
  expLeftJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(101)));
  expLeftJoin.add(Arrays.<Writable>asList(new LongWritable(2),new Text("cat1"),new NullWritable()));
  List<List<Writable>> expRightJoin=new ArrayList<>();
  expRightJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(100)));
  expRightJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(101)));
  expRightJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(100)));
  expRightJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(101)));
  expRightJoin.add(Arrays.<Writable>asList(new NullWritable(),new Text("cat2"),new LongWritable(102)));
  List<List<Writable>> expInnerJoin=new ArrayList<>();
  expInnerJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(100)));
  expInnerJoin.add(Arrays.<Writable>asList(new LongWritable(0),new Text("cat0"),new LongWritable(101)));
  expInnerJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(100)));
  expInnerJoin.add(Arrays.<Writable>asList(new LongWritable(1),new Text("cat0"),new LongWritable(101)));
  List<List<Writable>> firstRDD=(first);
  List<List<Writable>> secondRDD=(second);
  int count=0;
  for (  Join.JoinType jt : Join.JoinType.values()) {
    Join join=new Join.Builder(jt).setJoinColumnsLeft("category").setJoinColumnsRight("otherCategory").setSchemas(schema1,schema2).build();
    List<List<Writable>> out=new ArrayList<>(LocalTransformExecutor.executeJoin(join,firstRDD,secondRDD));
    Collections.sort(out,new Comparator<List<Writable>>(){
      @Override public int compare(      List<Writable> o1,      List<Writable> o2){
        Writable w1=o1.get(0);
        Writable w2=o2.get(0);
        if (w1 instanceof NullWritable)         return 1;
 else         if (w2 instanceof NullWritable)         return -1;
        int c=Long.compare(w1.toLong(),w2.toLong());
        if (c != 0)         return c;
        c=o1.get(1).toString().compareTo(o2.get(1).toString());
        if (c != 0)         return c;
        w1=o1.get(2);
        w2=o2.get(2);
        if (w1 instanceof NullWritable)         return 1;
 else         if (w2 instanceof NullWritable)         return -1;
        return Long.compare(w1.toLong(),w2.toLong());
      }
    }
);
switch (jt) {
case Inner:
      assertEquals(expInnerJoin,out);
    break;
case LeftOuter:
  assertEquals(expLeftJoin,out);
break;
case RightOuter:
assertEquals(expRightJoin,out);
break;
case FullOuter:
assertEquals(expOuterJoin,out);
break;
}
count++;
}
assertEquals(4,count);
}
