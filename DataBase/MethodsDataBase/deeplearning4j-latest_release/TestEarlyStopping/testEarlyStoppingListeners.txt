@Test public void testEarlyStoppingListeners(){
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Sgd(0.001)).weightInit(WeightInit.XAVIER).list().layer(0,new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  TestListener tl=new TestListener();
  net.setListeners(tl);
  DataSetIterator irisIter=new IrisDataSetIterator(50,150);
  EarlyStoppingModelSaver<MultiLayerNetwork> saver=new InMemoryModelSaver<>();
  EarlyStoppingConfiguration<MultiLayerNetwork> esConf=new EarlyStoppingConfiguration.Builder<MultiLayerNetwork>().epochTerminationConditions(new MaxEpochsTerminationCondition(5)).iterationTerminationConditions(new MaxTimeIterationTerminationCondition(1,TimeUnit.MINUTES)).scoreCalculator(new DataSetLossCalculator(irisIter,true)).modelSaver(saver).build();
  IEarlyStoppingTrainer<MultiLayerNetwork> trainer=new EarlyStoppingTrainer(esConf,net,irisIter);
  EarlyStoppingResult<MultiLayerNetwork> result=trainer.fit();
  assertEquals(5,tl.countEpochStart);
  assertEquals(5,tl.countEpochEnd);
  assertEquals(5 * 150 / 50,tl.iterCount);
  assertEquals(4,tl.maxEpochStart);
  assertEquals(4,tl.maxEpochEnd);
}
