@Test public void testFancyQueue1() throws Exception {
  final FancyBlockingQueue<Integer> queue=new FancyBlockingQueue<>(new LinkedBlockingQueue<Integer>(512),4);
  long f=0;
  for (int x=0; x < 512; x++) {
    queue.add(x);
    f+=x;
  }
  assertEquals(512,queue.size());
  final AtomicLong e=new AtomicLong(0);
  queue.registerConsumers(4);
  Thread[] threads=new Thread[4];
  for (int x=0; x < 4; x++) {
    final int t=x;
    threads[x]=new Thread(new Runnable(){
      @Override public void run(){
        while (!queue.isEmpty()) {
          Integer i=queue.poll();
          e.addAndGet(i);
        }
      }
    }
);
    threads[x].start();
  }
  for (int x=0; x < 4; x++) {
    threads[x].join();
  }
  assertEquals(f * 4,e.get());
}
