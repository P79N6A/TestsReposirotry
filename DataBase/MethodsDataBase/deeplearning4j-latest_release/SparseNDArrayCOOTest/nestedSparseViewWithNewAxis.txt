@Test public void nestedSparseViewWithNewAxis(){
  long[] shape=new long[]{4,2,3};
  double[] values=new double[]{1,2,3,4,5,6,7,8,9};
  int[][] indices=new int[][]{{0,0,2},{0,1,1},{1,0,0},{1,0,1},{1,1,2},{2,0,1},{2,1,2},{3,0,2},{3,1,0}};
  INDArray array=Nd4j.createSparseCOO(values,indices,shape);
  System.out.println("\nTaking view (all, point(1), all");
  INDArray v=array.get(NDArrayIndex.all(),NDArrayIndex.point(1));
  System.out.println(v.toString());
  System.out.println(v.shapeInfoDataBuffer());
  System.out.println("Fixed dimension " + v.flags());
  System.out.println("sparse offsets " + v.sparseOffsets());
  System.out.println("hidden dimensions " + v.hiddenDimensions());
  System.out.println("number of hidden dimensions " + ((BaseSparseNDArrayCOO)v).getNumHiddenDimension());
  System.out.println("\nTaking view (all new axis");
  INDArray v1=v.get(NDArrayIndex.all(),NDArrayIndex.newAxis());
  System.out.println(v1.toString());
  System.out.println(v1.shapeInfoDataBuffer());
  System.out.println("Fixed dimension " + v1.flags());
  System.out.println("sparse offsets " + v1.sparseOffsets());
  System.out.println("hidden dimensions " + v1.hiddenDimensions());
  System.out.println("number of hidden dimensions " + ((BaseSparseNDArrayCOO)v1).getNumHiddenDimension());
  System.out.println("\nTaking view (all new axis");
  v1=v.get(NDArrayIndex.newAxis(),NDArrayIndex.all(),NDArrayIndex.newAxis());
  System.out.println(v1.toString());
  System.out.println(v1.shapeInfoDataBuffer());
  System.out.println("Fixed dimension " + v1.flags());
  System.out.println("sparse offsets " + v1.sparseOffsets());
  System.out.println("hidden dimensions " + v1.hiddenDimensions());
  System.out.println("number of hidden dimensions " + ((BaseSparseNDArrayCOO)v1).getNumHiddenDimension());
}
