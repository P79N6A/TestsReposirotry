@Test public void testEvaluativeListenerSimple(){
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.LINE_GRADIENT_DESCENT).seed(42).updater(new Sgd(1e-6)).list().layer(0,new DenseLayer.Builder().nIn(4).nOut(2).activation(Activation.TANH).weightInit(WeightInit.XAVIER).build()).layer(1,new org.deeplearning4j.nn.conf.layers.OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).nIn(2).nOut(3).weightInit(WeightInit.XAVIER).activation(Activation.SOFTMAX).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  DataSetIterator iter=new IrisDataSetIterator(30,150);
  DataSetIterator iterTest=new IrisDataSetIterator(30,150);
  net.setListeners(new EvaluativeListener(iterTest,3));
  for (int i=0; i < 10; i++) {
    net.fit(iter);
  }
}
