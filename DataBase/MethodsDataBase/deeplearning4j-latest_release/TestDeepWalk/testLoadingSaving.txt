@Test(timeout=10000L) public void testLoadingSaving() throws IOException {
  String out="dl4jdwtestout.txt";
  int nVertices=20;
  Graph<String,String> graph=generateRandomGraph(nVertices,8);
  int vectorSize=5;
  int windowSize=2;
  DeepWalk<String,String> deepWalk=new DeepWalk.Builder<String,String>().learningRate(0.01).vectorSize(vectorSize).windowSize(windowSize).learningRate(0.01).build();
  deepWalk.initialize(graph);
  deepWalk.fit(graph,10);
  File f=testDir.newFile(out);
  GraphVectorSerializer.writeGraphVectors(deepWalk,f.getAbsolutePath());
  GraphVectors<String,String> vectors=(GraphVectors<String,String>)GraphVectorSerializer.loadTxtVectors(f);
  assertEquals(deepWalk.numVertices(),vectors.numVertices());
  assertEquals(deepWalk.getVectorSize(),vectors.getVectorSize());
  for (int i=0; i < nVertices; i++) {
    INDArray vecDW=deepWalk.getVertexVector(i);
    INDArray vecLoaded=vectors.getVertexVector(i);
    for (int j=0; j < vectorSize; j++) {
      double d1=vecDW.getDouble(j);
      double d2=vecLoaded.getDouble(j);
      double relError=Math.abs(d1 - d2) / (Math.abs(d1) + Math.abs(d2));
      assertTrue(relError < 1e-6);
    }
  }
}
