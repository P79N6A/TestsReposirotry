@Test public void sortSparseCooIndicesSort3() throws Exception {
  if (Nd4j.getExecutioner().getClass().getCanonicalName().toLowerCase().contains("cuda"))   return;
  Random rng=Nd4j.getRandom();
  rng.setSeed(12040483421383L);
  long shape[]={50,50,50};
  int nnz=100;
  val indices=Nd4j.rand(new int[]{nnz,shape.length},rng).muli(50).ravel().toLongVector();
  val values=Nd4j.rand(new long[]{nnz}).ravel().toDoubleVector();
  DataBuffer indiceBuffer=Nd4j.getDataBufferFactory().createLong(indices);
  DataBuffer valueBuffer=Nd4j.createBuffer(values);
  INDArray indMatrix=Nd4j.create(indiceBuffer).reshape(new long[]{nnz,shape.length});
  NativeOpsHolder.getInstance().getDeviceNativeOps().sortCooIndicesFloat(null,(LongPointer)indiceBuffer.addressPointer(),(FloatPointer)valueBuffer.addressPointer(),nnz,3);
  for (long i=1; i < nnz; ++i) {
    for (long j=0; j < shape.length; ++j) {
      long prev=indiceBuffer.getLong(((i - 1) * shape.length + j));
      long current=indiceBuffer.getLong((i * shape.length + j));
      if (prev < current) {
        break;
      }
 else       if (prev > current) {
        long[] prevRow=getLongsAt(indiceBuffer,(i - 1) * shape.length,shape.length);
        long[] currentRow=getLongsAt(indiceBuffer,i * shape.length,shape.length);
        throw new AssertionError(String.format("indices are not correctly sorted between element %d and %d. %s > %s",i - 1,i,Arrays.toString(prevRow),Arrays.toString(currentRow)));
      }
    }
  }
}
