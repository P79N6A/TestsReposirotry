@Test public void testSplitter_1() throws Exception {
  val back=new MultiDataSetGenerator(1000,new int[]{32,100},new int[]{32,5});
  val splitter=new MultiDataSetIteratorSplitter(back,1000,0.7);
  val train=splitter.getTrainIterator();
  val test=splitter.getTestIterator();
  val numEpochs=10;
  int gcntTrain=0;
  int gcntTest=0;
  int global=0;
  for (int e=0; e < numEpochs; e++) {
    int cnt=0;
    while (train.hasNext()) {
      val data=train.next().getFeatures(0);
      assertEquals("Train failed on iteration " + cnt + "; epoch: "+ e,(float)cnt++,data.getFloat(0),1e-5);
      gcntTrain++;
      global++;
    }
    train.reset();
    while (test.hasNext()) {
      val data=test.next().getFeatures(0);
      assertEquals("Train failed on iteration " + cnt + "; epoch: "+ e,(float)cnt++,data.getFloat(0),1e-5);
      gcntTest++;
      global++;
    }
    test.reset();
  }
  assertEquals(1000 * numEpochs,global);
}
