@Test public void testDeleteExisting() throws Exception {
  File f=tempDir.newFolder();
  Pair<MultiLayerNetwork,DataSetIterator> p=getNetAndData();
  MultiLayerNetwork net=p.getFirst();
  DataSetIterator iter=p.getSecond();
  CheckpointListener l=new CheckpointListener.Builder(f).keepAll().saveEveryNEpochs(1).build();
  net.setListeners(l);
  for (int i=0; i < 3; i++) {
    net.fit(iter);
  }
  try {
    l=new CheckpointListener.Builder(f).keepAll().saveEveryNEpochs(1).build();
    fail("Expected exception");
  }
 catch (  IllegalStateException e) {
    assertTrue(e.getMessage().contains("Use deleteExisting(true)"));
  }
  l=new CheckpointListener.Builder(f).keepAll().saveEveryNEpochs(1).deleteExisting(true).build();
  net.setListeners(l);
  net.fit(iter);
  File[] fList=f.listFiles();
  assertNotNull(fList);
  assertEquals(2,fList.length);
}
