@Test public void testMaxAlongDimensionBP(){
  for (  boolean keepDims : new boolean[]{false,true}) {
    long[] reducedShape_0=(keepDims ? new long[]{1,4} : new long[]{4});
    INDArray preReduceInput=Nd4j.linspace(1,16,16).reshape(4,4);
    preReduceInput.putScalar(0,0,20);
    preReduceInput.putScalar(1,1,21);
    preReduceInput.putScalar(2,2,22);
    preReduceInput.putScalar(2,2,23);
    INDArray dLdOut_0=Nd4j.create(new double[]{1,2,3,4},reducedShape_0);
    INDArray dLdInExpected_0=Nd4j.create(preReduceInput.shape());
    dLdInExpected_0.putScalar(0,0,1);
    dLdInExpected_0.putScalar(1,1,2);
    dLdInExpected_0.putScalar(2,2,3);
    dLdInExpected_0.putScalar(3,3,4);
    INDArray dLdIn=Nd4j.createUninitialized(4,4);
    String err=OpValidation.validate(new OpTestCase(new MaxBp(preReduceInput,dLdOut_0,dLdIn,keepDims,0)).expectedOutput(0,dLdInExpected_0));
    assertNull(err,err);
    long[] reducedShape_1=(keepDims ? new long[]{4,1} : new long[]{4});
    INDArray dLdInExpected_1=dLdInExpected_0;
    INDArray dLdOut_1=Nd4j.create(new double[]{1,2,3,4},reducedShape_1);
    dLdIn=Nd4j.createUninitialized(4,4);
    err=OpValidation.validate(new OpTestCase(new MaxBp(preReduceInput,dLdOut_1,dLdIn,keepDims,1)).expectedOutput(0,dLdInExpected_1));
    assertNull(err,err);
  }
}
