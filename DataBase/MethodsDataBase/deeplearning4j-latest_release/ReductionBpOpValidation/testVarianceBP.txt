@Test public void testVarianceBP(){
  for (  boolean biasCorrected : new boolean[]{true,false}) {
    for (    boolean keepDims : new boolean[]{false,true}) {
      INDArray preReduceInput=Nd4j.linspace(1,12,12).reshape(3,4);
      INDArray dLdOut;
      if (keepDims) {
        dLdOut=Nd4j.valueArrayOf(new long[]{1,1},0.5);
      }
 else {
        dLdOut=Nd4j.trueScalar(0.5);
      }
      double var=preReduceInput.var(biasCorrected).getDouble(0);
      double mean=preReduceInput.meanNumber().doubleValue();
      long divisor=biasCorrected ? (preReduceInput.length() - 1) : preReduceInput.length();
      INDArray dLdInExp=preReduceInput.dup().subi(mean).muli(2.0 / divisor).muli(0.5);
      INDArray dLdIn=Nd4j.createUninitialized(3,4);
      String err=OpValidation.validate(new OpTestCase(new VarianceBp(preReduceInput,dLdOut,dLdIn,biasCorrected,keepDims)).expectedOutput(0,dLdInExp));
      assertNull(err);
    }
  }
}
