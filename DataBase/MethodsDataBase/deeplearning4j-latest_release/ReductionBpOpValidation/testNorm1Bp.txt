@Test public void testNorm1Bp(){
  for (  boolean keepDims : new boolean[]{false,true}) {
    INDArray preReduceInput=Nd4j.linspace(-5,6,12).addi(0.1).reshape(3,4);
    INDArray sgn=Transforms.sign(preReduceInput,true);
    INDArray dLdOut;
    if (keepDims) {
      dLdOut=Nd4j.valueArrayOf(new long[]{1,1},0.5);
    }
 else {
      dLdOut=Nd4j.trueScalar(0.5);
    }
    INDArray dLdInExpected=sgn.muli(0.5);
    INDArray dLdIn=Nd4j.createUninitialized(3,4);
    String err=OpValidation.validate(new OpTestCase(new Norm1Bp(preReduceInput,dLdOut,dLdIn,keepDims)).expectedOutput(0,dLdInExpected));
    assertNull(err);
  }
}
