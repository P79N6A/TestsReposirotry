@Test public void testTruncatedNormal1() throws Exception {
  Random random1=Nd4j.getRandomFactory().getNewRandomInstance(119);
  INDArray z01=Nd4j.create(10000000).assign(-119119d);
  INDArray z02=Nd4j.createUninitialized(z01.length());
  TruncatedNormalDistribution distribution01=new TruncatedNormalDistribution(z01,0.0,1.0);
  long time1=System.currentTimeMillis();
  Nd4j.getExecutioner().exec(distribution01,random1);
  long time2=System.currentTimeMillis();
  Nd4j.getExecutioner().exec(new GaussianDistribution(z02,0.0,1.0));
  long time3=System.currentTimeMillis();
  log.info("Truncated: {} ms; Gaussian: {} ms",time2 - time1,time3 - time2);
  for (int e=0; e < z01.length(); e++) {
    assertTrue("Value: " + z01.getDouble(e) + " at "+ e,FastMath.abs(z01.getDouble(e)) <= 2.0);
    assertNotEquals(-119119d,z01.getDouble(e),1e-3);
  }
  assertEquals(0.0,z01.meanNumber().doubleValue(),1e-3);
}
