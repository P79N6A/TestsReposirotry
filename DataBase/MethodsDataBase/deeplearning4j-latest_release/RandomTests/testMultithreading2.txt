@Test public void testMultithreading2() throws Exception {
  final AtomicInteger cnt=new AtomicInteger(0);
  final CopyOnWriteArrayList<INDArray> list=new CopyOnWriteArrayList<>();
  Thread[] threads=new Thread[10];
  for (int x=0; x < threads.length; x++) {
    list.add(null);
  }
  for (int x=0; x < threads.length; x++) {
    threads[x]=new Thread(new Runnable(){
      @Override public void run(){
        Random rnd=Nd4j.getRandom();
        rnd.setSeed(119);
        INDArray array=Nd4j.getExecutioner().exec(new UniformDistribution(Nd4j.createUninitialized(25)));
        Nd4j.getExecutioner().commit();
        list.set(cnt.getAndIncrement(),array);
      }
    }
);
    threads[x].start();
  }
  for (int x=0; x < threads.length; x++) {
    threads[x].join();
    assertNotEquals(null,list.get(x));
    if (x > 0) {
      assertEquals(list.get(0),list.get(x));
    }
  }
}
