/** 
 * This test
 * @throws Exception
 */
@Test(timeout=30000) public void testMessaging1() throws Exception {
  List<String> list=new ArrayList<>();
  for (int t=0; t < 5; t++) {
    list.add("127.0.0.1:3838" + t);
  }
  VoidConfiguration voidConfiguration=VoidConfiguration.builder().shardAddresses(list).build();
  voidConfiguration.setUnicastControllerPort(43120);
  RoutedTransport[] transports=new RoutedTransport[list.size()];
  for (int t=0; t < transports.length; t++) {
    Clipboard clipboard=new Clipboard();
    transports[t]=new RoutedTransport();
    transports[t].setIpAndPort("127.0.0.1",Integer.valueOf("3838" + t));
    transports[t].init(voidConfiguration,clipboard,NodeRole.SHARD,"127.0.0.1",voidConfiguration.getUnicastControllerPort(),(short)t);
  }
  for (int t=0; t < transports.length; t++) {
    transports[t].launch(Transport.ThreadingModel.DEDICATED_THREADS);
  }
  Clipboard clipboard=new Clipboard();
  RoutedTransport clientTransport=new RoutedTransport();
  clientTransport.setIpAndPort("127.0.0.1",voidConfiguration.getUnicastControllerPort());
  ClientRouter router=new InterleavedRouter(0);
  clientTransport.setRouter(router);
  router.init(voidConfiguration,clientTransport);
  clientTransport.init(voidConfiguration,clipboard,NodeRole.CLIENT,"127.0.0.1",voidConfiguration.getUnicastControllerPort(),(short)-1);
  clientTransport.launch(Transport.ThreadingModel.DEDICATED_THREADS);
  VoidMessage message=new IntroductionRequestMessage("127.0.0.1",voidConfiguration.getUnicastControllerPort());
  clientTransport.sendMessage(message);
  Thread.sleep(500);
  message=transports[0].messages.poll(1,TimeUnit.SECONDS);
  assertNotEquals(null,message);
  for (int t=1; t < transports.length; t++) {
    message=transports[t].messages.poll(1,TimeUnit.SECONDS);
    assertEquals(null,message);
  }
  for (  RoutedTransport transport : transports) {
    transport.shutdown();
  }
  clientTransport.shutdown();
}
