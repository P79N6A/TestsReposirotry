@Test public void testViewDetach_1() throws Exception {
  WorkspaceConfiguration configuration=WorkspaceConfiguration.builder().initialSize(10000000).overallocationLimit(3.0).policyAllocation(AllocationPolicy.OVERALLOCATE).policySpill(SpillPolicy.REALLOCATE).policyLearning(LearningPolicy.FIRST_LOOP).policyReset(ResetPolicy.BLOCK_LEFT).build();
  Nd4jWorkspace workspace=(Nd4jWorkspace)Nd4j.getWorkspaceManager().getWorkspaceForCurrentThread(configuration,"WS109");
  INDArray row=Nd4j.linspace(1,10,10);
  INDArray exp=Nd4j.create(1,10).assign(2.0);
  INDArray result=null;
  try (MemoryWorkspace ws=Nd4j.getWorkspaceManager().getAndActivateWorkspace(configuration,"WS109")){
    INDArray matrix=Nd4j.create(10,10);
    for (int e=0; e < matrix.rows(); e++)     matrix.getRow(e).assign(row);
    INDArray column=matrix.getColumn(1);
    assertTrue(column.isView());
    assertTrue(column.isAttached());
    result=column.detach();
  }
   assertFalse(result.isView());
  assertFalse(result.isAttached());
  assertEquals(exp,result);
}
