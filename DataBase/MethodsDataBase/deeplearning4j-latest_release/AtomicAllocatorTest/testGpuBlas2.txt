@Test public void testGpuBlas2() throws Exception {
  assertEquals("JcublasLevel1",Nd4j.getBlasWrapper().level1().getClass().getSimpleName());
  INDArray array1=Nd4j.create(new float[]{1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f});
  INDArray array2=Nd4j.create(new float[]{1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f,1.01f});
  for (int x=0; x < 100; x++) {
    Nd4j.getBlasWrapper().dot(array1,array2);
  }
  log.warn("A: " + array2.getClass().getSimpleName());
  long time1=System.nanoTime();
  Nd4j.getBlasWrapper().axpy(new Float(0.75f),array1,array2);
  long time2=System.nanoTime();
  log.info("AXPY execution time: [" + (time2 - time1) + "] ns");
  assertEquals(1.7674999237060547,array2.getDouble(0),0.00001);
  System.out.println("X1 --------");
  assertEquals(1.7674999237060547,array2.getDouble(1),0.00001);
  array1.putScalar(0,1.15);
  log.info("X2 -------------");
  assertEquals(1.15f,array1.getFloat(0),0.001);
  Nd4j.getBlasWrapper().axpy(new Float(0.75f),array1,array2);
  log.info("X3 -------------");
  assertNotEquals(0,array2.getDouble(0),0.00001);
  assertNotEquals(1.7574999332427979,array2.getDouble(0),0.00001);
  assertEquals(2.629999876022339,array2.getDouble(0),0.00001);
  assertEquals(2.5249998569488525,array2.getDouble(1),0.00001);
}
