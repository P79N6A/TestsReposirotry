@Test public void testPredefinedConfigValues(){
  double expectedMomentum=0.9;
  double expectedAdamMeanDecay=0.9;
  double expectedAdamVarDecay=0.999;
  double expectedRmsDecay=0.95;
  Distribution expectedDist=new NormalDistribution(0,1);
  double expectedL1=0.0;
  double expectedL2=0.0;
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Nesterovs(0.9)).list().layer(0,new DenseLayer.Builder().nIn(2).nOut(2).l2(0.5).build()).layer(1,new DenseLayer.Builder().nIn(2).nOut(2).updater(new Nesterovs(0.3,0.4)).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  BaseLayer layerConf=(BaseLayer)net.getLayer(0).conf().getLayer();
  assertEquals(expectedMomentum,((Nesterovs)layerConf.getIUpdater()).getMomentum(),1e-3);
  assertEquals(expectedL1,layerConf.getL1(),1e-3);
  assertEquals(0.5,layerConf.getL2(),1e-3);
  BaseLayer layerConf1=(BaseLayer)net.getLayer(1).conf().getLayer();
  assertEquals(0.4,((Nesterovs)layerConf1.getIUpdater()).getMomentum(),1e-3);
  conf=new NeuralNetConfiguration.Builder().updater(new Adam(0.3)).weightInit(WeightInit.DISTRIBUTION).list().layer(0,new DenseLayer.Builder().nIn(2).nOut(2).l2(0.5).l1(0.3).build()).layer(1,new DenseLayer.Builder().nIn(2).nOut(2).build()).build();
  net=new MultiLayerNetwork(conf);
  net.init();
  layerConf=(BaseLayer)net.getLayer(0).conf().getLayer();
  assertEquals(0.3,layerConf.getL1(),1e-3);
  assertEquals(0.5,layerConf.getL2(),1e-3);
  layerConf1=(BaseLayer)net.getLayer(1).conf().getLayer();
  assertEquals(expectedAdamMeanDecay,((Adam)layerConf1.getIUpdater()).getBeta1(),1e-3);
  assertEquals(expectedAdamVarDecay,((Adam)layerConf1.getIUpdater()).getBeta2(),1e-3);
  assertEquals(expectedDist,layerConf1.getDist());
  assertEquals(expectedL1,layerConf1.getL1(),1e-3);
  assertEquals(expectedL2,layerConf1.getL2(),1e-3);
  conf=new NeuralNetConfiguration.Builder().updater(new RmsProp(0.3)).list().layer(0,new DenseLayer.Builder().nIn(2).nOut(2).build()).layer(1,new DenseLayer.Builder().nIn(2).nOut(2).updater(new RmsProp(0.3,0.4,RmsProp.DEFAULT_RMSPROP_EPSILON)).build()).build();
  net=new MultiLayerNetwork(conf);
  net.init();
  layerConf=(BaseLayer)net.getLayer(0).conf().getLayer();
  assertEquals(expectedRmsDecay,((RmsProp)layerConf.getIUpdater()).getRmsDecay(),1e-3);
  assertEquals(expectedL1,layerConf.getL1(),1e-3);
  assertEquals(expectedL2,layerConf.getL2(),1e-3);
  layerConf1=(BaseLayer)net.getLayer(1).conf().getLayer();
  assertEquals(0.4,((RmsProp)layerConf1.getIUpdater()).getRmsDecay(),1e-3);
}
