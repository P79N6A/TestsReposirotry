@Test @Ignore public void testCandidateGenerationExceptionsMnist() throws Exception {
  MultiLayerSpace mls=new MultiLayerSpace.Builder().updater(new SgdSpace(new ContinuousParameterSpace(0.0001,0.2))).l2(new ContinuousParameterSpace(0.0001,0.05)).dropOut(new ContinuousParameterSpace(0.2,0.7)).addLayer(new ConvolutionLayerSpace.Builder().nIn(1).nOut(new IntegerParameterSpace(5,5)).kernelSize(new DiscreteParameterSpace<>(new int[]{14,14},new int[]{30,30})).stride(2,2).activation(new DiscreteParameterSpace<>(Activation.RELU,Activation.SOFTPLUS,Activation.LEAKYRELU)).build()).addLayer(new DenseLayerSpace.Builder().nOut(new IntegerParameterSpace(32,128)).activation(new DiscreteParameterSpace<>(Activation.RELU,Activation.TANH)).build(),new IntegerParameterSpace(0,1),true).addLayer(new OutputLayerSpace.Builder().nOut(10).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).setInputType(InputType.convolutionalFlat(28,28,1)).build();
  Map<String,Object> commands=new HashMap<>();
  CandidateGenerator candidateGenerator=new RandomSearchGenerator(mls,commands);
  DataProvider dataProvider=new MnistDataSetProvider();
  String modelSavePath=new File(System.getProperty("java.io.tmpdir"),"ArbiterUiTestBasicMnist\\").getAbsolutePath();
  File f=new File(modelSavePath);
  if (f.exists())   f.delete();
  f.mkdir();
  if (!f.exists())   throw new RuntimeException();
  OptimizationConfiguration configuration=new OptimizationConfiguration.Builder().candidateGenerator(candidateGenerator).dataProvider(dataProvider).modelSaver(new FileModelSaver(modelSavePath)).scoreFunction(new TestSetLossScoreFunction(true)).terminationConditions(new MaxTimeCondition(120,TimeUnit.MINUTES),new MaxCandidatesCondition(100)).build();
  IOptimizationRunner runner=new LocalOptimizationRunner(configuration,new MultiLayerNetworkTaskCreator());
  StatsStorage ss=new InMemoryStatsStorage();
  StatusListener sl=new ArbiterStatusListener(ss);
  runner.addListeners(sl);
  UIServer.getInstance().attach(ss);
  runner.execute();
  Thread.sleep(100000);
}
