@Test public void testReductionGlobal(){
  List<List<Writable>> in=Arrays.asList(Arrays.<Writable>asList(new Text("first"),new DoubleWritable(3.0)),Arrays.<Writable>asList(new Text("second"),new DoubleWritable(5.0)));
  List<List<Writable>> inData=in;
  Schema s=new Schema.Builder().addColumnString("textCol").addColumnDouble("doubleCol").build();
  TransformProcess tp=new TransformProcess.Builder(s).reduce(new Reducer.Builder(ReduceOp.TakeFirst).takeFirstColumns("textCol").meanColumns("doubleCol").build()).build();
  List<List<Writable>> outRdd=LocalTransformExecutor.execute(inData,tp);
  List<List<Writable>> out=outRdd;
  List<List<Writable>> expOut=Collections.singletonList(Arrays.<Writable>asList(new Text("first"),new DoubleWritable(4.0)));
  assertEquals(expOut,out);
}
