@Test public void testExecutionNdarray(){
  Schema schema=new Schema.Builder().addColumnNDArray("first",new long[]{1,32577}).addColumnNDArray("second",new long[]{1,32577}).build();
  TransformProcess transformProcess=new TransformProcess.Builder(schema).ndArrayMathFunctionTransform("first",MathFunction.SIN).ndArrayMathFunctionTransform("second",MathFunction.COS).build();
  List<List<Writable>> functions=new ArrayList<>();
  List<Writable> firstRow=new ArrayList<>();
  INDArray firstArr=Nd4j.linspace(1,4,4);
  INDArray secondArr=Nd4j.linspace(1,4,4);
  firstRow.add(new NDArrayWritable(firstArr));
  firstRow.add(new NDArrayWritable(secondArr));
  functions.add(firstRow);
  List<List<Writable>> execute=LocalTransformExecutor.execute(functions,transformProcess);
  INDArray firstResult=((NDArrayWritable)execute.get(0).get(0)).get();
  INDArray secondResult=((NDArrayWritable)execute.get(0).get(1)).get();
  INDArray expected=Transforms.sin(firstArr);
  INDArray secondExpected=Transforms.cos(secondArr);
  assertEquals(expected,firstResult);
  assertEquals(secondExpected,secondResult);
}
