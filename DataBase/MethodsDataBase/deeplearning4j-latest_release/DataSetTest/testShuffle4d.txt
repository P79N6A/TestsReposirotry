@Test public void testShuffle4d(){
  int nSamples=10;
  int nChannels=3;
  int imgRows=4;
  int imgCols=2;
  int nLabels=5;
  val shape=new long[]{nSamples,nChannels,imgRows,imgCols};
  int entries=nSamples * nChannels * imgRows* imgCols;
  int labels=nSamples * nLabels;
  INDArray ds_data=Nd4j.linspace(1,entries,entries).reshape(nSamples,nChannels,imgRows,imgCols);
  INDArray ds_labels=Nd4j.linspace(1,labels,labels).reshape(nSamples,nLabels);
  DataSet ds=new DataSet(ds_data,ds_labels);
  ds.shuffle();
  for (int dim=1; dim < 4; dim++) {
    for (int tensorNum=0; tensorNum < entries / shape[dim]; tensorNum++) {
      for (int i=0, j=1; j < shape[dim]; i++, j++) {
        int f_element=ds.getFeatures().tensorAlongDimension(tensorNum,dim).getInt(i);
        int f_next_element=ds.getFeatures().tensorAlongDimension(tensorNum,dim).getInt(j);
        int f_element_diff=f_next_element - f_element;
        assertTrue(f_element_diff == ds_data.stride(dim));
      }
    }
  }
}
