@Test public void testCnnMerge(){
  int nOut=3;
  int width=5;
  int height=4;
  int depth=3;
  int nExamples1=2;
  int nExamples2=1;
  int length1=width * height * depth* nExamples1;
  int length2=width * height * depth* nExamples2;
  INDArray first=Nd4j.linspace(1,length1,length1).reshape('c',nExamples1,depth,width,height);
  INDArray second=Nd4j.linspace(1,length2,length2).reshape('c',nExamples2,depth,width,height).addi(0.1);
  INDArray labels1=Nd4j.linspace(1,nExamples1 * nOut,nExamples1 * nOut).reshape('c',nExamples1,nOut);
  INDArray labels2=Nd4j.linspace(1,nExamples2 * nOut,nExamples2 * nOut).reshape('c',nExamples2,nOut);
  DataSet ds1=new DataSet(first,labels1);
  DataSet ds2=new DataSet(second,labels2);
  DataSet merged=DataSet.merge(Arrays.asList(ds1,ds2));
  INDArray fMerged=merged.getFeatures();
  INDArray lMerged=merged.getLabels();
  assertArrayEquals(new long[]{nExamples1 + nExamples2,depth,width,height},fMerged.shape());
  assertArrayEquals(new long[]{nExamples1 + nExamples2,nOut},lMerged.shape());
  assertEquals(first,fMerged.get(interval(0,nExamples1),all(),all(),all()));
  assertEquals(second,fMerged.get(interval(nExamples1,nExamples1 + nExamples2,true),all(),all(),all()));
  assertEquals(labels1,lMerged.get(interval(0,nExamples1),all()));
  assertEquals(labels2,lMerged.get(interval(nExamples1,nExamples1 + nExamples2),all()));
  DataSet merged2=DataSet.merge(Arrays.asList(ds1,new DataSet(),ds2));
  assertEquals(merged,merged2);
  INDArray temp=ds1.getFeatures();
  ds1.setFeatures(null);
  try {
    DataSet.merge(Arrays.asList(ds1,ds2));
    fail("Expected exception");
  }
 catch (  IllegalStateException e) {
    assertTrue(e.getMessage().contains("Cannot merge"));
  }
  try {
    DataSet.merge(Arrays.asList(ds2,ds1));
    fail("Expected exception");
  }
 catch (  IllegalStateException e) {
    assertTrue(e.getMessage().contains("Cannot merge"));
  }
  ds1.setFeatures(temp);
  ds2.setLabels(null);
  try {
    DataSet.merge(Arrays.asList(ds1,ds2));
    fail("Expected exception");
  }
 catch (  IllegalStateException e) {
    assertTrue(e.getMessage().contains("Cannot merge"));
  }
  try {
    DataSet.merge(Arrays.asList(ds2,ds1));
    fail("Expected exception");
  }
 catch (  IllegalStateException e) {
    assertTrue(e.getMessage().contains("Cannot merge"));
  }
}
