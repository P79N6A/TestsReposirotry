@Test public void testMdsShuffle(){
  MultiDataSet orig=new MultiDataSet(Nd4j.linspace(1,100,100).reshape('c',10,10),Nd4j.linspace(100,200,100).reshape('c',10,10));
  MultiDataSet mds=new MultiDataSet(Nd4j.linspace(1,100,100).reshape('c',10,10),Nd4j.linspace(100,200,100).reshape('c',10,10));
  mds.shuffle();
  assertNotEquals(orig,mds);
  boolean[] foundF=new boolean[10];
  boolean[] foundL=new boolean[10];
  for (int i=0; i < 10; i++) {
    double f=mds.getFeatures(0).getDouble(i,0);
    double l=mds.getLabels(0).getDouble(i,0);
    int fi=(int)(f / 10.0);
    int li=(int)((l - 100) / 10.0);
    foundF[fi]=true;
    foundL[li]=true;
  }
  boolean allF=true;
  boolean allL=true;
  for (int i=0; i < 10; i++) {
    allF&=foundF[i];
    allL&=foundL[i];
  }
  assertTrue(allF);
  assertTrue(allL);
}
