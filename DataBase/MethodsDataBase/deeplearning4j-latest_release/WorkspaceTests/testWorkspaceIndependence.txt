@Test public void testWorkspaceIndependence(){
  int depthIn=2;
  int depthOut=2;
  int nOut=2;
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().weightInit(WeightInit.XAVIER).convolutionMode(ConvolutionMode.Same).seed(12345L).list().layer(0,new ConvolutionLayer.Builder().nIn(depthIn).nOut(depthOut).kernelSize(2,2).stride(1,1).activation(Activation.TANH).build()).layer(1,new OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).activation(Activation.SOFTMAX).nOut(nOut).build()).setInputType(InputType.convolutional(5,5,2)).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf.clone());
  net.init();
  net.getLayerWiseConfigurations().setInferenceWorkspaceMode(WorkspaceMode.ENABLED);
  net.getLayerWiseConfigurations().setTrainingWorkspaceMode(WorkspaceMode.ENABLED);
  MultiLayerNetwork net2=new MultiLayerNetwork(conf.clone());
  net2.init();
  net2.getLayerWiseConfigurations().setInferenceWorkspaceMode(WorkspaceMode.NONE);
  net2.getLayerWiseConfigurations().setTrainingWorkspaceMode(WorkspaceMode.NONE);
  INDArray in=Nd4j.rand(new int[]{1,2,5,5});
  net.output(in);
  net2.output(in);
}
