@Test public void testWithPreprocessorsCG(){
  for (  WorkspaceMode wm : WorkspaceMode.values()) {
    System.out.println(wm);
    ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().trainingWorkspaceMode(wm).inferenceWorkspaceMode(wm).graphBuilder().addInputs("in").addLayer("e",new GravesLSTM.Builder().nIn(10).nOut(5).build(),new DupPreProcessor(),"in").addLayer("rnn",new GravesLSTM.Builder().nIn(5).nOut(8).build(),"e").addLayer("out",new RnnOutputLayer.Builder(LossFunctions.LossFunction.MSE).activation(Activation.SIGMOID).nOut(3).build(),"rnn").setInputTypes(InputType.recurrent(10)).setOutputs("out").build();
    ComputationGraph cg=new ComputationGraph(conf);
    cg.init();
    INDArray[] input=new INDArray[]{Nd4j.zeros(1,10,5)};
    for (    boolean train : new boolean[]{false,true}) {
      cg.clear();
      cg.feedForward(input,train);
    }
    cg.setInputs(input);
    cg.setLabels(Nd4j.rand(new int[]{1,3,5}));
    cg.computeGradientAndScore();
  }
}
