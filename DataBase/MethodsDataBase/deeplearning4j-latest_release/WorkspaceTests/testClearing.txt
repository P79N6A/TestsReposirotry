@Test public void testClearing(){
  for (  WorkspaceMode wsm : WorkspaceMode.values()) {
    ComputationGraphConfiguration config=new NeuralNetConfiguration.Builder().updater(new Adam()).inferenceWorkspaceMode(wsm).trainingWorkspaceMode(wsm).graphBuilder().addInputs("in").setInputTypes(InputType.recurrent(200)).addLayer("embeddings",new EmbeddingLayer.Builder().nIn(200).nOut(50).build(),"in").addLayer("a",new GravesLSTM.Builder().nOut(300).activation(Activation.HARDTANH).build(),"embeddings").addVertex("b",new LastTimeStepVertex("in"),"a").addLayer("c",new DenseLayer.Builder().nOut(300).activation(Activation.HARDTANH).build(),"b").addLayer("output",new LossLayer.Builder().lossFunction(LossFunctions.LossFunction.COSINE_PROXIMITY).build(),"c").setOutputs("output").build();
    final ComputationGraph computationGraph=new ComputationGraph(config);
    computationGraph.init();
    computationGraph.setListeners(new ScoreIterationListener(1));
    WSTestDataSetIterator iterator=new WSTestDataSetIterator();
    computationGraph.fit(iterator);
  }
}
