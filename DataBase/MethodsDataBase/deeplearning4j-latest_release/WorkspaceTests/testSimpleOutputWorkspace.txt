@Test public void testSimpleOutputWorkspace(){
  final MemoryWorkspace workspace=Nd4j.getWorkspaceManager().getWorkspaceForCurrentThread("ExternalTestWorkspace");
  final INDArray input=Nd4j.rand(1,30);
  final ComputationGraphConfiguration computationGraphConfiguration=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("state").addLayer("value_output",new OutputLayer.Builder().nIn(30).nOut(1).activation(Activation.IDENTITY).lossFunction(LossFunctions.LossFunction.MSE).build(),"state").setOutputs("value_output").build();
  final ComputationGraph computationGraph=new ComputationGraph(computationGraphConfiguration);
  computationGraph.init();
  try (final MemoryWorkspace ws=workspace.notifyScopeEntered()){
    computationGraph.output(false,ws,input);
  }
 }
