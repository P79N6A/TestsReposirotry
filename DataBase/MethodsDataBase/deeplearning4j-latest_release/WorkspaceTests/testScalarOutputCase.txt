@Test public void testScalarOutputCase(){
  for (  WorkspaceMode ws : WorkspaceMode.values()) {
    log.info("WorkspaceMode = " + ws);
    Nd4j.getRandom().setSeed(12345);
    MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().weightInit(WeightInit.XAVIER).seed(12345).trainingWorkspaceMode(ws).inferenceWorkspaceMode(ws).list().layer(new OutputLayer.Builder().nIn(3).nOut(1).activation(Activation.SIGMOID).lossFunction(LossFunctions.LossFunction.XENT).build()).build();
    MultiLayerNetwork net=new MultiLayerNetwork(conf);
    net.init();
    INDArray input=Nd4j.linspace(1,3,3);
    INDArray out=net.output(input);
    INDArray out2=net.output(input);
    assertEquals(out2,out);
    assertFalse(out.isAttached());
    assertFalse(out2.isAttached());
    Nd4j.getWorkspaceManager().destroyAllWorkspacesForCurrentThread();
  }
}
