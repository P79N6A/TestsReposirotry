@Test public void testWithPreprocessorsMLN(){
  for (  WorkspaceMode wm : WorkspaceMode.values()) {
    System.out.println(wm);
    MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().trainingWorkspaceMode(wm).inferenceWorkspaceMode(wm).list().layer(new GravesLSTM.Builder().nIn(10).nOut(5).build()).layer(new GravesLSTM.Builder().nIn(5).nOut(8).build()).layer(new RnnOutputLayer.Builder(LossFunctions.LossFunction.MSE).activation(Activation.SIGMOID).nOut(3).build()).inputPreProcessor(0,new DupPreProcessor()).setInputType(InputType.recurrent(10)).build();
    MultiLayerNetwork net=new MultiLayerNetwork(conf);
    net.init();
    INDArray input=Nd4j.zeros(1,10,5);
    for (    boolean train : new boolean[]{false,true}) {
      net.clear();
      net.feedForward(input,train);
    }
    net.setInput(input);
    net.setLabels(Nd4j.rand(new int[]{1,3,5}));
    net.computeGradientAndScore();
  }
}
