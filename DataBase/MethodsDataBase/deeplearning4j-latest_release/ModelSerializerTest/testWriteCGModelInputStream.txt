@Test public void testWriteCGModelInputStream() throws Exception {
  ComputationGraphConfiguration config=new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).updater(new Sgd(0.1)).graphBuilder().addInputs("in").addLayer("dense",new DenseLayer.Builder().nIn(4).nOut(2).build(),"in").addLayer("out",new OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).nIn(2).nOut(3).activation(Activation.SOFTMAX).build(),"dense").setOutputs("out").build();
  ComputationGraph cg=new ComputationGraph(config);
  cg.init();
  File tempFile=tempDir.newFile();
  ModelSerializer.writeModel(cg,tempFile,true);
  FileInputStream fis=new FileInputStream(tempFile);
  ComputationGraph network=ModelSerializer.restoreComputationGraph(fis);
  assertEquals(network.getConfiguration().toJson(),cg.getConfiguration().toJson());
  assertEquals(cg.params(),network.params());
  assertEquals(cg.getUpdater().getStateViewArray(),network.getUpdater().getStateViewArray());
}
