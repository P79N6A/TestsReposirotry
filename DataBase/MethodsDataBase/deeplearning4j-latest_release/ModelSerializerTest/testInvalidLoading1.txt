@Test public void testInvalidLoading1() throws Exception {
  ComputationGraphConfiguration config=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").addLayer("dense",new DenseLayer.Builder().nIn(4).nOut(2).build(),"in").addLayer("out",new OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).activation(Activation.SOFTMAX).nIn(2).nOut(3).build(),"dense").setOutputs("out").build();
  ComputationGraph cg=new ComputationGraph(config);
  cg.init();
  File tempFile=tempDir.newFile();
  ModelSerializer.writeModel(cg,tempFile,true);
  try {
    ModelSerializer.restoreMultiLayerNetwork(tempFile);
    fail();
  }
 catch (  Exception e) {
    String msg=e.getMessage();
    assertTrue(msg,msg.contains("JSON") && msg.contains("restoreComputationGraph"));
  }
}
