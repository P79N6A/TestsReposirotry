@Test public void testArrowColumnsStringTimeSeries(){
  Schema.Builder schema=new Schema.Builder();
  List<List<List<String>>> entries=new ArrayList<>();
  for (int i=0; i < 3; i++) {
    schema.addColumnInteger(String.valueOf(i));
  }
  for (int i=0; i < 5; i++) {
    List<List<String>> arr=Arrays.asList(Arrays.asList(String.valueOf(i),String.valueOf(i),String.valueOf(i)));
    entries.add(arr);
  }
  List<FieldVector> fieldVectors=ArrowConverter.toArrowColumnsStringTimeSeries(bufferAllocator,schema.build(),entries);
  assertEquals(3,fieldVectors.size());
  assertEquals(5,fieldVectors.get(0).getValueCount());
  INDArray exp=Nd4j.create(5,3);
  for (int i=0; i < 5; i++) {
    exp.getRow(i).assign(i);
  }
  ArrowWritableRecordBatch wri=ArrowConverter.toArrowWritables(fieldVectors,schema.build());
  INDArray arr=ArrowConverter.toArray(wri);
  assertArrayEquals(new long[]{5,3},arr.shape());
  assertEquals(exp,arr);
}
