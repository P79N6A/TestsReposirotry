@Test public void runParallelWrapperMain() throws Exception {
  int nChannels=1;
  int outputNum=10;
  int batchSize=128;
  int seed=123;
  int uiPort=9500;
  System.setProperty("org.deeplearning4j.ui.port",String.valueOf(uiPort));
  log.info("Load data....");
  DataSetIterator mnistTrain=new MnistDataSetIterator(batchSize,true,12345);
  DataSetIterator mnistTest=new MnistDataSetIterator(batchSize,false,12345);
  log.info("Build model....");
  MultiLayerConfiguration.Builder builder=new NeuralNetConfiguration.Builder().seed(seed).l2(0.0005).weightInit(WeightInit.XAVIER).updater(new Nesterovs(0.01,0.9)).list().layer(0,new ConvolutionLayer.Builder(5,5).nIn(nChannels).stride(1,1).nOut(20).activation(Activation.IDENTITY).build()).layer(1,new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX).kernelSize(2,2).stride(2,2).build()).layer(2,new ConvolutionLayer.Builder(5,5).stride(1,1).nOut(50).activation(Activation.IDENTITY).build()).layer(3,new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX).kernelSize(2,2).stride(2,2).build()).layer(4,new DenseLayer.Builder().activation(Activation.RELU).nOut(500).build()).layer(5,new OutputLayer.Builder(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD).nOut(outputNum).activation(Activation.SOFTMAX).build()).setInputType(InputType.convolutionalFlat(28,28,nChannels));
  MultiLayerConfiguration conf=builder.build();
  MultiLayerNetwork model=new MultiLayerNetwork(conf);
  model.init();
  File tempModel=testDir.newFile("tmpmodel.zip");
  tempModel.deleteOnExit();
  ModelSerializer.writeModel(model,tempModel,false);
  File tmp=testDir.newFile("tmpmodel.bin");
  tmp.deleteOnExit();
  ParallelWrapperMain parallelWrapperMain=new ParallelWrapperMain();
  parallelWrapperMain.runMain(new String[]{"--modelPath",tempModel.getAbsolutePath(),"--dataSetIteratorFactoryClazz",MnistDataSetIteratorProviderFactory.class.getName(),"--modelOutputPath",tmp.getAbsolutePath(),"--uiUrl","localhost:" + uiPort});
}
