@Test public void testMeshPropagation_1() throws Exception {
  val counter=new AtomicInteger(0);
  val connector=new DummyTransport.Connector();
  val transportA=new DummyTransport("alpha",connector);
  val transportB=new DummyTransport("beta",connector);
  val transportG=new DummyTransport("gamma",connector);
  val transportD=new DummyTransport("delta",connector);
  connector.register(transportA,transportB,transportG,transportD);
  transportB.sendMessage(new HandshakeRequest(),"alpha");
  transportG.sendMessage(new HandshakeRequest(),"alpha");
  transportD.sendMessage(new HandshakeRequest(),"alpha");
  val meshA=transportA.getMesh();
  val meshB=transportB.getMesh();
  val meshG=transportG.getMesh();
  val meshD=transportD.getMesh();
  assertEquals(meshA.getVersion(),meshB.getVersion());
  assertEquals(meshA.getVersion(),meshG.getVersion());
  assertEquals(meshA.getVersion(),meshD.getVersion());
  assertEquals(meshA,meshB);
  assertEquals(meshA,meshG);
  assertEquals(meshA,meshD);
  assertTrue(meshA.isKnownNode("alpha"));
  assertTrue(meshA.isKnownNode("beta"));
  assertTrue(meshA.isKnownNode("gamma"));
  assertTrue(meshA.isKnownNode("delta"));
  val node=meshB.getNodeById("alpha");
  assertTrue(node.isRootNode());
}
