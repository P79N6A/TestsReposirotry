@Test public void testUpsampling1DBackprop() throws Exception {
  INDArray expectedContainedEpsilonInput=Nd4j.create(new double[]{1.,3.,2.,6.,7.,2.,5.,5.},new int[]{1,1,8});
  INDArray expectedContainedEpsilonResult=Nd4j.create(new double[]{4.,8.,9.,10.},new int[]{1,1,4});
  INDArray input=getContainedData();
  Layer layer=getUpsampling1DLayer();
  layer.activate(input,false,LayerWorkspaceMgr.noWorkspaces());
  Pair<Gradient,INDArray> containedOutput=layer.backpropGradient(expectedContainedEpsilonInput,LayerWorkspaceMgr.noWorkspaces());
  assertEquals(expectedContainedEpsilonResult,containedOutput.getSecond());
  assertEquals(null,containedOutput.getFirst().getGradientFor("W"));
  assertEquals(expectedContainedEpsilonResult.shape().length,containedOutput.getSecond().shape().length);
  INDArray input2=getData();
  layer.activate(input2,false,LayerWorkspaceMgr.noWorkspaces());
  val depth=input2.size(1);
  epsilon=Nd4j.ones(5,depth,outputLength);
  Pair<Gradient,INDArray> out=layer.backpropGradient(epsilon,LayerWorkspaceMgr.noWorkspaces());
  assertEquals(input.shape().length,out.getSecond().shape().length);
  assertEquals(depth,out.getSecond().size(1));
}
