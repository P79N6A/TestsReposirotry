@Test public void testLog2Normalizer(){
  Schema schema=getSchema(ColumnType.Double);
  double mu=2.0;
  double min=1.0;
  double scale=0.5;
  Transform transform=new Log2Normalizer("column",mu,min,scale);
  transform.setInputSchema(schema);
  Schema out=transform.transform(schema);
  assertEquals(1,out.getColumnMetaData().size());
  TestCase.assertEquals(ColumnType.Double,out.getMetaData(0).getColumnType());
  DoubleMetaData meta=(DoubleMetaData)out.getMetaData(0);
  assertNotNull(meta.getMinAllowedValue());
  assertEquals(0,meta.getMinAllowedValue(),1e-6);
  assertNull(meta.getMaxAllowedValue());
  double loge2=Math.log(2);
  assertEquals(0.0,transform.map(Collections.singletonList((Writable)new DoubleWritable(min))).get(0).toDouble(),1e-6);
  double d=scale * Math.log((10 - min) / (mu - min) + 1) / loge2;
  assertEquals(d,transform.map(Collections.singletonList((Writable)new DoubleWritable(10))).get(0).toDouble(),1e-6);
  d=scale * Math.log((3 - min) / (mu - min) + 1) / loge2;
  assertEquals(d,transform.map(Collections.singletonList((Writable)new DoubleWritable(3))).get(0).toDouble(),1e-6);
}
