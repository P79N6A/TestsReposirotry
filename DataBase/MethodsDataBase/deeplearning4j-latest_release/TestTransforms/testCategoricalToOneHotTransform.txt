@Test public void testCategoricalToOneHotTransform(){
  Schema schema=getSchema(ColumnType.Categorical,"zero","one","two");
  Transform transform=new CategoricalToOneHotTransform("column");
  transform.setInputSchema(schema);
  Schema out=transform.transform(schema);
  assertEquals(3,out.getColumnMetaData().size());
  for (int i=0; i < 3; i++) {
    TestCase.assertEquals(ColumnType.Integer,out.getMetaData(i).getColumnType());
    IntegerMetaData meta=(IntegerMetaData)out.getMetaData(i);
    assertNotNull(meta.getMinAllowedValue());
    assertEquals(0,(int)meta.getMinAllowedValue());
    assertNotNull(meta.getMaxAllowedValue());
    assertEquals(1,(int)meta.getMaxAllowedValue());
  }
  assertEquals(Arrays.asList(new IntWritable(1),new IntWritable(0),new IntWritable(0)),transform.map(Collections.singletonList((Writable)new Text("zero"))));
  assertEquals(Arrays.asList(new IntWritable(0),new IntWritable(1),new IntWritable(0)),transform.map(Collections.singletonList((Writable)new Text("one"))));
  assertEquals(Arrays.asList(new IntWritable(0),new IntWritable(0),new IntWritable(1)),transform.map(Collections.singletonList((Writable)new Text("two"))));
}
