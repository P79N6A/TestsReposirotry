@Test public void testDoubleMinMaxNormalizerTransform(){
  Schema schema=getSchema(ColumnType.Double);
  Transform transform=new MinMaxNormalizer("column",0,100);
  Transform transform2=new MinMaxNormalizer("column",0,100,-1,1);
  transform.setInputSchema(schema);
  transform2.setInputSchema(schema);
  Schema out=transform.transform(schema);
  Schema out2=transform2.transform(schema);
  assertEquals(1,out.getColumnMetaData().size());
  TestCase.assertEquals(ColumnType.Double,out.getMetaData(0).getColumnType());
  DoubleMetaData meta=(DoubleMetaData)out.getMetaData(0);
  DoubleMetaData meta2=(DoubleMetaData)out2.getMetaData(0);
  assertEquals(0,meta.getMinAllowedValue(),1e-6);
  assertEquals(1,meta.getMaxAllowedValue(),1e-6);
  assertEquals(-1,meta2.getMinAllowedValue(),1e-6);
  assertEquals(1,meta2.getMaxAllowedValue(),1e-6);
  assertEquals(0.0,transform.map(Collections.singletonList((Writable)new DoubleWritable(0))).get(0).toDouble(),1e-6);
  assertEquals(1.0,transform.map(Collections.singletonList((Writable)new DoubleWritable(100))).get(0).toDouble(),1e-6);
  assertEquals(0.5,transform.map(Collections.singletonList((Writable)new DoubleWritable(50))).get(0).toDouble(),1e-6);
  assertEquals(-1.0,transform2.map(Collections.singletonList((Writable)new DoubleWritable(0))).get(0).toDouble(),1e-6);
  assertEquals(1.0,transform2.map(Collections.singletonList((Writable)new DoubleWritable(100))).get(0).toDouble(),1e-6);
  assertEquals(0.0,transform2.map(Collections.singletonList((Writable)new DoubleWritable(50))).get(0).toDouble(),1e-6);
}
