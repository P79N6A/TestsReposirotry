@Test public void testIntegerToOneHotTransform(){
  Schema schema=getSchema(ColumnType.Integer);
  Transform transform=new IntegerToOneHotTransform("column",3,5);
  transform.setInputSchema(schema);
  Schema out=transform.transform(schema);
  assertEquals(3,out.getColumnMetaData().size());
  assertEquals(ColumnType.Integer,out.getMetaData(0).getColumnType());
  assertEquals(ColumnType.Integer,out.getMetaData(1).getColumnType());
  assertEquals(ColumnType.Integer,out.getMetaData(2).getColumnType());
  assertEquals(Arrays.asList("column[3]","column[4]","column[5]"),out.getColumnNames());
  assertEquals(Arrays.<Writable>asList(new IntWritable(1),new IntWritable(0),new IntWritable(0)),transform.map(Collections.singletonList((Writable)new IntWritable(3))));
  assertEquals(Arrays.<Writable>asList(new IntWritable(0),new IntWritable(1),new IntWritable(0)),transform.map(Collections.singletonList((Writable)new IntWritable(4))));
  assertEquals(Arrays.<Writable>asList(new IntWritable(0),new IntWritable(0),new IntWritable(1)),transform.map(Collections.singletonList((Writable)new IntWritable(5))));
}
