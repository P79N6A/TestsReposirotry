@Test public void testPivotTransform(){
  Schema schema=new Schema.Builder().addColumnString("otherCol").addColumnCategorical("key",Arrays.asList("first","second","third")).addColumnDouble("value").addColumnDouble("otherCol2").build();
  Transform t=new PivotTransform("key","value");
  t.setInputSchema(schema);
  Schema out=t.transform(schema);
  List<String> expNames=Arrays.asList("otherCol","key[first]","key[second]","key[third]","otherCol2");
  List<String> actNames=out.getColumnNames();
  assertEquals(expNames,actNames);
  List<ColumnType> columnTypesExp=Arrays.asList(ColumnType.String,ColumnType.Double,ColumnType.Double,ColumnType.Double,ColumnType.Double);
  assertEquals(columnTypesExp,out.getColumnTypes());
  List<Writable> e1=Arrays.<Writable>asList(new DoubleWritable(1),new DoubleWritable(0),new DoubleWritable(100),new DoubleWritable(0),new DoubleWritable(-1));
  List<Writable> a1=t.map(Arrays.<Writable>asList(new DoubleWritable(1),new Text("second"),new DoubleWritable(100),new DoubleWritable(-1)));
  assertEquals(e1,a1);
  List<Writable> e2=Arrays.<Writable>asList(new DoubleWritable(1),new DoubleWritable(0),new DoubleWritable(0),new DoubleWritable(200),new DoubleWritable(-1));
  List<Writable> a2=t.map(Arrays.<Writable>asList(new DoubleWritable(1),new Text("third"),new DoubleWritable(200),new DoubleWritable(-1)));
  assertEquals(e2,a2);
}
