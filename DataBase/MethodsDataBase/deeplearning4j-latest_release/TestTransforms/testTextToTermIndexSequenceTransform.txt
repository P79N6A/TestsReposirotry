@Test public void testTextToTermIndexSequenceTransform(){
  Schema schema=new Schema.Builder().addColumnString("ID").addColumnString("TEXT").addColumnDouble("FEATURE").build();
  List<String> vocab=Arrays.asList("zero","one","two","three");
  List<List<Writable>> inSeq=Arrays.asList(Arrays.<Writable>asList(new Text("a"),new Text("zero four two"),new DoubleWritable(4.2)),Arrays.<Writable>asList(new Text("b"),new Text("six one two four three five"),new DoubleWritable(87.9)));
  Schema expSchema=new Schema.Builder().addColumnString("ID").addColumnInteger("INDEXSEQ",0,3).addColumnDouble("FEATURE").build();
  List<List<Writable>> exp=Arrays.asList(Arrays.<Writable>asList(new Text("a"),new IntWritable(0),new DoubleWritable(4.2)),Arrays.<Writable>asList(new Text("a"),new IntWritable(2),new DoubleWritable(4.2)),Arrays.<Writable>asList(new Text("b"),new IntWritable(1),new DoubleWritable(87.9)),Arrays.<Writable>asList(new Text("b"),new IntWritable(2),new DoubleWritable(87.9)),Arrays.<Writable>asList(new Text("b"),new IntWritable(3),new DoubleWritable(87.9)));
  Transform t=new TextToTermIndexSequenceTransform("TEXT","INDEXSEQ",vocab," ",false);
  t.setInputSchema(schema);
  Schema outputSchema=t.transform(schema);
  assertEquals(expSchema.getColumnNames(),outputSchema.getColumnNames());
  assertEquals(expSchema.getColumnTypes(),outputSchema.getColumnTypes());
  assertEquals(expSchema,outputSchema);
  assertEquals(3,outputSchema.getColumnNames().size());
  assertEquals(ColumnType.String,outputSchema.getType(0));
  assertEquals(ColumnType.Integer,outputSchema.getType(1));
  assertEquals(ColumnType.Double,outputSchema.getType(2));
  IntegerMetaData intMetadata=(IntegerMetaData)outputSchema.getMetaData(1);
  assertEquals(0,(int)intMetadata.getMinAllowedValue());
  assertEquals(3,(int)intMetadata.getMaxAllowedValue());
  List<List<Writable>> out=t.mapSequence(inSeq);
  assertEquals(exp,out);
  TransformProcess tp=new TransformProcess.Builder(schema).transform(t).build();
  String json=tp.toJson();
  TransformProcess tp2=TransformProcess.fromJson(json);
  assertEquals(tp,tp2);
}
