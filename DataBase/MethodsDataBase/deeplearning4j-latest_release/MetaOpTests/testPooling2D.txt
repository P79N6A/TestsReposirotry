@Test public void testPooling2D(){
  Nd4j.create(1);
  val input=Nd4j.linspace(1,600,600).reshape(2,10,10,3);
  val permuted=input.permute(0,3,1,2);
  val nativeOps=NativeOpsHolder.getInstance().getDeviceNativeOps();
  val output=Nd4j.create(2,3,4,4);
  val context=AtomicAllocator.getInstance().getFlowController().prepareAction(output,permuted);
  val ptrBIn=(FloatPointer)AtomicAllocator.getInstance().getPointer(permuted,context);
  val ptrBOut=(FloatPointer)AtomicAllocator.getInstance().getPointer(output,context);
  val ptrSIn=(IntPointer)AtomicAllocator.getInstance().getPointer(permuted.shapeInfoDataBuffer());
  val ptrSOut=(IntPointer)AtomicAllocator.getInstance().getPointer(output.shapeInfoDataBuffer());
  val bufParams=Nd4j.getConstantHandler().getConstantBuffer(new float[]{3,3,3,3,1,1,1,1,1,2,2});
  val ptrBParams=(FloatPointer)AtomicAllocator.getInstance().getPointer(bufParams,context);
  PointerPointer xShapeInfoHostPointer=new PointerPointer(32).put(AddressRetriever.retrieveHostPointer(permuted.shapeInfoDataBuffer()),context.getOldStream(),AtomicAllocator.getInstance().getDeviceIdPointer(),context.getBufferAllocation(),context.getBufferReduction(),context.getBufferScalar(),context.getBufferSpecial(),null,AddressRetriever.retrieveHostPointer(output.shapeInfoDataBuffer()));
  nativeOps.execTransformFloat(xShapeInfoHostPointer,71,ptrBIn,ptrSIn,ptrBOut,ptrSOut,ptrBParams);
  AtomicAllocator.getInstance().getFlowController().registerAction(context,output,permuted);
  nativeOps.streamSynchronize(context.getOldStream());
  nativeOps.streamSynchronize(context.getOldStream());
  val reverted=output.permute(0,2,3,1);
  System.out.println("Result: " + reverted.toString());
}
