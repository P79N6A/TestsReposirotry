@Test public void checkSerialization() throws Exception {
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().seed(12345).list().layer(0,new ConvolutionLayer.Builder().nIn(1).nOut(6).weightInit(WeightInit.XAVIER).activation(Activation.IDENTITY).build()).layer(1,new BatchNormalization.Builder().build()).layer(2,new ActivationLayer.Builder().activation(Activation.LEAKYRELU).build()).layer(3,new DenseLayer.Builder().nOut(10).activation(Activation.LEAKYRELU).build()).layer(4,new BatchNormalization.Builder().build()).layer(5,new OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).weightInit(WeightInit.XAVIER).activation(Activation.SOFTMAX).nOut(10).build()).setInputType(InputType.convolutionalFlat(28,28,1)).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  DataSetIterator iter=new MnistDataSetIterator(16,true,12345);
  for (int i=0; i < 20; i++) {
    net.fit(iter.next());
  }
  INDArray in=iter.next().getFeatures();
  INDArray out=net.output(in,false);
  INDArray out2=net.output(in,false);
  assertEquals(out,out2);
  MultiLayerNetwork net2=TestUtils.testModelSerialization(net);
  INDArray outDeser=net2.output(in,false);
  assertEquals(out,outDeser);
}
