@Test public void testCnnForwardPass(){
  int nOut=10;
  Layer l=getLayer(nOut,0.0,false,-1,-1);
  assertEquals(4 * nOut,l.numParams());
  int hw=15;
  Nd4j.getRandom().setSeed(12345);
  INDArray randInput=Nd4j.rand(new int[]{100,nOut,hw,hw});
  INDArray output=l.activate(randInput,true,LayerWorkspaceMgr.noWorkspaces());
  assertEquals(4,output.rank());
  INDArray mean=output.mean(0,2,3);
  INDArray stdev=output.std(false,0,2,3);
  assertArrayEquals(new float[nOut],mean.data().asFloat(),1e-6f);
  assertArrayEquals(Nd4j.ones(1,nOut).data().asFloat(),stdev.data().asFloat(),1e-6f);
  double gamma=2.0;
  double beta=3.0;
  l=getLayer(nOut,0.0,true,gamma,beta);
  assertEquals(2 * nOut,l.numParams());
  output=l.activate(randInput,true,LayerWorkspaceMgr.noWorkspaces());
  mean=output.mean(0,2,3);
  stdev=output.std(false,0,2,3);
  assertEquals(Nd4j.valueArrayOf(mean.shape(),beta),mean);
  assertEquals(Nd4j.valueArrayOf(stdev.shape(),gamma),stdev);
}
