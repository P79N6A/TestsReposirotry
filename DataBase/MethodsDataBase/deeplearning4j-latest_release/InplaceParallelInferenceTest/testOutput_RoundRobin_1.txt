@Test public void testOutput_RoundRobin_1() throws Exception {
  int nIn=5;
  val conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").layer("out0",new OutputLayer.Builder().nIn(nIn).nOut(4).activation(Activation.SOFTMAX).build(),"in").layer("out1",new OutputLayer.Builder().nIn(nIn).nOut(6).activation(Activation.SOFTMAX).build(),"in").setOutputs("out0","out1").build();
  val net=new ComputationGraph(conf);
  net.init();
  val pi=new ParallelInference.Builder(net).inferenceMode(InferenceMode.INPLACE).loadBalanceMode(LoadBalanceMode.ROUND_ROBIN).workers(2).build();
  val result0=pi.output(new INDArray[]{Nd4j.create(new double[]{1.0,2.0,3.0,4.0,5.0})},null)[0];
  val result1=pi.output(new INDArray[]{Nd4j.create(new double[]{1.0,2.0,3.0,4.0,5.0})},null)[0];
  assertNotNull(result0);
  assertEquals(result0,result1);
}
