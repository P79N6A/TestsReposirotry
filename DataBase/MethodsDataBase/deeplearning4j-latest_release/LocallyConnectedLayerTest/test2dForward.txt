@Test public void test2dForward(){
  MultiLayerConfiguration.Builder builder=new NeuralNetConfiguration.Builder().seed(123).optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).l2(2e-4).updater(new Nesterovs(0.9)).dropOut(0.5).list().layer(new LocallyConnected2D.Builder().kernelSize(8,8).nIn(3).stride(4,4).nOut(16).dropOut(0.5).convolutionMode(ConvolutionMode.Strict).setInputSize(28,28).activation(Activation.RELU).weightInit(WeightInit.XAVIER).build()).layer(new OutputLayer.Builder(LossFunctions.LossFunction.SQUARED_LOSS).nOut(10).weightInit(WeightInit.XAVIER).activation(Activation.SOFTMAX).build()).setInputType(InputType.convolutionalFlat(28,28,3));
  MultiLayerConfiguration conf=builder.build();
  MultiLayerNetwork network=new MultiLayerNetwork(conf);
  network.init();
  INDArray input=Nd4j.ones(10,3,28,28);
  INDArray output=network.output(input,false);
  assertArrayEquals(new long[]{10,10},output.shape());
}
