@Test public void testUnstackNode(){
  Nd4j.getRandom().setSeed(12345);
  GraphVertex unstack0=new UnstackVertex(null,"",-1,0,3);
  GraphVertex unstack1=new UnstackVertex(null,"",-1,1,3);
  GraphVertex unstack2=new UnstackVertex(null,"",-1,2,3);
  INDArray in=Nd4j.rand(15,2);
  unstack0.setInputs(in);
  unstack1.setInputs(in);
  unstack2.setInputs(in);
  INDArray out0=unstack0.doForward(false,LayerWorkspaceMgr.noWorkspaces());
  INDArray out1=unstack1.doForward(false,LayerWorkspaceMgr.noWorkspaces());
  INDArray out2=unstack2.doForward(false,LayerWorkspaceMgr.noWorkspaces());
  assertEquals(in.get(NDArrayIndex.interval(0,5),NDArrayIndex.all()),out0);
  assertEquals(in.get(NDArrayIndex.interval(5,10),NDArrayIndex.all()),out1);
  assertEquals(in.get(NDArrayIndex.interval(10,15),NDArrayIndex.all()),out2);
  unstack0.setEpsilon(out0);
  unstack1.setEpsilon(out1);
  unstack2.setEpsilon(out2);
  INDArray backward0=unstack0.doBackward(false,LayerWorkspaceMgr.noWorkspaces()).getSecond()[0];
  INDArray backward1=unstack1.doBackward(false,LayerWorkspaceMgr.noWorkspaces()).getSecond()[0];
  INDArray backward2=unstack2.doBackward(false,LayerWorkspaceMgr.noWorkspaces()).getSecond()[0];
  assertEquals(out0,backward0.get(NDArrayIndex.interval(0,5),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,2),backward0.get(NDArrayIndex.interval(5,10),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,2),backward0.get(NDArrayIndex.interval(10,15),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,2),backward1.get(NDArrayIndex.interval(0,5),NDArrayIndex.all()));
  assertEquals(out1,backward1.get(NDArrayIndex.interval(5,10),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,2),backward1.get(NDArrayIndex.interval(10,15),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,2),backward2.get(NDArrayIndex.interval(0,5),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,2),backward2.get(NDArrayIndex.interval(5,10),NDArrayIndex.all()));
  assertEquals(out2,backward2.get(NDArrayIndex.interval(10,15),NDArrayIndex.all()));
  in=Nd4j.rand(new int[]{15,10,3,3});
  unstack0.setInputs(in);
  unstack1.setInputs(in);
  unstack2.setInputs(in);
  out0=unstack0.doForward(false,LayerWorkspaceMgr.noWorkspaces());
  out1=unstack1.doForward(false,LayerWorkspaceMgr.noWorkspaces());
  out2=unstack2.doForward(false,LayerWorkspaceMgr.noWorkspaces());
  assertEquals(in.get(NDArrayIndex.interval(0,5),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()),out0);
  assertEquals(in.get(NDArrayIndex.interval(5,10),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()),out1);
  assertEquals(in.get(NDArrayIndex.interval(10,15),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()),out2);
  unstack0.setEpsilon(out0);
  unstack1.setEpsilon(out1);
  unstack2.setEpsilon(out2);
  backward0=unstack0.doBackward(false,LayerWorkspaceMgr.noWorkspaces()).getSecond()[0];
  backward1=unstack1.doBackward(false,LayerWorkspaceMgr.noWorkspaces()).getSecond()[0];
  backward2=unstack2.doBackward(false,LayerWorkspaceMgr.noWorkspaces()).getSecond()[0];
  assertEquals(out0,backward0.get(NDArrayIndex.interval(0,5),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,10,3,3),backward0.get(NDArrayIndex.interval(5,10),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,10,3,3),backward0.get(NDArrayIndex.interval(10,15),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,10,3,3),backward1.get(NDArrayIndex.interval(0,5),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(out1,backward1.get(NDArrayIndex.interval(5,10),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,10,3,3),backward1.get(NDArrayIndex.interval(10,15),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,10,3,3),backward2.get(NDArrayIndex.interval(0,5),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(Nd4j.zeros(5,10,3,3),backward2.get(NDArrayIndex.interval(5,10),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
  assertEquals(out2,backward2.get(NDArrayIndex.interval(10,15),NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.all()));
}
