@Test public void testConv2dBasic(){
  int nIn=3;
  int nOut=4;
  int kH=2;
  int kW=2;
  int mb=3;
  int imgH=28;
  int imgW=28;
  SameDiff sd=SameDiff.create();
  INDArray wArr=Nd4j.create(kH,kW,nIn,nOut);
  INDArray bArr=Nd4j.create(1,nOut);
  INDArray inArr=Nd4j.create(mb,nIn,imgH,imgW);
  SDVariable in=sd.var("in",inArr);
  SDVariable w=sd.var("W",wArr);
  SDVariable b=sd.var("b",bArr);
  SDVariable[] vars=new SDVariable[]{in,w,b};
  Conv2DConfig c=Conv2DConfig.builder().kH(kH).kW(kW).pH(0).pW(0).sH(1).sW(1).dH(1).dW(1).isSameMode(false).build();
  SDVariable out=sd.conv2d(vars,c);
  out=sd.tanh("out",out);
  INDArray outArr=sd.execAndEndResult();
  val outShape=outArr.shape();
  assertArrayEquals(new long[]{mb,nOut,27,27},outShape);
}
