@Test public void testConv3d(){
  Nd4j.getRandom().setSeed(12345);
  int[][] inputSizes=new int[][]{{2,3,4,5,5}};
  List<String> failed=new ArrayList<>();
  for (  int[] inSizeNCDHW : inputSizes) {
    for (    boolean ncdhw : new boolean[]{true,false}) {
      int nIn=inSizeNCDHW[1];
      int[] shape=(ncdhw ? inSizeNCDHW : ncdhwToNdhwc(inSizeNCDHW));
      for (int i=0; i < 4; i++) {
        SameDiff sd=SameDiff.create();
        SDVariable in=sd.var("in",shape);
        SDVariable out;
        String msg;
switch (i) {
case 0:
          msg="0 - conv3d+bias+same, ncdhw=" + ncdhw + " - input "+ Arrays.toString(shape);
        SDVariable w0=sd.var("w0",Nd4j.rand(new int[]{2,2,2,nIn,3}).muli(10));
      SDVariable b0=sd.var("b0",Nd4j.rand(new long[]{3}).muli(10));
    out=sd.conv3d(in,w0,b0,Conv3DConfig.builder().dataFormat(ncdhw ? Conv3DConfig.NCDHW : Conv3DConfig.NDHWC).isSameMode(true).kH(2).kW(2).kD(2).sD(1).sH(1).sW(1).build());
  break;
case 1:
msg="1 - conv3d+no bias+no same, ncdhw=" + ncdhw + " - input "+ Arrays.toString(shape);
SDVariable w1=sd.var("w1",Nd4j.rand(new int[]{2,2,2,nIn,3}).muli(10));
out=sd.conv3d(in,w1,Conv3DConfig.builder().dataFormat(ncdhw ? Conv3DConfig.NCDHW : Conv3DConfig.NDHWC).isSameMode(false).kH(2).kW(2).kD(2).sD(1).sH(1).sW(1).build());
break;
case 2:
msg="2 - pooling 3d, average, same";
out=sd.avgPooling3d(in,Pooling3DConfig.builder().kH(2).kW(2).kD(2).sH(1).sW(1).sD(1).isSameMode(false).build());
break;
case 3:
msg="3 - pooling 3d, max, no same";
out=sd.avgPooling3d(in,Pooling3DConfig.builder().kH(2).kW(2).kD(2).sH(1).sW(1).sD(1).isSameMode(true).build());
break;
case 4:
throw new RuntimeException("Batch norm test not yet implemented");
default :
throw new RuntimeException();
}
INDArray inArr=Nd4j.rand(shape).muli(10);
in.setArray(inArr);
SDVariable loss=sd.standardDeviation("loss",out,true);
log.info("Starting test: " + msg);
TestCase tc=new TestCase(sd);
tc.testName(msg);
String error=OpValidation.validate(tc);
if (error != null) {
failed.add(name);
}
}
}
}
assertEquals(failed.toString(),0,failed.size());
}
