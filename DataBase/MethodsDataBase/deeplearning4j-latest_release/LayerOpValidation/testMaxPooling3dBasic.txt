@Test public void testMaxPooling3dBasic(){
  int nIn=3;
  int kH=2;
  int kW=2;
  int kD=2;
  int mb=3;
  int imgH=28;
  int imgW=28;
  int imgD=28;
  SameDiff sd=SameDiff.create();
  INDArray inArr=Nd4j.create(mb,nIn,imgD,imgH,imgW);
  SDVariable in=sd.var("in",inArr);
  Pooling3DConfig pooling3DConfig=Pooling3DConfig.builder().kH(kH).kW(kW).kD(kD).pH(0).pW(0).pD(0).sH(1).sW(1).sD(1).dH(1).dW(1).dD(1).isSameMode(false).build();
  SDVariable out=sd.maxPooling3d(in,pooling3DConfig);
  out=sd.tanh("out",out);
  INDArray outArr=sd.execAndEndResult();
  val outShape=outArr.shape();
  assertArrayEquals(new long[]{mb,nIn,27,27,27},outShape);
}
