@Test public void testMultithreading1() throws Exception {
  final List<MemoryWorkspace> workspaces=new CopyOnWriteArrayList<>();
  Nd4j.getWorkspaceManager().setDefaultWorkspaceConfiguration(basicConfiguration);
  Thread[] threads=new Thread[20];
  for (int x=0; x < threads.length; x++) {
    threads[x]=new Thread(new Runnable(){
      @Override public void run(){
        MemoryWorkspace workspace=Nd4j.getWorkspaceManager().getWorkspaceForCurrentThread();
        workspaces.add(workspace);
      }
    }
);
    threads[x].start();
  }
  for (int x=0; x < threads.length; x++) {
    threads[x].join();
  }
  for (int x=0; x < threads.length; x++) {
    for (int y=0; y < threads.length; y++) {
      if (x == y)       continue;
      assertFalse(workspaces.get(x) == workspaces.get(y));
    }
  }
  assertNull(Nd4j.getMemoryManager().getCurrentWorkspace());
}
