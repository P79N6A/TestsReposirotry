@Test public void testCBOWInference1() throws Exception {
  INDArray syn0=Nd4j.create(10,10).assign(0.01f);
  INDArray syn1=Nd4j.create(10,10).assign(0.02f);
  INDArray syn1Neg=Nd4j.create(10,10).assign(0.03f);
  INDArray expTable=Nd4j.create(10000).assign(0.5f);
  INDArray table=Nd4j.create(100000);
  double lr=0.025;
  INDArray syn0dup=syn0.dup();
  INDArray syn1dup=syn1.dup();
  INDArray syn1NegDup=syn1Neg.dup();
  INDArray inference=Nd4j.create(10).assign(0.04f);
  INDArray dup=inference.dup();
  INDArray expInference=Nd4j.create(10).assign(0.0395f);
  log.info("Empty vector: {}",Arrays.toString(inference.data().asFloat()));
  AggregateCBOW op=new AggregateCBOW(syn0,syn1,null,expTable,null,0,new int[]{0,1},new int[]{4,5},new int[]{1,1},0,0,10,lr,2L,10,0,false,inference);
  Nd4j.getExecutioner().exec(op);
  assertEquals(syn0dup,syn0);
  assertEquals(syn1dup,syn1);
  assertEquals(syn1NegDup,syn1Neg);
  assertNotEquals(dup,inference);
  log.info("Inferred vector: {}",Arrays.toString(inference.data().asFloat()));
  assertEquals(expInference,inference);
}
