@Test public void testCBOWGradient1() throws Exception {
  INDArray syn0=Nd4j.create(10,10).assign(0.01f);
  INDArray syn1=Nd4j.create(10,10).assign(0.02f);
  INDArray expTable=Nd4j.create(10000).assign(0.5f);
  double lr=0.025;
  INDArray syn0row_before_0=syn0.getRow(0).dup();
  INDArray syn0row_before_1=syn0.getRow(1).dup();
  INDArray syn0row_before_2=syn0.getRow(2).dup();
  AggregateCBOW op=new AggregateCBOW(syn0,syn1,null,expTable,null,0,new int[]{0,1,2},new int[]{4,5},new int[]{1,1},0,0,10,lr,2L,10);
  Nd4j.getExecutioner().exec(op);
  INDArray syn0row_0=syn0.getRow(0);
  INDArray syn0row_1=syn0.getRow(1);
  INDArray syn0row_2=syn0.getRow(2);
  INDArray syn1row_4=syn1.getRow(4);
  INDArray syn1row_5=syn1.getRow(5);
  INDArray syn1row_6=syn1.getRow(6);
  INDArray expSyn0row_0=Nd4j.create(10).assign(0.0095f);
  INDArray expSyn1row_4=Nd4j.create(10).assign(0.019875f);
  INDArray expSyn1row_6=Nd4j.create(10).assign(0.02f);
  assertNotEquals(syn0row_before_0,syn0row_0);
  assertNotEquals(syn0row_before_1,syn0row_1);
  assertNotEquals(syn0row_before_2,syn0row_2);
  log.info("syn1row4[0]: {}",syn1row_4.getFloat(0));
  assertEquals(expSyn0row_0,syn0row_0);
  assertEquals(expSyn0row_0,syn0row_1);
  assertEquals(expSyn0row_0,syn0row_2);
  assertEquals(expSyn1row_4,syn1row_4);
  assertEquals(expSyn1row_4,syn1row_5);
  assertEquals(expSyn1row_6,syn1row_6);
}
