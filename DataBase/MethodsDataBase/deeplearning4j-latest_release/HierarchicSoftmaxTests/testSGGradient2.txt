@Test public void testSGGradient2() throws Exception {
  INDArray syn0=Nd4j.create(10,10).assign(0.01f);
  INDArray syn1=Nd4j.create(10,10).assign(0.02f);
  INDArray syn1Neg=Nd4j.ones(10,10).assign(0.03f);
  INDArray expTable=Nd4j.create(10000).assign(0.5f);
  double lr=0.001;
  int idxSyn0=0;
  INDArray expSyn0=Nd4j.create(10).assign(0.01f);
  INDArray expSyn1_1=Nd4j.create(10).assign(0.020005);
  INDArray expSyn1_2=Nd4j.create(10).assign(0.019995f);
  INDArray syn0row=syn0.getRow(idxSyn0);
  log.info("syn1row2 before: {}",Arrays.toString(syn1.getRow(2).dup().data().asFloat()));
  AggregateSkipGram op=new AggregateSkipGram(syn0,syn1,null,expTable,null,idxSyn0,new int[]{1,2},new int[]{0,1},0,0,10,lr,1L,10);
  Nd4j.getExecutioner().exec(op);
  assertEquals(expSyn0,syn0row);
  assertArrayEquals(expSyn1_1.data().asFloat(),syn1.getRow(1).dup().data().asFloat(),1e-7f);
  log.info("syn1row2 after: {}",Arrays.toString(syn1.getRow(2).dup().data().asFloat()));
  assertArrayEquals(expSyn1_2.data().asFloat(),syn1.getRow(2).dup().data().asFloat(),1e-7f);
}
