@Test public void testAnalysisVsLocal() throws Exception {
  Schema s=new Schema.Builder().addColumnsDouble("%d",0,3).addColumnInteger("label").build();
  RecordReader rr=new CSVRecordReader();
  rr.initialize(new FileSplit(new ClassPathResource("iris.txt").getFile()));
  List<List<Writable>> toParallelize=new ArrayList<>();
  while (rr.hasNext()) {
    toParallelize.add(rr.next());
  }
  JavaRDD<List<Writable>> rdd=sc.parallelize(toParallelize).coalesce(1);
  rr.reset();
  DataAnalysis local=AnalyzeLocal.analyze(s,rr);
  DataAnalysis spark=AnalyzeSpark.analyze(s,rdd);
  assertEquals(local,spark);
  rr.reset();
  DataQualityAnalysis localQ=AnalyzeLocal.analyzeQuality(s,rr);
  DataQualityAnalysis sparkQ=AnalyzeSpark.analyzeQuality(s,rdd);
  assertEquals(localQ,sparkQ);
  rr.reset();
  Map<String,Set<Writable>> mapLocal=AnalyzeLocal.getUnique(s.getColumnNames(),s,rr);
  Map<String,List<Writable>> mapSpark=AnalyzeSpark.getUnique(s.getColumnNames(),s,rdd);
  assertEquals(mapLocal.keySet(),mapSpark.keySet());
  for (  String k : mapLocal.keySet()) {
    assertEquals(mapLocal.get(k),new HashSet<Writable>(mapSpark.get(k)));
  }
}
