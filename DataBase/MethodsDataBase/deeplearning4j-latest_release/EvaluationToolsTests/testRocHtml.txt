@Test public void testRocHtml(){
  DataSetIterator iter=new IrisDataSetIterator(150,150);
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().weightInit(WeightInit.XAVIER).list().layer(0,new DenseLayer.Builder().nIn(4).nOut(4).activation(Activation.TANH).build()).layer(1,new OutputLayer.Builder().nIn(4).nOut(2).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  NormalizerStandardize ns=new NormalizerStandardize();
  DataSet ds=iter.next();
  ns.fit(ds);
  ns.transform(ds);
  INDArray newLabels=Nd4j.create(150,2);
  newLabels.getColumn(0).assign(ds.getLabels().getColumn(0));
  newLabels.getColumn(0).addi(ds.getLabels().getColumn(1));
  newLabels.getColumn(1).assign(ds.getLabels().getColumn(2));
  ds.setLabels(newLabels);
  for (int i=0; i < 30; i++) {
    net.fit(ds);
  }
  for (  int numSteps : new int[]{20,0}) {
    ROC roc=new ROC(numSteps);
    iter.reset();
    INDArray f=ds.getFeatures();
    INDArray l=ds.getLabels();
    INDArray out=net.output(f);
    roc.eval(l,out);
    String str=EvaluationTools.rocChartToHtml(roc);
  }
}
