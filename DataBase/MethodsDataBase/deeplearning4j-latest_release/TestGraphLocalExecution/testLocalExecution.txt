@Test public void testLocalExecution() throws Exception {
  Map<String,Object> commands=new HashMap<>();
  commands.put(DataSetIteratorFactoryProvider.FACTORY_KEY,TestDataFactoryProviderMnist.class.getCanonicalName());
  ComputationGraphSpace mls=new ComputationGraphSpace.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).updater(new SgdSpace(new ContinuousParameterSpace(0.0001,0.1))).l2(new ContinuousParameterSpace(0.0001,0.01)).addInputs("in").setInputTypes(InputType.feedForward(4)).addLayer("layer0",new DenseLayerSpace.Builder().nIn(784).nOut(new IntegerParameterSpace(2,10)).activation(new DiscreteParameterSpace<>(Activation.RELU,Activation.TANH)).build(),"in").addLayer("out",new OutputLayerSpace.Builder().nOut(10).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build(),"layer0").setOutputs("out").numEpochs(3).pretrain(false).backprop(true).build();
  CandidateGenerator candidateGenerator=new RandomSearchGenerator(mls,commands);
  DataProvider dataProvider=new DataSetIteratorFactoryProvider();
  String modelSavePath=new File(System.getProperty("java.io.tmpdir"),"ArbiterDL4JTest\\").getAbsolutePath();
  File f=new File(modelSavePath);
  if (f.exists())   f.delete();
  f.mkdir();
  f.deleteOnExit();
  if (!f.exists())   throw new RuntimeException();
  OptimizationConfiguration configuration=new OptimizationConfiguration.Builder().candidateGenerator(candidateGenerator).dataProvider(dataProvider).modelSaver(new FileModelSaver(modelSavePath)).scoreFunction(ScoreFunctions.testSetLoss(true)).terminationConditions(new MaxTimeCondition(20,TimeUnit.SECONDS),new MaxCandidatesCondition(10)).build();
  IOptimizationRunner runner=new LocalOptimizationRunner(configuration,new ComputationGraphTaskCreator(new ClassificationEvaluator()));
  runner.execute();
  assertEquals(0,runner.numCandidatesFailed());
  assertTrue(runner.numCandidatesCompleted() > 0);
}
