@Test public void testReplicate1() throws Exception {
  INDArray array=Nd4j.create(new float[]{1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f,1f});
  INDArray exp=Nd4j.create(new float[]{2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f,2f});
  log.error("Array length: {}",array.length());
  int numDevices=Nd4j.getAffinityManager().getNumberOfDevices();
  final DeviceLocalNDArray locals=new DeviceLocalNDArray(array);
  Thread[] threads=new Thread[numDevices];
  for (int t=0; t < numDevices; t++) {
    threads[t]=new Thread(new Runnable(){
      @Override public void run(){
        locals.get().addi(1f);
        locals.get().addi(0f);
      }
    }
);
    threads[t].start();
  }
  for (int t=0; t < numDevices; t++) {
    threads[t].join();
  }
  for (int t=0; t < numDevices; t++) {
    exp.addi(0.0f);
    assertEquals(exp,locals.get(t));
  }
}
