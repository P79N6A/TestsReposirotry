@Test public void testMigrationMultiGpu_2() throws Exception {
  if (Nd4j.getAffinityManager().getNumberOfDevices() < 2)   return;
  val wsConf=WorkspaceConfiguration.builder().policyReset(ResetPolicy.ENDOFBUFFER_REACHED).policyAllocation(AllocationPolicy.STRICT).initialSize(50 * 1024L * 1024L).build();
  for (int x=0; x < 10; x++) {
    val list=new CopyOnWriteArrayList<INDArray>();
    val threads=new ArrayList<Thread>();
    for (int e=0; e < Nd4j.getAffinityManager().getNumberOfDevices(); e++) {
      val f=e;
      val t=new Thread(new Runnable(){
        @Override public void run(){
          for (int i=0; i < 100; i++) {
            try (val ws=Nd4j.getWorkspaceManager().getAndActivateWorkspace(wsConf,"id")){
              list.add(Nd4j.create(3,3).assign(1.0f));
              Nd4j.getExecutioner().commit();
            }
           }
        }
      }
);
      t.start();
      threads.add(t);
    }
    for (    val t : threads)     t.join();
    for (    val a : list) {
      assertTrue(a.isAttached());
      assertEquals(1.0f,a.meanNumber().floatValue(),1e-5);
    }
    System.gc();
  }
}
