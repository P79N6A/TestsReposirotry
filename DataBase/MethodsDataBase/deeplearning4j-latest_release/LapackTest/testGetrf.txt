@Test public void testGetrf(){
  int m=150;
  int n=100;
  float f[]=new float[m * n];
  for (int i=0; i < f.length; i++)   f[i]=rng.nextInt(5) + 1;
  long start=System.currentTimeMillis();
  INDArray IPIV=null;
  INDArray arr=null;
  final int N=100;
  for (int i=0; i < N; i++) {
    arr=Nd4j.create(f,new int[]{m,n},'f');
    IPIV=Nd4j.getBlasWrapper().lapack().getrf(arr);
  }
  INDArray L=Nd4j.getBlasWrapper().lapack().getLFactor(arr);
  INDArray U=Nd4j.getBlasWrapper().lapack().getUFactor(arr);
  INDArray P=Nd4j.getBlasWrapper().lapack().getPFactor(m,IPIV);
  INDArray orig=P.mmul(L).mmul(U);
  assertEquals("PxLxU is not the expected size - rows",orig.size(0),arr.size(0));
  assertEquals("PxLxU is not the expected size - cols",orig.size(1),arr.size(1));
  arr=Nd4j.create(f,new int[]{m,n},'f');
  for (int r=0; r < orig.size(0); r++) {
    for (int c=0; c < orig.size(1); c++) {
      assertEquals("Original & recombined matrices differ",orig.getFloat(r,c),arr.getFloat(r,c),0.001f);
    }
  }
}
