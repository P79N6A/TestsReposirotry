@Test public void testOptimizationAlgorithmsSearchBasic(){
  DataSetIterator iter=new IrisDataSetIterator(1,1);
  OptimizationAlgorithm[] oas=new OptimizationAlgorithm[]{OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,OptimizationAlgorithm.LINE_GRADIENT_DESCENT,OptimizationAlgorithm.CONJUGATE_GRADIENT,OptimizationAlgorithm.LBFGS};
  for (  OptimizationAlgorithm oa : oas) {
    System.out.println(oa);
    ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().optimizationAlgo(oa).graphBuilder().addInputs("input").addLayer("first",new DenseLayer.Builder().nIn(4).nOut(5).build(),"input").addLayer("output",new OutputLayer.Builder().nIn(5).nOut(3).activation(Activation.SOFTMAX).build(),"first").setOutputs("output").build();
    ComputationGraph net=new ComputationGraph(conf);
    net.init();
    net.fit(iter.next());
  }
}
