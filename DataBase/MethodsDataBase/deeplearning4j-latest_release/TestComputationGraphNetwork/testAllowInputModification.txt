@Test public void testAllowInputModification(){
  ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in1","in2").layer("0",new DenseLayer.Builder().nOut(10).build(),"in1").layer("1",new DenseLayer.Builder().nOut(10).build(),"in2").layer("2",new DenseLayer.Builder().nOut(10).build(),"0").layer("3",new DenseLayer.Builder().nOut(10).build(),"1").layer("4",new DenseLayer.Builder().nOut(10).build(),"1").layer("5",new DenseLayer.Builder().nOut(10).build(),"1").layer("6",new DenseLayer.Builder().nOut(10).build(),"2","3","4","5").setOutputs("6").setInputTypes(InputType.feedForward(10),InputType.feedForward(10)).build();
  ComputationGraph cg=new ComputationGraph(conf);
  cg.init();
  Map<String,Boolean> exp=new HashMap<>();
  exp.put("0",false);
  exp.put("1",false);
  exp.put("2",true);
  exp.put("3",false);
  exp.put("4",false);
  exp.put("5",true);
  exp.put("6",true);
  for (  String s : exp.keySet()) {
    boolean allowed=((org.deeplearning4j.nn.layers.feedforward.dense.DenseLayer)cg.getLayer(s)).isInputModificationAllowed();
    assertEquals(s,exp.get(s),allowed);
  }
}
