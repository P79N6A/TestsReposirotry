@Test public void testDispatchSimple(){
  AggregatorImpls.AggregableFirst<Integer> af=new AggregatorImpls.AggregableFirst<>();
  AggregatorImpls.AggregableSum<Integer> as=new AggregatorImpls.AggregableSum<>();
  AggregableMultiOp<Integer> multiaf=new AggregableMultiOp<>(Collections.<IAggregableReduceOp<Integer,Writable>>singletonList(af));
  AggregableMultiOp<Integer> multias=new AggregableMultiOp<>(Collections.<IAggregableReduceOp<Integer,Writable>>singletonList(as));
  DispatchOp<Integer,Writable> parallel=new DispatchOp<>(Arrays.<IAggregableReduceOp<Integer,List<Writable>>>asList(multiaf,multias));
  assertTrue(multiaf.getOperations().size() == 1);
  assertTrue(multias.getOperations().size() == 1);
  assertTrue(parallel.getOperations().size() == 2);
  for (int i=0; i < intList.size(); i++) {
    parallel.accept(Arrays.asList(intList.get(i),intList.get(i)));
  }
  List<Writable> res=parallel.get();
  assertTrue(res.get(1).toDouble() == 45D);
  assertTrue(res.get(0).toInt() == 1);
}
