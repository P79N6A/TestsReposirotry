@Test public void shouldComputeRotWithFullVector(){
  int[] cols={0,1,2,3};
  double[] values={1,2,3,4};
  INDArray sparseVec=Nd4j.createSparseCSR(values,cols,pointerB,pointerE,shape);
  INDArray vec=Nd4j.create(new double[]{1,2,3,4});
  Nd4j.getBlasWrapper().level1().rot(vec.length(),sparseVec,vec,1,2);
  INDArray expectedSparseVec=Nd4j.createSparseCSR(new double[]{3,6,9,12},new int[]{0,1,2,3},new int[]{0},new int[]{4},new long[]{1,4});
  INDArray expectedVec=Nd4j.create(new double[]{-1,-2,-3,-4});
  assertEquals(getFailureMessage(),expectedSparseVec.data(),sparseVec.data());
  assertEquals(getFailureMessage(),expectedVec,vec);
  if (expectedSparseVec.isSparse() && sparseVec.isSparse()) {
    BaseSparseNDArray vec2=((BaseSparseNDArray)expectedSparseVec);
    BaseSparseNDArray vecSparse2=((BaseSparseNDArray)sparseVec);
    assertEquals(getFailureMessage(),vec2.getVectorCoordinates(),vecSparse2);
  }
}
