@Test public void testEarlyStoppingListenersCG(){
  ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Sgd(0.001)).weightInit(WeightInit.XAVIER).graphBuilder().addInputs("in").layer("0",new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build(),"in").setOutputs("0").build();
  ComputationGraph net=new ComputationGraph(conf);
  TestEarlyStopping.TestListener tl=new TestEarlyStopping.TestListener();
  net.setListeners(tl);
  DataSetIterator irisIter=new IrisDataSetIterator(50,150);
  EarlyStoppingModelSaver<ComputationGraph> saver=new InMemoryModelSaver<>();
  EarlyStoppingConfiguration<ComputationGraph> esConf=new EarlyStoppingConfiguration.Builder<ComputationGraph>().epochTerminationConditions(new MaxEpochsTerminationCondition(5)).iterationTerminationConditions(new MaxTimeIterationTerminationCondition(1,TimeUnit.MINUTES)).scoreCalculator(new DataSetLossCalculator(irisIter,true)).modelSaver(saver).build();
  IEarlyStoppingTrainer<ComputationGraph> trainer=new EarlyStoppingGraphTrainer(esConf,net,irisIter);
  trainer.fit();
  assertEquals(5,tl.getCountEpochStart());
  assertEquals(5,tl.getCountEpochEnd());
  assertEquals(5 * 150 / 50,tl.getIterCount());
  assertEquals(4,tl.getMaxEpochStart());
  assertEquals(4,tl.getMaxEpochEnd());
}
