@Test public void testVAEScoreFunctionReconstructionProbSimple() throws Exception {
  for (  boolean logProb : new boolean[]{false,true}) {
    ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").layer("0",new VariationalAutoencoder.Builder().nIn(784).nOut(32).encoderLayerSizes(64).decoderLayerSizes(64).reconstructionDistribution(new BernoulliReconstructionDistribution(Activation.SIGMOID)).build(),"in").setOutputs("0").pretrain(true).backprop(false).build();
    ComputationGraph net=new ComputationGraph(conf);
    net.init();
    DataSetIterator iter=new MnistDataSetIterator(32,false,12345);
    List<DataSet> l=new ArrayList<>();
    for (int i=0; i < 10; i++) {
      DataSet ds=iter.next();
      l.add(new DataSet(ds.getFeatures(),ds.getFeatures()));
    }
    iter=new ExistingDataSetIterator(l);
    EarlyStoppingModelSaver<ComputationGraph> saver=new InMemoryModelSaver<>();
    EarlyStoppingConfiguration<ComputationGraph> esConf=new EarlyStoppingConfiguration.Builder<ComputationGraph>().epochTerminationConditions(new MaxEpochsTerminationCondition(5)).iterationTerminationConditions(new MaxTimeIterationTerminationCondition(1,TimeUnit.MINUTES)).scoreCalculator(new VAEReconProbScoreCalculator(iter,20,logProb)).modelSaver(saver).build();
    EarlyStoppingGraphTrainer trainer=new EarlyStoppingGraphTrainer(esConf,net,iter);
    EarlyStoppingResult<ComputationGraph> result=trainer.fit();
    assertNotNull(result.getBestModel());
    assertTrue(result.getBestModelScore() > 0.0);
  }
}
