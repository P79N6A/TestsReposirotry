@Test public void testDependencies4() throws Exception {
  INDArray arrayWrite=Nd4j.create(new float[]{1f,2f,3f});
  INDArray array=Nd4j.create(new float[]{1f,2f,3f});
  String arrayContents=array.toString();
  AllocationPoint point=allocator.getAllocationPoint(array);
  AllocationPoint pointWrite=allocator.getAllocationPoint(arrayWrite);
  assertPointHasNoDependencies(point);
  controller.cutTail();
  CudaContext context=controller.prepareAction(arrayWrite,array);
  controller.registerAction(context,arrayWrite,array);
  assertTrue(controller.hasActiveReads(point));
  assertFalse(controller.hasActiveReads(pointWrite));
  assertNotEquals(-1,controller.hasActiveWrite(pointWrite));
  Configuration configuration=CudaEnvironment.getInstance().getConfiguration();
  controller.sweepTail();
  assertTrue(controller.hasActiveReads(point));
  assertFalse(controller.hasActiveReads(pointWrite));
  assertNotEquals(-1,controller.hasActiveWrite(pointWrite));
  controller.sweepTail();
  assertTrue(controller.hasActiveReads(point));
  assertFalse(controller.hasActiveReads(pointWrite));
  assertNotEquals(-1,controller.hasActiveWrite(pointWrite));
  for (int i=0; i < configuration.getCommandQueueLength(); i++)   controller.sweepTail();
  assertPointHasNoDependencies(point);
  assertPointHasNoDependencies(pointWrite);
}
