@Test public void testAUCPrecisionRecall(){
  for (  int steps : new int[]{10,0}) {
    String msg="Steps = " + steps;
    ROC r=new ROC(steps);
    INDArray zero=Nd4j.zeros(1);
    INDArray one=Nd4j.ones(1);
    r.eval(zero,Nd4j.create(new double[]{0.25}));
    r.eval(one,Nd4j.create(new double[]{0.33}));
    r.eval(one,Nd4j.create(new double[]{0.66}));
    PrecisionRecallCurve prc=r.getPrecisionRecallCurve();
    double auprc=r.calculateAUCPR();
    assertEquals(msg,1.0,auprc,1e-6);
    r=new ROC(steps);
    r.eval(one,Nd4j.create(new double[]{0.33}));
    r.eval(zero,Nd4j.create(new double[]{0.5}));
    r.eval(one,Nd4j.create(new double[]{0.66}));
    double precision;
    if (steps == 0) {
      precision=1e-8;
    }
 else {
      precision=1e-4;
    }
    assertEquals(msg,0.7916666666667,r.calculateAUCPR(),precision);
  }
}
