@Test public void testRocTimeSeriesNoMasking(){
  INDArray predictions2d=Nd4j.create(new double[][]{{1.0,0.001},{0.899,0.101},{0.799,0.201},{0.699,0.301},{0.599,0.401},{0.499,0.501},{0.399,0.601},{0.299,0.701},{0.199,0.801},{0.099,0.901}});
  INDArray actual2d=Nd4j.create(new double[][]{{1,0},{1,0},{1,0},{1,0},{1,0},{0,1},{0,1},{0,1},{0,1},{0,1}});
  INDArray predictions3d=Nd4j.create(2,2,5);
  INDArray firstTSp=predictions3d.get(NDArrayIndex.point(0),NDArrayIndex.all(),NDArrayIndex.all()).transpose();
  assertArrayEquals(new long[]{5,2},firstTSp.shape());
  firstTSp.assign(predictions2d.get(NDArrayIndex.interval(0,5),NDArrayIndex.all()));
  INDArray secondTSp=predictions3d.get(NDArrayIndex.point(1),NDArrayIndex.all(),NDArrayIndex.all()).transpose();
  assertArrayEquals(new long[]{5,2},secondTSp.shape());
  secondTSp.assign(predictions2d.get(NDArrayIndex.interval(5,10),NDArrayIndex.all()));
  INDArray labels3d=Nd4j.create(2,2,5);
  INDArray firstTS=labels3d.get(NDArrayIndex.point(0),NDArrayIndex.all(),NDArrayIndex.all()).transpose();
  assertArrayEquals(new long[]{5,2},firstTS.shape());
  firstTS.assign(actual2d.get(NDArrayIndex.interval(0,5),NDArrayIndex.all()));
  INDArray secondTS=labels3d.get(NDArrayIndex.point(1),NDArrayIndex.all(),NDArrayIndex.all()).transpose();
  assertArrayEquals(new long[]{5,2},secondTS.shape());
  secondTS.assign(actual2d.get(NDArrayIndex.interval(5,10),NDArrayIndex.all()));
  for (  int steps : new int[]{10,0}) {
    ROC rocExp=new ROC(steps);
    rocExp.eval(actual2d,predictions2d);
    ROC rocAct=new ROC(steps);
    rocAct.evalTimeSeries(labels3d,predictions3d);
    assertEquals(rocExp.calculateAUC(),rocAct.calculateAUC(),1e-6);
    assertEquals(rocExp.calculateAUCPR(),rocAct.calculateAUCPR(),1e-6);
    assertEquals(rocExp.getRocCurve(),rocAct.getRocCurve());
  }
}
