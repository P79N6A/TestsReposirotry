@Test public void testFlattenFloatArray(){
  assertArrayEquals(new float[0],ArrayUtil.flattenFloatArray(new float[0]),0.0f);
  Random r=new Random(12345L);
  float[] f1=new float[10];
  for (int i=0; i < f1.length; i++)   f1[i]=r.nextFloat();
  assertArrayEquals(f1,ArrayUtil.flattenFloatArray(f1),0.0f);
  float[][] f2=new float[5][10];
  for (int i=0; i < 5; i++)   for (int j=0; j < 10; j++)   f2[i][j]=r.nextFloat();
  assertArrayEquals(ArrayUtil.flatten(f2),ArrayUtil.flattenFloatArray(f2),0.0f);
  float[][][] f3=new float[5][10][15];
  float[] exp3=new float[5 * 10 * 15];
  int c=0;
  for (int i=0; i < 5; i++) {
    for (int j=0; j < 10; j++) {
      for (int k=0; k < 15; k++) {
        float d=r.nextFloat();
        exp3[c++]=d;
        f3[i][j][k]=d;
      }
    }
  }
  assertArrayEquals(exp3,ArrayUtil.flattenFloatArray(f3),0.0f);
  float[][][][] f4=new float[3][5][7][9];
  float[] exp4=new float[3 * 5 * 7* 9];
  c=0;
  for (int i=0; i < 3; i++) {
    for (int j=0; j < 5; j++) {
      for (int k=0; k < 7; k++) {
        for (int l=0; l < 9; l++) {
          float d=r.nextFloat();
          exp4[c++]=d;
          f4[i][j][k][l]=d;
        }
      }
    }
  }
  assertArrayEquals(exp4,ArrayUtil.flattenFloatArray(f4),0.0f);
}
