@Test public void testFlattenDoubleArray(){
  assertArrayEquals(new double[0],ArrayUtil.flattenDoubleArray(new double[0]),0.0);
  Random r=new Random(12345L);
  double[] d1=new double[10];
  for (int i=0; i < d1.length; i++)   d1[i]=r.nextDouble();
  assertArrayEquals(d1,ArrayUtil.flattenDoubleArray(d1),0.0);
  double[][] d2=new double[5][10];
  for (int i=0; i < 5; i++)   for (int j=0; j < 10; j++)   d2[i][j]=r.nextDouble();
  assertArrayEquals(ArrayUtil.flatten(d2),ArrayUtil.flattenDoubleArray(d2),0.0);
  double[][][] d3=new double[5][10][15];
  double[] exp3=new double[5 * 10 * 15];
  int c=0;
  for (int i=0; i < 5; i++) {
    for (int j=0; j < 10; j++) {
      for (int k=0; k < 15; k++) {
        double d=r.nextDouble();
        exp3[c++]=d;
        d3[i][j][k]=d;
      }
    }
  }
  assertArrayEquals(exp3,ArrayUtil.flattenDoubleArray(d3),0.0);
  double[][][][] d4=new double[3][5][7][9];
  double[] exp4=new double[3 * 5 * 7* 9];
  c=0;
  for (int i=0; i < 3; i++) {
    for (int j=0; j < 5; j++) {
      for (int k=0; k < 7; k++) {
        for (int l=0; l < 9; l++) {
          double d=r.nextDouble();
          exp4[c++]=d;
          d4[i][j][k][l]=d;
        }
      }
    }
  }
  assertArrayEquals(exp4,ArrayUtil.flattenDoubleArray(d4),0.0);
}
