@Test public void testAllocation1() throws Exception {
  INDArray exp=Nd4j.create(new float[]{1f,2f,3f,4f,5f});
  Nd4jWorkspace workspace=(Nd4jWorkspace)Nd4j.getWorkspaceManager().getAndActivateWorkspace(basicConfig,"TestAllocation1");
  Nd4j.getMemoryManager().setCurrentWorkspace(workspace);
  assertNotEquals(null,Nd4j.getMemoryManager().getCurrentWorkspace());
  assertEquals(0,workspace.getHostOffset());
  INDArray array=Nd4j.create(new float[]{1f,2f,3f,4f,5f});
  long reqMem=5 * Nd4j.sizeOfDataType();
  assertEquals(reqMem + reqMem % 8,workspace.getHostOffset());
  assertEquals(exp,array);
  double sum=array.sumNumber().doubleValue();
  assertEquals(15.0,sum,0.01);
  assertEquals(1.0,array.getFloat(0),0.01);
  assertEquals(2.0,array.getFloat(1),0.01);
  assertEquals(3.0,array.getFloat(2),0.01);
  assertEquals(4.0,array.getFloat(3),0.01);
  assertEquals(5.0,array.getFloat(4),0.01);
  assertEquals(1.0,array.getDouble(0),0.01);
  assertEquals(2.0,array.getDouble(1),0.01);
  assertEquals(3.0,array.getDouble(2),0.01);
  assertEquals(4.0,array.getDouble(3),0.01);
  assertEquals(5.0,array.getDouble(4),0.01);
  INDArray array2=Nd4j.create(new float[]{5f,4f,3f,2f,1f});
  sum=array2.sumNumber().doubleValue();
  assertEquals(15.0,sum,0.01);
  array.addi(array2);
  sum=array.sumNumber().doubleValue();
  assertEquals(30.0,sum,0.01);
  assertEquals(6.0,array.getFloat(0),0.01);
  assertEquals(6.0,array.getFloat(1),0.01);
  assertEquals(6.0,array.getFloat(2),0.01);
  assertEquals(6.0,array.getFloat(3),0.01);
  assertEquals(6.0,array.getFloat(4),0.01);
  workspace.close();
}
