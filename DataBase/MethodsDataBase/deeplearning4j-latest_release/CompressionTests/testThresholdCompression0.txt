@Ignore @Test public void testThresholdCompression0() throws Exception {
  INDArray initial=Nd4j.rand(new int[]{1,150000000},119L);
  log.info("DTYPE: {}",Nd4j.dataType());
  WorkspaceConfiguration configuration=WorkspaceConfiguration.builder().initialSize(2 * 1024L * 1024L* 1024L).overallocationLimit(0).policyAllocation(AllocationPolicy.STRICT).policyLearning(LearningPolicy.NONE).policyReset(ResetPolicy.BLOCK_LEFT).build();
  try (MemoryWorkspace ws=Nd4j.getWorkspaceManager().getAndActivateWorkspace(configuration,"IIIA")){
    INDArray compressed=Nd4j.getExecutioner().thresholdEncode(initial.dup(),0.999);
  }
   long timeS=0;
  for (int i=0; i < 100; i++) {
    try (MemoryWorkspace ws=Nd4j.getWorkspaceManager().getAndActivateWorkspace(configuration,"IIIA")){
      INDArray d=initial.dup();
      long time1=System.nanoTime();
      INDArray compressed=Nd4j.getExecutioner().thresholdEncode(d,0.999);
      long time2=System.nanoTime();
      timeS+=(time2 - time1) / 1000;
    }
   }
  log.info("Elapsed time: {} us",(timeS) / 100);
}
