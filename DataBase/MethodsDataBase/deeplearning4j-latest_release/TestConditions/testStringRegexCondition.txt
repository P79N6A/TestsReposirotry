@Test public void testStringRegexCondition(){
  Schema schema=TestTransforms.getSchema(ColumnType.String);
  Condition condition=new StringRegexColumnCondition("column","abc.*");
  condition.setInputSchema(schema);
  assertTrue(condition.condition(Collections.singletonList((Writable)new Text("abc"))));
  assertTrue(condition.condition(Collections.singletonList((Writable)new Text("abcdefghijk"))));
  assertTrue(condition.condition(Collections.singletonList((Writable)new Text("abc more text \tetc"))));
  assertFalse(condition.condition(Collections.singletonList((Writable)new Text("ab"))));
  assertFalse(condition.condition(Collections.singletonList((Writable)new Text("also doesn't match"))));
  assertFalse(condition.condition(Collections.singletonList((Writable)new Text(" abc"))));
  schema=TestTransforms.getSchema(ColumnType.Integer);
  condition=new StringRegexColumnCondition("column","123\\d*");
  condition.setInputSchema(schema);
  assertTrue(condition.condition(Collections.singletonList((Writable)new IntWritable(123))));
  assertTrue(condition.condition(Collections.singletonList((Writable)new IntWritable(123456))));
  assertFalse(condition.condition(Collections.singletonList((Writable)new IntWritable(-123))));
  assertFalse(condition.condition(Collections.singletonList((Writable)new IntWritable(456789))));
}
