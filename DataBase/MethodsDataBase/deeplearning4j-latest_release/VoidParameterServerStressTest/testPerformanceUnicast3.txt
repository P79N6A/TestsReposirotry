/** 
 * This test checks for single Shard scenario, when Shard is also a Client
 * @throws Exception
 */
@Test(timeout=60000L) public void testPerformanceUnicast3() throws Exception {
  VoidConfiguration voidConfiguration=VoidConfiguration.builder().numberOfShards(1).shardAddresses(Arrays.asList("127.0.0.1:49823")).build();
  voidConfiguration.setUnicastControllerPort(49823);
  Transport transport=new RoutedTransport();
  transport.setIpAndPort("127.0.0.1",Integer.valueOf("49823"));
  VoidParameterServer parameterServer=new VoidParameterServer(NodeRole.SHARD);
  parameterServer.setShardIndex((short)0);
  parameterServer.init(voidConfiguration,transport,new CbowTrainer());
  parameterServer.initializeSeqVec(100,NUM_WORDS,123L,100,true,false);
  final List<Long> times=new ArrayList<>();
  log.info("Starting loop...");
  for (int i=0; i < 200; i++) {
    Frame<CbowRequestMessage> frame=new Frame<>(BasicSequenceProvider.getInstance().getNextValue());
    for (int f=0; f < 128; f++) {
      frame.stackMessage(getCRM());
    }
    long time1=System.nanoTime();
    parameterServer.execDistributed(frame);
    long time2=System.nanoTime();
    times.add(time2 - time1);
    if (i % 50 == 0)     log.info("{} frames passed...",i);
  }
  Collections.sort(times);
  log.info("p50: {} us",times.get(times.size() / 2) / 1000);
  parameterServer.shutdown();
}
