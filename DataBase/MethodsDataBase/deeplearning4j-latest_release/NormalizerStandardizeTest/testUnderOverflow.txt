@Test public void testUnderOverflow(){
  double tolerancePerc=1;
  double toleranceAbs=0.0005;
  int nSamples=1000;
  int bSize=10;
  int x=-1000000, y=1000000;
  double z=1000000;
  INDArray featureX=Nd4j.rand(nSamples,1).mul(1).add(x);
  INDArray featureY=Nd4j.rand(nSamples,1).mul(2).add(y);
  INDArray featureZ=Nd4j.rand(nSamples,1).mul(3).add(z);
  INDArray featureSet=Nd4j.concat(1,featureX,featureY,featureZ);
  INDArray labelSet=Nd4j.zeros(nSamples,1);
  DataSet sampleDataSet=new DataSet(featureSet,labelSet);
  DataSetIterator sampleIter=new TestDataSetIterator(sampleDataSet,bSize);
  INDArray theoreticalMean=Nd4j.create(new double[]{x,y,z});
  NormalizerStandardize myNormalizer=new NormalizerStandardize();
  myNormalizer.fit(sampleIter);
  INDArray meanDelta=Transforms.abs(theoreticalMean.sub(myNormalizer.getMean()));
  INDArray meanDeltaPerc=meanDelta.mul(100).div(theoreticalMean);
  assertTrue(meanDeltaPerc.max(1).getDouble(0,0) < tolerancePerc);
  myNormalizer.transform(sampleDataSet);
}
