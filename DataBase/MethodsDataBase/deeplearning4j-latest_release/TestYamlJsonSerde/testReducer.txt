@Test public void testReducer(){
  IAssociativeReducer[] reducers=new IAssociativeReducer[]{new Reducer.Builder(ReduceOp.TakeFirst).keyColumns("KeyCol").stdevColumns("Stdev").minColumns("min").countUniqueColumns("B").build()};
  for (  IAssociativeReducer r : reducers) {
    String yaml=y.serialize(r);
    String json=j.serialize(r);
    IAssociativeReducer t2=y.deserializeReducer(yaml);
    IAssociativeReducer t3=j.deserializeReducer(json);
    assertEquals(r,t2);
    assertEquals(r,t3);
  }
  String arrAsYaml=y.serialize(reducers);
  String arrAsJson=j.serialize(reducers);
  String listAsYaml=y.serializeReducerList(Arrays.asList(reducers));
  String listAsJson=j.serializeReducerList(Arrays.asList(reducers));
  List<IAssociativeReducer> lFromYaml=y.deserializeReducerList(listAsYaml);
  List<IAssociativeReducer> lFromJson=j.deserializeReducerList(listAsJson);
  assertEquals(Arrays.asList(reducers),y.deserializeReducerList(arrAsYaml));
  assertEquals(Arrays.asList(reducers),j.deserializeReducerList(arrAsJson));
  assertEquals(Arrays.asList(reducers),lFromYaml);
  assertEquals(Arrays.asList(reducers),lFromJson);
}
