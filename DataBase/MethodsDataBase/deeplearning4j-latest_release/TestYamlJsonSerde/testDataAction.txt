@Test public void testDataAction(){
  DataAction[] dataActions=new DataAction[]{new DataAction(new CategoricalToIntegerTransform("Col")),new DataAction(new ConditionFilter(new DoubleColumnCondition("Col",ConditionOp.Equal,1))),new DataAction(new ConvertToSequence("KeyCol",new NumericalColumnComparator("Col",true))),new DataAction(new ConvertFromSequence()),new DataAction(new SequenceSplitTimeSeparation("TimeCol",1,TimeUnit.HOURS)),new DataAction(new Reducer.Builder(ReduceOp.TakeFirst).build()),new DataAction(new CalculateSortedRank("NewCol","SortCol",new DoubleWritableComparator()))};
  for (  DataAction f : dataActions) {
    String yaml=y.serialize(f);
    String json=j.serialize(f);
    DataAction t2=y.deserializeDataAction(yaml);
    DataAction t3=j.deserializeDataAction(json);
    assertEquals(f,t2);
    assertEquals(f,t3);
  }
  String arrAsYaml=y.serialize(dataActions);
  String arrAsJson=j.serialize(dataActions);
  String listAsYaml=y.serializeDataActionList(Arrays.asList(dataActions));
  String listAsJson=j.serializeDataActionList(Arrays.asList(dataActions));
  List<DataAction> lFromYaml=y.deserializeDataActionList(listAsYaml);
  List<DataAction> lFromJson=j.deserializeDataActionList(listAsJson);
  assertEquals(Arrays.asList(dataActions),y.deserializeDataActionList(arrAsYaml));
  assertEquals(Arrays.asList(dataActions),j.deserializeDataActionList(arrAsJson));
  assertEquals(Arrays.asList(dataActions),lFromYaml);
  assertEquals(Arrays.asList(dataActions),lFromJson);
}
