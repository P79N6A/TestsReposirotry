@Test public void allMinority(){
  float[] someTargets=new float[]{0.01f,0.1f,0.5f};
  DataSet d=allMinorityDataSet(false);
  DataSet dToPreProcess;
  for (int i=0; i < someTargets.length; i++) {
    UnderSamplingByMaskingPreProcessor preProcessor=new UnderSamplingByMaskingPreProcessor(someTargets[i],shortSeq / 2);
    dToPreProcess=d.copy();
    preProcessor.preProcess(dToPreProcess);
    assertEquals(Nd4j.ones(minibatchSize,shortSeq),dToPreProcess.getLabelsMaskArray());
    preProcessor.overrideMinorityDefault();
    preProcessor.donotMaskAllMajorityWindows();
    dToPreProcess=d.copy();
    preProcessor.preProcess(dToPreProcess);
    INDArray percentagesNow=dToPreProcess.getLabelsMaskArray().sum(1).div(shortSeq);
    assertTrue(Nd4j.valueArrayOf(percentagesNow.shape(),1 - someTargets[i]).equalsWithEps(percentagesNow,tolerancePerc));
  }
}
