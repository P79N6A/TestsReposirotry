@Test public void testEmbeddingLayer(){
  Activation[] actFns=new Activation[]{Activation.SOFTSIGN,Activation.RELU,Activation.LEAKYRELU};
  EmbeddingLayerSpace els=new EmbeddingLayerSpace.Builder().activation(new DiscreteParameterSpace<>(actFns)).nIn(10).nOut(new IntegerParameterSpace(10,20)).build();
  List<ParameterSpace> list=els.collectLeaves();
  int k=0;
  for (int j=0; j < list.size(); j++) {
    if (list.get(j).numParameters() > 0) {
      list.get(j).setIndices(k++);
    }
  }
  int nParam=els.numParameters();
  assertEquals(2,nParam);
  Random r=new Random(12345);
  for (int i=0; i < 20; i++) {
    double[] d=new double[nParam];
    for (int j=0; j < d.length; j++) {
      d[j]=r.nextDouble();
    }
    EmbeddingLayer el=els.getValue(d);
    IActivation activation=el.getActivationFn();
    long nOut=el.getNOut();
    System.out.println(activation + "\t" + nOut);
    assertTrue(containsActivationFunction(actFns,activation));
    assertTrue(nOut >= 10 && nOut <= 20);
  }
}
