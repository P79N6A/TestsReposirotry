@Test public void testConvDouble_1(){
  Nd4j.setDataType(DataBuffer.Type.DOUBLE);
  val exp=Nd4j.linspace(-5,5,11);
  DataBuffer.Type[] types=null;
  if (Nd4j.getExecutioner().type() == OpExecutioner.ExecutionerType.CUDA) {
    types=new DataBuffer.Type[]{DataBuffer.Type.DOUBLE,DataBuffer.Type.FLOAT,DataBuffer.Type.HALF};
  }
 else {
    types=new DataBuffer.Type[]{DataBuffer.Type.DOUBLE,DataBuffer.Type.FLOAT};
  }
  for (  val t : types) {
    Nd4j.setDataType(t);
    val arr=Nd4j.linspace(-5,5,11);
    val arr2=arr.convertToDoubles();
    Nd4j.setDataType(DataBuffer.Type.DOUBLE);
    assertEquals("Fail with dtype [" + t + "]",exp,arr2);
  }
}
