@Test public void testEmbeddingLayerConfig(){
  for (  boolean hasBias : new boolean[]{true,false}) {
    MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().activation(Activation.TANH).list().layer(0,new EmbeddingLayer.Builder().hasBias(hasBias).nIn(10).nOut(5).build()).layer(1,new OutputLayer.Builder().nIn(5).nOut(4).activation(Activation.SOFTMAX).build()).build();
    MultiLayerNetwork net=new MultiLayerNetwork(conf);
    net.init();
    Layer l0=net.getLayer(0);
    assertEquals(org.deeplearning4j.nn.layers.feedforward.embedding.EmbeddingLayer.class,l0.getClass());
    assertEquals(10,((FeedForwardLayer)l0.conf().getLayer()).getNIn());
    assertEquals(5,((FeedForwardLayer)l0.conf().getLayer()).getNOut());
    INDArray weights=l0.getParam(DefaultParamInitializer.WEIGHT_KEY);
    INDArray bias=l0.getParam(DefaultParamInitializer.BIAS_KEY);
    assertArrayEquals(new long[]{10,5},weights.shape());
    if (hasBias) {
      assertArrayEquals(new long[]{1,5},bias.shape());
    }
  }
}
