@Test public void testProvider3() throws Exception {
  LinkedBlockingQueue queue=new LinkedBlockingQueue();
  BasicInferenceObserver observer=new BasicInferenceObserver();
  ParallelInference.ObservablesProvider provider=new ParallelInference.ObservablesProvider(10000000L,2,queue);
  InferenceObservable observable1=provider.setInput(observer,Nd4j.create(100).assign(1.0));
  InferenceObservable observable2=provider.setInput(observer,Nd4j.create(100).assign(2.0));
  InferenceObservable observable3=provider.setInput(observer,Nd4j.create(100).assign(3.0));
  assertNotEquals(null,observable1);
  assertNotEquals(null,observable3);
  assertTrue(observable1 == observable2);
  assertTrue(observable1 != observable3);
  List<Pair<INDArray[],INDArray[]>> l=observable1.getInputBatches();
  assertEquals(1,l.size());
  INDArray[] input=l.get(0).getFirst();
  assertNull(l.get(0).getSecond());
  assertEquals(1.0f,input[0].tensorAlongDimension(0,1).meanNumber().floatValue(),0.001);
  assertEquals(2.0f,input[0].tensorAlongDimension(1,1).meanNumber().floatValue(),0.001);
  l=observable3.getInputBatches();
  assertEquals(1,l.size());
  input=l.get(0).getFirst();
  assertNull(l.get(0).getSecond());
  assertEquals(3.0f,input[0].tensorAlongDimension(0,1).meanNumber().floatValue(),0.001);
}
