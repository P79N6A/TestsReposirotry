@Test public void testElementWiseVertexForwardSubtract(){
  int batchsz=24;
  int featuresz=17;
  ComputationGraphConfiguration cgc=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("input1","input2").addLayer("denselayer",new DenseLayer.Builder().nIn(featuresz).nOut(1).activation(Activation.IDENTITY).build(),"input1").addVertex("elementwiseSubtract",new ElementWiseVertex(ElementWiseVertex.Op.Subtract),"input1","input2").addLayer("Subtract",new ActivationLayer.Builder().activation(Activation.IDENTITY).build(),"elementwiseSubtract").setOutputs("Subtract","denselayer").build();
  ComputationGraph cg=new ComputationGraph(cgc);
  cg.init();
  INDArray input1=Nd4j.rand(batchsz,featuresz);
  INDArray input2=Nd4j.rand(batchsz,featuresz);
  INDArray target=input1.dup().subi(input2);
  INDArray output=cg.output(input1,input2)[0];
  INDArray squared=output.sub(target);
  double rms=Math.sqrt(squared.mul(squared).sumNumber().doubleValue());
  Assert.assertEquals(0.0,rms,this.epsilon);
}
