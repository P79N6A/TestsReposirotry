/** 
 * Testing relocate
 * @throws Exception
 */
@Test public void testJointIterator3() throws Exception {
  DataSetIterator iteratorA=new SimpleVariableGenerator(119,200,32,100,10);
  DataSetIterator iteratorB=new SimpleVariableGenerator(119,100,32,100,10);
  JointParallelDataSetIterator jpdsi=new JointParallelDataSetIterator.Builder(InequalityHandling.RELOCATE).addSourceIterator(iteratorA).addSourceIterator(iteratorB).build();
  int cnt=0;
  int example=0;
  while (jpdsi.hasNext()) {
    DataSet ds=jpdsi.next();
    assertNotNull("Failed on iteration " + cnt,ds);
    assertEquals("Failed on iteration " + cnt,(double)example,ds.getFeatures().meanNumber().doubleValue(),0.001);
    assertEquals("Failed on iteration " + cnt,(double)example + 0.5,ds.getLabels().meanNumber().doubleValue(),0.001);
    cnt++;
    if (cnt < 200) {
      if (cnt % 2 == 0)       example++;
    }
 else     example++;
  }
  assertEquals(300,cnt);
  assertEquals(200,example);
}
