@Test @Ignore public void testVariableLengthTS(){
  Schema.Builder schema=new Schema.Builder().addColumnString("str").addColumnInteger("int").addColumnDouble("dbl");
  List<List<Writable>> firstSeq=Arrays.asList(Arrays.<Writable>asList(new Text("00"),new IntWritable(0),new DoubleWritable(2.0)),Arrays.<Writable>asList(new Text("01"),new IntWritable(1),new DoubleWritable(2.1)),Arrays.<Writable>asList(new Text("02"),new IntWritable(2),new DoubleWritable(2.2)));
  List<List<Writable>> secondSeq=Arrays.asList(Arrays.<Writable>asList(new Text("10"),new IntWritable(10),new DoubleWritable(12.0)),Arrays.<Writable>asList(new Text("11"),new IntWritable(11),new DoubleWritable(12.1)));
  List<List<List<Writable>>> sequences=Arrays.asList(firstSeq,secondSeq);
  List<FieldVector> fieldVectors=ArrowConverter.toArrowColumnsTimeSeries(bufferAllocator,schema.build(),sequences);
  assertEquals(3,fieldVectors.size());
  int timeSeriesStride=-1;
  ArrowWritableRecordTimeSeriesBatch arrowWritableRecordTimeSeriesBatch=new ArrowWritableRecordTimeSeriesBatch(fieldVectors,schema.build(),timeSeriesStride);
  List<List<List<Writable>>> asList=arrowWritableRecordTimeSeriesBatch.toArrayList();
  assertEquals(sequences,asList);
}
