@Test public void testBasicIndexing(){
  Schema.Builder schema=new Schema.Builder();
  for (int i=0; i < 3; i++) {
    schema.addColumnInteger(String.valueOf(i));
  }
  List<List<Writable>> timeStep=Arrays.asList(Arrays.<Writable>asList(new IntWritable(0),new IntWritable(1),new IntWritable(2)),Arrays.<Writable>asList(new IntWritable(1),new IntWritable(2),new IntWritable(3)),Arrays.<Writable>asList(new IntWritable(4),new IntWritable(5),new IntWritable(6)));
  int numTimeSteps=5;
  List<List<List<Writable>>> timeSteps=new ArrayList<>(numTimeSteps);
  for (int i=0; i < numTimeSteps; i++) {
    timeSteps.add(timeStep);
  }
  List<FieldVector> fieldVectors=ArrowConverter.toArrowColumnsTimeSeries(bufferAllocator,schema.build(),timeSteps);
  assertEquals(3,fieldVectors.size());
  for (  FieldVector fieldVector : fieldVectors) {
    for (int i=0; i < fieldVector.getValueCount(); i++) {
      assertFalse("Index " + i + " was null for field vector "+ fieldVector,fieldVector.isNull(i));
    }
  }
  ArrowWritableRecordTimeSeriesBatch arrowWritableRecordTimeSeriesBatch=new ArrowWritableRecordTimeSeriesBatch(fieldVectors,schema.build(),timeStep.size() * timeStep.get(0).size());
  assertEquals(timeSteps,arrowWritableRecordTimeSeriesBatch.toArrayList());
}
