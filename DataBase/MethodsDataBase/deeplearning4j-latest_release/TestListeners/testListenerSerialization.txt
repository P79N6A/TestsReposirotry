@Test public void testListenerSerialization() throws Exception {
  List<TrainingListener> listeners=new ArrayList<>();
  listeners.add(new ScoreIterationListener());
  listeners.add(new PerformanceListener(1));
  listeners.add(new TimeIterationListener(10000));
  listeners.add(new ComposableIterationListener(new ScoreIterationListener(),new PerformanceListener(1)));
  listeners.add(new CheckpointListener.Builder(tempDir.newFolder()).keepAll().saveEveryNIterations(3).build());
  DataSetIterator iter=new IrisDataSetIterator(10,150);
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().list().layer(new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  net.setListeners(listeners);
  net.fit(iter);
  List<TrainingListener> listeners2=new ArrayList<>();
  for (  TrainingListener il : listeners) {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    ObjectOutputStream oos=new ObjectOutputStream(baos);
    oos.writeObject(il);
    byte[] bytes=baos.toByteArray();
    ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(bytes));
    TrainingListener il2=(TrainingListener)ois.readObject();
    listeners2.add(il2);
  }
  net.setListeners(listeners2);
  net.fit(iter);
}
