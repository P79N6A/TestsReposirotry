@Test public void testAdd(){
  Trie trie=new Trie();
  Trie.Node node=trie.new Node('a');
  node.add("");
  assertEquals(0,node.getChildren().size());
  node=trie.new Node('a');
  node.add("b");
  assertEquals(1,node.getChildren().size());
  assertEquals('b',node.getChildren().get(0).getKey());
  node=trie.new Node('a');
  node.add("bc");
  Trie.Node b=node.getChildren().get(0);
  assertEquals(1,node.getChildren().size());
  assertEquals('b',b.getKey());
  assertEquals(1,b.getChildren().size());
  Trie.Node c=b.getChildren().get(0);
  assertEquals('c',c.getKey());
  assertEquals(0,c.getChildren().size());
  node.add("bd");
  b=node.getChildren().get(0);
  assertEquals(1,node.getChildren().size());
  assertEquals('b',b.getKey());
  assertEquals(2,b.getChildren().size());
  c=b.getChildren().get(0);
  assertEquals('c',c.getKey());
  assertEquals(0,c.getChildren().size());
  Trie.Node d=b.getChildren().get(1);
  assertEquals('d',d.getKey());
  assertEquals(0,d.getChildren().size());
}
