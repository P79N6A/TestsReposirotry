@Test public void testYoloActivateSanityCheck(){
  int mb=3;
  int b=4;
  int c=3;
  int depth=b * (5 + c);
  int w=6;
  int h=6;
  INDArray bbPrior=Nd4j.rand(b,2).muliRowVector(Nd4j.create(new double[]{w,h}));
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().list().layer(new ConvolutionLayer.Builder().nIn(1).nOut(1).kernelSize(1,1).build()).layer(new Yolo2OutputLayer.Builder().boundingBoxPriors(bbPrior).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  org.deeplearning4j.nn.layers.objdetect.Yolo2OutputLayer y2impl=(org.deeplearning4j.nn.layers.objdetect.Yolo2OutputLayer)net.getLayer(1);
  INDArray input=Nd4j.rand(new int[]{mb,depth,h,w});
  INDArray out=y2impl.activate(input,false,LayerWorkspaceMgr.noWorkspaces());
  assertEquals(4,out.rank());
  INDArray out5=out.reshape('c',mb,b,5 + c,h,w);
  INDArray predictedXYCenterGrid=out5.get(all(),all(),interval(0,2),all(),all());
  INDArray predictedWH=out5.get(all(),all(),interval(2,4),all(),all());
  INDArray predictedConf=out5.get(all(),all(),point(4),all(),all());
  assertTrue(predictedXYCenterGrid.minNumber().doubleValue() >= 0.0);
  assertTrue(predictedXYCenterGrid.maxNumber().doubleValue() <= 1.0);
  assertTrue(predictedWH.minNumber().doubleValue() >= 0.0);
  assertTrue(predictedConf.minNumber().doubleValue() >= 0.0);
  assertTrue(predictedConf.maxNumber().doubleValue() <= 1.0);
  INDArray probs=out5.get(all(),all(),interval(5,5 + c),all(),all());
  assertTrue(probs.minNumber().doubleValue() >= 0.0);
  assertTrue(probs.maxNumber().doubleValue() <= 1.0);
  INDArray probsSum=probs.sum(2);
  assertEquals(1.0,probsSum.minNumber().doubleValue(),1e-6);
  assertEquals(1.0,probsSum.maxNumber().doubleValue(),1e-6);
}
