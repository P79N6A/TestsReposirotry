/** 
 * Example from: <a href="https://www.wolframalpha.com/input/?i=invert+matrix+((1,2),(3,4),(5,6))^T">here</a>
 */
@Test public void testRightPseudoInvert(){
  INDArray X=Nd4j.create(new double[][]{{1,2},{3,4},{5,6}}).transpose();
  INDArray expectedRightInverse=Nd4j.create(new double[][]{{-16,13},{-4,4},{8,-5}}).mul(1 / 12d);
  INDArray rightInverse=InvertMatrix.pRightInvert(X,false);
  assertEquals(expectedRightInverse,rightInverse);
  final INDArray identity3x3=Nd4j.create(new double[][]{{1,0,0},{0,1,0},{0,0,1}});
  final INDArray identity2x2=Nd4j.create(new double[][]{{1,0},{0,1}});
  final double precision=1e-5;
  final INDArray leftInverseCheck=rightInverse.mmul(X);
  assertFalse(leftInverseCheck.equalsWithEps(identity3x3,precision));
  final INDArray rightInverseCheck=X.mmul(rightInverse);
  assertTrue(rightInverseCheck.equalsWithEps(identity2x2,precision));
  final INDArray generalCond=X.mmul(rightInverse).mmul(X);
  assertTrue(X.equalsWithEps(generalCond,precision));
  checkMoorePenroseConditions(X,rightInverse,precision);
}
