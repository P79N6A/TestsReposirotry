@Test public void testInferInputType(){
  List<Pair<INDArray[],InputType[]>> l=new ArrayList<>();
  l.add(new Pair<>(new INDArray[]{Nd4j.create(10,8)},new InputType[]{InputType.feedForward(8)}));
  l.add(new Pair<>(new INDArray[]{Nd4j.create(10,8),Nd4j.create(10,20)},new InputType[]{InputType.feedForward(8),InputType.feedForward(20)}));
  l.add(new Pair<>(new INDArray[]{Nd4j.create(10,8,7)},new InputType[]{InputType.recurrent(8,7)}));
  l.add(new Pair<>(new INDArray[]{Nd4j.create(10,8,7),Nd4j.create(10,20,6)},new InputType[]{InputType.recurrent(8,7),InputType.recurrent(20,6)}));
  l.add(new Pair<>(new INDArray[]{Nd4j.create(10,8,7,6)},new InputType[]{InputType.convolutional(7,6,8)}));
  l.add(new Pair<>(new INDArray[]{Nd4j.create(10,8,7,6),Nd4j.create(10,4,3,2)},new InputType[]{InputType.convolutional(7,6,8),InputType.convolutional(3,2,4)}));
  for (  Pair<INDArray[],InputType[]> p : l) {
    InputType[] act=InputType.inferInputTypes(p.getFirst());
    assertArrayEquals(p.getSecond(),act);
  }
}
