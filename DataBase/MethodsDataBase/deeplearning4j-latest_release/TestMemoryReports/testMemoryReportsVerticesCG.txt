@Test public void testMemoryReportsVerticesCG(){
  List<Pair<? extends GraphVertex,InputType[]>> l=getTestVertices();
  for (  Pair<? extends GraphVertex,InputType[]> p : l) {
    List<String> inputs=new ArrayList<>();
    for (int i=0; i < p.getSecond().length; i++) {
      inputs.add(String.valueOf(i));
    }
    String[] layerInputs=inputs.toArray(new String[inputs.size()]);
    if (p.getFirst() instanceof DuplicateToTimeSeriesVertex) {
      layerInputs=new String[]{"1"};
    }
    ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs(inputs).allowDisconnected(true).addVertex("gv",p.getFirst(),layerInputs).setOutputs("gv").build();
    MemoryReport mr=conf.getMemoryReport(p.getSecond());
    String json=mr.toJson();
    String yaml=mr.toYaml();
    MemoryReport fromJson=MemoryReport.fromJson(json);
    MemoryReport fromYaml=MemoryReport.fromYaml(yaml);
    assertEquals(mr,fromJson);
    assertEquals(mr,fromYaml);
  }
}
