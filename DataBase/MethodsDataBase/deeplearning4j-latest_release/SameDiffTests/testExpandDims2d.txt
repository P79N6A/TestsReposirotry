@Test public void testExpandDims2d(){
  val origShape=new long[]{3,4};
  for (int i=0; i < 3; i++) {
    for (    Pair<INDArray,String> p : NDArrayCreationUtil.getAllTestMatricesWithShape(origShape[0],origShape[1],12345)) {
      INDArray inArr=p.getFirst().muli(100);
      SameDiff sd=SameDiff.create();
      SDVariable in=sd.var("in",inArr);
      SDVariable expand=sd.f().expandDims(in,i);
      INDArray out=sd.execAndEndResult();
      INDArray expOut;
switch (i) {
case 0:
        expOut=inArr.dup('c').reshape('c',1,origShape[0],origShape[1]);
      break;
case 1:
    expOut=inArr.dup('c').reshape('c',origShape[0],1,origShape[1]);
  break;
case 2:
expOut=inArr.dup('c').reshape('c',origShape[0],origShape[1],1);
break;
default :
throw new RuntimeException();
}
String msg="expandDim=" + i + ", source="+ p.getSecond();
assertEquals(msg,out,expOut);
}
}
}
