@Test public void testIfStatementFalseBody(){
  SameDiff sameDiff=SameDiff.create();
  SameDiffFunctionDefinition conditionBody=new SameDiffFunctionDefinition(){
    @Override public SDVariable[] define(    SameDiff sameDiff,    Map<String,INDArray> inputs,    SDVariable[] variableInputs){
      SDVariable sum=sameDiff.sum(variableInputs[0],Integer.MAX_VALUE);
      SDVariable result=sameDiff.gt(sum,1.0);
      return new SDVariable[]{result};
    }
  }
;
  SameDiffFunctionDefinition trueBody=new SameDiffFunctionDefinition(){
    @Override public SDVariable[] define(    SameDiff sameDiff,    Map<String,INDArray> inputs,    SDVariable[] variableInputs){
      SDVariable add=variableInputs[0].add(1.0);
      return new SDVariable[]{add};
    }
  }
;
  SameDiffFunctionDefinition falseBody=new SameDiffFunctionDefinition(){
    @Override public SDVariable[] define(    SameDiff sameDiff,    Map<String,INDArray> inputs,    SDVariable[] variableInputs){
      SDVariable sub=variableInputs[0].sub(1.0);
      return new SDVariable[]{sub};
    }
  }
;
  SDVariable[] secondInputs=new SDVariable[]{sameDiff.setupFunction(sameDiff.var("two",new long[]{1,1}))};
  sameDiff.ifStatement(new DefaultSameDiffConditional(),conditionBody,trueBody,falseBody,secondInputs);
  Pair<Map<SDVariable,DifferentialFunction>,List<DifferentialFunction>> exec=sameDiff.exec();
}
