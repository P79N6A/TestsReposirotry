@Test public void testElementWiseDivAndRDiv(){
  SameDiff sameDiff=SameDiff.create();
  INDArray ones=Nd4j.ones(4);
  INDArray toDivBy=Nd4j.valueArrayOf(4,0.25);
  Map<String,INDArray> xAndY=new HashMap<>();
  xAndY.put("x",ones);
  xAndY.put("y",toDivBy);
  sameDiff.defineFunction("div",new SameDiffFunctionDefinition(){
    @Override public SDVariable[] define(    SameDiff sameDiff,    Map<String,INDArray> inputs,    SDVariable[] variableInputs){
      SDVariable x=sameDiff.var("x",inputs.get("x"));
      SDVariable y=sameDiff.var("y",inputs.get("y"));
      return new SDVariable[]{x.div(y)};
    }
  }
,xAndY);
  sameDiff.defineFunction("rdiv",new SameDiffFunctionDefinition(){
    @Override public SDVariable[] define(    SameDiff sameDiff,    Map<String,INDArray> inputs,    SDVariable[] variableInputs){
      SDVariable x=sameDiff.var("x",inputs.get("x"));
      SDVariable y=sameDiff.var("y",inputs.get("y"));
      return new SDVariable[]{x.rdiv(y)};
    }
  }
,xAndY);
  INDArray assertionForDiv=Nd4j.valueArrayOf(4,4.0);
  INDArray assertionForRDiv=Nd4j.valueArrayOf(4,0.25);
  assertEquals(assertionForDiv,sameDiff.getFunction("div").execAndEndResult());
  assertEquals(assertionForRDiv,sameDiff.getFunction("rdiv").execAndEndResult());
}
