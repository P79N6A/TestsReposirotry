@Test public void testFrequenciesCount() throws Exception {
  JavaRDD<Sequence<VocabWord>> sequences=sc.parallelize(sequencesCyclic);
  SparkSequenceVectors<VocabWord> seqVec=new SparkSequenceVectors<>();
  seqVec.fitSequences(sequences);
  Counter<Long> counter=seqVec.getCounter();
  assertEquals(20,counter.getCount(0L),1e-5);
  for (int e=1; e < sequencesCyclic.get(0).getElements().size() - 1; e++) {
    assertEquals(10,counter.getCount(sequencesCyclic.get(0).getElementByIndex(e).getStorageId()),1e-5);
  }
  VocabCache<ShallowSequenceElement> shallowVocab=seqVec.getShallowVocabCache();
  assertEquals(10,shallowVocab.numWords());
  ShallowSequenceElement zero=shallowVocab.tokenFor(0L);
  ShallowSequenceElement first=shallowVocab.tokenFor(1L);
  assertNotEquals(null,zero);
  assertEquals(20.0,zero.getElementFrequency(),1e-5);
  assertEquals(0,zero.getIndex());
  assertEquals(10.0,first.getElementFrequency(),1e-5);
}
