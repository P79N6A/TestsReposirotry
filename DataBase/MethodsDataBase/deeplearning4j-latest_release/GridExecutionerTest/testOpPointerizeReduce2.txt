/** 
 * Reduce along all dimensions
 * @throws Exception
 */
@Test public void testOpPointerizeReduce2() throws Exception {
  CudaGridExecutioner executioner=new CudaGridExecutioner();
  INDArray array=Nd4j.create(10,10);
  Sum opA=new Sum(array);
  executioner.exec(opA);
  GridPointers pointers=executioner.pointerizeOp(opA,null);
  assertEquals(opA.opNum(),pointers.getOpNum());
  assertEquals(Op.Type.REDUCE,pointers.getType());
  CudaContext context=(CudaContext)AtomicAllocator.getInstance().getDeviceContext().getContext();
  Pointer x=AtomicAllocator.getInstance().getPointer(array,context);
  Pointer xShapeInfo=AtomicAllocator.getInstance().getPointer(array.shapeInfoDataBuffer(),context);
  Pointer z=AtomicAllocator.getInstance().getPointer(opA.z(),context);
  Pointer zShapeInfo=AtomicAllocator.getInstance().getPointer(opA.z().shapeInfoDataBuffer(),context);
  DataBuffer dimBuff=Nd4j.getConstantHandler().getConstantBuffer(new int[]{1});
  Pointer ptrBuff=AtomicAllocator.getInstance().getPointer(dimBuff,context);
  assertEquals(x,pointers.getX());
  assertEquals(null,pointers.getY());
  assertNotEquals(null,pointers.getZ());
  assertEquals(z,pointers.getZ());
  assertEquals(1,opA.z().length());
  assertEquals(1,pointers.getZLength());
  assertEquals(xShapeInfo,pointers.getXShapeInfo());
  assertEquals(null,pointers.getYShapeInfo());
  assertEquals(zShapeInfo,pointers.getZShapeInfo());
  assertEquals(null,pointers.getDimensions());
  assertEquals(0,pointers.getDimensionsLength());
  assertEquals(null,pointers.getTadShape());
  assertEquals(null,pointers.getTadOffsets());
  assertEquals(null,pointers.getExtraArgs());
}
