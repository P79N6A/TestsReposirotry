@Test public void testReverseFlow1() throws Exception {
  CudaGridExecutioner executioner=((CudaGridExecutioner)Nd4j.getExecutioner());
  INDArray put=Nd4j.create(new double[]{5,6});
  INDArray row1=Nd4j.linspace(1,4,4);
  AllocationPoint point=AtomicAllocator.getInstance().getAllocationPoint(row1);
  assertEquals(0,executioner.getQueueLength());
  assertEquals(true,point.isActualOnHostSide());
  assertEquals(false,point.isActualOnDeviceSide());
  System.out.println("A: --------------------------");
  row1=row1.reshape(2,2);
  assertEquals(true,point.isActualOnHostSide());
  assertEquals(false,point.isActualOnDeviceSide());
  System.out.println("B: --------------------------");
  row1.putRow(1,put);
  assertEquals(true,point.isActualOnHostSide());
  assertEquals(false,point.isActualOnDeviceSide());
  System.out.println("C: --------------------------");
  assertEquals(1,executioner.getQueueLength());
  executioner.flushQueueBlocking();
  assertEquals(0,executioner.getQueueLength());
  assertEquals(false,point.isActualOnHostSide());
  assertEquals(true,point.isActualOnDeviceSide());
  System.out.println("D: --------------------------");
  assertArrayEquals(new float[]{1,2,5,6},row1.data().asFloat(),0.1f);
}
