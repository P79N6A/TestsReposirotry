@Test public void testOpPointerizeScalar1() throws Exception {
  CudaGridExecutioner executioner=new CudaGridExecutioner();
  INDArray array=Nd4j.create(10);
  ScalarMultiplication opA=new ScalarMultiplication(array,10f);
  GridPointers pointers=executioner.pointerizeOp(opA,null);
  assertEquals(opA.opNum(),pointers.getOpNum());
  assertEquals(Op.Type.SCALAR,pointers.getType());
  CudaContext context=(CudaContext)AtomicAllocator.getInstance().getDeviceContext().getContext();
  Pointer x=AtomicAllocator.getInstance().getPointer(array,context);
  Pointer xShapeInfo=AtomicAllocator.getInstance().getPointer(array.shapeInfoDataBuffer(),context);
  assertEquals(x,pointers.getX());
  assertEquals(null,pointers.getY());
  assertEquals(x,pointers.getZ());
  assertEquals(1,pointers.getXStride());
  assertEquals(-1,pointers.getYStride());
  assertEquals(1,pointers.getZStride());
  assertEquals(xShapeInfo,pointers.getXShapeInfo());
  assertEquals(null,pointers.getYShapeInfo());
  assertEquals(xShapeInfo,pointers.getZShapeInfo());
  assertEquals(null,pointers.getDimensions());
  assertEquals(0,pointers.getDimensionsLength());
  assertEquals(null,pointers.getTadShape());
  assertEquals(null,pointers.getTadOffsets());
  assertEquals(null,pointers.getExtraArgs());
}
