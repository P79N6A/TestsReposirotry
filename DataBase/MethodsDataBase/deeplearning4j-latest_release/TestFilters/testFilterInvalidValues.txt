@Test public void testFilterInvalidValues(){
  List<List<Writable>> list=new ArrayList<>();
  list.add(Collections.singletonList((Writable)new IntWritable(-1)));
  list.add(Collections.singletonList((Writable)new IntWritable(0)));
  list.add(Collections.singletonList((Writable)new IntWritable(2)));
  Schema schema=new Schema.Builder().addColumnInteger("intCol",0,10).addColumnDouble("doubleCol",-100.0,100.0).build();
  Filter filter=new FilterInvalidValues("intCol","doubleCol");
  filter.setInputSchema(schema);
  assertFalse(filter.removeExample(asList((Writable)new IntWritable(0),new DoubleWritable(0))));
  assertFalse(filter.removeExample(asList((Writable)new IntWritable(10),new DoubleWritable(0))));
  assertFalse(filter.removeExample(asList((Writable)new IntWritable(0),new DoubleWritable(-100))));
  assertFalse(filter.removeExample(asList((Writable)new IntWritable(0),new DoubleWritable(100))));
  assertTrue(filter.removeExample(asList((Writable)new IntWritable(-1),new DoubleWritable(0))));
  assertTrue(filter.removeExample(asList((Writable)new IntWritable(11),new DoubleWritable(0))));
  assertTrue(filter.removeExample(asList((Writable)new IntWritable(0),new DoubleWritable(-101))));
  assertTrue(filter.removeExample(asList((Writable)new IntWritable(0),new DoubleWritable(101))));
}
