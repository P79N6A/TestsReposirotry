@Ignore @Test public void testPewPew3() throws Exception {
  int hiddenDim=200;
  int numChar=100;
  int length=500;
  int batchSize=50;
  INDArray c2v=Nd4j.zeros(numChar,hiddenDim,'f');
  INDArray h0=Nd4j.zeros(batchSize,hiddenDim,'f');
  INDArray c0=Nd4j.zeros(batchSize,hiddenDim);
  INDArray fwdmap=Nd4j.zeros(batchSize,numChar);
  INDArray embed=fwdmap.mmul(c2v);
  List<INDArray> embeds=new ArrayList<>();
  List<INDArray> h0s=new ArrayList<>();
  List<INDArray> fwdmaps=new ArrayList<>();
  List<INDArray> c2vs=new ArrayList<>();
  for (int x=0; x < 1000; x++) {
    embeds.add(Nd4j.createUninitialized(embed.shape(),embed.ordering()));
    h0s.add(Nd4j.createUninitialized(h0.shape(),h0.ordering()));
    c2vs.add(Nd4j.createUninitialized(c2v.shape(),c2v.ordering()));
    fwdmaps.add(Nd4j.createUninitialized(fwdmap.shape(),fwdmap.ordering()));
  }
  log.info("GEMM tests:");
  for (int x=0; x < embeds.size(); x++) {
    long time1=System.nanoTime();
    fwdmaps.get(x).mmul(c2vs.get(x));
    long time2=System.nanoTime();
    if (x % 100 == 0)     log.info("ConcatV2 time: {} us",(time2 - time1) / 1000);
  }
  log.info("ConcatV2 tests:");
  for (int x=0; x < embeds.size(); x++) {
    long time1=System.nanoTime();
    INDArray concat=Nd4j.concat(1,embeds.get(x),h0s.get(x));
    long time2=System.nanoTime();
    if (x % 100 == 0)     log.info("ConcatV2 time: {} us",(time2 - time1) / 1000);
  }
}
