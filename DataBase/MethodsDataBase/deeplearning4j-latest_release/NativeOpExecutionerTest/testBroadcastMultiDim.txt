@Test public void testBroadcastMultiDim() throws Exception {
  INDArray arr2d=Nd4j.ones(2,3);
  INDArray toBCRow=Nd4j.create(new double[]{1,0,0});
  Nd4j.getExecutioner().exec(new BroadcastMulOp(arr2d,toBCRow,arr2d,1));
  INDArray exp2d=Nd4j.create(new double[][]{{1,0,0},{1,0,0}});
  assertEquals(exp2d,arr2d);
  INDArray arr3d=Nd4j.ones(2,3,5);
  INDArray bc2d=Nd4j.create(new double[][]{{1,1,1,1,1},{1,1,1,0,0}});
  bc2d.get(NDArrayIndex.point(1),NDArrayIndex.interval(3,5)).assign(0);
  Nd4j.getExecutioner().exec(new BroadcastMulOp(arr3d,bc2d,arr3d,0,2));
  INDArray exp3d=Nd4j.ones(2,3,5);
  exp3d.get(NDArrayIndex.point(1),NDArrayIndex.all(),NDArrayIndex.interval(3,5)).assign(0);
  for (int i=0; i < 2; i++) {
    System.out.println("Arr - " + i);
    System.out.println(arr3d.get(NDArrayIndex.point(i),NDArrayIndex.all(),NDArrayIndex.all()));
    System.out.println("Exp - " + i);
    System.out.println(exp3d.get(NDArrayIndex.point(i),NDArrayIndex.all(),NDArrayIndex.all()));
    System.out.println();
  }
  assertEquals(exp3d,arr3d);
}
