@Ignore @Test public void testFailureRandom_AND() throws Exception {
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Adam(1e-4)).list().layer(0,new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  String hostname=InetAddress.getLocalHost().getHostName();
  assertNotNull(hostname);
  assertFalse(hostname.isEmpty());
  net.setListeners(new FailureTestingListener(FailureTestingListener.FailureMode.ILLEGAL_STATE,new FailureTestingListener.And(new FailureTestingListener.HostNameTrigger(hostname),new FailureTestingListener.RandomProb(FailureTestingListener.CallType.ANY,0.05))));
  DataSetIterator iter=new IrisDataSetIterator(5,150);
  net.fit(iter);
}
