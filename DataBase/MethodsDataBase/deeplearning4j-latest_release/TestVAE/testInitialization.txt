@Test public void testInitialization(){
  MultiLayerConfiguration mlc=new NeuralNetConfiguration.Builder().list().layer(0,new org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder.Builder().nIn(10).nOut(5).encoderLayerSizes(12).decoderLayerSizes(13).build()).build();
  NeuralNetConfiguration c=mlc.getConf(0);
  org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder vae=(org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder)c.getLayer();
  long allParams=vae.initializer().numParams(c);
  int expNumParams=(10 * 12 + 12) + (12 * (2 * 5) + (2 * 5)) + (5 * 13 + 13)+ (13 * (2 * 10) + (2 * 10));
  assertEquals(expNumParams,allParams);
  MultiLayerNetwork net=new MultiLayerNetwork(mlc);
  net.init();
  System.out.println("Exp num params: " + expNumParams);
  assertEquals(expNumParams,net.getLayer(0).params().length());
  Map<String,INDArray> paramTable=net.getLayer(0).paramTable();
  int count=0;
  for (  INDArray arr : paramTable.values()) {
    count+=arr.length();
  }
  assertEquals(expNumParams,count);
  assertEquals(expNumParams,net.getLayer(0).numParams());
}
