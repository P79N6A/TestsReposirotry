@Test public void testForwardPass(){
  int[][] encLayerSizes=new int[][]{{12},{12,13},{12,13,14}};
  for (int i=0; i < encLayerSizes.length; i++) {
    MultiLayerConfiguration mlc=new NeuralNetConfiguration.Builder().list().layer(0,new org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder.Builder().nIn(10).nOut(5).encoderLayerSizes(encLayerSizes[i]).decoderLayerSizes(13).build()).build();
    NeuralNetConfiguration c=mlc.getConf(0);
    org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder vae=(org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder)c.getLayer();
    MultiLayerNetwork net=new MultiLayerNetwork(mlc);
    net.init();
    INDArray in=Nd4j.rand(1,10);
    List<INDArray> out=net.feedForward(in);
    assertArrayEquals(new long[]{1,10},out.get(0).shape());
    assertArrayEquals(new long[]{1,5},out.get(1).shape());
  }
}
