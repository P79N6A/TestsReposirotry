@Test public void testLessSimpleMergeBackProp(){
  NeuralNetConfiguration.Builder overallConf=new NeuralNetConfiguration.Builder().updater(new Sgd(0.9)).activation(Activation.IDENTITY);
  ComputationGraphConfiguration conf=overallConf.graphBuilder().addInputs("inCentre","inRight").addLayer("denseCentre0",new DenseLayer.Builder().nIn(2).nOut(2).build(),"inCentre").addLayer("outCentre",new OutputLayer.Builder(LossFunctions.LossFunction.MSE).nIn(2).nOut(2).build(),"denseCentre0").addLayer("denseRight0",new DenseLayer.Builder().nIn(3).nOut(2).build(),"inRight").addVertex("mergeRight",new MergeVertex(),"denseCentre0","denseRight0").addLayer("outRight",new OutputLayer.Builder(LossFunctions.LossFunction.MSE).nIn(4).nOut(2).build(),"mergeRight").setOutputs("outCentre","outRight").build();
  ComputationGraph modelToTune=new ComputationGraph(conf);
  modelToTune.init();
  modelToTune.getVertex("denseCentre0").setLayerAsFrozen();
  MultiDataSet randData=new MultiDataSet(new INDArray[]{Nd4j.rand(2,2),Nd4j.rand(2,3)},new INDArray[]{Nd4j.rand(2,2),Nd4j.rand(2,2)});
  INDArray denseCentre0=modelToTune.feedForward(randData.getFeatures(),false).get("denseCentre0");
  MultiDataSet otherRandData=new MultiDataSet(new INDArray[]{denseCentre0,randData.getFeatures(1)},randData.getLabels());
  ComputationGraph modelNow=new TransferLearning.GraphBuilder(modelToTune).setFeatureExtractor("denseCentre0").build();
  assertTrue(modelNow.getLayer("denseCentre0") instanceof FrozenLayer);
  int n=0;
  while (n < 5) {
    modelToTune.fit(randData);
    modelNow.fit(randData);
    assertEquals(otherRandData.getFeatures(0),modelNow.feedForward(randData.getFeatures(),false).get("denseCentre0"));
    assertEquals(otherRandData.getFeatures(0),modelToTune.feedForward(randData.getFeatures(),false).get("denseCentre0"));
    assertEquals(modelToTune.getLayer("denseRight0").params(),modelNow.getLayer("denseRight0").params());
    assertEquals(modelToTune.getLayer("outRight").params(),modelNow.getLayer("outRight").params());
    assertEquals(modelToTune.getLayer("outCentre").params(),modelNow.getLayer("outCentre").params());
    n++;
  }
}
