@Test public void testBroadcastingGenerated(){
  int[][] broadcastShape=NDArrayCreationUtil.getRandomBroadCastShape(7,6,10);
  List<List<Pair<INDArray,String>>> broadCastList=new ArrayList<>(broadcastShape.length);
  for (  int[] shape : broadcastShape) {
    List<Pair<INDArray,String>> arrShape=NDArrayCreationUtil.get6dPermutedWithShape(7,shape);
    broadCastList.add(arrShape);
    broadCastList.add(NDArrayCreationUtil.get6dReshapedWithShape(7,shape));
    broadCastList.add(NDArrayCreationUtil.getAll6dTestArraysWithShape(7,shape));
  }
  for (  List<Pair<INDArray,String>> b : broadCastList) {
    for (    Pair<INDArray,String> val : b) {
      INDArray inputArrBroadcast=val.getFirst();
      val destShape=NDArrayCreationUtil.broadcastToShape(inputArrBroadcast.shape(),7);
      INDArray output=inputArrBroadcast.broadcast(NDArrayCreationUtil.broadcastToShape(inputArrBroadcast.shape(),7));
      assertArrayEquals(destShape,output.shape());
    }
  }
}
