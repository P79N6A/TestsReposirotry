@Test public void testPermute(){
  INDArray n=Nd4j.create(Nd4j.linspace(1,20,20).data(),new long[]{5,4});
  INDArray transpose=n.transpose();
  INDArray permute=n.permute(1,0);
  assertEquals(permute,transpose);
  assertEquals(transpose.length(),permute.length(),1e-1);
  INDArray toPermute=Nd4j.create(Nd4j.linspace(0,7,8).data(),new long[]{2,2,2});
  INDArray permuted=toPermute.permute(2,1,0);
  assertNotEquals(toPermute,permuted);
  INDArray permuteOther=toPermute.permute(1,2,0);
  for (int i=0; i < permuteOther.slices(); i++) {
    INDArray toPermutesliceI=toPermute.slice(i);
    INDArray permuteOtherSliceI=permuteOther.slice(i);
    permuteOtherSliceI.toString();
    assertNotEquals(toPermutesliceI,permuteOtherSliceI);
  }
  assertArrayEquals(permuteOther.shape(),toPermute.shape());
  assertNotEquals(toPermute,permuteOther);
}
