@Test public void testStdevDEBUG() throws Exception {
  Nd4j.setDataType(DataBuffer.Type.DOUBLE);
  List<String> errors=new ArrayList<>();
  for (  Pair<INDArray,String> p : NDArrayCreationUtil.getAllTestMatricesWithShape(3,4,12345)) {
    for (    boolean biasCorrected : new boolean[]{false,true}) {
      SameDiff sd=SameDiff.create();
      SDVariable var=sd.var("in",p.getFirst());
      SDVariable stdev=var.std(biasCorrected);
      INDArray expOut=p.getFirst().std(biasCorrected);
      File f=testDir.newFile();
      f.delete();
      sd.asFlatFile(f);
      SameDiff sd2=SameDiff.fromFlatFile(f);
      DifferentialFunction df1=sd.functions()[0];
      Nd4j.getExecutioner().exec((Op)df1);
      DifferentialFunction df2=sd2.functions()[0];
      Nd4j.getExecutioner().exec((Op)df2);
      System.out.println("Bias corrected: " + biasCorrected);
      System.out.println(((Op)df1).z());
      System.out.println(((Op)df2).z());
      if (!((Op)df1).z().equals(((Op)df2).z())) {
        throw new IllegalStateException();
      }
      System.out.println("==========================");
    }
  }
  assertEquals(errors.toString(),0,errors.size());
}
