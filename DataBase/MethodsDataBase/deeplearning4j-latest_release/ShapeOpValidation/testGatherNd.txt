@Test public void testGatherNd(){
  List<INDArray> indices=new ArrayList<>();
  List<INDArray> params=new ArrayList<>();
  List<INDArray> expected=new ArrayList<>();
  indices.add(Nd4j.create(new double[][]{{0,0},{1,1}}));
  params.add(Nd4j.create(new double[][]{{1,2},{3,4}}));
  expected.add(Nd4j.trueVector(new double[]{1,4}));
  indices.add(Nd4j.create(new double[][]{{1},{0}}));
  params.add(Nd4j.create(new double[][]{{1,2},{3,4}}));
  expected.add(Nd4j.create(new double[][]{{3,4},{1,2}}));
  indices.add(Nd4j.create(new double[][]{{0,1},{1,0}}));
  params.add(Nd4j.create(new double[][][]{{{10,20},{30,40}},{{11,21},{31,41}}}));
  expected.add(Nd4j.create(new double[][]{{30,40},{11,21}}));
  for (int i=0; i < indices.size(); i++) {
    SameDiff sd=SameDiff.create();
    SDVariable p=sd.var("p",params.get(i));
    SDVariable ind=sd.var("i",indices.get(i));
    SDVariable g=sd.gatherNd(p,ind);
    INDArray exp=expected.get(i);
    String err=OpValidation.validate(new TestCase(sd).expected(g,exp).gradientCheck(false));
    assertNull(err);
  }
}
