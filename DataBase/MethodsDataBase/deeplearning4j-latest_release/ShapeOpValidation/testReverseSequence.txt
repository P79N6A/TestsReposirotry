@Test public void testReverseSequence(){
  SameDiff sameDiff=SameDiff.create();
  float[] input_data=new float[]{1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,1,2,3,4,5,6,0,0,0,0,0,0,0,0,0};
  float[] expected_output=new float[]{7,8,9,4,5,6,1,2,3,0,0,0,0,0,0,4,5,6,1,2,3,0,0,0,0,0,0,0,0,0};
  INDArray arr1=Nd4j.create(input_data,new long[]{2,5,3});
  INDArray arr2=Nd4j.create(new float[]{3,2}).reshape(2);
  SDVariable x=sameDiff.var("x",arr1);
  SDVariable seq_lengths=sameDiff.var("seq_lengths",arr2);
  SDVariable result=sameDiff.reverseSequence(x,seq_lengths,1,0);
  INDArray expected=Nd4j.create(expected_output,new long[]{2,5,3});
  assertArrayEquals(arr1.shape(),result.eval().shape());
  assertEquals(expected,result.eval());
  SDVariable loss=sameDiff.standardDeviation(result,true);
  String err=OpValidation.validate(new TestCase(sameDiff).expected(result.getVarName(),expected).gradCheckSkipVariables(seq_lengths.getVarName()));
  assertNull(err);
}
