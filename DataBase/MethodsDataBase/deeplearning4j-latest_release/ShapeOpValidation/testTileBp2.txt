@Test public void testTileBp2(){
  Nd4j.getRandom().setSeed(12345);
  INDArray in=Nd4j.create(3,4,5);
  int[] tile=new int[]{2,3,4};
  int[] outShape=new int[]{3 * 2,4 * 3,5 * 4};
  int length=ArrayUtil.prod(outShape);
  INDArray gradAtOut=Nd4j.rand(outShape);
  INDArray gradAtInExp=Nd4j.create(in.shape());
  for (int i=0; i < tile[0]; i++) {
    for (int j=0; j < tile[1]; j++) {
      for (int k=0; k < tile[2]; k++) {
        INDArray subset=gradAtOut.get(NDArrayIndex.interval(i * 3,(i + 1) * 3),NDArrayIndex.interval(j * 4,(j + 1) * 4),NDArrayIndex.interval(k * 5,(k + 1) * 5));
        gradAtInExp.addi(subset);
      }
    }
  }
  DynamicCustomOp op=DynamicCustomOp.builder("tile_bp").addInputs(in,gradAtOut).addOutputs(gradAtInExp).addIntegerArguments(tile).build();
  OpTestCase otc=new OpTestCase(op).expectedOutput(0,gradAtInExp);
  String err=OpValidation.validate(otc);
  assertNull(err);
}
