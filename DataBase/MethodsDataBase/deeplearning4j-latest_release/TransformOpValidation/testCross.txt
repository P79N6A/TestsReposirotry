@Test public void testCross(){
  INDArray a=Nd4j.create(new float[]{4,2,1},new int[]{1,3});
  INDArray b=Nd4j.create(new float[]{1,3,4},new int[]{1,3});
  INDArray expOut=Nd4j.create(1,3);
  val op=new Cross(a,b,expOut);
  Nd4j.getExecutioner().exec(op);
  SameDiff sd=SameDiff.create();
  SDVariable sdA=sd.var("a",expOut.shape());
  SDVariable sdB=sd.var("b",expOut.shape());
  sd.associateArrayWithVariable(a,sdA);
  sd.associateArrayWithVariable(b,sdB);
  SDVariable t=sd.cross("cross",sdA,sdB);
  SDVariable loss=sd.mean("loss",t);
  String err=OpValidation.validate(new TestCase(sd).expectedOutput("cross",expOut).gradientCheck(true));
  assertNull(err,err);
}
