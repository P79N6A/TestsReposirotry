@Test public void testDynamicStitch(){
  SameDiff sd=SameDiff.create();
  INDArray ia=Nd4j.create(new float[]{5,1,3},new long[]{3});
  INDArray ib=Nd4j.create(new float[]{7,2,4},new long[]{3});
  INDArray indexA=Nd4j.create(new float[]{0,1,4},new long[]{3});
  INDArray indexB=Nd4j.create(new float[]{2,3,5},new long[]{3});
  INDArray expOut=Nd4j.create(new long[]{6});
  DynamicCustomOp dynamicStitch=DynamicCustomOp.builder("dynamic_stitch").addInputs(indexA,indexB,ia,ib).addOutputs(expOut).build();
  Nd4j.getExecutioner().exec(dynamicStitch);
  INDArray expOut2=Nd4j.create(new double[]{5,1,7,2,3,4});
  assertEquals(expOut2,expOut);
  SDVariable in1=sd.var("in1",ia);
  SDVariable in2=sd.var("in2",ib);
  SDVariable index1=sd.var("index1",indexA);
  SDVariable index2=sd.var("index2",indexB);
  SDVariable t=sd.dynamicStitch("ds",new SDVariable[]{index1,index2},new SDVariable[]{in1,in2});
  SDVariable loss=sd.standardDeviation("loss",t,true);
  String err=OpValidation.validate(new TestCase(sd).expectedOutput("ds",expOut).gradientCheck(true).gradCheckSkipVariables("index1","index2"));
  assertNull(err);
}
