@Test public void testBatchToSpace(){
  Nd4j.getRandom().setSeed(1337);
  int miniBatch=4;
  int[] inputShape=new int[]{miniBatch,1,1,1};
  int M=2;
  int[] blockShape=new int[]{M,1};
  int[] cropShape=new int[]{M,2};
  INDArray input=Nd4j.randn(inputShape);
  INDArray blocks=Nd4j.create(new float[]{2,2},blockShape);
  INDArray crops=Nd4j.create(new float[]{0,0,0,0},cropShape);
  SameDiff sd=SameDiff.create();
  SDVariable sdInput=sd.var("in",inputShape);
  INDArray expOut=Nd4j.create(1,2,2,1);
  DynamicCustomOp op=DynamicCustomOp.builder("batch_to_space").addInputs(input,blocks,crops).addOutputs(expOut).build();
  Nd4j.getExecutioner().exec(op);
  sd.associateArrayWithVariable(input,sdInput);
  SDVariable t=sd.batchToSpace("bts",sdInput,new int[]{2,2},new int[][]{{0,0},{0,0}});
  SDVariable loss=sd.mean("loss",t);
  String err=OpValidation.validate(new TestCase(sd).expectedOutput("bts",expOut).gradientCheck(true));
  assertNull(err,err);
}
