@Test public void testInTopK(){
  for (int k=4; k >= 1; k--) {
    log.info("Testing: k=" + k);
    INDArray in=Nd4j.linspace(1,20,20).reshape(4,5);
    INDArray idxs=Nd4j.trueVector(new double[]{1,2,3,4});
    INDArray expOut;
switch (k) {
case 4:
      expOut=Nd4j.trueVector(new double[]{1,1,1,1});
    break;
case 3:
  expOut=Nd4j.trueVector(new double[]{0,1,1,1});
break;
case 2:
expOut=Nd4j.trueVector(new double[]{0,0,1,1});
break;
case 1:
expOut=Nd4j.trueVector(new double[]{0,0,0,1});
break;
default :
throw new RuntimeException();
}
INDArray out=Nd4j.create(expOut.shape());
DynamicCustomOp op=DynamicCustomOp.builder("in_top_k").addInputs(in,idxs).addOutputs(out).addIntegerArguments(k).build();
String err=OpValidation.validate(new OpTestCase(op).expectedOutput(0,expOut));
assertNull(err);
}
}
