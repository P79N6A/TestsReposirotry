@Test public void testBidirectional() throws Exception {
  MultiLayerSpace mls=new MultiLayerSpace.Builder().updater(new Sgd(0.005)).seed(12345).layer(new Bidirectional(new LSTMLayerSpace.Builder().nIn(10).nOut(10).build())).build();
  DL4JConfiguration conf=mls.getValue(new double[0]);
  MultiLayerConfiguration c2=conf.getMultiLayerConfiguration();
  MultiLayerNetwork net=new MultiLayerNetwork(c2);
  net.init();
  assertEquals(1,net.getnLayers());
  assertTrue(net.getLayer(0) instanceof BidirectionalLayer);
  BidirectionalLayer bl=(BidirectionalLayer)net.getLayer(0);
  Field f=BidirectionalLayer.class.getDeclaredField("fwd");
  Field b=BidirectionalLayer.class.getDeclaredField("bwd");
  f.setAccessible(true);
  b.setAccessible(true);
  org.deeplearning4j.nn.layers.recurrent.LSTM lstmFwd=(org.deeplearning4j.nn.layers.recurrent.LSTM)f.get(bl);
  org.deeplearning4j.nn.layers.recurrent.LSTM lstmBwd=(org.deeplearning4j.nn.layers.recurrent.LSTM)b.get(bl);
  assertEquals(10,((LSTM)lstmFwd.conf().getLayer()).getNIn());
  assertEquals(10,((LSTM)lstmFwd.conf().getLayer()).getNOut());
  assertEquals(10,((LSTM)lstmBwd.conf().getLayer()).getNIn());
  assertEquals(10,((LSTM)lstmBwd.conf().getLayer()).getNOut());
}
