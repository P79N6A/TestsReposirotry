@Test public void testILossFunctionGetsSet(){
  ILossFunction lossFunction=new LossMCXENT(Nd4j.create(new float[]{1f,2f}));
  MultiLayerConfiguration expected=new NeuralNetConfiguration.Builder().updater(new Sgd(0.005)).seed(12345).list().layer(0,new DenseLayer.Builder().nIn(10).nOut(10).build()).layer(1,new DenseLayer.Builder().nIn(10).nOut(10).build()).layer(2,new OutputLayer.Builder().lossFunction(lossFunction).activation(Activation.SOFTMAX).nIn(10).nOut(5).build()).build();
  MultiLayerSpace mls=new MultiLayerSpace.Builder().updater(new Sgd(0.005)).seed(12345).addLayer(new DenseLayerSpace.Builder().nIn(10).nOut(10).build(),new FixedValue<>(2)).addLayer(new OutputLayerSpace.Builder().iLossFunction(lossFunction).activation(Activation.SOFTMAX).nIn(10).nOut(5).build()).build();
  int nParams=mls.numParameters();
  assertEquals(0,nParams);
  MultiLayerConfiguration conf=mls.getValue(new double[0]).getMultiLayerConfiguration();
  assertEquals(expected,conf);
}
