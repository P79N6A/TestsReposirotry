@Test public void testGlobalPoolingBasic(){
  MultiLayerConfiguration expected=new NeuralNetConfiguration.Builder().updater(new Sgd(0.005)).seed(12345).list().layer(0,new GravesLSTM.Builder().nIn(10).nOut(10).build()).layer(1,new GlobalPoolingLayer.Builder().poolingType(PoolingType.SUM).pnorm(7).build()).layer(2,new OutputLayer.Builder().lossFunction(LossFunction.MCXENT).activation(Activation.SOFTMAX).nIn(10).nOut(5).build()).build();
  MultiLayerSpace mls=new MultiLayerSpace.Builder().updater(new Sgd(0.005)).seed(12345).addLayer(new GravesLSTMLayerSpace.Builder().nIn(10).nOut(10).build()).addLayer(new GlobalPoolingLayerSpace.Builder().poolingType(PoolingType.SUM).pNorm(7).build()).addLayer(new OutputLayerSpace.Builder().lossFunction(LossFunction.MCXENT).activation(Activation.SOFTMAX).nIn(10).nOut(5).build()).build();
  int nParams=mls.numParameters();
  assertEquals(0,nParams);
  MultiLayerConfiguration conf=mls.getValue(new double[0]).getMultiLayerConfiguration();
  assertEquals(expected,conf);
}
