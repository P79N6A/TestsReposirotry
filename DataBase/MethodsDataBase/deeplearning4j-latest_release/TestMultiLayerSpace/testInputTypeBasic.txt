@Test public void testInputTypeBasic() throws Exception {
  ParameterSpace<Integer> layerSizeHyperparam=new IntegerParameterSpace(20,60);
  MultiLayerSpace hyperparameterSpace=new MultiLayerSpace.Builder().l2(0.0001).weightInit(WeightInit.XAVIER).updater(new Nesterovs()).addLayer(new ConvolutionLayerSpace.Builder().kernelSize(5,5).nIn(1).stride(1,1).nOut(layerSizeHyperparam).activation(Activation.IDENTITY).build()).addLayer(new SubsamplingLayerSpace.Builder().poolingType(SubsamplingLayer.PoolingType.MAX).kernelSize(2,2).stride(2,2).build()).addLayer(new ConvolutionLayerSpace.Builder().kernelSize(5,5).stride(1,1).nOut(50).activation(Activation.IDENTITY).build()).addLayer(new SubsamplingLayerSpace.Builder().poolingType(SubsamplingLayer.PoolingType.MAX).kernelSize(2,2).stride(2,2).build()).addLayer(new DenseLayerSpace.Builder().activation(Activation.RELU).nOut(500).build()).addLayer(new OutputLayerSpace.Builder().lossFunction(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD).nOut(10).activation(Activation.SOFTMAX).build()).setInputType(InputType.convolutionalFlat(28,28,1)).build();
  DataProvider dataProvider=new TestDataSetProvider();
  File f=testDir.newFolder();
  if (f.exists())   f.delete();
  f.mkdir();
  ResultSaver modelSaver=new FileModelSaver(f.getAbsolutePath());
  ScoreFunction scoreFunction=new TestSetAccuracyScoreFunction();
  int maxCandidates=4;
  TerminationCondition[] terminationConditions;
  terminationConditions=new TerminationCondition[]{new MaxCandidatesCondition(maxCandidates)};
  OptimizationConfiguration configuration=new OptimizationConfiguration.Builder().candidateGenerator(new RandomSearchGenerator(hyperparameterSpace,null)).dataProvider(dataProvider).modelSaver(modelSaver).scoreFunction(scoreFunction).terminationConditions(terminationConditions).build();
  IOptimizationRunner runner=new LocalOptimizationRunner(configuration,new MultiLayerNetworkTaskCreator());
  runner.execute();
  assertEquals(maxCandidates,runner.getResults().size());
}
