@Test public void checkSliceofSlice(){
  int[] ranksToCheck=new int[]{2,3,4,5};
  for (int rank=0; rank < ranksToCheck.length; rank++) {
    log.info("\nRunning through rank " + ranksToCheck[rank]);
    List<Pair<INDArray,String>> allF=NDArrayCreationUtil.getTestMatricesWithVaryingShapes(ranksToCheck[rank],'f');
    Iterator<Pair<INDArray,String>> iter=allF.iterator();
    while (iter.hasNext()) {
      Pair<INDArray,String> currentPair=iter.next();
      INDArray origArrayF=currentPair.getFirst();
      INDArray sameArrayC=origArrayF.dup('c');
      log.info("\nLooping through slices for shape " + currentPair.getSecond());
      log.info("\nOriginal array:\n" + origArrayF);
      INDArray viewF=origArrayF.slice(0);
      INDArray viewC=sameArrayC.slice(0);
      log.info("\nSlice 0, C order:\n" + viewC.toString());
      log.info("\nSlice 0, F order:\n" + viewF.toString());
      for (int i=0; i < viewF.slices(); i++) {
        for (int j=0; j < viewF.slice(i).length(); j++) {
          log.info("\nC order slice " + i + ", element 0 :"+ viewC.slice(i).getDouble(j));
          log.info("\nF order slice " + i + ", element 0 :"+ viewF.slice(i).getDouble(j));
        }
      }
    }
  }
}
