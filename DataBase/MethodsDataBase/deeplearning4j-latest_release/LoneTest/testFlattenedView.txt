@Test public void testFlattenedView(){
  int rows=8;
  int cols=8;
  int dim2=4;
  int length=rows * cols;
  int length3d=rows * cols * dim2;
  INDArray first=Nd4j.linspace(1,length,length).reshape('c',rows,cols);
  INDArray second=Nd4j.create(new int[]{rows,cols},'f').assign(first);
  INDArray third=Nd4j.linspace(1,length3d,length3d).reshape('c',rows,cols,dim2);
  first.addi(0.1);
  second.addi(0.2);
  third.addi(0.3);
  first=first.get(NDArrayIndex.interval(4,8),NDArrayIndex.interval(0,2,8));
  for (int i=0; i < first.tensorssAlongDimension(0); i++) {
    System.out.println(first.tensorAlongDimension(i,0));
  }
  for (int i=0; i < first.tensorssAlongDimension(1); i++) {
    System.out.println(first.tensorAlongDimension(i,1));
  }
  second=second.get(NDArrayIndex.interval(3,7),NDArrayIndex.all());
  third=third.permute(0,2,1);
  INDArray cAssertion=Nd4j.create(new double[]{33.10,35.10,37.10,39.10,41.10,43.10,45.10,47.10,49.10,51.10,53.10,55.10,57.10,59.10,61.10,63.10});
  INDArray fAssertion=Nd4j.create(new double[]{33.10,41.10,49.10,57.10,35.10,43.10,51.10,59.10,37.10,45.10,53.10,61.10,39.10,47.10,55.10,63.10});
  assertEquals(cAssertion,Nd4j.toFlattened('c',first));
  assertEquals(fAssertion,Nd4j.toFlattened('f',first));
}
