@Test public void aggregableCountTest(){
  AggregatorImpls.AggregableCount<Integer> cnt=new AggregatorImpls.AggregableCount<>();
  for (int i=0; i < intList.size(); i++) {
    cnt.accept(intList.get(i));
  }
  assertEquals(9,cnt.get().toInt());
  AggregatorImpls.AggregableCount<String> lastS=new AggregatorImpls.AggregableCount<>();
  for (int i=0; i < stringList.size(); i++) {
    lastS.accept(stringList.get(i));
  }
  assertEquals(4,lastS.get().toInt());
  AggregatorImpls.AggregableCount<Integer> reverse=new AggregatorImpls.AggregableCount<>();
  for (int i=0; i < intList.size(); i++) {
    reverse.accept(intList.get(intList.size() - i - 1));
  }
  cnt.combine(reverse);
  assertEquals(18,cnt.get().toInt());
}
