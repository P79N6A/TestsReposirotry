@Test public void aggregableLastTest(){
  AggregatorImpls.AggregableLast<Integer> last=new AggregatorImpls.AggregableLast<>();
  for (int i=0; i < intList.size(); i++) {
    last.accept(intList.get(i));
  }
  assertEquals(9,last.get().toInt());
  AggregatorImpls.AggregableLast<String> lastS=new AggregatorImpls.AggregableLast<>();
  for (int i=0; i < stringList.size(); i++) {
    lastS.accept(stringList.get(i));
  }
  assertTrue(lastS.get().toString().equals("acceptance"));
  AggregatorImpls.AggregableLast<Integer> reverse=new AggregatorImpls.AggregableLast<>();
  for (int i=0; i < intList.size(); i++) {
    reverse.accept(intList.get(intList.size() - i - 1));
  }
  last.combine(reverse);
  assertEquals(1,last.get().toInt());
}
