@Test public void testCNNActivationsFrozen() throws Exception {
  int nChannels=1;
  int outputNum=10;
  int batchSize=64;
  int nEpochs=10;
  int seed=123;
  log.info("Load data....");
  DataSetIterator mnistTrain=new MnistDataSetIterator(batchSize,true,12345);
  log.info("Build model....");
  MultiLayerConfiguration.Builder builder=new NeuralNetConfiguration.Builder().seed(seed).l2(0.0005).weightInit(WeightInit.XAVIER).updater(new Nesterovs(0.01,0.9)).list().layer(0,new FrozenLayer(new ConvolutionLayer.Builder(5,5).nIn(nChannels).stride(1,1).nOut(20).activation(Activation.IDENTITY).build())).layer(1,new FrozenLayer(new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX).kernelSize(2,2).stride(2,2).build())).layer(2,new FrozenLayer(new DenseLayer.Builder().activation(Activation.RELU).nOut(500).build())).layer(3,new OutputLayer.Builder(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD).nOut(outputNum).activation(Activation.SOFTMAX).build()).setInputType(InputType.convolutionalFlat(28,28,nChannels));
  MultiLayerConfiguration conf=builder.build();
  MultiLayerNetwork model=new MultiLayerNetwork(conf);
  model.init();
  log.info("Train model....");
  model.setListeners(new ConvolutionalIterationListener(1));
  for (int i=0; i < nEpochs; i++) {
    model.fit(mnistTrain);
  }
}
