@Test public void shouldGetAViewFromView(){
  double[] values={1,-1,-3,-2,5,4,6,4,-4,2,7,8,5};
  int[] columns={0,1,3,0,1,2,3,4,0,2,3,1,4};
  int[] pointerB={0,3,5,8,11};
  INDArray sparseNDArray=Nd4j.createSparseCSR(values,columns,pointerB,pointerE,shape);
  BaseSparseNDArrayCSR sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.interval(0,3),NDArrayIndex.interval(2,5));
  BaseSparseNDArrayCSR subview=(BaseSparseNDArrayCSR)sparseView.get(NDArrayIndex.interval(1,3),NDArrayIndex.interval(0,2));
  assertArrayEquals(new int[]{0,1},subview.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,5},subview.getPointerBArray());
  assertArrayEquals(new int[]{0,7},subview.getPointerEArray());
  subview=(BaseSparseNDArrayCSR)sparseView.get(NDArrayIndex.all(),NDArrayIndex.point(0));
  assertArrayEquals(new int[]{0},subview.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,0,5},subview.getPointerBArray());
  assertArrayEquals(new int[]{0,0,6},subview.getPointerEArray());
  subview=(BaseSparseNDArrayCSR)sparseView.get(NDArrayIndex.all(),NDArrayIndex.point(1));
  assertArrayEquals(new int[]{0,0},subview.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{2,3,6},subview.getPointerBArray());
  assertArrayEquals(new int[]{3,3,7},subview.getPointerEArray());
  subview=(BaseSparseNDArrayCSR)sparseView.get(NDArrayIndex.point(0),NDArrayIndex.all());
  assertArrayEquals(new int[]{1},subview.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{2},subview.getPointerBArray());
  assertArrayEquals(new int[]{3},subview.getPointerEArray());
  subview=(BaseSparseNDArrayCSR)sparseView.get(NDArrayIndex.point(1),NDArrayIndex.all());
  assertArrayEquals(new int[]{},subview.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0},subview.getPointerBArray());
  assertArrayEquals(new int[]{0},subview.getPointerEArray());
}
