@Test public void shouldGetAView(){
  double[] values={1,-1,-3,-2,5,4,6,4,-4,2,7,8,5};
  int[] columns={0,1,3,0,1,2,3,4,0,2,3,1,4};
  int[] pointerB={0,3,5,8,11};
  int[] pointerE={3,5,8,11,13};
  double[] data={1,-1,0,-3,0,-2,5,0,0,0,0,0,4,6,4,-4,0,2,7,0,0,8,0,0,5};
  INDArray array=Nd4j.create(data,new int[]{5,5},0,'c');
  INDArray denseView=array.get(NDArrayIndex.interval(1,3),NDArrayIndex.interval(1,3));
  INDArray sparseNDArray=Nd4j.createSparseCSR(values,columns,pointerB,pointerE,shape);
  BaseSparseNDArrayCSR sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.interval(0,3),NDArrayIndex.interval(3,5));
  assertArrayEquals(new int[]{0,0,1},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{2,3,6},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{3,3,8},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.interval(1,3),NDArrayIndex.interval(1,3));
  assertArrayEquals(new int[]{0,1},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{4,5},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{5,6},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.all(),NDArrayIndex.point(0));
  assertArrayEquals(new int[]{0,0,0},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,3,4,8,9},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{1,4,4,9,9},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.interval(0,2),NDArrayIndex.all());
  assertArrayEquals(new int[]{0,1,3,0,1},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,3},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{3,5},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.point(2),NDArrayIndex.all());
  assertArrayEquals(new int[]{2,3,4},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{5},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{8},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.all(),NDArrayIndex.point(0));
  assertArrayEquals(new int[]{0,0,0},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,3,4,8,9},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{1,4,4,9,9},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.all(),NDArrayIndex.point(2));
  assertArrayEquals(new int[]{0,0},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,0,5,9,10},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{0,0,6,10,10},sparseView.getPointerEArray());
  sparseView=(BaseSparseNDArrayCSR)sparseNDArray.get(NDArrayIndex.interval(1,4),NDArrayIndex.point(2));
  assertArrayEquals(new int[]{0,0},sparseView.getVectorCoordinates().asInt());
  assertArrayEquals(new int[]{0,5,9},sparseView.getPointerBArray());
  assertArrayEquals(new int[]{0,6,10},sparseView.getPointerEArray());
}
