@Test public void testPermutei(){
  INDArray orig=Nd4j.linspace(1,3 * 4,3 * 4).reshape('c',3,4);
  INDArray exp01=orig.permute(0,1);
  INDArray exp10=orig.permute(1,0);
  List<Pair<INDArray,String>> list1=NDArrayCreationUtil.getAllTestMatricesWithShape(3,4,12345);
  List<Pair<INDArray,String>> list2=NDArrayCreationUtil.getAllTestMatricesWithShape(3,4,12345);
  for (int i=0; i < list1.size(); i++) {
    INDArray p1=list1.get(i).getFirst().assign(orig).permutei(0,1);
    INDArray p2=list2.get(i).getFirst().assign(orig).permutei(1,0);
    assertEquals(exp01,p1);
    assertEquals(exp10,p2);
    assertEquals(3,p1.rows());
    assertEquals(4,p1.columns());
    assertEquals(4,p2.rows());
    assertEquals(3,p2.columns());
  }
  orig=Nd4j.linspace(1,4,4).reshape('c',1,4);
  exp01=orig.permute(0,1);
  exp10=orig.permute(1,0);
  list1=NDArrayCreationUtil.getAllTestMatricesWithShape(1,4,12345);
  list2=NDArrayCreationUtil.getAllTestMatricesWithShape(1,4,12345);
  for (int i=0; i < list1.size(); i++) {
    INDArray p1=list1.get(i).getFirst().assign(orig).permutei(0,1);
    INDArray p2=list2.get(i).getFirst().assign(orig).permutei(1,0);
    assertEquals(exp01,p1);
    assertEquals(exp10,p2);
    assertEquals(1,p1.rows());
    assertEquals(4,p1.columns());
    assertEquals(4,p2.rows());
    assertEquals(1,p2.columns());
    assertTrue(p1.isRowVector());
    assertFalse(p1.isColumnVector());
    assertFalse(p2.isRowVector());
    assertTrue(p2.isColumnVector());
  }
  INDArray orig3d=Nd4j.linspace(1,3 * 4 * 5,3 * 4 * 5).reshape('c',3,4,5);
  INDArray exp012=orig3d.permute(0,1,2);
  INDArray exp021=orig3d.permute(0,2,1);
  INDArray exp120=orig3d.permute(1,2,0);
  INDArray exp102=orig3d.permute(1,0,2);
  INDArray exp201=orig3d.permute(2,0,1);
  INDArray exp210=orig3d.permute(2,1,0);
  List<Pair<INDArray,String>> list012=NDArrayCreationUtil.getAll3dTestArraysWithShape(12345,3,4,5);
  List<Pair<INDArray,String>> list021=NDArrayCreationUtil.getAll3dTestArraysWithShape(12345,3,4,5);
  List<Pair<INDArray,String>> list120=NDArrayCreationUtil.getAll3dTestArraysWithShape(12345,3,4,5);
  List<Pair<INDArray,String>> list102=NDArrayCreationUtil.getAll3dTestArraysWithShape(12345,3,4,5);
  List<Pair<INDArray,String>> list201=NDArrayCreationUtil.getAll3dTestArraysWithShape(12345,3,4,5);
  List<Pair<INDArray,String>> list210=NDArrayCreationUtil.getAll3dTestArraysWithShape(12345,3,4,5);
  for (int i=0; i < list012.size(); i++) {
    INDArray p1=list012.get(i).getFirst().assign(orig3d).permutei(0,1,2);
    INDArray p2=list021.get(i).getFirst().assign(orig3d).permutei(0,2,1);
    INDArray p3=list120.get(i).getFirst().assign(orig3d).permutei(1,2,0);
    INDArray p4=list102.get(i).getFirst().assign(orig3d).permutei(1,0,2);
    INDArray p5=list201.get(i).getFirst().assign(orig3d).permutei(2,0,1);
    INDArray p6=list210.get(i).getFirst().assign(orig3d).permutei(2,1,0);
    assertEquals(exp012,p1);
    assertEquals(exp021,p2);
    assertEquals(exp120,p3);
    assertEquals(exp102,p4);
    assertEquals(exp201,p5);
    assertEquals(exp210,p6);
  }
}
