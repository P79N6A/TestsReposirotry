@Test public void testIsMaxAlongDimension(){
  INDArray orig=Nd4j.create(new double[]{1,2,3,1});
  INDArray alongDim0=Nd4j.getExecutioner().execAndReturn(new IsMax(orig.dup(),0));
  INDArray alongDim1=Nd4j.getExecutioner().execAndReturn(new IsMax(orig.dup(),1));
  INDArray expAlong0=Nd4j.ones(4);
  INDArray expAlong1=Nd4j.create(new double[]{0,0,1,0});
  assertEquals(expAlong0,alongDim0);
  assertEquals(expAlong1,alongDim1);
  System.out.println("----------------------------------");
  INDArray col=Nd4j.create(new double[]{1,2,3,1},new long[]{4,1});
  INDArray alongDim0col=Nd4j.getExecutioner().execAndReturn(new IsMax(col.dup(),0));
  INDArray alongDim1col=Nd4j.getExecutioner().execAndReturn(new IsMax(col.dup(),1));
  INDArray expAlong0col=Nd4j.create(new double[]{0,0,1,0},new long[]{4,1});
  INDArray expAlong1col=Nd4j.ones(new long[]{4,1});
  assertEquals(expAlong1col,alongDim1col);
  assertEquals(expAlong0col,alongDim0col);
  System.out.println("---------------------");
  INDArray orig2d=Nd4j.create(new double[][]{{1,0,2},{2,3,1}});
  INDArray alongDim0c_2d=Nd4j.getExecutioner().execAndReturn(new IsMax(orig2d.dup('c'),0));
  INDArray alongDim0f_2d=Nd4j.getExecutioner().execAndReturn(new IsMax(orig2d.dup('f'),0));
  INDArray alongDim1c_2d=Nd4j.getExecutioner().execAndReturn(new IsMax(orig2d.dup('c'),1));
  INDArray alongDim1f_2d=Nd4j.getExecutioner().execAndReturn(new IsMax(orig2d.dup('f'),1));
  INDArray expAlong0_2d=Nd4j.create(new double[][]{{0,0,1},{1,1,0}});
  INDArray expAlong1_2d=Nd4j.create(new double[][]{{0,0,1},{0,1,0}});
  assertEquals(expAlong0_2d,alongDim0c_2d);
  assertEquals(expAlong0_2d,alongDim0f_2d);
  assertEquals(expAlong1_2d,alongDim1c_2d);
  assertEquals(expAlong1_2d,alongDim1f_2d);
}
