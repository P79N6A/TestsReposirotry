@Test public void testSortRows(){
  int nRows=10;
  int nCols=5;
  java.util.Random r=new java.util.Random(12345);
  for (int i=0; i < nCols; i++) {
    INDArray in=Nd4j.linspace(1,nRows * nCols,nRows * nCols).reshape(nRows,nCols);
    List<Integer> order=new ArrayList<>(nRows);
    for (int j=0; j < nRows; j++)     order.add(j);
    Collections.shuffle(order,r);
    for (int j=0; j < nRows; j++)     in.putScalar(new long[]{j,i},order.get(j));
    INDArray outAsc=Nd4j.sortRows(in,i,true);
    INDArray outDesc=Nd4j.sortRows(in,i,false);
    System.out.println("outDesc: " + Arrays.toString(outAsc.data().asFloat()));
    for (int j=0; j < nRows; j++) {
      assertEquals(outAsc.getDouble(j,i),j,1e-1);
      int origRowIdxAsc=order.indexOf(j);
      assertTrue(outAsc.getRow(j).equals(in.getRow(origRowIdxAsc)));
      assertEquals((nRows - j - 1),outDesc.getDouble(j,i),0.001f);
      int origRowIdxDesc=order.indexOf(nRows - j - 1);
      assertTrue(outDesc.getRow(j).equals(in.getRow(origRowIdxDesc)));
    }
  }
}
