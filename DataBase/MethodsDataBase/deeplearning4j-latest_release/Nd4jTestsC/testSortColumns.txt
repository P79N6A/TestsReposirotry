@Test public void testSortColumns(){
  int nRows=5;
  int nCols=10;
  java.util.Random r=new java.util.Random(12345);
  for (int i=0; i < nRows; i++) {
    INDArray in=Nd4j.rand(new long[]{nRows,nCols});
    List<Integer> order=new ArrayList<>(nRows);
    for (int j=0; j < nCols; j++)     order.add(j);
    Collections.shuffle(order,r);
    for (int j=0; j < nCols; j++)     in.putScalar(new long[]{i,j},order.get(j));
    INDArray outAsc=Nd4j.sortColumns(in,i,true);
    INDArray outDesc=Nd4j.sortColumns(in,i,false);
    for (int j=0; j < nCols; j++) {
      assertTrue(outAsc.getDouble(i,j) == j);
      int origColIdxAsc=order.indexOf(j);
      assertTrue(outAsc.getColumn(j).equals(in.getColumn(origColIdxAsc)));
      assertTrue(outDesc.getDouble(i,j) == (nCols - j - 1));
      int origColIdxDesc=order.indexOf(nCols - j - 1);
      assertTrue(outDesc.getColumn(j).equals(in.getColumn(origColIdxDesc)));
    }
  }
}
