@Test public void testBroadCast(){
  INDArray n=Nd4j.linspace(1,4,4);
  INDArray broadCasted=n.broadcast(5,4);
  for (int i=0; i < broadCasted.rows(); i++) {
    INDArray row=broadCasted.getRow(i);
    assertEquals(n,broadCasted.getRow(i));
  }
  INDArray broadCast2=broadCasted.getRow(0).broadcast(5,4);
  assertEquals(broadCasted,broadCast2);
  INDArray columnBroadcast=n.transpose().broadcast(4,5);
  for (int i=0; i < columnBroadcast.columns(); i++) {
    INDArray column=columnBroadcast.getColumn(i);
    assertEquals(column,n.transpose());
  }
  INDArray fourD=Nd4j.create(1,2,1,1);
  INDArray broadCasted3=fourD.broadcast(1,2,36,36);
  assertTrue(Arrays.equals(new long[]{1,2,36,36},broadCasted3.shape()));
  INDArray ones=Nd4j.ones(1,1,1).broadcast(2,1,1);
  assertArrayEquals(new long[]{2,1,1},ones.shape());
}
