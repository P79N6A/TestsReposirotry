@Test public void testGetIntervalEdgeCase(){
  Nd4j.getRandom().setSeed(12345);
  int[] shape={3,2,4};
  INDArray arr3d=Nd4j.rand(shape);
  INDArray get0=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(0,1));
  INDArray getPoint0=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.point(0));
  get0=get0.reshape(getPoint0.shape());
  INDArray tad0=arr3d.tensorAlongDimension(0,1,0);
  assertTrue(get0.equals(getPoint0));
  assertTrue(getPoint0.equals(tad0));
  INDArray get1=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(1,2));
  INDArray getPoint1=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.point(1));
  get1=get1.reshape(getPoint1.shape());
  INDArray tad1=arr3d.tensorAlongDimension(1,1,0);
  assertTrue(getPoint1.equals(tad1));
  assertTrue(get1.equals(getPoint1));
  assertTrue(get1.equals(tad1));
  INDArray get2=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(2,3));
  INDArray getPoint2=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.point(2));
  get2=get2.reshape(getPoint2.shape());
  INDArray tad2=arr3d.tensorAlongDimension(2,1,0);
  assertTrue(getPoint2.equals(tad2));
  assertTrue(get2.equals(getPoint2));
  assertTrue(get2.equals(tad2));
  INDArray get3=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(3,4));
  INDArray getPoint3=arr3d.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.point(3));
  get3=get3.reshape(getPoint3.shape());
  INDArray tad3=arr3d.tensorAlongDimension(3,1,0);
  assertTrue(getPoint3.equals(tad3));
  assertTrue(get3.equals(getPoint3));
  assertTrue(get3.equals(tad3));
}
