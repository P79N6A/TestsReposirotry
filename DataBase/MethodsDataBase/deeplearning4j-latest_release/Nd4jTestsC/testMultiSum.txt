@Test public void testMultiSum(){
  INDArray arr=Nd4j.linspace(0,7,8).reshape('c',2,2,2);
  INDArray arrF=Nd4j.create(new long[]{2,2,2},'f').assign(arr);
  assertEquals(arr,arrF);
  assertEquals(Nd4j.create(new double[]{12,16}),arr.sum(0,1));
  assertEquals(Nd4j.create(new double[]{10,18}),arr.sum(0,2));
  assertEquals(Nd4j.create(new double[]{12,16}),arrF.sum(0,1));
  assertEquals(Nd4j.create(new double[]{10,18}),arrF.sum(0,2));
  assertEquals(Nd4j.create(new double[]{6,22}),arr.sum(1,2));
  assertEquals(Nd4j.create(new double[]{6,22}),arrF.sum(1,2));
  double[] data=new double[]{10,26,42};
  INDArray assertion=Nd4j.create(data);
  for (int i=0; i < data.length; i++) {
    assertEquals(data[i],assertion.getDouble(i),1e-1);
  }
  INDArray twoTwoByThree=Nd4j.linspace(1,12,12).reshape('f',2,2,3);
  INDArray multiSum=twoTwoByThree.sum(0,1);
  assertEquals(assertion,multiSum);
}
