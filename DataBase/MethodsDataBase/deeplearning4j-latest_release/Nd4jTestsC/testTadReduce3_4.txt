@Test public void testTadReduce3_4() throws Exception {
  INDArray initial=Nd4j.create(5,6,7);
  for (int i=0; i < 5; i++) {
    initial.tensorAlongDimension(i,1,2).assign(i + 1);
  }
  INDArray needle=Nd4j.create(6,7).assign(1.0);
  INDArray reduced=Nd4j.getExecutioner().exec(new ManhattanDistance(initial,needle),1,2);
  log.warn("Reduced: {}",reduced);
  for (int i=0; i < 5; i++) {
    double res=Nd4j.getExecutioner().execAndReturn(new ManhattanDistance(initial.tensorAlongDimension(i,1,2).dup(),needle)).getFinalResult().doubleValue();
    assertEquals("Failed at " + i,reduced.getDouble(i),res,0.001);
  }
}
