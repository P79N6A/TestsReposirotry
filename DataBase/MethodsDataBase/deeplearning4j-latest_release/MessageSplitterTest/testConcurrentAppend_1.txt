@Test public void testConcurrentAppend_1() throws Exception {
  val splitter=new MessageSplitter();
  val array=Nd4j.linspace(1,100000,100000).reshape(-1,1000);
  for (int e=0; e < 100; e++) {
    val message=new GradientsUpdateMessage(java.util.UUID.randomUUID().toString(),array);
    val chunks=splitter.split(message,16384);
    val ref=new Atomic<GradientsUpdateMessage>();
    chunks.parallelStream().forEach(c -> {
      val o=splitter.merge(c);
      if (o.isPresent())       ref.set((GradientsUpdateMessage)o.get());
    }
);
    assertNotNull(ref.get());
    assertEquals(array,ref.get().getPayload());
    assertEquals(0,splitter.memoryUse.intValue());
    assertEquals(false,splitter.isTrackedMessage(message.getMessageId()));
    assertEquals(0,splitter.trackers.size());
  }
}
