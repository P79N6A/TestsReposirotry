@Test public void testConcatMode() throws Exception {
  for (int i=0; i < 3; i++) {
    String seqSep;
    String seqSepRegex;
switch (i) {
case 0:
      seqSep="";
    seqSepRegex="^$";
  break;
case 1:
seqSep="---";
seqSepRegex=seqSep;
break;
case 2:
seqSep="&";
seqSepRegex=seqSep;
break;
default :
throw new RuntimeException();
}
String str="a,b,c\n1,2,3,4\nx,y\n" + seqSep + "\nA,B,C";
File f=testDir.newFile();
FileUtils.writeStringToFile(f,str);
SequenceRecordReader seqRR=new CSVMultiSequenceRecordReader(seqSepRegex,CSVMultiSequenceRecordReader.Mode.CONCAT);
seqRR.initialize(new FileSplit(f));
List<List<Writable>> exp0=new ArrayList<>();
for (String s : "a,b,c,1,2,3,4,x,y".split(",")) {
exp0.add(Collections.<Writable>singletonList(new Text(s)));
}
List<List<Writable>> exp1=new ArrayList<>();
for (String s : "A,B,C".split(",")) {
exp1.add(Collections.<Writable>singletonList(new Text(s)));
}
assertEquals(exp0,seqRR.sequenceRecord());
assertEquals(exp1,seqRR.sequenceRecord());
assertFalse(seqRR.hasNext());
seqRR.reset();
assertEquals(exp0,seqRR.sequenceRecord());
assertEquals(exp1,seqRR.sequenceRecord());
assertFalse(seqRR.hasNext());
}
}
