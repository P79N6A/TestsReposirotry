@Test public void testSequenceRecordReaderReset() throws Exception {
  File rootDir=temporaryFolder.newFolder();
  for (int i=0; i < 3; i++) {
    new ClassPathResource(String.format("csvsequence_%d.txt",i)).getTempFileFromArchive(rootDir);
    new ClassPathResource(String.format("csvsequencelabels_%d.txt",i)).getTempFileFromArchive(rootDir);
  }
  String featuresPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequence_%d.txt");
  String labelsPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequencelabels_%d.txt");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReaderDataSetIterator iter=new SequenceRecordReaderDataSetIterator(featureReader,labelReader,1,4,false);
  assertEquals(3,iter.inputColumns());
  assertEquals(4,iter.totalOutcomes());
  int nResets=5;
  for (int i=0; i < nResets; i++) {
    iter.reset();
    int count=0;
    while (iter.hasNext()) {
      DataSet ds=iter.next();
      INDArray features=ds.getFeatures();
      INDArray labels=ds.getLabels();
      assertArrayEquals(new long[]{1,3,4},features.shape());
      assertArrayEquals(new long[]{1,4,4},labels.shape());
      count++;
    }
    assertEquals(3,count);
  }
}
