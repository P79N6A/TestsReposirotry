@Test public void testSequenceRecordReaderMeta() throws Exception {
  File rootDir=temporaryFolder.newFolder();
  for (int i=0; i < 3; i++) {
    new ClassPathResource(String.format("csvsequence_%d.txt",i)).getTempFileFromArchive(rootDir);
    new ClassPathResource(String.format("csvsequencelabels_%d.txt",i)).getTempFileFromArchive(rootDir);
  }
  ClassPathResource resource=new ClassPathResource("csvsequence_0.txt");
  String featuresPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequence_%d.txt");
  String labelsPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequencelabels_%d.txt");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReaderDataSetIterator iter=new SequenceRecordReaderDataSetIterator(featureReader,labelReader,1,4,false);
  iter.setCollectMetaData(true);
  assertEquals(3,iter.inputColumns());
  assertEquals(4,iter.totalOutcomes());
  while (iter.hasNext()) {
    DataSet ds=iter.next();
    List<RecordMetaData> meta=ds.getExampleMetaData(RecordMetaData.class);
    DataSet fromMeta=iter.loadFromMetaData(meta);
    assertEquals(ds,fromMeta);
  }
}
