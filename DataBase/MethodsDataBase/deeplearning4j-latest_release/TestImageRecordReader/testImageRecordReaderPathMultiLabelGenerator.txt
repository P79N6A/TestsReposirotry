@Test public void testImageRecordReaderPathMultiLabelGenerator() throws Exception {
  PathMultiLabelGenerator multiLabelGen=new TestPathMultiLabelGenerator();
  ImageRecordReader rr=new ImageRecordReader(28,28,3,multiLabelGen);
  File rootDir=testDir.newFolder();
  new ClassPathResource("datavec-data-image/testimages/").copyDirectory(rootDir);
  FileSplit fs=new FileSplit(rootDir);
  rr.initialize(fs);
  URI[] arr=fs.locations();
  assertTrue(rr.getLabels() == null || rr.getLabels().isEmpty());
  List<List<Writable>> expLabels=new ArrayList<>();
  for (  URI u : arr) {
    String path=u.getPath();
    expLabels.add(testMultiLabel(path.substring(path.length() - 5,path.length())));
  }
  int count=0;
  while (rr.hasNext()) {
    List<Writable> l=rr.next();
    assertEquals(4,l.size());
    for (int i=0; i < 3; i++) {
      assertEquals(expLabels.get(count).get(i),l.get(i + 1));
    }
    count++;
  }
  assertEquals(6,count);
  rr.reset();
  List<List<Writable>> b1=rr.next(3);
  List<List<Writable>> b2=rr.next(3);
  assertFalse(rr.hasNext());
  NDArrayRecordBatch b1a=(NDArrayRecordBatch)b1;
  NDArrayRecordBatch b2a=(NDArrayRecordBatch)b2;
  assertEquals(4,b1a.getArrays().size());
  assertEquals(4,b2a.getArrays().size());
  NDArrayWritable l1a=new NDArrayWritable(Nd4j.vstack(((NDArrayWritable)expLabels.get(0).get(0)).get(),((NDArrayWritable)expLabels.get(1).get(0)).get(),((NDArrayWritable)expLabels.get(2).get(0)).get()));
  NDArrayWritable l1b=new NDArrayWritable(Nd4j.vstack(((NDArrayWritable)expLabels.get(0).get(1)).get(),((NDArrayWritable)expLabels.get(1).get(1)).get(),((NDArrayWritable)expLabels.get(2).get(1)).get()));
  NDArrayWritable l1c=new NDArrayWritable(Nd4j.create(new double[]{expLabels.get(0).get(2).toDouble(),expLabels.get(1).get(2).toDouble(),expLabels.get(2).get(2).toDouble()}));
  NDArrayWritable l2a=new NDArrayWritable(Nd4j.vstack(((NDArrayWritable)expLabels.get(3).get(0)).get(),((NDArrayWritable)expLabels.get(4).get(0)).get(),((NDArrayWritable)expLabels.get(5).get(0)).get()));
  NDArrayWritable l2b=new NDArrayWritable(Nd4j.vstack(((NDArrayWritable)expLabels.get(3).get(1)).get(),((NDArrayWritable)expLabels.get(4).get(1)).get(),((NDArrayWritable)expLabels.get(5).get(1)).get()));
  NDArrayWritable l2c=new NDArrayWritable(Nd4j.create(new double[]{expLabels.get(3).get(2).toDouble(),expLabels.get(4).get(2).toDouble(),expLabels.get(5).get(2).toDouble()}));
  assertEquals(l1a.get(),b1a.getArrays().get(1));
  assertEquals(l1b.get(),b1a.getArrays().get(2));
  assertEquals(l1c.get(),b1a.getArrays().get(3));
  assertEquals(l2a.get(),b2a.getArrays().get(1));
  assertEquals(l2b.get(),b2a.getArrays().get(2));
  assertEquals(l2c.get(),b2a.getArrays().get(3));
}
