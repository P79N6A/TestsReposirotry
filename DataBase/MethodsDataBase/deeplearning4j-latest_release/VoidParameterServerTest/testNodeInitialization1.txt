@Test(timeout=60000L) public void testNodeInitialization1() throws Exception {
  final AtomicInteger failCnt=new AtomicInteger(0);
  final AtomicInteger passCnt=new AtomicInteger(0);
  final VoidConfiguration conf=VoidConfiguration.builder().multicastPort(45678).numberOfShards(10).shardAddresses(localIPs).multicastNetwork("224.0.1.1").ttl(4).build();
  conf.setUnicastControllerPort(34567);
  Thread[] threads=new Thread[10];
  for (int t=0; t < threads.length; t++) {
    threads[t]=new Thread(new Runnable(){
      @Override public void run(){
        VoidParameterServer node=new VoidParameterServer();
        node.init(conf,transport,new SkipGramTrainer());
        if (node.getNodeRole() != NodeRole.SHARD)         failCnt.incrementAndGet();
        passCnt.incrementAndGet();
        node.shutdown();
      }
    }
);
    threads[t].start();
  }
  for (int t=0; t < threads.length; t++) {
    threads[t].join();
  }
  assertEquals(0,failCnt.get());
  assertEquals(threads.length,passCnt.get());
}
