@Test public void testSymmetricShuffle2() throws Exception {
  INDArray features=Nd4j.zeros(10,10,20);
  INDArray labels=Nd4j.zeros(10,10,3);
  for (int x=0; x < 10; x++) {
    features.slice(x).assign(x);
    labels.slice(x).assign(x);
  }
  System.out.println(features);
  OrderScanner3D scannerFeatures=new OrderScanner3D(features);
  OrderScanner3D scannerLabels=new OrderScanner3D(labels);
  System.out.println();
  List<INDArray> list=new ArrayList<>();
  list.add(features);
  list.add(labels);
  Nd4j.shuffle(list,1,2);
  System.out.println(features);
  System.out.println("------------------");
  System.out.println(labels);
  assertTrue(scannerFeatures.compareSlice(features));
  assertTrue(scannerLabels.compareSlice(labels));
  for (int x=0; x < 10; x++) {
    double val=features.slice(x).getDouble(0);
    INDArray row=labels.slice(x);
    for (int y=0; y < row.length(); y++) {
      assertEquals(val,row.getDouble(y),0.001);
    }
  }
}
