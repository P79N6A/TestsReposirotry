@Test public void testScatterOpGradients(){
  List<String> failed=new ArrayList<>();
  for (int i=0; i < 7; i++) {
    Nd4j.getRandom().setSeed(12345);
    SameDiff sd=SameDiff.create();
    SDVariable in=sd.var("in",new int[]{20,10});
    SDVariable indices=sd.var("indices",new long[]{5});
    SDVariable updates=sd.var("updates",new int[]{5,10});
    in.setArray(Nd4j.rand(20,10));
    indices.setArray(Nd4j.create(new double[]{3,4,5,10,18}));
    updates.setArray(Nd4j.rand(5,10).muli(2).subi(1));
    SDVariable scatter;
    String name;
switch (i) {
case 0:
      scatter=sd.scatterAdd("s",in,indices,updates);
    name="scatterAdd";
  break;
case 1:
scatter=sd.scatterSub("s",in,indices,updates);
name="scatterSub";
break;
case 2:
scatter=sd.scatterMul("s",in,indices,updates);
name="scatterMul";
break;
case 3:
scatter=sd.scatterDiv("s",in,indices,updates);
name="scatterDiv";
break;
case 4:
scatter=sd.scatterUpdate("s",in,indices,updates);
name="scatterUpdate";
break;
case 5:
scatter=sd.scatterMax("s",in,indices,updates);
name="scatterMax";
break;
case 6:
scatter=sd.scatterMin("s",in,indices,updates);
name="scatterMin";
break;
default :
throw new RuntimeException();
}
INDArray exp=in.getArr().dup();
int[] indicesInt=indices.getArr().dup().data().asInt();
for (int j=0; j < indicesInt.length; j++) {
INDArray updateRow=updates.getArr().getRow(j);
INDArray destinationRow=exp.getRow(indicesInt[j]);
switch (i) {
case 0:
destinationRow.addi(updateRow);
break;
case 1:
destinationRow.subi(updateRow);
break;
case 2:
destinationRow.muli(updateRow);
break;
case 3:
destinationRow.divi(updateRow);
break;
case 4:
destinationRow.assign(updateRow);
break;
case 5:
destinationRow.assign(Transforms.max(destinationRow,updateRow,true));
break;
case 6:
destinationRow.assign(Transforms.min(destinationRow,updateRow,true));
break;
default :
throw new RuntimeException();
}
}
SDVariable loss=sd.sum(scatter);
sd.execAndEndResult();
TestCase tc=new TestCase(sd).expected(scatter,exp).gradCheckSkipVariables(indices.getVarName());
String error=OpValidation.validate(tc);
if (error != null) {
failed.add(name);
}
}
assertEquals(failed.toString(),0,failed.size());
}
