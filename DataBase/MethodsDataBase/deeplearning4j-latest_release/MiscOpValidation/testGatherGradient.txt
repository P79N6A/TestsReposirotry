@Test public void testGatherGradient(){
  Nd4j.getRandom().setSeed(12345);
  List<String> failed=new ArrayList<>();
  for (int rank=2; rank <= 3; rank++) {
    for (int dim=0; dim < rank; dim++) {
      SameDiff sd=SameDiff.create();
      int[] inShape;
      if (rank == 2) {
        inShape=new int[]{10,10};
      }
 else {
        inShape=new int[]{10,10,10};
      }
      SDVariable in=sd.var("in",Nd4j.rand(inShape));
      SDVariable indices=sd.var("indices",Nd4j.create(new double[]{0,3,7}));
      INDArray gatherExp=null;
      if (rank == 2) {
        int tadDim=dim == 0 ? 1 : 0;
        gatherExp=Nd4j.pullRows(in.getArr(),tadDim,new int[]{0,3,7});
      }
      SDVariable gather=sd.gather(in,indices,dim);
      sd.execAndEndResult();
      SDVariable loss=sd.standardDeviation("loss",gather,true,Integer.MAX_VALUE);
      String msg="rank=" + rank + " dim="+ dim;
      TestCase tc=new TestCase(sd).testName(msg).gradCheckSkipVariables(indices.getVarName());
      if (gatherExp != null) {
        tc.expected(gather,gatherExp);
      }
      String error=OpValidation.validate(tc);
      if (error != null) {
        failed.add(msg + " - " + error);
      }
    }
  }
  assertEquals(failed.toString(),0,failed.size());
}
