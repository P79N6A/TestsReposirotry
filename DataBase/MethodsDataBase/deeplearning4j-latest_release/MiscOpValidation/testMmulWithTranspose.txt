@Test public void testMmulWithTranspose(){
  for (  int i : new int[]{2,1}) {
    System.out.println("i = " + i);
    INDArray first=Nd4j.linspace(1,3 * i,3 * i).reshape('c',i,3);
    INDArray second=Nd4j.linspace(4,4 + 4 * i,4 * i).reshape('c',i,4);
    System.out.println("Shapes: " + Arrays.toString(first.shape()) + "\t"+ Arrays.toString(second.shape()));
    SameDiff sd=SameDiff.create();
    SDVariable f=sd.var("in1",first);
    SDVariable s=sd.var("in2",second);
    MMulTranspose mt=MMulTranspose.builder().transposeA(true).transposeB(false).transposeResult(false).build();
    SDVariable mmul=sd.f().mmul(f,s,mt);
    sd.updateVariableNameAndReference(mmul,"mmul");
    INDArray out=sd.execAndEndResult();
    INDArray exp=first.transpose().mmul(second);
    assertEquals(exp,out);
    SDVariable loss=sd.standardDeviation(mmul,true);
    String err=OpValidation.validate(new TestCase(sd).expected(mmul.getVarName(),exp));
    assertNull(err);
  }
}
