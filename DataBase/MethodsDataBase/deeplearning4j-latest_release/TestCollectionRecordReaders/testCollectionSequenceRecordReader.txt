@Test public void testCollectionSequenceRecordReader() throws Exception {
  List<List<List<Writable>>> listOfSequences=new ArrayList<>();
  List<List<Writable>> sequence1=new ArrayList<>();
  sequence1.add(Arrays.asList((Writable)new IntWritable(0),new IntWritable(1)));
  sequence1.add(Arrays.asList((Writable)new IntWritable(2),new IntWritable(3)));
  listOfSequences.add(sequence1);
  List<List<Writable>> sequence2=new ArrayList<>();
  sequence2.add(Arrays.asList((Writable)new IntWritable(4),new IntWritable(5)));
  sequence2.add(Arrays.asList((Writable)new IntWritable(6),new IntWritable(7)));
  listOfSequences.add(sequence2);
  SequenceRecordReader seqRR=new CollectionSequenceRecordReader(listOfSequences);
  assertTrue(seqRR.hasNext());
  assertEquals(sequence1,seqRR.sequenceRecord());
  assertEquals(sequence2,seqRR.sequenceRecord());
  assertFalse(seqRR.hasNext());
  seqRR.reset();
  assertEquals(sequence1,seqRR.sequenceRecord());
  assertEquals(sequence2,seqRR.sequenceRecord());
  assertFalse(seqRR.hasNext());
  seqRR.reset();
  List<List<List<Writable>>> out2=new ArrayList<>();
  List<SequenceRecord> seq=new ArrayList<>();
  List<RecordMetaData> meta=new ArrayList<>();
  while (seqRR.hasNext()) {
    SequenceRecord r=seqRR.nextSequence();
    out2.add(r.getSequenceRecord());
    seq.add(r);
    meta.add(r.getMetaData());
  }
  assertEquals(listOfSequences,out2);
  List<SequenceRecord> fromMeta=seqRR.loadSequenceFromMetaData(meta);
  assertEquals(seq,fromMeta);
}
