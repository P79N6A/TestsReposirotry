@Test public void testApplyingPreTrainConfigAndParams(){
  int nIn=10;
  int nOut=10;
  MultiLayerNetwork aePre=getAeModel(true,nIn,nOut);
  assertTrue(aePre.conf().isPretrain());
  assertTrue(aePre.getLayer(0).conf().isPretrain());
  assertFalse(aePre.getLayer(1).conf().isPretrain());
  int actualNP=(int)aePre.numParams();
  assertEquals(2 * (nIn * nOut + nOut) + nIn,actualNP);
  INDArray params=aePre.params();
  assertEquals(params.length(),actualNP);
  Map<String,INDArray> paramTable=aePre.paramTable();
  assertTrue(paramTable.containsKey("0_vb"));
  aePre.setParam("0_vb",Nd4j.ones(10));
  params=aePre.getParam("0_vb");
  assertEquals(Nd4j.ones(10),params);
  MultiLayerNetwork aeNoPre=getAeModel(false,nIn,nOut);
  assertFalse(aeNoPre.conf().isPretrain());
  assertFalse(aeNoPre.getLayer(0).conf().isPretrain());
  assertFalse(aePre.getLayer(1).conf().isPretrain());
  actualNP=(int)aeNoPre.numParams();
  assertEquals(2 * (nIn * nOut + nOut) + nIn,actualNP);
  params=aeNoPre.params();
  assertEquals(params.length(),actualNP);
  paramTable=aePre.paramTable();
  assertTrue(paramTable.containsKey("0_vb"));
}
