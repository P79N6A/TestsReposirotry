@Test @org.junit.Ignore public void testLocalExecutionGridSearch() throws Exception {
  MultiLayerSpace mls=new MultiLayerSpace.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).updater(new SgdSpace(new ContinuousParameterSpace(0.0001,0.2))).l2(new ContinuousParameterSpace(0.0001,0.01)).addLayer(new DenseLayerSpace.Builder().nIn(4).nOut(new IntegerParameterSpace(2,10)).activation(new DiscreteParameterSpace<>(Activation.RELU,Activation.TANH)).build(),new IntegerParameterSpace(1,2)).addLayer(new OutputLayerSpace.Builder().nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).numEpochs(3).pretrain(false).backprop(true).build();
  Map<String,Object> commands=new HashMap<>();
  commands.put(DataSetIteratorFactoryProvider.FACTORY_KEY,TestDataFactoryProviderMnist.class.getCanonicalName());
  CandidateGenerator candidateGenerator=new GridSearchCandidateGenerator(mls,5,GridSearchCandidateGenerator.Mode.Sequential,commands);
  DataProvider dataProvider=new DataSetIteratorFactoryProvider();
  String modelSavePath=new File(System.getProperty("java.io.tmpdir"),"ArbiterDL4JTest/").getAbsolutePath();
  File f=new File(modelSavePath);
  if (f.exists())   f.delete();
  f.mkdir();
  f.deleteOnExit();
  if (!f.exists())   throw new RuntimeException();
  OptimizationConfiguration configuration=new OptimizationConfiguration.Builder().candidateGenerator(candidateGenerator).dataProvider(dataProvider).modelSaver(new FileModelSaver(modelSavePath)).scoreFunction(new TestSetLossScoreFunction()).terminationConditions(new MaxTimeCondition(2,TimeUnit.MINUTES),new MaxCandidatesCondition(100)).build();
  IOptimizationRunner runner=new LocalOptimizationRunner(configuration,new MultiLayerNetworkTaskCreator(new ClassificationEvaluator()));
  runner.execute();
  System.out.println("----- COMPLETE -----");
}
