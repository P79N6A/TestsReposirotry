@Test public void testVocabPeristence() throws Exception {
  val vocabA=new AbstractCache.Builder<VocabWord>().build();
  vocabA.addToken(new VocabWord(3.0,"alpha"));
  vocabA.addWordToIndex(1,"alpha");
  vocabA.addToken(new VocabWord(4.0,"beta"));
  vocabA.addWordToIndex(0,"beta");
  val tmpFile=File.createTempFile("sdsds","sfdsfdsgsdf");
  tmpFile.deleteOnExit();
  vocabA.setTotalWordOccurences(200);
  vocabA.incrementTotalDocCount(100);
  assertEquals(100,vocabA.totalNumberOfDocs());
  assertEquals(200,vocabA.totalWordOccurrences());
  WordVectorSerializer.writeVocabCache(vocabA,tmpFile);
  val vocabB=WordVectorSerializer.readVocabCache(tmpFile);
  assertEquals(vocabA.wordAtIndex(0),vocabB.wordAtIndex(0));
  assertEquals(vocabA.wordAtIndex(1),vocabB.wordAtIndex(1));
  assertEquals(vocabA.numWords(),vocabB.numWords());
  assertEquals(vocabA.totalNumberOfDocs(),vocabB.totalNumberOfDocs());
  assertEquals(vocabA.totalWordOccurrences(),vocabB.totalWordOccurrences());
}
