@Test public void testCGroup(){
  List<Tuple2<String,String>> leftMap=new ArrayList<>();
  List<Tuple2<String,String>> rightMap=new ArrayList<>();
  leftMap.add(new Tuple2<>("cat","adam"));
  leftMap.add(new Tuple2<>("dog","adam"));
  rightMap.add(new Tuple2<>("fish","alex"));
  rightMap.add(new Tuple2<>("cat","alice"));
  rightMap.add(new Tuple2<>("dog","steve"));
  List<String> pets=Arrays.asList("cat","dog");
  JavaSparkContext sc=getContext();
  JavaPairRDD<String,String> left=sc.parallelize(leftMap).mapToPair(new PairFunction<Tuple2<String,String>,String,String>(){
    @Override public Tuple2<String,String> call(    Tuple2<String,String> stringStringTuple2) throws Exception {
      return stringStringTuple2;
    }
  }
);
  JavaPairRDD<String,String> right=sc.parallelize(rightMap).mapToPair(new PairFunction<Tuple2<String,String>,String,String>(){
    @Override public Tuple2<String,String> call(    Tuple2<String,String> stringStringTuple2) throws Exception {
      return stringStringTuple2;
    }
  }
);
  System.out.println(left.cogroup(right).collect());
}
