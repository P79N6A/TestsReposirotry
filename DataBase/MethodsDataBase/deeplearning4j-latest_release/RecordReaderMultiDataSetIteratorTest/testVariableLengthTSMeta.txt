@Test public void testVariableLengthTSMeta() throws Exception {
  File rootDir=temporaryFolder.newFolder();
  for (int i=0; i < 3; i++) {
    new ClassPathResource(String.format("csvsequence_%d.txt",i)).getTempFileFromArchive(rootDir);
    new ClassPathResource(String.format("csvsequencelabels_%d.txt",i)).getTempFileFromArchive(rootDir);
    new ClassPathResource(String.format("csvsequencelabelsShort_%d.txt",i)).getTempFileFromArchive(rootDir);
  }
  String featuresPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequence_%d.txt");
  String labelsPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequencelabelsShort_%d.txt");
  SequenceRecordReader featureReader3=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader3=new CSVSequenceRecordReader(1,",");
  featureReader3.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader3.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReader featureReader4=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader4=new CSVSequenceRecordReader(1,",");
  featureReader4.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader4.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  RecordReaderMultiDataSetIterator rrmdsiStart=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("in",featureReader3).addSequenceReader("out",labelReader3).addInput("in").addOutputOneHot("out",0,4).sequenceAlignmentMode(RecordReaderMultiDataSetIterator.AlignmentMode.ALIGN_START).build();
  RecordReaderMultiDataSetIterator rrmdsiEnd=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("in",featureReader4).addSequenceReader("out",labelReader4).addInput("in").addOutputOneHot("out",0,4).sequenceAlignmentMode(RecordReaderMultiDataSetIterator.AlignmentMode.ALIGN_END).build();
  rrmdsiStart.setCollectMetaData(true);
  rrmdsiEnd.setCollectMetaData(true);
  int count=0;
  while (rrmdsiStart.hasNext()) {
    MultiDataSet mdsStart=rrmdsiStart.next();
    MultiDataSet mdsEnd=rrmdsiEnd.next();
    MultiDataSet mdsStartFromMeta=rrmdsiStart.loadFromMetaData(mdsStart.getExampleMetaData(RecordMetaData.class));
    MultiDataSet mdsEndFromMeta=rrmdsiEnd.loadFromMetaData(mdsEnd.getExampleMetaData(RecordMetaData.class));
    assertEquals(mdsStart,mdsStartFromMeta);
    assertEquals(mdsEnd,mdsEndFromMeta);
    count++;
  }
  assertFalse(rrmdsiStart.hasNext());
  assertFalse(rrmdsiEnd.hasNext());
  assertEquals(3,count);
}
