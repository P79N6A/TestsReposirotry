@Test public void testSplittingCSVSequenceMeta() throws Exception {
  File rootDir=temporaryFolder.newFolder();
  for (int i=0; i < 3; i++) {
    new ClassPathResource(String.format("csvsequence_%d.txt",i)).getTempFileFromArchive(rootDir);
    new ClassPathResource(String.format("csvsequencelabels_%d.txt",i)).getTempFileFromArchive(rootDir);
    new ClassPathResource(String.format("csvsequencelabelsShort_%d.txt",i)).getTempFileFromArchive(rootDir);
  }
  String featuresPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequence_%d.txt");
  String labelsPath=FilenameUtils.concat(rootDir.getAbsolutePath(),"csvsequencelabels_%d.txt");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReader featureReader2=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader2=new CSVSequenceRecordReader(1,",");
  featureReader2.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader2.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  RecordReaderMultiDataSetIterator srrmdsi=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("seq1",featureReader2).addSequenceReader("seq2",labelReader2).addInput("seq1",0,1).addInput("seq1",2,2).addOutputOneHot("seq2",0,4).build();
  srrmdsi.setCollectMetaData(true);
  int count=0;
  while (srrmdsi.hasNext()) {
    MultiDataSet mds=srrmdsi.next();
    MultiDataSet fromMeta=srrmdsi.loadFromMetaData(mds.getExampleMetaData(RecordMetaData.class));
    assertEquals(mds,fromMeta);
    count++;
  }
  assertEquals(3,count);
}
