@Test public void testRepartitioningApprox(){
  List<String> list=new ArrayList<>();
  for (int i=0; i < 1000; i++) {
    list.add(String.valueOf(i));
  }
  JavaRDD<String> rdd=sc.parallelize(list);
  rdd=rdd.repartition(200);
  JavaRDD<String> rdd2=SparkUtils.repartitionApproximateBalance(rdd,Repartition.Always,10);
  assertFalse(rdd == rdd2);
  assertEquals(10,rdd2.partitions().size());
  for (int i=0; i < 10; i++) {
    List<String> partition=rdd2.collectPartitions(new int[]{i})[0];
    System.out.println("Partition " + i + " size: "+ partition.size());
    assertTrue(partition.size() >= 90 && partition.size() <= 110);
  }
}
