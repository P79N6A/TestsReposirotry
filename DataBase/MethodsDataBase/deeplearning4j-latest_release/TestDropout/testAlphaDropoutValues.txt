@Test public void testAlphaDropoutValues(){
  Nd4j.getRandom().setSeed(12345);
  double p=0.4;
  AlphaDropout d=new AlphaDropout(p);
  double SELU_ALPHA=1.6732632423543772;
  double SELU_LAMBDA=1.0507009873554804;
  double alphaPrime=-SELU_LAMBDA * SELU_ALPHA;
  double a=1.0 / Math.sqrt((p + alphaPrime * alphaPrime * p* (1 - p)));
  double b=-1.0 / Math.sqrt(p + alphaPrime * alphaPrime * p* (1 - p)) * (1 - p) * alphaPrime;
  double actA=d.a(p);
  double actB=d.b(p);
  assertEquals(a,actA,1e-6);
  assertEquals(b,actB,1e-6);
  INDArray in=Nd4j.ones(10,10);
  INDArray out=d.applyDropout(in,Nd4j.create(in.shape()),0,0,LayerWorkspaceMgr.noWorkspacesImmutable());
  int countValueDropped=0;
  int countEqn=0;
  double eqn=a * 1 + b;
  double valueDropped=a * alphaPrime + b;
  for (int i=0; i < 100; i++) {
    double v=out.getDouble(i);
    if (v >= valueDropped - 1e-6 && v <= valueDropped + 1e-6) {
      countValueDropped++;
    }
 else     if (v >= eqn - 1e-6 && v <= eqn + 1e-6) {
      countEqn++;
    }
  }
  assertEquals(100,countValueDropped + countEqn);
  assertTrue(countValueDropped >= 25 && countValueDropped <= 75);
  assertTrue(countEqn >= 25 && countEqn <= 75);
}
