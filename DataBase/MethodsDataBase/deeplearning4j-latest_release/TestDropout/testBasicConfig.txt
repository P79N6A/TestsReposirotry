@Test public void testBasicConfig(){
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().dropOut(0.6).list().layer(new DenseLayer.Builder().nIn(10).nOut(10).build()).layer(new DenseLayer.Builder().nIn(10).nOut(10).dropOut(0.7).build()).layer(new DenseLayer.Builder().nIn(10).nOut(10).dropOut(new AlphaDropout(0.5)).build()).build();
  assertEquals(new Dropout(0.6),conf.getConf(0).getLayer().getIDropout());
  assertEquals(new Dropout(0.7),conf.getConf(1).getLayer().getIDropout());
  assertEquals(new AlphaDropout(0.5),conf.getConf(2).getLayer().getIDropout());
  ComputationGraphConfiguration conf2=new NeuralNetConfiguration.Builder().dropOut(0.6).graphBuilder().addInputs("in").addLayer("0",new DenseLayer.Builder().nIn(10).nOut(10).build(),"in").addLayer("1",new DenseLayer.Builder().nIn(10).nOut(10).dropOut(0.7).build(),"0").addLayer("2",new DenseLayer.Builder().nIn(10).nOut(10).dropOut(new AlphaDropout(0.5)).build(),"1").setOutputs("2").build();
  assertEquals(new Dropout(0.6),((LayerVertex)conf2.getVertices().get("0")).getLayerConf().getLayer().getIDropout());
  assertEquals(new Dropout(0.7),((LayerVertex)conf2.getVertices().get("1")).getLayerConf().getLayer().getIDropout());
  assertEquals(new AlphaDropout(0.5),((LayerVertex)conf2.getVertices().get("2")).getLayerConf().getLayer().getIDropout());
}
