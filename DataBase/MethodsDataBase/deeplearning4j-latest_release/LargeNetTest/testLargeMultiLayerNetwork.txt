@Ignore @Test public void testLargeMultiLayerNetwork(){
  Nd4j.setDataType(DataBuffer.Type.FLOAT);
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().list().layer(new EmbeddingLayer.Builder().nIn(10_000_000).nOut(300).build()).layer(new OutputLayer.Builder().nIn(300).nOut(10).activation(Activation.SOFTMAX).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  INDArray params=net.params();
  long paramsLength=params.length();
  long expParamsLength=10_000_000L * 300 + 300 * 10 + 10;
  assertEquals(expParamsLength,paramsLength);
  long[] expW=new long[]{10_000_000,300};
  assertArrayEquals(expW,net.getParam("0_W").shape());
  long[] expW1=new long[]{300,10};
  assertArrayEquals(expW1,net.getParam("1_W").shape());
  long[] expB1=new long[]{1,10};
  assertArrayEquals(expB1,net.getParam("1_b").shape());
}
