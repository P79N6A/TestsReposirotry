@Test public void testImageServer() throws Exception {
  serverChooser.runMain(new String[]{"--jsonPath",imageTransformFile.getAbsolutePath(),"-dp","9060","-dt",TransformDataType.IMAGE.toString()});
  SingleImageRecord record=new SingleImageRecord(new ClassPathResource("datavec-spark-inference/testimages/class0/0.jpg").getFile().toURI());
  JsonNode jsonNode=Unirest.post("http://localhost:9060/transformincrementalarray").header("accept","application/json").header("Content-Type","application/json").body(record).asJson().getBody();
  Base64NDArrayBody array=Unirest.post("http://localhost:9060/transformincrementalarray").header("accept","application/json").header("Content-Type","application/json").body(record).asObject(Base64NDArrayBody.class).getBody();
  BatchImageRecord batch=new BatchImageRecord();
  batch.add(new ClassPathResource("datavec-spark-inference/testimages/class0/0.jpg").getFile().toURI());
  batch.add(new ClassPathResource("datavec-spark-inference/testimages/class0/1.png").getFile().toURI());
  batch.add(new ClassPathResource("datavec-spark-inference/testimages/class0/2.jpg").getFile().toURI());
  JsonNode jsonNodeBatch=Unirest.post("http://localhost:9060/transformarray").header("accept","application/json").header("Content-Type","application/json").body(batch).asJson().getBody();
  Base64NDArrayBody batchArray=Unirest.post("http://localhost:9060/transformarray").header("accept","application/json").header("Content-Type","application/json").body(batch).asObject(Base64NDArrayBody.class).getBody();
  INDArray result=getNDArray(jsonNode);
  assertEquals(1,result.size(0));
  INDArray batchResult=getNDArray(jsonNodeBatch);
  assertEquals(3,batchResult.size(0));
  serverChooser.getSparkTransformServer().stop();
}
