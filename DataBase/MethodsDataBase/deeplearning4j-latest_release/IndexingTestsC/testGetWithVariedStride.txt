@Test public void testGetWithVariedStride(){
  int ph=0;
  int pw=0;
  int sy=2;
  int sx=2;
  int iLim=8;
  int jLim=8;
  int i=0;
  int j=0;
  INDArray img=Nd4j.create(new double[]{1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4},new int[]{1,1,8,8});
  INDArray padded=Nd4j.pad(img,new int[][]{{0,0},{0,0},{ph,ph + sy - 1},{pw,pw + sx - 1}},Nd4j.PadMode.CONSTANT);
  INDArray get=padded.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(i,sy,iLim),NDArrayIndex.interval(j,sx,jLim));
  assertArrayEquals(new int[]{81,81,18,2},get.stride());
  INDArray assertion=Nd4j.create(new double[]{1,1,1,1,3,3,3,3,1,1,1,1,3,3,3,3},new int[]{1,1,4,4});
  assertEquals(assertion,get);
  i=1;
  iLim=9;
  INDArray get3=padded.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(i,sy,iLim),NDArrayIndex.interval(j,sx,jLim));
  INDArray assertion2=Nd4j.create(new double[]{2,2,2,2,4,4,4,4,2,2,2,2,4,4,4,4},new int[]{1,1,4,4});
  assertArrayEquals(new int[]{81,81,18,2},get3.stride());
  assertEquals(assertion2,get3);
  i=0;
  iLim=8;
  jLim=9;
  j=1;
  INDArray get2=padded.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(i,sy,iLim),NDArrayIndex.interval(j,sx,jLim));
  assertArrayEquals(new int[]{81,81,18,2},get2.stride());
  assertEquals(assertion,get2);
}
