public class PagerDutyActionFactoryTests extends ESTestCase {
  private PagerDutyActionFactory factory;
  private PagerDutyService service;
  @Before public void init() throws Exception {
    service=mock(PagerDutyService.class);
    factory=new PagerDutyActionFactory(mock(TextTemplateEngine.class),service);
  }
  public void testParseAction() throws Exception {
    PagerDutyAccount account=mock(PagerDutyAccount.class);
    when(service.getAccount("_account1")).thenReturn(account);
    PagerDutyAction action=triggerPagerDutyAction("_account1","_description").build();
    XContentBuilder jsonBuilder=jsonBuilder().value(action);
    XContentParser parser=createParser(jsonBuilder);
    parser.nextToken();
    PagerDutyAction parsedAction=PagerDutyAction.parse("_w1","_a1",parser);
    assertThat(parsedAction,is(action));
  }
  public void testParseActionUnknownAccount() throws Exception {
    factory=new PagerDutyActionFactory(mock(TextTemplateEngine.class),new PagerDutyService(Settings.EMPTY,null,new ClusterSettings(Settings.EMPTY,new HashSet<>(PagerDutyService.getSettings()))));
    PagerDutyAction action=triggerPagerDutyAction("_unknown","_body").build();
    XContentBuilder jsonBuilder=jsonBuilder().value(action);
    XContentParser parser=createParser(jsonBuilder);
    parser.nextToken();
    expectThrows(IllegalArgumentException.class,() -> factory.parseExecutable("_w1","_a1",parser));
  }
}
