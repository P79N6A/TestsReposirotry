class BlockingExporter extends CountingExporter {
  private final CountDownLatch latch;
  BlockingExporter(  CountDownLatch latch){
    super();
    this.latch=latch;
  }
  @Override public void export(  Collection<MonitoringDoc> docs,  ActionListener<Void> listener){
    super.export(docs,ActionListener.wrap(r -> {
      try {
        latch.await();
        listener.onResponse(null);
      }
 catch (      InterruptedException e) {
        listener.onFailure(new ExportException("BlockingExporter failed",e));
      }
    }
,listener::onFailure));
  }
  @Override protected void doStart(){
  }
  @Override protected void doStop(){
  }
  @Override protected void doClose(){
  }
}
