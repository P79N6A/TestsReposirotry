public class PreBuiltTransportClientTests extends RandomizedTest {
  @Test public void testPluginInstalled(){
    try (TransportClient client=new PreBuiltTransportClient(Settings.EMPTY)){
      Settings settings=client.settings();
      assertEquals(Netty4Plugin.NETTY_TRANSPORT_NAME,NetworkModule.HTTP_DEFAULT_TYPE_SETTING.get(settings));
      assertEquals(Netty4Plugin.NETTY_TRANSPORT_NAME,NetworkModule.TRANSPORT_DEFAULT_TYPE_SETTING.get(settings));
    }
   }
  @Test public void testInstallPluginTwice(){
    for (    Class<? extends Plugin> plugin : Arrays.asList(ParentJoinPlugin.class,ReindexPlugin.class,PercolatorPlugin.class,MustachePlugin.class)) {
      try {
        new PreBuiltTransportClient(Settings.EMPTY,plugin);
        fail("exception expected");
      }
 catch (      IllegalArgumentException ex) {
        assertTrue("Expected message to start with [plugin already exists: ] but was instead [" + ex.getMessage() + "]",ex.getMessage().startsWith("plugin already exists: "));
      }
    }
  }
}
