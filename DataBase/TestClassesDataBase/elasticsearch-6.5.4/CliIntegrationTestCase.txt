public abstract class CliIntegrationTestCase extends ESRestTestCase {
  /** 
 * Read an address for Elasticsearch suitable for the CLI from the system properties.
 */
  public static String elasticsearchAddress(){
    String cluster=System.getProperty("tests.rest.cluster");
    return cluster.split(",")[0];
  }
  private EmbeddedCli cli;
  /** 
 * Asks the CLI Fixture to start a CLI instance.
 */
  @Before public void startCli() throws IOException {
    cli=new EmbeddedCli(CliIntegrationTestCase.elasticsearchAddress(),true,securityConfig());
  }
  @After public void orderlyShutdown() throws Exception {
    if (cli == null) {
      return;
    }
    cli.close();
    assertNoSearchContexts();
  }
  /** 
 * Override to add security configuration to the cli.
 */
  protected SecurityConfig securityConfig(){
    return null;
  }
  protected void index(  String index,  CheckedConsumer<XContentBuilder,IOException> body) throws IOException {
    Request request=new Request("PUT","/" + index + "/doc/1");
    request.addParameter("refresh","true");
    XContentBuilder builder=JsonXContent.contentBuilder().startObject();
    body.accept(builder);
    builder.endObject();
    request.setJsonEntity(Strings.toString(builder));
    client().performRequest(request);
  }
  public String command(  String command) throws IOException {
    return cli.command(command);
  }
  /** 
 * Read a line produced by the CLI. Note that these lines will contain  {@code xterm-256color}escape sequences.
 */
  public String readLine() throws IOException {
    return cli.readLine();
  }
}
