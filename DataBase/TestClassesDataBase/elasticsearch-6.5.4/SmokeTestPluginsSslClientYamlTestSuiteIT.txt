public class SmokeTestPluginsSslClientYamlTestSuiteIT extends ESClientYamlSuiteTestCase {
  private static final String USER="test_user";
  private static final String PASS="x-pack-test-password";
  private static final String KEYSTORE_PASS="testnode";
  public SmokeTestPluginsSslClientYamlTestSuiteIT(  @Name("yaml") ClientYamlTestCandidate testCandidate){
    super(testCandidate);
  }
  @ParametersFactory public static Iterable<Object[]> parameters() throws Exception {
    return ESClientYamlSuiteTestCase.createParameters();
  }
  static Path keyStore;
  @BeforeClass public static void getKeyStore(){
    try {
      keyStore=PathUtils.get(SmokeTestPluginsSslClientYamlTestSuiteIT.class.getResource("/testnode.jks").toURI());
    }
 catch (    URISyntaxException e) {
      throw new ElasticsearchException("exception while reading the store",e);
    }
    if (!Files.exists(keyStore)) {
      throw new IllegalStateException("Keystore file [" + keyStore + "] does not exist.");
    }
  }
  @AfterClass public static void clearKeyStore(){
    keyStore=null;
  }
  @Override protected Settings restClientSettings(){
    String token=basicAuthHeaderValue(USER,new SecureString(PASS.toCharArray()));
    return Settings.builder().put(ThreadContext.PREFIX + ".Authorization",token).put(ESRestTestCase.TRUSTSTORE_PATH,keyStore).put(ESRestTestCase.TRUSTSTORE_PASSWORD,KEYSTORE_PASS).build();
  }
  @Override protected String getProtocol(){
    return "https";
  }
}
