class TestResponseHandler implements TransportResponseHandler<TestResponse> {
  private final int id;
  TestResponseHandler(  int id){
    this.id=id;
  }
  @Override public TestResponse newInstance(){
    return new TestResponse();
  }
  @Override public void handleResponse(  TestResponse response){
    logger.debug("---> received response: {}",response.info);
    allRequestsDone.countDown();
  }
  @Override public void handleException(  TransportException exp){
    logger.debug((Supplier<?>)() -> new ParameterizedMessage("---> received exception for id {}",id),exp);
    allRequestsDone.countDown();
    Throwable unwrap=ExceptionsHelper.unwrap(exp,IOException.class);
    assertNotNull(unwrap);
    assertEquals(IOException.class,unwrap.getClass());
    assertEquals("forced failure",unwrap.getMessage());
  }
  @Override public String executor(){
    return randomBoolean() ? ThreadPool.Names.SAME : ThreadPool.Names.GENERIC;
  }
}
