/** 
 * Runs rest tests against external cluster 
 */
public class WatcherJiraYamlTestSuiteIT extends ESClientYamlSuiteTestCase {
  public WatcherJiraYamlTestSuiteIT(  @Name("yaml") ClientYamlTestCandidate testCandidate){
    super(testCandidate);
  }
  @ParametersFactory public static Iterable<Object[]> parameters() throws Exception {
    return ESClientYamlSuiteTestCase.createParameters();
  }
  @Before public void startWatcher() throws Exception {
    final List<String> watcherTemplates=Arrays.asList(WatcherIndexTemplateRegistryField.TEMPLATE_NAMES);
    assertBusy(() -> {
      try {
        getAdminExecutionContext().callApi("xpack.watcher.start",emptyMap(),emptyList(),emptyMap());
        for (        String template : watcherTemplates) {
          ClientYamlTestResponse templateExistsResponse=getAdminExecutionContext().callApi("indices.exists_template",singletonMap("name",template),emptyList(),emptyMap());
          assertThat(templateExistsResponse.getStatusCode(),is(200));
        }
        ClientYamlTestResponse response=getAdminExecutionContext().callApi("xpack.watcher.stats",emptyMap(),emptyList(),emptyMap());
        String state=(String)response.evaluate("stats.0.watcher_state");
        assertThat(state,is("started"));
      }
 catch (      IOException e) {
        throw new AssertionError(e);
      }
    }
);
  }
  @After public void stopWatcher() throws Exception {
    assertBusy(() -> {
      try {
        getAdminExecutionContext().callApi("xpack.watcher.stop",emptyMap(),emptyList(),emptyMap());
        ClientYamlTestResponse response=getAdminExecutionContext().callApi("xpack.watcher.stats",emptyMap(),emptyList(),emptyMap());
        String state=(String)response.evaluate("stats.0.watcher_state");
        assertThat(state,is("stopped"));
      }
 catch (      IOException e) {
        throw new AssertionError(e);
      }
    }
);
  }
}
