/** 
 * Action filter that will reject the request if it isn't authenticated.
 */
public static class TestFilter implements ActionFilter {
  /** 
 * The authorization required. Corresponds to username="Aladdin" and password="open sesame". It is the example in <a href="https://tools.ietf.org/html/rfc1945#section-11.1">HTTP/1.0's RFC</a>.
 */
  private static final String REQUIRED_AUTH="Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==";
  private static final String AUTHORIZATION_HEADER="Authorization";
  private static final String EXAMPLE_HEADER="Example-Header";
  private final ThreadContext context;
  public TestFilter(  ThreadPool threadPool){
    context=threadPool.getThreadContext();
  }
  @Override public int order(){
    return Integer.MIN_VALUE;
  }
  @Override public <Request extends ActionRequest,Response extends ActionResponse>void apply(  Task task,  String action,  Request request,  ActionListener<Response> listener,  ActionFilterChain<Request,Response> chain){
    if (false == action.equals(SearchAction.NAME)) {
      chain.proceed(task,action,request,listener);
      return;
    }
    if (context.getHeader(EXAMPLE_HEADER) != null) {
      throw new IllegalArgumentException("Hurray! Sent the header!");
    }
    String auth=context.getHeader(AUTHORIZATION_HEADER);
    if (auth == null) {
      ElasticsearchSecurityException e=new ElasticsearchSecurityException("Authentication required",RestStatus.UNAUTHORIZED);
      e.addHeader("WWW-Authenticate","Basic realm=auth-realm");
      throw e;
    }
    if (false == REQUIRED_AUTH.equals(auth)) {
      throw new ElasticsearchSecurityException("Bad Authorization",RestStatus.FORBIDDEN);
    }
    chain.proceed(task,action,request,listener);
  }
}
