public class RenameProcessorFactoryTests extends ESTestCase {
  private RenameProcessor.Factory factory;
  @Before public void init(){
    factory=new RenameProcessor.Factory(TestTemplateService.instance());
  }
  public void testCreate() throws Exception {
    Map<String,Object> config=new HashMap<>();
    config.put("field","old_field");
    config.put("target_field","new_field");
    String processorTag=randomAlphaOfLength(10);
    RenameProcessor renameProcessor=factory.create(null,processorTag,config);
    assertThat(renameProcessor.getTag(),equalTo(processorTag));
    assertThat(renameProcessor.getField().newInstance(Collections.emptyMap()).execute(),equalTo("old_field"));
    assertThat(renameProcessor.getTargetField().newInstance(Collections.emptyMap()).execute(),equalTo("new_field"));
    assertThat(renameProcessor.isIgnoreMissing(),equalTo(false));
  }
  public void testCreateWithIgnoreMissing() throws Exception {
    Map<String,Object> config=new HashMap<>();
    config.put("field","old_field");
    config.put("target_field","new_field");
    config.put("ignore_missing",true);
    String processorTag=randomAlphaOfLength(10);
    RenameProcessor renameProcessor=factory.create(null,processorTag,config);
    assertThat(renameProcessor.getTag(),equalTo(processorTag));
    assertThat(renameProcessor.getField().newInstance(Collections.emptyMap()).execute(),equalTo("old_field"));
    assertThat(renameProcessor.getTargetField().newInstance(Collections.emptyMap()).execute(),equalTo("new_field"));
    assertThat(renameProcessor.isIgnoreMissing(),equalTo(true));
  }
  public void testCreateNoFieldPresent() throws Exception {
    Map<String,Object> config=new HashMap<>();
    config.put("target_field","new_field");
    try {
      factory.create(null,null,config);
      fail("factory create should have failed");
    }
 catch (    ElasticsearchParseException e) {
      assertThat(e.getMessage(),equalTo("[field] required property is missing"));
    }
  }
  public void testCreateNoToPresent() throws Exception {
    Map<String,Object> config=new HashMap<>();
    config.put("field","old_field");
    try {
      factory.create(null,null,config);
      fail("factory create should have failed");
    }
 catch (    ElasticsearchParseException e) {
      assertThat(e.getMessage(),equalTo("[target_field] required property is missing"));
    }
  }
}
