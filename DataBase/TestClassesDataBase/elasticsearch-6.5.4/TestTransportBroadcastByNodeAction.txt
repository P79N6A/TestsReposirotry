class TestTransportBroadcastByNodeAction extends TransportBroadcastByNodeAction<Request,Response,TransportBroadcastByNodeAction.EmptyResult> {
  private final Map<ShardRouting,Object> shards=new HashMap<>();
  TestTransportBroadcastByNodeAction(  Settings settings,  TransportService transportService,  ActionFilters actionFilters,  IndexNameExpressionResolver indexNameExpressionResolver,  Supplier<Request> request,  String executor){
    super(settings,"indices:admin/test",THREAD_POOL,TransportBroadcastByNodeActionTests.this.clusterService,transportService,actionFilters,indexNameExpressionResolver,request,executor);
  }
  @Override protected EmptyResult readShardResult(  StreamInput in) throws IOException {
    return EmptyResult.readEmptyResultFrom(in);
  }
  @Override protected Response newResponse(  Request request,  int totalShards,  int successfulShards,  int failedShards,  List<EmptyResult> emptyResults,  List<DefaultShardOperationFailedException> shardFailures,  ClusterState clusterState){
    return new Response(totalShards,successfulShards,failedShards,shardFailures);
  }
  @Override protected Request readRequestFrom(  StreamInput in) throws IOException {
    final Request request=new Request();
    request.readFrom(in);
    return request;
  }
  @Override protected EmptyResult shardOperation(  Request request,  ShardRouting shardRouting){
    if (rarely()) {
      shards.put(shardRouting,Boolean.TRUE);
      return EmptyResult.INSTANCE;
    }
 else {
      ElasticsearchException e=new ElasticsearchException("operation failed");
      shards.put(shardRouting,e);
      throw e;
    }
  }
  @Override protected ShardsIterator shards(  ClusterState clusterState,  Request request,  String[] concreteIndices){
    return clusterState.routingTable().allShards(new String[]{TEST_INDEX});
  }
  @Override protected ClusterBlockException checkGlobalBlock(  ClusterState state,  Request request){
    return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE);
  }
  @Override protected ClusterBlockException checkRequestBlock(  ClusterState state,  Request request,  String[] concreteIndices){
    return state.blocks().indicesBlockedException(ClusterBlockLevel.METADATA_WRITE,concreteIndices);
  }
  public Map<ShardRouting,Object> getResults(){
    return shards;
  }
}
