public static class TransportTestTaskAction extends TransportTasksAction<TestTask,TestTasksRequest,TestTasksResponse,TestTaskResponse> {
  @Inject public TransportTestTaskAction(  Settings settings,  ThreadPool threadPool,  ClusterService clusterService,  TransportService transportService,  ActionFilters actionFilters,  IndexNameExpressionResolver indexNameExpressionResolver,  String nodeExecutor){
    super(settings,TestTaskAction.NAME,threadPool,clusterService,transportService,actionFilters,indexNameExpressionResolver,TestTasksRequest::new,TestTasksResponse::new,ThreadPool.Names.MANAGEMENT);
  }
  @Override protected TestTasksResponse newResponse(  TestTasksRequest request,  List<TestTaskResponse> tasks,  List<TaskOperationFailure> taskOperationFailures,  List<FailedNodeException> failedNodeExceptions){
    return new TestTasksResponse(tasks,taskOperationFailures,failedNodeExceptions);
  }
  @Override protected TestTaskResponse readTaskResponse(  StreamInput in) throws IOException {
    return new TestTaskResponse(in);
  }
  @Override protected void taskOperation(  TestTasksRequest request,  TestTask task,  ActionListener<TestTaskResponse> listener){
    task.setOperation(request.operation);
    listener.onResponse(new TestTaskResponse());
  }
}
