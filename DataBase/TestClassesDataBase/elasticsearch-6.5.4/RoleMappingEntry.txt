static class RoleMappingEntry {
  @Nullable public final String fileContent;
  @Nullable public final String nativeContent;
  RoleMappingEntry(  @Nullable String fileContent,  @Nullable String nativeContent){
    this.fileContent=fileContent;
    this.nativeContent=nativeContent;
  }
  String getFileContent(){
    return fileContent;
  }
  String getNativeContent(){
    return nativeContent;
  }
  RoleMappingEntry pickEntry(  Supplier<Boolean> shouldPickFileContent){
    if (nativeContent == null) {
      return new RoleMappingEntry(fileContent,null);
    }
    if (fileContent == null) {
      return new RoleMappingEntry(null,nativeContent);
    }
    if (shouldPickFileContent.get()) {
      return new RoleMappingEntry(fileContent,null);
    }
 else {
      return new RoleMappingEntry(null,nativeContent);
    }
  }
  @Override public boolean equals(  Object o){
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final RoleMappingEntry that=(RoleMappingEntry)o;
    return Objects.equals(this.fileContent,that.fileContent) && Objects.equals(this.nativeContent,that.nativeContent);
  }
  @Override public int hashCode(){
    int result=Objects.hashCode(fileContent);
    result=31 * result + Objects.hashCode(nativeContent);
    return result;
  }
}
