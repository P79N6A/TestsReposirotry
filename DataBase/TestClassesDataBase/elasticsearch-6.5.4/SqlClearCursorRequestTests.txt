public class SqlClearCursorRequestTests extends AbstractSerializingTestCase<SqlClearCursorRequest> {
  public Mode testMode;
  @Before public void setup(){
    testMode=randomFrom(Mode.values());
  }
  @Override protected SqlClearCursorRequest createTestInstance(){
    return new SqlClearCursorRequest(testMode,randomAlphaOfLength(100));
  }
  @Override protected Writeable.Reader<SqlClearCursorRequest> instanceReader(){
    return SqlClearCursorRequest::new;
  }
  @Override protected SqlClearCursorRequest doParseInstance(  XContentParser parser){
    return SqlClearCursorRequest.fromXContent(parser,testMode);
  }
  @Override protected SqlClearCursorRequest mutateInstance(  SqlClearCursorRequest instance) throws IOException {
    @SuppressWarnings("unchecked") Consumer<SqlClearCursorRequest> mutator=randomFrom(request -> request.mode(randomValueOtherThan(request.mode(),() -> randomFrom(Mode.values()))),request -> request.setCursor(randomValueOtherThan(request.getCursor(),SqlQueryResponseTests::randomStringCursor)));
    SqlClearCursorRequest newRequest=new SqlClearCursorRequest(instance.mode(),instance.getCursor());
    mutator.accept(newRequest);
    return newRequest;
  }
}
