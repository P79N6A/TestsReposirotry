private class TestBroadcastReplicationAction extends TransportBroadcastReplicationAction<DummyBroadcastRequest,BroadcastResponse,BasicReplicationRequest,ReplicationResponse> {
  protected final Set<Tuple<ShardId,ActionListener<ReplicationResponse>>> capturedShardRequests=ConcurrentCollections.newConcurrentSet();
  TestBroadcastReplicationAction(  Settings settings,  ThreadPool threadPool,  ClusterService clusterService,  TransportService transportService,  ActionFilters actionFilters,  IndexNameExpressionResolver indexNameExpressionResolver,  TransportReplicationAction replicatedBroadcastShardAction){
    super("internal:test-broadcast-replication-action",DummyBroadcastRequest::new,settings,threadPool,clusterService,transportService,actionFilters,indexNameExpressionResolver,replicatedBroadcastShardAction);
  }
  @Override protected ReplicationResponse newShardResponse(){
    return new ReplicationResponse();
  }
  @Override protected BasicReplicationRequest newShardRequest(  DummyBroadcastRequest request,  ShardId shardId){
    return new BasicReplicationRequest().setShardId(shardId);
  }
  @Override protected BroadcastResponse newResponse(  int successfulShards,  int failedShards,  int totalNumCopies,  List<DefaultShardOperationFailedException> shardFailures){
    return new BroadcastResponse(totalNumCopies,successfulShards,failedShards,shardFailures);
  }
  @Override protected void shardExecute(  Task task,  DummyBroadcastRequest request,  ShardId shardId,  ActionListener<ReplicationResponse> shardActionListener){
    capturedShardRequests.add(new Tuple<>(shardId,shardActionListener));
  }
}
