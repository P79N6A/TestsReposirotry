public class BootstrapTests extends ESTestCase {
  Environment env;
  List<FileSystem> fileSystems=new ArrayList<>();
  @After public void closeMockFileSystems() throws IOException {
    IOUtils.close(fileSystems);
  }
  @Before public void setupEnv() throws IOException {
    env=KeyStoreCommandTestCase.setupEnv(true,fileSystems);
  }
  public void testLoadSecureSettings() throws Exception {
    final Path configPath=env.configFile();
    final SecureString seed;
    try (KeyStoreWrapper keyStoreWrapper=KeyStoreWrapper.create()){
      seed=KeyStoreWrapper.SEED_SETTING.get(Settings.builder().setSecureSettings(keyStoreWrapper).build());
      assertNotNull(seed);
      assertTrue(seed.length() > 0);
      keyStoreWrapper.save(configPath,new char[0]);
    }
     assertTrue(Files.exists(configPath.resolve("elasticsearch.keystore")));
    try (SecureSettings secureSettings=Bootstrap.loadSecureSettings(env)){
      SecureString seedAfterLoad=KeyStoreWrapper.SEED_SETTING.get(Settings.builder().setSecureSettings(secureSettings).build());
      assertEquals(seedAfterLoad.toString(),seed.toString());
      assertTrue(Files.exists(configPath.resolve("elasticsearch.keystore")));
    }
   }
}
