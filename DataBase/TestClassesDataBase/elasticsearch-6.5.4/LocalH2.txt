public class LocalH2 extends ExternalResource implements CheckedSupplier<Connection,SQLException> {
  private static String memUrl(  String name){
    String n=name == null ? "" : name;
    return "jdbc:h2:mem:" + n + ";DATABASE_TO_UPPER=false;ALIAS_COLUMN_NAME=true";
  }
static {
    try {
      Class.forName("org.h2.Driver");
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException(e);
    }
  }
  /** 
 * Creates an in memory anonymous database and returns the only connection to it. Closing the connection will remove the db.
 */
  public static Connection anonymousDb() throws SQLException {
    return DriverManager.getConnection(memUrl(null));
  }
  private static final Properties DEFAULTS=new Properties();
  private final String url;
  private Connection keepAlive;
  private CheckedConsumer<Connection,SQLException> initializer;
  public LocalH2(  CheckedConsumer<Connection,SQLException> initializer){
    this.url=memUrl("essql");
    this.initializer=initializer;
  }
  @Override protected void before() throws Throwable {
    keepAlive=get();
    initializer.accept(keepAlive);
  }
  @Override protected void after(){
    try {
      keepAlive.close();
    }
 catch (    SQLException ex) {
    }
  }
  @Override public Connection get() throws SQLException {
    return DriverManager.getConnection(url,DEFAULTS);
  }
}
