public class TransportBulkActionTests extends ESTestCase {
  /** 
 * Services needed by bulk action 
 */
  private TransportService transportService;
  private ClusterService clusterService;
  private ThreadPool threadPool;
  private TestTransportBulkAction bulkAction;
class TestTransportBulkAction extends TransportBulkAction {
    boolean indexCreated=false;
    TestTransportBulkAction(){
      super(Settings.EMPTY,TransportBulkActionTests.this.threadPool,transportService,clusterService,null,null,null,new ActionFilters(Collections.emptySet()),new Resolver(Settings.EMPTY),new AutoCreateIndex(Settings.EMPTY,clusterService.getClusterSettings(),new Resolver(Settings.EMPTY)));
    }
    @Override protected boolean needToCheck(){
      return true;
    }
    @Override void createIndex(    String index,    TimeValue timeout,    ActionListener<CreateIndexResponse> listener){
      indexCreated=true;
      listener.onResponse(null);
    }
  }
  @Before public void setUp() throws Exception {
    super.setUp();
    threadPool=new TestThreadPool("TransportBulkActionTookTests");
    clusterService=createClusterService(threadPool);
    CapturingTransport capturingTransport=new CapturingTransport();
    transportService=capturingTransport.createCapturingTransportService(clusterService.getSettings(),threadPool,TransportService.NOOP_TRANSPORT_INTERCEPTOR,boundAddress -> clusterService.localNode(),null,Collections.emptySet());
    transportService.start();
    transportService.acceptIncomingRequests();
    bulkAction=new TestTransportBulkAction();
  }
  @After public void tearDown() throws Exception {
    ThreadPool.terminate(threadPool,30,TimeUnit.SECONDS);
    threadPool=null;
    clusterService.close();
    super.tearDown();
  }
  public void testDeleteNonExistingDocDoesNotCreateIndex() throws Exception {
    BulkRequest bulkRequest=new BulkRequest().add(new DeleteRequest("index","type","id"));
    bulkAction.execute(null,bulkRequest,ActionListener.wrap(response -> {
      assertFalse(bulkAction.indexCreated);
      BulkItemResponse[] bulkResponses=((BulkResponse)response).getItems();
      assertEquals(bulkResponses.length,1);
      assertTrue(bulkResponses[0].isFailed());
      assertTrue(bulkResponses[0].getFailure().getCause() instanceof IndexNotFoundException);
      assertEquals("index",bulkResponses[0].getFailure().getIndex());
    }
,exception -> {
      throw new AssertionError(exception);
    }
));
  }
  public void testDeleteNonExistingDocExternalVersionCreatesIndex() throws Exception {
    BulkRequest bulkRequest=new BulkRequest().add(new DeleteRequest("index","type","id").versionType(VersionType.EXTERNAL).version(0));
    bulkAction.execute(null,bulkRequest,ActionListener.wrap(response -> {
      assertTrue(bulkAction.indexCreated);
    }
,exception -> {
      throw new AssertionError(exception);
    }
));
  }
  public void testDeleteNonExistingDocExternalGteVersionCreatesIndex() throws Exception {
    BulkRequest bulkRequest=new BulkRequest().add(new DeleteRequest("index2","type","id").versionType(VersionType.EXTERNAL_GTE).version(0));
    bulkAction.execute(null,bulkRequest,ActionListener.wrap(response -> {
      assertTrue(bulkAction.indexCreated);
    }
,exception -> {
      throw new AssertionError(exception);
    }
));
  }
}
