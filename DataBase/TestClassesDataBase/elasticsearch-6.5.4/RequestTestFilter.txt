private class RequestTestFilter implements ActionFilter {
  private final RequestCallback callback;
  private final int order;
  AtomicInteger runs=new AtomicInteger();
  volatile String lastActionName;
  volatile int executionToken=Integer.MAX_VALUE;
  RequestTestFilter(  int order,  RequestCallback callback){
    this.order=order;
    this.callback=callback;
  }
  @Override public int order(){
    return order;
  }
  @Override public <Request extends ActionRequest,Response extends ActionResponse>void apply(  Task task,  String action,  Request request,  ActionListener<Response> listener,  ActionFilterChain<Request,Response> chain){
    this.runs.incrementAndGet();
    this.lastActionName=action;
    this.executionToken=counter.incrementAndGet();
    this.callback.execute(task,action,request,listener,chain);
  }
}
