protected static class TimeWarp {
  private final List<ScheduleTriggerEngineMock> schedulers;
  private final ClockMock clock;
  private final Logger logger;
  TimeWarp(  Iterable<ScheduleTriggerEngineMock> schedulers,  ClockMock clock,  Logger logger){
    this.schedulers=StreamSupport.stream(schedulers.spliterator(),false).collect(Collectors.toList());
    this.clock=clock;
    this.logger=logger;
  }
  public void trigger(  String jobName){
    trigger(jobName,1,null);
  }
  public ClockMock clock(){
    return clock;
  }
  public void trigger(  String watchId,  int times,  TimeValue timeValue){
    boolean isTriggered=schedulers.stream().anyMatch(scheduler -> scheduler.trigger(watchId,times,timeValue));
    String msg=String.format(Locale.ROOT,"could not find watch [%s] to trigger",watchId);
    assertThat(msg,isTriggered,is(true));
  }
}
