/** 
 * Tests that linux packages correctly declare their dependencies and their conflicts
 */
public class PackageDependenciesTests extends PackagingTestCase {
  public void testDebDependencies(){
    assumeTrue(Platforms.isDPKG());
    final Shell sh=new Shell();
    final Result defaultResult=sh.run("dpkg -I " + getDistributionFile(DEFAULT_DEB));
    final Result ossResult=sh.run("dpkg -I " + getDistributionFile(OSS_DEB));
    assertTrue(Pattern.compile("(?m)^ Depends:.*bash.*").matcher(defaultResult.stdout).find());
    assertTrue(Pattern.compile("(?m)^ Depends:.*bash.*").matcher(ossResult.stdout).find());
    assertTrue(Pattern.compile("(?m)^ Conflicts: elasticsearch-oss$").matcher(defaultResult.stdout).find());
    assertTrue(Pattern.compile("(?m)^ Conflicts: elasticsearch$").matcher(ossResult.stdout).find());
  }
  public void testRpmDependencies(){
    assumeTrue(Platforms.isRPM());
    final Shell sh=new Shell();
    final Result defaultDeps=sh.run("rpm -qpR " + getDistributionFile(DEFAULT_RPM));
    final Result ossDeps=sh.run("rpm -qpR " + getDistributionFile(OSS_RPM));
    assertTrue(Pattern.compile("(?m)^/bin/bash\\s*$").matcher(defaultDeps.stdout).find());
    assertTrue(Pattern.compile("(?m)^/bin/bash\\s*$").matcher(ossDeps.stdout).find());
    final Result defaultConflicts=sh.run("rpm -qp --conflicts " + getDistributionFile(DEFAULT_RPM));
    final Result ossConflicts=sh.run("rpm -qp --conflicts " + getDistributionFile(OSS_RPM));
    assertTrue(Pattern.compile("(?m)^elasticsearch-oss\\s*$").matcher(defaultConflicts.stdout).find());
    assertTrue(Pattern.compile("(?m)^elasticsearch\\s*$").matcher(ossConflicts.stdout).find());
  }
}
