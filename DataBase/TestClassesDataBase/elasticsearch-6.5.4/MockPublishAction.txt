public static class MockPublishAction extends PublishClusterStateAction {
  AtomicBoolean timeoutOnSend=new AtomicBoolean();
  AtomicBoolean errorOnSend=new AtomicBoolean();
  AtomicBoolean timeoutOnCommit=new AtomicBoolean();
  AtomicBoolean errorOnCommit=new AtomicBoolean();
  public MockPublishAction(  Settings settings,  TransportService transportService,  NamedWriteableRegistry namedWriteableRegistry,  IncomingClusterStateListener listener,  DiscoverySettings discoverySettings){
    super(settings,transportService,namedWriteableRegistry,listener,discoverySettings);
  }
  @Override protected void handleIncomingClusterStateRequest(  BytesTransportRequest request,  TransportChannel channel) throws IOException {
    if (errorOnSend.get()) {
      throw new ElasticsearchException("forced error on incoming cluster state");
    }
    if (timeoutOnSend.get()) {
      return;
    }
    super.handleIncomingClusterStateRequest(request,channel);
  }
  @Override protected void handleCommitRequest(  PublishClusterStateAction.CommitClusterStateRequest request,  TransportChannel channel){
    if (errorOnCommit.get()) {
      throw new ElasticsearchException("forced error on incoming commit");
    }
    if (timeoutOnCommit.get()) {
      return;
    }
    super.handleCommitRequest(request,channel);
  }
}
