/** 
 * A custom high level client that provides custom methods to execute a request and get its associate response back.
 */
static class CustomRestClient extends RestHighLevelClient {
  private CustomRestClient(  RestClient restClient){
    super(restClient,RestClient::close,Collections.emptyList());
  }
  MainResponse custom(  MainRequest mainRequest,  RequestOptions options) throws IOException {
    return performRequest(mainRequest,this::toRequest,options,this::toResponse,emptySet());
  }
  MainResponse customAndParse(  MainRequest mainRequest,  RequestOptions options) throws IOException {
    return performRequestAndParseEntity(mainRequest,this::toRequest,options,MainResponse::fromXContent,emptySet());
  }
  void customAsync(  MainRequest mainRequest,  RequestOptions options,  ActionListener<MainResponse> listener){
    performRequestAsync(mainRequest,this::toRequest,options,this::toResponse,listener,emptySet());
  }
  void customAndParseAsync(  MainRequest mainRequest,  RequestOptions options,  ActionListener<MainResponse> listener){
    performRequestAsyncAndParseEntity(mainRequest,this::toRequest,options,MainResponse::fromXContent,listener,emptySet());
  }
  Request toRequest(  MainRequest mainRequest) throws IOException {
    return new Request(HttpGet.METHOD_NAME,ENDPOINT);
  }
  MainResponse toResponse(  Response response) throws IOException {
    return parseEntity(response.getEntity(),MainResponse::fromXContent);
  }
}
