static class CreateScorerOnceWeight extends Weight {
  private final Weight weight;
  private final Set<Object> seenLeaves=Collections.newSetFromMap(new IdentityHashMap<>());
  protected CreateScorerOnceWeight(  Weight weight){
    super(weight.getQuery());
    this.weight=weight;
  }
  @Override public void extractTerms(  Set<Term> terms){
    weight.extractTerms(terms);
  }
  @Override public Explanation explain(  LeafReaderContext context,  int doc) throws IOException {
    return weight.explain(context,doc);
  }
  @Override public Scorer scorer(  LeafReaderContext context) throws IOException {
    assertTrue(seenLeaves.add(context.reader().getCoreCacheHelper().getKey()));
    return weight.scorer(context);
  }
  @Override public BulkScorer bulkScorer(  LeafReaderContext context) throws IOException {
    assertTrue(seenLeaves.add(context.reader().getCoreCacheHelper().getKey()));
    return weight.bulkScorer(context);
  }
  @Override public boolean isCacheable(  LeafReaderContext ctx){
    return true;
  }
}
