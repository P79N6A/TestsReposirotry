public class AggregationDataExtractorFactoryTests extends ESTestCase {
  private Client client;
  @Before public void setUpMocks(){
    client=mock(Client.class);
  }
  public void testNewExtractor_GivenAlignedTimes(){
    AggregationDataExtractorFactory factory=createFactory(1000L);
    AggregationDataExtractor dataExtractor=(AggregationDataExtractor)factory.newExtractor(2000,5000);
    assertThat(dataExtractor.getContext().start,equalTo(2000L));
    assertThat(dataExtractor.getContext().end,equalTo(5000L));
  }
  public void testNewExtractor_GivenNonAlignedTimes(){
    AggregationDataExtractorFactory factory=createFactory(1000L);
    AggregationDataExtractor dataExtractor=(AggregationDataExtractor)factory.newExtractor(3980,9200);
    assertThat(dataExtractor.getContext().start,equalTo(4000L));
    assertThat(dataExtractor.getContext().end,equalTo(9000L));
  }
  private AggregationDataExtractorFactory createFactory(  long histogramInterval){
    AggregatorFactories.Builder aggs=new AggregatorFactories.Builder().addAggregator(AggregationBuilders.histogram("time").field("time").interval(histogramInterval).subAggregation(AggregationBuilders.max("time").field("time")));
    DataDescription.Builder dataDescription=new DataDescription.Builder();
    dataDescription.setTimeField("time");
    Detector.Builder detectorBuilder=new Detector.Builder();
    detectorBuilder.setFunction("sum");
    detectorBuilder.setFieldName("value");
    AnalysisConfig.Builder analysisConfig=new AnalysisConfig.Builder(Arrays.asList(detectorBuilder.build()));
    analysisConfig.setSummaryCountFieldName("doc_count");
    Job.Builder jobBuilder=new Job.Builder("foo");
    jobBuilder.setDataDescription(dataDescription);
    jobBuilder.setAnalysisConfig(analysisConfig);
    DatafeedConfig.Builder datafeedConfigBuilder=new DatafeedConfig.Builder("foo-feed",jobBuilder.getId());
    datafeedConfigBuilder.setAggregations(aggs);
    datafeedConfigBuilder.setIndices(Arrays.asList("my_index"));
    return new AggregationDataExtractorFactory(client,datafeedConfigBuilder.build(),jobBuilder.build(new Date()));
  }
}
