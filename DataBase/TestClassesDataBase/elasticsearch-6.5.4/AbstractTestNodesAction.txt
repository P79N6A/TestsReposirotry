/** 
 * Simulates node-based task that can be used to block node tasks so they are guaranteed to be registered by task manager
 */
abstract class AbstractTestNodesAction<NodesRequest extends BaseNodesRequest<NodesRequest>,NodeRequest extends BaseNodeRequest> extends TransportNodesAction<NodesRequest,NodesResponse,NodeRequest,NodeResponse> {
  AbstractTestNodesAction(  Settings settings,  String actionName,  ThreadPool threadPool,  ClusterService clusterService,  TransportService transportService,  Supplier<NodesRequest> request,  Supplier<NodeRequest> nodeRequest){
    super(settings,actionName,threadPool,clusterService,transportService,new ActionFilters(new HashSet<>()),new IndexNameExpressionResolver(Settings.EMPTY),request,nodeRequest,ThreadPool.Names.GENERIC,NodeResponse.class);
  }
  @Override protected NodesResponse newResponse(  NodesRequest request,  List<NodeResponse> responses,  List<FailedNodeException> failures){
    return new NodesResponse(clusterService.getClusterName(),responses,failures);
  }
  @Override protected NodeResponse newNodeResponse(){
    return new NodeResponse();
  }
  @Override protected abstract NodeResponse nodeOperation(  NodeRequest request);
}
