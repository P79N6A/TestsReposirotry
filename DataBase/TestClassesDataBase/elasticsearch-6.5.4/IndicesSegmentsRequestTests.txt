public class IndicesSegmentsRequestTests extends ESSingleNodeTestCase {
  @Override protected Collection<Class<? extends Plugin>> getPlugins(){
    return pluginList(InternalSettingsPlugin.class);
  }
  @Before public void setupIndex(){
    Settings settings=Settings.builder().put(MergePolicyConfig.INDEX_MERGE_ENABLED,false).build();
    createIndex("test",settings);
    int numDocs=scaledRandomIntBetween(100,1000);
    for (int j=0; j < numDocs; ++j) {
      String id=Integer.toString(j);
      client().prepareIndex("test","type1",id).setSource("text","sometext").get();
    }
    client().admin().indices().prepareFlush("test").get();
  }
  public void testBasic(){
    IndicesSegmentResponse rsp=client().admin().indices().prepareSegments("test").get();
    List<Segment> segments=rsp.getIndices().get("test").iterator().next().getShards()[0].getSegments();
    assertNull(segments.get(0).toString(),segments.get(0).ramTree);
  }
  public void testVerbose(){
    IndicesSegmentResponse rsp=client().admin().indices().prepareSegments("test").setVerbose(true).get();
    List<Segment> segments=rsp.getIndices().get("test").iterator().next().getShards()[0].getSegments();
    assertNotNull(segments.get(0).toString(),segments.get(0).ramTree);
  }
  /** 
 * with the default IndicesOptions inherited from BroadcastOperationRequest this will raise an exception
 */
  public void testRequestOnClosedIndex(){
    client().admin().indices().prepareClose("test").get();
    try {
      client().admin().indices().prepareSegments("test").get();
      fail("Expected IndexClosedException");
    }
 catch (    IndexClosedException e) {
      assertThat(e.getMessage(),is("closed"));
    }
  }
  /** 
 * setting the "ignoreUnavailable" option prevents IndexClosedException
 */
  public void testRequestOnClosedIndexIgnoreUnavailable(){
    client().admin().indices().prepareClose("test").get();
    IndicesOptions defaultOptions=new IndicesSegmentsRequest().indicesOptions();
    IndicesOptions testOptions=IndicesOptions.fromOptions(true,true,true,false,defaultOptions);
    IndicesSegmentResponse rsp=client().admin().indices().prepareSegments("test").setIndicesOptions(testOptions).get();
    assertEquals(0,rsp.getIndices().size());
  }
  /** 
 * by default IndicesOptions setting IndicesSegmentsRequest should not throw exception when no index present
 */
  public void testAllowNoIndex(){
    client().admin().indices().prepareDelete("test").get();
    IndicesSegmentResponse rsp=client().admin().indices().prepareSegments().get();
    assertEquals(0,rsp.getIndices().size());
  }
}
