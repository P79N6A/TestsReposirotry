public class CloseIndexDisableCloseAllIT extends ESIntegTestCase {
  @After public void afterTest(){
    Settings settings=Settings.builder().put(TransportCloseIndexAction.CLUSTER_INDICES_CLOSE_ENABLE_SETTING.getKey(),(String)null).build();
    assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  }
  public void testCloseAllRequiresName(){
    createIndex("test1","test2","test3");
    assertAcked(client().admin().indices().prepareClose("test3","test2"));
    assertIndexIsClosed("test2","test3");
    createIndex("test_no_close");
    Settings settings=Settings.builder().put(TransportCloseIndexAction.CLUSTER_INDICES_CLOSE_ENABLE_SETTING.getKey(),false).build();
    assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
    IllegalStateException illegalStateException=expectThrows(IllegalStateException.class,() -> client().admin().indices().prepareClose("test_no_close").get());
    assertEquals(illegalStateException.getMessage(),"closing indices is disabled - set [cluster.indices.close.enable: true] to enable it. NOTE: closed indices still " + "consume a significant amount of diskspace");
  }
  private void assertIndexIsClosed(  String... indices){
    ClusterStateResponse clusterStateResponse=client().admin().cluster().prepareState().execute().actionGet();
    for (    String index : indices) {
      IndexMetaData indexMetaData=clusterStateResponse.getState().metaData().indices().get(index);
      assertNotNull(indexMetaData);
      assertEquals(IndexMetaData.State.CLOSE,indexMetaData.getState());
    }
  }
}
