public static class BlockingOperationListener implements IndexingOperationListener {
  private static final Logger log=Loggers.getLogger(CancelTests.class);
  @Override public Engine.Index preIndex(  ShardId shardId,  Engine.Index index){
    return preCheck(index,index.type());
  }
  @Override public Engine.Delete preDelete(  ShardId shardId,  Engine.Delete delete){
    return preCheck(delete,delete.type());
  }
  private <T extends Engine.Operation>T preCheck(  T operation,  String type){
    if ((TYPE.equals(type) == false) || (operation.origin() != Origin.PRIMARY)) {
      return operation;
    }
    try {
      log.debug("checking");
      if (ALLOWED_OPERATIONS.tryAcquire(30,TimeUnit.SECONDS)) {
        log.debug("passed");
        return operation;
      }
    }
 catch (    InterruptedException e) {
      throw new RuntimeException(e);
    }
    throw new IllegalStateException("Something went wrong");
  }
}
