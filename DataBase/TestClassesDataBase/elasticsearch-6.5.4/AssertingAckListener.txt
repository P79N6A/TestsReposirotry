public static class AssertingAckListener implements Discovery.AckListener {
  private final List<Tuple<DiscoveryNode,Throwable>> errors=new CopyOnWriteArrayList<>();
  private final CountDownLatch countDown;
  private final CountDownLatch commitCountDown;
  public AssertingAckListener(  int nodeCount){
    countDown=new CountDownLatch(nodeCount);
    commitCountDown=new CountDownLatch(1);
  }
  @Override public void onCommit(  TimeValue commitTime){
    commitCountDown.countDown();
  }
  @Override public void onNodeAck(  DiscoveryNode node,  @Nullable Exception e){
    if (e != null) {
      errors.add(new Tuple<>(node,e));
    }
    countDown.countDown();
  }
  public void await(  long timeout,  TimeUnit unit) throws InterruptedException {
    assertThat(awaitErrors(timeout,unit),emptyIterable());
    assertTrue(commitCountDown.await(timeout,unit));
  }
  public List<Tuple<DiscoveryNode,Throwable>> awaitErrors(  long timeout,  TimeUnit unit) throws InterruptedException {
    countDown.await(timeout,unit);
    return errors;
  }
}
