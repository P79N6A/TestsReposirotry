public class IndexRequestBuilderTests extends ESTestCase {
  private static final String EXPECTED_SOURCE="{\"SomeKey\":\"SomeValue\"}";
  private NoOpClient testClient;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    this.testClient=new NoOpClient(getTestName());
  }
  @Override @After public void tearDown() throws Exception {
    this.testClient.close();
    super.tearDown();
  }
  /** 
 * test setting the source for the request with different available setters
 */
  public void testSetSource() throws Exception {
    IndexRequestBuilder indexRequestBuilder=new IndexRequestBuilder(this.testClient,IndexAction.INSTANCE);
    Map<String,String> source=new HashMap<>();
    source.put("SomeKey","SomeValue");
    indexRequestBuilder.setSource(source);
    assertEquals(EXPECTED_SOURCE,XContentHelper.convertToJson(indexRequestBuilder.request().source(),true));
    indexRequestBuilder.setSource(source,XContentType.JSON);
    assertEquals(EXPECTED_SOURCE,XContentHelper.convertToJson(indexRequestBuilder.request().source(),true));
    indexRequestBuilder.setSource("SomeKey","SomeValue");
    assertEquals(EXPECTED_SOURCE,XContentHelper.convertToJson(indexRequestBuilder.request().source(),true));
    indexRequestBuilder.setSource((Object)"SomeKey","SomeValue");
    assertEquals(EXPECTED_SOURCE,XContentHelper.convertToJson(indexRequestBuilder.request().source(),true));
    ByteArrayOutputStream docOut=new ByteArrayOutputStream();
    XContentBuilder doc=XContentFactory.jsonBuilder(docOut).startObject().field("SomeKey","SomeValue").endObject();
    doc.close();
    indexRequestBuilder.setSource(docOut.toByteArray(),XContentType.JSON);
    assertEquals(EXPECTED_SOURCE,XContentHelper.convertToJson(indexRequestBuilder.request().source(),true,indexRequestBuilder.request().getContentType()));
    doc=XContentFactory.jsonBuilder().startObject().field("SomeKey","SomeValue").endObject();
    doc.close();
    indexRequestBuilder.setSource(doc);
    assertEquals(EXPECTED_SOURCE,XContentHelper.convertToJson(indexRequestBuilder.request().source(),true));
  }
}
