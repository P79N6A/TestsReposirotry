public class RoutingServiceTests extends ESAllocationTestCase {
  private TestRoutingService routingService;
  @Before public void createRoutingService(){
    routingService=new TestRoutingService();
  }
  public void testReroute(){
    assertThat(routingService.hasReroutedAndClear(),equalTo(false));
    routingService.reroute("test");
    assertThat(routingService.hasReroutedAndClear(),equalTo(true));
  }
private class TestRoutingService extends RoutingService {
    private AtomicBoolean rerouted=new AtomicBoolean();
    TestRoutingService(){
      super(Settings.EMPTY,null,null);
    }
    public boolean hasReroutedAndClear(){
      return rerouted.getAndSet(false);
    }
    @Override protected void performReroute(    String reason){
      logger.info("--> performing fake reroute [{}]",reason);
      rerouted.set(true);
    }
  }
}
