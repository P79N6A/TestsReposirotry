/** 
 * Tests for  {@link ConfigurationMetadata}.
 * @author Stephane Nicoll
 */
public class ConfigurationMetadataTests {
  @Test public void toDashedCaseCamelCase(){
    assertThat(toDashedCase("simpleCamelCase")).isEqualTo("simple-camel-case");
  }
  @Test public void toDashedCaseUpperCamelCaseSuffix(){
    assertThat(toDashedCase("myDLQ")).isEqualTo("my-d-l-q");
  }
  @Test public void toDashedCaseUpperCamelCaseMiddle(){
    assertThat(toDashedCase("someDLQKey")).isEqualTo("some-d-l-q-key");
  }
  @Test public void toDashedCaseWordsUnderscore(){
    assertThat(toDashedCase("Word_With_underscore")).isEqualTo("word-with-underscore");
  }
  @Test public void toDashedCaseWordsSeveralUnderscores(){
    assertThat(toDashedCase("Word___With__underscore")).isEqualTo("word---with--underscore");
  }
  @Test public void toDashedCaseLowerCaseUnderscore(){
    assertThat(toDashedCase("lower_underscore")).isEqualTo("lower-underscore");
  }
  @Test public void toDashedCaseUpperUnderscoreSuffix(){
    assertThat(toDashedCase("my_DLQ")).isEqualTo("my-d-l-q");
  }
  @Test public void toDashedCaseUpperUnderscoreMiddle(){
    assertThat(toDashedCase("some_DLQ_key")).isEqualTo("some-d-l-q-key");
  }
  @Test public void toDashedCaseMultipleUnderscores(){
    assertThat(toDashedCase("super___crazy")).isEqualTo("super---crazy");
  }
  @Test public void toDashedCaseLowercase(){
    assertThat(toDashedCase("lowercase")).isEqualTo("lowercase");
  }
  private String toDashedCase(  String name){
    return ConfigurationMetadata.toDashedCase(name);
  }
}
