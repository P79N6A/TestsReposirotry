/** 
 * Integration test with custom include filter for  {@link DataRedisTest}.
 * @author Jayaram Pradhan
 */
@RunWith(SpringRunner.class) @ContextConfiguration(initializers=DataRedisTestWithIncludeFilterIntegrationTests.Initializer.class) @DataRedisTest(includeFilters=@Filter(Service.class)) public class DataRedisTestWithIncludeFilterIntegrationTests {
  @ClassRule public static RedisContainer redis=new RedisContainer();
  @Autowired private ExampleRepository exampleRepository;
  @Autowired private ExampleService service;
  @Test public void testService(){
    PersonHash personHash=new PersonHash();
    personHash.setDescription("Look, new @DataRedisTest!");
    assertThat(personHash.getId()).isNull();
    PersonHash savedEntity=this.exampleRepository.save(personHash);
    assertThat(this.service.hasRecord(savedEntity)).isTrue();
  }
static class Initializer implements ApplicationContextInitializer<ConfigurableApplicationContext> {
    @Override public void initialize(    ConfigurableApplicationContext configurableApplicationContext){
      TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()).applyTo(configurableApplicationContext.getEnvironment());
    }
  }
}
