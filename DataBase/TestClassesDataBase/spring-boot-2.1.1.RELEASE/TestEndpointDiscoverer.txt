static class TestEndpointDiscoverer extends EndpointDiscoverer<TestExposableEndpoint,TestOperation> {
  TestEndpointDiscoverer(  ApplicationContext applicationContext){
    this(applicationContext,(id) -> null);
  }
  TestEndpointDiscoverer(  ApplicationContext applicationContext,  Function<EndpointId,Long> timeToLive){
    this(applicationContext,timeToLive,Collections.emptyList());
  }
  TestEndpointDiscoverer(  ApplicationContext applicationContext,  Function<EndpointId,Long> timeToLive,  Collection<EndpointFilter<TestExposableEndpoint>> filters){
    this(applicationContext,new ConversionServiceParameterValueMapper(),Collections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),filters);
  }
  TestEndpointDiscoverer(  ApplicationContext applicationContext,  ParameterValueMapper parameterValueMapper,  Collection<OperationInvokerAdvisor> invokerAdvisors,  Collection<EndpointFilter<TestExposableEndpoint>> filters){
    super(applicationContext,parameterValueMapper,invokerAdvisors,filters);
  }
  @Override protected TestExposableEndpoint createEndpoint(  Object endpointBean,  EndpointId id,  boolean enabledByDefault,  Collection<TestOperation> operations){
    return new TestExposableEndpoint(this,endpointBean,id,enabledByDefault,operations);
  }
  @Override protected TestOperation createOperation(  EndpointId endpointId,  DiscoveredOperationMethod operationMethod,  OperationInvoker invoker){
    return new TestOperation(operationMethod,invoker);
  }
  @Override protected OperationKey createOperationKey(  TestOperation operation){
    return new OperationKey(operation.getOperationMethod(),() -> "TestOperation " + operation.getOperationMethod());
  }
}
