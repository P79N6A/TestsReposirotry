/** 
 * Tests for  {@link WebMvcTest} when no explicit controller is defined.
 * @author Phillip Webb
 * @author Stephane Nicoll
 */
@RunWith(SpringRunner.class) @WebMvcTest @WithMockUser public class WebMvcTestAllControllersIntegrationTests {
  @Autowired private MockMvc mvc;
  @Autowired(required=false) private ErrorAttributes errorAttributes;
  @Test public void shouldFindController1() throws Exception {
    this.mvc.perform(get("/one")).andExpect(content().string("one")).andExpect(status().isOk());
  }
  @Test public void shouldFindController2() throws Exception {
    this.mvc.perform(get("/two")).andExpect(content().string("hellotwo")).andExpect(status().isOk());
  }
  @Test public void shouldFindControllerAdvice() throws Exception {
    this.mvc.perform(get("/error")).andExpect(content().string("recovered")).andExpect(status().isOk());
  }
  @Test public void shouldRunValidationSuccess() throws Exception {
    this.mvc.perform(get("/three/OK")).andExpect(status().isOk()).andExpect(content().string("Hello OK"));
  }
  @Test public void shouldRunValidationFailure() throws Exception {
    assertThatExceptionOfType(NestedServletException.class).isThrownBy(() -> this.mvc.perform(get("/three/invalid"))).withCauseInstanceOf(ConstraintViolationException.class);
  }
  @Test public void shouldNotFilterErrorAttributes(){
    assertThat(this.errorAttributes).isNotNull();
  }
}
