/** 
 * Tests for  {@link CompositeHandlerExceptionResolver}.
 * @author Madhura Bhave
 */
public class CompositeHandlerExceptionResolverTests {
  private AnnotationConfigApplicationContext context;
  private MockHttpServletRequest request=new MockHttpServletRequest();
  private MockHttpServletResponse response=new MockHttpServletResponse();
  @Test public void resolverShouldDelegateToOtherResolversInContext(){
    load(TestConfiguration.class);
    CompositeHandlerExceptionResolver resolver=(CompositeHandlerExceptionResolver)this.context.getBean(DispatcherServlet.HANDLER_EXCEPTION_RESOLVER_BEAN_NAME);
    ModelAndView resolved=resolver.resolveException(this.request,this.response,null,new HttpRequestMethodNotSupportedException("POST"));
    assertThat(resolved.getViewName()).isEqualTo("test-view");
  }
  @Test public void resolverShouldAddDefaultResolverIfNonePresent(){
    load(BaseConfiguration.class);
    CompositeHandlerExceptionResolver resolver=(CompositeHandlerExceptionResolver)this.context.getBean(DispatcherServlet.HANDLER_EXCEPTION_RESOLVER_BEAN_NAME);
    ModelAndView resolved=resolver.resolveException(this.request,this.response,null,new HttpRequestMethodNotSupportedException("POST"));
    assertThat(resolved).isNotNull();
  }
  private void load(  Class<?>... configs){
    AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext();
    context.register(configs);
    context.refresh();
    this.context=context;
  }
@Configuration static class BaseConfiguration {
    @Bean(name=DispatcherServlet.HANDLER_EXCEPTION_RESOLVER_BEAN_NAME) public CompositeHandlerExceptionResolver compositeHandlerExceptionResolver(){
      return new CompositeHandlerExceptionResolver();
    }
  }
@Configuration @Import(BaseConfiguration.class) static class TestConfiguration {
    @Bean public HandlerExceptionResolver testResolver(){
      return new TestHandlerExceptionResolver();
    }
  }
static class TestHandlerExceptionResolver implements HandlerExceptionResolver {
    @Override public ModelAndView resolveException(    HttpServletRequest request,    HttpServletResponse response,    Object handler,    Exception ex){
      return new ModelAndView("test-view");
    }
  }
}
