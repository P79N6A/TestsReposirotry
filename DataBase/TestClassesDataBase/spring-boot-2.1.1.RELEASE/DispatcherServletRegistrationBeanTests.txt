/** 
 * Tests for  {@link DispatcherServletRegistrationBean}.
 * @author Phillip Webb
 */
public class DispatcherServletRegistrationBeanTests {
  @Test public void createWhenPathIsNullThrowsException(){
    assertThatIllegalArgumentException().isThrownBy(() -> new DispatcherServletRegistrationBean(new DispatcherServlet(),null)).withMessageContaining("Path must not be null");
  }
  @Test public void getPathReturnsPath(){
    DispatcherServletRegistrationBean bean=new DispatcherServletRegistrationBean(new DispatcherServlet(),"/test");
    assertThat(bean.getPath()).isEqualTo("/test");
  }
  @Test public void getUrlMappingsReturnsSinglePathMappedPattern(){
    DispatcherServletRegistrationBean bean=new DispatcherServletRegistrationBean(new DispatcherServlet(),"/test");
    assertThat(bean.getUrlMappings()).containsOnly("/test/*");
  }
  @Test public void setUrlMappingsCannotBeCalled(){
    DispatcherServletRegistrationBean bean=new DispatcherServletRegistrationBean(new DispatcherServlet(),"/test");
    assertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(() -> bean.setUrlMappings(Collections.emptyList()));
  }
  @Test public void addUrlMappingsCannotBeCalled(){
    DispatcherServletRegistrationBean bean=new DispatcherServletRegistrationBean(new DispatcherServlet(),"/test");
    assertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(() -> bean.addUrlMappings("/test"));
  }
}
