/** 
 * Tests for  {@link JerseyAutoConfiguration} with an ObjectMapper.
 * @author Eddú Meléndez
 * @author Andy Wilkinson
 */
@RunWith(SpringRunner.class) @SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT,properties="spring.jackson.default-property-inclusion:non-null") @DirtiesContext public class JerseyAutoConfigurationObjectMapperProviderTests {
  @Autowired private TestRestTemplate restTemplate;
  @Test public void responseIsSerializedUsingAutoConfiguredObjectMapper(){
    ResponseEntity<String> response=this.restTemplate.getForEntity("/rest/message",String.class);
    assertThat(HttpStatus.OK).isEqualTo(response.getStatusCode());
    assertThat(response.getBody()).isEqualTo("{\"subject\":\"Jersey\"}");
  }
@MinimalWebConfiguration @ApplicationPath("/rest") @Path("/message") public static class Application extends ResourceConfig {
    @GET public Message message(){
      return new Message("Jersey",null);
    }
    public Application(){
      register(Application.class);
    }
    public static void main(    String[] args){
      SpringApplication.run(Application.class,args);
    }
  }
public static class Message {
    private String subject;
    private String body;
    public Message(){
    }
    public Message(    String subject,    String body){
      this.subject=subject;
      this.body=body;
    }
    public String getSubject(){
      return this.subject;
    }
    public void setSubject(    String subject){
      this.subject=subject;
    }
    public String getBody(){
      return this.body;
    }
    public void setBody(    String body){
      this.body=body;
    }
    @XmlTransient public String getFoo(){
      return "foo";
    }
  }
  @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Configuration @Import({ServletWebServerFactoryAutoConfiguration.class,JacksonAutoConfiguration.class,JerseyAutoConfiguration.class,PropertyPlaceholderAutoConfiguration.class}) protected @interface MinimalWebConfiguration {}
}
