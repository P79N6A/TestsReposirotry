@Configuration static class CustomDispatcherServletConfiguration {
  @Bean public ServletRegistrationBean<DispatcherServlet> customDispatcherServletRegistration(  WebApplicationContext context){
    ServletRegistrationBean<DispatcherServlet> registration=new ServletRegistrationBean<>(createTestDispatcherServlet(context));
    registration.setName("customDispatcherServletRegistration");
    return registration;
  }
  @Bean public DispatcherServlet anotherDispatcherServlet(  WebApplicationContext context){
    return createTestDispatcherServlet(context);
  }
  @Bean public ServletRegistrationBean<DispatcherServlet> anotherDispatcherServletRegistration(  WebApplicationContext context){
    ServletRegistrationBean<DispatcherServlet> registrationBean=new ServletRegistrationBean<>(anotherDispatcherServlet(context));
    registrationBean.setName("anotherDispatcherServletRegistration");
    return registrationBean;
  }
  private DispatcherServlet createTestDispatcherServlet(  WebApplicationContext context){
    try {
      DispatcherServlet dispatcherServlet=new DispatcherServlet(context);
      dispatcherServlet.init(new MockServletConfig());
      return dispatcherServlet;
    }
 catch (    ServletException ex) {
      throw new IllegalStateException(ex);
    }
  }
}
