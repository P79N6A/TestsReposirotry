/** 
 * Integration tests for  {@link HealthEndpoint} and {@link HealthEndpointWebExtension}exposed by Jersey, Spring MVC, and WebFlux.
 * @author Andy Wilkinson
 */
@RunWith(WebEndpointRunners.class) public class HealthEndpointWebIntegrationTests {
  private static WebTestClient client;
  private static ConfigurableApplicationContext context;
  @Test public void whenHealthIsUp200ResponseIsReturned(){
    client.get().uri("/actuator/health").exchange().expectStatus().isOk().expectBody().jsonPath("status").isEqualTo("UP").jsonPath("details.alpha.status").isEqualTo("UP").jsonPath("details.bravo.status").isEqualTo("UP");
  }
  @Test public void whenHealthIsDown503ResponseIsReturned(){
    HealthIndicatorRegistry registry=context.getBean(HealthIndicatorRegistry.class);
    registry.register("charlie",() -> Health.down().build());
    try {
      client.get().uri("/actuator/health").exchange().expectStatus().isEqualTo(HttpStatus.SERVICE_UNAVAILABLE).expectBody().jsonPath("status").isEqualTo("DOWN").jsonPath("details.alpha.status").isEqualTo("UP").jsonPath("details.bravo.status").isEqualTo("UP").jsonPath("details.charlie.status").isEqualTo("DOWN");
    }
  finally {
      registry.unregister("charlie");
    }
  }
  @Test public void whenHealthIndicatorIsRemovedResponseIsAltered(){
    HealthIndicatorRegistry registry=context.getBean(HealthIndicatorRegistry.class);
    HealthIndicator bravo=registry.unregister("bravo");
    try {
      client.get().uri("/actuator/health").exchange().expectStatus().isOk().expectBody().jsonPath("status").isEqualTo("UP").jsonPath("details.alpha.status").isEqualTo("UP").jsonPath("details.bravo.status").doesNotExist();
    }
  finally {
      registry.register("bravo",bravo);
    }
  }
@Configuration public static class TestConfiguration {
    @Bean public HealthIndicatorRegistry healthIndicatorFactory(    Map<String,HealthIndicator> healthIndicators){
      return new HealthIndicatorRegistryFactory().createHealthIndicatorRegistry(healthIndicators);
    }
    @Bean public HealthEndpoint healthEndpoint(    HealthIndicatorRegistry registry){
      return new HealthEndpoint(new CompositeHealthIndicator(new OrderedHealthAggregator(),registry));
    }
    @Bean public HealthEndpointWebExtension healthWebEndpointExtension(    HealthEndpoint healthEndpoint){
      return new HealthEndpointWebExtension(healthEndpoint,new HealthWebEndpointResponseMapper(new HealthStatusHttpMapper(),ShowDetails.ALWAYS,new HashSet<>(Arrays.asList("ACTUATOR"))));
    }
    @Bean public HealthIndicator alphaHealthIndicator(){
      return () -> Health.up().build();
    }
    @Bean public HealthIndicator bravoHealthIndicator(){
      return () -> Health.up().build();
    }
  }
}
