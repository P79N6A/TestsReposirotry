/** 
 * Tests for  {@link JettyMetricsAutoConfiguration}.
 * @author Andy Wilkinson
 */
public class JettyMetricsAutoConfigurationTests {
  @Test public void autoConfiguresThreadPoolMetricsWithEmbeddedServletJetty(){
    new WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new).withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class,ServletWebServerFactoryAutoConfiguration.class)).withUserConfiguration(ServletWebServerConfiguration.class,MeterRegistryConfiguration.class).run((context) -> {
      context.publishEvent(new ApplicationStartedEvent(new SpringApplication(),null,context.getSourceApplicationContext()));
      assertThat(context).hasSingleBean(JettyServerThreadPoolMetricsBinder.class);
      SimpleMeterRegistry registry=context.getBean(SimpleMeterRegistry.class);
      assertThat(registry.find("jetty.threads.config.min").meter()).isNotNull();
    }
);
  }
  @Test public void autoConfiguresThreadPoolMetricsWithEmbeddedReactiveJetty(){
    new ReactiveWebApplicationContextRunner(AnnotationConfigReactiveWebServerApplicationContext::new).withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class,ReactiveWebServerFactoryAutoConfiguration.class)).withUserConfiguration(ReactiveWebServerConfiguration.class,MeterRegistryConfiguration.class).run((context) -> {
      context.publishEvent(new ApplicationStartedEvent(new SpringApplication(),null,context.getSourceApplicationContext()));
      SimpleMeterRegistry registry=context.getBean(SimpleMeterRegistry.class);
      assertThat(registry.find("jetty.threads.config.min").meter()).isNotNull();
    }
);
  }
  @Test public void allowsCustomJettyServerThreadPoolMetricsBinderToBeUsed(){
    new WebApplicationContextRunner().withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class)).withUserConfiguration(CustomJettyServerThreadPoolMetricsBinder.class,MeterRegistryConfiguration.class).run((context) -> assertThat(context).hasSingleBean(JettyServerThreadPoolMetricsBinder.class).hasBean("customJettyServerThreadPoolMetricsBinder"));
  }
@Configuration static class MeterRegistryConfiguration {
    @Bean public SimpleMeterRegistry meterRegistry(){
      return new SimpleMeterRegistry();
    }
  }
@Configuration static class ServletWebServerConfiguration {
    @Bean public JettyServletWebServerFactory jettyFactory(){
      return new JettyServletWebServerFactory(0);
    }
  }
@Configuration static class ReactiveWebServerConfiguration {
    @Bean public JettyReactiveWebServerFactory jettyFactory(){
      return new JettyReactiveWebServerFactory(0);
    }
    @Bean public HttpHandler httpHandler(){
      return mock(HttpHandler.class);
    }
  }
@Configuration static class CustomJettyServerThreadPoolMetricsBinder {
    @Bean public JettyServerThreadPoolMetricsBinder customJettyServerThreadPoolMetricsBinder(    MeterRegistry meterRegistry){
      return new JettyServerThreadPoolMetricsBinder(meterRegistry);
    }
  }
}
