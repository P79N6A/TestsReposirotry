/** 
 * Tests for  {@link LdapHealthIndicator}
 * @author Eddú Meléndez
 */
public class LdapHealthIndicatorTests {
  @Test @SuppressWarnings("unchecked") public void ldapIsUp(){
    LdapTemplate ldapTemplate=mock(LdapTemplate.class);
    given(ldapTemplate.executeReadOnly((ContextExecutor<String>)any())).willReturn("3");
    LdapHealthIndicator healthIndicator=new LdapHealthIndicator(ldapTemplate);
    Health health=healthIndicator.health();
    assertThat(health.getStatus()).isEqualTo(Status.UP);
    assertThat(health.getDetails().get("version")).isEqualTo("3");
    verify(ldapTemplate).executeReadOnly((ContextExecutor<String>)any());
  }
  @Test @SuppressWarnings("unchecked") public void ldapIsDown(){
    LdapTemplate ldapTemplate=mock(LdapTemplate.class);
    given(ldapTemplate.executeReadOnly((ContextExecutor<String>)any())).willThrow(new CommunicationException(new javax.naming.CommunicationException("Connection failed")));
    LdapHealthIndicator healthIndicator=new LdapHealthIndicator(ldapTemplate);
    Health health=healthIndicator.health();
    assertThat(health.getStatus()).isEqualTo(Status.DOWN);
    assertThat((String)health.getDetails().get("error")).contains("Connection failed");
    verify(ldapTemplate).executeReadOnly((ContextExecutor<String>)any());
  }
}
