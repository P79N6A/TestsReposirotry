/** 
 * Integration tests for endpoints configuration.
 * @author Dave Syer
 */
@RunWith(SpringRunner.class) @SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT,properties={"spring.mvc.servlet.path=/spring"}) public class ServletPathSampleActuatorApplicationTests {
  @Autowired private TestRestTemplate restTemplate;
  @Test public void testErrorPath(){
    @SuppressWarnings("rawtypes") ResponseEntity<Map> entity=this.restTemplate.withBasicAuth("user",getPassword()).getForEntity("/spring/error",Map.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);
    @SuppressWarnings("unchecked") Map<String,Object> body=entity.getBody();
    assertThat(body.get("error")).isEqualTo("None");
    assertThat(body.get("status")).isEqualTo(999);
  }
  @Test public void testHealth(){
    ResponseEntity<String> entity=this.restTemplate.withBasicAuth("user",getPassword()).getForEntity("/spring/actuator/health",String.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertThat(entity.getBody()).contains("\"status\":\"UP\"");
  }
  @Test public void testHomeIsSecure(){
    @SuppressWarnings("rawtypes") ResponseEntity<Map> entity=this.restTemplate.getForEntity("/spring/",Map.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.UNAUTHORIZED);
    @SuppressWarnings("unchecked") Map<String,Object> body=entity.getBody();
    assertThat(body.get("error")).isEqualTo("Unauthorized");
    assertThat(entity.getHeaders()).doesNotContainKey("Set-Cookie");
  }
  private String getPassword(){
    return "password";
  }
}
