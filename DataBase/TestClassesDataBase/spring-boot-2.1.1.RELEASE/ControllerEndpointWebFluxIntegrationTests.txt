/** 
 * Integration tests for the Actuator's WebFlux  {@link ControllerEndpoint controllerendpoints}.
 * @author Phillip Webb
 */
public class ControllerEndpointWebFluxIntegrationTests {
  private AnnotationConfigReactiveWebApplicationContext context;
  @After public void close(){
    TestSecurityContextHolder.clearContext();
    this.context.close();
  }
  @Test public void endpointsCanBeAccessed() throws Exception {
    TestSecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("user","N/A","ROLE_ACTUATOR"));
    this.context=new AnnotationConfigReactiveWebApplicationContext();
    this.context.register(DefaultConfiguration.class,ExampleController.class);
    TestPropertyValues.of("management.endpoints.web.exposure.include=*").applyTo(this.context);
    this.context.refresh();
    WebTestClient webClient=WebTestClient.bindToApplicationContext(this.context).build();
    webClient.get().uri("/actuator/example").exchange().expectStatus().isOk();
  }
@ImportAutoConfiguration({JacksonAutoConfiguration.class,HttpMessageConvertersAutoConfiguration.class,EndpointAutoConfiguration.class,WebEndpointAutoConfiguration.class,ReactiveManagementContextAutoConfiguration.class,AuditAutoConfiguration.class,PropertyPlaceholderAutoConfiguration.class,WebFluxAutoConfiguration.class,ManagementContextAutoConfiguration.class,BeansEndpointAutoConfiguration.class}) static class DefaultConfiguration {
  }
@RestControllerEndpoint(id="example") static class ExampleController {
    @GetMapping("/") public String example(){
      return "Example";
    }
  }
}
