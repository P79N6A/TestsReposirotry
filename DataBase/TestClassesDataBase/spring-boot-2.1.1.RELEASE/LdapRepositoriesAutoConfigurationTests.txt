/** 
 * Tests for  {@link LdapRepositoriesAutoConfiguration}
 * @author Eddú Meléndez
 */
public class LdapRepositoriesAutoConfigurationTests {
  private AnnotationConfigApplicationContext context;
  @After public void close(){
    if (this.context != null) {
      this.context.close();
    }
  }
  @Test public void testDefaultRepositoryConfiguration(){
    load(TestConfiguration.class);
    assertThat(this.context.getBean(PersonRepository.class)).isNotNull();
  }
  @Test public void testNoRepositoryConfiguration(){
    load(EmptyConfiguration.class);
    assertThat(this.context.getBeanNamesForType(PersonRepository.class)).isEmpty();
  }
  @Test public void doesNotTriggerDefaultRepositoryDetectionIfCustomized(){
    load(CustomizedConfiguration.class);
    assertThat(this.context.getBean(PersonLdapRepository.class)).isNotNull();
  }
  private void load(  Class<?>... configurationClasses){
    this.context=new AnnotationConfigApplicationContext();
    TestPropertyValues.of("spring.ldap.urls:ldap://localhost:389").applyTo(this.context);
    this.context.register(configurationClasses);
    this.context.register(LdapAutoConfiguration.class,LdapRepositoriesAutoConfiguration.class,PropertyPlaceholderAutoConfiguration.class);
    this.context.refresh();
  }
@Configuration @TestAutoConfigurationPackage(Person.class) protected static class TestConfiguration {
  }
@Configuration @TestAutoConfigurationPackage(EmptyDataPackage.class) protected static class EmptyConfiguration {
  }
@Configuration @TestAutoConfigurationPackage(LdapRepositoriesAutoConfigurationTests.class) @EnableLdapRepositories(basePackageClasses=PersonLdapRepository.class) protected static class CustomizedConfiguration {
  }
}
