/** 
 * Tests for  {@link JerseyAutoConfiguration} when using a custom {@link Application}.
 * @author Stephane Nicoll
 */
@RunWith(SpringRunner.class) @SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT) @DirtiesContext public class JerseyAutoConfigurationCustomApplicationTests {
  @Autowired private TestRestTemplate restTemplate;
  @Test public void contextLoads(){
    ResponseEntity<String> entity=this.restTemplate.getForEntity("/test/hello",String.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);
  }
@ApplicationPath("/test") public static class TestApplication extends Application {
  }
@Path("/hello") public static class TestController {
    @GET public String message(){
      return "Hello World";
    }
  }
@Configuration @Import({ServletWebServerFactoryAutoConfiguration.class,JerseyAutoConfiguration.class,PropertyPlaceholderAutoConfiguration.class}) static class TestConfiguration {
@Configuration public class JerseyConfiguration {
      @Bean public TestApplication testApplication(){
        return new TestApplication();
      }
      @Bean public ResourceConfig conf(      TestApplication app){
        ResourceConfig config=ResourceConfig.forApplication(app);
        config.register(TestController.class);
        return config;
      }
    }
  }
}
