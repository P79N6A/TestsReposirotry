/** 
 * Tests for  {@link DataSourcePoolMetrics}.
 * @author Jon Schneider
 * @author Andy Wilkinson
 */
public class DataSourcePoolMetricsTests {
  @Test public void dataSourceIsInstrumented(){
    new ApplicationContextRunner().withUserConfiguration(DataSourceConfig.class,MetricsApp.class).withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).withPropertyValues("spring.datasource.generate-unique-name=true","metrics.use-global-registry=false").run((context) -> {
      context.getBean(DataSource.class).getConnection().getMetaData();
      context.getBean(MeterRegistry.class).get("jdbc.connections.max").meter();
    }
);
  }
@Configuration static class MetricsApp {
    @Bean MeterRegistry registry(){
      return new SimpleMeterRegistry();
    }
  }
@Configuration static class DataSourceConfig {
    DataSourceConfig(    DataSource dataSource,    Collection<DataSourcePoolMetadataProvider> metadataProviders,    MeterRegistry registry){
      new DataSourcePoolMetrics(dataSource,metadataProviders,"data.source",Collections.emptyList()).bindTo(registry);
    }
  }
}
