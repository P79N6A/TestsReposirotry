/** 
 * Data JPA tests for  {@link User}.
 * @author Phillip Webb
 */
@RunWith(SpringRunner.class) @DataJpaTest public class UserEntityTests {
  private static final VehicleIdentificationNumber VIN=new VehicleIdentificationNumber("00000000000000000");
  @Autowired private TestEntityManager entityManager;
  @Test public void createWhenUsernameIsNullShouldThrowException(){
    assertThatIllegalArgumentException().isThrownBy(() -> new User(null,VIN)).withMessage("Username must not be empty");
  }
  @Test public void createWhenUsernameIsEmptyShouldThrowException(){
    assertThatIllegalArgumentException().isThrownBy(() -> new User("",VIN)).withMessage("Username must not be empty");
  }
  @Test public void createWhenVinIsNullShouldThrowException(){
    assertThatIllegalArgumentException().isThrownBy(() -> new User("sboot",null)).withMessage("VIN must not be null");
  }
  @Test public void saveShouldPersistData(){
    User user=this.entityManager.persistFlushFind(new User("sboot",VIN));
    assertThat(user.getUsername()).isEqualTo("sboot");
    assertThat(user.getVin()).isEqualTo(VIN);
  }
}
