/** 
 * Test  {@link MockBean} on a test class field can be used to replace existing bean whilepreserving qualifiers.
 * @author Stephane Nicoll
 * @author Phillip Webb
 */
@RunWith(SpringRunner.class) public class MockBeanOnTestFieldForExistingBeanWithQualifierIntegrationTests {
  @MockBean @CustomQualifier private ExampleService service;
  @Autowired private ExampleServiceCaller caller;
  @Autowired private ApplicationContext applicationContext;
  @Test public void testMocking(){
    this.caller.sayGreeting();
    verify(this.service).greeting();
  }
  @Test public void onlyQualifiedBeanIsReplaced(){
    assertThat(this.applicationContext.getBean("service")).isSameAs(this.service);
    ExampleService anotherService=this.applicationContext.getBean("anotherService",ExampleService.class);
    assertThat(anotherService.greeting()).isEqualTo("Another");
  }
@Configuration static class TestConfig {
    @Bean public CustomQualifierExampleService service(){
      return new CustomQualifierExampleService();
    }
    @Bean public ExampleService anotherService(){
      return new RealExampleService("Another");
    }
    @Bean public ExampleServiceCaller controller(    @CustomQualifier ExampleService service){
      return new ExampleServiceCaller(service);
    }
  }
}
