/** 
 * Tests for  {@link IntegrationGraphEndpointAutoConfiguration}.
 * @author Tim Ysewyn
 * @author Stephane Nicoll
 */
public class IntegrationGraphEndpointAutoConfigurationTests {
  private final ApplicationContextRunner contextRunner=new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(JmxAutoConfiguration.class,IntegrationAutoConfiguration.class,IntegrationGraphEndpointAutoConfiguration.class));
  @Test public void runShouldHaveEndpointBean(){
    this.contextRunner.run((context) -> assertThat(context).hasSingleBean(IntegrationGraphEndpoint.class));
  }
  @Test public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpointBean(){
    this.contextRunner.withPropertyValues("management.endpoint.integrationgraph.enabled:false").run((context) -> {
      assertThat(context).doesNotHaveBean(IntegrationGraphEndpoint.class);
      assertThat(context).doesNotHaveBean(IntegrationGraphServer.class);
    }
);
  }
  @Test public void runWhenSpringIntegrationIsNotEnabledShouldNotHaveEndpointBean(){
    ApplicationContextRunner noSpringIntegrationRunner=new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(IntegrationGraphEndpointAutoConfiguration.class));
    noSpringIntegrationRunner.run((context) -> {
      assertThat(context).doesNotHaveBean(IntegrationGraphEndpoint.class);
      assertThat(context).doesNotHaveBean(IntegrationGraphServer.class);
    }
);
  }
}
