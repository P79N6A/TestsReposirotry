/** 
 * Tests for  {@link KafkaMetricsAutoConfiguration}.
 * @author Andy Wilkinson
 */
public class KafkaMetricsAutoConfigurationTests {
  private final ApplicationContextRunner contextRunner=new ApplicationContextRunner().with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(KafkaMetricsAutoConfiguration.class));
  @Test public void whenThereIsNoMBeanServerAutoConfigurationBacksOff(){
    this.contextRunner.run((context) -> assertThat(context).doesNotHaveBean(KafkaConsumerMetrics.class));
  }
  @Test public void whenThereIsAnMBeanServerKafkaConsumerMetricsIsConfigured(){
    this.contextRunner.withConfiguration(AutoConfigurations.of(JmxAutoConfiguration.class)).run((context) -> assertThat(context).hasSingleBean(KafkaConsumerMetrics.class));
  }
  @Test public void allowsCustomKafkaConsumerMetricsToBeUsed(){
    this.contextRunner.withConfiguration(AutoConfigurations.of(JmxAutoConfiguration.class)).withUserConfiguration(CustomKafkaConsumerMetricsConfiguration.class).run((context) -> assertThat(context).hasSingleBean(KafkaConsumerMetrics.class).hasBean("customKafkaConsumerMetrics"));
  }
@Configuration static class CustomKafkaConsumerMetricsConfiguration {
    @Bean public KafkaConsumerMetrics customKafkaConsumerMetrics(){
      return new KafkaConsumerMetrics();
    }
  }
}
