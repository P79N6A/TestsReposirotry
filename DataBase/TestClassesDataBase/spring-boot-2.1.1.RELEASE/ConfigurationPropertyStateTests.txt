/** 
 * Tests for  {@link ConfigurationPropertyState}.
 * @author Phillip Webb
 */
public class ConfigurationPropertyStateTests {
  @Test public void searchWhenIterableIsNullShouldThrowException(){
    assertThatIllegalArgumentException().isThrownBy(() -> ConfigurationPropertyState.search(null,(e) -> true)).withMessageContaining("Source must not be null");
  }
  @Test public void searchWhenPredicateIsNullShouldThrowException(){
    assertThatIllegalArgumentException().isThrownBy(() -> ConfigurationPropertyState.search(Collections.emptyList(),null)).withMessageContaining("Predicate must not be null");
  }
  @Test public void searchWhenContainsItemShouldReturnPresent(){
    List<String> source=Arrays.asList("a","b","c");
    ConfigurationPropertyState result=ConfigurationPropertyState.search(source,"b"::equals);
    assertThat(result).isEqualTo(ConfigurationPropertyState.PRESENT);
  }
  @Test public void searchWhenContainsNoItemShouldReturnAbsent(){
    List<String> source=Arrays.asList("a","x","c");
    ConfigurationPropertyState result=ConfigurationPropertyState.search(source,"b"::equals);
    assertThat(result).isEqualTo(ConfigurationPropertyState.ABSENT);
  }
}
