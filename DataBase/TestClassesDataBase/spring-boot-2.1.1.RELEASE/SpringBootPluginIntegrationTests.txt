/** 
 * Integration tests for  {@link SpringBootPlugin}.
 * @author Andy Wilkinson
 */
public class SpringBootPluginIntegrationTests {
  @Rule public final GradleBuild gradleBuild=new GradleBuild();
  @Test public void failFastWithVersionOfGradleLowerThanRequired(){
    BuildResult result=this.gradleBuild.gradleVersion("4.3").buildAndFail();
    assertThat(result.getOutput()).contains("Spring Boot plugin requires Gradle 4.4" + " or later. The current version is Gradle 4.3");
  }
  @Test public void succeedWithVersionOfGradleHigherThanRequired(){
    this.gradleBuild.gradleVersion("4.4.1").build();
  }
  @Test public void succeedWithVersionOfGradleMatchingWhatIsRequired(){
    this.gradleBuild.gradleVersion("4.4").build();
  }
  @Test public void unresolvedDependenciesAreAnalyzedWhenDependencyResolutionFails() throws IOException {
    createMinimalMainSource();
    BuildResult result=this.gradleBuild.buildAndFail("compileJava");
    assertThat(result.getOutput()).contains("During the build, one or more dependencies that were declared without a" + " version failed to resolve:").contains("    org.springframework.boot:spring-boot-starter:");
  }
  private void createMinimalMainSource() throws IOException {
    File examplePackage=new File(this.gradleBuild.getProjectDir(),"src/main/java/com/example");
    examplePackage.mkdirs();
    new File(examplePackage,"Application.java").createNewFile();
  }
}
