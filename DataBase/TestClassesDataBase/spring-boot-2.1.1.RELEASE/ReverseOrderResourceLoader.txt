/** 
 * {@link ResourcePatternResolver} used to ensure consistently wrong resourceordering.
 */
private static class ReverseOrderResourceLoader implements ResourcePatternResolver {
  private final ResourcePatternResolver resolver;
  ReverseOrderResourceLoader(  ResourceLoader loader){
    this.resolver=ResourcePatternUtils.getResourcePatternResolver(loader);
  }
  @Override public Resource getResource(  String location){
    return this.resolver.getResource(location);
  }
  @Override public ClassLoader getClassLoader(){
    return this.resolver.getClassLoader();
  }
  @Override public Resource[] getResources(  String locationPattern) throws IOException {
    Resource[] resources=this.resolver.getResources(locationPattern);
    Arrays.sort(resources,Comparator.comparing(Resource::getFilename).reversed());
    return resources;
  }
}
