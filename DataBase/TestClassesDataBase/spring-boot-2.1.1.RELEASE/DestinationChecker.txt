private static final class DestinationChecker {
  private final JmsTemplate jmsTemplate;
  private final DestinationResolver destinationResolver;
  private DestinationChecker(  ApplicationContext applicationContext){
    this.jmsTemplate=applicationContext.getBean(JmsTemplate.class);
    this.destinationResolver=new DynamicDestinationResolver();
  }
  public void checkQueue(  String name,  boolean shouldExist){
    checkDestination(name,false,shouldExist);
  }
  public void checkTopic(  String name,  boolean shouldExist){
    checkDestination(name,true,shouldExist);
  }
  public void checkDestination(  String name,  final boolean pubSub,  final boolean shouldExist){
    this.jmsTemplate.execute((SessionCallback<Void>)(session) -> {
      try {
        Destination destination=this.destinationResolver.resolveDestinationName(session,name,pubSub);
        if (!shouldExist) {
          throw new IllegalStateException("Destination '" + name + "' was not expected but got "+ destination);
        }
      }
 catch (      JMSException ex) {
        if (shouldExist) {
          throw new IllegalStateException("Destination '" + name + "' was expected but got "+ ex.getMessage());
        }
      }
      return null;
    }
);
  }
}
