/** 
 * Tests for  {@link ElasticSearchClientHealthIndicatorAutoConfiguration} and{@link ElasticSearchJestHealthIndicatorAutoConfiguration}.
 * @author Phillip Webb
 */
public class ElasticsearchHealthIndicatorAutoConfigurationTests {
  private ApplicationContextRunner contextRunner=new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(ElasticsearchAutoConfiguration.class,ElasticSearchClientHealthIndicatorAutoConfiguration.class,ElasticSearchJestHealthIndicatorAutoConfiguration.class,HealthIndicatorAutoConfiguration.class));
  @Test public void runShouldCreateIndicator(){
    this.contextRunner.withPropertyValues("spring.data.elasticsearch.cluster-nodes:localhost:0").withSystemProperties("es.set.netty.runtime.available.processors=false").run((context) -> assertThat(context).hasSingleBean(ElasticsearchHealthIndicator.class).doesNotHaveBean(ElasticsearchJestHealthIndicator.class).doesNotHaveBean(ApplicationHealthIndicator.class));
  }
  @Test public void runWhenUsingJestClientShouldCreateIndicator(){
    this.contextRunner.withUserConfiguration(JestClientConfiguration.class).withSystemProperties("es.set.netty.runtime.available.processors=false").run((context) -> assertThat(context).hasSingleBean(ElasticsearchJestHealthIndicator.class).doesNotHaveBean(ElasticsearchHealthIndicator.class).doesNotHaveBean(ApplicationHealthIndicator.class));
  }
  @Test public void runWhenDisabledShouldNotCreateIndicator(){
    this.contextRunner.withPropertyValues("management.health.elasticsearch.enabled:false").run((context) -> assertThat(context).doesNotHaveBean(ElasticsearchHealthIndicator.class).doesNotHaveBean(ElasticsearchJestHealthIndicator.class).hasSingleBean(ApplicationHealthIndicator.class));
  }
@Configuration @AutoConfigureBefore(JestAutoConfiguration.class) protected static class JestClientConfiguration {
    @Bean public JestClient jestClient(){
      return mock(JestClient.class);
    }
  }
}
