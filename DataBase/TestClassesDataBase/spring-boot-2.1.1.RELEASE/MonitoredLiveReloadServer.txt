/** 
 * {@link LiveReloadServer} with additional monitoring.
 */
private static class MonitoredLiveReloadServer extends LiveReloadServer {
  private final List<ConnectionClosedException> closedExceptions=new ArrayList<>();
  private final Object monitor=new Object();
  MonitoredLiveReloadServer(  int port){
    super(port);
  }
  @Override protected Connection createConnection(  java.net.Socket socket,  InputStream inputStream,  OutputStream outputStream) throws IOException {
    return new MonitoredConnection(socket,inputStream,outputStream);
  }
  public List<ConnectionClosedException> getClosedExceptions(){
synchronized (this.monitor) {
      return new ArrayList<>(this.closedExceptions);
    }
  }
private class MonitoredConnection extends Connection {
    MonitoredConnection(    java.net.Socket socket,    InputStream inputStream,    OutputStream outputStream) throws IOException {
      super(socket,inputStream,outputStream);
    }
    @Override public void run() throws Exception {
      try {
        super.run();
      }
 catch (      ConnectionClosedException ex) {
synchronized (MonitoredLiveReloadServer.this.monitor) {
          MonitoredLiveReloadServer.this.closedExceptions.add(ex);
        }
        throw ex;
      }
    }
  }
}
