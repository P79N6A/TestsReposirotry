/** 
 * Basic integration tests for service demo application.
 * @author Dave Syer
 * @author Andy Wilkinson
 */
public class SampleIntegrationParentApplicationTests {
  private static ConfigurableApplicationContext context;
  @BeforeClass public static void start(){
    context=SpringApplication.run(SampleParentContextApplication.class);
  }
  @AfterClass public static void stop(){
    if (context != null) {
      context.close();
    }
  }
  @Test public void testVanillaExchange() throws Exception {
    SpringApplication.run(ProducerApplication.class,"World");
    awaitOutputContaining("Hello World");
  }
  private void awaitOutputContaining(  String requiredContents) throws Exception {
    long endTime=System.currentTimeMillis() + 30000;
    String output=null;
    while (System.currentTimeMillis() < endTime) {
      Resource[] resources=findResources();
      if (resources.length == 0) {
        Thread.sleep(200);
        resources=findResources();
      }
 else {
        output=readResources(resources);
        if (output != null && output.contains(requiredContents)) {
          return;
        }
 else {
          Thread.sleep(200);
          output=readResources(resources);
        }
      }
    }
    fail("Timed out awaiting output containing '" + requiredContents + "'. Output was '"+ output+ "'");
  }
  private Resource[] findResources() throws IOException {
    return ResourcePatternUtils.getResourcePatternResolver(new DefaultResourceLoader()).getResources("file:target/output/*.txt");
  }
  private String readResources(  Resource[] resources) throws IOException {
    StringBuilder builder=new StringBuilder();
    for (    Resource resource : resources) {
      builder.append(new String(StreamUtils.copyToByteArray(resource.getInputStream())));
    }
    return builder.toString();
  }
}
