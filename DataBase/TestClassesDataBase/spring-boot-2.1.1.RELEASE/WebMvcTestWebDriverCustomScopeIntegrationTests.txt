/** 
 * Tests for  {@link WebMvcTest} with {@link WebDriver} in a custom scope.
 * @author Phillip Webb
 */
@RunWith(SpringRunner.class) @WebMvcTest @FixMethodOrder(MethodSorters.NAME_ASCENDING) public class WebMvcTestWebDriverCustomScopeIntegrationTests {
  private static WebDriver previousWebDriver;
  @Autowired private WebDriver webDriver;
  @Test public void shouldAutoConfigureWebClient(){
    WebMvcTestWebDriverCustomScopeIntegrationTests.previousWebDriver=this.webDriver;
  }
  @Test public void shouldBeTheSameWebClient(){
    assertThat(previousWebDriver).isNotNull().isSameAs(this.webDriver);
  }
@Configuration static class Config {
    @Bean @Scope("singleton") public WebDriverFactory webDriver(    MockMvc mockMvc){
      return new WebDriverFactory(mockMvc);
    }
  }
static class WebDriverFactory implements FactoryBean<WebDriver> {
    private final HtmlUnitDriver driver;
    WebDriverFactory(    MockMvc mockMvc){
      this.driver=MockMvcHtmlUnitDriverBuilder.mockMvcSetup(mockMvc).build();
    }
    @Override public boolean isSingleton(){
      return true;
    }
    @Override public Class<?> getObjectType(){
      return WebDriver.class;
    }
    @Override public WebDriver getObject(){
      return this.driver;
    }
  }
}
