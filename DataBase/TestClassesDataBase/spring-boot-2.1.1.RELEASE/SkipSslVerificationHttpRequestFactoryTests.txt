/** 
 * Test for  {@link SkipSslVerificationHttpRequestFactory}.
 */
public class SkipSslVerificationHttpRequestFactoryTests {
  private WebServer webServer;
  @After public void shutdownContainer(){
    if (this.webServer != null) {
      this.webServer.stop();
    }
  }
  @Test public void restCallToSelfSignedServerShouldNotThrowSslException(){
    String httpsUrl=getHttpsUrl();
    SkipSslVerificationHttpRequestFactory requestFactory=new SkipSslVerificationHttpRequestFactory();
    RestTemplate restTemplate=new RestTemplate(requestFactory);
    RestTemplate otherRestTemplate=new RestTemplate();
    ResponseEntity<String> responseEntity=restTemplate.getForEntity(httpsUrl,String.class);
    assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertThatExceptionOfType(ResourceAccessException.class).isThrownBy(() -> otherRestTemplate.getForEntity(httpsUrl,String.class)).withCauseInstanceOf(SSLHandshakeException.class);
  }
  private String getHttpsUrl(){
    TomcatServletWebServerFactory factory=new TomcatServletWebServerFactory(0);
    factory.setSsl(getSsl("password","classpath:test.jks"));
    this.webServer=factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(),"/hello"));
    this.webServer.start();
    return "https://localhost:" + this.webServer.getPort() + "/hello";
  }
  private Ssl getSsl(  String keyPassword,  String keyStore){
    Ssl ssl=new Ssl();
    ssl.setEnabled(true);
    ssl.setKeyPassword(keyPassword);
    ssl.setKeyStore(keyStore);
    ssl.setKeyStorePassword("secret");
    return ssl;
  }
}
