/** 
 * Tests for  {@link HttpWebServiceMessageSenderBuilder} when Http Components is notavailable.
 * @author Stephane Nicoll
 */
@RunWith(ModifiedClassPathRunner.class) @ClassPathExclusions("httpclient-*.jar") public class HttpWebServiceMessageSenderBuilderOkHttp3IntegrationTests {
  private final HttpWebServiceMessageSenderBuilder builder=new HttpWebServiceMessageSenderBuilder();
  @Test public void buildUseOkHttp3ByDefault(){
    WebServiceMessageSender messageSender=this.builder.build();
    assertOkHttp3RequestFactory(messageSender);
  }
  @Test public void buildWithCustomTimeouts(){
    WebServiceMessageSender messageSender=this.builder.setConnectTimeout(Duration.ofSeconds(5)).setReadTimeout(Duration.ofSeconds(2)).build();
    OkHttp3ClientHttpRequestFactory factory=assertOkHttp3RequestFactory(messageSender);
    OkHttpClient client=(OkHttpClient)ReflectionTestUtils.getField(factory,"client");
    assertThat(client).isNotNull();
    assertThat(client.connectTimeoutMillis()).isEqualTo(5000);
    assertThat(client.readTimeoutMillis()).isEqualTo(2000);
  }
  private OkHttp3ClientHttpRequestFactory assertOkHttp3RequestFactory(  WebServiceMessageSender messageSender){
    assertThat(messageSender).isInstanceOf(ClientHttpRequestMessageSender.class);
    ClientHttpRequestMessageSender sender=(ClientHttpRequestMessageSender)messageSender;
    ClientHttpRequestFactory requestFactory=sender.getRequestFactory();
    assertThat(requestFactory).isInstanceOf(OkHttp3ClientHttpRequestFactory.class);
    return (OkHttp3ClientHttpRequestFactory)requestFactory;
  }
}
