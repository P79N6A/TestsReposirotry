/** 
 * Tests for  {@link SpringBootTestContextBootstrapper}.
 * @author Andy Wilkinson
 */
public class SpringBootTestContextBootstrapperTests {
  @Test public void springBootTestWithANonMockWebEnvironmentAndWebAppConfigurationFailsFast(){
    assertThatIllegalStateException().isThrownBy(() -> buildTestContext(SpringBootTestNonMockWebEnvironmentAndWebAppConfiguration.class)).withMessageContaining("@WebAppConfiguration should only be used with " + "@SpringBootTest when @SpringBootTest is configured with a mock web " + "environment. Please remove @WebAppConfiguration or reconfigure "+ "@SpringBootTest.");
  }
  @Test public void springBootTestWithAMockWebEnvironmentCanBeUsedWithWebAppConfiguration(){
    buildTestContext(SpringBootTestMockWebEnvironmentAndWebAppConfiguration.class);
  }
  @SuppressWarnings("rawtypes") private void buildTestContext(  Class<?> testClass){
    SpringBootTestContextBootstrapper bootstrapper=new SpringBootTestContextBootstrapper();
    BootstrapContext bootstrapContext=mock(BootstrapContext.class);
    bootstrapper.setBootstrapContext(bootstrapContext);
    given((Class)bootstrapContext.getTestClass()).willReturn(testClass);
    CacheAwareContextLoaderDelegate contextLoaderDelegate=mock(CacheAwareContextLoaderDelegate.class);
    given(bootstrapContext.getCacheAwareContextLoaderDelegate()).willReturn(contextLoaderDelegate);
    bootstrapper.buildTestContext();
  }
@SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT) @WebAppConfiguration private static class SpringBootTestNonMockWebEnvironmentAndWebAppConfiguration {
  }
@SpringBootTest @WebAppConfiguration private static class SpringBootTestMockWebEnvironmentAndWebAppConfiguration {
  }
}
