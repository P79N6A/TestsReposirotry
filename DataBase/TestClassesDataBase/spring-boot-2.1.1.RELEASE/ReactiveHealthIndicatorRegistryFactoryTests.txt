/** 
 * Tests for  {@link ReactiveHealthIndicatorRegistryFactory}.
 * @author Stephane Nicoll
 */
public class ReactiveHealthIndicatorRegistryFactoryTests {
  private static final Health UP=new Health.Builder().status(Status.UP).build();
  private static final Health DOWN=new Health.Builder().status(Status.DOWN).build();
  private final ReactiveHealthIndicatorRegistryFactory factory=new ReactiveHealthIndicatorRegistryFactory();
  @Test public void defaultHealthIndicatorNameFactory(){
    ReactiveHealthIndicatorRegistry registry=this.factory.createReactiveHealthIndicatorRegistry(Collections.singletonMap("myHealthIndicator",() -> Mono.just(UP)),null);
    assertThat(registry.getAll()).containsOnlyKeys("my");
  }
  @Test public void healthIndicatorIsAdapted(){
    ReactiveHealthIndicatorRegistry registry=this.factory.createReactiveHealthIndicatorRegistry(Collections.singletonMap("test",() -> Mono.just(UP)),Collections.singletonMap("regular",() -> DOWN));
    assertThat(registry.getAll()).containsOnlyKeys("test","regular");
    StepVerifier.create(registry.get("regular").health()).consumeNextWith((h) -> {
      assertThat(h.getStatus()).isEqualTo(Status.DOWN);
      assertThat(h.getDetails()).isEmpty();
    }
).verifyComplete();
  }
}
