/** 
 * Tests for  {@link ReactiveSecurityAutoConfiguration}.
 * @author Madhura Bhave
 */
public class ReactiveSecurityAutoConfigurationTests {
  private ReactiveWebApplicationContextRunner contextRunner=new ReactiveWebApplicationContextRunner();
  @Test public void backsOffWhenWebFilterChainProxyBeanPresent(){
    this.contextRunner.withConfiguration(AutoConfigurations.of(ReactiveSecurityAutoConfiguration.class)).withUserConfiguration(WebFilterChainProxyConfiguration.class).run((context) -> assertThat(context).hasSingleBean(WebFilterChainProxy.class));
  }
  @Test public void enablesWebFluxSecurity(){
    this.contextRunner.withConfiguration(AutoConfigurations.of(ReactiveSecurityAutoConfiguration.class,ReactiveUserDetailsServiceAutoConfiguration.class)).run((context) -> assertThat(context).getBean(WebFilterChainProxy.class).isNotNull());
  }
@Configuration static class WebFilterChainProxyConfiguration {
    @Bean public WebFilterChainProxy webFilterChainProxy(){
      return mock(WebFilterChainProxy.class);
    }
  }
}
