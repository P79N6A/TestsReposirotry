/** 
 * Tests for  {@link QuartzDataSourceInitializer}.
 * @author Stephane Nicoll
 */
public class QuartzDataSourceInitializerTests {
  private final ApplicationContextRunner contextRunner=new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class,JdbcTemplateAutoConfiguration.class)).withPropertyValues("spring.datasource.url=" + String.format("jdbc:h2:mem:test-%s;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE",UUID.randomUUID().toString()));
  @Test public void commentPrefixCanBeCustomized(){
    this.contextRunner.withUserConfiguration(TestConfiguration.class).withPropertyValues("spring.quartz.jdbc.comment-prefix=##","spring.quartz.jdbc.schema=classpath:org/springframework/boot/autoconfigure/quartz/tables_@@platform@@.sql").run((context) -> {
      JdbcTemplate jdbcTemplate=context.getBean(JdbcTemplate.class);
      assertThat(jdbcTemplate.queryForObject("SELECT COUNT(*) FROM QRTZ_TEST_TABLE",Integer.class)).isEqualTo(0);
    }
);
  }
@Configuration @EnableConfigurationProperties(QuartzProperties.class) static class TestConfiguration {
    @Bean public QuartzDataSourceInitializer initializer(    DataSource dataSource,    ResourceLoader resourceLoader,    QuartzProperties properties){
      return new QuartzDataSourceInitializer(dataSource,resourceLoader,properties);
    }
  }
}
