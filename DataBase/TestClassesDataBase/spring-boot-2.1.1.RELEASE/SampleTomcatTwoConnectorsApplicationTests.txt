/** 
 * Basic integration tests for  {@link SampleTomcatTwoConnectorsApplication}.
 * @author Brock Mills
 * @author Andy Wilkinson
 */
@RunWith(SpringRunner.class) @SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT) @Import(Ports.class) public class SampleTomcatTwoConnectorsApplicationTests {
  @LocalServerPort private int port;
  @Autowired private Ports ports;
  @Autowired private TestRestTemplate restTemplate;
  @Autowired private AbstractConfigurableWebServerFactory webServerFactory;
  @Test public void testSsl(){
    assertThat(this.webServerFactory.getSsl().isEnabled()).isTrue();
  }
  @Test public void testHello(){
    assertThat(this.ports.getHttpsPort()).isEqualTo(this.port);
    assertThat(this.ports.getHttpPort()).isNotEqualTo(this.port);
    ResponseEntity<String> entity=this.restTemplate.getForEntity("http://localhost:" + this.ports.getHttpPort() + "/hello",String.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertThat(entity.getBody()).isEqualTo("hello");
    ResponseEntity<String> httpsEntity=this.restTemplate.getForEntity("https://localhost:" + this.port + "/hello",String.class);
    assertThat(httpsEntity.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertThat(httpsEntity.getBody()).isEqualTo("hello");
  }
@TestConfiguration static class Ports implements ApplicationListener<WebServerInitializedEvent> {
    private int httpPort;
    private int httpsPort;
    @Override public void onApplicationEvent(    WebServerInitializedEvent event){
      Service service=((TomcatWebServer)event.getWebServer()).getTomcat().getService();
      for (      Connector connector : service.findConnectors()) {
        if (connector.getSecure()) {
          this.httpsPort=connector.getLocalPort();
        }
 else {
          this.httpPort=connector.getLocalPort();
        }
      }
    }
    int getHttpPort(){
      return this.httpPort;
    }
    int getHttpsPort(){
      return this.httpsPort;
    }
  }
}
