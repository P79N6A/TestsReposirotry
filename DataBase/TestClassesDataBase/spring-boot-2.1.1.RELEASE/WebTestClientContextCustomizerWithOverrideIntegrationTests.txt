/** 
 * Integration test for  {@link WebTestClientContextCustomizer} with a custom{@link WebTestClient} bean.
 * @author Phillip Webb
 */
@RunWith(SpringRunner.class) @SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT,properties="spring.main.web-application-type=reactive") @DirtiesContext public class WebTestClientContextCustomizerWithOverrideIntegrationTests {
  @Autowired private WebTestClient webTestClient;
  @Test public void test(){
    assertThat(this.webTestClient).isInstanceOf(CustomWebTestClient.class);
  }
@Configuration @Import({TestHandler.class,NoWebTestClientBeanChecker.class}) static class TestConfig {
    @Bean public TomcatReactiveWebServerFactory webServerFactory(){
      return new TomcatReactiveWebServerFactory(0);
    }
    @Bean public WebTestClient webTestClient(){
      return mock(CustomWebTestClient.class);
    }
  }
static class TestHandler implements HttpHandler {
    private static final DefaultDataBufferFactory factory=new DefaultDataBufferFactory();
    @Override public Mono<Void> handle(    ServerHttpRequest request,    ServerHttpResponse response){
      response.setStatusCode(HttpStatus.OK);
      return response.writeWith(Mono.just(factory.wrap("hello".getBytes())));
    }
  }
interface CustomWebTestClient extends WebTestClient {
  }
}
