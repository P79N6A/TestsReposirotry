/** 
 * A Basic Spring MVC Test for the Sample Controller"
 * @author Biju Kunjummen
 * @author Doo-Hwan, Kwak
 */
@RunWith(SpringRunner.class) @SpringBootTest public class MessageControllerWebTests {
  @Autowired private WebApplicationContext wac;
  private MockMvc mockMvc;
  @Before public void setup(){
    this.mockMvc=MockMvcBuilders.webAppContextSetup(this.wac).build();
  }
  @Test public void testHome() throws Exception {
    this.mockMvc.perform(get("/")).andExpect(status().isOk()).andExpect(content().string(containsString("<title>Messages")));
  }
  @Test public void testCreate() throws Exception {
    this.mockMvc.perform(post("/").param("text","FOO text").param("summary","FOO")).andExpect(status().isFound()).andExpect(header().string("location",RegexMatcher.matches("/[0-9]+")));
  }
  @Test public void testCreateValidation() throws Exception {
    this.mockMvc.perform(post("/").param("text","").param("summary","")).andExpect(status().isOk()).andExpect(content().string(containsString("is required")));
  }
private static class RegexMatcher extends TypeSafeMatcher<String> {
    private final String regex;
    RegexMatcher(    String regex){
      this.regex=regex;
    }
    @Override public boolean matchesSafely(    String item){
      return Pattern.compile(this.regex).matcher(item).find();
    }
    @Override public void describeMismatchSafely(    String item,    Description mismatchDescription){
      mismatchDescription.appendText("was \"").appendText(item).appendText("\"");
    }
    @Override public void describeTo(    Description description){
      description.appendText("a string that matches regex: ").appendText(this.regex);
    }
    public static org.hamcrest.Matcher<java.lang.String> matches(    String regex){
      return new RegexMatcher(regex);
    }
  }
}
