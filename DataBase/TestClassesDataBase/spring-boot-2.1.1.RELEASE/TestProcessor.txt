@SupportedAnnotationTypes({"org.springframework.boot.configurationsample.ConfigurationProperties"}) @SupportedSourceVersion(SourceVersion.RELEASE_6) private class TestProcessor extends AbstractProcessor {
  private FieldValuesParser processor;
  private Map<String,Object> values=new HashMap<>();
  @Override public synchronized void init(  ProcessingEnvironment env){
    this.processor=createProcessor(env);
  }
  @Override public boolean process(  Set<? extends TypeElement> annotations,  RoundEnvironment roundEnv){
    for (    TypeElement annotation : annotations) {
      for (      Element element : roundEnv.getElementsAnnotatedWith(annotation)) {
        if (element instanceof TypeElement) {
          try {
            this.values.putAll(this.processor.getFieldValues((TypeElement)element));
          }
 catch (          Exception ex) {
            throw new IllegalStateException(ex);
          }
        }
      }
    }
    return false;
  }
  public Map<String,Object> getValues(){
    return this.values;
  }
}
