/** 
 * JUnit  {@link TestRule} that launched a JVM and redirects its output to a testmethod-specific location.
 * @author Andy Wilkinson
 */
class JvmLauncher implements TestRule {
  private static final Pattern NON_ALPHABET_PATTERN=Pattern.compile("[^A-Za-z]+");
  private File outputDirectory;
  @Override public Statement apply(  Statement base,  Description description){
    this.outputDirectory=new File("target/output/" + NON_ALPHABET_PATTERN.matcher(description.getMethodName()).replaceAll(""));
    this.outputDirectory.mkdirs();
    return base;
  }
  LaunchedJvm launch(  String name,  String classpath,  String... args) throws IOException {
    List<String> command=new ArrayList<>(Arrays.asList(System.getProperty("java.home") + "/bin/java","-cp",classpath));
    command.addAll(Arrays.asList(args));
    File standardOut=new File(this.outputDirectory,name + ".out");
    File standardError=new File(this.outputDirectory,name + ".err");
    Process process=new ProcessBuilder(StringUtils.toStringArray(command)).redirectError(standardError).redirectOutput(standardOut).start();
    return new LaunchedJvm(process,standardOut,standardError);
  }
static class LaunchedJvm {
    private final Process process;
    private final File standardOut;
    private final File standardError;
    LaunchedJvm(    Process process,    File standardOut,    File standardError){
      this.process=process;
      this.standardOut=standardOut;
      this.standardError=standardError;
    }
    Process getProcess(){
      return this.process;
    }
    File getStandardOut(){
      return this.standardOut;
    }
    File getStandardError(){
      return this.standardError;
    }
  }
}
