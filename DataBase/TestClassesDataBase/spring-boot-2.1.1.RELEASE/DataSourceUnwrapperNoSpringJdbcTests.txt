/** 
 * Integration tests for  {@link DataSourceUnwrapper} when spring-jdbc is not available.
 * @author Stephane Nicoll
 */
@RunWith(ModifiedClassPathRunner.class) @ClassPathExclusions("spring-jdbc-*.jar") public class DataSourceUnwrapperNoSpringJdbcTests {
  @Test public void unwrapWithProxy(){
    DataSource dataSource=new HikariDataSource();
    DataSource actual=wrapInProxy(wrapInProxy(dataSource));
    assertThat(DataSourceUnwrapper.unwrap(actual,HikariDataSource.class)).isSameAs(dataSource);
  }
  @Test public void unwrapDataSourceProxy(){
    org.apache.tomcat.jdbc.pool.DataSource dataSource=new org.apache.tomcat.jdbc.pool.DataSource();
    DataSource actual=wrapInProxy(wrapInProxy(dataSource));
    assertThat(DataSourceUnwrapper.unwrap(actual,DataSourceProxy.class)).isSameAs(dataSource);
  }
  private DataSource wrapInProxy(  DataSource dataSource){
    return (DataSource)new ProxyFactory(dataSource).getProxy();
  }
}
