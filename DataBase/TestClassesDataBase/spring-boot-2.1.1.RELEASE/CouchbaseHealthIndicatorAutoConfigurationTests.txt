/** 
 * Tests for  {@link CouchbaseHealthIndicatorAutoConfiguration}.
 * @author Phillip Webb
 * @author Stephane Nicoll
 */
public class CouchbaseHealthIndicatorAutoConfigurationTests {
  private ApplicationContextRunner contextRunner=new ApplicationContextRunner().withUserConfiguration(CouchbaseMockConfiguration.class).withConfiguration(AutoConfigurations.of(CouchbaseHealthIndicatorAutoConfiguration.class,HealthIndicatorAutoConfiguration.class));
  @Test public void runShouldCreateIndicator(){
    this.contextRunner.run((context) -> assertThat(context).hasSingleBean(CouchbaseHealthIndicator.class).doesNotHaveBean(CouchbaseReactiveHealthIndicator.class).doesNotHaveBean(ApplicationHealthIndicator.class));
  }
  @Test public void runWhenDisabledShouldNotCreateIndicator(){
    this.contextRunner.withPropertyValues("management.health.couchbase.enabled:false").run((context) -> assertThat(context).doesNotHaveBean(CouchbaseHealthIndicator.class).hasSingleBean(ApplicationHealthIndicator.class));
  }
@Configuration protected static class CouchbaseMockConfiguration {
    @Bean public Cluster cluster(){
      return mock(Cluster.class);
    }
  }
}
