/** 
 * Tests for  {@link SharedMetadataReaderFactoryContextInitializer}.
 * @author Dave Syer
 */
public class SharedMetadataReaderFactoryContextInitializerTests {
  @Test public void checkOrderOfInitializer(){
    SpringApplication application=new SpringApplication(TestConfig.class);
    application.setWebApplicationType(WebApplicationType.NONE);
    @SuppressWarnings("unchecked") List<ApplicationContextInitializer<?>> initializers=(List<ApplicationContextInitializer<?>>)ReflectionTestUtils.getField(application,"initializers");
    initializers.add(0,new Initializer());
    GenericApplicationContext context=(GenericApplicationContext)application.run();
    BeanDefinition definition=context.getBeanDefinition(SharedMetadataReaderFactoryContextInitializer.BEAN_NAME);
    assertThat(definition.getAttribute("seen")).isEqualTo(true);
  }
protected static class TestConfig {
  }
static class Initializer implements ApplicationContextInitializer<GenericApplicationContext> {
    @Override public void initialize(    GenericApplicationContext applicationContext){
      applicationContext.addBeanFactoryPostProcessor(new PostProcessor());
    }
  }
static class PostProcessor implements BeanDefinitionRegistryPostProcessor {
    @Override public void postProcessBeanFactory(    ConfigurableListableBeanFactory beanFactory) throws BeansException {
    }
    @Override public void postProcessBeanDefinitionRegistry(    BeanDefinitionRegistry registry) throws BeansException {
      for (      String name : registry.getBeanDefinitionNames()) {
        BeanDefinition definition=registry.getBeanDefinition(name);
        definition.setAttribute("seen",true);
      }
    }
  }
}
