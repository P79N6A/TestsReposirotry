@Configuration @ImportAutoConfiguration({JacksonAutoConfiguration.class,JerseyAutoConfiguration.class}) static class JerseyEndpointConfiguration {
  private final ApplicationContext applicationContext;
  JerseyEndpointConfiguration(  ApplicationContext applicationContext){
    this.applicationContext=applicationContext;
  }
  @Bean public TomcatServletWebServerFactory tomcat(){
    return new TomcatServletWebServerFactory(0);
  }
  @Bean public ResourceConfig resourceConfig(){
    return new ResourceConfig();
  }
  @Bean public ResourceConfigCustomizer webEndpointRegistrar(){
    return this::customize;
  }
  private void customize(  ResourceConfig config){
    List<String> mediaTypes=Arrays.asList(MediaType.APPLICATION_JSON,ActuatorMediaType.V2_JSON);
    EndpointMediaTypes endpointMediaTypes=new EndpointMediaTypes(mediaTypes,mediaTypes);
    WebEndpointDiscoverer discoverer=new WebEndpointDiscoverer(this.applicationContext,new ConversionServiceParameterValueMapper(),endpointMediaTypes,null,Collections.emptyList(),Collections.emptyList());
    Collection<Resource> resources=new JerseyEndpointResourceFactory().createEndpointResources(new EndpointMapping("/actuator"),discoverer.getEndpoints(),endpointMediaTypes,new EndpointLinksResolver(discoverer.getEndpoints()));
    config.registerResources(new HashSet<>(resources));
  }
}
