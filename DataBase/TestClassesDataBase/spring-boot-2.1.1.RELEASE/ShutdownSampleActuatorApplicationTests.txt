/** 
 * Integration tests for separate management and main service ports.
 * @author Dave Syer
 */
@RunWith(SpringRunner.class) @SpringBootTest(classes={ShutdownSampleActuatorApplicationTests.SecurityConfiguration.class,SampleActuatorApplication.class},webEnvironment=WebEnvironment.RANDOM_PORT) public class ShutdownSampleActuatorApplicationTests {
  @Autowired private TestRestTemplate restTemplate;
  @Test public void testHome(){
    @SuppressWarnings("rawtypes") ResponseEntity<Map> entity=this.restTemplate.withBasicAuth("user",getPassword()).getForEntity("/",Map.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);
    @SuppressWarnings("unchecked") Map<String,Object> body=entity.getBody();
    assertThat(body.get("message")).isEqualTo("Hello Phil");
  }
  @Test @DirtiesContext public void testShutdown(){
    @SuppressWarnings("rawtypes") ResponseEntity<Map> entity=this.restTemplate.withBasicAuth("user",getPassword()).postForEntity("/actuator/shutdown",null,Map.class);
    assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);
    @SuppressWarnings("unchecked") Map<String,Object> body=entity.getBody();
    assertThat(((String)body.get("message"))).contains("Shutting down");
  }
  private String getPassword(){
    return "password";
  }
@Configuration static class SecurityConfiguration extends WebSecurityConfigurerAdapter {
    @Override protected void configure(    HttpSecurity http) throws Exception {
      http.csrf().disable();
    }
  }
}
