/** 
 * Tests for  {@link ElasticsearchRepositoriesAutoConfiguration}.
 * @author Phillip Webb
 * @author Andy Wilkinson
 */
@RunWith(ModifiedClassPathRunner.class) @ClassPathOverrides("org.apache.logging.log4j:log4j-core:2.10.0") public class ElasticsearchRepositoriesAutoConfigurationTests {
  private AnnotationConfigApplicationContext context;
  @After public void close(){
    this.context.close();
  }
  @Test public void testDefaultRepositoryConfiguration(){
    new ElasticsearchNodeTemplate().doWithNode((node) -> {
      load(TestConfiguration.class,node);
      assertThat(this.context.getBean(CityRepository.class)).isNotNull();
      assertThat(this.context.getBean(Client.class)).isNotNull();
    }
);
  }
  @Test public void testNoRepositoryConfiguration(){
    new ElasticsearchNodeTemplate().doWithNode((node) -> {
      load(EmptyConfiguration.class,node);
      assertThat(this.context.getBean(Client.class)).isNotNull();
    }
);
  }
  @Test public void doesNotTriggerDefaultRepositoryDetectionIfCustomized(){
    new ElasticsearchNodeTemplate().doWithNode((node) -> {
      load(CustomizedConfiguration.class,node);
      assertThat(this.context.getBean(CityElasticsearchDbRepository.class)).isNotNull();
    }
);
  }
  private void load(  Class<?> config,  ElasticsearchNode node){
    this.context=new AnnotationConfigApplicationContext();
    addElasticsearchProperties(this.context,node);
    this.context.register(config,ElasticsearchAutoConfiguration.class,ElasticsearchRepositoriesAutoConfiguration.class,ElasticsearchDataAutoConfiguration.class,PropertyPlaceholderAutoConfiguration.class);
    this.context.refresh();
  }
  private void addElasticsearchProperties(  AnnotationConfigApplicationContext context,  ElasticsearchNode node){
    TestPropertyValues.of("spring.data.elasticsearch.properties.path.home:target","spring.data.elasticsearch.cluster-nodes:localhost:" + node.getTcpPort()).applyTo(context);
  }
@Configuration @TestAutoConfigurationPackage(City.class) protected static class TestConfiguration {
  }
@Configuration @TestAutoConfigurationPackage(EmptyDataPackage.class) protected static class EmptyConfiguration {
  }
@Configuration @TestAutoConfigurationPackage(ElasticsearchRepositoriesAutoConfigurationTests.class) @EnableElasticsearchRepositories(basePackageClasses=CityElasticsearchDbRepository.class) protected static class CustomizedConfiguration {
  }
}
