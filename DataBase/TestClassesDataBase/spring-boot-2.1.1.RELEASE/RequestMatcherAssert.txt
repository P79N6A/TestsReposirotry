private static class RequestMatcherAssert implements AssertDelegateTarget {
  private final StaticApplicationContext context;
  private final ServerWebExchangeMatcher matcher;
  RequestMatcherAssert(  StaticApplicationContext context,  ServerWebExchangeMatcher matcher){
    this.context=context;
    this.matcher=matcher;
  }
  void matches(  String path){
    ServerWebExchange exchange=webHandler().createExchange(MockServerHttpRequest.get(path).build(),new MockServerHttpResponse());
    matches(exchange);
  }
  private void matches(  ServerWebExchange exchange){
    assertThat(this.matcher.matches(exchange).block().isMatch()).as("Matches " + getRequestPath(exchange)).isTrue();
  }
  void doesNotMatch(  String path){
    ServerWebExchange exchange=webHandler().createExchange(MockServerHttpRequest.get(path).build(),new MockServerHttpResponse());
    doesNotMatch(exchange);
  }
  private void doesNotMatch(  ServerWebExchange exchange){
    assertThat(this.matcher.matches(exchange).block().isMatch()).as("Does not match " + getRequestPath(exchange)).isFalse();
  }
  private TestHttpWebHandlerAdapter webHandler(){
    TestHttpWebHandlerAdapter adapter=new TestHttpWebHandlerAdapter(mock(WebHandler.class));
    adapter.setApplicationContext(this.context);
    return adapter;
  }
  private String getRequestPath(  ServerWebExchange exchange){
    return exchange.getRequest().getPath().toString();
  }
}
