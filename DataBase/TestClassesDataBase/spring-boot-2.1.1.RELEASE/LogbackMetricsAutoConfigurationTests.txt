/** 
 * Tests for  {@link LogbackMetricsAutoConfiguration}.
 * @author Andy Wilkinson
 * @author Stephane Nicoll
 */
public class LogbackMetricsAutoConfigurationTests {
  private final ApplicationContextRunner contextRunner=new ApplicationContextRunner().with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(LogbackMetricsAutoConfiguration.class));
  @Test public void autoConfiguresLogbackMetrics(){
    this.contextRunner.run((context) -> assertThat(context).hasSingleBean(LogbackMetrics.class));
  }
  @Test @Deprecated public void allowsLogbackMetricsToBeDisabled(){
    this.contextRunner.withPropertyValues("management.metrics.binders.logback.enabled=false").run((context) -> assertThat(context).doesNotHaveBean(LogbackMetrics.class));
  }
  @Test public void allowsCustomLogbackMetricsToBeUsed(){
    this.contextRunner.withUserConfiguration(CustomLogbackMetricsConfiguration.class).run((context) -> assertThat(context).hasSingleBean(LogbackMetrics.class).hasBean("customLogbackMetrics"));
  }
@Configuration static class CustomLogbackMetricsConfiguration {
    @Bean public LogbackMetrics customLogbackMetrics(){
      return new LogbackMetrics();
    }
  }
}
