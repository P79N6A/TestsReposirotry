/** 
 * Tests for  {@link JarResourceManager}.
 * @author Andy Wilkinson
 */
public class JarResourceManagerTests {
  @Rule public TemporaryFolder temp=new TemporaryFolder();
  private ResourceManager resourceManager;
  @Before public void createJar() throws IOException {
    File jar=this.temp.newFile();
    JarOutputStream out=new JarOutputStream(new FileOutputStream(jar));
    out.putNextEntry(new ZipEntry("hello.txt"));
    out.write("hello".getBytes());
    out.close();
    this.resourceManager=new JarResourceManager(jar);
  }
  @Test public void emptyPathIsHandledCorrectly() throws IOException {
    Resource resource=this.resourceManager.getResource("");
    assertThat(resource).isNotNull();
    assertThat(resource.isDirectory()).isTrue();
  }
  @Test public void rootPathIsHandledCorrectly() throws IOException {
    Resource resource=this.resourceManager.getResource("/");
    assertThat(resource).isNotNull();
    assertThat(resource.isDirectory()).isTrue();
  }
  @Test public void resourceIsFoundInJarFile() throws IOException {
    Resource resource=this.resourceManager.getResource("/hello.txt");
    assertThat(resource).isNotNull();
    assertThat(resource.isDirectory()).isFalse();
    assertThat(resource.getContentLength()).isEqualTo(5);
  }
  @Test public void resourceIsFoundInJarFileWithoutLeadingSlash() throws IOException {
    Resource resource=this.resourceManager.getResource("hello.txt");
    assertThat(resource).isNotNull();
    assertThat(resource.isDirectory()).isFalse();
    assertThat(resource.getContentLength()).isEqualTo(5);
  }
}
