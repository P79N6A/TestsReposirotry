@Configuration static class ClientConfiguration implements CommandLineRunner {
  @Value("${websocket.uri}") private String webSocketUri;
  private final CountDownLatch latch=new CountDownLatch(1);
  private final AtomicReference<String> messagePayload=new AtomicReference<>();
  @Override public void run(  String... args) throws Exception {
    logger.info("Waiting for response: latch=" + this.latch.getCount());
    if (this.latch.await(10,TimeUnit.SECONDS)) {
      logger.info("Got response: " + this.messagePayload.get());
    }
 else {
      logger.info("Response not received: latch=" + this.latch.getCount());
    }
  }
  @Bean public WebSocketConnectionManager wsConnectionManager(){
    WebSocketConnectionManager manager=new WebSocketConnectionManager(client(),handler(),this.webSocketUri);
    manager.setAutoStartup(true);
    return manager;
  }
  @Bean public StandardWebSocketClient client(){
    return new StandardWebSocketClient();
  }
  @Bean public SimpleClientWebSocketHandler handler(){
    return new SimpleClientWebSocketHandler(greetingService(),this.latch,this.messagePayload);
  }
  @Bean public GreetingService greetingService(){
    return new SimpleGreetingService();
  }
}
