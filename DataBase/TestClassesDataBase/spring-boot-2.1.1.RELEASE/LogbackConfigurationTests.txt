/** 
 * Tests for default Logback configuration provided by  {@code base.xml}.
 * @author Andy Wilkinson
 */
public class LogbackConfigurationTests {
  @Test public void consolePatternCanBeOverridden() throws JoranException {
    JoranConfigurator configurator=new JoranConfigurator();
    LoggerContext context=new LoggerContext();
    configurator.setContext(context);
    configurator.doConfigure(new File("src/test/resources/custom-console-log-pattern.xml"));
    Appender<ILoggingEvent> appender=context.getLogger("ROOT").getAppender("CONSOLE");
    assertThat(appender).isInstanceOf(ConsoleAppender.class);
    Encoder<?> encoder=((ConsoleAppender<?>)appender).getEncoder();
    assertThat(encoder).isInstanceOf(PatternLayoutEncoder.class);
    assertThat(((PatternLayoutEncoder)encoder).getPattern()).isEqualTo("foo");
  }
  @Test public void filePatternCanBeOverridden() throws JoranException {
    JoranConfigurator configurator=new JoranConfigurator();
    LoggerContext context=new LoggerContext();
    configurator.setContext(context);
    configurator.doConfigure(new File("src/test/resources/custom-file-log-pattern.xml"));
    Appender<ILoggingEvent> appender=context.getLogger("ROOT").getAppender("FILE");
    assertThat(appender).isInstanceOf(FileAppender.class);
    Encoder<?> encoder=((FileAppender<?>)appender).getEncoder();
    assertThat(encoder).isInstanceOf(PatternLayoutEncoder.class);
    assertThat(((PatternLayoutEncoder)encoder).getPattern()).isEqualTo("bar");
  }
}
