private static final class GradleCompatibilityClassRunner extends BlockJUnit4ClassRunner {
  private final String gradleVersion;
  private GradleCompatibilityClassRunner(  Class<?> klass,  String gradleVersion) throws InitializationError {
    super(klass);
    this.gradleVersion=gradleVersion;
  }
  @Override protected Object createTest() throws Exception {
    Object test=super.createTest();
    configureTest(test);
    return test;
  }
  private void configureTest(  Object test) throws Exception {
    GradleBuild gradleBuild=new GradleBuild();
    if (!"default".equals(this.gradleVersion)) {
      gradleBuild=gradleBuild.gradleVersion(this.gradleVersion);
    }
    test.getClass().getField("gradleBuild").set(test,gradleBuild);
  }
  @Override protected String getName(){
    return "Gradle " + this.gradleVersion;
  }
  @Override protected String testName(  FrameworkMethod method){
    return method.getName() + " [" + getName()+ "]";
  }
}
