/** 
 * Tests for  {@link ClassPathChangedEvent}.
 * @author Phillip Webb
 */
public class ClassPathChangedEventTests {
  private Object source=new Object();
  @Test public void changeSetMustNotBeNull(){
    assertThatIllegalArgumentException().isThrownBy(() -> new ClassPathChangedEvent(this.source,null,false)).withMessageContaining("ChangeSet must not be null");
  }
  @Test public void getChangeSet(){
    Set<ChangedFiles> changeSet=new LinkedHashSet<>();
    ClassPathChangedEvent event=new ClassPathChangedEvent(this.source,changeSet,false);
    assertThat(event.getChangeSet()).isSameAs(changeSet);
  }
  @Test public void getRestartRequired(){
    Set<ChangedFiles> changeSet=new LinkedHashSet<>();
    ClassPathChangedEvent event;
    event=new ClassPathChangedEvent(this.source,changeSet,false);
    assertThat(event.isRestartRequired()).isFalse();
    event=new ClassPathChangedEvent(this.source,changeSet,true);
    assertThat(event.isRestartRequired()).isTrue();
  }
}
