/** 
 * Integration tests for  {@link GrabCommand}
 * @author Andy Wilkinson
 * @author Dave Syer
 */
public class GrabCommandIntegrationTests {
  @Rule public CliTester cli=new CliTester("src/test/resources/grab-samples/");
  @Before @After public void deleteLocalRepository(){
    FileSystemUtils.deleteRecursively(new File("target/repository"));
    System.clearProperty("grape.root");
    System.clearProperty("groovy.grape.report.downloads");
  }
  @Test public void grab() throws Exception {
    System.setProperty("grape.root","target");
    System.setProperty("groovy.grape.report.downloads","true");
    String output=this.cli.grab("grab.groovy","--autoconfigure=false");
    assertThat(new File("target/repository/joda-time/joda-time").isDirectory()).isTrue();
    assertThat(output.contains("Downloading: file:")).isTrue();
  }
  @Test public void duplicateDependencyManagementBomAnnotationsProducesAnError(){
    try {
      this.cli.grab("duplicateDependencyManagementBom.groovy");
      fail();
    }
 catch (    Exception ex) {
      assertThat(ex.getMessage()).contains("Duplicate @DependencyManagementBom annotation");
    }
  }
  @Test public void customMetadata() throws Exception {
    System.setProperty("grape.root","target");
    FileSystemUtils.copyRecursively(new File("src/test/resources/grab-samples/repository"),new File("target/repository"));
    this.cli.grab("customDependencyManagement.groovy","--autoconfigure=false");
    assertThat(new File("target/repository/javax/ejb/ejb-api/3.0").isDirectory()).isTrue();
  }
}
