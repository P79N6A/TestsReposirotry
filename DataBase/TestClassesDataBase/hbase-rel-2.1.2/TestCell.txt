/** 
 * Cell used in test. Has row only.
 */
private static class TestCell implements Cell {
  private final byte[] row;
  TestCell(  final int i){
    this.row=Bytes.toBytes(i);
  }
  @Override public byte[] getRowArray(){
    return this.row;
  }
  @Override public int getRowOffset(){
    return 0;
  }
  @Override public short getRowLength(){
    return (short)this.row.length;
  }
  @Override public byte[] getFamilyArray(){
    return null;
  }
  @Override public int getFamilyOffset(){
    return 0;
  }
  @Override public byte getFamilyLength(){
    return 0;
  }
  @Override public byte[] getQualifierArray(){
    return null;
  }
  @Override public int getQualifierOffset(){
    return 0;
  }
  @Override public int getQualifierLength(){
    return 0;
  }
  @Override public long getTimestamp(){
    return 0;
  }
  @Override public byte getTypeByte(){
    return 0;
  }
  @Override public byte[] getValueArray(){
    return null;
  }
  @Override public int getValueOffset(){
    return 0;
  }
  @Override public int getValueLength(){
    return 0;
  }
  @Override public byte[] getTagsArray(){
    return null;
  }
  @Override public int getTagsOffset(){
    return 0;
  }
  @Override public long getSequenceId(){
    return 0;
  }
  @Override public int getTagsLength(){
    return 0;
  }
}
