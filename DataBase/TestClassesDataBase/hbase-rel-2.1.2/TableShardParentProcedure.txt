public static final class TableShardParentProcedure extends NoopProcedure<TestEnv> implements TableProcedureInterface {
  private boolean scheduled;
  @Override protected Procedure<TestEnv>[] execute(  TestEnv env) throws ProcedureYieldException, ProcedureSuspendedException, InterruptedException {
    if (!scheduled) {
      scheduled=true;
      return new Procedure[]{new TableSharedProcedure()};
    }
    return null;
  }
  @Override protected LockState acquireLock(  TestEnv env){
    if (env.getScheduler().waitTableSharedLock(this,getTableName())) {
      return LockState.LOCK_EVENT_WAIT;
    }
    return LockState.LOCK_ACQUIRED;
  }
  @Override protected void releaseLock(  TestEnv env){
    env.getScheduler().wakeTableSharedLock(this,getTableName());
  }
  @Override protected boolean holdLock(  TestEnv env){
    return true;
  }
  @Override public TableName getTableName(){
    return TABLE_NAME;
  }
  @Override public TableOperationType getTableOperationType(){
    return TableOperationType.READ;
  }
}
