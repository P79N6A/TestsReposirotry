/** 
 * Test CoreCoprocessor Annotation works giving access to facility not usually available. Test RegionCoprocessor.
 */
@Category({CoprocessorTests.class,SmallTests.class}) public class TestCoreRegionCoprocessor {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestCoreRegionCoprocessor.class);
  @Rule public TestName name=new TestName();
  HBaseTestingUtility HTU=HBaseTestingUtility.createLocalHTU();
  private HRegion region=null;
  private RegionServerServices rss;
  @Before public void before() throws IOException {
    String methodName=this.name.getMethodName();
    TableName tn=TableName.valueOf(methodName);
    ColumnFamilyDescriptor cfd=ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes(methodName)).build();
    TableDescriptor td=TableDescriptorBuilder.newBuilder(tn).setColumnFamily(cfd).build();
    RegionInfo ri=RegionInfoBuilder.newBuilder(tn).build();
    this.rss=new MockRegionServerServices(HTU.getConfiguration());
    this.region=HRegion.openHRegion(ri,td,null,HTU.getConfiguration(),this.rss,null);
  }
  @After public void after() throws IOException {
    this.region.close();
  }
  /** 
 * No annotation with CoreCoprocessor. This should make it so I can NOT get at instance of a RegionServerServices instance after some gymnastics.
 */
public static class NotCoreRegionCoprocessor implements RegionCoprocessor {
    public NotCoreRegionCoprocessor(){
    }
  }
  /** 
 * Annotate with CoreCoprocessor. This should make it so I can get at instance of a RegionServerServices instance after some gymnastics.
 */
@org.apache.hadoop.hbase.coprocessor.CoreCoprocessor public static class CoreRegionCoprocessor implements RegionCoprocessor {
    public CoreRegionCoprocessor(){
    }
  }
  /** 
 * Assert that when a Coprocessor is annotated with CoreCoprocessor, then it is possible to access a RegionServerServices instance. Assert the opposite too. Do it to RegionCoprocessors.
 * @throws IOException
 */
  @Test public void testCoreRegionCoprocessor() throws IOException {
    RegionCoprocessorHost rch=region.getCoprocessorHost();
    RegionCoprocessorEnvironment env=rch.load(null,NotCoreRegionCoprocessor.class.getName(),0,HTU.getConfiguration());
    assertFalse(env instanceof HasRegionServerServices);
    env=rch.load(null,CoreRegionCoprocessor.class.getName(),1,HTU.getConfiguration());
    assertTrue(env instanceof HasRegionServerServices);
    assertEquals(this.rss,((HasRegionServerServices)env).getRegionServerServices());
  }
}
