/** 
 * Test of default BaseSource for hadoop 2
 */
@Category({MetricsTests.class,SmallTests.class}) public class TestBaseSourceImpl {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestBaseSourceImpl.class);
  private static BaseSourceImpl bmsi;
  @BeforeClass public static void setUp() throws Exception {
    bmsi=new BaseSourceImpl("TestName","test description","testcontext","TestContext");
  }
  @Test public void testSetGauge() throws Exception {
    bmsi.setGauge("testset",100);
    assertEquals(100,((MutableGaugeLong)bmsi.metricsRegistry.get("testset")).value());
    bmsi.setGauge("testset",300);
    assertEquals(300,((MutableGaugeLong)bmsi.metricsRegistry.get("testset")).value());
  }
  @Test public void testIncGauge() throws Exception {
    bmsi.incGauge("testincgauge",100);
    assertEquals(100,((MutableGaugeLong)bmsi.metricsRegistry.get("testincgauge")).value());
    bmsi.incGauge("testincgauge",100);
    assertEquals(200,((MutableGaugeLong)bmsi.metricsRegistry.get("testincgauge")).value());
  }
  @Test public void testDecGauge() throws Exception {
    bmsi.decGauge("testdec",100);
    assertEquals(-100,((MutableGaugeLong)bmsi.metricsRegistry.get("testdec")).value());
    bmsi.decGauge("testdec",100);
    assertEquals(-200,((MutableGaugeLong)bmsi.metricsRegistry.get("testdec")).value());
  }
  @Test public void testIncCounters() throws Exception {
    bmsi.incCounters("testinccounter",100);
    assertEquals(100,((MutableFastCounter)bmsi.metricsRegistry.get("testinccounter")).value());
    bmsi.incCounters("testinccounter",100);
    assertEquals(200,((MutableFastCounter)bmsi.metricsRegistry.get("testinccounter")).value());
  }
  @Test public void testRemoveMetric() throws Exception {
    bmsi.setGauge("testrmgauge",100);
    bmsi.removeMetric("testrmgauge");
    assertNull(bmsi.metricsRegistry.get("testrmgauge"));
  }
}
