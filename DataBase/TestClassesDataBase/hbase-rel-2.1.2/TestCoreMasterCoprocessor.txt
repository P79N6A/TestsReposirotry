/** 
 * Test CoreCoprocessor Annotation works giving access to facility not usually available. Test MasterCoprocessor.
 */
@Category({CoprocessorTests.class,SmallTests.class}) public class TestCoreMasterCoprocessor {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestCoreMasterCoprocessor.class);
  @Rule public TestName name=new TestName();
  private static final HBaseTestingUtility HTU=HBaseTestingUtility.createLocalHTU();
  private MasterServices ms;
  private MasterCoprocessorHost mch;
  @Before public void before() throws IOException {
    String methodName=this.name.getMethodName();
    this.ms=new MockMasterServices(HTU.getConfiguration(),null);
    this.mch=new MasterCoprocessorHost(this.ms,HTU.getConfiguration());
    this.mch.preMasterInitialization();
  }
  @After public void after() throws IOException {
    this.mch.preStopMaster();
  }
  /** 
 * No annotation with CoreCoprocessor. This should make it so I can NOT get at instance of a MasterServices instance after some gymnastics.
 */
public static class NotCoreMasterCoprocessor implements MasterCoprocessor {
    public NotCoreMasterCoprocessor(){
    }
  }
  /** 
 * Annotate with CoreCoprocessor. This should make it so I can get at instance of a MasterServices instance after some gymnastics.
 */
@CoreCoprocessor public static class CoreMasterCoprocessor implements MasterCoprocessor {
    public CoreMasterCoprocessor(){
    }
  }
  /** 
 * Assert that when a Coprocessor is annotated with CoreCoprocessor, then it is possible to access a MasterServices instance. Assert the opposite too. Do it to MasterCoprocessors.
 * @throws IOException
 */
  @Test public void testCoreRegionCoprocessor() throws IOException {
    MasterCoprocessorEnvironment env=this.mch.load(null,NotCoreMasterCoprocessor.class.getName(),0,HTU.getConfiguration());
    assertFalse(env instanceof HasMasterServices);
    env=this.mch.load(null,CoreMasterCoprocessor.class.getName(),1,HTU.getConfiguration());
    assertTrue(env instanceof HasMasterServices);
    assertEquals(this.ms,((HasMasterServices)env).getMasterServices());
  }
}
