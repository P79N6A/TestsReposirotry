public static final class CompactionObserver implements RegionObserver, RegionCoprocessor {
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void preCompactSelection(  ObserverContext<RegionCoprocessorEnvironment> c,  Store store,  List<? extends StoreFile> candidates,  CompactionLifeCycleTracker tracker) throws IOException {
    if (TRACKER != null) {
      assertSame(tracker,TRACKER);
    }
  }
  @Override public void postCompactSelection(  ObserverContext<RegionCoprocessorEnvironment> c,  Store store,  List<? extends StoreFile> selected,  CompactionLifeCycleTracker tracker,  CompactionRequest request){
    if (TRACKER != null) {
      assertSame(tracker,TRACKER);
    }
  }
  @Override public InternalScanner preCompact(  ObserverContext<RegionCoprocessorEnvironment> c,  Store store,  InternalScanner scanner,  ScanType scanType,  CompactionLifeCycleTracker tracker,  CompactionRequest request) throws IOException {
    if (TRACKER != null) {
      assertSame(tracker,TRACKER);
    }
    return scanner;
  }
  @Override public void postCompact(  ObserverContext<RegionCoprocessorEnvironment> c,  Store store,  StoreFile resultFile,  CompactionLifeCycleTracker tracker,  CompactionRequest request) throws IOException {
    if (TRACKER != null) {
      assertSame(tracker,TRACKER);
    }
  }
}
