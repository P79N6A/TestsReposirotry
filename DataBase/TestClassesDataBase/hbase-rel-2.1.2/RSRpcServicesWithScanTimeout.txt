private static class RSRpcServicesWithScanTimeout extends RSRpcServices {
  private long tableScannerId;
  private boolean slept;
  private static long seqNoToSleepOn=-1;
  private static boolean sleepAlways=false;
  private static int tryNumber=0;
  public RSRpcServicesWithScanTimeout(  HRegionServer rs) throws IOException {
    super(rs);
  }
  @Override public ScanResponse scan(  final RpcController controller,  final ScanRequest request) throws ServiceException {
    if (request.hasScannerId()) {
      ScanResponse scanResponse=super.scan(controller,request);
      if (this.tableScannerId == request.getScannerId() && (sleepAlways || (!slept && seqNoToSleepOn == request.getNextCallSeq()))) {
        try {
          LOG.info("SLEEPING " + (rpcTimeout + 500));
          Thread.sleep(rpcTimeout + 500);
        }
 catch (        InterruptedException e) {
        }
        slept=true;
        tryNumber++;
        if (tryNumber > 2 * CLIENT_RETRIES_NUMBER) {
          sleepAlways=false;
        }
      }
      return scanResponse;
    }
 else {
      ScanResponse scanRes=super.scan(controller,request);
      String regionName=Bytes.toString(request.getRegion().getValue().toByteArray());
      if (!regionName.contains(TableName.META_TABLE_NAME.getNameAsString())) {
        tableScannerId=scanRes.getScannerId();
      }
      return scanRes;
    }
  }
}
