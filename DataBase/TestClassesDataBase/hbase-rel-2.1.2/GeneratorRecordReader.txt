static class GeneratorRecordReader extends RecordReader<BytesWritable,NullWritable> {
  private long count;
  private long numNodes;
  private Random rand;
  @Override public void close() throws IOException {
  }
  @Override public BytesWritable getCurrentKey() throws IOException, InterruptedException {
    byte[] bytes=new byte[ROWKEY_LENGTH];
    rand.nextBytes(bytes);
    return new BytesWritable(bytes);
  }
  @Override public NullWritable getCurrentValue() throws IOException, InterruptedException {
    return NullWritable.get();
  }
  @Override public float getProgress() throws IOException, InterruptedException {
    return (float)(count / (double)numNodes);
  }
  @Override public void initialize(  InputSplit arg0,  TaskAttemptContext context) throws IOException, InterruptedException {
    numNodes=context.getConfiguration().getLong(GENERATOR_NUM_ROWS_PER_MAP_KEY,25000000);
    rand=new SecureRandom();
  }
  @Override public boolean nextKeyValue() throws IOException, InterruptedException {
    return count++ < numNodes;
  }
}
