/** 
 * Basic test for some old functionality we don't seem to have used but that looks nice.
 */
@Category({MiscTests.class,SmallTests.class}) public class TestRetryCounter {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestRetryCounter.class);
  private static final Logger LOG=LoggerFactory.getLogger(TestRetryCounter.class);
  @Test public void testBasics() throws InterruptedException {
    int maxAttempts=10;
    RetryCounterFactory factory=new RetryCounterFactory(maxAttempts,10,1000);
    RetryCounter retryCounter=factory.create();
    while (retryCounter.shouldRetry()) {
      LOG.info("Attempt={}, backoffTime={}",retryCounter.getAttemptTimes(),retryCounter.getBackoffTime());
      retryCounter.sleepUntilNextRetry();
    }
    assertTrue(retryCounter.getAttemptTimes() == maxAttempts);
  }
}
