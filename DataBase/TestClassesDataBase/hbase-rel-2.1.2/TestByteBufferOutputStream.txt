@Category(SmallTests.class) public class TestByteBufferOutputStream {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestByteBufferOutputStream.class);
  @Test public void testByteBufferReuse() throws IOException {
    byte[] someBytes=Bytes.toBytes("some bytes");
    ByteBuffer bb=ByteBuffer.allocate(someBytes.length);
    ByteBuffer bbToReuse=write(bb,someBytes);
    bbToReuse=write(bbToReuse,Bytes.toBytes("less"));
    assertTrue(bb == bbToReuse);
  }
  private ByteBuffer write(  final ByteBuffer bb,  final byte[] bytes) throws IOException {
    try (ByteBufferOutputStream bbos=new ByteBufferOutputStream(bb)){
      bbos.write(bytes);
      assertTrue(Bytes.compareTo(bytes,bbos.toByteArray(0,bytes.length)) == 0);
      bbos.flush();
      return bbos.getByteBuffer();
    }
   }
}
