@Category({ZKTests.class,SmallTests.class}) public class TestZKUtilNoServer {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestZKUtilNoServer.class);
  @Test public void testUnsecure() throws ZooKeeperConnectionException, IOException {
    Configuration conf=HBaseConfiguration.create();
    conf.set(Superusers.SUPERUSER_CONF_KEY,"user1");
    String node="/hbase/testUnsecure";
    ZKWatcher watcher=new ZKWatcher(conf,node,null,false);
    List<ACL> aclList=ZKUtil.createACL(watcher,node,false);
    assertEquals(1,aclList.size());
    assertTrue(aclList.contains(Ids.OPEN_ACL_UNSAFE.iterator().next()));
  }
  @Test public void testSecuritySingleSuperuser() throws ZooKeeperConnectionException, IOException {
    Configuration conf=HBaseConfiguration.create();
    conf.set(Superusers.SUPERUSER_CONF_KEY,"user1");
    String node="/hbase/testSecuritySingleSuperuser";
    ZKWatcher watcher=new ZKWatcher(conf,node,null,false);
    List<ACL> aclList=ZKUtil.createACL(watcher,node,true);
    assertEquals(2,aclList.size());
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("sasl","user1"))));
    assertTrue(aclList.contains(Ids.CREATOR_ALL_ACL.iterator().next()));
  }
  @Test public void testCreateACL() throws ZooKeeperConnectionException, IOException {
    Configuration conf=HBaseConfiguration.create();
    conf.set(Superusers.SUPERUSER_CONF_KEY,"user1,@group1,user2,@group2,user3");
    String node="/hbase/testCreateACL";
    ZKWatcher watcher=new ZKWatcher(conf,node,null,false);
    List<ACL> aclList=ZKUtil.createACL(watcher,node,true);
    assertEquals(4,aclList.size());
    assertFalse(aclList.contains(new ACL(Perms.ALL,new Id("sasl","@group1"))));
    assertFalse(aclList.contains(new ACL(Perms.ALL,new Id("sasl","@group2"))));
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("sasl","user1"))));
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("sasl","user2"))));
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("sasl","user3"))));
  }
  @Test public void testCreateACLWithSameUser() throws ZooKeeperConnectionException, IOException {
    Configuration conf=HBaseConfiguration.create();
    conf.set(Superusers.SUPERUSER_CONF_KEY,"user4,@group1,user5,user6");
    UserGroupInformation.setLoginUser(UserGroupInformation.createRemoteUser("user4"));
    String node="/hbase/testCreateACL";
    ZKWatcher watcher=new ZKWatcher(conf,node,null,false);
    List<ACL> aclList=ZKUtil.createACL(watcher,node,true);
    assertEquals(3,aclList.size());
    assertFalse(aclList.contains(new ACL(Perms.ALL,new Id("sasl","@group1"))));
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("auth",""))));
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("sasl","user5"))));
    assertTrue(aclList.contains(new ACL(Perms.ALL,new Id("sasl","user6"))));
  }
  @Test(expected=KeeperException.SystemErrorException.class) public void testInterruptedDuringAction() throws ZooKeeperConnectionException, IOException, KeeperException, InterruptedException {
    final RecoverableZooKeeper recoverableZk=Mockito.mock(RecoverableZooKeeper.class);
    ZKWatcher zkw=new ZKWatcher(HBaseConfiguration.create(),"unittest",null){
      @Override public RecoverableZooKeeper getRecoverableZooKeeper(){
        return recoverableZk;
      }
    }
;
    Mockito.doThrow(new InterruptedException()).when(recoverableZk).getChildren(zkw.getZNodePaths().baseZNode,null);
    ZKUtil.listChildrenNoWatch(zkw,zkw.getZNodePaths().baseZNode);
  }
}
