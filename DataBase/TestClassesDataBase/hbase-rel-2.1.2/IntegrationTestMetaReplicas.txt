/** 
 * An integration test that starts the cluster with three replicas for the meta It then creates a table, flushes the meta, kills the server holding the primary. After that a client issues put/get requests on the created table - the other replicas of the meta would be used to get the location of the region of the created table.
 */
@Category(IntegrationTests.class) public class IntegrationTestMetaReplicas {
  private static final Logger LOG=LoggerFactory.getLogger(IntegrationTestMetaReplicas.class);
  /** 
 * Util to get at the cluster.
 */
  private static IntegrationTestingUtility util;
  @BeforeClass public static void setUp() throws Exception {
    if (util == null) {
      util=new IntegrationTestingUtility();
    }
    util.getConfiguration().setInt(HConstants.META_REPLICAS_NUM,3);
    util.getConfiguration().setInt(StorefileRefresherChore.REGIONSERVER_STOREFILE_REFRESH_PERIOD,1000);
    util.initializeCluster(3);
    ZKWatcher zkw=util.getZooKeeperWatcher();
    Configuration conf=util.getConfiguration();
    String baseZNode=conf.get(HConstants.ZOOKEEPER_ZNODE_PARENT,HConstants.DEFAULT_ZOOKEEPER_ZNODE_PARENT);
    String primaryMetaZnode=ZNodePaths.joinZNode(baseZNode,conf.get("zookeeper.znode.metaserver","meta-region-server"));
    byte[] data=ZKUtil.getData(zkw,primaryMetaZnode);
    ProtobufUtil.toServerName(data);
    waitUntilZnodeAvailable(1);
    waitUntilZnodeAvailable(2);
  }
  @AfterClass public static void teardown() throws Exception {
    util.restoreCluster();
    util=null;
  }
  private static void waitUntilZnodeAvailable(  int replicaId) throws Exception {
    String znode=util.getZooKeeperWatcher().getZNodePaths().getZNodeForReplica(replicaId);
    int i=0;
    while (i < 1000) {
      if (ZKUtil.checkExists(util.getZooKeeperWatcher(),znode) == -1) {
        Thread.sleep(100);
        i++;
      }
 else       break;
    }
    if (i == 1000)     throw new IOException("znode for meta replica " + replicaId + " not available");
  }
  @Test public void testShutdownHandling() throws Exception {
    TestMetaWithReplicas.shutdownMetaAndDoValidations(util);
  }
  public static void main(  String[] args) throws Exception {
    setUp();
    new IntegrationTestMetaReplicas().testShutdownHandling();
    teardown();
  }
}
