public class TestCompactionContext extends CompactionContext {
  private List<HStoreFile> selectedFiles;
  public TestCompactionContext(  List<HStoreFile> selectedFiles){
    super();
    this.selectedFiles=selectedFiles;
  }
  @Override public List<HStoreFile> preSelect(  List<HStoreFile> filesCompacting){
    return new ArrayList<>();
  }
  @Override public boolean select(  List<HStoreFile> filesCompacting,  boolean isUserCompaction,  boolean mayUseOffPeak,  boolean forceMajor) throws IOException {
    this.request=new CompactionRequestImpl(selectedFiles);
    this.request.setPriority(getPriority());
    return true;
  }
  @Override public List<Path> compact(  ThroughputController throughputController,  User user) throws IOException {
    finishCompaction(this.selectedFiles);
    return new ArrayList<>();
  }
}
