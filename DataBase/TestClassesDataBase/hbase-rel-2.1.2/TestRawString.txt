@Category({MiscTests.class,SmallTests.class}) public class TestRawString {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestRawString.class);
  static final String[] VALUES=new String[]{"","1","22","333","4444","55555","666666","7777777","88888888","999999999"};
  @Test public void testReadWrite(){
    for (    Order ord : new Order[]{Order.ASCENDING,Order.DESCENDING}) {
      RawString type=Order.ASCENDING == ord ? RawString.ASCENDING : RawString.DESCENDING;
      for (      String val : VALUES) {
        PositionedByteRange buff=new SimplePositionedMutableByteRange(Bytes.toBytes(val).length);
        assertEquals(buff.getLength(),type.encode(buff,val));
        byte[] expected=Bytes.toBytes(val);
        ord.apply(expected);
        assertArrayEquals(expected,buff.getBytes());
        buff.setPosition(0);
        assertEquals(val,type.decode(buff));
        buff.setPosition(0);
        assertEquals(buff.getLength(),type.skip(buff));
        assertEquals(buff.getLength(),buff.getPosition());
      }
    }
  }
}
