@Category({SmallTests.class,ClientTests.class}) public class TestConfigurationManager {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestConfigurationManager.class);
  private static final Logger LOG=LoggerFactory.getLogger(TestConfigurationManager.class);
class DummyConfigurationObserver implements ConfigurationObserver {
    private boolean notifiedOnChange=false;
    private ConfigurationManager cm;
    public DummyConfigurationObserver(    ConfigurationManager cm){
      this.cm=cm;
      register();
    }
    @Override public void onConfigurationChange(    Configuration conf){
      notifiedOnChange=true;
    }
    public boolean wasNotifiedOnChange(){
      return notifiedOnChange;
    }
    public void resetNotifiedOnChange(){
      notifiedOnChange=false;
    }
    public void register(){
      this.cm.registerObserver(this);
    }
    public void deregister(){
      this.cm.deregisterObserver(this);
    }
  }
  /** 
 * Test if observers get notified by the <code>ConfigurationManager</code> when the Configuration is reloaded.
 */
  @Test public void testCheckIfObserversNotified(){
    Configuration conf=new Configuration();
    ConfigurationManager cm=new ConfigurationManager();
    DummyConfigurationObserver d1=new DummyConfigurationObserver(cm);
    cm.notifyAllObservers(conf);
    assertTrue(d1.wasNotifiedOnChange());
    d1.resetNotifiedOnChange();
    DummyConfigurationObserver d2=new DummyConfigurationObserver(cm);
    cm.notifyAllObservers(conf);
    assertTrue(d1.wasNotifiedOnChange());
    d1.resetNotifiedOnChange();
    assertTrue(d2.wasNotifiedOnChange());
    d2.resetNotifiedOnChange();
    d2.deregister();
    cm.notifyAllObservers(conf);
    assertTrue(d1.wasNotifiedOnChange());
    d1.resetNotifiedOnChange();
    assertFalse(d2.wasNotifiedOnChange());
  }
  private void registerLocalObserver(  ConfigurationManager cm){
    new DummyConfigurationObserver(cm);
  }
  /** 
 * Test if out-of-scope observers are deregistered on GC.
 */
  @Test public void testDeregisterOnOutOfScope(){
    Configuration conf=new Configuration();
    ConfigurationManager cm=new ConfigurationManager();
    boolean outOfScopeObserversDeregistered=false;
    for (int i=0; i < 100000; i++) {
      registerLocalObserver(cm);
      cm.notifyAllObservers(conf);
      System.gc();
      if (cm.getNumObservers() <= i) {
        outOfScopeObserversDeregistered=true;
        break;
      }
    }
    if (!outOfScopeObserversDeregistered) {
      LOG.warn("Observers were not GC-ed! Something seems to be wrong.");
    }
    assertTrue(outOfScopeObserversDeregistered);
  }
}
