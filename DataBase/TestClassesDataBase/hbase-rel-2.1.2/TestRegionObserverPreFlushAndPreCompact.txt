/** 
 * Test that we fail if a Coprocessor tries to return a null scanner out {@link RegionObserver#preFlush(ObserverContext,Store,InternalScanner,FlushLifeCycleTracker)}or  {@link RegionObserver#preCompact(ObserverContext,Store,InternalScanner,ScanType,CompactionLifeCycleTracker,CompactionRequest)}
 * @see <a href=https://issues.apache.org/jira/browse/HBASE-19122>HBASE-19122</a>
 */
@Category({CoprocessorTests.class,SmallTests.class}) public class TestRegionObserverPreFlushAndPreCompact {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestRegionObserverPreFlushAndPreCompact.class);
  @Rule public TestName name=new TestName();
  /** 
 * Coprocessor that returns null when preCompact or preFlush is called.
 */
public static class TestRegionObserver implements RegionObserver, RegionCoprocessor {
    @Override public InternalScanner preFlush(    ObserverContext<RegionCoprocessorEnvironment> c,    Store store,    InternalScanner scanner,    FlushLifeCycleTracker tracker) throws IOException {
      return null;
    }
    @Override public InternalScanner preCompact(    ObserverContext<RegionCoprocessorEnvironment> c,    Store store,    InternalScanner scanner,    ScanType scanType,    CompactionLifeCycleTracker tracker,    CompactionRequest request) throws IOException {
      return null;
    }
    @Override public Optional<RegionObserver> getRegionObserver(){
      return Optional.of(this);
    }
  }
  /** 
 * Ensure we get expected exception when we try to return null from a preFlush call.
 * @throws IOException We expect it to throw {@link CoprocessorException}
 */
  @Test(expected=CoprocessorException.class) public void testPreFlushReturningNull() throws IOException {
    RegionCoprocessorHost rch=getRegionCoprocessorHost();
    rch.preFlush(null,null,null);
  }
  /** 
 * Ensure we get expected exception when we try to return null from a preCompact call.
 * @throws IOException We expect it to throw {@link CoprocessorException}
 */
  @Test(expected=CoprocessorException.class) public void testPreCompactReturningNull() throws IOException {
    RegionCoprocessorHost rch=getRegionCoprocessorHost();
    rch.preCompact(null,null,null,null,null,null);
  }
  private RegionCoprocessorHost getRegionCoprocessorHost(){
    RegionInfo ri=RegionInfoBuilder.FIRST_META_REGIONINFO;
    HRegion mockedHRegion=Mockito.mock(HRegion.class);
    Mockito.when(mockedHRegion.getRegionInfo()).thenReturn(ri);
    TableDescriptor td=TableDescriptorBuilder.newBuilder(ri.getTable()).build();
    Mockito.when(mockedHRegion.getTableDescriptor()).thenReturn(td);
    RegionServerServices mockedServices=Mockito.mock(RegionServerServices.class);
    Configuration conf=HBaseConfiguration.create();
    conf.set(REGION_COPROCESSOR_CONF_KEY,TestRegionObserver.class.getName());
    return new RegionCoprocessorHost(mockedHRegion,mockedServices,conf);
  }
}
