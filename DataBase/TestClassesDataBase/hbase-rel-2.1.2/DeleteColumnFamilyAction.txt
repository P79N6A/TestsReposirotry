private class DeleteColumnFamilyAction extends ColumnAction {
  @Override void perform() throws IOException {
    TableDescriptor selected=selectTable(disabledTables);
    ColumnFamilyDescriptor cfd=selectFamily(selected);
    if (selected == null || cfd == null) {
      return;
    }
    Admin admin=connection.getAdmin();
    try {
      if (selected.getColumnFamilyCount() < 2) {
        LOG.info("No enough column families to delete in table " + selected.getTableName());
        return;
      }
      TableName tableName=selected.getTableName();
      LOG.info("Deleting column family: " + cfd + " from table: "+ tableName);
      admin.deleteColumnFamily(tableName,cfd.getName());
      TableDescriptor freshTableDesc=admin.getDescriptor(tableName);
      Assert.assertFalse("Column family: " + cfd + " was not added",freshTableDesc.hasColumnFamily(cfd.getName()));
      Assert.assertTrue("After delete column family, Table: " + tableName + " is not disabled",admin.isTableDisabled(tableName));
      disabledTables.put(tableName,freshTableDesc);
      LOG.info("Deleted column family: " + cfd + " from table: "+ tableName);
    }
 catch (    Exception e) {
      LOG.warn("Caught exception in action: " + this.getClass());
      throw e;
    }
 finally {
      admin.close();
    }
  }
}
