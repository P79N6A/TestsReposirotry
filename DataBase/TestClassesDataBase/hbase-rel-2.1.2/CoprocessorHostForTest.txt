private static class CoprocessorHostForTest<E extends Coprocessor> extends CoprocessorHost<E,CoprocessorEnvironment<E>> {
  final Configuration cpHostConf;
  public CoprocessorHostForTest(  Configuration conf){
    super(new TestAbortable());
    cpHostConf=conf;
  }
  @Override public E checkAndGetInstance(  Class<?> implClass) throws InstantiationException, IllegalAccessException {
    try {
      return (E)implClass.getDeclaredConstructor().newInstance();
    }
 catch (    InvocationTargetException|NoSuchMethodException e) {
      throw (InstantiationException)new InstantiationException().initCause(e);
    }
  }
  @Override public CoprocessorEnvironment<E> createEnvironment(  final E instance,  final int priority,  int sequence,  Configuration conf){
    return new BaseEnvironment<>(instance,priority,0,cpHostConf);
  }
}
