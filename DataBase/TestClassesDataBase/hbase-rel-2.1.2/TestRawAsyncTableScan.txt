@RunWith(Parameterized.class) @Category({MediumTests.class,ClientTests.class}) public class TestRawAsyncTableScan extends AbstractTestAsyncTableScan {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestRawAsyncTableScan.class);
  @Parameter(0) public String scanType;
  @Parameter(1) public Supplier<Scan> scanCreater;
  @Parameters(name="{index}: type={0}") public static List<Object[]> params(){
    return getScanCreatorParams();
  }
  @Override protected Scan createScan(){
    return scanCreater.get();
  }
  @Override protected List<Result> doScan(  Scan scan) throws Exception {
    BufferingScanResultConsumer scanConsumer=new BufferingScanResultConsumer();
    ASYNC_CONN.getTable(TABLE_NAME).scan(scan,scanConsumer);
    List<Result> results=new ArrayList<>();
    for (Result result; (result=scanConsumer.take()) != null; ) {
      results.add(result);
    }
    if (scan.getBatch() > 0) {
      results=convertFromBatchResult(results);
    }
    return results;
  }
}
