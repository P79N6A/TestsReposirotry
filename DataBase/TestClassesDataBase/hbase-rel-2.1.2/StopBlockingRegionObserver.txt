@CoreCoprocessor public static class StopBlockingRegionObserver implements RegionServerCoprocessor, RegionCoprocessor, RegionServerObserver, RegionObserver {
  public static final String DO_ABORT="DO_ABORT";
  private boolean stopAllowed;
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public Optional<RegionServerObserver> getRegionServerObserver(){
    return Optional.of(this);
  }
  @Override public void prePut(  ObserverContext<RegionCoprocessorEnvironment> c,  Put put,  WALEdit edit,  Durability durability) throws IOException {
    if (put.getAttribute(DO_ABORT) != null) {
      RegionServerServices rss=((HasRegionServerServices)c.getEnvironment()).getRegionServerServices();
      String str="Aborting for test";
      LOG.info(str + " " + rss.getServerName());
      rss.abort(str,new Throwable(str));
    }
  }
  @Override public void preStopRegionServer(  ObserverContext<RegionServerCoprocessorEnvironment> env) throws IOException {
    if (!stopAllowed) {
      throw new IOException("Stop not allowed");
    }
  }
  public void setStopAllowed(  boolean allowed){
    this.stopAllowed=allowed;
  }
}
