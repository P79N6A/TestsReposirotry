/** 
 * Writable used as the value emitted from a pass over the hbase table.
 */
public static class LinkChain implements WritableComparable<LinkChain> {
  public Long getNext(){
    return next;
  }
  public Long getRk(){
    return rk;
  }
  public LinkChain(){
  }
  public LinkChain(  Long rk,  Long next){
    this.rk=rk;
    this.next=next;
  }
  private Long rk;
  private Long next;
  @Override public int compareTo(  LinkChain linkChain){
    int res=getRk().compareTo(linkChain.getRk());
    if (res == 0) {
      res=getNext().compareTo(linkChain.getNext());
    }
    return res;
  }
  @Override public void write(  DataOutput dataOutput) throws IOException {
    WritableUtils.writeVLong(dataOutput,rk);
    WritableUtils.writeVLong(dataOutput,next);
  }
  @Override public void readFields(  DataInput dataInput) throws IOException {
    rk=WritableUtils.readVLong(dataInput);
    next=WritableUtils.readVLong(dataInput);
  }
}
