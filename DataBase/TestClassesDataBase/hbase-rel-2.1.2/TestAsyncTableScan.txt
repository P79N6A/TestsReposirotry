@RunWith(Parameterized.class) @Category({LargeTests.class,ClientTests.class}) public class TestAsyncTableScan extends AbstractTestAsyncTableScan {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestAsyncTableScan.class);
  @Parameter(0) public String scanType;
  @Parameter(1) public Supplier<Scan> scanCreater;
  @Parameters(name="{index}: scan={0}") public static List<Object[]> params(){
    return getScanCreatorParams();
  }
  @Override protected Scan createScan(){
    return scanCreater.get();
  }
  @Override protected List<Result> doScan(  Scan scan) throws Exception {
    AsyncTable<ScanResultConsumer> table=ASYNC_CONN.getTable(TABLE_NAME,ForkJoinPool.commonPool());
    SimpleScanResultConsumer consumer=new SimpleScanResultConsumer();
    table.scan(scan,consumer);
    List<Result> results=consumer.getAll();
    if (scan.getBatch() > 0) {
      results=convertFromBatchResult(results);
    }
    return results;
  }
}
