@Category({FilterTests.class,SmallTests.class}) public class TestBigDecimalComparator {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestBigDecimalComparator.class);
  @Test public void testObjectEquals(){
    BigDecimal bd=new BigDecimal(Double.MIN_VALUE);
    final BigDecimalComparator bdc=new BigDecimalComparator(bd);
    Assert.assertTrue(bdc.equals(bdc));
    Assert.assertEquals(bdc.hashCode(),bdc.hashCode());
    final BigDecimalComparator bdc1=new BigDecimalComparator(bd);
    final BigDecimalComparator bdc2=new BigDecimalComparator(bd);
    Assert.assertTrue(bdc1.equals(bdc2));
    Assert.assertEquals(bdc1.hashCode(),bdc2.hashCode());
    final BigDecimalComparator bdc3=new BigDecimalComparator(bd);
    final BigDecimalComparator bdc4=new BigDecimalComparator(new BigDecimal(Long.MIN_VALUE));
    Assert.assertFalse(bdc3.equals(bdc4));
    Assert.assertNotEquals(bdc3.hashCode(),bdc4.hashCode());
    final BigDecimalComparator bdc5=new BigDecimalComparator(bd);
    Assert.assertFalse(bdc5.equals(0));
  }
  @Test public void testEqualsValue(){
    BigDecimal bd1=new BigDecimal(Double.MAX_VALUE);
    BigDecimal bd2=new BigDecimal(Double.MIN_VALUE);
    byte[] value1=Bytes.toBytes(bd1);
    byte[] value2=Bytes.toBytes(bd2);
    BigDecimalComparator comparator1=new BigDecimalComparator(bd1);
    BigDecimalComparator comparator2=new BigDecimalComparator(bd2);
    int comp1=comparator1.compareTo(value1);
    int comp2=comparator2.compareTo(value2);
    Assert.assertEquals(0,comp1);
    Assert.assertEquals(0,comp2);
  }
  @Test public void testGreaterThanValue(){
    byte[] val1=Bytes.toBytes(new BigDecimal("1000000000000000000000000000000.9999999999999999"));
    byte[] val2=Bytes.toBytes(new BigDecimal(0));
    byte[] val3=Bytes.toBytes(new BigDecimal(Double.MIN_VALUE));
    BigDecimal bd=new BigDecimal(Double.MAX_VALUE);
    BigDecimalComparator comparator=new BigDecimalComparator(bd);
    int comp1=comparator.compareTo(val1);
    int comp2=comparator.compareTo(val2);
    int comp3=comparator.compareTo(val3);
    Assert.assertEquals(1,comp1);
    Assert.assertEquals(1,comp2);
    Assert.assertEquals(1,comp3);
  }
  @Test public void testLessThanValue(){
    byte[] val1=Bytes.toBytes(new BigDecimal("-1000000000000000000000000000000"));
    byte[] val2=Bytes.toBytes(new BigDecimal(0));
    byte[] val3=Bytes.toBytes(new BigDecimal(1));
    BigDecimal bd=new BigDecimal("-1000000000000000000000000000000.0000000000000001");
    BigDecimalComparator comparator=new BigDecimalComparator(bd);
    int comp1=comparator.compareTo(val1);
    int comp2=comparator.compareTo(val2);
    int comp3=comparator.compareTo(val3);
    Assert.assertEquals(-1,comp1);
    Assert.assertEquals(-1,comp2);
    Assert.assertEquals(-1,comp3);
  }
}
