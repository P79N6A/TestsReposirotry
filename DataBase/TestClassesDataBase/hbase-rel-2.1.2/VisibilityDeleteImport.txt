static class VisibilityDeleteImport extends Import.Importer {
  private int index;
  private String labels;
  private String[] split;
  @Override public void setup(  org.apache.hadoop.mapreduce.Mapper.Context context){
    index=context.getConfiguration().getInt(INDEX_KEY,-1);
    labels=context.getConfiguration().get(LABELS_KEY);
    split=labels.split(COMMA);
    super.setup(context);
  }
  @Override protected void processKV(  ImmutableBytesWritable key,  Result result,  org.apache.hadoop.mapreduce.Mapper.Context context,  Put put,  org.apache.hadoop.hbase.client.Delete delete) throws IOException, InterruptedException {
    String visibilityExps=split[index * 2] + OR + split[(index * 2) + 1];
    for (    Cell kv : result.rawCells()) {
      if (kv == null)       continue;
      if (delete == null) {
        delete=new Delete(key.get());
      }
      delete.setCellVisibility(new CellVisibility(visibilityExps));
      delete.addFamily(CellUtil.cloneFamily(kv));
    }
    if (delete != null) {
      context.write(key,delete);
    }
  }
}
