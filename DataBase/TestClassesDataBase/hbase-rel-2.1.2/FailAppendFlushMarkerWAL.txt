class FailAppendFlushMarkerWAL extends FSHLog {
  volatile FlushAction[] flushActions=null;
  public FailAppendFlushMarkerWAL(  FileSystem fs,  Path root,  String logDir,  Configuration conf) throws IOException {
    super(fs,root,logDir,conf);
  }
  @Override protected Writer createWriterInstance(  Path path) throws IOException {
    final Writer w=super.createWriterInstance(path);
    return new Writer(){
      @Override public void close() throws IOException {
        w.close();
      }
      @Override public void sync(      boolean forceSync) throws IOException {
        w.sync(forceSync);
      }
      @Override public void append(      Entry entry) throws IOException {
        List<Cell> cells=entry.getEdit().getCells();
        if (WALEdit.isMetaEditFamily(cells.get(0))) {
          FlushDescriptor desc=WALEdit.getFlushDescriptor(cells.get(0));
          if (desc != null) {
            for (            FlushAction flushAction : flushActions) {
              if (desc.getAction().equals(flushAction)) {
                throw new IOException("Failed to append flush marker! " + flushAction);
              }
            }
          }
        }
        w.append(entry);
      }
      @Override public long getLength(){
        return w.getLength();
      }
    }
;
  }
}
