@Category({MasterTests.class,MediumTests.class}) public class TestProcedureManager {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestProcedureManager.class);
  private static final int NUM_RS=2;
  private static HBaseTestingUtility util=new HBaseTestingUtility();
  @BeforeClass public static void setupBeforeClass() throws Exception {
    Configuration conf=util.getConfiguration();
    conf.set(ProcedureManagerHost.MASTER_PROCEDURE_CONF_KEY,SimpleMasterProcedureManager.class.getName());
    conf.set(ProcedureManagerHost.REGIONSERVER_PROCEDURE_CONF_KEY,SimpleRSProcedureManager.class.getName());
    util.startMiniCluster(NUM_RS);
  }
  @AfterClass public static void tearDownAfterClass() throws Exception {
    util.shutdownMiniCluster();
  }
  @Test public void testSimpleProcedureManager() throws IOException {
    Admin admin=util.getAdmin();
    byte[] result=admin.execProcedureWithRet(SimpleMasterProcedureManager.SIMPLE_SIGNATURE,"mytest",new HashMap<>());
    assertArrayEquals("Incorrect return data from execProcedure",SimpleMasterProcedureManager.SIMPLE_DATA.getBytes(),result);
  }
}
