/** 
 * The class level TestRule for all the tests. Every test class should have a  {@code ClassRule} withit. <p> For now it only sets a test method timeout based off the test categories small, medium, large. Based on junit Timeout TestRule; see https://github.com/junit-team/junit/wiki/Rules
 */
@InterfaceAudience.Private public final class HBaseClassTestRule implements TestRule {
  private final Class<?> clazz;
  private final Timeout timeout;
  private HBaseClassTestRule(  Class<?> clazz,  Timeout timeout){
    this.clazz=clazz;
    this.timeout=timeout;
  }
  /** 
 * Mainly used for  {@link HBaseClassTestRuleChecker} to confirm that we use the correctclass to generate timeout ClassRule.
 */
  public Class<?> getClazz(){
    return clazz;
  }
  private static long getTimeoutInSeconds(  Class<?> clazz){
    Category[] categories=clazz.getAnnotationsByType(Category.class);
    for (    Class<?> c : categories[0].value()) {
      if (c == SmallTests.class || c == MediumTests.class || c == LargeTests.class) {
        return TimeUnit.MINUTES.toSeconds(13);
      }
      if (c == IntegrationTests.class) {
        return TimeUnit.MINUTES.toSeconds(Long.MAX_VALUE);
      }
    }
    throw new IllegalArgumentException(clazz.getName() + " does not have SmallTests/MediumTests/LargeTests in @Category");
  }
  public static HBaseClassTestRule forClass(  Class<?> clazz){
    return new HBaseClassTestRule(clazz,Timeout.builder().withLookingForStuckThread(true).withTimeout(getTimeoutInSeconds(clazz),TimeUnit.SECONDS).build());
  }
  @Override public Statement apply(  Statement base,  Description description){
    return timeout.apply(base,description);
  }
}
