public static class TestWaitChild extends SequentialProcedure<Void> {
  private final List<String> state;
  private final String name;
  public TestWaitChild(){
    throw new UnsupportedOperationException("recovery should not be triggered here");
  }
  public TestWaitChild(  String name,  List<String> state){
    this.name=name;
    this.state=state;
  }
  @Override protected Procedure<Void>[] execute(  Void env){
    state.add(name + "-child-execute");
    return null;
  }
  @Override protected void rollback(  Void env){
    throw new UnsupportedOperationException("should not rollback a successful child procedure");
  }
  @Override protected boolean abort(  Void env){
    state.add(name + "-child-abort");
    return true;
  }
}
