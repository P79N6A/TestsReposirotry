@Category({RestTests.class,MediumTests.class}) public class TestDeleteRow extends RowResourceBase {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestDeleteRow.class);
  @Test public void testDeleteNonExistentColumn() throws Exception {
    Response response=putValueJson(TABLE,ROW_1,COLUMN_1,VALUE_1);
    assertEquals(200,response.getCode());
    response=checkAndDeleteJson(TABLE,ROW_1,COLUMN_1,VALUE_2);
    assertEquals(304,response.getCode());
    assertEquals(200,getValueJson(TABLE,ROW_1,COLUMN_1).getCode());
    response=checkAndDeleteJson(TABLE,ROW_2,COLUMN_1,VALUE_2);
    assertEquals(304,response.getCode());
    assertEquals(200,getValueJson(TABLE,ROW_1,COLUMN_1).getCode());
    response=checkAndDeleteJson(TABLE,ROW_1,"dummy",VALUE_1);
    assertEquals(400,response.getCode());
    assertEquals(200,getValueJson(TABLE,ROW_1,COLUMN_1).getCode());
    response=checkAndDeleteJson(TABLE,ROW_1,"dummy:test",VALUE_1);
    assertEquals(404,response.getCode());
    assertEquals(200,getValueJson(TABLE,ROW_1,COLUMN_1).getCode());
    response=checkAndDeleteJson(TABLE,ROW_1,"a:test",VALUE_1);
    assertEquals(304,response.getCode());
    assertEquals(200,getValueJson(TABLE,ROW_1,COLUMN_1).getCode());
  }
  @Test public void testDeleteXML() throws IOException, JAXBException {
    Response response=putValueXML(TABLE,ROW_1,COLUMN_1,VALUE_1);
    assertEquals(200,response.getCode());
    response=putValueXML(TABLE,ROW_1,COLUMN_2,VALUE_2);
    assertEquals(200,response.getCode());
    checkValueXML(TABLE,ROW_1,COLUMN_1,VALUE_1);
    checkValueXML(TABLE,ROW_1,COLUMN_2,VALUE_2);
    response=deleteValue(TABLE,ROW_1,COLUMN_1);
    assertEquals(200,response.getCode());
    response=getValueXML(TABLE,ROW_1,COLUMN_1);
    assertEquals(404,response.getCode());
    checkValueXML(TABLE,ROW_1,COLUMN_2,VALUE_2);
    response=putValueXML(TABLE,ROW_1,COLUMN_1,VALUE_1);
    assertEquals(200,response.getCode());
    response=checkAndDeletePB(TABLE,ROW_1,COLUMN_1,VALUE_1);
    assertEquals(200,response.getCode());
    response=getValueXML(TABLE,ROW_1,COLUMN_1);
    assertEquals(404,response.getCode());
    response=deleteRow(TABLE,ROW_1);
    assertEquals(200,response.getCode());
    response=getValueXML(TABLE,ROW_1,COLUMN_1);
    assertEquals(404,response.getCode());
    response=getValueXML(TABLE,ROW_1,COLUMN_2);
    assertEquals(404,response.getCode());
    response=deleteValue("dummy",ROW_1,COLUMN_1);
    assertEquals(404,response.getCode());
    response=deleteValue(TABLE,ROW_1,"dummy");
    assertEquals(404,response.getCode());
  }
}
