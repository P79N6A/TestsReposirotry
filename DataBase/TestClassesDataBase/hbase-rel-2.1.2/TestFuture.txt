private static class TestFuture extends HBaseAdmin.ProcedureFuture<Void> {
  private boolean postOperationResultCalled=false;
  private boolean waitOperationResultCalled=false;
  private boolean getProcedureResultCalled=false;
  private boolean convertResultCalled=false;
  public TestFuture(  final HBaseAdmin admin,  final Long procId){
    super(admin,procId);
  }
  public boolean wasPostOperationResultCalled(){
    return postOperationResultCalled;
  }
  public boolean wasWaitOperationResultCalled(){
    return waitOperationResultCalled;
  }
  public boolean wasGetProcedureResultCalled(){
    return getProcedureResultCalled;
  }
  public boolean wasConvertResultCalled(){
    return convertResultCalled;
  }
  @Override protected GetProcedureResultResponse getProcedureResult(  final GetProcedureResultRequest request) throws IOException {
    getProcedureResultCalled=true;
    return GetProcedureResultResponse.newBuilder().setState(GetProcedureResultResponse.State.FINISHED).build();
  }
  @Override protected Void convertResult(  final GetProcedureResultResponse response) throws IOException {
    convertResultCalled=true;
    return null;
  }
  @Override protected Void waitOperationResult(  final long deadlineTs) throws IOException, TimeoutException {
    waitOperationResultCalled=true;
    return null;
  }
  @Override protected Void postOperationResult(  final Void result,  final long deadlineTs) throws IOException, TimeoutException {
    postOperationResultCalled=true;
    return result;
  }
}
