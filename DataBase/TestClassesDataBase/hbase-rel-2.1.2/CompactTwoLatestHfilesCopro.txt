/** 
 * This copro overwrites the default compaction policy. It always chooses two latest hfiles and compacts them into a new one.
 */
public static class CompactTwoLatestHfilesCopro implements RegionCoprocessor, RegionObserver {
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void preCompactSelection(  ObserverContext<RegionCoprocessorEnvironment> c,  Store store,  List<? extends StoreFile> candidates,  CompactionLifeCycleTracker tracker) throws IOException {
    int count=candidates.size();
    if (count >= 2) {
      for (int i=0; i < count - 2; i++) {
        candidates.remove(0);
      }
      c.bypass();
    }
  }
}
