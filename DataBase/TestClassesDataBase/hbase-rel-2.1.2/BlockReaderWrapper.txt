/** 
 * A wrapper around a block reader which only caches the results of the last operation. Not thread-safe.
 */
private static class BlockReaderWrapper implements HFile.CachingBlockReader {
  private HFileBlock.FSReader realReader;
  private long prevOffset;
  private long prevOnDiskSize;
  private boolean prevPread;
  private HFileBlock prevBlock;
  public int hitCount=0;
  public int missCount=0;
  public BlockReaderWrapper(  HFileBlock.FSReader realReader){
    this.realReader=realReader;
  }
  @Override public void returnBlock(  HFileBlock block){
  }
  @Override public HFileBlock readBlock(  long offset,  long onDiskSize,  boolean cacheBlock,  boolean pread,  boolean isCompaction,  boolean updateCacheMetrics,  BlockType expectedBlockType,  DataBlockEncoding expectedDataBlockEncoding) throws IOException {
    if (offset == prevOffset && onDiskSize == prevOnDiskSize && pread == prevPread) {
      hitCount+=1;
      return prevBlock;
    }
    missCount+=1;
    prevBlock=realReader.readBlockData(offset,onDiskSize,pread,false);
    prevOffset=offset;
    prevOnDiskSize=onDiskSize;
    prevPread=pread;
    return prevBlock;
  }
}
