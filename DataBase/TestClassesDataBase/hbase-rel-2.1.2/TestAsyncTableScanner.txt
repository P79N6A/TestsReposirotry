@RunWith(Parameterized.class) @Category({LargeTests.class,ClientTests.class}) public class TestAsyncTableScanner extends AbstractTestAsyncTableScan {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestAsyncTableScanner.class);
  @Parameter(0) public String tableType;
  @Parameter(1) public Supplier<AsyncTable<?>> getTable;
  @Parameter(2) public String scanType;
  @Parameter(3) public Supplier<Scan> scanCreator;
  @Parameters(name="{index}: table={0}, scan={2}") public static List<Object[]> params(){
    return getTableAndScanCreatorParams();
  }
  @Override protected Scan createScan(){
    return scanCreator.get();
  }
  @Override protected List<Result> doScan(  Scan scan) throws Exception {
    AsyncTable<?> table=ASYNC_CONN.getTable(TABLE_NAME,ForkJoinPool.commonPool());
    List<Result> results=new ArrayList<>();
    try (ResultScanner scanner=table.getScanner(scan)){
      for (Result result; (result=scanner.next()) != null; ) {
        results.add(result);
      }
    }
     if (scan.getBatch() > 0) {
      results=convertFromBatchResult(results);
    }
    return results;
  }
}
