/** 
 * Subclass of  {@link TableInputFormat} to use in {@link #testNonSuccessiveSplitsAreNotMerged}. This class overrides  {@link TableInputFormatBase#includeRegionInSplit}to exclude specific splits.
 */
private static class TableInputFormatForMergeTesting extends TableInputFormat {
  private byte[] prefixStartKey=Bytes.toBytes("b");
  private byte[] prefixEndKey=Bytes.toBytes("c");
  private RegionSizeCalculator sizeCalculator;
  /** 
 * Exclude regions which contain rows starting with "b".
 */
  @Override protected boolean includeRegionInSplit(  final byte[] startKey,  final byte[] endKey){
    if (Bytes.compareTo(startKey,prefixEndKey) < 0 && (Bytes.compareTo(prefixStartKey,endKey) < 0 || Bytes.equals(endKey,HConstants.EMPTY_END_ROW))) {
      return false;
    }
 else {
      return true;
    }
  }
  @Override protected void initializeTable(  Connection connection,  TableName tableName) throws IOException {
    super.initializeTable(connection,tableName);
    ConnectionForMergeTesting cft=(ConnectionForMergeTesting)connection;
    sizeCalculator=cft.getRegionSizeCalculator();
  }
  @Override protected RegionSizeCalculator createRegionSizeCalculator(  RegionLocator locator,  Admin admin) throws IOException {
    return sizeCalculator;
  }
}
