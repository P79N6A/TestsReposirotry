@Category({MasterTests.class,SmallTests.class}) public class TestMasterQosFunction extends QosTestHelper {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestMasterQosFunction.class);
  private Configuration conf;
  private RSRpcServices rpcServices;
  private AnnotationReadingPriorityFunction qosFunction;
  @Before public void setUp(){
    conf=HBaseConfiguration.create();
    rpcServices=Mockito.mock(MasterRpcServices.class);
    when(rpcServices.getConfiguration()).thenReturn(conf);
    qosFunction=new MasterAnnotationReadingPriorityFunction(rpcServices,MasterRpcServices.class);
  }
  @Test public void testRegionInTransition() throws IOException {
    HBaseProtos.RegionInfo meta_ri=HRegionInfo.convert(HRegionInfo.FIRST_META_REGIONINFO);
    HBaseProtos.RegionInfo normal_ri=HRegionInfo.convert(new HRegionInfo(TableName.valueOf("test:table"),Bytes.toBytes("a"),Bytes.toBytes("b"),false));
    RegionServerStatusProtos.RegionStateTransition metaTransition=RegionServerStatusProtos.RegionStateTransition.newBuilder().addRegionInfo(meta_ri).setTransitionCode(RegionServerStatusProtos.RegionStateTransition.TransitionCode.CLOSED).build();
    RegionServerStatusProtos.RegionStateTransition normalTransition=RegionServerStatusProtos.RegionStateTransition.newBuilder().addRegionInfo(normal_ri).setTransitionCode(RegionServerStatusProtos.RegionStateTransition.TransitionCode.CLOSED).build();
    RegionServerStatusProtos.ReportRegionStateTransitionRequest metaTransitionRequest=RegionServerStatusProtos.ReportRegionStateTransitionRequest.newBuilder().setServer(ProtobufUtil.toServerName(ServerName.valueOf("locahost:60020",100))).addTransition(normalTransition).addTransition(metaTransition).build();
    RegionServerStatusProtos.ReportRegionStateTransitionRequest normalTransitionRequest=RegionServerStatusProtos.ReportRegionStateTransitionRequest.newBuilder().setServer(ProtobufUtil.toServerName(ServerName.valueOf("locahost:60020",100))).addTransition(normalTransition).build();
    final String reportFuncName="ReportRegionStateTransition";
    checkMethod(conf,reportFuncName,HConstants.SYSTEMTABLE_QOS,qosFunction,metaTransitionRequest);
    checkMethod(conf,reportFuncName,HConstants.NORMAL_QOS,qosFunction,normalTransitionRequest);
  }
  @Test public void testAnnotations(){
    checkMethod(conf,"GetLastFlushedSequenceId",HConstants.ADMIN_QOS,qosFunction);
    checkMethod(conf,"CompactRegion",HConstants.ADMIN_QOS,qosFunction);
    checkMethod(conf,"GetLastFlushedSequenceId",HConstants.ADMIN_QOS,qosFunction);
    checkMethod(conf,"GetRegionInfo",HConstants.ADMIN_QOS,qosFunction);
  }
}
