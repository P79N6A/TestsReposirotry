public static class SimpleCP implements RegionCoprocessor, RegionObserver {
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void prePut(  ObserverContext<RegionCoprocessorEnvironment> e,  Put m,  WALEdit edit,  Durability durability) throws IOException {
    byte[] attribute=m.getAttribute(NON_VISIBILITY);
    byte[] cf=null;
    List<Cell> updatedCells=new ArrayList<>();
    if (attribute != null) {
      for (      List<? extends Cell> edits : m.getFamilyCellMap().values()) {
        for (        Cell cell : edits) {
          KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
          if (cf == null) {
            cf=CellUtil.cloneFamily(kv);
          }
          Tag tag=new ArrayBackedTag((byte)NON_VIS_TAG_TYPE,attribute);
          List<Tag> tagList=new ArrayList<>(PrivateCellUtil.getTags(cell).size() + 1);
          tagList.add(tag);
          tagList.addAll(PrivateCellUtil.getTags(cell));
          Cell newcell=PrivateCellUtil.createCell(kv,tagList);
          ((List<Cell>)updatedCells).add(newcell);
        }
      }
      m.getFamilyCellMap().remove(cf);
      m.getFamilyCellMap().put(cf,updatedCells);
    }
  }
}
