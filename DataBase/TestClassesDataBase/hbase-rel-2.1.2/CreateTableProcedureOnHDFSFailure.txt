public static class CreateTableProcedureOnHDFSFailure extends CreateTableProcedure {
  private boolean failOnce=false;
  public CreateTableProcedureOnHDFSFailure(){
    super();
  }
  public CreateTableProcedureOnHDFSFailure(  final MasterProcedureEnv env,  final TableDescriptor tableDescriptor,  final RegionInfo[] newRegions) throws HBaseIOException {
    super(env,tableDescriptor,newRegions);
  }
  @Override protected Flow executeFromState(  MasterProcedureEnv env,  MasterProcedureProtos.CreateTableState state) throws InterruptedException {
    if (!failOnce && state == MasterProcedureProtos.CreateTableState.CREATE_TABLE_WRITE_FS_LAYOUT) {
      try {
        RegionInfo regionInfo=getFirstRegionInfo();
        Configuration conf=env.getMasterConfiguration();
        MasterFileSystem mfs=env.getMasterServices().getMasterFileSystem();
        Path tempdir=mfs.getTempDir();
        Path tableDir=FSUtils.getTableDir(tempdir,regionInfo.getTable());
        Path regionDir=FSUtils.getRegionDir(tableDir,regionInfo);
        FileSystem fs=FileSystem.get(conf);
        fs.mkdirs(regionDir);
        failOnce=true;
        return Flow.HAS_MORE_STATE;
      }
 catch (      IOException e) {
        fail("failed to create a region directory: " + e);
      }
    }
    return super.executeFromState(env,state);
  }
}
