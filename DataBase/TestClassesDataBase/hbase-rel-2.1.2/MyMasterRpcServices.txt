static class MyMasterRpcServices extends MasterRpcServices {
  static AtomicBoolean enabled=new AtomicBoolean(false);
  private HMaster myMaster;
  public MyMasterRpcServices(  HMaster master) throws IOException {
    super(master);
    myMaster=master;
  }
  @Override public ReportRegionStateTransitionResponse reportRegionStateTransition(  RpcController c,  ReportRegionStateTransitionRequest req) throws ServiceException {
    ReportRegionStateTransitionResponse resp=super.reportRegionStateTransition(c,req);
    if (enabled.get() && req.getTransition(0).getTransitionCode().equals(TransitionCode.READY_TO_SPLIT) && !resp.hasErrorMessage()) {
      RegionStates regionStates=myMaster.getAssignmentManager().getRegionStates();
      for (      RegionStates.RegionStateNode regionState : regionStates.getRegionsInTransition()) {
      }
    }
    return resp;
  }
}
