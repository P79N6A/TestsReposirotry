@Category({MiscTests.class,MediumTests.class}) public class TestLocalHBaseCluster {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestLocalHBaseCluster.class);
  private static final HBaseTestingUtility TEST_UTIL=new HBaseTestingUtility();
  /** 
 * Check that we can start a local HBase cluster specifying a custom master and regionserver class and then cast back to those classes; also that the cluster will launch and terminate cleanly. See HBASE-6011. Uses the HBaseTestingUtility facilities for creating a LocalHBaseCluster with custom master and regionserver classes.
 */
  @Test public void testLocalHBaseCluster() throws Exception {
    TEST_UTIL.startMiniCluster(1,1,null,MyHMaster.class,MyHRegionServer.class);
    try {
      int val=((MyHMaster)TEST_UTIL.getHBaseCluster().getMaster(0)).echo(42);
      assertEquals(42,val);
    }
 catch (    ClassCastException e) {
      fail("Could not cast master to our class");
    }
    try {
      int val=((MyHRegionServer)TEST_UTIL.getHBaseCluster().getRegionServer(0)).echo(42);
      assertEquals(42,val);
    }
 catch (    ClassCastException e) {
      fail("Could not cast regionserver to our class");
    }
    TEST_UTIL.shutdownMiniCluster();
  }
  /** 
 * A private master class similar to that used by HMasterCommandLine when running in local mode.
 */
public static class MyHMaster extends HMaster {
    public MyHMaster(    Configuration conf) throws IOException, KeeperException, InterruptedException {
      super(conf);
    }
    public int echo(    int val){
      return val;
    }
  }
  /** 
 * A private regionserver class with a dummy method for testing casts
 */
public static class MyHRegionServer extends MiniHBaseCluster.MiniHBaseClusterRegionServer {
    public MyHRegionServer(    Configuration conf) throws IOException, InterruptedException {
      super(conf);
    }
    public int echo(    int val){
      return val;
    }
  }
}
