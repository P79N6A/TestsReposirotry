/** 
 * Faulty file system that will fail if you write past its fault position the FIRST TIME only; thereafter it will succeed.  Used by  {@link TestHRegion} too.
 */
static class FaultyFileSystem extends FilterFileSystem {
  List<SoftReference<FaultyOutputStream>> outStreams=new ArrayList<>();
  private long faultPos=200;
  AtomicBoolean fault=new AtomicBoolean(true);
  public FaultyFileSystem(){
    super(new LocalFileSystem());
    System.err.println("Creating faulty!");
  }
  @Override public FSDataOutputStream create(  Path p) throws IOException {
    return new FaultyOutputStream(super.create(p),faultPos,fault);
  }
  @Override public FSDataOutputStream create(  Path f,  FsPermission permission,  boolean overwrite,  int bufferSize,  short replication,  long blockSize,  Progressable progress) throws IOException {
    return new FaultyOutputStream(super.create(f,permission,overwrite,bufferSize,replication,blockSize,progress),faultPos,fault);
  }
  @Override public FSDataOutputStream createNonRecursive(  Path f,  boolean overwrite,  int bufferSize,  short replication,  long blockSize,  Progressable progress) throws IOException {
    return create(f,overwrite,bufferSize,replication,blockSize,progress);
  }
}
