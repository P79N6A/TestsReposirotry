private static class ScannerThread extends Thread {
  private final Table table;
  private final BlockCache cache;
  public ScannerThread(  Table table,  BlockCache cache){
    this.table=table;
    this.cache=cache;
  }
  @Override public void run(){
    Scan s=new Scan().withStartRow(ROW4).withStopRow(ROW5).setCaching(1);
    try {
      while (!doScan.get()) {
        try {
          Thread.sleep(1);
        }
 catch (        InterruptedException e) {
        }
      }
      List<BlockCacheKey> cacheList=new ArrayList<>();
      Iterator<CachedBlock> iterator=cache.iterator();
      while (iterator.hasNext()) {
        CachedBlock next=iterator.next();
        BlockCacheKey cacheKey=new BlockCacheKey(next.getFilename(),next.getOffset());
        cacheList.add(cacheKey);
        cache.evictBlock(cacheKey);
      }
      try (ResultScanner scanner=table.getScanner(s)){
        while (scanner.next() != null) {
        }
      }
       compactReadLatch.countDown();
    }
 catch (    IOException e) {
    }
  }
}
