private class AlterFamilyVersionsAction extends ColumnAction {
  @Override void perform() throws IOException {
    TableDescriptor selected=selectTable(disabledTables);
    if (selected == null) {
      return;
    }
    ColumnFamilyDescriptor columnDesc=selectFamily(selected);
    if (columnDesc == null) {
      return;
    }
    Admin admin=connection.getAdmin();
    int versions=RandomUtils.nextInt(0,10) + 3;
    try {
      TableName tableName=selected.getTableName();
      LOG.info("Altering versions of column family: " + columnDesc + " to: "+ versions+ " in table: "+ tableName);
      ColumnFamilyDescriptor cfd=ColumnFamilyDescriptorBuilder.newBuilder(columnDesc).setMinVersions(versions).setMaxVersions(versions).build();
      TableDescriptor td=TableDescriptorBuilder.newBuilder(selected).modifyColumnFamily(cfd).build();
      admin.modifyTable(td);
      TableDescriptor freshTableDesc=admin.getDescriptor(tableName);
      ColumnFamilyDescriptor freshColumnDesc=freshTableDesc.getColumnFamily(columnDesc.getName());
      Assert.assertEquals("Column family: " + columnDesc + " was not altered",freshColumnDesc.getMaxVersions(),versions);
      Assert.assertEquals("Column family: " + freshColumnDesc + " was not altered",freshColumnDesc.getMinVersions(),versions);
      Assert.assertTrue("After alter versions of column family, Table: " + tableName + " is not disabled",admin.isTableDisabled(tableName));
      disabledTables.put(tableName,freshTableDesc);
      LOG.info("Altered versions of column family: " + columnDesc + " to: "+ versions+ " in table: "+ tableName);
    }
 catch (    Exception e) {
      LOG.warn("Caught exception in action: " + this.getClass());
      throw e;
    }
 finally {
      admin.close();
    }
  }
}
