@Category({VerySlowRegionServerTests.class,LargeTests.class}) public class TestAsyncLogRolling extends AbstractTestLogRolling {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestAsyncLogRolling.class);
  @BeforeClass public static void setUpBeforeClass() throws Exception {
    Configuration conf=TestAsyncLogRolling.TEST_UTIL.getConfiguration();
    conf.setInt(FanOutOneBlockAsyncDFSOutputHelper.ASYNC_DFS_OUTPUT_CREATE_MAX_RETRIES,100);
    conf.set(WALFactory.WAL_PROVIDER,"asyncfs");
    AbstractTestLogRolling.setUpBeforeClass();
  }
  @Test public void testLogRollOnDatanodeDeath() throws IOException, InterruptedException {
    dfsCluster.startDataNodes(TEST_UTIL.getConfiguration(),3,true,null,null);
    tableName=getName();
    Table table=createTestTable(tableName);
    TEST_UTIL.waitUntilAllRegionsAssigned(table.getName());
    doPut(table,1);
    server=TEST_UTIL.getRSForFirstRegionInTable(table.getName());
    RegionInfo hri=server.getRegions(table.getName()).get(0).getRegionInfo();
    AsyncFSWAL wal=(AsyncFSWAL)server.getWAL(hri);
    int numRolledLogFiles=AsyncFSWALProvider.getNumRolledLogFiles(wal);
    DatanodeInfo[] dnInfos=wal.getPipeline();
    DataNodeProperties dnProp=TEST_UTIL.getDFSCluster().stopDataNode(dnInfos[0].getName());
    TEST_UTIL.getDFSCluster().restartDataNode(dnProp);
    doPut(table,2);
    assertEquals(numRolledLogFiles + 1,AsyncFSWALProvider.getNumRolledLogFiles(wal));
  }
}
