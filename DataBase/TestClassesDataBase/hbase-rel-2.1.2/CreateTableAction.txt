private class CreateTableAction extends TableAction {
  @Override void perform() throws IOException {
    Admin admin=connection.getAdmin();
    try {
      TableDescriptor td=createTableDesc();
      TableName tableName=td.getTableName();
      if (admin.tableExists(tableName)) {
        return;
      }
      String numRegionKey=String.format(NUM_REGIONS_KEY,this.getClass().getSimpleName());
      numRegions=getConf().getInt(numRegionKey,DEFAULT_NUM_REGIONS);
      byte[] startKey=Bytes.toBytes("row-0000000000");
      byte[] endKey=Bytes.toBytes("row-" + Integer.MAX_VALUE);
      LOG.info("Creating table:" + td);
      admin.createTable(td,startKey,endKey,numRegions);
      Assert.assertTrue("Table: " + td + " was not created",admin.tableExists(tableName));
      TableDescriptor freshTableDesc=admin.getDescriptor(tableName);
      Assert.assertTrue("After create, Table: " + tableName + " in not enabled",admin.isTableEnabled(tableName));
      enabledTables.put(tableName,freshTableDesc);
      LOG.info("Created table:" + freshTableDesc);
    }
 catch (    Exception e) {
      LOG.warn("Caught exception in action: " + this.getClass());
      throw e;
    }
 finally {
      admin.close();
    }
  }
  private TableDescriptor createTableDesc(){
    String tableName=String.format("ittable-%010d",RandomUtils.nextInt());
    String familyName="cf-" + Math.abs(RandomUtils.nextInt());
    return TableDescriptorBuilder.newBuilder(TableName.valueOf(tableName)).setColumnFamily(ColumnFamilyDescriptorBuilder.of(familyName)).build();
  }
}
