static class MiniChaosMonkey extends Thread {
  AtomicBoolean running=new AtomicBoolean(true);
  Random random=new Random();
  AtomicReference<Exception> exception=new AtomicReference<>(null);
  Cluster cluster;
  public MiniChaosMonkey(  Cluster cluster){
    this.cluster=cluster;
  }
  @Override public void run(){
    while (running.get()) {
      if (random.nextBoolean()) {
        try {
          cluster.startServer();
        }
 catch (        Exception e) {
          LOG.warn(e.toString(),e);
          exception.compareAndSet(null,e);
        }
      }
 else {
        try {
          cluster.stopRandomServer();
        }
 catch (        Exception e) {
          LOG.warn(e.toString(),e);
          exception.compareAndSet(null,e);
        }
      }
      Threads.sleep(100);
    }
  }
  void stopRunning(){
    running.set(false);
  }
  void rethrowException() throws Exception {
    if (exception.get() != null) {
      throw exception.get();
    }
  }
}
