public class CloneSnapshotFromClientNormalTestBase extends CloneSnapshotFromClientTestBase {
  @Test public void testCloneSnapshot() throws IOException, InterruptedException {
    TableName clonedTableName=TableName.valueOf(getValidMethodName() + "-" + System.currentTimeMillis());
    testCloneSnapshot(clonedTableName,snapshotName0,snapshot0Rows);
    testCloneSnapshot(clonedTableName,snapshotName1,snapshot1Rows);
    testCloneSnapshot(clonedTableName,emptySnapshot,0);
  }
  private void testCloneSnapshot(  TableName tableName,  byte[] snapshotName,  int snapshotRows) throws IOException, InterruptedException {
    admin.cloneSnapshot(snapshotName,tableName);
    verifyRowCount(TEST_UTIL,tableName,snapshotRows);
    verifyReplicasCameOnline(tableName);
    TEST_UTIL.deleteTable(tableName);
  }
  private void verifyReplicasCameOnline(  TableName tableName) throws IOException {
    SnapshotTestingUtils.verifyReplicasCameOnline(tableName,admin,getNumReplicas());
  }
  @Test public void testCloneSnapshotCrossNamespace() throws IOException, InterruptedException {
    String nsName=getValidMethodName() + "_ns_" + System.currentTimeMillis();
    admin.createNamespace(NamespaceDescriptor.create(nsName).build());
    final TableName clonedTableName=TableName.valueOf(nsName,getValidMethodName() + "-" + System.currentTimeMillis());
    testCloneSnapshot(clonedTableName,snapshotName0,snapshot0Rows);
    testCloneSnapshot(clonedTableName,snapshotName1,snapshot1Rows);
    testCloneSnapshot(clonedTableName,emptySnapshot,0);
  }
}
