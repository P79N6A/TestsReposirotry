@Category({RegionServerTests.class,MediumTests.class}) public class TestAsyncWALReplay extends AbstractTestWALReplay {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestAsyncWALReplay.class);
  private static EventLoopGroup GROUP;
  private static Class<? extends Channel> CHANNEL_CLASS;
  @BeforeClass public static void setUpBeforeClass() throws Exception {
    GROUP=new NioEventLoopGroup(1,Threads.newDaemonThreadFactory("TestAsyncWALReplay"));
    CHANNEL_CLASS=NioSocketChannel.class;
    Configuration conf=AbstractTestWALReplay.TEST_UTIL.getConfiguration();
    conf.set(WALFactory.WAL_PROVIDER,"asyncfs");
    AbstractTestWALReplay.setUpBeforeClass();
  }
  @AfterClass public static void tearDownAfterClass() throws Exception {
    AbstractTestWALReplay.tearDownAfterClass();
    GROUP.shutdownGracefully();
  }
  @Override protected WAL createWAL(  Configuration c,  Path hbaseRootDir,  String logName) throws IOException {
    return new AsyncFSWAL(FileSystem.get(c),hbaseRootDir,logName,HConstants.HREGION_OLDLOGDIR_NAME,c,null,true,null,null,GROUP,CHANNEL_CLASS);
  }
}
