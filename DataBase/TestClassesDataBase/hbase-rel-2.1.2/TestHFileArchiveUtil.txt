/** 
 * Test that the utility works as expected
 */
@Category({MiscTests.class,SmallTests.class}) public class TestHFileArchiveUtil {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestHFileArchiveUtil.class);
  private Path rootDir=new Path("./");
  @Rule public TestName name=new TestName();
  @Test public void testGetTableArchivePath(){
    assertNotNull(HFileArchiveUtil.getTableArchivePath(rootDir,TableName.valueOf(name.getMethodName())));
  }
  @Test public void testGetArchivePath() throws Exception {
    Configuration conf=new Configuration();
    FSUtils.setRootDir(conf,new Path("root"));
    assertNotNull(HFileArchiveUtil.getArchivePath(conf));
  }
  @Test public void testRegionArchiveDir(){
    Path regionDir=new Path("region");
    assertNotNull(HFileArchiveUtil.getRegionArchiveDir(rootDir,TableName.valueOf(name.getMethodName()),regionDir));
  }
  @Test public void testGetStoreArchivePath() throws IOException {
    byte[] family=Bytes.toBytes("Family");
    Path tabledir=FSUtils.getTableDir(rootDir,TableName.valueOf(name.getMethodName()));
    HRegionInfo region=new HRegionInfo(TableName.valueOf(name.getMethodName()));
    Configuration conf=new Configuration();
    FSUtils.setRootDir(conf,new Path("root"));
    assertNotNull(HFileArchiveUtil.getStoreArchivePath(conf,region,tabledir,family));
  }
}
