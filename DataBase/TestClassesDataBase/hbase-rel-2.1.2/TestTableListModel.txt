@Category({RestTests.class,SmallTests.class}) public class TestTableListModel extends TestModelBase<TableListModel> {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestTableListModel.class);
  private static final String TABLE1="table1";
  private static final String TABLE2="table2";
  private static final String TABLE3="table3";
  public TestTableListModel() throws Exception {
    super(TableListModel.class);
    AS_XML="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TableList><table " + "name=\"table1\"/><table name=\"table2\"/><table name=\"table3\"/></TableList>";
    AS_PB="CgZ0YWJsZTEKBnRhYmxlMgoGdGFibGUz";
    AS_JSON="{\"table\":[{\"name\":\"table1\"},{\"name\":\"table2\"},{\"name\":\"table3\"}]}";
  }
  @Override protected TableListModel buildTestModel(){
    TableListModel model=new TableListModel();
    model.add(new TableModel(TABLE1));
    model.add(new TableModel(TABLE2));
    model.add(new TableModel(TABLE3));
    return model;
  }
  @Override protected void checkModel(  TableListModel model){
    Iterator<TableModel> tables=model.getTables().iterator();
    TableModel table=tables.next();
    assertEquals(TABLE1,table.getName());
    table=tables.next();
    assertEquals(TABLE2,table.getName());
    table=tables.next();
    assertEquals(TABLE3,table.getName());
    assertFalse(tables.hasNext());
  }
}
