/** 
 * Mapper to pass over the table. For every row there could be multiple chains that landed on this row. So emit a linkKey and value for each.
 */
public static class LinkedListCheckingMapper extends TableMapper<LinkKey,LinkChain> {
  @Override protected void map(  ImmutableBytesWritable key,  Result value,  Context context) throws IOException, InterruptedException {
    long longRk=Bytes.toLong(value.getRow());
    for (    Map.Entry<byte[],byte[]> entry : value.getFamilyMap(CHAIN_FAM).entrySet()) {
      long chainId=Bytes.toLong(entry.getKey());
      long next=Bytes.toLong(entry.getValue());
      Cell c=value.getColumnCells(SORT_FAM,entry.getKey()).get(0);
      long order=Bytes.toLong(CellUtil.cloneValue(c));
      context.write(new LinkKey(chainId,order),new LinkChain(longRk,next));
    }
  }
}
