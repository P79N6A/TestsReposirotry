/** 
 * This coprocessor is used to delay the flush.
 */
public static class DelayFlushCoprocessor implements RegionCoprocessor, RegionObserver {
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void preFlush(  ObserverContext<RegionCoprocessorEnvironment> e,  FlushLifeCycleTracker tracker) throws IOException {
    if (delayFlush) {
      try {
        if (Bytes.compareTo(e.getEnvironment().getRegionInfo().getStartKey(),HConstants.EMPTY_START_ROW) != 0) {
          Thread.sleep(100);
        }
      }
 catch (      InterruptedException e1) {
        throw new InterruptedIOException(e1.getMessage());
      }
    }
  }
}
