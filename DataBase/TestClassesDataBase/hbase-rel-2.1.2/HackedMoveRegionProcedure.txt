/** 
 * Class just so we can mess around with RegionStateNode state at a particular point in the Procedure to try and mess it up.
 */
public static class HackedMoveRegionProcedure extends MoveRegionProcedure {
  /** 
 * Set to true after we hack this regions RSN to SPLIT
 */
  public static AtomicBoolean split=new AtomicBoolean(false);
  public HackedMoveRegionProcedure(){
    super();
  }
  public HackedMoveRegionProcedure(  MasterProcedureEnv env,  RegionPlan plan) throws HBaseIOException {
    super(env,plan,false);
  }
  @Override protected Flow executeFromState(  MasterProcedureEnv env,  MasterProcedureProtos.MoveRegionState state) throws InterruptedException {
    Flow flow=null;
switch (state) {
case MOVE_REGION_UNASSIGN:
      RegionStates.RegionStateNode rsn=env.getAssignmentManager().getRegionStates().getOrCreateRegionStateNode(getRegion());
    rsn.setState(RegionState.State.SPLIT);
  LOG.info("HACKED RSN, setting it to SPLIT: {}",rsn);
split.set(true);
default :
flow=super.executeFromState(env,state);
}
return flow;
}
}
