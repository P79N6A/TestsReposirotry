/** 
 * A simple object to serialize.
 */
private static class Pojo1 implements Comparable<Pojo1> {
  final String stringFieldAsc;
  final int intFieldAsc;
  final double doubleFieldAsc;
  final transient String str;
  public Pojo1(  Object... argv){
    stringFieldAsc=(String)argv[0];
    intFieldAsc=(Integer)argv[1];
    doubleFieldAsc=(Double)argv[2];
    str=new StringBuilder().append("{ ").append(null == stringFieldAsc ? "" : "\"").append(stringFieldAsc).append(null == stringFieldAsc ? "" : "\"").append(", ").append(intFieldAsc).append(", ").append(doubleFieldAsc).append(" }").toString();
  }
  @Override public String toString(){
    return str;
  }
  @Override public int compareTo(  Pojo1 o){
    int cmp=stringFieldAsc.compareTo(o.stringFieldAsc);
    if (cmp != 0) {
      return cmp;
    }
    cmp=Integer.valueOf(intFieldAsc).compareTo(Integer.valueOf(o.intFieldAsc));
    if (cmp != 0) {
      return cmp;
    }
    return Double.compare(doubleFieldAsc,o.doubleFieldAsc);
  }
  @Override public int hashCode(){
    final int prime=31;
    int result=1;
    long temp;
    temp=Double.doubleToLongBits(doubleFieldAsc);
    result=prime * result + (int)(temp ^ (temp >>> 32));
    result=prime * result + intFieldAsc;
    result=prime * result + ((stringFieldAsc == null) ? 0 : stringFieldAsc.hashCode());
    return result;
  }
  @Override public boolean equals(  Object obj){
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    Pojo1 other=(Pojo1)obj;
    if (Double.doubleToLongBits(doubleFieldAsc) != Double.doubleToLongBits(other.doubleFieldAsc)) {
      return false;
    }
    if (intFieldAsc != other.intFieldAsc) {
      return false;
    }
    if (stringFieldAsc == null) {
      if (other.stringFieldAsc != null) {
        return false;
      }
    }
 else     if (!stringFieldAsc.equals(other.stringFieldAsc)) {
      return false;
    }
    return true;
  }
}
