/** 
 * Test CoreCoprocessor Annotation works giving access to facility not usually available. Test RegionServerCoprocessor.
 */
@Category({CoprocessorTests.class,SmallTests.class}) public class TestCoreRegionServerCoprocessor {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestCoreRegionServerCoprocessor.class);
  @Rule public TestName name=new TestName();
  private static final HBaseTestingUtility HTU=HBaseTestingUtility.createLocalHTU();
  private RegionServerServices rss;
  private RegionServerCoprocessorHost rsch;
  @Before public void before() throws IOException {
    String methodName=this.name.getMethodName();
    this.rss=new MockRegionServerServices(HTU.getConfiguration());
    this.rsch=new RegionServerCoprocessorHost(this.rss,HTU.getConfiguration());
  }
  @After public void after() throws IOException {
    this.rsch.preStop("Stopping",null);
  }
  /** 
 * No annotation with CoreCoprocessor. This should make it so I can NOT get at instance of a RegionServerServices instance after some gymnastics.
 */
public static class NotCoreRegionServerCoprocessor implements RegionServerCoprocessor {
    public NotCoreRegionServerCoprocessor(){
    }
  }
  /** 
 * Annotate with CoreCoprocessor. This should make it so I can get at instance of a RegionServerServices instance after some gymnastics.
 */
@CoreCoprocessor public static class CoreRegionServerCoprocessor implements RegionServerCoprocessor {
    public CoreRegionServerCoprocessor(){
    }
  }
  /** 
 * Assert that when a Coprocessor is annotated with CoreCoprocessor, then it is possible to access a RegionServerServices instance. Assert the opposite too. Do it to RegionServerCoprocessors.
 * @throws IOException
 */
  @Test public void testCoreRegionCoprocessor() throws IOException {
    RegionServerCoprocessorEnvironment env=rsch.load(null,NotCoreRegionServerCoprocessor.class.getName(),0,HTU.getConfiguration());
    assertFalse(env instanceof HasRegionServerServices);
    env=rsch.load(null,CoreRegionServerCoprocessor.class.getName(),1,HTU.getConfiguration());
    assertTrue(env instanceof HasRegionServerServices);
    assertEquals(this.rss,((HasRegionServerServices)env).getRegionServerServices());
  }
}
