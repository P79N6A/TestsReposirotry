/** 
 * Test creating/using/deleting snapshots from the client <p> This is an end-to-end test for the snapshot utility TODO This is essentially a clone of TestSnapshotFromClient.  This is worth refactoring this because there will be a few more flavors of snapshots that need to run these tests.
 */
@Category({ClientTests.class,LargeTests.class}) public class TestMobFlushSnapshotFromClient extends TestFlushSnapshotFromClient {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestMobFlushSnapshotFromClient.class);
  private static final Logger LOG=LoggerFactory.getLogger(TestFlushSnapshotFromClient.class);
  @BeforeClass public static void setupCluster() throws Exception {
    setupConf(UTIL.getConfiguration());
    UTIL.startMiniCluster(3);
  }
  protected static void setupConf(  Configuration conf){
    TestFlushSnapshotFromClient.setupConf(conf);
    UTIL.getConfiguration().setInt(MobConstants.MOB_FILE_CACHE_SIZE_KEY,0);
  }
  @Override protected void createTable() throws Exception {
    MobSnapshotTestingUtils.createMobTable(UTIL,TABLE_NAME,1,TEST_FAM);
  }
  @Override protected void verifyRowCount(  final HBaseTestingUtility util,  final TableName tableName,  long expectedRows) throws IOException {
    MobSnapshotTestingUtils.verifyMobRowCount(util,tableName,expectedRows);
  }
  @Override protected int countRows(  final Table table,  final byte[]... families) throws IOException {
    return MobSnapshotTestingUtils.countMobRows(table,families);
  }
}
