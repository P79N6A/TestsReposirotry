/** 
 * Class that does the actual checking of the links. All links in the chain should be grouped and sorted when sent to this class.  Then the chain will be traversed making sure that no link is missing and that the chain is the correct length. This will throw an exception if anything is not correct.  That causes the job to fail if any data is corrupt.
 */
public static class LinkedListCheckingReducer extends Reducer<LinkKey,LinkChain,NullWritable,NullWritable> {
  @Override protected void reduce(  LinkKey key,  Iterable<LinkChain> values,  Context context) throws java.io.IOException, java.lang.InterruptedException {
    long next=-1L;
    long prev=-1L;
    long count=0L;
    for (    LinkChain lc : values) {
      if (next == -1) {
        if (lc.getRk() != 0L) {
          String msg="Chains should all start at rk 0, but read rk " + lc.getRk() + ". Chain:"+ key.chainId+ ", order:"+ key.order;
          logError(msg,context);
          throw new RuntimeException(msg);
        }
        next=lc.getNext();
      }
 else {
        if (next != lc.getRk()) {
          String msg="Missing a link in the chain. Prev rk " + prev + " was, expecting "+ next+ " but got "+ lc.getRk()+ ". Chain:"+ key.chainId+ ", order:"+ key.order;
          logError(msg,context);
          throw new RuntimeException(msg);
        }
        prev=lc.getRk();
        next=lc.getNext();
      }
      count++;
    }
    int expectedChainLen=context.getConfiguration().getInt(CHAIN_LENGTH_KEY,CHAIN_LENGTH);
    if (count != expectedChainLen) {
      String msg="Chain wasn't the correct length.  Expected " + expectedChainLen + " got "+ count+ ". Chain:"+ key.chainId+ ", order:"+ key.order;
      logError(msg,context);
      throw new RuntimeException(msg);
    }
  }
  private static void logError(  String msg,  Context context) throws IOException {
    TableName table=getTableName(context.getConfiguration());
    LOG.error("Failure in chain verification: " + msg);
    try (Connection connection=ConnectionFactory.createConnection(context.getConfiguration());Admin admin=connection.getAdmin()){
      LOG.error("cluster status:\n" + admin.getClusterStatus());
      LOG.error("table regions:\n" + Joiner.on("\n").join(admin.getTableRegions(table)));
    }
   }
}
