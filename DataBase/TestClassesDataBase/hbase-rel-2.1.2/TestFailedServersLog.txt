@RunWith(MockitoJUnitRunner.class) @Category({ClientTests.class,SmallTests.class}) public class TestFailedServersLog {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestFailedServersLog.class);
  static final int TEST_PORT=9999;
  private InetSocketAddress addr;
  @Mock private Appender mockAppender;
  @Captor private ArgumentCaptor captorLoggingEvent;
  @Before public void setup(){
    LogManager.getRootLogger().addAppender(mockAppender);
  }
  @After public void teardown(){
    LogManager.getRootLogger().removeAppender(mockAppender);
  }
  @Test public void testAddToFailedServersLogging(){
    Throwable nullException=new NullPointerException();
    FailedServers fs=new FailedServers(new Configuration());
    addr=new InetSocketAddress(TEST_PORT);
    fs.addToFailedServers(addr,nullException);
    Mockito.verify(mockAppender).doAppend((LoggingEvent)captorLoggingEvent.capture());
    LoggingEvent loggingEvent=(LoggingEvent)captorLoggingEvent.getValue();
    assertThat(loggingEvent.getLevel(),is(Level.DEBUG));
    assertEquals("Added failed server with address " + addr.toString() + " to list caused by "+ nullException.toString(),loggingEvent.getRenderedMessage());
  }
}
