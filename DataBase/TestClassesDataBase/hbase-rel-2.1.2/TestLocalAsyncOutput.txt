@Category({MiscTests.class,SmallTests.class}) public class TestLocalAsyncOutput {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestLocalAsyncOutput.class);
  private static EventLoopGroup GROUP=new NioEventLoopGroup();
  private static Class<? extends Channel> CHANNEL_CLASS=NioSocketChannel.class;
  private static final HBaseTestingUtility TEST_UTIL=new HBaseTestingUtility();
  @AfterClass public static void tearDownAfterClass() throws IOException {
    TEST_UTIL.cleanupTestDir();
    GROUP.shutdownGracefully();
  }
  @Test public void test() throws IOException, InterruptedException, ExecutionException, FSUtils.StreamLacksCapabilityException {
    Path f=new Path(TEST_UTIL.getDataTestDir(),"test");
    FileSystem fs=FileSystem.getLocal(TEST_UTIL.getConfiguration());
    AsyncFSOutput out=AsyncFSOutputHelper.createOutput(fs,f,false,true,fs.getDefaultReplication(f),fs.getDefaultBlockSize(f),GROUP,CHANNEL_CLASS);
    TestFanOutOneBlockAsyncDFSOutput.writeAndVerify(fs,f,out);
  }
}
