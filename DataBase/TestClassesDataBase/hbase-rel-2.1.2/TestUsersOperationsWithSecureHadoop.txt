@Category({SecurityTests.class,SmallTests.class}) public class TestUsersOperationsWithSecureHadoop {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestUsersOperationsWithSecureHadoop.class);
  private static final HBaseTestingUtility TEST_UTIL=new HBaseTestingUtility();
  private static final File KEYTAB_FILE=new File(TEST_UTIL.getDataTestDir("keytab").toUri().getPath());
  private static MiniKdc KDC;
  private static String HOST="localhost";
  private static String PRINCIPAL;
  @BeforeClass public static void setUp() throws Exception {
    KDC=TEST_UTIL.setupMiniKdc(KEYTAB_FILE);
    PRINCIPAL="hbase/" + HOST;
    KDC.createPrincipal(KEYTAB_FILE,PRINCIPAL);
    HBaseKerberosUtils.setPrincipalForTesting(PRINCIPAL + "@" + KDC.getRealm());
  }
  @AfterClass public static void tearDown() throws IOException {
    if (KDC != null) {
      KDC.stop();
    }
    TEST_UTIL.cleanupTestDir();
  }
  /** 
 * test login with security enabled configuration To run this test, we must specify the following system properties: <p> <b> hbase.regionserver.kerberos.principal </b> <p> <b> hbase.regionserver.keytab.file </b>
 * @throws IOException
 */
  @Test public void testUserLoginInSecureHadoop() throws Exception {
    UserGroupInformation defaultLogin=UserGroupInformation.getLoginUser();
    Configuration conf=getConfigurationWoPrincipal();
    User.login(conf,HBaseKerberosUtils.KRB_KEYTAB_FILE,HBaseKerberosUtils.KRB_PRINCIPAL,"localhost");
    UserGroupInformation failLogin=UserGroupInformation.getLoginUser();
    assertTrue("ugi should be the same in case fail login",defaultLogin.equals(failLogin));
    String nnKeyTab=getKeytabFileForTesting();
    String dnPrincipal=getPrincipalForTesting();
    assertNotNull("KerberosKeytab was not specified",nnKeyTab);
    assertNotNull("KerberosPrincipal was not specified",dnPrincipal);
    conf=getSecuredConfiguration();
    UserGroupInformation.setConfiguration(conf);
    User.login(conf,HBaseKerberosUtils.KRB_KEYTAB_FILE,HBaseKerberosUtils.KRB_PRINCIPAL,"localhost");
    UserGroupInformation successLogin=UserGroupInformation.getLoginUser();
    assertFalse("ugi should be different in in case success login",defaultLogin.equals(successLogin));
  }
}
