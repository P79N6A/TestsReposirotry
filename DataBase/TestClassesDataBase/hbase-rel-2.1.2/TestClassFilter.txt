public static class TestClassFilter implements ClassFilter {
  private Class<?> categoryAnnotation=null;
  public TestClassFilter(  Class<?> categoryAnnotation){
    this.categoryAnnotation=categoryAnnotation;
  }
  public TestClassFilter(){
    this(null);
  }
  @Override public boolean isCandidateClass(  Class<?> c){
    return isTestClass(c) && isCategorizedClass(c);
  }
  private boolean isTestClass(  Class<?> c){
    if (Modifier.isAbstract(c.getModifiers())) {
      return false;
    }
    if (c.getAnnotation(Suite.SuiteClasses.class) != null) {
      return true;
    }
    for (    Method met : c.getMethods()) {
      if (met.getAnnotation(Test.class) != null) {
        return true;
      }
    }
    return false;
  }
  private boolean isCategorizedClass(  Class<?> c){
    if (this.categoryAnnotation == null) {
      return true;
    }
    for (    Class<?> cc : getCategoryAnnotations(c)) {
      if (cc.equals(this.categoryAnnotation)) {
        return true;
      }
    }
    return false;
  }
}
