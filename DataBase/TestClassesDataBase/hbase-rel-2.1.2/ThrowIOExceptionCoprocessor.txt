public static class ThrowIOExceptionCoprocessor implements RegionCoprocessor, RegionObserver {
  public ThrowIOExceptionCoprocessor(){
  }
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void preGetOp(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Get get,  final List<Cell> results) throws IOException {
    throw new IOException("Call failed and retry");
  }
  @Override public void prePut(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Put put,  final WALEdit edit,  final Durability durability) throws IOException {
    throw new IOException("Call failed and retry");
  }
  @Override public void preDelete(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Delete delete,  final WALEdit edit,  final Durability durability) throws IOException {
    throw new IOException("Call failed and retry");
  }
  @Override public Result preIncrement(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Increment increment) throws IOException {
    throw new IOException("Call failed and retry");
  }
  @Override public Result preAppend(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Append append) throws IOException {
    throw new IOException("Call failed and retry");
  }
}
