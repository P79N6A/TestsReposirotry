public static class WaitingForScanObserver implements RegionCoprocessor, RegionObserver {
  private final CountDownLatch latch=new CountDownLatch(1);
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void postBatchMutate(  final ObserverContext<RegionCoprocessorEnvironment> c,  final MiniBatchOperationInProgress<Mutation> miniBatchOp) throws IOException {
    try {
      latch.await();
    }
 catch (    InterruptedException ex) {
      throw new IOException(ex);
    }
  }
  @Override public RegionScanner postScannerOpen(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Scan scan,  final RegionScanner s) throws IOException {
    latch.countDown();
    return s;
  }
}
