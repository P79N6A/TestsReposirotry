public static class CountingChore extends ScheduledChore {
  private int countOfChoreCalls;
  private boolean outputOnTicks=false;
  public CountingChore(  String name,  int period){
    this(name,new SampleStopper(),period);
  }
  public CountingChore(  String name,  Stoppable stopper,  int period){
    this(name,stopper,period,false);
  }
  public CountingChore(  String name,  Stoppable stopper,  int period,  final boolean outputOnTicks){
    super(name,stopper,period);
    this.countOfChoreCalls=0;
    this.outputOnTicks=outputOnTicks;
  }
  @Override protected boolean initialChore(){
    countOfChoreCalls++;
    if (outputOnTicks) {
      outputTickCount();
    }
    return true;
  }
  @Override protected void chore(){
    countOfChoreCalls++;
    if (outputOnTicks) {
      outputTickCount();
    }
  }
  private void outputTickCount(){
    log.info("Chore: " + getName() + ". Count of chore calls: "+ countOfChoreCalls);
  }
  public int getCountOfChoreCalls(){
    return countOfChoreCalls;
  }
  public boolean isOutputtingOnTicks(){
    return outputOnTicks;
  }
  public void setOutputOnTicks(  boolean o){
    outputOnTicks=o;
  }
}
