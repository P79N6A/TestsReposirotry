public static class TestSMProcedure extends StateMachineProcedure<TestProcEnv,TestSMProcedureState> {
  @Override protected Flow executeFromState(  TestProcEnv env,  TestSMProcedureState state){
    LOG.info("EXEC " + state + " "+ this);
    env.execCount.incrementAndGet();
switch (state) {
case STEP_1:
      if (!env.loop) {
        setNextState(TestSMProcedureState.STEP_2);
      }
    break;
case STEP_2:
  addChildProcedure(new SimpleChildProcedure());
return Flow.NO_MORE_STATE;
}
return Flow.HAS_MORE_STATE;
}
@Override protected boolean isRollbackSupported(TestSMProcedureState state){
return true;
}
@Override protected void rollbackState(TestProcEnv env,TestSMProcedureState state){
LOG.info("ROLLBACK " + state + " "+ this);
env.rollbackCount.incrementAndGet();
}
@Override protected TestSMProcedureState getState(int stateId){
return TestSMProcedureState.values()[stateId];
}
@Override protected int getStateId(TestSMProcedureState state){
return state.ordinal();
}
@Override protected TestSMProcedureState getInitialState(){
return TestSMProcedureState.STEP_1;
}
}
