/** 
 * Test to verify that the cloned table is independent of the table from which it was cloned
 */
@Category(LargeTests.class) public class TestMobSnapshotCloneIndependence extends TestSnapshotCloneIndependence {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestMobSnapshotCloneIndependence.class);
  /** 
 * Setup the config for the cluster and start it
 * @throws Exception on failure
 */
  @BeforeClass public static void setupCluster() throws Exception {
    setupConf(UTIL.getConfiguration());
    UTIL.startMiniCluster(NUM_RS);
  }
  protected static void setupConf(  Configuration conf){
    TestSnapshotCloneIndependence.setupConf(conf);
    conf.setInt(MobConstants.MOB_FILE_CACHE_SIZE_KEY,0);
  }
  @Override protected Table createTable(  final TableName table,  byte[] family) throws Exception {
    return MobSnapshotTestingUtils.createMobTable(UTIL,table,family);
  }
  @Override public void loadData(  final Table table,  byte[]... families) throws Exception {
    SnapshotTestingUtils.loadData(UTIL,table.getName(),1000,families);
  }
  @Override protected int countRows(  final Table table,  final byte[]... families) throws Exception {
    return MobSnapshotTestingUtils.countMobRows(table,families);
  }
}
