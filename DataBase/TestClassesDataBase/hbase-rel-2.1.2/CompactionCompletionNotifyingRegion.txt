public static class CompactionCompletionNotifyingRegion extends HRegion {
  private static volatile CountDownLatch compactionStateChangeLatch=null;
  @SuppressWarnings("deprecation") public CompactionCompletionNotifyingRegion(  Path tableDir,  WAL log,  FileSystem fs,  Configuration confParam,  RegionInfo info,  TableDescriptor htd,  RegionServerServices rsServices){
    super(tableDir,log,fs,confParam,info,htd,rsServices);
  }
  public CountDownLatch getCompactionStateChangeLatch(){
    if (compactionStateChangeLatch == null)     compactionStateChangeLatch=new CountDownLatch(1);
    return compactionStateChangeLatch;
  }
  @Override public boolean compact(  CompactionContext compaction,  HStore store,  ThroughputController throughputController) throws IOException {
    boolean ret=super.compact(compaction,store,throughputController);
    if (ret)     compactionStateChangeLatch.countDown();
    return ret;
  }
  @Override public boolean compact(  CompactionContext compaction,  HStore store,  ThroughputController throughputController,  User user) throws IOException {
    boolean ret=super.compact(compaction,store,throughputController,user);
    if (ret)     compactionStateChangeLatch.countDown();
    return ret;
  }
}
