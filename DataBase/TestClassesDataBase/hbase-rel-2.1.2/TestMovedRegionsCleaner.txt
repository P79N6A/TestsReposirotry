/** 
 * Test whether background cleanup of MovedRegion entries is happening
 */
@Category({MiscTests.class,MediumTests.class}) public class TestMovedRegionsCleaner {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestMovedRegionsCleaner.class);
  private final HBaseTestingUtility UTIL=new HBaseTestingUtility();
  public static int numCalls=0;
private static class TestMockRegionServer extends MiniHBaseCluster.MiniHBaseClusterRegionServer {
    public TestMockRegionServer(    Configuration conf) throws IOException, InterruptedException {
      super(conf);
    }
    @Override protected int movedRegionCleanerPeriod(){
      return 500;
    }
    @Override protected void cleanMovedRegions(){
      numCalls++;
      super.cleanMovedRegions();
    }
  }
  @After public void after() throws Exception {
    UTIL.shutdownMiniCluster();
  }
  @Before public void before() throws Exception {
    UTIL.getConfiguration().setStrings(HConstants.REGION_SERVER_IMPL,TestMockRegionServer.class.getName());
    UTIL.startMiniCluster(1);
  }
  /** 
 * Start the cluster, wait for some time and verify that the background MovedRegion cleaner indeed gets called
 * @throws IOException
 * @throws InterruptedException
 */
  @Test public void testMovedRegionsCleaner() throws IOException, InterruptedException {
    UTIL.waitFor(2000,new Waiter.Predicate<IOException>(){
      @Override public boolean evaluate() throws IOException {
        return numCalls > 0;
      }
    }
);
  }
}
