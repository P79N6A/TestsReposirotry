/** 
 * MasterObserver that has a Timer metric for create table operation.
 */
public static class CustomMasterObserver implements MasterCoprocessor, MasterObserver {
  private Timer createTableTimer;
  private long start=Long.MIN_VALUE;
  @Override public void preCreateTable(  ObserverContext<MasterCoprocessorEnvironment> ctx,  TableDescriptor desc,  RegionInfo[] regions) throws IOException {
    this.start=System.currentTimeMillis();
  }
  @Override public void postCreateTable(  ObserverContext<MasterCoprocessorEnvironment> ctx,  TableDescriptor desc,  RegionInfo[] regions) throws IOException {
    if (this.start > 0) {
      long time=System.currentTimeMillis() - start;
      LOG.info("Create table took: " + time);
      createTableTimer.updateMillis(time);
    }
  }
  @Override public void start(  CoprocessorEnvironment env) throws IOException {
    if (env instanceof MasterCoprocessorEnvironment) {
      MetricRegistry registry=((MasterCoprocessorEnvironment)env).getMetricRegistryForMaster();
      createTableTimer=registry.timer("CreateTable");
    }
  }
  @Override public Optional<MasterObserver> getMasterObserver(){
    return Optional.of(this);
  }
}
