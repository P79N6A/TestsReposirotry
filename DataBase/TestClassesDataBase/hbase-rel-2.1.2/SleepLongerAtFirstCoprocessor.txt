/** 
 * Coprocessor that sleeps a while the first time you do a Get
 */
public static class SleepLongerAtFirstCoprocessor implements RegionCoprocessor, RegionObserver {
  public static final int SLEEP_TIME=2000;
  static final AtomicLong ct=new AtomicLong(0);
  @Override public Optional<RegionObserver> getRegionObserver(){
    return Optional.of(this);
  }
  @Override public void preGetOp(  final ObserverContext<RegionCoprocessorEnvironment> e,  final Get get,  final List<Cell> results) throws IOException {
    if (ct.incrementAndGet() <= 1) {
      Threads.sleep(SLEEP_TIME * RPC_RETRY * 2);
    }
 else {
      Threads.sleep(SLEEP_TIME);
    }
  }
}
