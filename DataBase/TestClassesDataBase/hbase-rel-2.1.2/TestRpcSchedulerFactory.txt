/** 
 * A silly test that does nothing but make sure an rpcscheduler factory makes what it says it is going to make.
 */
@Category(SmallTests.class) public class TestRpcSchedulerFactory {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestRpcSchedulerFactory.class);
  @Rule public TestName testName=new TestName();
  private Configuration conf;
  @Before public void setUp() throws Exception {
    this.conf=HBaseConfiguration.create();
  }
  @Test public void testRWQ(){
    this.conf.setDouble(RWQueueRpcExecutor.CALL_QUEUE_READ_SHARE_CONF_KEY,0.5);
    this.conf.setDouble(RpcExecutor.CALL_QUEUE_HANDLER_FACTOR_CONF_KEY,0.5);
    this.conf.setDouble(RWQueueRpcExecutor.CALL_QUEUE_SCAN_SHARE_CONF_KEY,0.5);
    RpcSchedulerFactory factory=new SimpleRpcSchedulerFactory();
    RpcScheduler rpcScheduler=factory.create(this.conf,null,null);
    assertTrue(rpcScheduler.getClass().equals(SimpleRpcScheduler.class));
  }
  @Test public void testFifo(){
    RpcSchedulerFactory factory=new FifoRpcSchedulerFactory();
    RpcScheduler rpcScheduler=factory.create(this.conf,null,null);
    assertTrue(rpcScheduler.getClass().equals(FifoRpcScheduler.class));
  }
}
