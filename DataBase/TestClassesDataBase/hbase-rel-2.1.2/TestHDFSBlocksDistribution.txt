@Category({MiscTests.class,SmallTests.class}) public class TestHDFSBlocksDistribution {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestHDFSBlocksDistribution.class);
  @Test public void testAddHostsAndBlockWeight() throws Exception {
    HDFSBlocksDistribution distribution=new HDFSBlocksDistribution();
    distribution.addHostsAndBlockWeight(null,100);
    assertEquals("Expecting no hosts weights",0,distribution.getHostAndWeights().size());
    distribution.addHostsAndBlockWeight(new String[0],100);
    assertEquals("Expecting no hosts weights",0,distribution.getHostAndWeights().size());
    distribution.addHostsAndBlockWeight(new String[]{"test"},101);
    assertEquals("Should be one host",1,distribution.getHostAndWeights().size());
    distribution.addHostsAndBlockWeight(new String[]{"test"},202);
    assertEquals("Should be one host",1,distribution.getHostAndWeights().size());
    assertEquals("test host should have weight 303",303,distribution.getHostAndWeights().get("test").getWeight());
    distribution.addHostsAndBlockWeight(new String[]{"testTwo"},222);
    assertEquals("Should be two hosts",2,distribution.getHostAndWeights().size());
    assertEquals("Total weight should be 525",525,distribution.getUniqueBlocksTotalWeight());
  }
public class MockHDFSBlocksDistribution extends HDFSBlocksDistribution {
    @Override public Map<String,HostAndWeight> getHostAndWeights(){
      HashMap<String,HostAndWeight> map=new HashMap<>();
      map.put("test",new HostAndWeight(null,100));
      return map;
    }
  }
  @Test public void testAdd() throws Exception {
    HDFSBlocksDistribution distribution=new HDFSBlocksDistribution();
    distribution.add(new MockHDFSBlocksDistribution());
    assertEquals("Expecting no hosts weights",0,distribution.getHostAndWeights().size());
    distribution.addHostsAndBlockWeight(new String[]{"test"},10);
    assertEquals("Should be one host",1,distribution.getHostAndWeights().size());
    distribution.add(new MockHDFSBlocksDistribution());
    assertEquals("Should be one host",1,distribution.getHostAndWeights().size());
    assertEquals("Total weight should be 10",10,distribution.getUniqueBlocksTotalWeight());
  }
}
