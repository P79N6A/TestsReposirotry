/** 
 * Test that we can create, load, setup our own custom codec
 */
@Category({RegionServerTests.class,SmallTests.class}) public class TestCustomWALCellCodec {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestCustomWALCellCodec.class);
public static class CustomWALCellCodec extends WALCellCodec {
    public Configuration conf;
    public CompressionContext context;
    public CustomWALCellCodec(    Configuration conf,    CompressionContext compression){
      super(conf,compression);
      this.conf=conf;
      this.context=compression;
    }
  }
  /** 
 * Test that a custom  {@link WALCellCodec} will be completely setup when it is instantiated via{@link WALCellCodec}
 * @throws Exception on failure
 */
  @Test public void testCreatePreparesCodec() throws Exception {
    Configuration conf=new Configuration(false);
    conf.setClass(WALCellCodec.WAL_CELL_CODEC_CLASS_KEY,CustomWALCellCodec.class,WALCellCodec.class);
    CustomWALCellCodec codec=(CustomWALCellCodec)WALCellCodec.create(conf,null,null);
    assertEquals("Custom codec didn't get initialized with the right configuration!",conf,codec.conf);
    assertEquals("Custom codec didn't get initialized with the right compression context!",null,codec.context);
  }
  /** 
 * Test that a custom  {@link WALCellCodec} will fail if provided an invalidcode class.
 */
  @Test(expected=RuntimeException.class) public void testCreatePreparesCodecInvalidClass() throws Exception {
    Configuration conf=new Configuration(false);
    conf.setStrings(WALCellCodec.WAL_CELL_CODEC_CLASS_KEY,"org.apache.hbase.wal.NoSuchClass");
    WALCellCodec.create(conf,null,null);
  }
}
