/** 
 * A Chore that will try to execute the initial chore a few times before succeeding. Once the initial chore is complete the chore cancels itself
 */
public static class FailInitialChore extends ScheduledChore {
  private int numberOfFailures;
  private int failureThreshold;
  /** 
 * @param failThreshold Number of times the Chore fails when trying to execute initialChorebefore succeeding.
 */
  public FailInitialChore(  String name,  int period,  int failThreshold){
    this(name,new SampleStopper(),period,failThreshold);
  }
  public FailInitialChore(  String name,  Stoppable stopper,  int period,  int failThreshold){
    super(name,stopper,period);
    numberOfFailures=0;
    failureThreshold=failThreshold;
  }
  @Override protected boolean initialChore(){
    if (numberOfFailures < failureThreshold) {
      numberOfFailures++;
      return false;
    }
 else {
      return true;
    }
  }
  @Override protected void chore(){
    assertTrue(numberOfFailures == failureThreshold);
    cancel(false);
  }
}
