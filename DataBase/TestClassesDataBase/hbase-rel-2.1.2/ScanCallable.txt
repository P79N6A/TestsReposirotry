/** 
 * Callable that will keep scanning for small amounts of data until the supplied future returns.  Returns the max time taken to scan.
 */
static class ScanCallable extends TimingCallable {
  private final Table table;
  public ScanCallable(  Future<?> f) throws IOException {
    super(f);
    this.table=util.getConnection().getTable(tableName);
  }
  @Override protected boolean doAction() throws Exception {
    ResultScanner rs=null;
    try {
      Scan s=new Scan();
      s.setBatch(2);
      s.addFamily(FAMILY);
      s.setFilter(new KeyOnlyFilter());
      s.setMaxVersions(1);
      rs=table.getScanner(s);
      Result result=rs.next();
      return result != null && result.size() > 0;
    }
  finally {
      if (rs != null) {
        rs.close();
      }
    }
  }
  @Override protected String getSpanName(){
    return "MTTR Scan Test";
  }
}
