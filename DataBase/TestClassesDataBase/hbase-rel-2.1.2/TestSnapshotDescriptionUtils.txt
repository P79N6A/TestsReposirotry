/** 
 * Test that the  {@link SnapshotDescription} helper is helping correctly.
 */
@Category({RegionServerTests.class,MediumTests.class}) public class TestSnapshotDescriptionUtils {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestSnapshotDescriptionUtils.class);
  private static final HBaseTestingUtility UTIL=new HBaseTestingUtility();
  private static FileSystem fs;
  private static Path root;
  @BeforeClass public static void setupFS() throws Exception {
    fs=UTIL.getTestFileSystem();
    root=new Path(UTIL.getDataTestDir(),"hbase");
  }
  @After public void cleanupFS() throws Exception {
    if (fs.exists(root)) {
      if (!fs.delete(root,true)) {
        throw new IOException("Failed to delete root test dir: " + root);
      }
      if (!fs.mkdirs(root)) {
        throw new IOException("Failed to create root test dir: " + root);
      }
    }
    EnvironmentEdgeManagerTestHelper.reset();
  }
  private static final Logger LOG=LoggerFactory.getLogger(TestSnapshotDescriptionUtils.class);
  @Test public void testValidateMissingTableName() throws IOException {
    Configuration conf=new Configuration(false);
    try {
      SnapshotDescriptionUtils.validate(SnapshotDescription.newBuilder().setName("fail").build(),conf);
      fail("Snapshot was considered valid without a table name");
    }
 catch (    IllegalArgumentException e) {
      LOG.debug("Correctly failed when snapshot doesn't have a tablename");
    }
  }
  /** 
 * Test that we throw an exception if there is no working snapshot directory when we attempt to 'complete' the snapshot
 * @throws Exception on failure
 */
  @Test public void testCompleteSnapshotWithNoSnapshotDirectoryFailure() throws Exception {
    Path snapshotDir=new Path(root,HConstants.SNAPSHOT_DIR_NAME);
    Path tmpDir=new Path(snapshotDir,".tmp");
    Path workingDir=new Path(tmpDir,"not_a_snapshot");
    assertFalse("Already have working snapshot dir: " + workingDir + " but shouldn't. Test file leak?",fs.exists(workingDir));
    SnapshotDescription snapshot=SnapshotDescription.newBuilder().setName("snapshot").build();
    try {
      SnapshotDescriptionUtils.completeSnapshot(snapshot,root,workingDir,fs);
      fail("Shouldn't successfully complete move of a non-existent directory.");
    }
 catch (    IOException e) {
      LOG.info("Correctly failed to move non-existant directory: " + e.getMessage());
    }
  }
}
