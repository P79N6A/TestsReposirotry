public static class CountingRpcController extends DelegatingHBaseRpcController {
  private static Multiset<Integer> GROUPED_PRIORITY=ConcurrentHashMultiset.create();
  private static AtomicInteger INT_PRIORITY=new AtomicInteger();
  private static AtomicInteger TABLE_PRIORITY=new AtomicInteger();
  public CountingRpcController(  HBaseRpcController delegate){
    super(delegate);
  }
  @Override public void setPriority(  int priority){
    int oldPriority=getPriority();
    super.setPriority(priority);
    int newPriority=getPriority();
    if (newPriority != oldPriority) {
      INT_PRIORITY.incrementAndGet();
      GROUPED_PRIORITY.add(priority);
    }
  }
  @Override public void setPriority(  TableName tn){
    super.setPriority(tn);
    if (tn != null && !tn.isSystemTable()) {
      TABLE_PRIORITY.incrementAndGet();
    }
  }
}
