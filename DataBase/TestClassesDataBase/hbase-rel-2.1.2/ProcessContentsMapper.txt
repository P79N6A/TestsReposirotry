/** 
 * Pass the given key and processed record reduce
 */
static class ProcessContentsMapper extends TableMapper<ImmutableBytesWritable,Put> {
  /** 
 * Pass the key, and reversed value to reduce
 * @param key
 * @param value
 * @param context
 * @throws IOException
 */
  @Override public void map(  ImmutableBytesWritable key,  Result value,  Context context) throws IOException, InterruptedException {
    if (value.size() != 1) {
      throw new IOException("There should only be one input column");
    }
    Map<byte[],NavigableMap<byte[],NavigableMap<Long,byte[]>>> cf=value.getMap();
    if (!cf.containsKey(INPUT_FAMILY)) {
      throw new IOException("Wrong input columns. Missing: '" + Bytes.toString(INPUT_FAMILY) + "'.");
    }
    String originalValue=Bytes.toString(value.getValue(INPUT_FAMILY,INPUT_FAMILY));
    StringBuilder newValue=new StringBuilder(originalValue);
    newValue.reverse();
    Put outval=new Put(key.get());
    outval.addColumn(OUTPUT_FAMILY,null,Bytes.toBytes(newValue.toString()));
    context.write(key,outval);
  }
}
