private class AddColumnFamilyAction extends ColumnAction {
  @Override void perform() throws IOException {
    TableDescriptor selected=selectTable(disabledTables);
    if (selected == null) {
      return;
    }
    Admin admin=connection.getAdmin();
    try {
      ColumnFamilyDescriptor cfd=createFamilyDesc();
      if (selected.hasColumnFamily(cfd.getName())) {
        LOG.info(new String(cfd.getName()) + " already exists in table " + selected.getTableName());
        return;
      }
      TableName tableName=selected.getTableName();
      LOG.info("Adding column family: " + cfd + " to table: "+ tableName);
      admin.addColumnFamily(tableName,cfd);
      TableDescriptor freshTableDesc=admin.getDescriptor(tableName);
      Assert.assertTrue("Column family: " + cfd + " was not added",freshTableDesc.hasColumnFamily(cfd.getName()));
      Assert.assertTrue("After add column family, Table: " + tableName + " is not disabled",admin.isTableDisabled(tableName));
      disabledTables.put(tableName,freshTableDesc);
      LOG.info("Added column family: " + cfd + " to table: "+ tableName);
    }
 catch (    Exception e) {
      LOG.warn("Caught exception in action: " + this.getClass());
      throw e;
    }
 finally {
      admin.close();
    }
  }
  private ColumnFamilyDescriptor createFamilyDesc(){
    String familyName=String.format("cf-%010d",RandomUtils.nextInt());
    return ColumnFamilyDescriptorBuilder.of(familyName);
  }
}
