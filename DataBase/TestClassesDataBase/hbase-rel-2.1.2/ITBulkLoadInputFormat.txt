public static class ITBulkLoadInputFormat extends InputFormat<LongWritable,LongWritable> {
  @Override public List<InputSplit> getSplits(  JobContext context) throws IOException, InterruptedException {
    int numSplits=context.getConfiguration().getInt(NUM_MAPS_KEY,NUM_MAPS);
    ArrayList<InputSplit> ret=new ArrayList<>(numSplits);
    for (int i=0; i < numSplits; ++i) {
      ret.add(new EmptySplit());
    }
    return ret;
  }
  @Override public RecordReader<LongWritable,LongWritable> createRecordReader(  InputSplit split,  TaskAttemptContext context) throws IOException, InterruptedException {
    int taskId=context.getTaskAttemptID().getTaskID().getId();
    int numMapTasks=context.getConfiguration().getInt(NUM_MAPS_KEY,NUM_MAPS);
    int numIterations=context.getConfiguration().getInt(NUM_IMPORT_ROUNDS_KEY,NUM_IMPORT_ROUNDS);
    int iteration=context.getConfiguration().getInt(ROUND_NUM_KEY,0);
    taskId=taskId + iteration * numMapTasks;
    numMapTasks=numMapTasks * numIterations;
    long chainId=Math.abs(new Random().nextLong());
    chainId=chainId - (chainId % numMapTasks) + taskId;
    LongWritable[] keys=new LongWritable[]{new LongWritable(chainId)};
    return new FixedRecordReader<>(keys,keys);
  }
}
