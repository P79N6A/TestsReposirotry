/** 
 * Test Export Snapshot Tool helpers
 */
@Category({RegionServerTests.class,SmallTests.class}) public class TestExportSnapshotHelpers {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestExportSnapshotHelpers.class);
  /** 
 * Verfy the result of getBalanceSplits() method. The result are groups of files, used as input list for the "export" mappers. All the groups should have similar amount of data. The input list is a pair of file path and length. The getBalanceSplits() function sort it by length, and assign to each group a file, going back and forth through the groups.
 */
  @Test public void testBalanceSplit() throws Exception {
    List<Pair<SnapshotFileInfo,Long>> files=new ArrayList<>(21);
    for (long i=0; i <= 20; i++) {
      SnapshotFileInfo fileInfo=SnapshotFileInfo.newBuilder().setType(SnapshotFileInfo.Type.HFILE).setHfile("file-" + i).build();
      files.add(new Pair<>(fileInfo,i));
    }
    List<List<Pair<SnapshotFileInfo,Long>>> splits=ExportSnapshot.getBalancedSplits(files,5);
    assertEquals(5,splits.size());
    String[] split0=new String[]{"file-20","file-11","file-10","file-1","file-0"};
    verifyBalanceSplit(splits.get(0),split0,42);
    String[] split1=new String[]{"file-19","file-12","file-9","file-2"};
    verifyBalanceSplit(splits.get(1),split1,42);
    String[] split2=new String[]{"file-18","file-13","file-8","file-3"};
    verifyBalanceSplit(splits.get(2),split2,42);
    String[] split3=new String[]{"file-17","file-14","file-7","file-4"};
    verifyBalanceSplit(splits.get(3),split3,42);
    String[] split4=new String[]{"file-16","file-15","file-6","file-5"};
    verifyBalanceSplit(splits.get(4),split4,42);
  }
  private void verifyBalanceSplit(  final List<Pair<SnapshotFileInfo,Long>> split,  final String[] expected,  final long expectedSize){
    assertEquals(expected.length,split.size());
    long totalSize=0;
    for (int i=0; i < expected.length; ++i) {
      Pair<SnapshotFileInfo,Long> fileInfo=split.get(i);
      assertEquals(expected[i],fileInfo.getFirst().getHfile());
      totalSize+=fileInfo.getSecond();
    }
    assertEquals(expectedSize,totalSize);
  }
}
