private static final class RenewLeaseConsumer implements AdvancedScanResultConsumer {
  private final List<Result> results=new ArrayList<>();
  private Throwable error;
  private boolean finished=false;
  private boolean suspended=false;
  @Override public synchronized void onNext(  Result[] results,  ScanController controller){
    for (    Result result : results) {
      this.results.add(result);
    }
    if (!suspended) {
      ScanResumer resumer=controller.suspend();
      new Thread(() -> {
        Threads.sleep(2 * SCANNER_LEASE_TIMEOUT_PERIOD_MS);
        try {
          TABLE.put(new Put(Bytes.toBytes(String.format("%02d",10))).addColumn(FAMILY,CQ,Bytes.toBytes(10))).get();
        }
 catch (        Exception e) {
          onError(e);
        }
        resumer.resume();
      }
).start();
    }
  }
  @Override public synchronized void onError(  Throwable error){
    this.finished=true;
    this.error=error;
    notifyAll();
  }
  @Override public synchronized void onComplete(){
    this.finished=true;
    notifyAll();
  }
  public synchronized List<Result> get() throws Throwable {
    while (!finished) {
      wait();
    }
    if (error != null) {
      throw error;
    }
    return results;
  }
}
