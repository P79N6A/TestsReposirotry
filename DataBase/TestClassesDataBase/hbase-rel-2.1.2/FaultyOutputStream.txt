static class FaultyOutputStream extends FSDataOutputStream {
  volatile long faultPos=Long.MAX_VALUE;
  private final AtomicBoolean fault;
  public FaultyOutputStream(  FSDataOutputStream out,  long faultPos,  final AtomicBoolean fault) throws IOException {
    super(out,null);
    this.faultPos=faultPos;
    this.fault=fault;
  }
  @Override public synchronized void write(  byte[] buf,  int offset,  int length) throws IOException {
    System.err.println("faulty stream write at pos " + getPos());
    injectFault();
    super.write(buf,offset,length);
  }
  private void injectFault() throws IOException {
    if (this.fault.get() && getPos() >= faultPos) {
      throw new IOException("Fault injected");
    }
  }
}
