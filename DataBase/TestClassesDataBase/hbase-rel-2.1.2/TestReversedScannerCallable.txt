@RunWith(MockitoJUnitRunner.class) @Category({ClientTests.class,SmallTests.class}) public class TestReversedScannerCallable {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestReversedScannerCallable.class);
  @Mock private ClusterConnection connection;
  @Mock private Scan scan;
  @Mock private RpcControllerFactory rpcFactory;
  @Mock private RegionLocations regionLocations;
  private final byte[] ROW=Bytes.toBytes("row1");
  @Before public void setUp() throws Exception {
    byte[] ROW_BEFORE=ConnectionUtils.createCloseRowBefore(ROW);
    Configuration conf=Mockito.mock(Configuration.class);
    HRegionLocation regionLocation=Mockito.mock(HRegionLocation.class);
    ServerName serverName=Mockito.mock(ServerName.class);
    Mockito.when(connection.getConfiguration()).thenReturn(conf);
    Mockito.when(regionLocations.size()).thenReturn(1);
    Mockito.when(regionLocations.getRegionLocation(0)).thenReturn(regionLocation);
    Mockito.when(regionLocation.getHostname()).thenReturn("localhost");
    Mockito.when(regionLocation.getServerName()).thenReturn(serverName);
    Mockito.when(scan.includeStartRow()).thenReturn(true);
    Mockito.when(scan.getStartRow()).thenReturn(ROW);
  }
  @Test public void testPrepareDoesNotUseCache() throws Exception {
    TableName tableName=TableName.valueOf("MyTable");
    Mockito.when(connection.relocateRegion(tableName,ROW,0)).thenReturn(regionLocations);
    ReversedScannerCallable callable=new ReversedScannerCallable(connection,tableName,scan,null,rpcFactory);
    callable.prepare(true);
    Mockito.verify(connection).relocateRegion(tableName,ROW,0);
  }
  @Test public void testPrepareUsesCache() throws Exception {
    TableName tableName=TableName.valueOf("MyTable");
    Mockito.when(connection.locateRegion(tableName,ROW,true,true,0)).thenReturn(regionLocations);
    ReversedScannerCallable callable=new ReversedScannerCallable(connection,tableName,scan,null,rpcFactory);
    callable.prepare(false);
    Mockito.verify(connection).locateRegion(tableName,ROW,true,true,0);
  }
}
