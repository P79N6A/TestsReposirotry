/** 
 * A RunListener to confirm that we have a  {@link CategoryBasedTimeout} class rule for every test.
 */
@InterfaceAudience.Private @ThreadSafe public class HBaseClassTestRuleChecker extends RunListener {
  @Override public void testStarted(  Description description) throws Exception {
    Category[] categories=description.getTestClass().getAnnotationsByType(Category.class);
    for (    Class<?> c : categories[0].value()) {
      if (c == IntegrationTests.class) {
        return;
      }
    }
    for (    Field field : description.getTestClass().getFields()) {
      if (Modifier.isStatic(field.getModifiers()) && field.getType() == HBaseClassTestRule.class && field.isAnnotationPresent(ClassRule.class)) {
        HBaseClassTestRule timeout=(HBaseClassTestRule)field.get(null);
        assertEquals("The HBaseClassTestRule ClassRule in " + description.getTestClass().getName() + " is for "+ timeout.getClazz().getName(),description.getTestClass(),timeout.getClazz());
        return;
      }
    }
    fail("No HBaseClassTestRule ClassRule for " + description.getTestClass().getName());
  }
}
