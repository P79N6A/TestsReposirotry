@Category(SmallTests.class) public class TestHTableMultiplexerViaMocks {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestHTableMultiplexerViaMocks.class);
  private HTableMultiplexer mockMultiplexer;
  private ClusterConnection mockConnection;
  @Before public void setupTest(){
    mockMultiplexer=mock(HTableMultiplexer.class);
    mockConnection=mock(ClusterConnection.class);
    when(mockMultiplexer.put(any(TableName.class),any(),anyInt())).thenCallRealMethod();
    when(mockMultiplexer.getConnection()).thenReturn(mockConnection);
  }
  @SuppressWarnings("deprecation") @Test public void testConnectionClosing() throws IOException {
    doCallRealMethod().when(mockMultiplexer).close();
    when(mockConnection.isClosed()).thenReturn(false);
    mockMultiplexer.close();
    verify(mockConnection).close();
  }
  @SuppressWarnings("deprecation") @Test public void testClosingAlreadyClosedConnection() throws IOException {
    doCallRealMethod().when(mockMultiplexer).close();
    when(mockConnection.isClosed()).thenReturn(true);
    mockMultiplexer.close();
    verify(mockConnection,times(0)).close();
  }
}
