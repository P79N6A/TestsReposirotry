/** 
 * Returns our async process.
 */
static class MyConnectionImpl extends ConnectionImplementation {
public static class TestRegistry extends DoNothingAsyncRegistry {
    public TestRegistry(    Configuration conf){
      super(conf);
    }
    @Override public CompletableFuture<String> getClusterId(){
      return CompletableFuture.completedFuture("testClusterId");
    }
    @Override public CompletableFuture<Integer> getCurrentNrHRS(){
      return CompletableFuture.completedFuture(1);
    }
  }
  final AtomicInteger nbThreads=new AtomicInteger(0);
  protected MyConnectionImpl(  Configuration conf) throws IOException {
    super(setupConf(conf),null,null);
  }
  private static Configuration setupConf(  Configuration conf){
    conf.setClass(AsyncRegistryFactory.REGISTRY_IMPL_CONF_KEY,TestRegistry.class,AsyncRegistry.class);
    return conf;
  }
  @Override public RegionLocations locateRegion(  TableName tableName,  byte[] row,  boolean useCache,  boolean retry,  int replicaId) throws IOException {
    return new RegionLocations(loc1);
  }
  @Override public boolean hasCellBlockSupport(){
    return false;
  }
}
