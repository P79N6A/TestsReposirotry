@Category({MasterTests.class,MediumTests.class}) public class TestMasterNotCarryTable {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestMasterNotCarryTable.class);
  private static final Logger LOG=LoggerFactory.getLogger(TestMasterNotCarryTable.class);
  private static final HBaseTestingUtility UTIL=new HBaseTestingUtility();
  private static HMaster master;
  @BeforeClass public static void setUp() throws Exception {
    Configuration c=UTIL.getConfiguration();
    FSUtils.setRootDir(c,UTIL.getDataTestDir());
    UTIL.startMiniZKCluster();
    master=new HMaster(UTIL.getConfiguration());
    master.start();
    while (master.getAssignmentManager() != null) {
      LOG.debug("Wait master to create AssignmentManager");
      Thread.sleep(1000);
    }
  }
  @AfterClass public static void tearDown() throws Exception {
    master.stop("Shutdown");
    UTIL.shutdownMiniZKCluster();
  }
  @Test public void testMasterNotCarryTable(){
    assertFalse(LoadBalancer.isTablesOnMaster(UTIL.getConfiguration()));
    assertFalse(LoadBalancer.isSystemTablesOnlyOnMaster(UTIL.getConfiguration()));
  }
  @Test public void testMasterBlockCache(){
    assertNull(master.getCacheConfig().getBlockCache());
  }
  @Test public void testMasterMemStoreLAB(){
    assertNull(ChunkCreator.getInstance());
  }
}
