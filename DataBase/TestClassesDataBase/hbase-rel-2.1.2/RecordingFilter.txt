/** 
 * A very simple filter that records accessed uri's 
 */
static public class RecordingFilter implements Filter {
  private FilterConfig filterConfig=null;
  @Override public void init(  FilterConfig filterConfig){
    this.filterConfig=filterConfig;
  }
  @Override public void destroy(){
    this.filterConfig=null;
  }
  @Override public void doFilter(  ServletRequest request,  ServletResponse response,  FilterChain chain) throws IOException, ServletException {
    if (filterConfig == null)     return;
    String uri=((HttpServletRequest)request).getRequestURI();
    LOG.info("filtering " + uri);
    RECORDS.add(uri);
    chain.doFilter(request,response);
  }
  /** 
 * Configuration for RecordingFilter 
 */
static public class Initializer extends FilterInitializer {
    public Initializer(){
    }
    @Override public void initFilter(    FilterContainer container,    Configuration conf){
      container.addFilter("recording",RecordingFilter.class.getName(),null);
    }
  }
}
