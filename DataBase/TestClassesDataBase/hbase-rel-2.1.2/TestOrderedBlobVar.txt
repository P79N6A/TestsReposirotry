@Category({MiscTests.class,SmallTests.class}) public class TestOrderedBlobVar {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestOrderedBlobVar.class);
  static final byte[][] VALUES=new byte[][]{null,Bytes.toBytes(""),Bytes.toBytes("1"),Bytes.toBytes("22"),Bytes.toBytes("333"),Bytes.toBytes("4444"),Bytes.toBytes("55555"),Bytes.toBytes("666666"),Bytes.toBytes("7777777"),Bytes.toBytes("88888888"),Bytes.toBytes("999999999")};
  @Test public void testEncodedLength(){
    PositionedByteRange buff=new SimplePositionedMutableByteRange(20);
    for (    DataType<byte[]> type : new OrderedBlobVar[]{OrderedBlobVar.ASCENDING,OrderedBlobVar.DESCENDING}) {
      for (      byte[] val : VALUES) {
        buff.setPosition(0);
        type.encode(buff,val);
        assertEquals("encodedLength does not match actual, " + Bytes.toStringBinary(val),buff.getPosition(),type.encodedLength(val));
      }
    }
  }
}
