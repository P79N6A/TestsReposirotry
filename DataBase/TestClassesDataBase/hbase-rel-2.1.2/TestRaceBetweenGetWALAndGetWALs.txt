/** 
 * Testcase for HBASE-21503.
 */
@Category({RegionServerTests.class,SmallTests.class}) public class TestRaceBetweenGetWALAndGetWALs {
  @ClassRule public static final HBaseClassTestRule CLASS_RULE=HBaseClassTestRule.forClass(TestRaceBetweenGetWALAndGetWALs.class);
  private static Future<List<WAL>> GET_WALS_FUTURE;
private static final class FSWALProvider extends AbstractFSWALProvider<AbstractFSWAL<?>> {
    @Override protected AbstractFSWAL<?> createWAL() throws IOException {
      GET_WALS_FUTURE=ForkJoinPool.commonPool().submit(this::getWALs);
      Threads.sleep(2000);
      return Mockito.mock(AbstractFSWAL.class);
    }
    @Override protected void doInit(    Configuration conf) throws IOException {
    }
  }
  @Test public void testRace() throws IOException, InterruptedException, ExecutionException {
    FSWALProvider p=new FSWALProvider();
    WAL wal=p.getWAL(null);
    assertNotNull(GET_WALS_FUTURE);
    List<WAL> wals=GET_WALS_FUTURE.get();
    assertSame(wal,Iterables.getOnlyElement(wals));
  }
}
