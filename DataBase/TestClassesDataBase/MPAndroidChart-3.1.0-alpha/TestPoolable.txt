static class TestPoolable extends ObjectPool.Poolable {
  private static ObjectPool<TestPoolable> pool;
static {
    pool=ObjectPool.create(4,new TestPoolable(0,0));
  }
  public int foo=0;
  public int bar=0;
  protected ObjectPool.Poolable instantiate(){
    return new TestPoolable(0,0);
  }
  private TestPoolable(  int foo,  int bar){
    this.foo=foo;
    this.bar=bar;
  }
  public static TestPoolable getInstance(  int foo,  int bar){
    TestPoolable result=pool.get();
    result.foo=foo;
    result.bar=bar;
    return result;
  }
  public static void recycleInstance(  TestPoolable instance){
    pool.recycle(instance);
  }
  public static void recycleInstances(  List<TestPoolable> instances){
    pool.recycle(instances);
  }
  public static ObjectPool getPool(){
    return pool;
  }
}
