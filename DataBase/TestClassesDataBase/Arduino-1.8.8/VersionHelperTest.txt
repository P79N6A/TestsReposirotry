public class VersionHelperTest {
  public void assertOptionalEquals(  String expected,  Optional<Version> value){
    assertTrue(value.isPresent());
    assertEquals(expected,value.get().toString());
  }
  @Test public void testVersions() throws Exception {
    assertOptionalEquals("1.0.0",VersionHelper.valueOf("1.0.0"));
    assertOptionalEquals("1.0.0",VersionHelper.valueOf("1.0"));
    assertOptionalEquals("1.0.0",VersionHelper.valueOf("1"));
    assertOptionalEquals("1.0.0-abc",VersionHelper.valueOf("1.0.0-abc"));
    assertOptionalEquals("1.0.0-abc",VersionHelper.valueOf("1.0-abc"));
    assertOptionalEquals("1.0.0-abc",VersionHelper.valueOf("1-abc"));
    assertOptionalEquals("1.0.0+abc",VersionHelper.valueOf("1.0.0+abc"));
    assertOptionalEquals("1.0.0+abc",VersionHelper.valueOf("1.0+abc"));
    assertOptionalEquals("1.0.0+abc",VersionHelper.valueOf("1+abc"));
    assertOptionalEquals("1.0.0-def+abc",VersionHelper.valueOf("1.0.0-def+abc"));
    assertOptionalEquals("1.0.0-def+abc",VersionHelper.valueOf("1.0-def+abc"));
    assertOptionalEquals("1.0.0-def+abc",VersionHelper.valueOf("1-def+abc"));
    assertOptionalEquals("1.0.0+def-abc",VersionHelper.valueOf("1.0.0+def-abc"));
    assertOptionalEquals("1.0.0+def-abc",VersionHelper.valueOf("1.0+def-abc"));
    assertOptionalEquals("1.0.0+def-abc",VersionHelper.valueOf("1+def-abc"));
  }
}
