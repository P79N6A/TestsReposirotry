public class TestTryCatch3 extends IntegrationTest {
public static class TestCls {
    private int f=0;
    private boolean test(    Object obj){
      boolean res;
      try {
        res=exc(obj);
      }
 catch (      Exception e) {
        res=false;
      }
 finally {
        f++;
      }
      return res;
    }
    private boolean exc(    Object obj) throws Exception {
      if ("r".equals(obj)) {
        throw new AssertionError();
      }
      return true;
    }
    public void check(){
      f=0;
      assertTrue(test(null));
      assertEquals(1,f);
      f=0;
      try {
        test("r");
      }
 catch (      AssertionError e) {
      }
      assertEquals(1,f);
    }
  }
  @Test public void test(){
    ClassNode cls=getClassNode(TestCls.class);
    String code=cls.getCode().toString();
    assertThat(code,containsString("try {"));
    assertThat(code,containsString("exc(obj);"));
    assertThat(code,containsString("} catch (Exception e) {"));
    assertThat(code,not(containsString("throw th;")));
  }
  @Test public void test2(){
    noDebugInfo();
    ClassNode cls=getClassNode(TestCls.class);
    String code=cls.getCode().toString();
    assertThat(code,not(containsString("throw th;")));
  }
}
