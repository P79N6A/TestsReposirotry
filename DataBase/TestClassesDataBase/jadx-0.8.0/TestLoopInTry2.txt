public class TestLoopInTry2 extends IntegrationTest {
public static class TestCls {
    private MethodNode method;
    private DexNode dex;
    private DecodedInstruction[] insnArr;
    public void test(    Code mthCode) throws DecodeException {
      short[] encodedInstructions=mthCode.getInstructions();
      int size=encodedInstructions.length;
      DecodedInstruction[] decoded=new DecodedInstruction[size];
      ShortArrayCodeInput in=new ShortArrayCodeInput(encodedInstructions);
      try {
        while (in.hasMore()) {
          decoded[in.cursor()]=DecodedInstruction.decode(in);
        }
      }
 catch (      EOFException e) {
        throw new DecodeException(method,"",e);
      }
      insnArr=decoded;
    }
  }
  @Test public void test(){
    ClassNode cls=getClassNode(TestCls.class);
    String code=cls.getCode().toString();
    assertThat(code,containsOne("try {"));
    assertThat(code,containsOne("while (in.hasMore()) {"));
    assertThat(code,containsOne("decoded[in.cursor()] = DecodedInstruction.decode(in);"));
    assertThat(code,containsOne("} catch (EOFException e) {"));
    assertThat(code,containsOne("throw new DecodeException"));
  }
}
