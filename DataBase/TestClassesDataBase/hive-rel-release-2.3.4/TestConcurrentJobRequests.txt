public class TestConcurrentJobRequests extends ConcurrentJobRequestsTestBase {
  private static AppConfig config;
  @Rule public ExpectedException exception=ExpectedException.none();
  @BeforeClass public static void setUp(){
    final String[] args=new String[]{};
    Main main=new Main(args);
    config=main.getAppConfigInstance();
  }
  @Test public void ConcurrentJobsStatusSuccess(){
    try {
      JobRunnable jobRunnable=ConcurrentJobsStatus(6,config,false,false,statusJobHelper.getDelayedResonseAnswer(4,new QueueStatusBean("job_1000","Job not found")));
      assertTrue(jobRunnable.exception == null);
    }
 catch (    Exception e) {
      assertTrue(false);
    }
  }
  @Test public void ConcurrentListJobsSuccess(){
    try {
      JobRunnable jobRunnable=ConcurrentListJobs(6,config,false,false,listJobHelper.getDelayedResonseAnswer(4,new ArrayList<JobItemBean>()));
      assertTrue(jobRunnable.exception == null);
    }
 catch (    Exception e) {
      assertTrue(false);
    }
  }
  @Test public void ConcurrentSubmitJobsSuccess(){
    try {
      JobRunnable jobRunnable=SubmitConcurrentJobs(6,config,false,false,submitJobHelper.getDelayedResonseAnswer(4,0),killJobHelper.getDelayedResonseAnswer(4,null),"job_1000");
      assertTrue(jobRunnable.exception == null);
    }
 catch (    Exception e) {
      assertTrue(false);
    }
  }
}
