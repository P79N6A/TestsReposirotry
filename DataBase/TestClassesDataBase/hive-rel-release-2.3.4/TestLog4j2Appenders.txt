/** 
 */
public class TestLog4j2Appenders {
  @Before public void setup(){
    LoggerContext ctx=(LoggerContext)LogManager.getContext(false);
    Configuration config=ctx.getConfiguration();
    LoggerConfig loggerConfig=config.getLoggerConfig(LogManager.ROOT_LOGGER_NAME);
    loggerConfig.setLevel(Level.INFO);
    ctx.updateLoggers();
  }
  @Test public void testStringAppender() throws Exception {
    Logger logger=LogManager.getRootLogger();
    StringAppender appender=StringAppender.createStringAppender("%m");
    appender.addToLogger(logger.getName(),Level.INFO);
    appender.start();
    logger.info("Hello!");
    logger.info(" World");
    assertEquals("Hello! World",appender.getOutput());
    appender.removeFromLogger(LogManager.getRootLogger().getName());
  }
  @Test public void testHiveEventCounterAppender() throws Exception {
    Logger logger=LogManager.getRootLogger();
    HiveEventCounter appender=HiveEventCounter.createInstance("EventCounter",true,null,null);
    appender.addToLogger(logger.getName(),Level.INFO);
    appender.start();
    logger.info("Test");
    logger.info("Test");
    logger.info("Test");
    logger.info("Test");
    logger.error("Test");
    logger.error("Test");
    logger.error("Test");
    logger.warn("Test");
    logger.warn("Test");
    logger.fatal("Test");
    assertEquals(4,appender.getInfo());
    assertEquals(3,appender.getError());
    assertEquals(2,appender.getWarn());
    assertEquals(1,appender.getFatal());
    appender.removeFromLogger(LogManager.getRootLogger().getName());
  }
}
