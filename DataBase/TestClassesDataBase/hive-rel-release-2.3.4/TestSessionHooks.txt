public class TestSessionHooks extends TestCase {
  private static String sessionUserName="user1";
  private EmbeddedThriftBinaryCLIService service;
  private ThriftCLIServiceClient client;
public static class SessionHookTest implements HiveSessionHook {
    public static AtomicInteger runCount=new AtomicInteger(0);
    @Override public void run(    HiveSessionHookContext sessionHookContext) throws HiveSQLException {
      Assert.assertEquals(sessionHookContext.getSessionUser(),sessionUserName);
      String sessionHook=sessionHookContext.getSessionConf().getVar(ConfVars.HIVE_SERVER2_SESSION_HOOK);
      Assert.assertTrue(sessionHook.contains(this.getClass().getName()));
      Assert.assertEquals(0,runCount.getAndIncrement());
    }
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    SessionHookTest.runCount.set(0);
    System.setProperty(ConfVars.HIVE_SERVER2_SESSION_HOOK.varname,TestSessionHooks.SessionHookTest.class.getName());
    service=new EmbeddedThriftBinaryCLIService();
    HiveConf hiveConf=new HiveConf();
    hiveConf.setVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER,"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory");
    service.init(hiveConf);
    client=new ThriftCLIServiceClient(service);
  }
  @Test public void testSessionHook() throws Exception {
    SessionHandle sessionHandle=client.openSession(sessionUserName,"foobar",Collections.<String,String>emptyMap());
    Assert.assertEquals(1,SessionHookTest.runCount.get());
    client.closeSession(sessionHandle);
  }
  /** 
 * Create session with proxy user property. Verify the effective session user
 * @throws Exception
 */
  @Test public void testProxyUser() throws Exception {
    String connectingUser="user1";
    String proxyUser=System.getProperty("user.name");
    Map<String,String> sessConf=new HashMap<String,String>();
    sessConf.put(HiveAuthFactory.HS2_PROXY_USER,proxyUser);
    sessionUserName=proxyUser;
    SessionHandle sessionHandle=client.openSession(connectingUser,"foobar",sessConf);
    Assert.assertEquals(1,SessionHookTest.runCount.get());
    client.closeSession(sessionHandle);
  }
}
