public class TestServerSpecificConfig {
  private static URL oldDefaultHiveSite=HiveConf.getHiveSiteLocation();
  /** 
 * Verify if appropriate server configuration (metastore, hiveserver2) get loaded when the embedded clients are loaded Checks values used in the configs used for testing.
 * @throws IOException
 * @throws Throwable
 */
  @Test public void testServerConfigsEmbeddedMetastore() throws IOException, Throwable {
    HiveConf.setHiveSiteLocation(oldDefaultHiveSite);
    HiveConf conf=new HiveConf();
    assertTrue(HiveConf.isLoadMetastoreConfig());
    assertEquals("from.hivemetastore-site.xml",conf.get("hive.dummyparam.test.server.specific.config.override"));
    assertEquals("from.hivemetastore-site.xml",conf.get("hive.dummyparam.test.server.specific.config.metastoresite"));
    assertEquals("from.hive-site.xml",conf.get("hive.dummyparam.test.server.specific.config.hivesite"));
    assertFalse(HiveConf.isLoadHiveServer2Config());
    assertNull(conf.get("hive.dummyparam.test.server.specific.config.hiveserver2site"));
    new HiveServer2();
    conf=new HiveConf();
    verifyHS2ConfParams(conf);
    assertEquals("from.hivemetastore-site.xml",conf.get("hive.dummyparam.test.server.specific.config.metastoresite"));
  }
  private void verifyHS2ConfParams(  HiveConf conf){
    assertTrue(HiveConf.isLoadHiveServer2Config());
    assertEquals("from.hiveserver2-site.xml",conf.get("hive.dummyparam.test.server.specific.config.override"));
    assertEquals("from.hiveserver2-site.xml",conf.get("hive.dummyparam.test.server.specific.config.hiveserver2site"));
    assertEquals("from.hive-site.xml",conf.get("hive.dummyparam.test.server.specific.config.hivesite"));
  }
  /** 
 * Ensure that system properties still get precedence. Config params set as -hiveconf on commandline get set as system properties They should have the final say
 */
  @Test public void testSystemPropertyPrecedence(){
    final String OVERRIDE_KEY="hive.conf.restricted.list";
    try {
      HiveConf.setHiveSiteLocation(oldDefaultHiveSite);
      System.setProperty(OVERRIDE_KEY,"from.sysprop");
      HiveConf conf=new HiveConf();
      assertEquals("from.sysprop",conf.get(OVERRIDE_KEY));
      new HiveServer2();
      conf=new HiveConf();
      assertTrue(HiveConf.isLoadHiveServer2Config());
      assertEquals("from.sysprop",conf.get(OVERRIDE_KEY));
    }
  finally {
      System.getProperties().remove(OVERRIDE_KEY);
    }
  }
  @Before public void resetDefaults() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
    HiveConf.setLoadMetastoreConfig(false);
    HiveConf.setLoadHiveServer2Config(false);
  }
  /** 
 * Test to ensure that HiveConf does not try to load hivemetastore-site.xml, when remote metastore is used.
 * @throws IOException
 * @throws Throwable
 */
  @Test public void testHiveMetastoreRemoteConfig() throws IOException, Throwable {
    setHiveSiteWithRemoteMetastore();
    resetDefaults();
    HiveConf conf=new HiveConf();
    verifyMetastoreConfNotLoaded(conf);
    assertEquals("from.hive-site.xml",conf.get("hive.dummyparam.test.server.specific.config.override"));
    new HiveServer2();
    conf=new HiveConf();
    verifyHS2ConfParams(conf);
    verifyMetastoreConfNotLoaded(conf);
  }
  private void verifyMetastoreConfNotLoaded(  HiveConf conf){
    assertFalse(HiveConf.isLoadMetastoreConfig());
    assertNull(conf.get("hive.dummyparam.test.server.specific.config.metastoresite"));
  }
  /** 
 * Set new hive-site.xml file location that has remote metastore config
 * @throws IOException
 */
  private void setHiveSiteWithRemoteMetastore() throws IOException {
    String newConfFile=System.getProperty("test.tmp.dir") + File.separator + this.getClass().getSimpleName()+ "hive-site.xml";
    File hiveSite=new File(newConfFile);
    FileOutputStream out=new FileOutputStream(hiveSite);
    HiveConf.setHiveSiteLocation(oldDefaultHiveSite);
    HiveConf defaultHiveConf=new HiveConf();
    defaultHiveConf.setVar(ConfVars.METASTOREURIS,"dummyvalue");
    defaultHiveConf.set("hive.dummyparam.test.server.specific.config.override","from.hive-site.xml");
    defaultHiveConf.unset("hive.dummyparam.test.server.specific.config.metastoresite");
    defaultHiveConf.writeXml(out);
    HiveConf.setHiveSiteLocation(hiveSite.toURI().toURL());
  }
}
