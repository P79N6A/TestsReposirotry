/** 
 * Test basic operations on AccumuloHiveRow
 */
public class TestAccumuloHiveRow {
  @Test public void testHasFamilyAndQualifier(){
    AccumuloHiveRow row=new AccumuloHiveRow("row1");
    for (int i=1; i <= 5; i++) {
      row.add("cf1","cq" + i,Integer.toString(i).getBytes());
    }
    assertFalse(row.hasFamAndQual(new Text(""),new Text("")));
    assertFalse(row.hasFamAndQual(new Text("cf0"),new Text("cq1")));
    assertFalse(row.hasFamAndQual(new Text("cf1"),new Text("cq0")));
    for (int i=1; i <= 5; i++) {
      assertTrue(row.hasFamAndQual(new Text("cf1"),new Text("cq" + i)));
    }
  }
  @Test public void testGetValueFromColumn(){
    AccumuloHiveRow row=new AccumuloHiveRow("row1");
    assertNull(row.getValue(new Text(""),new Text("")));
    for (int i=1; i <= 5; i++) {
      row.add("cf","cq" + i,Integer.toString(i).getBytes());
    }
    assertNull(row.getValue(new Text("cf"),new Text("cq0")));
    for (int i=1; i <= 5; i++) {
      assertArrayEquals(Integer.toString(i).getBytes(),row.getValue(new Text("cf"),new Text("cq" + i)));
    }
  }
  @Test public void testWritableEmptyRow() throws IOException {
    AccumuloHiveRow emptyRow=new AccumuloHiveRow();
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    DataOutputStream out=new DataOutputStream(baos);
    emptyRow.write(out);
    out.close();
    AccumuloHiveRow emptyCopy=new AccumuloHiveRow();
    ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
    DataInputStream in=new DataInputStream(bais);
    emptyCopy.readFields(in);
    assertEquals(emptyRow,emptyCopy);
  }
  @Test public void testWritableWithColumns() throws IOException {
    AccumuloHiveRow rowWithColumns=new AccumuloHiveRow("row");
    rowWithColumns.add("cf","cq1","1".getBytes());
    rowWithColumns.add("cf","cq2","2".getBytes());
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    DataOutputStream out=new DataOutputStream(baos);
    rowWithColumns.write(out);
    out.close();
    AccumuloHiveRow copy=new AccumuloHiveRow();
    ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
    DataInputStream in=new DataInputStream(bais);
    copy.readFields(in);
    assertEquals(rowWithColumns,copy);
  }
}
