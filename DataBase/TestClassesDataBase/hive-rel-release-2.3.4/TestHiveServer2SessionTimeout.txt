public class TestHiveServer2SessionTimeout {
  private static MiniHS2 miniHS2=null;
  private Map<String,String> confOverlay;
  @BeforeClass public static void beforeTest() throws Exception {
    miniHS2=new MiniHS2(new HiveConf());
  }
  @Before public void setUp() throws Exception {
    confOverlay=new HashMap<String,String>();
    confOverlay.put(ConfVars.HIVE_SUPPORT_CONCURRENCY.varname,"false");
    confOverlay.put(ConfVars.HIVE_SERVER2_SESSION_CHECK_INTERVAL.varname,"3s");
    confOverlay.put(ConfVars.HIVE_SERVER2_IDLE_OPERATION_TIMEOUT.varname,"3s");
    miniHS2.start(confOverlay);
  }
  @After public void tearDown() throws Exception {
    miniHS2.stop();
  }
  @Test public void testConnection() throws Exception {
    CLIServiceClient serviceClient=miniHS2.getServiceClient();
    SessionHandle sessHandle=serviceClient.openSession("foo","bar");
    OperationHandle handle=serviceClient.executeStatement(sessHandle,"SELECT 1",confOverlay);
    Thread.sleep(7000);
    try {
      serviceClient.closeOperation(handle);
      fail("Operation should have been closed by timeout!");
    }
 catch (    HiveSQLException e) {
      assertTrue(StringUtils.stringifyException(e),e.getMessage().contains("Invalid OperationHandle"));
    }
  }
}
