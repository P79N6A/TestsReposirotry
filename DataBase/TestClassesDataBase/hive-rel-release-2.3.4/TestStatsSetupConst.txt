public class TestStatsSetupConst {
  @Test public void testSetBasicStatsState_missesUpgrade(){
    Map<String,String> params=new HashMap<>();
    params.put(StatsSetupConst.COLUMN_STATS_ACCURATE,"FALSE");
    StatsSetupConst.setBasicStatsState(params,String.valueOf(true));
    assertEquals("{\"BASIC_STATS\":\"true\"}",params.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
  @Test public void setColumnStatsState_camelcase(){
    Map<String,String> params=new HashMap<>();
    StatsSetupConst.setColumnStatsState(params,Lists.newArrayList("Foo"));
    String val1=params.get(StatsSetupConst.COLUMN_STATS_ACCURATE);
    StatsSetupConst.setColumnStatsState(params,Lists.newArrayList("Foo"));
    String val2=params.get(StatsSetupConst.COLUMN_STATS_ACCURATE);
    assertEquals(val1,val2);
  }
  @Test public void testSetBasicStatsState_none(){
    Map<String,String> params=new HashMap<>();
    StatsSetupConst.setBasicStatsState(params,String.valueOf(true));
    assertEquals("{\"BASIC_STATS\":\"true\"}",params.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
  @Test public void testSetBasicStatsState_falseIsAbsent(){
    Map<String,String> params=new HashMap<>();
    StatsSetupConst.setBasicStatsState(params,String.valueOf(true));
    StatsSetupConst.setBasicStatsState(params,String.valueOf(false));
    assertNull(params.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
  @Test public void testStatColumnEntriesCompat(){
    Map<String,String> params0=new HashMap<>();
    StatsSetupConst.setBasicStatsState(params0,String.valueOf(true));
    StatsSetupConst.setColumnStatsState(params0,Lists.newArrayList("Foo"));
    assertEquals("{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"Foo\":\"true\"}}",params0.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
  @Test public void testColumnEntries_orderIndependence(){
    Map<String,String> params0=new HashMap<>();
    StatsSetupConst.setBasicStatsState(params0,String.valueOf(true));
    StatsSetupConst.setColumnStatsState(params0,Lists.newArrayList("Foo","Bar"));
    Map<String,String> params1=new HashMap<>();
    StatsSetupConst.setColumnStatsState(params1,Lists.newArrayList("Bar","Foo"));
    StatsSetupConst.setBasicStatsState(params1,String.valueOf(true));
    assertEquals(params0.get(StatsSetupConst.COLUMN_STATS_ACCURATE),params1.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
  @Test public void testColumnEntries_orderIndependence2(){
    Map<String,String> params0=new HashMap<>();
    StatsSetupConst.setBasicStatsState(params0,String.valueOf(true));
    StatsSetupConst.setColumnStatsState(params0,Lists.newArrayList("year"));
    StatsSetupConst.setColumnStatsState(params0,Lists.newArrayList("year","month"));
    Map<String,String> params1=new HashMap<>();
    StatsSetupConst.setColumnStatsState(params1,Lists.newArrayList("month","year"));
    StatsSetupConst.setBasicStatsState(params1,String.valueOf(true));
    System.out.println(params0.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
    assertEquals(params0.get(StatsSetupConst.COLUMN_STATS_ACCURATE),params1.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
  @Test public void testColumnEntries_areKept_whenBasicIsAbsent(){
    Map<String,String> params=new HashMap<>();
    StatsSetupConst.setBasicStatsState(params,String.valueOf(false));
    StatsSetupConst.setColumnStatsState(params,Lists.newArrayList("Foo"));
    assertEquals("{\"COLUMN_STATS\":{\"Foo\":\"true\"}}",params.get(StatsSetupConst.COLUMN_STATS_ACCURATE));
  }
}
