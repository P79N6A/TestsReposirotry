public class TestVariableSubstitution {
private static class LocalMySource {
    final Map<String,String> map=new HashMap<>();
    public void put(    String k,    String v){
      map.put(k,v);
    }
    public String get(    String k){
      return map.get(k);
    }
  }
  private static LocalMySource getMySource(){
    return localSource.get();
  }
  private static ThreadLocal<LocalMySource> localSource=new ThreadLocal<LocalMySource>(){
    @Override protected LocalMySource initialValue(){
      return new LocalMySource();
    }
  }
;
  @Test public void testVariableSource() throws InterruptedException {
    final VariableSubstitution variableSubstitution=new VariableSubstitution(new HiveVariableSource(){
      @Override public Map<String,String> getHiveVariable(){
        return TestVariableSubstitution.getMySource().map;
      }
    }
);
    String v=variableSubstitution.substitute(new HiveConf(),"${a}");
    Assert.assertEquals("${a}",v);
    TestVariableSubstitution.getMySource().put("a","b");
    v=variableSubstitution.substitute(new HiveConf(),"${a}");
    Assert.assertEquals("b",v);
  }
}
