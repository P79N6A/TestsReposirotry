/** 
 * Fundamental logic and performance tests for vector filters belong here. For tests about filters to cover specific operator and data type combinations, see also the other filter tests under org.apache.hadoop.hive.ql.exec.vector.expressions
 */
public static class FakeDataReader {
  private final int size;
  private final VectorizedRowBatch vrg;
  private int currentSize=0;
  private final int numCols;
  private final int len=1024;
  public FakeDataReader(  int size,  int numCols){
    this.size=size;
    this.numCols=numCols;
    vrg=new VectorizedRowBatch(numCols,len);
    for (int i=0; i < numCols; i++) {
      try {
        Thread.sleep(2);
      }
 catch (      InterruptedException ignore) {
      }
      vrg.cols[i]=getLongVector(len);
    }
  }
  public VectorizedRowBatch getNext(){
    if (currentSize >= size) {
      vrg.size=0;
      return vrg;
    }
 else {
      vrg.size=len;
      currentSize+=vrg.size;
      vrg.selectedInUse=false;
      return vrg;
    }
  }
  private LongColumnVector getLongVector(  int len){
    LongColumnVector lcv=new LongColumnVector(len);
    TestVectorizedRowBatch.setRandomLongCol(lcv);
    return lcv;
  }
}
