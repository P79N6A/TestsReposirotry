/** 
 * Test case for verifying that multiple {@link org.apache.hadoop.hive.metastore.AuthorizationPreEventListener}s can be set and they get called.
 */
public class TestMultiAuthorizationPreEventListener {
  private static HiveConf clientHiveConf;
  private static HiveMetaStoreClient msc;
  private static Driver driver;
  @BeforeClass public static void setUp() throws Exception {
    int port=MetaStoreUtils.findFreePort();
    System.setProperty(HiveConf.ConfVars.METASTORE_PRE_EVENT_LISTENERS.varname,AuthorizationPreEventListener.class.getName());
    System.setProperty(HiveConf.ConfVars.HIVE_METASTORE_AUTHORIZATION_MANAGER.varname,DummyHiveMetastoreAuthorizationProvider.class.getName() + "," + DummyHiveMetastoreAuthorizationProvider.class.getName());
    System.setProperty(HiveConf.ConfVars.HIVE_METASTORE_AUTHENTICATOR_MANAGER.varname,HadoopDefaultMetastoreAuthenticator.class.getName());
    MetaStoreUtils.startMetaStore(port,ShimLoader.getHadoopThriftAuthBridge());
    clientHiveConf=new HiveConf();
    clientHiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port);
    clientHiveConf.set(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY.varname,"false");
    SessionState.start(new CliSessionState(clientHiveConf));
    msc=new HiveMetaStoreClient(clientHiveConf);
    driver=new Driver(clientHiveConf);
  }
  @Test public void testMultipleAuthorizationListners() throws Exception {
    String dbName="hive" + this.getClass().getSimpleName().toLowerCase();
    List<AuthCallContext> authCalls=DummyHiveMetastoreAuthorizationProvider.authCalls;
    int listSize=0;
    assertEquals(listSize,authCalls.size());
    driver.run("create database " + dbName);
    listSize=2;
    assertEquals(listSize,authCalls.size());
    Database db=msc.getDatabase(dbName);
    listSize+=2;
    Database dbFromEvent=(Database)assertAndExtractSingleObjectFromEvent(listSize,authCalls,DummyHiveMetastoreAuthorizationProvider.AuthCallContextType.DB);
    validateCreateDb(db,dbFromEvent);
  }
  public Object assertAndExtractSingleObjectFromEvent(  int listSize,  List<AuthCallContext> authCalls,  DummyHiveMetastoreAuthorizationProvider.AuthCallContextType callType){
    assertEquals(listSize,authCalls.size());
    assertEquals(1,authCalls.get(listSize - 1).authObjects.size());
    assertEquals(callType,authCalls.get(listSize - 1).type);
    return (authCalls.get(listSize - 1).authObjects.get(0));
  }
  private void validateCreateDb(  Database expectedDb,  Database actualDb){
    assertEquals(expectedDb.getName(),actualDb.getName());
    assertEquals(expectedDb.getLocationUri(),actualDb.getLocationUri());
  }
}
