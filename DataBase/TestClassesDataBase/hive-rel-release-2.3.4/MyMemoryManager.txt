private static class MyMemoryManager implements MemoryManager {
  final long totalSpace;
  double rate;
  Path path=null;
  long lastAllocation=0;
  int rows=0;
  MemoryManager.Callback callback;
  MyMemoryManager(  Configuration conf,  long totalSpace,  double rate){
    this.totalSpace=totalSpace;
    this.rate=rate;
  }
  @Override public void addWriter(  Path path,  long requestedAllocation,  MemoryManager.Callback callback){
    this.path=path;
    this.lastAllocation=requestedAllocation;
    this.callback=callback;
  }
  @Override public synchronized void removeWriter(  Path path){
    this.path=null;
    this.lastAllocation=0;
  }
  @Override public void addedRow(  int count) throws IOException {
    rows+=count;
    if (rows >= 100) {
      callback.checkMemory(rate);
      rows=0;
    }
  }
}
