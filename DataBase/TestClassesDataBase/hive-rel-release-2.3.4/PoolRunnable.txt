private static abstract class PoolRunnable implements Runnable {
  protected final FixedSizedObjectPool<Object> pool;
  private final CountDownLatch cdlIn;
  private final CountDownLatch cdlOut;
  public final List<Object> objects=new ArrayList<>();
  private final int count;
  PoolRunnable(  FixedSizedObjectPool<Object> pool,  CountDownLatch cdlIn,  CountDownLatch cdlOut,  int count){
    this.pool=pool;
    this.cdlIn=cdlIn;
    this.cdlOut=cdlOut;
    this.count=count;
  }
  @Override public void run(){
    syncThreadStart(cdlIn,cdlOut);
    for (int i=0; i < count; ++i) {
      doOneOp();
    }
  }
  protected abstract void doOneOp();
}
