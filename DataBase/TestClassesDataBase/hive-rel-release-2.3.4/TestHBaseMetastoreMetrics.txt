/** 
 * Test HMS Metrics on HBase Metastore
 */
public class TestHBaseMetastoreMetrics extends HBaseIntegrationTests {
  @BeforeClass public static void startup() throws Exception {
    HBaseIntegrationTests.startMiniCluster();
  }
  @AfterClass public static void shutdown() throws Exception {
    HBaseIntegrationTests.shutdownMiniCluster();
  }
  @Before public void before() throws IOException {
    HBaseReadWrite.setConf(conf);
    conf=new HiveConf();
    conf.setVar(HiveConf.ConfVars.METASTORE_RAW_STORE_IMPL,"org.apache.hadoop.hive.metastore.hbase.HBaseStore");
    conf.setBoolVar(HiveConf.ConfVars.METASTORE_FASTPATH,true);
    conf.setBoolVar(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY,false);
    conf.setBoolVar(HiveConf.ConfVars.METASTORE_METRICS,true);
    conf.setVar(HiveConf.ConfVars.HIVE_METRICS_REPORTER,MetricsReporting.JSON_FILE.name() + "," + MetricsReporting.JMX.name());
    SessionState.start(new CliSessionState(conf));
    driver=new Driver(conf);
  }
  @Test public void testMetaDataCounts() throws Exception {
    driver.run("create database testdb1");
    driver.run("create table testtbl1 (key string)");
    driver.run("create table testtblpart (key string) partitioned by (partkey string)");
    driver.run("use testdb1");
    driver.run("create table testtbl2 (key string)");
    driver.run("create table testtblpart2 (key string) partitioned by (partkey string)");
    driver.run("alter table default.testtblpart add partition (partkey='a')");
    driver.run("alter table default.testtblpart add partition (partkey='b')");
    driver.run("alter table default.testtblpart add partition (partkey='c')");
    driver.run("alter table testdb1.testtblpart2 add partition (partkey='a')");
    driver.run("alter table testdb1.testtblpart2 add partition (partkey='b')");
    driver.run("alter table testdb1.testtblpart2 add partition (partkey='c')");
    driver.run("create database tempdb");
    driver.run("use tempdb");
    driver.run("create table delete_by_table (key string) partitioned by (partkey string)");
    driver.run("alter table delete_by_table add partition (partkey='temp')");
    driver.run("drop table delete_by_table");
    driver.run("create table delete_by_part (key string) partitioned by (partkey string)");
    driver.run("alter table delete_by_part add partition (partkey='temp')");
    driver.run("alter table delete_by_part drop partition (partkey='temp')");
    driver.run("create table delete_by_db (key string) partitioned by (partkey string)");
    driver.run("alter table delete_by_db add partition (partkey='temp')");
    driver.run("use default");
    driver.run("drop database tempdb cascade");
    CodahaleMetrics metrics=(CodahaleMetrics)MetricsFactory.getInstance();
    String json=metrics.dumpJson();
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.COUNTER,MetricsConstant.CREATE_TOTAL_DATABASES,2);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.COUNTER,MetricsConstant.CREATE_TOTAL_TABLES,7);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.COUNTER,MetricsConstant.CREATE_TOTAL_PARTITIONS,9);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.COUNTER,MetricsConstant.DELETE_TOTAL_DATABASES,1);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.COUNTER,MetricsConstant.DELETE_TOTAL_TABLES,3);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.COUNTER,MetricsConstant.DELETE_TOTAL_PARTITIONS,3);
    conf.setVar(HiveConf.ConfVars.METASTORE_RAW_STORE_IMPL,ObjectStore.class.getName());
    HiveMetaStore.HMSHandler baseHandler=new HiveMetaStore.HMSHandler("test",conf,false);
    baseHandler.init();
    baseHandler.updateMetrics();
    json=metrics.dumpJson();
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.GAUGE,MetricsConstant.INIT_TOTAL_DATABASES,2);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.GAUGE,MetricsConstant.INIT_TOTAL_TABLES,4);
    MetricsTestUtils.verifyMetricsJson(json,MetricsTestUtils.GAUGE,MetricsConstant.INIT_TOTAL_PARTITIONS,6);
  }
}
