private static class LocalMetaServer implements Runnable {
  public final int MS_PORT=20101;
  private final HiveConf hiveConf;
  private final SecurityManager securityManager;
  public final static int WAIT_TIME_FOR_BOOTUP=30000;
  public LocalMetaServer(){
    securityManager=System.getSecurityManager();
    System.setSecurityManager(new NoExitSecurityManager());
    hiveConf=new HiveConf(TestHiveClientCache.class);
    hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + MS_PORT);
    hiveConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTCONNECTIONRETRIES,3);
    hiveConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTFAILURERETRIES,3);
    hiveConf.set(HiveConf.ConfVars.SEMANTIC_ANALYZER_HOOK.varname,HCatSemanticAnalyzer.class.getName());
    hiveConf.set(HiveConf.ConfVars.PREEXECHOOKS.varname,"");
    hiveConf.set(HiveConf.ConfVars.POSTEXECHOOKS.varname,"");
    hiveConf.set(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY.varname,"false");
    System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.varname," ");
    System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.varname," ");
  }
  public void start() throws InterruptedException {
    Thread thread=new Thread(this);
    thread.start();
    Thread.sleep(WAIT_TIME_FOR_BOOTUP);
  }
  @Override public void run(){
    try {
      HiveMetaStore.main(new String[]{"-v","-p",String.valueOf(MS_PORT)});
    }
 catch (    Throwable t) {
      LOG.error("Exiting. Got exception from metastore: ",t);
    }
  }
  public HiveConf getHiveConf(){
    return hiveConf;
  }
  public void shutDown(){
    System.setSecurityManager(securityManager);
  }
}
