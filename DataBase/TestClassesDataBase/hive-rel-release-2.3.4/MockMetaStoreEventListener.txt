public static class MockMetaStoreEventListener extends MetaStoreEventListener {
  private static Stack<Pair<EventType,String>> eventsIds=new Stack<>();
  private static void pushEventId(  EventType eventType,  final ListenerEvent event){
    if (event.getStatus()) {
      Map<String,String> parameters=event.getParameters();
      if (parameters.containsKey(MetaStoreEventListenerConstants.DB_NOTIFICATION_EVENT_ID_KEY_NAME)) {
        Pair<EventType,String> pair=new Pair<>(eventType,parameters.get(MetaStoreEventListenerConstants.DB_NOTIFICATION_EVENT_ID_KEY_NAME));
        eventsIds.push(pair);
      }
    }
  }
  public static void popAndVerifyLastEventId(  EventType eventType,  long id){
    if (!eventsIds.isEmpty()) {
      Pair<EventType,String> pair=eventsIds.pop();
      assertEquals("Last event type does not match.",eventType,pair.first);
      assertEquals("Last event ID does not match.",Long.toString(id),pair.second);
    }
 else {
      assertTrue("List of events is empty.",false);
    }
  }
  public static void clearEvents(){
    eventsIds.clear();
  }
  public MockMetaStoreEventListener(  Configuration config){
    super(config);
  }
  public void onCreateTable(  CreateTableEvent tableEvent) throws MetaException {
    pushEventId(EventType.CREATE_TABLE,tableEvent);
  }
  public void onDropTable(  DropTableEvent tableEvent) throws MetaException {
    pushEventId(EventType.DROP_TABLE,tableEvent);
  }
  public void onAlterTable(  AlterTableEvent tableEvent) throws MetaException {
    pushEventId(EventType.ALTER_TABLE,tableEvent);
  }
  public void onAddPartition(  AddPartitionEvent partitionEvent) throws MetaException {
    pushEventId(EventType.ADD_PARTITION,partitionEvent);
  }
  public void onDropPartition(  DropPartitionEvent partitionEvent) throws MetaException {
    pushEventId(EventType.DROP_PARTITION,partitionEvent);
  }
  public void onAlterPartition(  AlterPartitionEvent partitionEvent) throws MetaException {
    pushEventId(EventType.ALTER_PARTITION,partitionEvent);
  }
  public void onCreateDatabase(  CreateDatabaseEvent dbEvent) throws MetaException {
    pushEventId(EventType.CREATE_DATABASE,dbEvent);
  }
  public void onDropDatabase(  DropDatabaseEvent dbEvent) throws MetaException {
    pushEventId(EventType.DROP_DATABASE,dbEvent);
  }
  public void onAddIndex(  AddIndexEvent indexEvent) throws MetaException {
    pushEventId(EventType.CREATE_INDEX,indexEvent);
  }
  public void onDropIndex(  DropIndexEvent indexEvent) throws MetaException {
    pushEventId(EventType.DROP_INDEX,indexEvent);
  }
  public void onAlterIndex(  AlterIndexEvent indexEvent) throws MetaException {
    pushEventId(EventType.ALTER_INDEX,indexEvent);
  }
  public void onCreateFunction(  CreateFunctionEvent fnEvent) throws MetaException {
    pushEventId(EventType.CREATE_FUNCTION,fnEvent);
  }
  public void onDropFunction(  DropFunctionEvent fnEvent) throws MetaException {
    pushEventId(EventType.DROP_FUNCTION,fnEvent);
  }
  public void onInsert(  InsertEvent insertEvent) throws MetaException {
    pushEventId(EventType.INSERT,insertEvent);
  }
}
