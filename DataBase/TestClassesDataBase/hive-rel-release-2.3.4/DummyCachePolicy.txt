private static class DummyCachePolicy implements LowLevelCachePolicy {
  int lockCount=0, unlockCount=0;
  public void cache(  LlapCacheableBuffer buffer,  Priority pri){
    ++lockCount;
  }
  public void notifyLock(  LlapCacheableBuffer buffer){
    ++lockCount;
  }
  public void notifyUnlock(  LlapCacheableBuffer buffer){
    ++unlockCount;
  }
  public long evictSomeBlocks(  long memoryToReserve){
    return memoryToReserve;
  }
  public void setEvictionListener(  EvictionListener listener){
  }
  public String debugDumpForOom(){
    return "";
  }
  public void setParentDebugDumper(  LlapOomDebugDump dumper){
  }
  public void verifyEquals(  int i){
    assertEquals(i,lockCount);
    assertEquals(i,unlockCount);
  }
  @Override public long tryEvictContiguousData(  int allocationSize,  int count){
    return 0;
  }
}
