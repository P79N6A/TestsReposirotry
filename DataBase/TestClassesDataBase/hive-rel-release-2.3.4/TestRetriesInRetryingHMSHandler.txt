public class TestRetriesInRetryingHMSHandler {
  private static HiveConf hiveConf;
  private static final int RETRY_ATTEMPTS=3;
  @BeforeClass public static void setup() throws IOException {
    hiveConf=new HiveConf();
    int port=MetaStoreUtils.findFreePort();
    hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port);
    hiveConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTCONNECTIONRETRIES,3);
    hiveConf.setIntVar(HiveConf.ConfVars.HMSHANDLERATTEMPTS,RETRY_ATTEMPTS);
    hiveConf.setTimeVar(HiveConf.ConfVars.HMSHANDLERINTERVAL,10,TimeUnit.MILLISECONDS);
    hiveConf.setBoolVar(HiveConf.ConfVars.HMSHANDLERFORCERELOADCONF,false);
  }
  @Test public void testRetryInit() throws MetaException {
    IHMSHandler mockBaseHandler=Mockito.mock(HiveMetaStore.HMSHandler.class);
    Mockito.when(mockBaseHandler.getConf()).thenReturn(hiveConf);
    Mockito.doThrow(JDOException.class).doNothing().when(mockBaseHandler).init();
    RetryingHMSHandler.getProxy(hiveConf,mockBaseHandler,false);
    Mockito.verify(mockBaseHandler,Mockito.times(2)).init();
  }
  @Test public void testNoRetryInit() throws MetaException {
    IHMSHandler mockBaseHandler=Mockito.mock(HiveMetaStore.HMSHandler.class);
    Mockito.when(mockBaseHandler.getConf()).thenReturn(hiveConf);
    Mockito.doNothing().when(mockBaseHandler).init();
    RetryingHMSHandler.getProxy(hiveConf,mockBaseHandler,false);
    Mockito.verify(mockBaseHandler,Mockito.times(1)).init();
  }
  @Test(expected=MetaException.class) public void testRetriesLimit() throws MetaException {
    IHMSHandler mockBaseHandler=Mockito.mock(HiveMetaStore.HMSHandler.class);
    Mockito.when(mockBaseHandler.getConf()).thenReturn(hiveConf);
    Mockito.doThrow(JDOException.class).when(mockBaseHandler).init();
    RetryingHMSHandler.getProxy(hiveConf,mockBaseHandler,false);
    Mockito.verify(mockBaseHandler,Mockito.times(RETRY_ATTEMPTS)).init();
  }
  @Test public void testWrappedMetaExceptionRetry() throws MetaException {
    IHMSHandler mockBaseHandler=Mockito.mock(HiveMetaStore.HMSHandler.class);
    Mockito.when(mockBaseHandler.getConf()).thenReturn(hiveConf);
    MetaException me=new MetaException("Dummy exception");
    me.initCause(new JDOException());
    InvocationTargetException ex=new InvocationTargetException(me);
    Mockito.doThrow(me).doNothing().when(mockBaseHandler).init();
    RetryingHMSHandler.getProxy(hiveConf,mockBaseHandler,false);
    Mockito.verify(mockBaseHandler,Mockito.times(2)).init();
  }
}
