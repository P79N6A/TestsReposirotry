static class RetryingThriftCLIServiceClientTest extends RetryingThriftCLIServiceClient {
  int callCount=0;
  int connectCount=0;
  static RetryingThriftCLIServiceClientTest handlerInst;
  protected RetryingThriftCLIServiceClientTest(  HiveConf conf){
    super(conf);
  }
  public static CLIServiceClientWrapper newRetryingCLIServiceClient(  HiveConf conf) throws HiveSQLException {
    handlerInst=new RetryingThriftCLIServiceClientTest(conf);
    TTransport tTransport=handlerInst.connectWithRetry(conf.getIntVar(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_CLIENT_RETRY_LIMIT));
    ICLIService cliService=(ICLIService)Proxy.newProxyInstance(RetryingThriftCLIServiceClientTest.class.getClassLoader(),CLIServiceClient.class.getInterfaces(),handlerInst);
    return new CLIServiceClientWrapper(cliService,tTransport,conf);
  }
  @Override protected InvocationResult invokeInternal(  Method method,  Object[] args) throws Throwable {
    System.out.println("## Calling: " + method.getName() + ", "+ callCount+ "/"+ getRetryLimit());
    callCount++;
    return super.invokeInternal(method,args);
  }
  @Override protected synchronized TTransport connect(  HiveConf conf) throws HiveSQLException, TTransportException {
    connectCount++;
    return super.connect(conf);
  }
}
