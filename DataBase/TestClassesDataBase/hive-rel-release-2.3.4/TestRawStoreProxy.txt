public class TestRawStoreProxy {
static class TestStore extends ObjectStore {
    @Override public void setConf(    Configuration conf){
    }
    public void noopMethod() throws MetaException {
      Deadline.checkTimeout();
    }
    public void exceptions() throws IllegalStateException, MetaException {
      Deadline.checkTimeout();
      throw new IllegalStateException("throwing an exception");
    }
  }
  @Test public void testExceptionDispatch() throws Throwable {
    HiveConf hiveConf=new HiveConf();
    hiveConf.setTimeVar(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT,10,TimeUnit.MILLISECONDS);
    RawStoreProxy rsp=new RawStoreProxy(hiveConf,hiveConf,TestStore.class,1);
    try {
      rsp.invoke(null,TestStore.class.getMethod("exceptions"),new Object[]{});
      fail("an exception is expected");
    }
 catch (    IllegalStateException ise) {
    }
    Thread.sleep(20);
    rsp.invoke(null,TestStore.class.getMethod("noopMethod"),new Object[]{});
  }
}
