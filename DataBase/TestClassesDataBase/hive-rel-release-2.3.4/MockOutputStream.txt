public static class MockOutputStream extends FSDataOutputStream {
  private final MockFile file;
  public MockOutputStream(  MockFile file) throws IOException {
    super(new DataOutputBuffer(),null);
    this.file=file;
  }
  /** 
 * Set the blocks and their location for the file. Must be called after the stream is closed or the block length will be wrong.
 * @param blocks the list of blocks
 */
  public void setBlocks(  MockBlock... blocks){
    file.blocks=blocks;
    int offset=0;
    int i=0;
    while (offset < file.length && i < blocks.length) {
      blocks[i].offset=offset;
      blocks[i].length=Math.min(file.length - offset,file.blockSize);
      offset+=blocks[i].length;
      i+=1;
    }
  }
  @Override public void close() throws IOException {
    super.close();
    DataOutputBuffer buf=(DataOutputBuffer)getWrappedStream();
    file.length=buf.getLength();
    file.content=new byte[file.length];
    MockBlock block=new MockBlock("host1");
    block.setLength(file.length);
    setBlocks(block);
    System.arraycopy(buf.getData(),0,file.content,0,file.length);
  }
  @Override public String toString(){
    return "Out stream to " + file.toString();
  }
}
