public static class DerbyConnectorRule extends ExternalResource {
  private DerbyConnectorTestUtility connector;
  private final Supplier<MetadataStorageTablesConfig> dbTables;
  private final MetadataStorageConnectorConfig connectorConfig;
  public DerbyConnectorRule(){
    this("druidTest" + dbSafeUUID());
  }
  private DerbyConnectorRule(  final String defaultBase){
    this(Suppliers.ofInstance(MetadataStorageTablesConfig.fromBase(defaultBase)));
  }
  public DerbyConnectorRule(  Supplier<MetadataStorageTablesConfig> dbTables){
    this.dbTables=dbTables;
    this.connectorConfig=new MetadataStorageConnectorConfig(){
      @Override public String getConnectURI(){
        return connector.getJdbcUri();
      }
    }
;
  }
  @Override protected void before() throws Throwable {
    connector=new DerbyConnectorTestUtility(Suppliers.ofInstance(connectorConfig),dbTables);
    connector.getDBI().open().close();
  }
  @Override protected void after(){
    connector.tearDown();
  }
  public DerbyConnectorTestUtility getConnector(){
    return connector;
  }
  public MetadataStorageConnectorConfig getMetadataConnectorConfig(){
    return connectorConfig;
  }
  public Supplier<MetadataStorageTablesConfig> metadataTablesConfigSupplier(){
    return dbTables;
  }
}
