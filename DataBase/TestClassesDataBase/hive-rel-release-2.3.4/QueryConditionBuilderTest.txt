public class QueryConditionBuilderTest {
  private static String condition1;
  private static String condition2;
  @BeforeClass public static void setup() throws IOException {
    condition1=readFileContents("condition1.xml");
    condition2=readFileContents("condition2.xml");
  }
  private static String readFileContents(  String name) throws IOException {
    try (Scanner s=new Scanner(QueryConditionBuilderTest.class.getClassLoader().getResourceAsStream(name))){
      return s.useDelimiter("\\Z").next();
    }
   }
  @Test public void testSimpleCondition_noTranslation(){
    Configuration conf=new Configuration();
    conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,condition1);
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_id,sentiment,tracking_id");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition,is(equalToIgnoringWhiteSpace("(visitor_id = 'x')")));
  }
  @Test public void testSimpleCondition_withTranslation(){
    Configuration conf=new Configuration();
    conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,condition1);
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_id,sentiment,tracking_id");
    conf.set(JdbcStorageConfig.COLUMN_MAPPING.getPropertyName(),"visitor_id=vid, sentiment=sentiment, tracking_id=tracking_id");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition,is(equalToIgnoringWhiteSpace("(vid = 'x')")));
  }
  @Test public void testSimpleCondition_withDateType(){
    Configuration conf=new Configuration();
    conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,condition1);
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_id,sentiment,tracking_id");
    conf.set(JdbcStorageConfig.COLUMN_MAPPING.getPropertyName(),"visitor_id=vid:date, sentiment=sentiment, tracking_id=tracking_id");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition,is(equalToIgnoringWhiteSpace("({d vid} = 'x')")));
  }
  @Test public void testSimpleCondition_withVariedCaseMappings(){
    Configuration conf=new Configuration();
    conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,condition1);
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_ID,sentiment,tracking_id");
    conf.set(JdbcStorageConfig.COLUMN_MAPPING.getPropertyName(),"visitor_id=VID:date, sentiment=sentiment, tracking_id=tracking_id");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition,is(equalToIgnoringWhiteSpace("({d vid} = 'x')")));
  }
  @Test public void testMultipleConditions_noTranslation(){
    Configuration conf=new Configuration();
    conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,condition2);
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_id,sentiment,tracking_id");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition,is(equalToIgnoringWhiteSpace("((visitor_id = 'x') and (sentiment = 'y'))")));
  }
  @Test public void testMultipleConditions_withTranslation(){
    Configuration conf=new Configuration();
    conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,condition2);
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_id,sentiment,tracking_id");
    conf.set(JdbcStorageConfig.COLUMN_MAPPING.getPropertyName(),"visitor_id=v,sentiment=s,tracking_id=t");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition,is(equalToIgnoringWhiteSpace("((v = 'x') and (s = 'y'))")));
  }
  @Test public void testWithNullConf(){
    String condition=QueryConditionBuilder.getInstance().buildCondition(null);
    assertThat(condition,is(notNullValue()));
    assertThat(condition.trim().isEmpty(),is(true));
  }
  @Test public void testWithUndefinedFilterExpr(){
    Configuration conf=new Configuration();
    conf.set(serdeConstants.LIST_COLUMNS,"visitor_id,sentiment,tracking_id");
    conf.set(JdbcStorageConfig.COLUMN_MAPPING.getPropertyName(),"visitor_id=v,sentiment=s,tracking_id=t");
    String condition=QueryConditionBuilder.getInstance().buildCondition(conf);
    assertThat(condition,is(notNullValue()));
    assertThat(condition.trim().isEmpty(),is(true));
  }
}
