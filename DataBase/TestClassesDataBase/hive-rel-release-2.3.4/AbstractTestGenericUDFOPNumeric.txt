public abstract class AbstractTestGenericUDFOPNumeric {
  public AbstractTestGenericUDFOPNumeric(){
    SessionState ss=new SessionState(new HiveConf());
    ss.getConf().setVar(HiveConf.ConfVars.HIVE_COMPAT,"latest");
    SessionState.setCurrentSessionState(ss);
  }
  protected void verifyReturnType(  GenericUDF udf,  String typeStr1,  String typeStr2,  String expectedTypeStr) throws HiveException {
    PrimitiveTypeInfo type1=TypeInfoFactory.getPrimitiveTypeInfo(typeStr1);
    PrimitiveTypeInfo type2=TypeInfoFactory.getPrimitiveTypeInfo(typeStr2);
    PrimitiveTypeInfo expectedType=TypeInfoFactory.getPrimitiveTypeInfo(expectedTypeStr);
    ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(type1),PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(type2)};
    PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
    Assert.assertEquals("Return type for " + udf.getDisplayString(new String[]{typeStr1,typeStr2}),expectedType,oi.getTypeInfo());
  }
}
