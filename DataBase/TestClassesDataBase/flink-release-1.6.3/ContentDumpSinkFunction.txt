private class ContentDumpSinkFunction extends TwoPhaseCommitSinkFunction<String,ContentTransaction,Void> {
  public ContentDumpSinkFunction(){
    super(new KryoSerializer<>(ContentTransaction.class,new ExecutionConfig()),VoidSerializer.INSTANCE,clock);
  }
  @Override protected void invoke(  ContentTransaction transaction,  String value,  Context context) throws Exception {
    transaction.tmpContentWriter.write(value);
  }
  @Override protected ContentTransaction beginTransaction() throws Exception {
    return new ContentTransaction(tmpDirectory.createWriter(UUID.randomUUID().toString()));
  }
  @Override protected void preCommit(  ContentTransaction transaction) throws Exception {
    transaction.tmpContentWriter.flush();
    transaction.tmpContentWriter.close();
  }
  @Override protected void commit(  ContentTransaction transaction){
    if (throwException.get()) {
      throw new RuntimeException("Expected exception");
    }
    ContentDump.move(transaction.tmpContentWriter.getName(),tmpDirectory,targetDirectory);
  }
  @Override protected void abort(  ContentTransaction transaction){
    transaction.tmpContentWriter.close();
    tmpDirectory.delete(transaction.tmpContentWriter.getName());
  }
}
