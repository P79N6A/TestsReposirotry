/** 
 * Tests for  {@link StateObjectCollection}.
 */
public class StateObjectCollectionTest extends TestLogger {
  @Test public void testEmptyCollection(){
    StateObjectCollection<StateObject> empty=StateObjectCollection.empty();
    Assert.assertEquals(0,empty.getStateSize());
  }
  @Test public void testForwardingCollectionMethods() throws Exception {
    MethodForwardingTestUtil.testMethodForwarding(Collection.class,((Function<Collection,StateObjectCollection>)StateObjectCollection::new));
  }
  @Test public void testForwardingStateObjectMethods() throws Exception {
    MethodForwardingTestUtil.testMethodForwarding(StateObject.class,object -> new StateObjectCollection<>(Collections.singletonList(object)));
  }
  @Test public void testHasState(){
    StateObjectCollection<StateObject> stateObjects=new StateObjectCollection<>(new ArrayList<>());
    Assert.assertFalse(stateObjects.hasState());
    stateObjects=new StateObjectCollection<>(Collections.singletonList(null));
    Assert.assertFalse(stateObjects.hasState());
    stateObjects=new StateObjectCollection<>(Collections.singletonList(mock(StateObject.class)));
    Assert.assertTrue(stateObjects.hasState());
  }
}
