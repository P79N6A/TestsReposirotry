private static class MockOperatorStateStore implements OperatorStateStore {
  private final ListState<?> mockRestoredUnionListState;
  private MockOperatorStateStore(  ListState<?> restoredUnionListState){
    this.mockRestoredUnionListState=restoredUnionListState;
  }
  @Override @SuppressWarnings("unchecked") public <S>ListState<S> getUnionListState(  ListStateDescriptor<S> stateDescriptor) throws Exception {
    return (ListState<S>)mockRestoredUnionListState;
  }
  @Override public <T extends Serializable>ListState<T> getSerializableListState(  String stateName) throws Exception {
    return new TestingListState<>();
  }
  @Override public <S>ListState<S> getOperatorState(  ListStateDescriptor<S> stateDescriptor) throws Exception {
    throw new UnsupportedOperationException();
  }
  @Override public <K,V>BroadcastState<K,V> getBroadcastState(  MapStateDescriptor<K,V> stateDescriptor) throws Exception {
    throw new UnsupportedOperationException();
  }
  @Override public <S>ListState<S> getListState(  ListStateDescriptor<S> stateDescriptor) throws Exception {
    throw new UnsupportedOperationException();
  }
  @Override public Set<String> getRegisteredStateNames(){
    throw new UnsupportedOperationException();
  }
  @Override public Set<String> getRegisteredBroadcastStateNames(){
    throw new UnsupportedOperationException();
  }
}
