private class TestSavepointHandlers {
  private final TriggerId testTriggerId=new TriggerId();
private class TestSavepointTriggerHandler extends TestHandler<SavepointTriggerRequestBody,TriggerResponse,SavepointTriggerMessageParameters> {
    private final Iterator<String> expectedTargetDirectories;
    TestSavepointTriggerHandler(    final String... expectedTargetDirectories){
      super(SavepointTriggerHeaders.getInstance());
      this.expectedTargetDirectories=Arrays.asList(expectedTargetDirectories).iterator();
    }
    @Override protected CompletableFuture<TriggerResponse> handleRequest(    @Nonnull HandlerRequest<SavepointTriggerRequestBody,SavepointTriggerMessageParameters> request,    @Nonnull DispatcherGateway gateway) throws RestHandlerException {
      final String targetDirectory=request.getRequestBody().getTargetDirectory();
      if (Objects.equals(expectedTargetDirectories.next(),targetDirectory)) {
        return CompletableFuture.completedFuture(new TriggerResponse(testTriggerId));
      }
 else {
        return CompletableFuture.completedFuture(new TriggerResponse(new TriggerId()));
      }
    }
  }
private class TestSavepointHandler extends TestHandler<EmptyRequestBody,AsynchronousOperationResult<SavepointInfo>,SavepointStatusMessageParameters> {
    private final Iterator<Object> expectedSavepointResponseBodies;
    TestSavepointHandler(    final Object... expectedSavepointResponseBodies){
      super(SavepointStatusHeaders.getInstance());
      checkArgument(Arrays.stream(expectedSavepointResponseBodies).allMatch(response -> response instanceof SavepointInfo || response instanceof RestHandlerException));
      this.expectedSavepointResponseBodies=Arrays.asList(expectedSavepointResponseBodies).iterator();
    }
    @Override protected CompletableFuture<AsynchronousOperationResult<SavepointInfo>> handleRequest(    @Nonnull HandlerRequest<EmptyRequestBody,SavepointStatusMessageParameters> request,    @Nonnull DispatcherGateway gateway) throws RestHandlerException {
      final TriggerId triggerId=request.getPathParameter(TriggerIdPathParameter.class);
      if (testTriggerId.equals(triggerId)) {
        final Object response=expectedSavepointResponseBodies.next();
        if (response instanceof SavepointInfo) {
          return CompletableFuture.completedFuture(AsynchronousOperationResult.completed(((SavepointInfo)response)));
        }
 else         if (response instanceof RestHandlerException) {
          return FutureUtils.completedExceptionally((RestHandlerException)response);
        }
 else {
          throw new AssertionError();
        }
      }
 else {
        return FutureUtils.completedExceptionally(new RestHandlerException("Unexpected savepoint trigger id: " + triggerId,HttpResponseStatus.BAD_REQUEST));
      }
    }
  }
}
