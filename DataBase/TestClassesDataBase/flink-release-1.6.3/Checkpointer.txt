/** 
 * This calls triggerInterrupt on the given task with the given interval.
 */
private static class Checkpointer implements Callable<Boolean> {
  private final int numCheckpoints;
  private final int checkpointInterval;
  private final AtomicLong checkpointId;
  private final StreamTask<Tuple2<Long,Integer>,?> sourceTask;
  public Checkpointer(  int numCheckpoints,  int checkpointInterval,  StreamTask<Tuple2<Long,Integer>,?> task){
    this.numCheckpoints=numCheckpoints;
    checkpointId=new AtomicLong(0);
    sourceTask=task;
    this.checkpointInterval=checkpointInterval;
  }
  @Override public Boolean call() throws Exception {
    for (int i=0; i < numCheckpoints; i++) {
      long currentCheckpointId=checkpointId.getAndIncrement();
      CheckpointMetaData checkpointMetaData=new CheckpointMetaData(currentCheckpointId,0L);
      sourceTask.triggerCheckpoint(checkpointMetaData,CheckpointOptions.forCheckpointWithDefaultLocation());
      Thread.sleep(checkpointInterval);
    }
    return true;
  }
}
