/** 
 * FlinkTopologyContext.getSources(componentId) and FlinkTopologyContext.getTargets(componentId) are not tested here, because those are tested in StormWrapperSetupHelperTest.
 */
public class FlinkTopologyContextTest extends AbstractTest {
  @Test(expected=UnsupportedOperationException.class) public void testAddTaskHook(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).addTaskHook(null);
  }
  @Test(expected=UnsupportedOperationException.class) public void testGetHooks(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).getHooks();
  }
  @SuppressWarnings("rawtypes") @Test(expected=UnsupportedOperationException.class) public void testRegisteredMetric1(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).registerMetric(null,(ICombiner)null,0);
  }
  @SuppressWarnings("rawtypes") @Test(expected=UnsupportedOperationException.class) public void testRegisteredMetric2(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).registerMetric(null,(IReducer)null,0);
  }
  @Test(expected=UnsupportedOperationException.class) public void testRegisteredMetric3(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).registerMetric(null,(IMetric)null,0);
  }
  @Test(expected=UnsupportedOperationException.class) public void testGetRegisteredMetricByName(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).getRegisteredMetricByName(null);
  }
  @Test(expected=UnsupportedOperationException.class) public void testSetAllSubscribedState(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).setAllSubscribedState(null);
  }
  @Test(expected=UnsupportedOperationException.class) public void testSetSubscribedState1(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).setSubscribedState(null,null);
  }
  @Test(expected=UnsupportedOperationException.class) public void testSetSubscribedState2(){
    new FlinkTopologyContext(new StormTopology(new HashMap<String,SpoutSpec>(),new HashMap<String,Bolt>(),new HashMap<String,StateSpoutSpec>()),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null).setSubscribedState(null,null,null);
  }
}
