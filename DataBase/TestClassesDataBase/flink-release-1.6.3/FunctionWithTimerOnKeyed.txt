/** 
 * {@link KeyedBroadcastProcessFunction} that registers a timer and emitsfor every element the watermark and the timestamp of the element.
 */
private static class FunctionWithTimerOnKeyed extends KeyedBroadcastProcessFunction<String,String,Integer,String> {
  private static final long serialVersionUID=7496674620398203933L;
  private final long timerTS;
  private final String expectedKey;
  FunctionWithTimerOnKeyed(  long timerTS,  String expectedKey){
    this.timerTS=timerTS;
    this.expectedKey=expectedKey;
  }
  @Override public void processBroadcastElement(  Integer value,  Context ctx,  Collector<String> out) throws Exception {
    out.collect("BR:" + value + " WM:"+ ctx.currentWatermark()+ " TS:"+ ctx.timestamp());
  }
  @Override public void processElement(  String value,  ReadOnlyContext ctx,  Collector<String> out) throws Exception {
    ctx.timerService().registerEventTimeTimer(timerTS);
    out.collect("NON-BR:" + value + " WM:"+ ctx.currentWatermark()+ " TS:"+ ctx.timestamp());
  }
  @Override public void onTimer(  long timestamp,  OnTimerContext ctx,  Collector<String> out) throws Exception {
    assertEquals(expectedKey,ctx.getCurrentKey());
    out.collect("TIMER:" + timestamp);
  }
}
