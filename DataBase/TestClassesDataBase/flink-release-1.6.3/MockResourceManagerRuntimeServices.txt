/** 
 * Mock services needed by the resource manager.
 */
class MockResourceManagerRuntimeServices {
  public final ScheduledExecutor scheduledExecutor;
  public final TestingHighAvailabilityServices highAvailabilityServices;
  public final HeartbeatServices heartbeatServices;
  public final MetricRegistry metricRegistry;
  public final TestingLeaderElectionService rmLeaderElectionService;
  public final JobLeaderIdService jobLeaderIdService;
  public final SlotManager slotManager;
  public UUID rmLeaderSessionId;
  MockResourceManagerRuntimeServices() throws Exception {
    scheduledExecutor=mock(ScheduledExecutor.class);
    highAvailabilityServices=new TestingHighAvailabilityServices();
    rmLeaderElectionService=new TestingLeaderElectionService();
    highAvailabilityServices.setResourceManagerLeaderElectionService(rmLeaderElectionService);
    heartbeatServices=new TestingHeartbeatServices(5L,5L,scheduledExecutor);
    metricRegistry=NoOpMetricRegistry.INSTANCE;
    slotManager=new SlotManager(new ScheduledExecutorServiceAdapter(new DirectScheduledExecutorService()),Time.seconds(10),Time.seconds(10),Time.minutes(1));
    jobLeaderIdService=new JobLeaderIdService(highAvailabilityServices,rpcService.getScheduledExecutor(),Time.minutes(5L));
  }
  public void grantLeadership() throws Exception {
    rmLeaderSessionId=UUID.randomUUID();
    rmLeaderElectionService.isLeader(rmLeaderSessionId).get(TIMEOUT.toMilliseconds(),TimeUnit.MILLISECONDS);
  }
}
