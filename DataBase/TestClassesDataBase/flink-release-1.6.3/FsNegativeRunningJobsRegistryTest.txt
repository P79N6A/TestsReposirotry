/** 
 * Tests for the  {@link FsNegativeRunningJobsRegistry} on a local file system.
 */
public class FsNegativeRunningJobsRegistryTest extends TestLogger {
  @Rule public final TemporaryFolder tempFolder=new TemporaryFolder();
  @Test public void testCreateAndSetFinished() throws Exception {
    final File folder=tempFolder.newFolder();
    final String uri=folder.toURI().toString();
    final JobID jid=new JobID();
    FsNegativeRunningJobsRegistry registry=new FsNegativeRunningJobsRegistry(new Path(uri));
    FsNegativeRunningJobsRegistry otherRegistry=new FsNegativeRunningJobsRegistry(new Path(uri));
    assertEquals(JobSchedulingStatus.PENDING,registry.getJobSchedulingStatus(jid));
    assertEquals(JobSchedulingStatus.PENDING,otherRegistry.getJobSchedulingStatus(jid));
    registry.setJobRunning(jid);
    assertEquals(JobSchedulingStatus.RUNNING,registry.getJobSchedulingStatus(jid));
    assertEquals(JobSchedulingStatus.RUNNING,otherRegistry.getJobSchedulingStatus(jid));
    registry.setJobFinished(jid);
    assertEquals(JobSchedulingStatus.DONE,registry.getJobSchedulingStatus(jid));
    assertEquals(JobSchedulingStatus.DONE,otherRegistry.getJobSchedulingStatus(jid));
  }
  @Test public void testSetFinishedAndRunning() throws Exception {
    final File folder=tempFolder.newFolder();
    final String uri=folder.toURI().toString();
    final JobID jid=new JobID();
    FsNegativeRunningJobsRegistry registry=new FsNegativeRunningJobsRegistry(new Path(uri));
    registry.setJobFinished(jid);
    assertEquals(JobSchedulingStatus.DONE,registry.getJobSchedulingStatus(jid));
    registry.setJobRunning(jid);
    assertEquals(JobSchedulingStatus.DONE,registry.getJobSchedulingStatus(jid));
    FsNegativeRunningJobsRegistry otherRegistry=new FsNegativeRunningJobsRegistry(new Path(uri));
    assertEquals(JobSchedulingStatus.DONE,otherRegistry.getJobSchedulingStatus(jid));
    otherRegistry.clearJob(jid);
    assertEquals(JobSchedulingStatus.PENDING,registry.getJobSchedulingStatus(jid));
    assertEquals(JobSchedulingStatus.PENDING,otherRegistry.getJobSchedulingStatus(jid));
  }
}
