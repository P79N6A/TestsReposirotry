/** 
 * Simple test implementation with validation .
 */
static final class ValidatingElementWriterDummy<T> implements KeyGroupPartitioner.ElementWriterFunction<T> {
  @Nonnull private final KeyExtractorFunction<T> keyExtractorFunction;
  @Nonnegative private final int numberOfKeyGroups;
  @Nonnull private final Set<T> allElementsSet;
  @Nonnegative private int currentKeyGroup;
  ValidatingElementWriterDummy(  @Nonnull KeyExtractorFunction<T> keyExtractorFunction,  @Nonnegative int numberOfKeyGroups,  @Nonnull Set<T> allElementsSet){
    this.keyExtractorFunction=keyExtractorFunction;
    this.numberOfKeyGroups=numberOfKeyGroups;
    this.allElementsSet=allElementsSet;
  }
  @Override public void writeElement(  @Nonnull T element,  @Nonnull DataOutputView dov){
    Assert.assertTrue(allElementsSet.remove(element));
    Assert.assertEquals(currentKeyGroup,KeyGroupRangeAssignment.assignToKeyGroup(keyExtractorFunction.extractKeyFromElement(element),numberOfKeyGroups));
  }
  void validateAllElementsSeen(){
    Assert.assertTrue(allElementsSet.isEmpty());
  }
  void setCurrentKeyGroup(  int currentKeyGroup){
    this.currentKeyGroup=currentKeyGroup;
  }
}
