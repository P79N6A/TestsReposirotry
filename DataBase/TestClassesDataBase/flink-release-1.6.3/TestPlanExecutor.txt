static class TestPlanExecutor extends PlanExecutor {
  private String host;
  private int port;
  private Configuration configuration;
  private List<String> jars;
  private List<String> globalClasspaths;
  @Override public void start() throws Exception {
  }
  @Override public void stop() throws Exception {
  }
  @Override public boolean isRunning(){
    return false;
  }
  @Override public JobExecutionResult executePlan(  Plan plan) throws Exception {
    return null;
  }
  @Override public String getOptimizerPlanAsJSON(  Plan plan) throws Exception {
    return null;
  }
  @Override public void endSession(  JobID jobID) throws Exception {
  }
  public String getHost(){
    return host;
  }
  public void setHost(  String host){
    this.host=host;
  }
  public int getPort(){
    return port;
  }
  public void setPort(  int port){
    this.port=port;
  }
  public Configuration getConfiguration(){
    return configuration;
  }
  public void setConfiguration(  Configuration configuration){
    this.configuration=configuration;
  }
  public List<String> getJars(){
    return jars;
  }
  public void setJars(  List<String> jars){
    this.jars=jars;
  }
  public List<String> getGlobalClasspaths(){
    return globalClasspaths;
  }
  public void setGlobalClasspaths(  List<String> globalClasspaths){
    this.globalClasspaths=globalClasspaths;
  }
}
