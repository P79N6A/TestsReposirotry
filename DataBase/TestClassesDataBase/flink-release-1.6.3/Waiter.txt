private static class Waiter implements Runnable {
  private final SuperstepKickoffLatch latch;
  private final int waitFor;
  private volatile Throwable error;
  public Waiter(  SuperstepKickoffLatch latch,  int waitFor){
    this.latch=latch;
    this.waitFor=waitFor;
  }
  @Override public void run(){
    try {
      latch.awaitStartOfSuperstepOrTermination(waitFor);
    }
 catch (    Throwable t) {
      this.error=t;
    }
  }
  public Throwable getError(){
    return error;
  }
}
