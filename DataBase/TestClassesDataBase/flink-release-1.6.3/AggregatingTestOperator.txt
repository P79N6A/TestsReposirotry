/** 
 * An operator that uses  {@link AggregatingState}. <p>The operator exists for lack of possibility to get an {@link AggregatingState} from the {@link org.apache.flink.api.common.functions.RuntimeContext}. If this were not the case, we could have a  {@link ProcessFunction}.
 */
private static class AggregatingTestOperator extends AbstractStreamOperator<String> implements OneInputStreamOperator<Tuple2<Integer,Long>,String> {
  private static final long serialVersionUID=1L;
  private final AggregatingStateDescriptor<Tuple2<Integer,Long>,String,String> stateDescriptor;
  private transient AggregatingState<Tuple2<Integer,Long>,String> state;
  AggregatingTestOperator(  AggregatingStateDescriptor<Tuple2<Integer,Long>,String,String> stateDesc){
    this.stateDescriptor=stateDesc;
  }
  @Override public void open() throws Exception {
    super.open();
    this.state=getKeyedStateBackend().getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,stateDescriptor);
  }
  @Override public void processElement(  StreamRecord<Tuple2<Integer,Long>> element) throws Exception {
    state.add(element.getValue());
  }
}
