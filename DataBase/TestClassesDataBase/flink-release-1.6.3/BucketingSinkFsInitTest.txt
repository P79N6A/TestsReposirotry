/** 
 * Tests for the file system initialization of the Bucketing sink. <p>NOTE: These tests can probably go away once the bucketing sink has been migrated to properly use Flink's file system abstraction.
 */
public class BucketingSinkFsInitTest {
  @Rule public final TemporaryFolder tempFolder=new TemporaryFolder();
  @Before public void activateSafetyNet(){
    FileSystemSafetyNet.initializeSafetyNetForThread();
  }
  @After public void deactivateSafetyNet(){
    FileSystemSafetyNet.closeSafetyNetAndGuardedResourcesForThread();
  }
  @Test public void testInitForLocalFileSystem() throws Exception {
    final Path path=new Path(tempFolder.newFolder().toURI());
    FileSystem fs=BucketingSink.createHadoopFileSystem(path,null);
    assertEquals("file",fs.getUri().getScheme());
  }
  @Test public void testInitForHadoopFileSystem() throws Exception {
    final Path path=new Path("hdfs://localhost:51234/some/path/");
    FileSystem fs=BucketingSink.createHadoopFileSystem(path,null);
    assertEquals("hdfs",fs.getUri().getScheme());
  }
  @Test(expected=UnsupportedFileSystemSchemeException.class) public void testInitForUnsupportedFileSystem() throws Exception {
    final Path path=new Path("nofs://localhost:51234/some/path/");
    BucketingSink.createHadoopFileSystem(path,null);
  }
}
