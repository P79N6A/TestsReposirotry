/** 
 * WordCount with collection example.
 */
public class WordCountWithCollectionITCase extends JavaProgramTestBase {
  private final List<Tuple2<String,Integer>> resultsCollected=new ArrayList<Tuple2<String,Integer>>();
  @Override protected void postSubmit() throws Exception {
    String[] result=new String[resultsCollected.size()];
    for (int i=0; i < result.length; i++) {
      result[i]=resultsCollected.get(i).toString();
    }
    Arrays.sort(result);
    String[] expected=WordCountData.COUNTS_AS_TUPLES.split("\n");
    Arrays.sort(expected);
    Assert.assertEquals("Different number of lines in expected and obtained result.",expected.length,result.length);
    Assert.assertArrayEquals(expected,result);
  }
  @Override protected void testProgram() throws Exception {
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<String> text=env.fromElements(WordCountData.TEXT);
    DataSet<Tuple2<String,Integer>> words=text.flatMap(new WordCount.Tokenizer());
    DataSet<Tuple2<String,Integer>> result=words.groupBy(0).aggregate(Aggregations.SUM,1);
    result.output(new LocalCollectionOutputFormat<Tuple2<String,Integer>>(resultsCollected));
    env.execute("Word Count Collection");
  }
}
