static class TestHandler extends AbstractRestHandler<RestfulGateway,TestRequest,TestResponse,TestParameters> {
  private CompletableFuture<Void> closeFuture=CompletableFuture.completedFuture(null);
  private Function<Integer,CompletableFuture<TestResponse>> handlerBody;
  TestHandler(  CompletableFuture<String> localAddressFuture,  GatewayRetriever<RestfulGateway> leaderRetriever,  Time timeout){
    super(localAddressFuture,leaderRetriever,timeout,Collections.emptyMap(),new TestHeaders());
  }
  @Override protected CompletableFuture<TestResponse> handleRequest(  @Nonnull HandlerRequest<TestRequest,TestParameters> request,  RestfulGateway gateway){
    assertEquals(request.getPathParameter(JobIDPathParameter.class),PATH_JOB_ID);
    assertEquals(request.getQueryParameter(JobIDQueryParameter.class).get(0),QUERY_JOB_ID);
    final int id=request.getRequestBody().id;
    return handlerBody.apply(id);
  }
  @Override public CompletableFuture<Void> closeHandlerAsync(){
    return closeFuture;
  }
}
