private static class MyTimestampSourceInfinite implements SourceFunction<Integer>, StoppableFunction {
  private final long initialTime;
  private final int numWatermarks;
  private volatile boolean running=true;
  public MyTimestampSourceInfinite(  long initialTime,  int numWatermarks){
    this.initialTime=initialTime;
    this.numWatermarks=numWatermarks;
  }
  @Override public void run(  SourceContext<Integer> ctx) throws Exception {
    for (int i=0; i < numWatermarks; i++) {
      ctx.collectWithTimestamp(i,initialTime + i);
      ctx.emitWatermark(new Watermark(initialTime + i));
    }
    while (running) {
      Thread.sleep(20);
    }
  }
  @Override public void cancel(){
    running=false;
  }
  @Override public void stop(){
    running=false;
  }
}
