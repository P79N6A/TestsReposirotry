/** 
 * A  {@link TriggerableFailOnWatermarkTestOperator} that generates watermarks.
 */
private static class WatermarkGeneratingTestOperator extends TriggerableFailOnWatermarkTestOperator {
  private static final long serialVersionUID=-5064871833244157221L;
  private long lastWatermark;
  @Override protected void handleElement(  StreamRecord<String> element){
    long timestamp=Long.valueOf(element.getValue());
    if (timestamp > lastWatermark) {
      output.emitWatermark(new Watermark(timestamp));
      lastWatermark=timestamp;
    }
  }
  @Override protected void handleWatermark(  Watermark mark){
    if (mark.equals(Watermark.MAX_WATERMARK)) {
      output.emitWatermark(mark);
      lastWatermark=Long.MAX_VALUE;
    }
  }
}
