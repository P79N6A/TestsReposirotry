private static class CombiningIterator<T> implements MutableObjectIterator<T> {
  private final MutableObjectIterator<T> left;
  private final MutableObjectIterator<T> right;
  public CombiningIterator(  MutableObjectIterator<T> left,  MutableObjectIterator<T> right){
    this.left=left;
    this.right=right;
  }
  @Override public T next(  T reuse) throws IOException {
    T value=left.next(reuse);
    if (value == null) {
      return right.next(reuse);
    }
 else {
      return value;
    }
  }
  @Override public T next() throws IOException {
    T value=left.next();
    if (value == null) {
      return right.next();
    }
 else {
      return value;
    }
  }
}
