/** 
 * Tests for the JobMetricsHandler.
 */
public class JobMetricsHandlerTest extends TestLogger {
  @Test public void testGetPaths(){
    JobMetricsHandler handler=new JobMetricsHandler(Executors.directExecutor(),mock(MetricFetcher.class));
    String[] paths=handler.getPaths();
    Assert.assertEquals(1,paths.length);
    Assert.assertEquals("/jobs/:jobid/metrics",paths[0]);
  }
  @Test public void getMapFor() throws Exception {
    MetricFetcher fetcher=new MetricFetcher(mock(GatewayRetriever.class),mock(MetricQueryServiceRetriever.class),Executors.directExecutor(),TestingUtils.TIMEOUT());
    MetricStore store=MetricStoreTest.setupStore(fetcher.getMetricStore());
    JobMetricsHandler handler=new JobMetricsHandler(Executors.directExecutor(),fetcher);
    Map<String,String> pathParams=new HashMap<>();
    pathParams.put(PARAMETER_JOB_ID,"jobid");
    Map<String,String> metrics=handler.getMapFor(pathParams,store);
    assertEquals("2",metrics.get("abc.metric3"));
    assertEquals("3",metrics.get("abc.metric4"));
  }
  @Test public void getMapForNull(){
    MetricFetcher fetcher=new MetricFetcher(mock(GatewayRetriever.class),mock(MetricQueryServiceRetriever.class),Executors.directExecutor(),TestingUtils.TIMEOUT());
    MetricStore store=fetcher.getMetricStore();
    JobMetricsHandler handler=new JobMetricsHandler(Executors.directExecutor(),fetcher);
    Map<String,String> pathParams=new HashMap<>();
    Map<String,String> metrics=handler.getMapFor(pathParams,store);
    assertNull(metrics);
  }
}
