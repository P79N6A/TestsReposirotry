/** 
 * Tests a join, which leads to a deadlock with large data sizes and PIPELINED-only execution.
 * @see <a href="https://issues.apache.org/jira/browse/FLINK-1343">FLINK-1343</a>
 */
public class JoinDeadlockITCase extends JavaProgramTestBase {
  protected String resultPath;
  @Rule public Timeout globalTimeout=new Timeout(120 * 1000);
  @Override protected void preSubmit() throws Exception {
    resultPath=getTempDirPath("result");
  }
  @Override protected void testProgram() throws Exception {
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Long> longs=env.generateSequence(0,100000);
    DataSet<Tuple1<Long>> longT1=longs.map(new TupleWrapper());
    DataSet<Tuple1<Long>> longT2=longT1.project(0);
    DataSet<Tuple1<Long>> longT3=longs.map(new TupleWrapper());
    longT2.join(longT3).where(0).equalTo(0).projectFirst(0).join(longT1).where(0).equalTo(0).projectFirst(0).writeAsText(resultPath);
    env.execute();
  }
private static class TupleWrapper implements MapFunction<Long,Tuple1<Long>> {
    @Override public Tuple1<Long> map(    Long l) throws Exception {
      return new Tuple1<Long>(l);
    }
  }
}
