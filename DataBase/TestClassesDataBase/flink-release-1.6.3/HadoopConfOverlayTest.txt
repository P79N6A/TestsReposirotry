public class HadoopConfOverlayTest extends ContainerOverlayTestBase {
  @Rule public TemporaryFolder tempFolder=new TemporaryFolder();
  @Test public void testConfigure() throws Exception {
    File confDir=tempFolder.newFolder();
    initConfDir(confDir);
    HadoopConfOverlay overlay=new HadoopConfOverlay(confDir);
    ContainerSpecification spec=new ContainerSpecification();
    overlay.configure(spec);
    assertEquals(TARGET_CONF_DIR.getPath(),spec.getEnvironmentVariables().get("HADOOP_CONF_DIR"));
    assertEquals(TARGET_CONF_DIR.getPath(),spec.getDynamicConfiguration().getString(ConfigConstants.PATH_HADOOP_CONFIG,null));
    checkArtifact(spec,new Path(TARGET_CONF_DIR,"core-site.xml"));
    checkArtifact(spec,new Path(TARGET_CONF_DIR,"hdfs-site.xml"));
  }
  @Test public void testNoConf() throws Exception {
    HadoopConfOverlay overlay=new HadoopConfOverlay(null);
    ContainerSpecification containerSpecification=new ContainerSpecification();
    overlay.configure(containerSpecification);
  }
  @Test public void testBuilderFromEnvironment() throws Exception {
    HadoopConfOverlay.Builder builder;
    Map<String,String> env;
    File confDir=tempFolder.newFolder();
    initConfDir(confDir);
    Configuration conf=new Configuration();
    conf.setString(ConfigConstants.PATH_HADOOP_CONFIG,confDir.getAbsolutePath());
    builder=HadoopConfOverlay.newBuilder().fromEnvironment(conf);
    assertEquals(confDir,builder.hadoopConfDir);
    env=new HashMap<String,String>(System.getenv());
    env.remove("HADOOP_HOME");
    env.put("HADOOP_CONF_DIR",confDir.getAbsolutePath());
    CommonTestUtils.setEnv(env);
    builder=HadoopConfOverlay.newBuilder().fromEnvironment(new Configuration());
    assertEquals(confDir,builder.hadoopConfDir);
    File homeDir=tempFolder.newFolder();
    confDir=initConfDir(new File(homeDir,"conf"));
    env=new HashMap<String,String>(System.getenv());
    env.remove("HADOOP_CONF_DIR");
    env.put("HADOOP_HOME",homeDir.getAbsolutePath());
    CommonTestUtils.setEnv(env);
    builder=HadoopConfOverlay.newBuilder().fromEnvironment(new Configuration());
    assertEquals(confDir,builder.hadoopConfDir);
    homeDir=tempFolder.newFolder();
    confDir=initConfDir(new File(homeDir,"etc/hadoop"));
    env=new HashMap<String,String>(System.getenv());
    env.remove("HADOOP_CONF_DIR");
    env.put("HADOOP_HOME",homeDir.getAbsolutePath());
    CommonTestUtils.setEnv(env);
    builder=HadoopConfOverlay.newBuilder().fromEnvironment(new Configuration());
    assertEquals(confDir,builder.hadoopConfDir);
  }
  private File initConfDir(  File confDir) throws Exception {
    confDir.mkdirs();
    new File(confDir,"core-site.xml").createNewFile();
    new File(confDir,"hdfs-site.xml").createNewFile();
    return confDir;
  }
}
