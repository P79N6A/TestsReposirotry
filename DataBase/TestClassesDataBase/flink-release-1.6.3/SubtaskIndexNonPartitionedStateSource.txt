private static class SubtaskIndexNonPartitionedStateSource extends SubtaskIndexSource implements ListCheckpointed<Integer> {
  private static final long serialVersionUID=8388073059042040203L;
  SubtaskIndexNonPartitionedStateSource(  int numberKeys,  int numberElements,  boolean terminateAfterEmission){
    super(numberKeys,numberElements,terminateAfterEmission);
  }
  @Override public List<Integer> snapshotState(  long checkpointId,  long timestamp) throws Exception {
    return Collections.singletonList(this.counter);
  }
  @Override public void restoreState(  List<Integer> state) throws Exception {
    if (state.isEmpty() || state.size() > 1) {
      throw new RuntimeException("Test failed due to unexpected recovered state size " + state.size());
    }
    this.counter=state.get(0);
  }
}
