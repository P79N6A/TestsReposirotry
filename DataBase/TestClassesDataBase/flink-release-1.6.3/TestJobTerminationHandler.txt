private class TestJobTerminationHandler extends TestHandler<EmptyRequestBody,EmptyResponseBody,JobTerminationMessageParameters> {
  private volatile boolean jobCanceled=false;
  private volatile boolean jobStopped=false;
  private TestJobTerminationHandler(){
    super(JobTerminationHeaders.getInstance());
  }
  @Override protected CompletableFuture<EmptyResponseBody> handleRequest(  @Nonnull HandlerRequest<EmptyRequestBody,JobTerminationMessageParameters> request,  @Nonnull DispatcherGateway gateway) throws RestHandlerException {
switch (request.getQueryParameter(TerminationModeQueryParameter.class).get(0)) {
case CANCEL:
      jobCanceled=true;
    break;
case STOP:
  jobStopped=true;
break;
}
return CompletableFuture.completedFuture(EmptyResponseBody.getInstance());
}
}
