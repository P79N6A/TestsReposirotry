/** 
 * The RM with some test-specific behavior.
 */
static class TestingMesosFlinkResourceManager extends MesosFlinkResourceManager {
  public TestProbe connectionMonitor=new TestProbe(system);
  public TestProbe taskRouter=new TestProbe(system);
  public TestProbe launchCoordinator=new TestProbe(system);
  public TestProbe reconciliationCoordinator=new TestProbe(system);
  public TestingMesosFlinkResourceManager(  Configuration flinkConfig,  MesosConfiguration mesosConfig,  MesosWorkerStore workerStore,  LeaderRetrievalService leaderRetrievalService,  MesosTaskManagerParameters taskManagerParameters,  ContainerSpecification taskManagerContainerSpec,  MesosArtifactResolver artifactResolver,  int maxFailedTasks,  int numInitialTaskManagers){
    super(flinkConfig,mesosConfig,workerStore,leaderRetrievalService,taskManagerParameters,taskManagerContainerSpec,artifactResolver,maxFailedTasks,numInitialTaskManagers);
  }
  @Override protected ActorRef createConnectionMonitor(){
    return connectionMonitor.ref();
  }
  @Override protected ActorRef createTaskRouter(){
    return taskRouter.ref();
  }
  @Override protected ActorRef createLaunchCoordinator(){
    return launchCoordinator.ref();
  }
  @Override protected ActorRef createReconciliationCoordinator(){
    return reconciliationCoordinator.ref();
  }
  @Override protected void fatalError(  String message,  Throwable error){
    context().stop(self());
  }
}
