/** 
 * Tests for the  {@link ListStateDescriptor}.
 */
public class ListStateDescriptorTest {
  @Test public void testListStateDescriptor() throws Exception {
    TypeSerializer<String> serializer=new KryoSerializer<>(String.class,new ExecutionConfig());
    ListStateDescriptor<String> descr=new ListStateDescriptor<>("testName",serializer);
    assertEquals("testName",descr.getName());
    assertNotNull(descr.getSerializer());
    assertTrue(descr.getSerializer() instanceof ListSerializer);
    assertNotNull(descr.getElementSerializer());
    assertEquals(serializer,descr.getElementSerializer());
    ListStateDescriptor<String> copy=CommonTestUtils.createCopySerializable(descr);
    assertEquals("testName",copy.getName());
    assertNotNull(copy.getSerializer());
    assertTrue(copy.getSerializer() instanceof ListSerializer);
    assertNotNull(copy.getElementSerializer());
    assertEquals(serializer,copy.getElementSerializer());
  }
  @Test public void testHashCodeEquals() throws Exception {
    final String name="testName";
    ListStateDescriptor<String> original=new ListStateDescriptor<>(name,String.class);
    ListStateDescriptor<String> same=new ListStateDescriptor<>(name,String.class);
    ListStateDescriptor<String> sameBySerializer=new ListStateDescriptor<>(name,StringSerializer.INSTANCE);
    assertEquals(original.hashCode(),same.hashCode());
    assertEquals(original.hashCode(),sameBySerializer.hashCode());
    assertEquals(original,same);
    assertEquals(original,sameBySerializer);
    ListStateDescriptor<String> clone=CommonTestUtils.createCopySerializable(original);
    assertEquals(original,clone);
    clone.initializeSerializerUnlessSet(new ExecutionConfig());
    assertEquals(original,clone);
    original.initializeSerializerUnlessSet(new ExecutionConfig());
    assertEquals(original,same);
  }
  /** 
 * FLINK-6775. <p>Tests that the returned serializer is duplicated. This allows to share the state descriptor.
 */
  @Test public void testSerializerDuplication(){
    TypeSerializer<String> statefulSerializer=new KryoSerializer<>(String.class,new ExecutionConfig());
    ListStateDescriptor<String> descr=new ListStateDescriptor<>("foobar",statefulSerializer);
    TypeSerializer<String> serializerA=descr.getElementSerializer();
    TypeSerializer<String> serializerB=descr.getElementSerializer();
    assertNotSame(serializerA,serializerB);
    TypeSerializer<List<String>> listSerializerA=descr.getSerializer();
    TypeSerializer<List<String>> listSerializerB=descr.getSerializer();
    assertNotSame(listSerializerA,listSerializerB);
  }
}
