/** 
 * Tests for  {@link HITS}.
 */
@RunWith(Parameterized.class) public class HITSITCase extends DriverBaseITCase {
  public HITSITCase(  String idType,  TestExecutionMode mode){
    super(idType,mode);
  }
  private String[] parameters(  int scale,  String output){
    return new String[]{"--algorithm","HITS","--input","RMatGraph","--scale",Integer.toString(scale),"--type",idType,"--simplify","directed","--output",output};
  }
  @Test public void testLongDescription() throws Exception {
    String expected=regexSubstring(new HITS().getLongDescription());
    expectedOutputFromException(new String[]{"--algorithm","HITS"},expected,ProgramParametrizationException.class);
  }
  @Test public void testPrintWithRMatGraph() throws Exception {
    Assume.assumeFalse(idType.equals("char") || idType.equals("nativeChar"));
    expectedCount(parameters(8,"print"),233);
  }
  @Test public void testParallelism() throws Exception {
    TestUtils.verifyParallelism(parameters(8,"print"));
  }
}
