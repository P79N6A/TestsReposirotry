/** 
 * {@link RestfulGateway} implementation which counts the number of {@link #requestJob(JobID,Time)} calls.
 */
private static class CountingRestfulGateway extends TestingRestfulGateway {
  private final JobID expectedJobId;
  private AtomicInteger numRequestJobCalls=new AtomicInteger(0);
  private CountingRestfulGateway(  JobID expectedJobId,  Function<JobID,CompletableFuture<? extends AccessExecutionGraph>> requestJobFunction){
    this.expectedJobId=Preconditions.checkNotNull(expectedJobId);
    this.requestJobFunction=Preconditions.checkNotNull(requestJobFunction);
  }
  @Override public CompletableFuture<? extends AccessExecutionGraph> requestJob(  JobID jobId,  Time timeout){
    assertThat(jobId,Matchers.equalTo(expectedJobId));
    numRequestJobCalls.incrementAndGet();
    return super.requestJob(jobId,timeout);
  }
  public int getNumRequestJobCalls(){
    return numRequestJobCalls.get();
  }
}
