/** 
 * Integration tests for  {@link LocalExecutor}.
 */
public class LocalExecutorITCase extends TestLogger {
  private static final int parallelism=4;
  @Test public void testLocalExecutorWithWordCount(){
    try {
      File inFile=File.createTempFile("wctext",".in");
      File outFile=File.createTempFile("wctext",".out");
      inFile.deleteOnExit();
      outFile.deleteOnExit();
      try (FileWriter fw=new FileWriter(inFile)){
        fw.write(WordCountData.TEXT);
      }
       LocalExecutor executor=new LocalExecutor();
      executor.setDefaultOverwriteFiles(true);
      executor.setTaskManagerNumSlots(parallelism);
      executor.setPrintStatusDuringExecution(false);
      executor.start();
      Plan wcPlan=getWordCountPlan(inFile,outFile,parallelism);
      wcPlan.setExecutionConfig(new ExecutionConfig());
      executor.executePlan(wcPlan);
      executor.stop();
    }
 catch (    Exception e) {
      e.printStackTrace();
      Assert.fail(e.getMessage());
    }
  }
  private Plan getWordCountPlan(  File inFile,  File outFile,  int parallelism){
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    env.setParallelism(parallelism);
    env.readTextFile(inFile.getAbsolutePath()).flatMap(new Tokenizer()).groupBy(0).sum(1).writeAsCsv(outFile.getAbsolutePath());
    return env.createProgramPlan();
  }
}
