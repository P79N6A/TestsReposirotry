/** 
 * Stream that throws  {@link IOException} on all relevant methods under test.
 */
private static class FailingCheckpointOutStream extends CheckpointStreamFactory.CheckpointStateOutputStream {
  private boolean closed=false;
  @Nullable @Override public StreamStateHandle closeAndGetHandle() throws IOException {
    throw new IOException();
  }
  @Override public long getPos() throws IOException {
    return 0;
  }
  @Override public void write(  int b) throws IOException {
    throw new IOException();
  }
  @Override public void flush() throws IOException {
    throw new IOException();
  }
  @Override public void sync() throws IOException {
    throw new IOException();
  }
  @Override public void close() throws IOException {
    this.closed=true;
  }
  public boolean isClosed(){
    return closed;
  }
}
