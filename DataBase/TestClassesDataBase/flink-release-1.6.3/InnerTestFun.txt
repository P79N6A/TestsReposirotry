static class InnerTestFun extends AbstractRichFunction implements MapFunction<Integer,Integer>, CheckpointedFunction {
  private static final long serialVersionUID=1L;
  private ListState<Integer> serializableListState;
  private boolean wasRestored;
  public InnerTestFun(){
    wasRestored=false;
  }
  @Override public void snapshotState(  FunctionSnapshotContext context) throws Exception {
    if (!wasRestored) {
      serializableListState.add(42);
    }
  }
  @Override public void initializeState(  FunctionInitializationContext context) throws Exception {
    serializableListState=context.getOperatorStateStore().getListState(new ListStateDescriptor<>("test-state",IntSerializer.INSTANCE));
    if (context.isRestored()) {
      Iterator<Integer> integers=serializableListState.get().iterator();
      int act=integers.next();
      Assert.assertEquals(42,act);
      Assert.assertFalse(integers.hasNext());
      wasRestored=true;
    }
  }
  @Override public Integer map(  Integer value) throws Exception {
    return value;
  }
}
