public static class ComplexNestedObject2 {
  private long longValue;
  private Map<String,ComplexNestedObject1> theMap=new HashMap<String,ComplexNestedObject1>();
  public ComplexNestedObject2(){
  }
  public ComplexNestedObject2(  Random rnd){
    this.longValue=rnd.nextLong();
    this.theMap.put(String.valueOf(rnd.nextLong()),new ComplexNestedObject1(rnd.nextInt()));
    this.theMap.put(String.valueOf(rnd.nextLong()),new ComplexNestedObject1(rnd.nextInt()));
    this.theMap.put(String.valueOf(rnd.nextLong()),new ComplexNestedObject1(rnd.nextInt()));
    this.theMap.put(String.valueOf(rnd.nextLong()),new ComplexNestedObject1(rnd.nextInt()));
    this.theMap.put(String.valueOf(rnd.nextLong()),new ComplexNestedObject1(rnd.nextInt()));
    this.theMap.put(String.valueOf(rnd.nextLong()),new ComplexNestedObject1(rnd.nextInt()));
  }
  @Override public boolean equals(  Object obj){
    if (obj.getClass() == ComplexNestedObject2.class) {
      ComplexNestedObject2 other=(ComplexNestedObject2)obj;
      return other.longValue == this.longValue && this.theMap.equals(other.theMap);
    }
 else {
      return false;
    }
  }
}
