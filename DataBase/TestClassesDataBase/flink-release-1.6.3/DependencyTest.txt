/** 
 * Dependency tests for  {@link LocalExecutor}. Mainly for testing classloading of dependencies.
 */
public class DependencyTest {
  public static final String CONNECTOR_TYPE_VALUE="test-connector";
  public static final String TEST_PROPERTY="test-property";
  public static final String CONNECTOR_TEST_PROPERTY="connector.test-property";
  private static final String FACTORY_ENVIRONMENT_FILE="test-sql-client-factory.yaml";
  private static final String TABLE_FACTORY_JAR_FILE="table-factories-test-jar.jar";
  @Test public void testTableFactoryDiscovery() throws Exception {
    final Map<String,String> replaceVars=new HashMap<>();
    replaceVars.put("$VAR_0",CONNECTOR_TYPE_VALUE);
    replaceVars.put("$VAR_1",TEST_PROPERTY);
    replaceVars.put("$VAR_2","test-value");
    final Environment env=EnvironmentFileUtil.parseModified(FACTORY_ENVIRONMENT_FILE,replaceVars);
    final URL dependency=Paths.get("target",TABLE_FACTORY_JAR_FILE).toUri().toURL();
    final LocalExecutor executor=new LocalExecutor(env,Collections.singletonList(dependency),new Configuration(),new DefaultCLI(new Configuration()));
    final SessionContext session=new SessionContext("test-session",new Environment());
    final TableSchema result=executor.getTableSchema(session,"TableNumber1");
    final TableSchema expected=TableSchema.builder().field("IntegerField1",Types.INT()).field("StringField1",Types.STRING()).field("rowtimeField",Types.SQL_TIMESTAMP()).build();
    assertEquals(expected,result);
  }
}
