private static class BrokerRestartingMapper<T> extends RichMapFunction<T,T> implements CheckpointedFunction, CheckpointListener {
  private static final long serialVersionUID=6334389850158707313L;
  public static volatile boolean triggeredShutdown;
  public static volatile int lastSnapshotedElementBeforeShutdown;
  public static volatile Runnable shutdownAction;
  private final int failCount;
  private int numElementsTotal;
  private boolean failer;
  public static void resetState(  Runnable shutdownAction){
    triggeredShutdown=false;
    lastSnapshotedElementBeforeShutdown=0;
    BrokerRestartingMapper.shutdownAction=shutdownAction;
  }
  public BrokerRestartingMapper(  int failCount){
    this.failCount=failCount;
  }
  @Override public void open(  Configuration parameters){
    failer=getRuntimeContext().getIndexOfThisSubtask() == 0;
  }
  @Override public T map(  T value) throws Exception {
    numElementsTotal++;
    Thread.sleep(10);
    if (!triggeredShutdown && failer && numElementsTotal >= failCount) {
      triggeredShutdown=true;
      shutdownAction.run();
    }
    return value;
  }
  @Override public void notifyCheckpointComplete(  long checkpointId){
  }
  @Override public void snapshotState(  FunctionSnapshotContext context) throws Exception {
    if (!triggeredShutdown) {
      lastSnapshotedElementBeforeShutdown=numElementsTotal;
    }
  }
  @Override public void initializeState(  FunctionInitializationContext context) throws Exception {
  }
}
