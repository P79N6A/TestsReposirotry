/** 
 * Sends the subtask index a configurable number of times in a round-robin fashion.
 */
public static class RoundRobinSubtaskIndexSender extends AbstractInvokable {
  public static final String CONFIG_KEY="number-of-times-to-send";
  public RoundRobinSubtaskIndexSender(  Environment environment){
    super(environment);
  }
  @Override public void invoke() throws Exception {
    RecordWriter<IntValue> writer=new RecordWriter<>(getEnvironment().getWriter(0));
    final int numberOfTimesToSend=getTaskConfiguration().getInteger(CONFIG_KEY,0);
    final IntValue subtaskIndex=new IntValue(getEnvironment().getTaskInfo().getIndexOfThisSubtask());
    try {
      for (int i=0; i < numberOfTimesToSend; i++) {
        writer.emit(subtaskIndex);
      }
      writer.flushAll();
    }
  finally {
      writer.clearBuffers();
    }
  }
}
