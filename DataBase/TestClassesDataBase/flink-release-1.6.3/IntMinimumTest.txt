public class IntMinimumTest {
  @Test public void testGet(){
    IntMinimum min=new IntMinimum();
    assertEquals(Integer.MAX_VALUE,min.getLocalValue().intValue());
  }
  @Test public void testResetLocal(){
    IntMinimum min=new IntMinimum();
    int value=13;
    min.add(value);
    assertEquals(value,min.getLocalValue().intValue());
    min.resetLocal();
    assertEquals(Integer.MAX_VALUE,min.getLocalValue().intValue());
  }
  @Test public void testAdd(){
    IntMinimum min=new IntMinimum();
    min.add(1234);
    min.add(9876);
    min.add(-987);
    min.add(-123);
    assertEquals(-987,min.getLocalValue().intValue());
  }
  @Test public void testMerge(){
    IntMinimum min1=new IntMinimum();
    min1.add(1234);
    IntMinimum min2=new IntMinimum();
    min2.add(5678);
    min2.merge(min1);
    assertEquals(1234,min2.getLocalValue().intValue());
    min1.merge(min2);
    assertEquals(1234,min1.getLocalValue().intValue());
  }
  @Test public void testClone(){
    IntMinimum min=new IntMinimum();
    int value=42;
    min.add(value);
    IntMinimum clone=min.clone();
    assertEquals(value,clone.getLocalValue().intValue());
  }
}
