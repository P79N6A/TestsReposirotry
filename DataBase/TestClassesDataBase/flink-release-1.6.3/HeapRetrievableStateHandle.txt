static class HeapRetrievableStateHandle<T extends Serializable> implements RetrievableStateHandle<T> {
  private static final long serialVersionUID=-268548467968932L;
  private static AtomicInteger nextKey=new AtomicInteger(0);
  private static HashMap<Integer,Object> stateMap=new HashMap<>();
  private final int key;
  public HeapRetrievableStateHandle(  T state){
    key=nextKey.getAndIncrement();
    stateMap.put(key,state);
  }
  @SuppressWarnings("unchecked") @Override public T retrieveState(){
    return (T)stateMap.get(key);
  }
  @Override public void discardState() throws Exception {
    stateMap.remove(key);
  }
  @Override public long getStateSize(){
    return 0;
  }
}
