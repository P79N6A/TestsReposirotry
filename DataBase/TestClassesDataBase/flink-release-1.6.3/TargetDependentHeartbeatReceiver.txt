/** 
 * Test  {@link HeartbeatTarget} that exposes the last received payload.
 */
private static class TargetDependentHeartbeatReceiver implements HeartbeatTarget<Integer> {
  private volatile int lastReceivedHeartbeatPayload=-1;
  private volatile int lastRequestedHeartbeatPayload=-1;
  private final OneShotLatch latch;
  public TargetDependentHeartbeatReceiver(){
    this(new OneShotLatch());
  }
  public TargetDependentHeartbeatReceiver(  OneShotLatch latch){
    this.latch=latch;
  }
  @Override public void receiveHeartbeat(  ResourceID heartbeatOrigin,  Integer heartbeatPayload){
    this.lastReceivedHeartbeatPayload=heartbeatPayload;
    latch.trigger();
  }
  @Override public void requestHeartbeat(  ResourceID requestOrigin,  Integer heartbeatPayload){
    this.lastRequestedHeartbeatPayload=heartbeatPayload;
    latch.trigger();
  }
  public int getLastReceivedHeartbeatPayload(){
    return lastReceivedHeartbeatPayload;
  }
  public int getLastRequestedHeartbeatPayload(){
    return lastRequestedHeartbeatPayload;
  }
}
