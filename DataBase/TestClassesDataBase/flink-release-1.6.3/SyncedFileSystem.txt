private static class SyncedFileSystem extends LocalFileSystem {
  private final OneShotLatch deleteTriggerLatch;
  private final OneShotLatch mkdirsTriggerLatch;
  private final OneShotLatch deleteAwaitLatch;
  private final OneShotLatch mkdirsAwaitLatch;
  SyncedFileSystem(  OneShotLatch deleteTriggerLatch,  OneShotLatch mkdirsTriggerLatch,  OneShotLatch deleteAwaitLatch,  OneShotLatch mkdirsAwaitLatch){
    this.deleteTriggerLatch=deleteTriggerLatch;
    this.mkdirsTriggerLatch=mkdirsTriggerLatch;
    this.deleteAwaitLatch=deleteAwaitLatch;
    this.mkdirsAwaitLatch=mkdirsAwaitLatch;
  }
  @Override public boolean delete(  Path f,  boolean recursive) throws IOException {
    deleteTriggerLatch.trigger();
    try {
      deleteAwaitLatch.await();
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new IOException("interrupted");
    }
    return super.delete(f,recursive);
  }
  @Override public boolean mkdirs(  Path f) throws IOException {
    mkdirsTriggerLatch.trigger();
    try {
      mkdirsAwaitLatch.await();
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new IOException("interrupted");
    }
    return super.mkdirs(f);
  }
}
