public static final class SmallOrMediumOrLargeValue implements org.apache.flink.types.Value {
  private static final long serialVersionUID=1L;
  public static final int SMALL_SIZE=0;
  public static final int MEDIUM_SIZE=12 * 1024 * 1024;
  public static final int LARGE_SIZE=100 * 1024 * 1024;
  private int val;
  private int size;
  public SmallOrMediumOrLargeValue(){
    this.size=SMALL_SIZE;
  }
  public SmallOrMediumOrLargeValue(  int val){
    this.val=val;
    this.size=SMALL_SIZE;
  }
  public SmallOrMediumOrLargeValue(  int val,  int size){
    this.val=val;
    this.size=size;
  }
  public int val(){
    return val;
  }
  public int getSize(){
    return size;
  }
  @Override public void read(  DataInputView in) throws IOException {
    val=in.readInt();
    size=in.readInt();
    for (int i=0; i < size; i++) {
      byte b=in.readByte();
      assertEquals((byte)i,b);
    }
  }
  @Override public void write(  DataOutputView out) throws IOException {
    out.writeInt(val);
    out.writeInt(size);
    for (int i=0; i < size; i++) {
      out.write((byte)(i));
    }
  }
  @Override public int hashCode(){
    return val;
  }
  @Override public boolean equals(  Object obj){
    if (obj instanceof SmallOrMediumOrLargeValue) {
      SmallOrMediumOrLargeValue other=(SmallOrMediumOrLargeValue)obj;
      return other.val == this.val && other.size == this.size;
    }
 else {
      return false;
    }
  }
  @Override public String toString(){
    return String.format("Value %d (%d bytes)",val,size);
  }
}
