/** 
 * Tests for the NullTerminatingSpout.
 */
public class NullTerminatingSpoutTest {
  @Test public void testMethodCalls(){
    Map<String,Object> compConfig=new HashMap<String,Object>();
    IRichSpout spoutMock=mock(IRichSpout.class);
    when(spoutMock.getComponentConfiguration()).thenReturn(compConfig);
    Map<?,?> conf=mock(Map.class);
    TopologyContext context=mock(TopologyContext.class);
    Object msgId=mock(Object.class);
    OutputFieldsDeclarer declarer=mock(OutputFieldsDeclarer.class);
    NullTerminatingSpout spout=new NullTerminatingSpout(spoutMock);
    spout.open(conf,context,null);
    spout.close();
    spout.activate();
    spout.deactivate();
    spout.ack(msgId);
    spout.fail(msgId);
    spout.declareOutputFields(declarer);
    Map<String,Object> c=spoutMock.getComponentConfiguration();
    verify(spoutMock).open(same(conf),same(context),any(SpoutOutputCollector.class));
    verify(spoutMock).close();
    verify(spoutMock).activate();
    verify(spoutMock).deactivate();
    verify(spoutMock).ack(same(msgId));
    verify(spoutMock).fail(same(msgId));
    verify(spoutMock).declareOutputFields(same(declarer));
    Assert.assertSame(compConfig,c);
  }
  @Test public void testReachedEnd(){
    NullTerminatingSpout finiteSpout=new NullTerminatingSpout(new TestDummySpout());
    finiteSpout.open(null,null,mock(SpoutOutputCollector.class));
    Assert.assertFalse(finiteSpout.reachedEnd());
    finiteSpout.nextTuple();
    Assert.assertFalse(finiteSpout.reachedEnd());
    finiteSpout.nextTuple();
    Assert.assertTrue(finiteSpout.reachedEnd());
  }
}
