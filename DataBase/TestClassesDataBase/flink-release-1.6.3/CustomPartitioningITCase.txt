/** 
 * Integration tests for custom  {@link Partitioner}.
 */
@SuppressWarnings("serial") public class CustomPartitioningITCase extends JavaProgramTestBase {
  @Override protected void testProgram() throws Exception {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    if (!isCollectionExecution()) {
      Assert.assertTrue(env.getParallelism() > 1);
    }
    env.generateSequence(1,1000).partitionCustom(new AllZeroPartitioner(),new IdKeySelector<Long>()).map(new FailExceptInPartitionZeroMapper()).output(new DiscardingOutputFormat<Long>());
    env.execute();
  }
private static class FailExceptInPartitionZeroMapper extends RichMapFunction<Long,Long> {
    @Override public Long map(    Long value) throws Exception {
      if (getRuntimeContext().getIndexOfThisSubtask() == 0) {
        return value;
      }
 else {
        throw new Exception("Received data in a partition other than partition 0");
      }
    }
  }
private static class AllZeroPartitioner implements Partitioner<Long> {
    @Override public int partition(    Long key,    int numPartitions){
      return 0;
    }
  }
private static class IdKeySelector<T> implements KeySelector<T,T> {
    @Override public T getKey(    T value){
      return value;
    }
  }
}
