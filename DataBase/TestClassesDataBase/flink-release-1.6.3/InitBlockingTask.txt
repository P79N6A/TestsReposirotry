private static class InitBlockingTask extends StreamTask<String,AbstractStreamOperator<String>> {
  private final Object lock=new Object();
  private volatile boolean running=true;
  protected InitBlockingTask(  Environment env){
    super(env);
  }
  @Override protected void init() throws Exception {
synchronized (lock) {
      while (running) {
        lock.wait();
      }
    }
  }
  @Override protected void run() throws Exception {
  }
  @Override protected void cleanup() throws Exception {
  }
  @Override protected void cancelTask() throws Exception {
    running=false;
synchronized (lock) {
      lock.notifyAll();
    }
  }
}
