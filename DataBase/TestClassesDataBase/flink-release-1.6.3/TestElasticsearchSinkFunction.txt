/** 
 * A  {@link ElasticsearchSinkFunction} that indexes each element it receives to a specified Elasticsearch index.
 */
public static class TestElasticsearchSinkFunction implements ElasticsearchSinkFunction<Tuple2<Integer,String>> {
  private static final long serialVersionUID=1L;
  private final String index;
  /** 
 * Create the sink function, specifying a target Elasticsearch index.
 * @param index Name of the target Elasticsearch index.
 */
  public TestElasticsearchSinkFunction(  String index){
    this.index=index;
  }
  public IndexRequest createIndexRequest(  Tuple2<Integer,String> element){
    Map<String,Object> json=new HashMap<>();
    json.put(DATA_FIELD_NAME,element.f1);
    return new IndexRequest(index,TYPE_NAME,element.f0.toString()).source(json);
  }
  @Override public void process(  Tuple2<Integer,String> element,  RuntimeContext ctx,  RequestIndexer indexer){
    indexer.add(createIndexRequest(element));
  }
}
