private static class OrderCheckingCombinableReduce implements GroupReduceFunction<Tuple3<Integer,Long,String>,Tuple3<Integer,Long,String>>, GroupCombineFunction<Tuple3<Integer,Long,String>,Tuple3<Integer,Long,String>> {
  private static final long serialVersionUID=1L;
  @Override public void reduce(  Iterable<Tuple3<Integer,Long,String>> values,  Collector<Tuple3<Integer,Long,String>> out) throws Exception {
    Iterator<Tuple3<Integer,Long,String>> it=values.iterator();
    Tuple3<Integer,Long,String> t=it.next();
    int i=t.f0;
    out.collect(t);
    while (it.hasNext()) {
      t=it.next();
      if (i > t.f0 || t.f2.equals("INVALID-ORDER!")) {
        t.f2="INVALID-ORDER!";
        out.collect(t);
      }
    }
  }
  @Override public void combine(  Iterable<Tuple3<Integer,Long,String>> values,  Collector<Tuple3<Integer,Long,String>> out){
    Iterator<Tuple3<Integer,Long,String>> it=values.iterator();
    Tuple3<Integer,Long,String> t=it.next();
    int i=t.f0;
    out.collect(t);
    while (it.hasNext()) {
      t=it.next();
      if (i > t.f0) {
        t.f2="INVALID-ORDER!";
        out.collect(t);
      }
    }
  }
}
