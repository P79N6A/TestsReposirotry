private static final class TestingBlobServer extends BlobServer {
  private final CompletableFuture<JobID> cleanupJobFuture;
  /** 
 * Instantiates a new BLOB server and binds it to a free network port.
 * @param config    Configuration to be used to instantiate the BlobServer
 * @param blobStore BlobStore to store blobs persistently
 * @param cleanupJobFuture
 * @throws IOException thrown if the BLOB server cannot bind to a free network port or if the(local or distributed) file storage cannot be created or is not usable
 */
  public TestingBlobServer(  Configuration config,  BlobStore blobStore,  CompletableFuture<JobID> cleanupJobFuture) throws IOException {
    super(config,blobStore);
    this.cleanupJobFuture=cleanupJobFuture;
  }
  @Override public boolean cleanupJob(  JobID jobId,  boolean cleanupBlobStoreFiles){
    final boolean result=super.cleanupJob(jobId,cleanupBlobStoreFiles);
    cleanupJobFuture.complete(jobId);
    return result;
  }
}
