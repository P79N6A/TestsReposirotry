private static final class ManualLeaderContender implements LeaderContender {
  private static final UUID NULL_LEADER_SESSION_ID=new UUID(0L,0L);
  private final ArrayBlockingQueue<UUID> leaderSessionIds=new ArrayBlockingQueue<>(10);
  private volatile Exception exception;
  @Override public void grantLeadership(  UUID leaderSessionID){
    leaderSessionIds.offer(leaderSessionID);
  }
  @Override public void revokeLeadership(){
    leaderSessionIds.offer(NULL_LEADER_SESSION_ID);
  }
  @Override public String getAddress(){
    return "foobar";
  }
  @Override public void handleError(  Exception exception){
    this.exception=exception;
  }
  void rethrowError() throws Exception {
    if (exception != null) {
      throw exception;
    }
  }
  UUID waitForLeaderSessionId() throws InterruptedException {
    return leaderSessionIds.take();
  }
}
