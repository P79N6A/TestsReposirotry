/** 
 * Base class for all non-keyed operator restore tests.
 */
@RunWith(Parameterized.class) public abstract class AbstractNonKeyedOperatorRestoreTestBase extends AbstractOperatorRestoreTestBase {
  private final MigrationVersion migrationVersion;
  @Parameterized.Parameters(name="Migrate Savepoint: {0}") public static Collection<MigrationVersion> parameters(){
    return Arrays.asList(MigrationVersion.v1_2,MigrationVersion.v1_3,MigrationVersion.v1_4,MigrationVersion.v1_5);
  }
  protected AbstractNonKeyedOperatorRestoreTestBase(  MigrationVersion migrationVersion){
    this.migrationVersion=migrationVersion;
  }
  protected AbstractNonKeyedOperatorRestoreTestBase(  MigrationVersion migrationVersion,  boolean allowNonRestoredState){
    super(allowNonRestoredState);
    this.migrationVersion=migrationVersion;
  }
  @Override public void createMigrationJob(  StreamExecutionEnvironment env){
    DataStream<Integer> source=createSource(env,ExecutionMode.MIGRATE);
    SingleOutputStreamOperator<Integer> first=createFirstStatefulMap(ExecutionMode.MIGRATE,source);
    first.startNewChain();
    SingleOutputStreamOperator<Integer> second=createSecondStatefulMap(ExecutionMode.MIGRATE,first);
    second.startNewChain();
    SingleOutputStreamOperator<Integer> stateless=createStatelessMap(second);
    SingleOutputStreamOperator<Integer> third=createThirdStatefulMap(ExecutionMode.MIGRATE,stateless);
  }
  @Override protected String getMigrationSavepointName(){
    return "nonKeyed-flink" + migrationVersion;
  }
}
