/** 
 * Tests for the WrapperSetupHelper.
 */
@RunWith(PowerMockRunner.class) @PrepareForTest(WrapperSetupHelper.class) @PowerMockIgnore({"javax.*","org.apache.log4j.*"}) public class WrapperSetupHelperTest extends AbstractTest {
  @Test public void testEmptyDeclarerBolt(){
    IComponent boltOrSpout;
    if (this.r.nextBoolean()) {
      boltOrSpout=mock(IRichSpout.class);
    }
 else {
      boltOrSpout=mock(IRichBolt.class);
    }
    Assert.assertEquals(new HashMap<String,Integer>(),WrapperSetupHelper.getNumberOfAttributes(boltOrSpout,null));
  }
  @Test(expected=IllegalArgumentException.class) public void testRawType() throws Exception {
    IComponent boltOrSpout;
    if (this.r.nextBoolean()) {
      boltOrSpout=mock(IRichSpout.class);
    }
 else {
      boltOrSpout=mock(IRichBolt.class);
    }
    final SetupOutputFieldsDeclarer declarer=new SetupOutputFieldsDeclarer();
    declarer.declare(new Fields("dummy1","dummy2"));
    PowerMockito.whenNew(SetupOutputFieldsDeclarer.class).withNoArguments().thenReturn(declarer);
    WrapperSetupHelper.getNumberOfAttributes(boltOrSpout,new HashSet<String>(singleton(Utils.DEFAULT_STREAM_ID)));
  }
  @Test(expected=IllegalArgumentException.class) public void testToManyAttributes() throws Exception {
    IComponent boltOrSpout;
    if (this.r.nextBoolean()) {
      boltOrSpout=mock(IRichSpout.class);
    }
 else {
      boltOrSpout=mock(IRichBolt.class);
    }
    final SetupOutputFieldsDeclarer declarer=new SetupOutputFieldsDeclarer();
    final String[] schema=new String[26];
    for (int i=0; i < schema.length; ++i) {
      schema[i]="a" + i;
    }
    declarer.declare(new Fields(schema));
    PowerMockito.whenNew(SetupOutputFieldsDeclarer.class).withNoArguments().thenReturn(declarer);
    WrapperSetupHelper.getNumberOfAttributes(boltOrSpout,null);
  }
  @Test public void testTupleTypes() throws Exception {
    for (int i=-1; i < 26; ++i) {
      this.testTupleTypes(i);
    }
  }
  private void testTupleTypes(  final int numberOfAttributes) throws Exception {
    String[] schema;
    if (numberOfAttributes == -1) {
      schema=new String[1];
    }
 else {
      schema=new String[numberOfAttributes];
    }
    for (int i=0; i < schema.length; ++i) {
      schema[i]="a" + i;
    }
    IComponent boltOrSpout;
    if (this.r.nextBoolean()) {
      boltOrSpout=mock(IRichSpout.class);
    }
 else {
      boltOrSpout=mock(IRichBolt.class);
    }
    final SetupOutputFieldsDeclarer declarer=new SetupOutputFieldsDeclarer();
    declarer.declare(new Fields(schema));
    PowerMockito.whenNew(SetupOutputFieldsDeclarer.class).withNoArguments().thenReturn(declarer);
    HashMap<String,Integer> attributes=new HashMap<String,Integer>();
    attributes.put(Utils.DEFAULT_STREAM_ID,numberOfAttributes);
    Assert.assertEquals(attributes,WrapperSetupHelper.getNumberOfAttributes(boltOrSpout,numberOfAttributes == -1 ? new HashSet<String>(singleton(Utils.DEFAULT_STREAM_ID)) : null));
  }
}
