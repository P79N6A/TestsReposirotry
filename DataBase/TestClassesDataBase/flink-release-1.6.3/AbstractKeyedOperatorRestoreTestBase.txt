/** 
 * Base class for all keyed operator restore tests.
 */
@RunWith(Parameterized.class) public abstract class AbstractKeyedOperatorRestoreTestBase extends AbstractOperatorRestoreTestBase {
  private final MigrationVersion migrationVersion;
  @Parameterized.Parameters(name="Migrate Savepoint: {0}") public static Collection<MigrationVersion> parameters(){
    return Arrays.asList(MigrationVersion.v1_2,MigrationVersion.v1_3,MigrationVersion.v1_4,MigrationVersion.v1_5);
  }
  public AbstractKeyedOperatorRestoreTestBase(  MigrationVersion migrationVersion){
    this.migrationVersion=migrationVersion;
  }
  @Override public void createMigrationJob(  StreamExecutionEnvironment env){
    SingleOutputStreamOperator<Tuple2<Integer,Integer>> source=KeyedJob.createIntegerTupleSource(env,ExecutionMode.MIGRATE);
    SingleOutputStreamOperator<Integer> window=KeyedJob.createWindowFunction(ExecutionMode.MIGRATE,source);
    SingleOutputStreamOperator<Integer> first=KeyedJob.createFirstStatefulMap(ExecutionMode.MIGRATE,window);
    SingleOutputStreamOperator<Integer> second=KeyedJob.createSecondStatefulMap(ExecutionMode.MIGRATE,first);
  }
  @Override protected String getMigrationSavepointName(){
    return "complexKeyed-flink" + migrationVersion;
  }
}
