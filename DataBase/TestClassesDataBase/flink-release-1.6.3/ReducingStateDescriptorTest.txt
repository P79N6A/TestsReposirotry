/** 
 * Tests for the  {@link ReducingStateDescriptor}.
 */
public class ReducingStateDescriptorTest extends TestLogger {
  @Test public void testReducingStateDescriptor() throws Exception {
    ReduceFunction<String> reducer=(a,b) -> a;
    TypeSerializer<String> serializer=new KryoSerializer<>(String.class,new ExecutionConfig());
    ReducingStateDescriptor<String> descr=new ReducingStateDescriptor<>("testName",reducer,serializer);
    assertEquals("testName",descr.getName());
    assertNotNull(descr.getSerializer());
    assertEquals(serializer,descr.getSerializer());
    assertEquals(reducer,descr.getReduceFunction());
    ReducingStateDescriptor<String> copy=CommonTestUtils.createCopySerializable(descr);
    assertEquals("testName",copy.getName());
    assertNotNull(copy.getSerializer());
    assertEquals(serializer,copy.getSerializer());
  }
  @Test public void testHashCodeEquals() throws Exception {
    final String name="testName";
    final ReduceFunction<String> reducer=(a,b) -> a;
    ReducingStateDescriptor<String> original=new ReducingStateDescriptor<>(name,reducer,String.class);
    ReducingStateDescriptor<String> same=new ReducingStateDescriptor<>(name,reducer,String.class);
    ReducingStateDescriptor<String> sameBySerializer=new ReducingStateDescriptor<>(name,reducer,StringSerializer.INSTANCE);
    assertEquals(original.hashCode(),same.hashCode());
    assertEquals(original.hashCode(),sameBySerializer.hashCode());
    assertEquals(original,same);
    assertEquals(original,sameBySerializer);
    ReducingStateDescriptor<String> clone=CommonTestUtils.createCopySerializable(original);
    assertEquals(original,clone);
    clone.initializeSerializerUnlessSet(new ExecutionConfig());
    assertEquals(original,clone);
    original.initializeSerializerUnlessSet(new ExecutionConfig());
    assertEquals(original,same);
  }
}
