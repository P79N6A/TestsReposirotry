/** 
 * Tests for  {@link SlotManagerConfiguration}.
 */
public class SlotManagerConfigurationTest extends TestLogger {
  /** 
 * Tests that  {@link SlotManagerConfiguration#getSlotRequestTimeout()} returns the valueconfigured under key  {@link JobManagerOptions#SLOT_REQUEST_TIMEOUT}.
 */
  @Test public void testSetSlotRequestTimeout() throws Exception {
    final long slotIdleTimeout=42;
    final Configuration configuration=new Configuration();
    configuration.setLong(JobManagerOptions.SLOT_REQUEST_TIMEOUT,slotIdleTimeout);
    final SlotManagerConfiguration slotManagerConfiguration=SlotManagerConfiguration.fromConfiguration(configuration);
    assertThat(slotManagerConfiguration.getSlotRequestTimeout().toMilliseconds(),is(equalTo(slotIdleTimeout)));
  }
  /** 
 * Tests that  {@link ResourceManagerOptions#SLOT_REQUEST_TIMEOUT} is preferred over{@link JobManagerOptions#SLOT_REQUEST_TIMEOUT} if set.
 */
  @Test public void testPreferLegacySlotRequestTimeout() throws Exception {
    final long legacySlotIdleTimeout=42;
    final Configuration configuration=new Configuration();
    configuration.setLong(ResourceManagerOptions.SLOT_REQUEST_TIMEOUT,legacySlotIdleTimeout);
    configuration.setLong(JobManagerOptions.SLOT_REQUEST_TIMEOUT,300000L);
    final SlotManagerConfiguration slotManagerConfiguration=SlotManagerConfiguration.fromConfiguration(configuration);
    assertThat(slotManagerConfiguration.getSlotRequestTimeout().toMilliseconds(),is(equalTo(legacySlotIdleTimeout)));
  }
}
