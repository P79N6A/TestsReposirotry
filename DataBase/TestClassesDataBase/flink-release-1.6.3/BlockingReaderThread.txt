private static final class BlockingReaderThread extends BlockingThread {
  private final LimitedConnectionsFileSystem fs;
  private final Path path;
  private final int maxConcurrentInputStreams;
  private final int maxConcurrentStreamsTotal;
  BlockingReaderThread(  LimitedConnectionsFileSystem fs,  Path path,  int maxConcurrentInputStreams,  int maxConcurrentStreamsTotal){
    this.fs=fs;
    this.path=path;
    this.maxConcurrentInputStreams=maxConcurrentInputStreams;
    this.maxConcurrentStreamsTotal=maxConcurrentStreamsTotal;
  }
  @Override public void go() throws Exception {
    try (FSDataInputStream stream=fs.open(path)){
      assertTrue(fs.getNumberOfOpenInputStreams() <= maxConcurrentInputStreams);
      assertTrue(fs.getTotalNumberOfOpenStreams() <= maxConcurrentStreamsTotal);
      final byte[] readBuffer=new byte[(int)fs.getFileStatus(path).getLen() - 1];
      assertTrue(stream.read(readBuffer) != -1);
      waitTillWokenUp();
      stream.read();
    }
   }
}
