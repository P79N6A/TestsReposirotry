/** 
 * Test that validates that the serialized form of the AvroSerializer is the same as in previous Flink versions. <p>While that is not strictly necessary for FLink to work, it increases user experience in job upgrade situations.
 */
public class AvroSerializerSerializabilityTest {
  private static final String RESOURCE_NAME="flink-1.4-serializer-java-serialized";
  @Test public void testDeserializeSerializer() throws Exception {
    final AvroSerializer<String> currentSerializer=new AvroSerializer<>(String.class);
    try (ObjectInputStream in=new ObjectInputStream(getClass().getClassLoader().getResourceAsStream(RESOURCE_NAME))){
      @SuppressWarnings("unchecked") AvroSerializer<String> deserialized=(AvroSerializer<String>)in.readObject();
      assertEquals(currentSerializer,deserialized);
    }
   }
  public static void main(  String[] args) throws Exception {
    final AvroSerializer<String> serializer=new AvroSerializer<>(String.class);
    final File file=new File("flink-formats/flink-avro/src/test/resources/" + RESOURCE_NAME).getAbsoluteFile();
    try (FileOutputStream fos=new FileOutputStream(file);ObjectOutputStream out=new ObjectOutputStream(fos)){
      out.writeObject(serializer);
    }
   }
}
