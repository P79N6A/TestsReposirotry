/** 
 * Task triggering a blocking buffer request (the test assumes that no buffer is available).
 */
private static class BufferRequestTask implements Runnable {
  private final BufferPool bufferPool;
  private final AtomicReference<Exception> asyncException;
  public BufferRequestTask(  BufferPool bufferPool,  AtomicReference<Exception> asyncException){
    this.bufferPool=bufferPool;
    this.asyncException=asyncException;
  }
  @Override public void run(){
    try {
      String msg="Test assumption violated: expected no available buffer";
      assertNull(msg,bufferPool.requestBuffer());
      bufferPool.requestBufferBlocking();
    }
 catch (    Exception t) {
      asyncException.set(t);
    }
  }
}
