/** 
 * {@link BroadcastProcessFunction} that puts elements on multiple broadcast states.
 */
private static class FunctionWithMultipleStates extends BroadcastProcessFunction<String,Integer,String> {
  private static final long serialVersionUID=7496674620398203933L;
  @Override public void processBroadcastElement(  Integer value,  Context ctx,  Collector<String> out) throws Exception {
    ctx.getBroadcastState(STATE_DESCRIPTOR).put("key." + value,value);
    ctx.getBroadcastState(STATE_DESCRIPTOR_A).put(value,"value." + value);
  }
  @Override public void processElement(  String value,  ReadOnlyContext ctx,  Collector<String> out) throws Exception {
    for (    Map.Entry<String,Integer> entry : ctx.getBroadcastState(STATE_DESCRIPTOR).immutableEntries()) {
      out.collect(value + ":" + entry.getKey()+ "->"+ entry.getValue());
    }
    for (    Map.Entry<Integer,String> entry : ctx.getBroadcastState(STATE_DESCRIPTOR_A).immutableEntries()) {
      out.collect(value + ":" + entry.getKey()+ "->"+ entry.getValue());
    }
  }
}
