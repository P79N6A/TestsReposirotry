/** 
 * Tests for the  {@link PythonStreamBinder}.
 */
public class PythonStreamBinderTest extends AbstractTestBase {
  private static Path getBaseTestPythonDir(){
    FileSystem fs=new LocalFileSystem();
    return new Path(fs.getWorkingDirectory(),"src/test/python/org/apache/flink/streaming/python/api");
  }
  private static Path findUtilsModule(){
    return new Path(getBaseTestPythonDir(),"utils");
  }
  private static List<String> findTestFiles() throws Exception {
    List<String> files=new ArrayList<>();
    FileSystem fs=FileSystem.getLocalFileSystem();
    FileStatus[] status=fs.listStatus(getBaseTestPythonDir());
    for (    FileStatus f : status) {
      Path filePath=f.getPath();
      String fileName=filePath.getName();
      if (fileName.startsWith("test_") && fileName.endsWith(".py")) {
        files.add(filePath.getPath());
      }
    }
    return files;
  }
  @Test public void testProgram() throws Exception {
    Path testEntryPoint=new Path(getBaseTestPythonDir(),"examples/word_count.py");
    List<String> testFiles=findTestFiles();
    Preconditions.checkState(testFiles.size() > 0,"No test files were found in {}.",getBaseTestPythonDir());
    String[] arguments=new String[1 + 1 + testFiles.size()];
    arguments[0]=testEntryPoint.getPath();
    arguments[1]=findUtilsModule().getPath();
    int index=2;
    for (    String testFile : testFiles) {
      arguments[index]=testFile;
      index++;
    }
    try {
      new PythonStreamBinder(new Configuration()).runPlan(arguments);
    }
 catch (    PyException e) {
      if (e.getCause() instanceof JobExecutionException) {
        throw (JobExecutionException)e.getCause();
      }
 else {
        throw e;
      }
    }
  }
}
