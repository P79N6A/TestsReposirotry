/** 
 * Blocking stream task which waits on and triggers a set of one shot latches to establish a certain interleaving with a concurrently running checkpoint operation.
 */
public static class BlockingStreamTask<T,OP extends StreamOperator<T>> extends StreamTask<T,OP> {
  public BlockingStreamTask(  Environment env){
    super(env);
  }
  @Override protected void init(){
  }
  @Override protected void run() throws Exception {
    RUN_LATCH.trigger();
    CHECKPOINTING_LATCH.await();
  }
  @Override protected void cleanup() throws Exception {
    CLEANUP_LATCH.trigger();
    Assert.assertTrue(getAsyncOperationsThreadPool().awaitTermination(30L,TimeUnit.SECONDS));
  }
  @Override protected void cancelTask(){
  }
}
