private static class JobSubmitterRunnable implements Runnable {
  private static final Logger LOG=LoggerFactory.getLogger(JobSubmitterRunnable.class);
  boolean finished=false;
  final ActorSystem clientActorSystem;
  final LocalFlinkMiniCluster cluster;
  final JobGraph graph;
  final Promise<JobExecutionResult> resultPromise=new Promise.DefaultPromise<>();
  public JobSubmitterRunnable(  ActorSystem actorSystem,  LocalFlinkMiniCluster cluster,  JobGraph graph){
    this.clientActorSystem=actorSystem;
    this.cluster=cluster;
    this.graph=graph;
  }
  @Override public void run(){
    try {
      JobExecutionResult result=JobClient.submitJobAndWait(clientActorSystem,cluster.configuration(),cluster.highAvailabilityServices(),graph,timeout,false,getClass().getClassLoader());
      resultPromise.success(result);
    }
 catch (    Exception e) {
      resultPromise.failure(e);
    }
  }
}
