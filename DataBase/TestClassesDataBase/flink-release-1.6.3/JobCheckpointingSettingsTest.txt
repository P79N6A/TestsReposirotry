public class JobCheckpointingSettingsTest {
  /** 
 * Tests that the settings are actually serializable.
 */
  @Test public void testIsJavaSerializable() throws Exception {
    JobCheckpointingSettings settings=new JobCheckpointingSettings(Arrays.asList(new JobVertexID(),new JobVertexID()),Arrays.asList(new JobVertexID(),new JobVertexID()),Arrays.asList(new JobVertexID(),new JobVertexID()),new CheckpointCoordinatorConfiguration(1231231,1231,112,12,CheckpointRetentionPolicy.RETAIN_ON_FAILURE,false),new SerializedValue<>(new MemoryStateBackend()));
    JobCheckpointingSettings copy=CommonTestUtils.createCopySerializable(settings);
    assertEquals(settings.getVerticesToAcknowledge(),copy.getVerticesToAcknowledge());
    assertEquals(settings.getVerticesToConfirm(),copy.getVerticesToConfirm());
    assertEquals(settings.getVerticesToTrigger(),copy.getVerticesToTrigger());
    assertEquals(settings.getCheckpointCoordinatorConfiguration(),copy.getCheckpointCoordinatorConfiguration());
    assertNotNull(copy.getDefaultStateBackend());
    assertTrue(copy.getDefaultStateBackend().deserializeValue(this.getClass().getClassLoader()).getClass() == MemoryStateBackend.class);
  }
}
