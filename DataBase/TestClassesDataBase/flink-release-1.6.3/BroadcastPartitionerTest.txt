/** 
 * Tests for  {@link BroadcastPartitioner}.
 */
public class BroadcastPartitionerTest {
  private BroadcastPartitioner<Tuple> broadcastPartitioner1;
  private BroadcastPartitioner<Tuple> broadcastPartitioner2;
  private BroadcastPartitioner<Tuple> broadcastPartitioner3;
  private StreamRecord<Tuple> streamRecord=new StreamRecord<Tuple>(null);
  private SerializationDelegate<StreamRecord<Tuple>> sd=new SerializationDelegate<StreamRecord<Tuple>>(null);
  @Before public void setPartitioner(){
    broadcastPartitioner1=new BroadcastPartitioner<Tuple>();
    broadcastPartitioner2=new BroadcastPartitioner<Tuple>();
    broadcastPartitioner3=new BroadcastPartitioner<Tuple>();
  }
  @Test public void testSelectChannels(){
    int[] first=new int[]{0};
    int[] second=new int[]{0,1};
    int[] sixth=new int[]{0,1,2,3,4,5};
    sd.setInstance(streamRecord);
    assertArrayEquals(first,broadcastPartitioner1.selectChannels(sd,1));
    assertArrayEquals(second,broadcastPartitioner2.selectChannels(sd,2));
    assertArrayEquals(sixth,broadcastPartitioner3.selectChannels(sd,6));
  }
}
