/** 
 * Tests for  {@link IterationConvergence}.
 */
public class IterationConvergenceTest extends ParameterTestBase {
  private IterationConvergence parameter;
  @Before public void setup(){
    super.setup();
    parameter=new IterationConvergence(owner,10);
  }
  @Test public void testWithIterations(){
    parameter.configure(ParameterTool.fromArgs(new String[]{"--iterations","42"}));
    Assert.assertEquals(42,parameter.getValue().iterations);
    Assert.assertEquals(Double.MAX_VALUE,parameter.getValue().convergenceThreshold,0.000001);
  }
  @Test public void testWithConvergenceThreshold(){
    parameter.configure(ParameterTool.fromArgs(new String[]{"--convergence_threshold","42"}));
    Assert.assertEquals(Integer.MAX_VALUE,parameter.getValue().iterations);
    Assert.assertEquals(42.0,parameter.getValue().convergenceThreshold,0.000001);
  }
  @Test public void testWithBoth(){
    parameter.configure(ParameterTool.fromArgs(new String[]{"--iterations","42","--convergence_threshold","42"}));
    Assert.assertEquals(42,parameter.getValue().iterations);
    Assert.assertEquals(42.0,parameter.getValue().convergenceThreshold,0.000001);
  }
  @Test public void testWithNeither(){
    parameter.configure(ParameterTool.fromArgs(new String[]{}));
    Assert.assertEquals(10,parameter.getValue().iterations);
    Assert.assertEquals(Double.MAX_VALUE,parameter.getValue().convergenceThreshold,0.000001);
  }
}
