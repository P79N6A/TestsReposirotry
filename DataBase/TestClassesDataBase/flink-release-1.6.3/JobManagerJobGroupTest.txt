/** 
 * Tests for the  {@link JobManagerJobMetricGroup}.
 */
public class JobManagerJobGroupTest extends TestLogger {
  @Test public void testGenerateScopeDefault() throws Exception {
    MetricRegistryImpl registry=new MetricRegistryImpl(MetricRegistryConfiguration.defaultMetricRegistryConfiguration());
    JobManagerMetricGroup tmGroup=new JobManagerMetricGroup(registry,"theHostName");
    JobMetricGroup jmGroup=new JobManagerJobMetricGroup(registry,tmGroup,new JobID(),"myJobName");
    assertArrayEquals(new String[]{"theHostName","jobmanager","myJobName"},jmGroup.getScopeComponents());
    assertEquals("theHostName.jobmanager.myJobName.name",jmGroup.getMetricIdentifier("name"));
    registry.shutdown().get();
  }
  @Test public void testGenerateScopeCustom() throws Exception {
    Configuration cfg=new Configuration();
    cfg.setString(MetricOptions.SCOPE_NAMING_JM,"abc");
    cfg.setString(MetricOptions.SCOPE_NAMING_JM_JOB,"some-constant.<job_name>");
    MetricRegistryImpl registry=new MetricRegistryImpl(MetricRegistryConfiguration.fromConfiguration(cfg));
    JobID jid=new JobID();
    JobManagerMetricGroup tmGroup=new JobManagerMetricGroup(registry,"theHostName");
    JobMetricGroup jmGroup=new JobManagerJobMetricGroup(registry,tmGroup,jid,"myJobName");
    assertArrayEquals(new String[]{"some-constant","myJobName"},jmGroup.getScopeComponents());
    assertEquals("some-constant.myJobName.name",jmGroup.getMetricIdentifier("name"));
    registry.shutdown().get();
  }
  @Test public void testGenerateScopeCustomWildcard() throws Exception {
    Configuration cfg=new Configuration();
    cfg.setString(MetricOptions.SCOPE_NAMING_JM,"peter");
    cfg.setString(MetricOptions.SCOPE_NAMING_JM_JOB,"*.some-constant.<job_id>");
    MetricRegistryImpl registry=new MetricRegistryImpl(MetricRegistryConfiguration.fromConfiguration(cfg));
    JobID jid=new JobID();
    JobManagerMetricGroup tmGroup=new JobManagerMetricGroup(registry,"theHostName");
    JobMetricGroup jmGroup=new JobManagerJobMetricGroup(registry,tmGroup,jid,"myJobName");
    assertArrayEquals(new String[]{"peter","some-constant",jid.toString()},jmGroup.getScopeComponents());
    assertEquals("peter.some-constant." + jid + ".name",jmGroup.getMetricIdentifier("name"));
    registry.shutdown().get();
  }
  @Test public void testCreateQueryServiceMetricInfo(){
    JobID jid=new JobID();
    MetricRegistryImpl registry=new MetricRegistryImpl(MetricRegistryConfiguration.defaultMetricRegistryConfiguration());
    JobManagerMetricGroup jm=new JobManagerMetricGroup(registry,"host");
    JobManagerJobMetricGroup jmj=new JobManagerJobMetricGroup(registry,jm,jid,"jobname");
    QueryScopeInfo.JobQueryScopeInfo info=jmj.createQueryServiceMetricInfo(new DummyCharacterFilter());
    assertEquals("",info.scope);
    assertEquals(jid.toString(),info.jobID);
  }
}
