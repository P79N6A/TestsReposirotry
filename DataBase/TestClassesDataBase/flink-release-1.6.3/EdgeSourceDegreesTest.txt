/** 
 * Tests for  {@link EdgeSourceDegrees}.
 */
public class EdgeSourceDegreesTest extends AsmTestBase {
  @Test public void testWithSimpleGraph() throws Exception {
    String expectedResult="(0,1,((null),(2,2,0)))\n" + "(0,2,((null),(2,2,0)))\n" + "(2,1,((null),(3,2,1)))\n"+ "(2,3,((null),(3,2,1)))\n"+ "(3,1,((null),(4,2,2)))\n"+ "(3,4,((null),(4,2,2)))\n"+ "(5,3,((null),(1,1,0)))";
    DataSet<Edge<IntValue,Tuple2<NullValue,Degrees>>> sourceDegrees=directedSimpleGraph.run(new EdgeSourceDegrees<>());
    TestBaseUtils.compareResultAsText(sourceDegrees.collect(),expectedResult);
  }
  @Test public void testWithEmptyGraphWithVertices() throws Exception {
    DataSet<Edge<LongValue,Tuple2<NullValue,Degrees>>> sourceDegrees=emptyGraphWithVertices.run(new EdgeSourceDegrees<>());
    assertEquals(0,sourceDegrees.collect().size());
  }
  @Test public void testWithEmptyGraphWithoutVertices() throws Exception {
    DataSet<Edge<LongValue,Tuple2<NullValue,Degrees>>> sourceDegrees=emptyGraphWithoutVertices.run(new EdgeSourceDegrees<>());
    assertEquals(0,sourceDegrees.collect().size());
  }
  @Test public void testWithRMatGraph() throws Exception {
    DataSet<Edge<LongValue,Tuple2<NullValue,Degrees>>> sourceDegrees=directedRMatGraph(10,16).run(new EdgeSourceDegrees<>());
    Checksum checksum=new ChecksumHashCode<Edge<LongValue,Tuple2<NullValue,Degrees>>>().run(sourceDegrees).execute();
    assertEquals(12009,checksum.getCount());
    assertEquals(0x0000162435fde1d9L,checksum.getChecksum());
  }
}
