@ForwardedFields("0") private static class TriadBuilder implements GroupReduceFunction<Edge,Triad> {
  private final List<Integer> vertices=new ArrayList<Integer>();
  private final Triad outTriad=new Triad();
  @Override public void reduce(  Iterable<Edge> edgesIter,  Collector<Triad> out) throws Exception {
    final Iterator<Edge> edges=edgesIter.iterator();
    vertices.clear();
    Edge firstEdge=edges.next();
    outTriad.setFirstVertex(firstEdge.getFirstVertex());
    vertices.add(firstEdge.getSecondVertex());
    while (edges.hasNext()) {
      Integer higherVertexId=edges.next().getSecondVertex();
      for (      Integer lowerVertexId : vertices) {
        outTriad.setSecondVertex(lowerVertexId);
        outTriad.setThirdVertex(higherVertexId);
        out.collect(outTriad);
      }
      vertices.add(higherVertexId);
    }
  }
}
