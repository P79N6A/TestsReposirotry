/** 
 * Tests for  {@link StreamStatus}.
 */
public class StreamStatusTest {
  @Test(expected=IllegalArgumentException.class) public void testIllegalCreationThrowsException(){
    new StreamStatus(32);
  }
  @Test public void testEquals(){
    StreamStatus idleStatus=new StreamStatus(StreamStatus.IDLE_STATUS);
    StreamStatus activeStatus=new StreamStatus(StreamStatus.ACTIVE_STATUS);
    assertEquals(StreamStatus.IDLE,idleStatus);
    assertTrue(idleStatus.isIdle());
    assertFalse(idleStatus.isActive());
    assertEquals(StreamStatus.ACTIVE,activeStatus);
    assertTrue(activeStatus.isActive());
    assertFalse(activeStatus.isIdle());
  }
  @Test public void testTypeCasting(){
    StreamStatus status=StreamStatus.ACTIVE;
    assertTrue(status.isStreamStatus());
    assertFalse(status.isRecord());
    assertFalse(status.isWatermark());
    assertFalse(status.isLatencyMarker());
    try {
      status.asWatermark();
      fail("should throw an exception");
    }
 catch (    Exception e) {
    }
    try {
      status.asRecord();
      fail("should throw an exception");
    }
 catch (    Exception e) {
    }
    try {
      status.asLatencyMarker();
      fail("should throw an exception");
    }
 catch (    Exception e) {
    }
  }
}
