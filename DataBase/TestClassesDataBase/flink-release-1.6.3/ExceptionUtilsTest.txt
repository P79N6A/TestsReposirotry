/** 
 * Tests for the utility methods in  {@link ExceptionUtils}.
 */
public class ExceptionUtilsTest extends TestLogger {
  @Test public void testStringifyNullException(){
    assertNotNull(ExceptionUtils.STRINGIFIED_NULL_EXCEPTION);
    assertEquals(ExceptionUtils.STRINGIFIED_NULL_EXCEPTION,ExceptionUtils.stringifyException(null));
  }
  @Test public void testJvmFatalError(){
    assertFalse(ExceptionUtils.isJvmFatalError(new Error()));
    assertFalse(ExceptionUtils.isJvmFatalError(new LinkageError()));
    assertTrue(ExceptionUtils.isJvmFatalError(new InternalError()));
    assertTrue(ExceptionUtils.isJvmFatalError(new UnknownError()));
  }
  @Test public void testRethrowFatalError(){
    try {
      ExceptionUtils.rethrowIfFatalError(new InternalError());
      fail();
    }
 catch (    InternalError ignored) {
    }
    ExceptionUtils.rethrowIfFatalError(new NoClassDefFoundError());
  }
  @Test public void testFindThrowableByType(){
    assertTrue(ExceptionUtils.findThrowable(new RuntimeException(new IllegalStateException()),IllegalStateException.class).isPresent());
  }
}
