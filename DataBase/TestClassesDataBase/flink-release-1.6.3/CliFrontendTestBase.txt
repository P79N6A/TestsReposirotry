/** 
 * Base test class for  {@link CliFrontend} tests that wraps the new vs. legacy mode.
 */
@RunWith(Parameterized.class) public abstract class CliFrontendTestBase extends TestLogger {
  @Parameterized.Parameter public String mode;
  @Parameterized.Parameters(name="Mode = {0}") public static List<String> parameters(){
    return Arrays.asList(CoreOptions.LEGACY_MODE,CoreOptions.NEW_MODE);
  }
  protected Configuration getConfiguration(){
    final Configuration configuration=GlobalConfiguration.loadConfiguration(CliFrontendTestUtils.getConfigDir());
    configuration.setString(CoreOptions.MODE,mode);
    return configuration;
  }
  static AbstractCustomCommandLine<?> getCli(  Configuration configuration){
switch (configuration.getString(CoreOptions.MODE)) {
case CoreOptions.LEGACY_MODE:
      return new LegacyCLI(configuration);
case CoreOptions.NEW_MODE:
    return new DefaultCLI(configuration);
}
throw new IllegalStateException();
}
}
