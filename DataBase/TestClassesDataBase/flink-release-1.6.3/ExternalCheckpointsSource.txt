private static class ExternalCheckpointsSource implements ParallelSourceFunction<Long>, ExternallyInducedSource<Long,Object> {
  private final long numEvents;
  private final long checkpointFrequency;
  private CheckpointTrigger trigger;
  ExternalCheckpointsSource(  long numEvents,  long checkpointFrequency){
    this.numEvents=numEvents;
    this.checkpointFrequency=checkpointFrequency;
  }
  @Override public void run(  SourceContext<Long> ctx) throws Exception {
    ready.trigger();
    long checkpoint=1;
    for (long num=1; num <= numEvents; num++) {
      sync.await();
      ctx.collect(num);
      if (num % checkpointFrequency == 0) {
        trigger.triggerCheckpoint(checkpoint++);
      }
    }
  }
  @Override public void cancel(){
  }
  @Override public void setCheckpointTrigger(  CheckpointTrigger checkpointTrigger){
    this.trigger=checkpointTrigger;
  }
  @Override public MasterTriggerRestoreHook<Object> createMasterTriggerRestoreHook(){
    throw new UnsupportedOperationException("not implemented");
  }
}
