/** 
 * Special  {@link HeartbeatServices} which creates a {@link RecordingHeartbeatManagerImpl}.
 */
private static final class RecordingHeartbeatServices extends HeartbeatServices {
  private final BlockingQueue<ResourceID> unmonitoredTargets;
  private final BlockingQueue<ResourceID> monitoredTargets;
  public RecordingHeartbeatServices(  long heartbeatInterval,  long heartbeatTimeout){
    super(heartbeatInterval,heartbeatTimeout);
    this.unmonitoredTargets=new ArrayBlockingQueue<>(1);
    this.monitoredTargets=new ArrayBlockingQueue<>(1);
  }
  @Override public <I,O>HeartbeatManager<I,O> createHeartbeatManager(  ResourceID resourceId,  HeartbeatListener<I,O> heartbeatListener,  ScheduledExecutor scheduledExecutor,  Logger log){
    return new RecordingHeartbeatManagerImpl<>(heartbeatTimeout,resourceId,heartbeatListener,scheduledExecutor,scheduledExecutor,log,unmonitoredTargets,monitoredTargets);
  }
  public BlockingQueue<ResourceID> getUnmonitoredTargets(){
    return unmonitoredTargets;
  }
  public BlockingQueue<ResourceID> getMonitoredTargets(){
    return monitoredTargets;
  }
}
