private static class LimitedLongDeserializer implements KeyedDeserializationSchema<Long> {
  private static final long serialVersionUID=6966177118923713521L;
  private final TypeInformation<Long> ti;
  private final TypeSerializer<Long> ser;
  long cnt=0;
  public LimitedLongDeserializer(){
    this.ti=Types.LONG;
    this.ser=ti.createSerializer(new ExecutionConfig());
  }
  @Override public TypeInformation<Long> getProducedType(){
    return ti;
  }
  @Override public Long deserialize(  byte[] messageKey,  byte[] message,  String topic,  int partition,  long offset) throws IOException {
    cnt++;
    DataInputView in=new DataInputViewStreamWrapper(new ByteArrayInputStream(message));
    Long e=ser.deserialize(in);
    return e;
  }
  @Override public boolean isEndOfStream(  Long nextElement){
    return cnt > 1000L;
  }
}
