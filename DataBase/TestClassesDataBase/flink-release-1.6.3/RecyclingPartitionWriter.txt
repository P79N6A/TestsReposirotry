/** 
 * Partition writer that recycles all received buffers and does no further processing.
 */
private static class RecyclingPartitionWriter implements ResultPartitionWriter {
  private final BufferProvider bufferProvider;
  private final ResultPartitionID partitionId=new ResultPartitionID();
  private RecyclingPartitionWriter(  BufferProvider bufferProvider){
    this.bufferProvider=bufferProvider;
  }
  @Override public BufferProvider getBufferProvider(){
    return bufferProvider;
  }
  @Override public ResultPartitionID getPartitionId(){
    return partitionId;
  }
  @Override public int getNumberOfSubpartitions(){
    return 1;
  }
  @Override public int getNumTargetKeyGroups(){
    return 1;
  }
  @Override public void addBufferConsumer(  BufferConsumer bufferConsumer,  int targetChannel) throws IOException {
    bufferConsumer.close();
  }
  @Override public void flushAll(){
  }
  @Override public void flush(  int subpartitionIndex){
  }
}
