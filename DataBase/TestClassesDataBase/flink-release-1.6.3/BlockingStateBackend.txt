static class BlockingStateBackend implements StateBackend {
  private static final long serialVersionUID=-5053068148933314100L;
  @Override public CompletedCheckpointStorageLocation resolveCheckpoint(  String pointer){
    throw new UnsupportedOperationException();
  }
  @Override public CheckpointStorage createCheckpointStorage(  JobID jobId) throws IOException {
    return new MemoryBackendCheckpointStorage(jobId,null,null,Integer.MAX_VALUE);
  }
  @Override public <K>AbstractKeyedStateBackend<K> createKeyedStateBackend(  Environment env,  JobID jobID,  String operatorIdentifier,  TypeSerializer<K> keySerializer,  int numberOfKeyGroups,  KeyGroupRange keyGroupRange,  TaskKvStateRegistry kvStateRegistry,  TtlTimeProvider ttlTimeProvider){
    return null;
  }
  @Override public OperatorStateBackend createOperatorStateBackend(  Environment env,  String operatorIdentifier) throws Exception {
    OperatorStateBackend operatorStateBackend=mock(OperatorStateBackend.class);
    when(operatorStateBackend.snapshot(anyLong(),anyLong(),any(CheckpointStreamFactory.class),any(CheckpointOptions.class))).thenReturn(new FutureTask<>(new BlockingCallable()));
    return operatorStateBackend;
  }
}
