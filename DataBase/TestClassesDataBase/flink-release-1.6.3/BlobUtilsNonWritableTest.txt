/** 
 * Tests for  {@link BlobUtils} working on non-writable directories.
 */
public class BlobUtilsNonWritableTest extends TestLogger {
  private static final String CANNOT_CREATE_THIS="cannot-create-this";
  private File blobUtilsTestDirectory;
  @Rule public final TemporaryFolder temporaryFolder=new TemporaryFolder();
  @Before public void before() throws IOException {
    assumeTrue(!OperatingSystem.isWindows());
    blobUtilsTestDirectory=temporaryFolder.newFolder();
    assertTrue(blobUtilsTestDirectory.setExecutable(true,false));
    assertTrue(blobUtilsTestDirectory.setReadable(true,false));
    assertTrue(blobUtilsTestDirectory.setWritable(false,false));
  }
  @After public void after(){
    assertTrue(blobUtilsTestDirectory.delete());
  }
  @Test(expected=IOException.class) public void testExceptionOnCreateStorageDirectoryFailure() throws IOException {
    Configuration config=new Configuration();
    config.setString(BlobServerOptions.STORAGE_DIRECTORY,new File(blobUtilsTestDirectory,CANNOT_CREATE_THIS).getAbsolutePath());
    BlobUtils.initLocalStorageDirectory(config);
  }
  @Test(expected=IOException.class) public void testExceptionOnCreateCacheDirectoryFailureNoJob() throws IOException {
    BlobUtils.getStorageLocation(new File(blobUtilsTestDirectory,CANNOT_CREATE_THIS),null,new TransientBlobKey());
  }
  @Test(expected=IOException.class) public void testExceptionOnCreateCacheDirectoryFailureForJobTransient() throws IOException {
    BlobUtils.getStorageLocation(new File(blobUtilsTestDirectory,CANNOT_CREATE_THIS),new JobID(),new TransientBlobKey());
  }
  @Test(expected=IOException.class) public void testExceptionOnCreateCacheDirectoryFailureForJobPermanent() throws IOException {
    BlobUtils.getStorageLocation(new File(blobUtilsTestDirectory,CANNOT_CREATE_THIS),new JobID(),new PermanentBlobKey());
  }
}
