/** 
 * Tests for  {@link TriangleEnumerator}.
 */
@RunWith(Parameterized.class) public class TriangleEnumeratorITCase extends MultipleProgramsTestBase {
  public TriangleEnumeratorITCase(  TestExecutionMode mode){
    super(mode);
  }
  @Test public void testTriangleEnumerator() throws Exception {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    Graph<Long,NullValue,NullValue> graph=Graph.fromDataSet(TriangleCountData.getDefaultEdgeDataSet(env),env);
    List<Tuple3<Long,Long,Long>> actualOutput=graph.run(new TriangleEnumerator<>()).collect();
    List<Tuple3<Long,Long,Long>> expectedResult=TriangleCountData.getListOfTriangles();
    Assert.assertEquals(expectedResult.size(),actualOutput.size());
    for (    Tuple3<Long,Long,Long> resultTriangle : actualOutput) {
      Assert.assertTrue(expectedResult.indexOf(resultTriangle) >= 0);
    }
  }
}
