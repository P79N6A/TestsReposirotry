@RunWith(Parameterized.class) public class DefaultFilterTest {
  @Parameters public static Collection<Object[]> data(){
    return Arrays.asList(new Object[][]{{"file.txt",false},{".file.txt",true},{"dir/.file.txt",true},{".dir/file.txt",false},{"_file.txt",true},{"dir/_file.txt",true},{"_dir/file.txt",false},{FilePathFilter.HADOOP_COPYING,true},{"dir/" + FilePathFilter.HADOOP_COPYING,true},{FilePathFilter.HADOOP_COPYING + "/file.txt",false}});
  }
  private final boolean shouldFilter;
  private final String filePath;
  public DefaultFilterTest(  String filePath,  boolean shouldFilter){
    this.filePath=filePath;
    this.shouldFilter=shouldFilter;
  }
  @Test public void test(){
    FilePathFilter defaultFilter=FilePathFilter.createDefaultFilter();
    Path path=new Path(filePath);
    assertEquals(String.format("File: %s",filePath),shouldFilter,defaultFilter.filterPath(path));
  }
}
