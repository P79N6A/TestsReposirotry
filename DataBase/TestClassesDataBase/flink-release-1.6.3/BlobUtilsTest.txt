/** 
 * Tests for  {@link BlobUtils}.
 */
public class BlobUtilsTest {
  @Rule public final TemporaryFolder temporaryFolder=new TemporaryFolder();
  /** 
 * Tests  {@link BlobUtils#initLocalStorageDirectory} using{@link BlobServerOptions#STORAGE_DIRECTORY} per default.
 */
  @Test public void testDefaultBlobStorageDirectory() throws IOException {
    Configuration config=new Configuration();
    String blobStorageDir=temporaryFolder.newFolder().getAbsolutePath();
    config.setString(BlobServerOptions.STORAGE_DIRECTORY,blobStorageDir);
    config.setString(CoreOptions.TMP_DIRS,temporaryFolder.newFolder().getAbsolutePath());
    File dir=BlobUtils.initLocalStorageDirectory(config);
    assertThat(dir.getAbsolutePath(),startsWith(blobStorageDir));
  }
  /** 
 * Tests  {@link BlobUtils#initLocalStorageDirectory}'s fallback to {@link CoreOptions#TMP_DIRS} with a single temp directory.
 */
  @Test public void testTaskManagerFallbackBlobStorageDirectory1() throws IOException {
    Configuration config=new Configuration();
    String blobStorageDir=temporaryFolder.getRoot().getAbsolutePath();
    config.setString(CoreOptions.TMP_DIRS,blobStorageDir);
    File dir=BlobUtils.initLocalStorageDirectory(config);
    assertThat(dir.getAbsolutePath(),startsWith(blobStorageDir));
  }
  /** 
 * Tests  {@link BlobUtils#initLocalStorageDirectory}'s fallback to {@link CoreOptions#TMP_DIRS} having multiple temp directories.
 */
  @Test public void testTaskManagerFallbackBlobStorageDirectory2a() throws IOException {
    Configuration config=new Configuration();
    String blobStorageDirs=temporaryFolder.newFolder().getAbsolutePath() + "," + temporaryFolder.newFolder().getAbsolutePath();
    config.setString(CoreOptions.TMP_DIRS,blobStorageDirs);
    File dir=BlobUtils.initLocalStorageDirectory(config);
    assertThat(dir.getAbsolutePath(),startsWith(temporaryFolder.getRoot().getAbsolutePath()));
  }
  /** 
 * Tests  {@link BlobUtils#initLocalStorageDirectory}'s fallback to {@link CoreOptions#TMP_DIRS} having multiple temp directories.
 */
  @Test public void testTaskManagerFallbackBlobStorageDirectory2b() throws IOException {
    Configuration config=new Configuration();
    String blobStorageDirs=temporaryFolder.newFolder().getAbsolutePath() + File.pathSeparator + temporaryFolder.newFolder().getAbsolutePath();
    config.setString(CoreOptions.TMP_DIRS,blobStorageDirs);
    File dir=BlobUtils.initLocalStorageDirectory(config);
    assertThat(dir.getAbsolutePath(),startsWith(temporaryFolder.getRoot().getAbsolutePath()));
  }
  /** 
 * Tests  {@link BlobUtils#initLocalStorageDirectory}'s fallback to the default value of {@link CoreOptions#TMP_DIRS}.
 */
  @Test public void testTaskManagerFallbackFallbackBlobStorageDirectory1() throws IOException {
    Configuration config=new Configuration();
    File dir=BlobUtils.initLocalStorageDirectory(config);
    assertThat(dir.getAbsolutePath(),startsWith(CoreOptions.TMP_DIRS.defaultValue()));
  }
}
