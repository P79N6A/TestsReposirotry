/** 
 * Tests for the  {@link TaskManagerMetricGroup}.
 */
public class TaskManagerGroupTest extends TestLogger {
  private MetricRegistryImpl registry;
  @Before public void setup(){
    registry=new MetricRegistryImpl(MetricRegistryConfiguration.defaultMetricRegistryConfiguration());
  }
  @After public void teardown() throws Exception {
    if (registry != null) {
      registry.shutdown().get();
    }
  }
  @Test public void addAndRemoveJobs() throws IOException {
    final TaskManagerMetricGroup group=new TaskManagerMetricGroup(registry,"localhost",new AbstractID().toString());
    final JobID jid1=new JobID();
    final JobID jid2=new JobID();
    final String jobName1="testjob";
    final String jobName2="anotherJob";
    final JobVertexID vertex11=new JobVertexID();
    final JobVertexID vertex12=new JobVertexID();
    final JobVertexID vertex13=new JobVertexID();
    final JobVertexID vertex21=new JobVertexID();
    final ExecutionAttemptID execution11=new ExecutionAttemptID();
    final ExecutionAttemptID execution12=new ExecutionAttemptID();
    final ExecutionAttemptID execution13=new ExecutionAttemptID();
    final ExecutionAttemptID execution21=new ExecutionAttemptID();
    TaskMetricGroup tmGroup11=group.addTaskForJob(jid1,jobName1,vertex11,execution11,"test",17,0);
    TaskMetricGroup tmGroup12=group.addTaskForJob(jid1,jobName1,vertex12,execution12,"test",13,1);
    TaskMetricGroup tmGroup21=group.addTaskForJob(jid2,jobName2,vertex21,execution21,"test",7,2);
    assertEquals(2,group.numRegisteredJobMetricGroups());
    assertFalse(tmGroup11.parent().isClosed());
    assertFalse(tmGroup12.parent().isClosed());
    assertFalse(tmGroup21.parent().isClosed());
    tmGroup11.close();
    tmGroup21.close();
    assertTrue(tmGroup11.isClosed());
    assertTrue(tmGroup21.isClosed());
    assertFalse(tmGroup11.parent().isClosed());
    assertFalse(tmGroup12.parent().isClosed());
    assertTrue(tmGroup21.parent().isClosed());
    assertEquals(1,group.numRegisteredJobMetricGroups());
    TaskMetricGroup tmGroup13=group.addTaskForJob(jid1,jobName1,vertex13,execution13,"test",0,0);
    tmGroup12.close();
    tmGroup13.close();
    assertTrue(tmGroup11.parent().isClosed());
    assertTrue(tmGroup12.parent().isClosed());
    assertTrue(tmGroup13.parent().isClosed());
    assertEquals(0,group.numRegisteredJobMetricGroups());
  }
  @Test public void testCloseClosesAll() throws IOException {
    final TaskManagerMetricGroup group=new TaskManagerMetricGroup(registry,"localhost",new AbstractID().toString());
    final JobID jid1=new JobID();
    final JobID jid2=new JobID();
    final String jobName1="testjob";
    final String jobName2="anotherJob";
    final JobVertexID vertex11=new JobVertexID();
    final JobVertexID vertex12=new JobVertexID();
    final JobVertexID vertex21=new JobVertexID();
    final ExecutionAttemptID execution11=new ExecutionAttemptID();
    final ExecutionAttemptID execution12=new ExecutionAttemptID();
    final ExecutionAttemptID execution21=new ExecutionAttemptID();
    TaskMetricGroup tmGroup11=group.addTaskForJob(jid1,jobName1,vertex11,execution11,"test",17,0);
    TaskMetricGroup tmGroup12=group.addTaskForJob(jid1,jobName1,vertex12,execution12,"test",13,1);
    TaskMetricGroup tmGroup21=group.addTaskForJob(jid2,jobName2,vertex21,execution21,"test",7,1);
    group.close();
    assertTrue(tmGroup11.isClosed());
    assertTrue(tmGroup12.isClosed());
    assertTrue(tmGroup21.isClosed());
  }
  @Test public void testGenerateScopeDefault(){
    TaskManagerMetricGroup group=new TaskManagerMetricGroup(registry,"localhost","id");
    assertArrayEquals(new String[]{"localhost","taskmanager","id"},group.getScopeComponents());
    assertEquals("localhost.taskmanager.id.name",group.getMetricIdentifier("name"));
  }
  @Test public void testGenerateScopeCustom() throws Exception {
    Configuration cfg=new Configuration();
    cfg.setString(MetricOptions.SCOPE_NAMING_TM,"constant.<host>.foo.<host>");
    MetricRegistryImpl registry=new MetricRegistryImpl(MetricRegistryConfiguration.fromConfiguration(cfg));
    TaskManagerMetricGroup group=new TaskManagerMetricGroup(registry,"host","id");
    assertArrayEquals(new String[]{"constant","host","foo","host"},group.getScopeComponents());
    assertEquals("constant.host.foo.host.name",group.getMetricIdentifier("name"));
    registry.shutdown().get();
  }
  @Test public void testCreateQueryServiceMetricInfo(){
    TaskManagerMetricGroup tm=new TaskManagerMetricGroup(registry,"host","id");
    QueryScopeInfo.TaskManagerQueryScopeInfo info=tm.createQueryServiceMetricInfo(new DummyCharacterFilter());
    assertEquals("",info.scope);
    assertEquals("id",info.taskManagerID);
  }
}
