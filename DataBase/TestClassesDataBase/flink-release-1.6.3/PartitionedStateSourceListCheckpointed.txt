private static class PartitionedStateSourceListCheckpointed extends StateSourceBase implements ListCheckpointed<Integer> {
  private static final long serialVersionUID=-4357864582992546L;
  private static final int NUM_PARTITIONS=7;
  private static int[] checkCorrectSnapshot;
  private static int[] checkCorrectRestore;
  @Override public List<Integer> snapshotState(  long checkpointId,  long timestamp) throws Exception {
    checkCorrectSnapshot[getRuntimeContext().getIndexOfThisSubtask()]=counter;
    int div=counter / NUM_PARTITIONS;
    int mod=counter % NUM_PARTITIONS;
    List<Integer> split=new ArrayList<>();
    for (int i=0; i < NUM_PARTITIONS; ++i) {
      int partitionValue=div;
      if (mod > 0) {
        --mod;
        ++partitionValue;
      }
      split.add(partitionValue);
    }
    return split;
  }
  @Override public void restoreState(  List<Integer> state) throws Exception {
    for (    Integer v : state) {
      counter+=v;
    }
    checkCorrectRestore[getRuntimeContext().getIndexOfThisSubtask()]=counter;
  }
}
