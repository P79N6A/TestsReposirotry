/** 
 * A mock  {@link ListState} used for testing the snapshot/restore cycle of the sink.
 */
static class MockListState<T> implements ListState<T> {
  private final List<T> backingList;
  MockListState(){
    this.backingList=new ArrayList<>();
  }
  public List<T> getBackingList(){
    return backingList;
  }
  @Override public void update(  List<T> values){
    backingList.clear();
    addAll(values);
  }
  @Override public void addAll(  List<T> values){
    backingList.addAll(values);
  }
  @Override public Iterable<T> get(){
    return new Iterable<T>(){
      @Nonnull @Override public Iterator<T> iterator(){
        return backingList.iterator();
      }
    }
;
  }
  @Override public void add(  T value){
    backingList.add(value);
  }
  @Override public void clear(){
    backingList.clear();
  }
}
