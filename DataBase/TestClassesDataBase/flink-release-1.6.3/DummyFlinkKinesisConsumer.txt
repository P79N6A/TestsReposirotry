private static class DummyFlinkKinesisConsumer<T> extends FlinkKinesisConsumer<T> {
  private static final long serialVersionUID=1L;
  private final KinesisDataFetcher<T> fetcher;
  private final int numParallelSubtasks;
  private final int subtaskIndex;
  @SuppressWarnings("unchecked") DummyFlinkKinesisConsumer(  Properties properties,  KinesisDataFetcher<T> fetcher,  int numParallelSubtasks,  int subtaskIndex){
    super("test",mock(KinesisDeserializationSchema.class),properties);
    this.fetcher=fetcher;
    this.numParallelSubtasks=numParallelSubtasks;
    this.subtaskIndex=subtaskIndex;
  }
  @Override protected KinesisDataFetcher<T> createFetcher(  List<String> streams,  SourceFunction.SourceContext<T> sourceContext,  RuntimeContext runtimeContext,  Properties configProps,  KinesisDeserializationSchema<T> deserializationSchema){
    return fetcher;
  }
  @Override public RuntimeContext getRuntimeContext(){
    RuntimeContext context=mock(RuntimeContext.class);
    when(context.getIndexOfThisSubtask()).thenReturn(subtaskIndex);
    when(context.getNumberOfParallelSubtasks()).thenReturn(numParallelSubtasks);
    return context;
  }
}
