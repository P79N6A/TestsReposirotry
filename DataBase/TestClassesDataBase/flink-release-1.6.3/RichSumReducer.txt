private static class RichSumReducer<W extends Window> extends RichWindowFunction<Tuple2<String,Integer>,Tuple2<String,Integer>,String,W> {
  private static final long serialVersionUID=1L;
  private boolean openCalled=false;
  private AtomicInteger closeCalled=new AtomicInteger(0);
  public RichSumReducer(  AtomicInteger closeCalled){
    this.closeCalled=closeCalled;
  }
  @Override public void open(  Configuration parameters) throws Exception {
    super.open(parameters);
    openCalled=true;
  }
  @Override public void close() throws Exception {
    super.close();
    closeCalled.incrementAndGet();
  }
  @Override public void apply(  String key,  W window,  Iterable<Tuple2<String,Integer>> input,  Collector<Tuple2<String,Integer>> out) throws Exception {
    if (!openCalled) {
      Assert.fail("Open was not called");
    }
    int sum=0;
    for (    Tuple2<String,Integer> t : input) {
      sum+=t.f1;
    }
    out.collect(new Tuple2<>(key,sum));
  }
}
