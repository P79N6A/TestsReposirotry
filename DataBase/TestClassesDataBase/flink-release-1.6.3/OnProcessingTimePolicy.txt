private static class OnProcessingTimePolicy<IN,BucketID> implements RollingPolicy<IN,BucketID> {
  private static final long serialVersionUID=1L;
  private int onProcessingTimeRollCounter=0;
  private final long rolloverInterval;
  OnProcessingTimePolicy(  final long rolloverInterval){
    this.rolloverInterval=rolloverInterval;
  }
  public int getOnProcessingTimeRollCounter(){
    return onProcessingTimeRollCounter;
  }
  @Override public boolean shouldRollOnCheckpoint(  PartFileInfo<BucketID> partFileState){
    return false;
  }
  @Override public boolean shouldRollOnEvent(  PartFileInfo<BucketID> partFileState,  IN element){
    return false;
  }
  @Override public boolean shouldRollOnProcessingTime(  PartFileInfo<BucketID> partFileState,  long currentTime){
    boolean result=currentTime - partFileState.getCreationTime() >= rolloverInterval;
    if (result) {
      onProcessingTimeRollCounter++;
    }
    return result;
  }
}
