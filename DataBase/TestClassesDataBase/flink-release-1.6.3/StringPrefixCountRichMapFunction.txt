private static class StringPrefixCountRichMapFunction extends RichMapFunction<String,PrefixCount> implements ListCheckpointed<Long> {
  static long[] counts=new long[PARALLELISM];
  private long count;
  @Override public PrefixCount map(  String value){
    count+=1;
    return new PrefixCount(value.substring(0,1),value,1L);
  }
  @Override public List<Long> snapshotState(  long checkpointId,  long timestamp) throws Exception {
    return Collections.singletonList(this.count);
  }
  @Override public void restoreState(  List<Long> state) throws Exception {
    if (state.isEmpty() || state.size() > 1) {
      throw new RuntimeException("Test failed due to unexpected recovered state size " + state.size());
    }
    this.count=state.get(0);
  }
  @Override public void close() throws IOException {
    counts[getRuntimeContext().getIndexOfThisSubtask()]=count;
  }
}
