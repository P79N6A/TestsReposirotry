/** 
 * {@link org.apache.flink.api.common.typeutils.SerializerTestBase#testInstantiate()}checks that the type of the created instance is the same as the type class parameter. Since we arbitrarily create always create a Left instance we override this test.
 */
private class EitherSerializerTestInstance<T> extends SerializerTestInstance<T> {
  public EitherSerializerTestInstance(  TypeSerializer<T> serializer,  Class<T> typeClass,  int length,  T[] testData){
    super(serializer,typeClass,length,testData);
  }
  @Override @Test public void testInstantiate(){
    try {
      TypeSerializer<T> serializer=getSerializer();
      T instance=serializer.createInstance();
      assertNotNull("The created instance must not be null.",instance);
      Class<T> type=getTypeClass();
      assertNotNull("The test is corrupt: type class is null.",type);
    }
 catch (    Exception e) {
      System.err.println(e.getMessage());
      e.printStackTrace();
      fail("Exception in test: " + e.getMessage());
    }
  }
}
