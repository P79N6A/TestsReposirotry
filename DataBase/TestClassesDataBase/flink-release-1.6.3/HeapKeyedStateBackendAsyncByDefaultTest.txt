/** 
 * This tests that all heap-based state backends use asynchronous snapshots by default.
 */
public class HeapKeyedStateBackendAsyncByDefaultTest {
  @Rule public final TemporaryFolder tmpFolder=new TemporaryFolder();
  @Test public void testConfigOptionDefaultsToAsync(){
    assertTrue(CheckpointingOptions.ASYNC_SNAPSHOTS.defaultValue());
  }
  @Test public void testFsStateBackendDefaultsToAsync() throws Exception {
    FsStateBackend backend=new FsStateBackend(tmpFolder.newFolder().toURI());
    assertTrue(backend.isUsingAsynchronousSnapshots());
    validateSupportForAsyncSnapshots(backend);
  }
  @Test public void testMemoryStateBackendDefaultsToAsync() throws Exception {
    MemoryStateBackend backend=new MemoryStateBackend();
    assertTrue(backend.isUsingAsynchronousSnapshots());
    validateSupportForAsyncSnapshots(backend);
  }
  private void validateSupportForAsyncSnapshots(  StateBackend backend) throws Exception {
    AbstractKeyedStateBackend<Integer> keyedStateBackend=backend.createKeyedStateBackend(new DummyEnvironment("Test",1,0),new JobID(),"testOperator",IntSerializer.INSTANCE,1,new KeyGroupRange(0,0),null,TtlTimeProvider.DEFAULT);
    assertTrue(keyedStateBackend.supportsAsynchronousSnapshots());
    IOUtils.closeQuietly(keyedStateBackend);
    keyedStateBackend.dispose();
  }
}
