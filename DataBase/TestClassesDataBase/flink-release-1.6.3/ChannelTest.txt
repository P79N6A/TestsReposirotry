public class ChannelTest {
  @Test public void testGetEstimatesNoReplicationFactor(){
    final long NUM_RECORD=1001;
    final long SIZE=467131;
    DataSourceNode source=getSourceNode();
    SourcePlanNode planNode=new SourcePlanNode(source,"test node");
    Channel channel=new Channel(planNode);
    Assert.assertEquals(-1,channel.getEstimatedOutputSize());
    Assert.assertEquals(-1,channel.getEstimatedNumRecords());
    source.setEstimatedNumRecords(NUM_RECORD);
    source.setEstimatedOutputSize(SIZE);
    Assert.assertEquals(SIZE,channel.getEstimatedOutputSize());
    Assert.assertEquals(NUM_RECORD,channel.getEstimatedNumRecords());
  }
  @Test public void testGetEstimatesWithReplicationFactor(){
    final long NUM_RECORD=1001;
    final long SIZE=467131;
    final int REPLICATION=23;
    DataSourceNode source=getSourceNode();
    SourcePlanNode planNode=new SourcePlanNode(source,"test node");
    Channel channel=new Channel(planNode);
    channel.setReplicationFactor(REPLICATION);
    Assert.assertEquals(-1,channel.getEstimatedOutputSize());
    Assert.assertEquals(-1,channel.getEstimatedNumRecords());
    source.setEstimatedNumRecords(NUM_RECORD);
    source.setEstimatedOutputSize(SIZE);
    Assert.assertEquals(SIZE * REPLICATION,channel.getEstimatedOutputSize());
    Assert.assertEquals(NUM_RECORD * REPLICATION,channel.getEstimatedNumRecords());
  }
  private static final DataSourceNode getSourceNode(){
    return new DataSourceNode(new GenericDataSourceBase<String,TextInputFormat>(new TextInputFormat(new Path("/ignored")),new OperatorInformation<String>(BasicTypeInfo.STRING_TYPE_INFO),"source"));
  }
}
