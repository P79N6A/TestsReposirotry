private static class CollectingSourceContext<T> implements SourceFunction.SourceContext<T> {
  private final BlockingQueue<Object> events;
  private CollectingSourceContext(  BlockingQueue<Object> events){
    this.events=Objects.requireNonNull(events,"events");
  }
  @Override public void collect(  T element){
    events.offer(element);
  }
  @Override public void collectWithTimestamp(  T element,  long timestamp){
    throw new UnsupportedOperationException();
  }
  @Override public void emitWatermark(  Watermark mark){
    throw new UnsupportedOperationException();
  }
  @Override public void markAsTemporarilyIdle(){
    throw new UnsupportedOperationException();
  }
  @Override public Object getCheckpointLock(){
    throw new UnsupportedOperationException();
  }
  @Override public void close(){
  }
}
