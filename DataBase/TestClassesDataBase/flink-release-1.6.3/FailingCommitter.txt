private static class FailingCommitter extends CheckpointCommitter {
  private static final long serialVersionUID=1L;
  private List<Tuple2<Long,Integer>> checkpoints;
  private boolean failIsCommitted=true;
  private boolean failCommit=true;
  @Override public void open() throws Exception {
  }
  @Override public void close() throws Exception {
  }
  @Override public void createResource() throws Exception {
    checkpoints=new ArrayList<>();
  }
  @Override public void commitCheckpoint(  int subtaskIdx,  long checkpointID){
    if (failCommit) {
      failCommit=false;
      throw new RuntimeException("Expected exception");
    }
 else {
      checkpoints.add(new Tuple2<>(checkpointID,subtaskIdx));
    }
  }
  @Override public boolean isCheckpointCommitted(  int subtaskIdx,  long checkpointID){
    if (failIsCommitted) {
      failIsCommitted=false;
      throw new RuntimeException("Expected exception");
    }
 else {
      return false;
    }
  }
}
