static class TestRetryingRegistration extends RetryingRegistration<UUID,TestRegistrationGateway,TestRegistrationSuccess> {
  static final long INITIAL_TIMEOUT=20;
  static final long MAX_TIMEOUT=200;
  static final long DELAY_ON_ERROR=200;
  static final long DELAY_ON_DECLINE=200;
  public TestRetryingRegistration(  RpcService rpc,  String targetAddress,  UUID leaderId){
    this(rpc,targetAddress,leaderId,INITIAL_TIMEOUT,MAX_TIMEOUT,DELAY_ON_ERROR,DELAY_ON_DECLINE);
  }
  public TestRetryingRegistration(  RpcService rpc,  String targetAddress,  UUID leaderId,  long initialTimeout,  long maxTimeout,  long delayOnError,  long delayOnDecline){
    super(LoggerFactory.getLogger(RetryingRegistrationTest.class),rpc,"TestEndpoint",TestRegistrationGateway.class,targetAddress,leaderId,initialTimeout,maxTimeout,delayOnError,delayOnDecline);
  }
  @Override protected CompletableFuture<RegistrationResponse> invokeRegistration(  TestRegistrationGateway gateway,  UUID leaderId,  long timeoutMillis){
    return gateway.registrationCall(leaderId,timeoutMillis);
  }
}
