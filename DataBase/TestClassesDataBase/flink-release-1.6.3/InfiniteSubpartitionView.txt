static class InfiniteSubpartitionView implements ResultSubpartitionView {
  private final BufferProvider bufferProvider;
  private final CountDownLatch sync;
  public InfiniteSubpartitionView(  BufferProvider bufferProvider,  CountDownLatch sync){
    this.bufferProvider=checkNotNull(bufferProvider);
    this.sync=checkNotNull(sync);
  }
  @Nullable @Override public BufferAndBacklog getNextBuffer() throws IOException, InterruptedException {
    Buffer buffer=bufferProvider.requestBufferBlocking();
    buffer.setSize(buffer.getMaxCapacity());
    return new BufferAndBacklog(buffer,true,0,false);
  }
  @Override public void notifyDataAvailable(){
  }
  @Override public void releaseAllResources() throws IOException {
    sync.countDown();
  }
  @Override public void notifySubpartitionConsumed() throws IOException {
  }
  @Override public boolean isReleased(){
    return false;
  }
  @Override public boolean nextBufferIsEvent(){
    return false;
  }
  @Override public boolean isAvailable(){
    return true;
  }
  @Override public Throwable getFailureCause(){
    return null;
  }
}
