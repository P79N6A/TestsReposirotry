/** 
 * IT cases for the  {@link ElasticsearchSink}. <p>The Elasticsearch ITCases for 5.x CANNOT be executed in the IDE directly, since it is required that the Log4J-to-SLF4J adapter dependency must be excluded from the test classpath for the Elasticsearch embedded node used in the tests to work properly.
 */
public class ElasticsearchSinkITCase extends ElasticsearchSinkTestBase<TransportClient,InetSocketAddress> {
  @Test public void testElasticsearchSink() throws Exception {
    runElasticsearchSinkTest();
  }
  @Test public void testNullAddresses() throws Exception {
    runNullAddressesTest();
  }
  @Test public void testEmptyAddresses() throws Exception {
    runEmptyAddressesTest();
  }
  @Test public void testInvalidElasticsearchCluster() throws Exception {
    runInvalidElasticsearchClusterTest();
  }
  @Override protected ElasticsearchSinkBase<Tuple2<Integer,String>,TransportClient> createElasticsearchSink(  int bulkFlushMaxActions,  String clusterName,  List<InetSocketAddress> addresses,  ElasticsearchSinkFunction<Tuple2<Integer,String>> elasticsearchSinkFunction){
    return new ElasticsearchSink<>(Collections.unmodifiableMap(createUserConfig(bulkFlushMaxActions,clusterName)),addresses,elasticsearchSinkFunction);
  }
  @Override protected ElasticsearchSinkBase<Tuple2<Integer,String>,TransportClient> createElasticsearchSinkForEmbeddedNode(  int bulkFlushMaxActions,  String clusterName,  ElasticsearchSinkFunction<Tuple2<Integer,String>> elasticsearchSinkFunction) throws Exception {
    return createElasticsearchSinkForNode(bulkFlushMaxActions,clusterName,elasticsearchSinkFunction,"127.0.0.1");
  }
  @Override protected ElasticsearchSinkBase<Tuple2<Integer,String>,TransportClient> createElasticsearchSinkForNode(  int bulkFlushMaxActions,  String clusterName,  ElasticsearchSinkFunction<Tuple2<Integer,String>> elasticsearchSinkFunction,  String ipAddress) throws Exception {
    List<InetSocketAddress> transports=new ArrayList<>();
    transports.add(new InetSocketAddress(InetAddress.getByName(ipAddress),9300));
    return new ElasticsearchSink<>(Collections.unmodifiableMap(createUserConfig(bulkFlushMaxActions,clusterName)),transports,elasticsearchSinkFunction);
  }
}
