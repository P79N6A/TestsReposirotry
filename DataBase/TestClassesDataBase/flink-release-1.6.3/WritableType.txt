/** 
 * A simple test type. 
 */
public static final class WritableType implements IOReadableWritable {
  private int aInt;
  private long aLong;
  public WritableType(){
    Random rnd=new Random();
    this.aInt=rnd.nextInt();
    this.aLong=rnd.nextLong();
  }
  @Override public int hashCode(){
    return Objects.hash(aInt,aLong);
  }
  @Override public boolean equals(  Object obj){
    if (obj == this) {
      return true;
    }
 else     if (obj != null && obj.getClass() == WritableType.class) {
      WritableType that=(WritableType)obj;
      return this.aLong == that.aLong && this.aInt == that.aInt;
    }
 else {
      return false;
    }
  }
  @Override public void write(  DataOutputView out) throws IOException {
    out.writeInt(aInt);
    out.writeLong(aLong);
  }
  @Override public void read(  DataInputView in) throws IOException {
    this.aInt=in.readInt();
    this.aLong=in.readLong();
  }
}
