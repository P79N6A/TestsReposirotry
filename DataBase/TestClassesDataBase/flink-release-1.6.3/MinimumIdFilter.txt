private static class MinimumIdFilter extends RichFlatMapFunction<Tuple2<Tuple2<Long,Long>,Tuple2<Long,Long>>,Tuple2<Long,Long>> {
  private final String aggName;
  private LongSumAggregator aggr;
  public MinimumIdFilter(  String aggName){
    this.aggName=aggName;
  }
  @Override public void open(  Configuration conf){
    aggr=getIterationRuntimeContext().getIterationAggregator(aggName);
  }
  @Override public void flatMap(  Tuple2<Tuple2<Long,Long>,Tuple2<Long,Long>> vertexWithNewAndOldId,  Collector<Tuple2<Long,Long>> out){
    if (vertexWithNewAndOldId.f0.f1 < vertexWithNewAndOldId.f1.f1) {
      out.collect(vertexWithNewAndOldId.f0);
      aggr.aggregate(1L);
    }
 else {
      out.collect(vertexWithNewAndOldId.f1);
    }
  }
}
