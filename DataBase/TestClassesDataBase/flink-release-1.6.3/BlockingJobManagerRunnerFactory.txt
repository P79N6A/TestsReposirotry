private final class BlockingJobManagerRunnerFactory extends TestingJobManagerRunnerFactory {
  @Nonnull private final ThrowingRunnable<Exception> jobManagerRunnerCreationLatch;
  BlockingJobManagerRunnerFactory(  @Nonnull ThrowingRunnable<Exception> jobManagerRunnerCreationLatch){
    super(new CompletableFuture<>(),new CompletableFuture<>(),CompletableFuture.completedFuture(null));
    this.jobManagerRunnerCreationLatch=jobManagerRunnerCreationLatch;
  }
  @Override public JobManagerRunner createJobManagerRunner(  ResourceID resourceId,  JobGraph jobGraph,  Configuration configuration,  RpcService rpcService,  HighAvailabilityServices highAvailabilityServices,  HeartbeatServices heartbeatServices,  BlobServer blobServer,  JobManagerSharedServices jobManagerSharedServices,  JobManagerJobMetricGroupFactory jobManagerJobMetricGroupFactory,  FatalErrorHandler fatalErrorHandler) throws Exception {
    jobManagerRunnerCreationLatch.run();
    return super.createJobManagerRunner(resourceId,jobGraph,configuration,rpcService,highAvailabilityServices,heartbeatServices,blobServer,jobManagerSharedServices,jobManagerJobMetricGroupFactory,fatalErrorHandler);
  }
}
