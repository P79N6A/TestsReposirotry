private static class PageRankStatsAggregator implements Aggregator<PageRankStats> {
  private double diff;
  private double rank;
  private double danglingRank;
  private long numDanglingVertices;
  private long numVertices;
  private long edges;
  @Override public PageRankStats getAggregate(){
    return new PageRankStats(diff,rank,danglingRank,numDanglingVertices,numVertices,edges);
  }
  public void aggregate(  double diffDelta,  double rankDelta,  double danglingRankDelta,  long danglingVerticesDelta,  long verticesDelta,  long edgesDelta){
    diff+=diffDelta;
    rank+=rankDelta;
    danglingRank+=danglingRankDelta;
    numDanglingVertices+=danglingVerticesDelta;
    numVertices+=verticesDelta;
    edges+=edgesDelta;
  }
  @Override public void aggregate(  PageRankStats pageRankStats){
    diff+=pageRankStats.diff();
    rank+=pageRankStats.rank();
    danglingRank+=pageRankStats.danglingRank();
    numDanglingVertices+=pageRankStats.numDanglingVertices();
    numVertices+=pageRankStats.numVertices();
    edges+=pageRankStats.edges();
  }
  @Override public void reset(){
    diff=0;
    rank=0;
    danglingRank=0;
    numDanglingVertices=0;
    numVertices=0;
    edges=0;
  }
}
