public class SSLStoreOverlayTest extends ContainerOverlayTestBase {
  @Rule public TemporaryFolder tempFolder=new TemporaryFolder();
  @Test public void testConfigure() throws Exception {
    File keystore=tempFolder.newFile();
    File truststore=tempFolder.newFile();
    SSLStoreOverlay overlay=new SSLStoreOverlay(keystore,truststore);
    ContainerSpecification spec=new ContainerSpecification();
    overlay.configure(spec);
    assertEquals(TARGET_KEYSTORE_PATH.getPath(),spec.getDynamicConfiguration().getString(SecurityOptions.SSL_KEYSTORE));
    checkArtifact(spec,TARGET_KEYSTORE_PATH);
    assertEquals(TARGET_TRUSTSTORE_PATH.getPath(),spec.getDynamicConfiguration().getString(SecurityOptions.SSL_TRUSTSTORE));
    checkArtifact(spec,TARGET_TRUSTSTORE_PATH);
  }
  @Test public void testNoConf() throws Exception {
    SSLStoreOverlay overlay=new SSLStoreOverlay(null,null);
    ContainerSpecification containerSpecification=new ContainerSpecification();
    overlay.configure(containerSpecification);
  }
  @Test public void testBuilderFromEnvironment() throws Exception {
    final Configuration conf=new Configuration();
    File keystore=tempFolder.newFile();
    File truststore=tempFolder.newFile();
    conf.setString(SecurityOptions.SSL_KEYSTORE,keystore.getAbsolutePath());
    conf.setString(SecurityOptions.SSL_TRUSTSTORE,truststore.getAbsolutePath());
    SSLStoreOverlay.Builder builder=SSLStoreOverlay.newBuilder().fromEnvironment(conf);
    assertEquals(builder.keystorePath,keystore);
    assertEquals(builder.truststorePath,truststore);
  }
}
