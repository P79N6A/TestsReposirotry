@RunWith(Parameterized.class) public abstract class HeapStateBackendTestBase {
  @Parameterized.Parameters public static Collection<Boolean> parameters(){
    return Arrays.asList(false,true);
  }
  @Parameterized.Parameter public boolean async;
  public HeapKeyedStateBackend<String> createKeyedBackend() throws Exception {
    return createKeyedBackend(StringSerializer.INSTANCE);
  }
  public <K>HeapKeyedStateBackend<K> createKeyedBackend(  TypeSerializer<K> keySerializer) throws Exception {
    final KeyGroupRange keyGroupRange=new KeyGroupRange(0,15);
    final int numKeyGroups=keyGroupRange.getNumberOfKeyGroups();
    return new HeapKeyedStateBackend<>(mock(TaskKvStateRegistry.class),keySerializer,HeapStateBackendTestBase.class.getClassLoader(),numKeyGroups,keyGroupRange,async,new ExecutionConfig(),TestLocalRecoveryConfig.disabled(),new HeapPriorityQueueSetFactory(keyGroupRange,numKeyGroups,128),TtlTimeProvider.DEFAULT);
  }
}
