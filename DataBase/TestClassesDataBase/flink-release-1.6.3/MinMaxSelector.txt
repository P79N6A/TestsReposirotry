private static class MinMaxSelector<T> implements MapPartitionFunction<T,Tuple2<T,T>> {
  private final Comparator<T> comparator;
  public MinMaxSelector(  Comparator<T> comparator){
    this.comparator=comparator;
  }
  @Override public void mapPartition(  Iterable<T> values,  Collector<Tuple2<T,T>> out) throws Exception {
    Iterator<T> itr=values.iterator();
    T min=itr.next();
    T max=min;
    T value;
    while (itr.hasNext()) {
      value=itr.next();
      if (comparator.compare(value,min) < 0) {
        min=value;
      }
      if (comparator.compare(value,max) > 0) {
        max=value;
      }
    }
    Tuple2<T,T> result=new Tuple2<>(min,max);
    out.collect(result);
  }
}
