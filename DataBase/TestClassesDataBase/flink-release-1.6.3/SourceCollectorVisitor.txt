/** 
 * Collects all DataSources of a plan to add statistics
 */
public static class SourceCollectorVisitor implements Visitor<Operator<?>> {
  protected final List<GenericDataSourceBase<?,?>> sources=new ArrayList<GenericDataSourceBase<?,?>>(4);
  @Override public boolean preVisit(  Operator<?> visitable){
    if (visitable instanceof GenericDataSourceBase) {
      sources.add((GenericDataSourceBase<?,?>)visitable);
    }
 else     if (visitable instanceof BulkIterationBase) {
      ((BulkIterationBase<?>)visitable).getNextPartialSolution().accept(this);
    }
    return true;
  }
  @Override public void postVisit(  Operator<?> visitable){
  }
  public List<GenericDataSourceBase<?,?>> getSources(){
    return this.sources;
  }
}
