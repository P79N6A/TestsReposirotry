public class HighAvailabilityModeTest {
  private final static HighAvailabilityMode DEFAULT_HA_MODE=HighAvailabilityMode.valueOf(ConfigConstants.DEFAULT_HA_MODE.toUpperCase());
  /** 
 * Tests HA mode configuration.
 */
  @Test public void testFromConfig() throws Exception {
    Configuration config=new Configuration();
    assertEquals(DEFAULT_HA_MODE,HighAvailabilityMode.fromConfig(config));
    config.setString(HighAvailabilityOptions.HA_MODE,HighAvailabilityMode.ZOOKEEPER.name().toLowerCase());
    assertEquals(HighAvailabilityMode.ZOOKEEPER,HighAvailabilityMode.fromConfig(config));
  }
  /** 
 * Tests HA mode configuration with deprecated config values.
 */
  @Test public void testDeprecatedFromConfig() throws Exception {
    Configuration config=new Configuration();
    config.setString("recovery.mode",ConfigConstants.DEFAULT_RECOVERY_MODE);
    assertEquals(DEFAULT_HA_MODE,HighAvailabilityMode.fromConfig(config));
    config.setString("recovery.mode",HighAvailabilityMode.ZOOKEEPER.name().toLowerCase());
    assertEquals(HighAvailabilityMode.ZOOKEEPER,HighAvailabilityMode.fromConfig(config));
    config.setString("high-availability",HighAvailabilityMode.NONE.name().toLowerCase());
    config.setString("recovery.mode",HighAvailabilityMode.ZOOKEEPER.name().toLowerCase());
    assertEquals(HighAvailabilityMode.NONE,HighAvailabilityMode.fromConfig(config));
  }
}
