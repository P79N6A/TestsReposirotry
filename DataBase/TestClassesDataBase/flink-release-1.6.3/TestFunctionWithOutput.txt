private static class TestFunctionWithOutput extends BroadcastProcessFunction<String,Integer,String> {
  private static final long serialVersionUID=7496674620398203933L;
  private final Set<String> keysToRegister;
  TestFunctionWithOutput(  Set<String> keysToRegister){
    this.keysToRegister=Preconditions.checkNotNull(keysToRegister);
  }
  @Override public void processBroadcastElement(  Integer value,  Context ctx,  Collector<String> out) throws Exception {
    for (    String k : keysToRegister) {
      ctx.getBroadcastState(STATE_DESCRIPTOR).put(k,value);
    }
  }
  @Override public void processElement(  String value,  ReadOnlyContext ctx,  Collector<String> out) throws Exception {
    for (    Map.Entry<String,Integer> entry : ctx.getBroadcastState(STATE_DESCRIPTOR).immutableEntries()) {
      out.collect(entry.toString());
    }
  }
}
