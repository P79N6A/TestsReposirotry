private static class WatchDog extends Thread {
  private final Thread toWatch;
  private final long timeOut;
  private volatile Throwable failed;
  public WatchDog(  Thread toWatch,  long timeout){
    setDaemon(true);
    setName("Watchdog");
    this.toWatch=toWatch;
    this.timeOut=timeout;
  }
  @SuppressWarnings("deprecation") @Override public void run(){
    try {
      toWatch.join(timeOut);
      if (toWatch.isAlive()) {
        this.failed=new Exception("timed out");
        toWatch.interrupt();
        toWatch.join(2000);
        if (toWatch.isAlive()) {
          toWatch.stop();
        }
      }
    }
 catch (    Throwable t) {
      failed=t;
    }
  }
  public Throwable getError(){
    return failed;
  }
}
