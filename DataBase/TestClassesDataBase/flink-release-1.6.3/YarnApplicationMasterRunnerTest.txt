/** 
 * Tests for the  {@link YarnApplicationMasterRunner}.
 */
public class YarnApplicationMasterRunnerTest {
  private static final Logger LOG=LoggerFactory.getLogger(YarnApplicationMasterRunnerTest.class);
  @Rule public TemporaryFolder folder=new TemporaryFolder();
  @BeforeClass public static void checkOS(){
    Assume.assumeTrue(!OperatingSystem.isWindows());
  }
  @Test public void testCreateTaskExecutorContext() throws Exception {
    File root=folder.getRoot();
    File home=new File(root,"home");
    boolean created=home.mkdir();
    assertTrue(created);
    Answer<?> getDefault=new Answer<Object>(){
      @Override public Object answer(      InvocationOnMock invocationOnMock) throws Throwable {
        return invocationOnMock.getArguments()[1];
      }
    }
;
    Configuration flinkConf=new Configuration();
    YarnConfiguration yarnConf=mock(YarnConfiguration.class);
    doAnswer(getDefault).when(yarnConf).get(anyString(),anyString());
    doAnswer(getDefault).when(yarnConf).getInt(anyString(),anyInt());
    doAnswer(new Answer(){
      @Override public Object answer(      InvocationOnMock invocationOnMock) throws Throwable {
        return new String[]{(String)invocationOnMock.getArguments()[1]};
      }
    }
).when(yarnConf).getStrings(anyString(),Mockito.<String>anyVararg());
    Map<String,String> env=new HashMap<>();
    env.put(ENV_APP_ID,"foo");
    env.put(ENV_CLIENT_HOME_DIR,home.getAbsolutePath());
    env.put(ENV_CLIENT_SHIP_FILES,"");
    env.put(ENV_FLINK_CLASSPATH,"");
    env.put(ENV_HADOOP_USER_NAME,"foo");
    env.put(FLINK_JAR_PATH,root.toURI().toString());
    env=Collections.unmodifiableMap(env);
    ContaineredTaskManagerParameters tmParams=mock(ContaineredTaskManagerParameters.class);
    Configuration taskManagerConf=new Configuration();
    String workingDirectory=root.getAbsolutePath();
    Class<?> taskManagerMainClass=YarnApplicationMasterRunnerTest.class;
    ContainerLaunchContext ctx=Utils.createTaskExecutorContext(flinkConf,yarnConf,env,tmParams,taskManagerConf,workingDirectory,taskManagerMainClass,LOG);
    assertEquals("file",ctx.getLocalResources().get("flink.jar").getResource().getScheme());
  }
}
