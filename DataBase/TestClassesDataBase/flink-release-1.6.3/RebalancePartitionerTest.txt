/** 
 * Tests for  {@link RebalancePartitioner}.
 */
public class RebalancePartitionerTest {
  private RebalancePartitioner<Tuple> distributePartitioner;
  private StreamRecord<Tuple> streamRecord=new StreamRecord<Tuple>(null);
  private SerializationDelegate<StreamRecord<Tuple>> sd=new SerializationDelegate<StreamRecord<Tuple>>(null);
  @Before public void setPartitioner(){
    distributePartitioner=new RebalancePartitioner<Tuple>();
  }
  @Test public void testSelectChannelsLength(){
    sd.setInstance(streamRecord);
    assertEquals(1,distributePartitioner.selectChannels(sd,1).length);
    assertEquals(1,distributePartitioner.selectChannels(sd,2).length);
    assertEquals(1,distributePartitioner.selectChannels(sd,1024).length);
  }
  @Test public void testSelectChannelsInterval(){
    sd.setInstance(streamRecord);
    assertEquals(0,distributePartitioner.selectChannels(sd,3)[0]);
    assertEquals(1,distributePartitioner.selectChannels(sd,3)[0]);
    assertEquals(2,distributePartitioner.selectChannels(sd,3)[0]);
    assertEquals(0,distributePartitioner.selectChannels(sd,3)[0]);
  }
}
