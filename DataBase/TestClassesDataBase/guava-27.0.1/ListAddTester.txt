/** 
 * A generic JUnit test which tests  {@code add(Object)} operations on a list. Can't be invokeddirectly; please see  {@link com.google.common.collect.testing.ListTestSuiteBuilder}.
 * @author Chris Povirk
 */
@SuppressWarnings("unchecked") @GwtCompatible(emulated=true) @Ignore public class ListAddTester<E> extends AbstractListTester<E> {
  @CollectionFeature.Require(SUPPORTS_ADD) @CollectionSize.Require(absent=ZERO) public void testAdd_supportedPresent(){
    assertTrue("add(present) should return true",getList().add(e0()));
    expectAdded(e0());
  }
  @CollectionFeature.Require(absent=SUPPORTS_ADD) @CollectionSize.Require(absent=ZERO) public void testAdd_unsupportedPresent(){
    try {
      getList().add(e0());
      fail("add(present) should throw");
    }
 catch (    UnsupportedOperationException expected) {
    }
  }
  @CollectionFeature.Require(value={SUPPORTS_ADD,ALLOWS_NULL_VALUES}) @CollectionSize.Require(absent=ZERO) public void testAdd_supportedNullPresent(){
    E[] array=createArrayWithNullElement();
    collection=getSubjectGenerator().create(array);
    assertTrue("add(nullPresent) should return true",getList().add(null));
    List<E> expected=Helpers.copyToList(array);
    expected.add(null);
    expectContents(expected);
  }
  /** 
 * Returns the  {@link Method} instance for {@link #testAdd_supportedNullPresent()} so that testscan suppress it. See  {@link CollectionAddTester#getAddNullSupportedMethod()} for details.
 */
  @GwtIncompatible public static Method getAddSupportedNullPresentMethod(){
    return Helpers.getMethod(ListAddTester.class,"testAdd_supportedNullPresent");
  }
}
