/** 
 * A generic JUnit test which tests  {@code spliterator} operations on a collection. Can't be invokeddirectly; please see  {@link com.google.common.collect.testing.CollectionTestSuiteBuilder}.
 * @author Louis Wasserman
 */
@GwtCompatible(emulated=true) @Ignore public class CollectionSpliteratorTester<E> extends AbstractCollectionTester<E> {
  @CollectionFeature.Require(absent=KNOWN_ORDER) public void testSpliteratorUnknownOrder(){
synchronized (collection) {
      SpliteratorTester.of(collection::spliterator).expect(getSampleElements());
    }
  }
  @CollectionFeature.Require(KNOWN_ORDER) public void testSpliteratorKnownOrder(){
synchronized (collection) {
      SpliteratorTester.of(collection::spliterator).expect(getOrderedElements()).inOrder();
    }
  }
  @CollectionFeature.Require(ALLOWS_NULL_VALUES) @CollectionSize.Require(absent=ZERO) public void testSpliteratorNullable(){
    initCollectionWithNullElement();
synchronized (collection) {
      assertFalse(collection.spliterator().hasCharacteristics(Spliterator.NONNULL));
    }
  }
  @CollectionFeature.Require(SUPPORTS_ADD) public void testSpliteratorNotImmutable_CollectionAllowsAdd(){
synchronized (collection) {
      assertFalse(collection.spliterator().hasCharacteristics(Spliterator.IMMUTABLE));
    }
  }
  @CollectionFeature.Require(SUPPORTS_REMOVE) public void testSpliteratorNotImmutable_CollectionAllowsRemove(){
synchronized (collection) {
      assertFalse(collection.spliterator().hasCharacteristics(Spliterator.IMMUTABLE));
    }
  }
  @GwtIncompatible public static Method getSpliteratorNotImmutableCollectionAllowsAddMethod(){
    return Helpers.getMethod(CollectionSpliteratorTester.class,"testSpliteratorNotImmutable_CollectionAllowsAdd");
  }
  @GwtIncompatible public static Method getSpliteratorNotImmutableCollectionAllowsRemoveMethod(){
    return Helpers.getMethod(CollectionSpliteratorTester.class,"testSpliteratorNotImmutable_CollectionAllowsRemove");
  }
}
