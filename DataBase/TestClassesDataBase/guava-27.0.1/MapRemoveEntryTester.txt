/** 
 * Tester for  {@link Map#remove(Object,Object)}. Can't be invoked directly; please see  {@link com.google.common.collect.testing.MapTestSuiteBuilder}.
 * @author Louis Wasserman
 */
@GwtCompatible @Ignore public class MapRemoveEntryTester<K,V> extends AbstractMapTester<K,V> {
  @MapFeature.Require(SUPPORTS_REMOVE) @CollectionSize.Require(absent=ZERO) public void testRemove_supportedPresent(){
    assertTrue(getMap().remove(k0(),v0()));
    expectMissing(e0());
  }
  @MapFeature.Require(SUPPORTS_REMOVE) public void testRemove_supportedPresentKeyWrongValue(){
    assertFalse(getMap().remove(k0(),v3()));
    expectUnchanged();
  }
  @MapFeature.Require(SUPPORTS_REMOVE) public void testRemove_supportedWrongKeyPresentValue(){
    assertFalse(getMap().remove(k3(),v0()));
    expectUnchanged();
  }
  @MapFeature.Require(SUPPORTS_REMOVE) public void testRemove_supportedAbsentKeyAbsentValue(){
    assertFalse(getMap().remove(k3(),v3()));
    expectUnchanged();
  }
  @MapFeature.Require(value=SUPPORTS_REMOVE,absent=ALLOWS_NULL_KEY_QUERIES) public void testRemove_nullKeyQueriesUnsupported(){
    try {
      assertFalse(getMap().remove(null,v3()));
    }
 catch (    NullPointerException tolerated) {
    }
    expectUnchanged();
  }
  @MapFeature.Require(value=SUPPORTS_REMOVE,absent=ALLOWS_NULL_VALUE_QUERIES) public void testRemove_nullValueQueriesUnsupported(){
    try {
      assertFalse(getMap().remove(k3(),null));
    }
 catch (    NullPointerException tolerated) {
    }
    expectUnchanged();
  }
  @MapFeature.Require(absent=SUPPORTS_REMOVE) @CollectionSize.Require(absent=ZERO) public void testRemove_unsupportedPresent(){
    try {
      getMap().remove(k0(),v0());
      fail("Expected UnsupportedOperationException");
    }
 catch (    UnsupportedOperationException expected) {
    }
    expectUnchanged();
  }
  @MapFeature.Require(absent=SUPPORTS_REMOVE) public void testRemove_unsupportedAbsent(){
    try {
      assertFalse(getMap().remove(k0(),v3()));
    }
 catch (    UnsupportedOperationException tolerated) {
    }
    expectUnchanged();
  }
}
