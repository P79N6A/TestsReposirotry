/** 
 * Tester for  {@code Multimap.toString()}.
 * @author Louis Wasserman
 */
@GwtCompatible @Ignore public class MultimapToStringTester<K,V> extends AbstractMultimapTester<K,V,Multimap<K,V>> {
  @CollectionSize.Require(ZERO) @CollectionFeature.Require(absent=NON_STANDARD_TOSTRING) public void testToStringEmpty(){
    assertEquals("{}",multimap().toString());
  }
  @CollectionSize.Require(ONE) @CollectionFeature.Require(absent=NON_STANDARD_TOSTRING) public void testToStringSingleton(){
    assertEquals("{" + k0() + "=["+ v0()+ "]}",multimap().toString());
  }
  @CollectionSize.Require(absent=ZERO) @CollectionFeature.Require(absent=NON_STANDARD_TOSTRING) @MapFeature.Require(ALLOWS_NULL_KEYS) public void testToStringWithNullKey(){
    initMultimapWithNullKey();
    testToStringMatchesAsMap();
  }
  @CollectionSize.Require(absent=ZERO) @CollectionFeature.Require(absent=NON_STANDARD_TOSTRING) @MapFeature.Require(ALLOWS_NULL_VALUES) public void testToStringWithNullValue(){
    initMultimapWithNullValue();
    testToStringMatchesAsMap();
  }
  @CollectionFeature.Require(absent=NON_STANDARD_TOSTRING) public void testToStringMatchesAsMap(){
    assertEquals(multimap().asMap().toString(),multimap().toString());
  }
}
