abstract static class Chopper {
  final Chopper or(  final Chopper you){
    final Chopper i=this;
    return new Chopper(){
      @Override Optional<String> chop(      String str){
        return i.chop(str).or(you.chop(str));
      }
    }
;
  }
  abstract Optional<String> chop(  String str);
  static Chopper suffix(  final String suffix){
    return new Chopper(){
      @Override Optional<String> chop(      String str){
        if (str.endsWith(suffix)) {
          return Optional.of(str.substring(0,str.length() - suffix.length()));
        }
 else {
          return Optional.absent();
        }
      }
    }
;
  }
}
