/** 
 * A generic JUnit test which tests creation (typically through a constructor or static factory method) of a map. Can't be invoked directly; please see  {@link com.google.common.collect.testing.MapTestSuiteBuilder}.
 * @author Chris Povirk
 * @author Kevin Bourrillion
 */
@GwtCompatible(emulated=true) @Ignore public class MapCreationTester<K,V> extends AbstractMapTester<K,V> {
  @MapFeature.Require(ALLOWS_NULL_KEYS) @CollectionSize.Require(absent=ZERO) public void testCreateWithNullKeySupported(){
    initMapWithNullKey();
    expectContents(createArrayWithNullKey());
  }
  @MapFeature.Require(absent=ALLOWS_NULL_KEYS) @CollectionSize.Require(absent=ZERO) public void testCreateWithNullKeyUnsupported(){
    try {
      initMapWithNullKey();
      fail("Creating a map containing a null key should fail");
    }
 catch (    NullPointerException expected) {
    }
  }
  @MapFeature.Require(ALLOWS_NULL_VALUES) @CollectionSize.Require(absent=ZERO) public void testCreateWithNullValueSupported(){
    initMapWithNullValue();
    expectContents(createArrayWithNullValue());
  }
  @MapFeature.Require(absent=ALLOWS_NULL_VALUES) @CollectionSize.Require(absent=ZERO) public void testCreateWithNullValueUnsupported(){
    try {
      initMapWithNullValue();
      fail("Creating a map containing a null value should fail");
    }
 catch (    NullPointerException expected) {
    }
  }
  @MapFeature.Require({ALLOWS_NULL_KEYS,ALLOWS_NULL_VALUES}) @CollectionSize.Require(absent=ZERO) public void testCreateWithNullKeyAndValueSupported(){
    Entry<K,V>[] entries=createSamplesArray();
    entries[getNullLocation()]=entry(null,null);
    resetMap(entries);
    expectContents(entries);
  }
  @MapFeature.Require(value=ALLOWS_NULL_KEYS,absent=REJECTS_DUPLICATES_AT_CREATION) @CollectionSize.Require(absent={ZERO,ONE}) public void testCreateWithDuplicates_nullDuplicatesNotRejected(){
    expectFirstRemoved(getEntriesMultipleNullKeys());
  }
  @MapFeature.Require(absent=REJECTS_DUPLICATES_AT_CREATION) @CollectionSize.Require(absent={ZERO,ONE}) public void testCreateWithDuplicates_nonNullDuplicatesNotRejected(){
    expectFirstRemoved(getEntriesMultipleNonNullKeys());
  }
  @MapFeature.Require({ALLOWS_NULL_KEYS,REJECTS_DUPLICATES_AT_CREATION}) @CollectionSize.Require(absent={ZERO,ONE}) public void testCreateWithDuplicates_nullDuplicatesRejected(){
    Entry<K,V>[] entries=getEntriesMultipleNullKeys();
    try {
      resetMap(entries);
      fail("Should reject duplicate null elements at creation");
    }
 catch (    IllegalArgumentException expected) {
    }
  }
  @MapFeature.Require(REJECTS_DUPLICATES_AT_CREATION) @CollectionSize.Require(absent={ZERO,ONE}) public void testCreateWithDuplicates_nonNullDuplicatesRejected(){
    Entry<K,V>[] entries=getEntriesMultipleNonNullKeys();
    try {
      resetMap(entries);
      fail("Should reject duplicate non-null elements at creation");
    }
 catch (    IllegalArgumentException expected) {
    }
  }
  private Entry<K,V>[] getEntriesMultipleNullKeys(){
    Entry<K,V>[] entries=createArrayWithNullKey();
    entries[0]=entry(null,entries[0].getValue());
    return entries;
  }
  private Entry<K,V>[] getEntriesMultipleNonNullKeys(){
    Entry<K,V>[] entries=createSamplesArray();
    entries[0]=entry(k1(),v0());
    return entries;
  }
  private void expectFirstRemoved(  Entry<K,V>[] entries){
    resetMap(entries);
    List<Entry<K,V>> expectedWithDuplicateRemoved=Arrays.asList(entries).subList(1,getNumElements());
    expectContents(expectedWithDuplicateRemoved);
  }
  /** 
 * Returns the  {@link Method} instance for {@link #testCreateWithNullKeyUnsupported()} so thattests can suppress it with  {@code FeatureSpecificTestSuiteBuilder.suppressing()} until <ahref="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5045147">Sun bug 5045147</a> is fixed.
 */
  @GwtIncompatible public static Method getCreateWithNullKeyUnsupportedMethod(){
    return Helpers.getMethod(MapCreationTester.class,"testCreateWithNullKeyUnsupported");
  }
}
