/** 
 * Tester for  {@code Multimap.values}.
 * @author Louis Wasserman
 */
@GwtCompatible @Ignore public class MultimapValuesTester<K,V> extends AbstractMultimapTester<K,V,Multimap<K,V>> {
  public void testValues(){
    List<V> expected=Lists.newArrayList();
    for (    Entry<K,V> entry : getSampleElements()) {
      expected.add(entry.getValue());
    }
    assertEqualIgnoringOrder(expected,multimap().values());
  }
  @CollectionFeature.Require(KNOWN_ORDER) public void testValuesInOrder(){
    List<V> expected=Lists.newArrayList();
    for (    Entry<K,V> entry : getOrderedElements()) {
      expected.add(entry.getValue());
    }
    assertEqualInOrder(expected,multimap().values());
  }
  @CollectionFeature.Require(SUPPORTS_ITERATOR_REMOVE) @CollectionSize.Require(ONE) public void testValuesIteratorRemove(){
    Iterator<V> valuesItr=multimap().values().iterator();
    valuesItr.next();
    valuesItr.remove();
    assertTrue(multimap().isEmpty());
  }
}
