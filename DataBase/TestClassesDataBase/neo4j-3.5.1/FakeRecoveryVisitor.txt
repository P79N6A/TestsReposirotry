private static class FakeRecoveryVisitor implements RecoveryApplier {
  private final byte[] additionalHeader;
  private final int masterId;
  private final int authorId;
  private final long timeStarted;
  private final long timeCommitted;
  private final long latestCommittedTxWhenStarted;
  private int visitedTransactions;
  FakeRecoveryVisitor(  byte[] additionalHeader,  int masterId,  int authorId,  long timeStarted,  long timeCommitted,  long latestCommittedTxWhenStarted){
    this.additionalHeader=additionalHeader;
    this.masterId=masterId;
    this.authorId=authorId;
    this.timeStarted=timeStarted;
    this.timeCommitted=timeCommitted;
    this.latestCommittedTxWhenStarted=latestCommittedTxWhenStarted;
  }
  @Override public boolean visit(  CommittedTransactionRepresentation tx){
    TransactionRepresentation transaction=tx.getTransactionRepresentation();
    assertArrayEquals(additionalHeader,transaction.additionalHeader());
    assertEquals(masterId,transaction.getMasterId());
    assertEquals(authorId,transaction.getAuthorId());
    assertEquals(timeStarted,transaction.getTimeStarted());
    assertEquals(timeCommitted,transaction.getTimeCommitted());
    assertEquals(latestCommittedTxWhenStarted,transaction.getLatestCommittedTxWhenStarted());
    visitedTransactions++;
    return false;
  }
  int getVisitedTransactions(){
    return visitedTransactions;
  }
  @Override public void close(){
  }
}
