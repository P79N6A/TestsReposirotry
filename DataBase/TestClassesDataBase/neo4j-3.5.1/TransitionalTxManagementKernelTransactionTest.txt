public class TransitionalTxManagementKernelTransactionTest {
  private GraphDatabaseFacade databaseFacade=mock(GraphDatabaseFacade.class);
  private ThreadToStatementContextBridge contextBridge=mock(ThreadToStatementContextBridge.class);
  private LoginContext loginContext=AnonymousContext.read();
  private KernelTransaction.Type type=KernelTransaction.Type.implicit;
  @Test public void reopenStartTransactionWithCustomTimeoutIfSpecified(){
    TransitionalTxManagementKernelTransaction managementKernelTransaction=new TransitionalTxManagementKernelTransaction(databaseFacade,type,loginContext,10,contextBridge);
    managementKernelTransaction.reopenAfterPeriodicCommit();
    verify(databaseFacade,times(2)).beginTransaction(type,loginContext,10,TimeUnit.MILLISECONDS);
  }
  @Test public void reopenStartDefaultTransactionIfTimeoutNotSpecified(){
    TransitionalTxManagementKernelTransaction managementKernelTransaction=new TransitionalTxManagementKernelTransaction(databaseFacade,type,loginContext,-1,contextBridge);
    managementKernelTransaction.reopenAfterPeriodicCommit();
    verify(databaseFacade,times(2)).beginTransaction(type,loginContext);
  }
}
