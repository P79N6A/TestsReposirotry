class DefaultClientTest {
  private static ExecutorService executor;
  @BeforeAll static void setUp(){
    executor=Executors.newSingleThreadExecutor();
  }
  @AfterAll static void tearDown(){
    executor.shutdown();
  }
  @Test void checkClientsIdBounds() throws ExecutionException, InterruptedException {
    int threads=2;
    DefaultCounts counts=new DefaultCounts(threads);
    DefaultCacheAccess cacheAccess=new DefaultCacheAccess(counts,threads);
    cacheAccess.prepareForProcessingOfSingleStore(34);
    CacheAccess.Client client1=cacheAccess.client();
    assertTrue(client1.withinBounds(0));
    assertTrue(client1.withinBounds(10));
    assertTrue(client1.withinBounds(33));
    assertFalse(client1.withinBounds(34));
    Future<?> secondClientIdChecks=executor.submit(() -> {
      CacheAccess.Client client=cacheAccess.client();
      assertFalse(client.withinBounds(5));
      assertFalse(client.withinBounds(33));
      assertTrue(client.withinBounds(34));
      assertTrue(client.withinBounds(67));
      assertFalse(client.withinBounds(68));
    }
);
    secondClientIdChecks.get();
  }
}
