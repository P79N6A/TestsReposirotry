private static class EvictionAndFlushRecorder implements EvictionEvent, FlushEventOpportunity, FlushEvent {
  private long filePageId;
  private PageSwapper swapper;
  private IOException evictionException;
  private long cachePageId;
  private boolean evictionClosed;
  private long bytesWritten;
  private boolean flushDone;
  private IOException flushException;
  private int pagesFlushed;
  @Override public void close(){
    this.evictionClosed=true;
  }
  @Override public void setFilePageId(  long filePageId){
    this.filePageId=filePageId;
  }
  @Override public void setSwapper(  PageSwapper swapper){
    this.swapper=swapper;
  }
  @Override public FlushEventOpportunity flushEventOpportunity(){
    return this;
  }
  @Override public void threwException(  IOException exception){
    this.evictionException=exception;
  }
  @Override public void setCachePageId(  long cachePageId){
    this.cachePageId=cachePageId;
  }
  @Override public FlushEvent beginFlush(  long filePageId,  long cachePageId,  PageSwapper swapper){
    return this;
  }
  @Override public void addBytesWritten(  long bytes){
    this.bytesWritten+=bytes;
  }
  @Override public void done(){
    this.flushDone=true;
  }
  @Override public void done(  IOException exception){
    this.flushDone=true;
    this.flushException=exception;
  }
  @Override public void addPagesFlushed(  int pageCount){
    this.pagesFlushed+=pageCount;
  }
}
