public class CypherUpdateMapTest {
  private GraphDatabaseService db;
  @Test public void updateNodeByMapParameter(){
    db.execute("CREATE (n:Reference) SET n = {data} RETURN n",map("data",map("key1","value1","key2",1234)));
    Node node1=getNodeByIdInTx(0);
    assertThat(node1,inTxS(hasProperty("key1").withValue("value1")));
    assertThat(node1,inTxS(hasProperty("key2").withValue(1234)));
    db.execute("MATCH (n:Reference) SET n = {data} RETURN n",map("data",map("key1",null,"key3",5678)));
    Node node2=getNodeByIdInTx(0);
    assertThat(node2,inTxS(not(hasProperty("key1"))));
    assertThat(node2,inTxS(not(hasProperty("key2"))));
    assertThat(node2,inTxS(hasProperty("key3").withValue(5678)));
  }
  public <T>Matcher<? super T> inTxS(  final Matcher<T> inner){
    return inTx(db,inner,false);
  }
  private Node getNodeByIdInTx(  int nodeId){
    try (Transaction ignored=db.beginTx()){
      return db.getNodeById(nodeId);
    }
   }
  @Before public void setup(){
    db=new TestGraphDatabaseFactory().newImpermanentDatabase();
  }
  @After public void cleanup(){
    db.shutdown();
  }
}
