static class LifecycleMock implements Lifecycle {
  Throwable initThrowable;
  Throwable startThrowable;
  Throwable stopThrowable;
  Throwable shutdownThrowable;
  List<LifecycleStatus> transitions;
  LifecycleMock(  Throwable initThrowable,  Throwable startThrowable,  Throwable stopThrowable,  Throwable shutdownThrowable){
    this.initThrowable=initThrowable;
    this.startThrowable=startThrowable;
    this.stopThrowable=stopThrowable;
    this.shutdownThrowable=shutdownThrowable;
    transitions=new ArrayList<>();
    transitions.add(LifecycleStatus.NONE);
  }
  @Override public void init() throws Throwable {
    if (initThrowable != null) {
      throw initThrowable;
    }
    transitions.add(LifecycleStatus.STOPPED);
  }
  @Override public void start() throws Throwable {
    if (startThrowable != null) {
      throw startThrowable;
    }
    transitions.add(LifecycleStatus.STARTED);
  }
  @Override public void stop() throws Throwable {
    transitions.add(LifecycleStatus.STOPPED);
    if (stopThrowable != null) {
      throw stopThrowable;
    }
  }
  @Override public void shutdown() throws Throwable {
    transitions.add(LifecycleStatus.SHUTDOWN);
    if (shutdownThrowable != null) {
      throw shutdownThrowable;
    }
  }
  LifecycleStatus getStatus(){
    return transitions.get(transitions.size() - 1);
  }
}
