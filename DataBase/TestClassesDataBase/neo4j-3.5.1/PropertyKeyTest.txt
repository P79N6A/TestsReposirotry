public class PropertyKeyTest {
  @Rule public final EphemeralFileSystemRule fs=new EphemeralFileSystemRule();
  @Rule public final TestDirectory testDirectory=TestDirectory.testDirectory();
  @Test public void lazyLoadWithinWriteTransaction() throws Exception {
    FileSystemAbstraction fileSystem=fs.get();
    BatchInserter inserter=BatchInserters.inserter(testDirectory.databaseDir(),fileSystem);
    int count=3000;
    long nodeId=inserter.createNode(mapWithManyProperties(count));
    inserter.shutdown();
    GraphDatabaseService db=new TestGraphDatabaseFactory().setFileSystem(fileSystem).newImpermanentDatabase(testDirectory.databaseDir());
    try (Transaction tx=db.beginTx()){
      db.createNode();
      Node node=db.getNodeById(nodeId);
      assertEquals(count,Iterables.count(node.getPropertyKeys()));
      tx.success();
    }
  finally {
      db.shutdown();
    }
  }
  private static Map<String,Object> mapWithManyProperties(  int count){
    Map<String,Object> properties=new HashMap<>();
    for (int i=0; i < count; i++) {
      properties.put("key:" + i,"value");
    }
    return properties;
  }
}
