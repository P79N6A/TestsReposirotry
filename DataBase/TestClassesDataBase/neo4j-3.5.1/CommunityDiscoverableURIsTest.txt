public class CommunityDiscoverableURIsTest {
  @Test public void shouldAdvertiseDataAndManagementURIs() throws Exception {
    DiscoverableURIs uris=communityDiscoverableURIs(Config.defaults(),null);
    assertEquals(map("data","/db/data/","management","/db/manage/"),toMap(uris));
  }
  @Test public void shouldAdvertiseBoltIfExplicitlyConfigured() throws Exception {
    DiscoverableURIs uris=communityDiscoverableURIs(Config.defaults(ServerSettings.bolt_discoverable_address,"bolt://banana.com:1234"),null);
    assertEquals("bolt://banana.com:1234",toMap(uris).get("bolt"));
  }
  @Test public void shouldLookupBoltPortInRegisterIfConfiguredTo0() throws Exception {
    BoltConnector bolt=new BoltConnector("honestJakesBoltConnector");
    ConnectorPortRegister register=new ConnectorPortRegister();
    register.register(bolt.key(),new InetSocketAddress(1337));
    DiscoverableURIs uris=communityDiscoverableURIs(Config.builder().withSetting(bolt.advertised_address,"apple.com:0").withSetting(bolt.enabled,"true").withSetting(bolt.type,BoltConnector.ConnectorType.BOLT.name()).build(),register);
    assertEquals("bolt://apple.com:1337",toMap(uris).get("bolt"));
  }
  @Test public void shouldOmitBoltIfNoConnectorConfigured() throws Exception {
    DiscoverableURIs uris=communityDiscoverableURIs(Config.builder().build(),null);
    assertFalse(toMap(uris).containsKey("bolt"));
  }
  private Map<String,Object> toMap(  DiscoverableURIs uris){
    Map<String,Object> out=new HashMap<>();
    uris.forEach((k,v) -> out.put(k,v.toASCIIString()));
    return out;
  }
}
