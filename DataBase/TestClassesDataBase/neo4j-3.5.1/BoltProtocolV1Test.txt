public class BoltProtocolV1Test {
  private final EmbeddedChannel channel=new EmbeddedChannel();
  @After public void cleanup(){
    channel.finishAndReleaseAll();
  }
  @Test public void shouldInstallChannelHandlersInCorrectOrder() throws Throwable {
    BoltChannel boltChannel=newBoltChannel(channel);
    BoltConnectionFactory connectionFactory=mock(BoltConnectionFactory.class);
    when(connectionFactory.newConnection(eq(boltChannel),any())).thenReturn(mock(BoltConnection.class));
    BoltProtocol boltProtocol=new BoltProtocolV1(boltChannel,connectionFactory,mock(BoltStateMachineFactory.class),NullLogService.getInstance());
    boltProtocol.install();
    Iterator<Map.Entry<String,ChannelHandler>> handlers=channel.pipeline().iterator();
    assertThat(handlers.next().getValue(),instanceOf(ChunkDecoder.class));
    assertThat(handlers.next().getValue(),instanceOf(MessageAccumulator.class));
    assertThat(handlers.next().getValue(),instanceOf(MessageDecoder.class));
    assertThat(handlers.next().getValue(),instanceOf(HouseKeeper.class));
    assertFalse(handlers.hasNext());
  }
  private static BoltChannel newBoltChannel(  Channel rawChannel){
    return new BoltChannel("bolt-1","bolt",rawChannel);
  }
}
