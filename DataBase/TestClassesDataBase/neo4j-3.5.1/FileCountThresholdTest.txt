public class FileCountThresholdTest {
  private final File file=mock(File.class);
  private final long version=1L;
  private final LogFileInformation source=mock(LogFileInformation.class);
  @Test public void shouldReturnFalseWhenTheMaxNonEmptyLogCountIsNotReached(){
    final int maxNonEmptyLogCount=2;
    final FileCountThreshold threshold=new FileCountThreshold(maxNonEmptyLogCount);
    threshold.init();
    final boolean result=threshold.reached(file,version,source);
    assertFalse(result);
  }
  @Test public void shouldReturnTrueWhenTheMaxNonEmptyLogCountIsReached(){
    final int maxNonEmptyLogCount=2;
    final FileCountThreshold threshold=new FileCountThreshold(maxNonEmptyLogCount);
    threshold.init();
    threshold.reached(file,version,source);
    final boolean result=threshold.reached(file,version,source);
    assertTrue(result);
  }
  @Test public void shouldResetTheCounterWhenInitIsCalled(){
    final int maxNonEmptyLogCount=2;
    final FileCountThreshold threshold=new FileCountThreshold(maxNonEmptyLogCount);
    threshold.init();
    threshold.reached(file,version,source);
    threshold.reached(file,version,source);
    threshold.init();
    final boolean result=threshold.reached(file,version,source);
    assertFalse(result);
  }
}
