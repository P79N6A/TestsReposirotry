@ExtendWith(RandomExtension.class) class PageCursorUtilTest {
  @Inject private RandomRule random;
  @Test void shouldPutAndGet6BLongs(){
    PageCursor cursor=ByteArrayPageCursor.wrap(10);
    for (int i=0; i < 1_000; i++) {
      long expected=random.nextLong() & _6B_MASK;
      cursor.setOffset(0);
      PageCursorUtil.put6BLong(cursor,expected);
      cursor.setOffset(0);
      long read=PageCursorUtil.get6BLong(cursor);
      assertEquals(expected,read);
      assertTrue(read >= 0);
      assertEquals(0,read & ~_6B_MASK);
    }
  }
  @Test void shouldFailOnInvalidValues(){
    PageCursor cursor=ByteArrayPageCursor.wrap(10);
    for (int i=0; i < 1_000; ) {
      long expected=random.nextLong();
      if ((expected & ~_6B_MASK) != 0) {
        cursor.setOffset(0);
        assertThrows(IllegalArgumentException.class,() -> PageCursorUtil.put6BLong(cursor,expected));
        i++;
      }
    }
  }
}
