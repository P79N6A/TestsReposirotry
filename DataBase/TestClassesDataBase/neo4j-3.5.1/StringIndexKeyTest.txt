public class StringIndexKeyTest {
  @Test public void shouldReuseByteArrayForFairlySimilarSizedKeys(){
    StringIndexKey key=new StringIndexKey();
    key.setBytesLength(20);
    byte[] first=key.bytes;
    key.setBytesLength(25);
    byte[] second=key.bytes;
    assertSame(first,second);
    assertThat(first.length,greaterThanOrEqualTo(25));
  }
  @Test public void shouldCreateNewByteArrayForVastlyDifferentKeySizes(){
    StringIndexKey key=new StringIndexKey();
    key.setBytesLength(20);
    byte[] first=key.bytes;
    key.setBytesLength(100);
    byte[] second=key.bytes;
    assertNotSame(first,second);
    assertThat(first.length,greaterThanOrEqualTo(20));
    assertThat(second.length,greaterThanOrEqualTo(100));
  }
  @Test public void shouldDereferenceByteArrayWhenMaterializingValue(){
    StringIndexKey key=new StringIndexKey();
    key.setBytesLength(20);
    byte[] first=key.bytes;
    key.asValue();
    key.setBytesLength(25);
    byte[] second=key.bytes;
    assertNotSame(first,second);
  }
}
