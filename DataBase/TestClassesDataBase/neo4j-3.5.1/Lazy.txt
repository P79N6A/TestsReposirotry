private static final class Lazy {
  private volatile Object productOrFactory;
  Lazy(  GraphDefinition graph,  String title,  String documentation){
    productOrFactory=new Factory(graph,title,documentation);
  }
  @SuppressWarnings("unchecked") <T>T get(  Producer<T> producer,  boolean create){
    Object result=productOrFactory;
    if (result instanceof Factory) {
synchronized (this) {
        if ((result=productOrFactory) instanceof Factory) {
          productOrFactory=result=((Factory)result).create(producer,create);
        }
      }
    }
    return (T)result;
  }
}
