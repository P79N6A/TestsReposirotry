private static class ReporterSpy<T extends AbstractBaseRecord> implements Answer<Object> {
  private final RecordReference<T> reference;
  private final PendingReferenceCheck<T> reporter;
  private final InvocationLog log;
  ReporterSpy(  RecordReference<T> reference,  PendingReferenceCheck<T> reporter,  InvocationLog log){
    this.reference=reference;
    this.reporter=reporter;
    this.log=log;
  }
  @Override public Object answer(  InvocationOnMock invocation) throws Throwable {
    if (!(reference instanceof RecordReference.SkippingReference<?>)) {
      log.log(reporter,invocation);
    }
    return invocation.callRealMethod();
  }
}
