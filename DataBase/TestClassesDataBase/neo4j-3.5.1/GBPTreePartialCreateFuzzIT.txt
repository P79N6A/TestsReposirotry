/** 
 * Tests functionality around process crashing, or similar, when having started, but not completed creation of an index file, i.e. opening an index file for the first time. This test is an asset in finding potentially new issues regarding partially created index files over time. It will not guarantee, in one run, that every case has been covered. There are other specific test cases for that. When this test finds a new issue that should be encoded into a proper unit test in  {@link GBPTreeTest} or similar.
 */
public class GBPTreePartialCreateFuzzIT {
  @Rule public final PageCacheAndDependenciesRule storage=new PageCacheAndDependenciesRule().with(new DefaultFileSystemRule());
  @Test public void shouldDetectAndThrowIOExceptionOnPartiallyCreatedFile() throws Exception {
    File file=storage.directory().file("index");
    Process process=new ProcessBuilder(asList("java","-cp",System.getProperty("java.class.path"),getClass().getName(),file.getAbsolutePath())).redirectError(INHERIT).redirectOutput(INHERIT).start();
    Thread.sleep(ThreadLocalRandom.current().nextInt(1_000));
    int exitCode=process.destroyForcibly().waitFor();
    try (PageCache pageCache=storage.pageCache()){
      SimpleLongLayout layout=longLayout().build();
      try {
        GBPTree.readHeader(pageCache,file,NO_HEADER_READER);
      }
 catch (      MetadataMismatchException|IOException e) {
        assertNotEquals(0,exitCode);
      }
      try {
        new GBPTreeBuilder<>(pageCache,file,layout).build().close();
      }
 catch (      MetadataMismatchException|IOException e) {
        assertNotEquals(0,exitCode);
      }
    }
   }
  public static void main(  String[] args) throws Exception {
    File file=new File(args[0]);
    try (FileSystemAbstraction fs=new DefaultFileSystemAbstraction();JobScheduler jobScheduler=new ThreadPoolJobScheduler()){
      SingleFilePageSwapperFactory swapper=new SingleFilePageSwapperFactory();
      swapper.open(fs,EMPTY);
      try (PageCache pageCache=new MuninnPageCache(swapper,10,PageCacheTracer.NULL,PageCursorTracerSupplier.NULL,EmptyVersionContextSupplier.EMPTY,jobScheduler)){
        fs.deleteFile(file);
        new GBPTreeBuilder<>(pageCache,file,longLayout().build()).build().close();
      }
     }
   }
}
