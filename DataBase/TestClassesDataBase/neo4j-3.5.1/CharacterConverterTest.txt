class CharacterConverterTest {
  private final CharacterConverter converter=new CharacterConverter();
  @Test void shouldConvertCharacter(){
    String candidates="abcdefghijklmnopqrstuvwxyzåäö\"'^`\\";
    for (int i=0; i < candidates.length(); i++) {
      char expected=candidates.charAt(i);
      assertCorrectConversion(expected,String.valueOf(expected));
    }
  }
  @Test void shouldConvertRawAscii(){
    for (char expected=0; expected < Character.MAX_VALUE; expected++) {
      assertCorrectConversion(expected,"\\" + (int)expected);
    }
  }
  @Test void shouldConvertEscaped_t_AsTab(){
    char expected='\t';
    assertCorrectConversion(expected,"\\t");
  }
  @Test void shouldConvert_t_AsTab(){
    char expected='\t';
    assertCorrectConversion(expected,"\t");
  }
  @Test void shouldConvertSpelledOut_TAB_AsTab(){
    char expected='\t';
    assertCorrectConversion(expected,"TAB");
  }
  @Test void shouldNotAcceptRandomEscapedStrings(){
    assertThrows(IllegalArgumentException.class,() -> converter.apply("\\bogus"));
  }
  @Test void shouldNotAcceptStrings(){
    assertThrows(IllegalArgumentException.class,() -> converter.apply("bogus"));
  }
  private void assertCorrectConversion(  char expected,  String material){
    char converted=converter.apply(material);
    assertEquals(expected,converted);
  }
}
