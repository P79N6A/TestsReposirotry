/** 
 * key size = 1 byte 
 */
static class CataloguePage {
  static int findPage(  int key,  CataloguePage... pages){
    assert key >= 0 && key <= 0xFF : "invalid usage";
    byte[] catalogue=new byte[pages.length * 2];
    for (int i=0, min=0; i < pages.length; i++) {
      CataloguePage page=pages[i];
      assert (page.first & 0xFF) >= min : "invalid catalogue";
      catalogue[i * 2]=page.first;
      catalogue[i * 2 + 1]=page.last;
      min=page.last & 0xFF;
    }
    return KeyValueStoreFile.findPage(new BigEndianByteArrayBuffer(new byte[]{(byte)key}),catalogue);
  }
  static CataloguePage page(  int first,  int last){
    assert first >= 0 && last >= 0 && first <= 0xFF && last <= 0xFF && first <= last : "invalid usage";
    return new CataloguePage((byte)first,(byte)last);
  }
  final byte first;
  byte last;
  CataloguePage(  byte first,  byte last){
    this.first=first;
    this.last=last;
  }
}
