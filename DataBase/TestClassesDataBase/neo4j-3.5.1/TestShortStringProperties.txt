public class TestShortStringProperties {
  @ClassRule public static DatabaseRule graphdb=new ImpermanentDatabaseRule();
  @Rule public GraphTransactionRule tx=new GraphTransactionRule(graphdb);
  public void commit(){
    tx.success();
  }
  private void newTx(){
    tx.success();
    tx.begin();
  }
  private static final String LONG_STRING="this is a really long string, believe me!";
  @Test public void canAddMultipleShortStringsToTheSameNode(){
    Node node=graphdb.getGraphDatabaseAPI().createNode();
    node.setProperty("key","value");
    node.setProperty("reverse","esrever");
    commit();
    assertThat(node,inTx(graphdb.getGraphDatabaseAPI(),hasProperty("key").withValue("value")));
    assertThat(node,inTx(graphdb.getGraphDatabaseAPI(),hasProperty("reverse").withValue("esrever")));
  }
  @Test public void canAddShortStringToRelationship(){
    GraphDatabaseService db=graphdb.getGraphDatabaseAPI();
    Relationship rel=db.createNode().createRelationshipTo(db.createNode(),withName("REL_TYPE"));
    rel.setProperty("type","dimsedut");
    commit();
    assertThat(rel,inTx(db,hasProperty("type").withValue("dimsedut")));
  }
  @Test public void canUpdateShortStringInplace(){
    Node node=graphdb.getGraphDatabaseAPI().createNode();
    node.setProperty("key","value");
    newTx();
    assertEquals("value",node.getProperty("key"));
    node.setProperty("key","other");
    commit();
    assertThat(node,inTx(graphdb.getGraphDatabaseAPI(),hasProperty("key").withValue("other")));
  }
  @Test public void canReplaceLongStringWithShortString(){
    Node node=graphdb.getGraphDatabaseAPI().createNode();
    node.setProperty("key",LONG_STRING);
    newTx();
    assertEquals(LONG_STRING,node.getProperty("key"));
    node.setProperty("key","value");
    commit();
    assertThat(node,inTx(graphdb.getGraphDatabaseAPI(),hasProperty("key").withValue("value")));
  }
  @Test public void canReplaceShortStringWithLongString(){
    Node node=graphdb.getGraphDatabaseAPI().createNode();
    node.setProperty("key","value");
    newTx();
    assertEquals("value",node.getProperty("key"));
    node.setProperty("key",LONG_STRING);
    commit();
    assertThat(node,inTx(graphdb.getGraphDatabaseAPI(),hasProperty("key").withValue(LONG_STRING)));
  }
  @Test public void canRemoveShortStringProperty(){
    GraphDatabaseService db=graphdb.getGraphDatabaseAPI();
    Node node=db.createNode();
    node.setProperty("key","value");
    newTx();
    assertEquals("value",node.getProperty("key"));
    node.removeProperty("key");
    commit();
    assertThat(node,inTx(db,not(hasProperty("key"))));
  }
}
