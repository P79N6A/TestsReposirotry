public class PropertyTransactionStateTest {
  private GraphDatabaseService db;
  @Before public void setUp(){
    db=new TestGraphDatabaseFactory().newImpermanentDatabase();
  }
  @After public void shutDown(){
    db.shutdown();
  }
  @Test public void testUpdateDoubleArrayProperty(){
    Node node;
    try (Transaction tx=db.beginTx()){
      node=db.createNode();
      node.setProperty("foo",new double[]{0,0,0,0});
      tx.success();
    }
     try (Transaction ignore=db.beginTx()){
      for (int i=0; i < 100; i++) {
        double[] data=(double[])node.getProperty("foo");
        data[2]=i;
        data[3]=i;
        node.setProperty("foo",data);
        assertArrayEquals(new double[]{0,0,i,i},(double[])node.getProperty("foo"),0.1D);
      }
    }
   }
  @Test public void testStringPropertyUpdate(){
    String key="foo";
    Node node;
    try (Transaction tx=db.beginTx()){
      node=db.createNode();
      node.setProperty(key,"one");
      tx.success();
    }
     try (Transaction ignore=db.beginTx()){
      node.setProperty(key,"one");
      node.setProperty(key,"two");
      assertEquals("two",node.getProperty(key));
    }
   }
  @Test public void testSetDoubleArrayProperty(){
    try (Transaction ignore=db.beginTx()){
      Node node=db.createNode();
      for (int i=0; i < 100; i++) {
        node.setProperty("foo",new double[]{0,0,i,i});
        assertArrayEquals(new double[]{0,0,i,i},(double[])node.getProperty("foo"),0.1D);
      }
    }
   }
}
