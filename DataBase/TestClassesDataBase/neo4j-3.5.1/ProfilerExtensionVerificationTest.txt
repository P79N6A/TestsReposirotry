@ExtendWith({TestDirectoryExtension.class,ProfilerExtension.class}) @ExtendWith(ProfilerExtensionVerificationTest.ConfigurationParameterCondition.class) class ProfilerExtensionVerificationTest {
  static final String TEST_DIR="test dir";
  @Inject TestDirectory testDirectory;
  @Inject Profiler profiler;
  @Test void testThatPasses() throws Exception {
    CONTEXT.clear();
    CONTEXT.setValue(TEST_DIR,testDirectory.absolutePath());
    profiler.profile();
    someVeryExpensiveComputation();
  }
  @Test void testThatFails() throws Exception {
    CONTEXT.clear();
    CONTEXT.setValue(TEST_DIR,testDirectory.absolutePath());
    profiler.profile();
    someVeryExpensiveComputation();
    fail("This is exactly like that 'worst movie death scene ever' from the Turkish film Kareteci Kiz.");
  }
  private void someVeryExpensiveComputation() throws InterruptedException {
    Thread.sleep(1000);
  }
static class ConfigurationParameterCondition implements ExecutionCondition {
    static final String TEST_TOGGLE="testToggle";
    @Override public ConditionEvaluationResult evaluateExecutionCondition(    ExtensionContext context){
      Optional<String> option=context.getConfigurationParameter(TEST_TOGGLE);
      return option.map(ConditionEvaluationResult::enabled).orElseGet(() -> disabled("configuration parameter not present"));
    }
  }
}
