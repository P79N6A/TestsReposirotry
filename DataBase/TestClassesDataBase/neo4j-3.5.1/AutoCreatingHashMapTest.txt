public class AutoCreatingHashMapTest {
  @Test public void shouldCreateValuesIfMissing(){
    Map<String,AtomicLong> map=new AutoCreatingHashMap<>(values(AtomicLong.class));
    String key="should be created";
    map.get(key).incrementAndGet();
    assertEquals(1,map.get(key).get());
    assertTrue(map.containsKey(key));
    assertFalse(map.containsKey("any other key"));
  }
  @Test public void shouldCreateValuesEvenForNestedMaps(){
    Map<String,Map<String,Map<String,AtomicLong>>> map=new AutoCreatingHashMap<>(nested(String.class,nested(String.class,values(AtomicLong.class))));
    String keyLevelOne="first";
    String keyLevelTwo="second";
    String keyLevelThree="third";
    map.get(keyLevelOne).get(keyLevelTwo).get(keyLevelThree).addAndGet(10);
    assertTrue(map.containsKey(keyLevelOne));
    assertFalse(map.containsKey(keyLevelTwo));
    Map<String,Map<String,AtomicLong>> levelOne=map.get(keyLevelOne);
    assertTrue(levelOne.containsKey(keyLevelTwo));
    assertFalse(levelOne.containsKey(keyLevelThree));
    Map<String,AtomicLong> levelTwo=levelOne.get(keyLevelTwo);
    assertTrue(levelTwo.containsKey(keyLevelThree));
    assertFalse(levelTwo.containsKey(keyLevelOne));
    AtomicLong levelThree=levelTwo.get(keyLevelThree);
    assertEquals(10,levelThree.get());
  }
}
