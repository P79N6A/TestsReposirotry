public class TestTxEntries {
  private final EphemeralFileSystemRule fs=new EphemeralFileSystemRule();
  private final TestDirectory testDirectory=TestDirectory.testDirectory();
  @Rule public final RuleChain ruleChain=RuleChain.outerRule(fs).around(testDirectory);
  @Test public void testStartEntryWrittenOnceOnRollback() throws Exception {
    File storeDir=testDirectory.databaseDir();
    final GraphDatabaseService db=new TestGraphDatabaseFactory().setFileSystem(fs.get()).newImpermanentDatabase(storeDir);
    createSomeTransactions(db);
    EphemeralFileSystemAbstraction snapshot=fs.snapshot(db::shutdown);
    new TestGraphDatabaseFactory().setFileSystem(snapshot).newImpermanentDatabase(storeDir).shutdown();
  }
  private void createSomeTransactions(  GraphDatabaseService db){
    Transaction tx=db.beginTx();
    Node node1=db.createNode();
    Node node2=db.createNode();
    node1.createRelationshipTo(node2,RelationshipType.withName("relType1"));
    tx.success();
    tx.close();
    tx=db.beginTx();
    node1.delete();
    tx.success();
    try {
      tx.close();
    }
 catch (    Exception nothingToSeeHereMoveAlong) {
    }
    tx=db.beginTx();
    node1.setProperty("foo","bar");
    tx.success();
    tx.close();
  }
}
