public class SharedServerTestBase {
  protected static NeoServer server(){
    return server;
  }
  private static NeoServer server;
  @Rule public SuppressOutput suppressOutput=suppressAll();
  @BeforeClass public static void allocateServer() throws Throwable {
    System.setProperty("org.neo4j.useInsecureCertificateGeneration","true");
    suppressAll().call((Callable<Void>)() -> {
      ServerHolder.setServerBuilderProperty(GraphDatabaseSettings.cypher_hints_error.name(),"true");
      ServerHolder.setServerBuilderProperty(GraphDatabaseSettings.transaction_timeout.name(),"300s");
      ServerHolder.setServerBuilderProperty(ServerSettings.transaction_idle_timeout.name(),"300s");
      server=ServerHolder.allocate();
      ServerHelper.cleanTheDatabase(server);
      return null;
    }
);
  }
  @AfterClass public static void releaseServer() throws Exception {
    try {
      suppressAll().call((Callable<Void>)() -> {
        ServerHolder.release(server);
        return null;
      }
);
    }
  finally {
      server=null;
    }
  }
}
