public class PageCacheArrayFactoryMonitorTest {
  private final PageCachedNumberArrayFactory factory=new PageCachedNumberArrayFactory(mock(PageCache.class),new File("storeDir"));
  private final PageCacheArrayFactoryMonitor monitor=new PageCacheArrayFactoryMonitor();
  @Test public void shouldComposeFailureDescriptionForFailedCandidates(){
    monitor.allocationSuccessful(123,factory,asList(new NumberArrayFactory.AllocationFailure(new OutOfMemoryError("OOM1"),HEAP),new NumberArrayFactory.AllocationFailure(new OutOfMemoryError("OOM2"),OFF_HEAP)));
    String failure=monitor.pageCacheAllocationOrNull();
    assertThat(failure,containsString("OOM1"));
    assertThat(failure,containsString("OOM2"));
  }
  @Test public void shouldClearFailureStateAfterAccessorCall(){
    monitor.allocationSuccessful(123,factory,asList(new NumberArrayFactory.AllocationFailure(new OutOfMemoryError("OOM1"),HEAP),new NumberArrayFactory.AllocationFailure(new OutOfMemoryError("OOM2"),OFF_HEAP)));
    String failure=monitor.pageCacheAllocationOrNull();
    String secondCall=monitor.pageCacheAllocationOrNull();
    assertNotNull(failure);
    assertNull(secondCall);
  }
  @Test public void shouldReturnNullFailureOnNoFailure(){
    assertNull(monitor.pageCacheAllocationOrNull());
  }
}
