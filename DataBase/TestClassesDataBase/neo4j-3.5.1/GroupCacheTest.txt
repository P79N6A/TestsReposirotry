public class GroupCacheTest {
  @Test public void shouldHandleSingleByteCount(){
    int max=256;
    GroupCache cache=GroupCache.select(HEAP,100,max);
    assertSetAndGet(cache,10,45);
    assertSetAndGet(cache,100,145);
    assertSetAndGet(cache,1000,245);
    try {
      cache.set(10000,345);
      fail("Shouldn't handle that");
    }
 catch (    ArithmeticException e) {
    }
  }
  @Test public void shouldSwitchToTwoByteVersionBeyondSingleByteGroupIds(){
    int max=257;
    GroupCache cache=GroupCache.select(HEAP,100,max);
    assertSetAndGet(cache,10,123);
    assertSetAndGet(cache,100,1234);
    assertSetAndGet(cache,1000,12345);
    assertSetAndGet(cache,10000,0xFFFF);
    try {
      cache.set(100000,123456);
      fail("Shouldn't handle that");
    }
 catch (    ArithmeticException e) {
    }
  }
  private void assertSetAndGet(  GroupCache cache,  long nodeId,  int groupId){
    cache.set(nodeId,groupId);
  }
}
