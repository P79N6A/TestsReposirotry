class ResultHandlerTest {
  @Test void shouldPullTheResult() throws Exception {
    BoltResponseMessageRecorder messageWriter=new BoltResponseMessageRecorder();
    ResultHandler handler=new ResultHandler(messageWriter,mock(BoltConnection.class),NullLog.getInstance());
    ImmutableRecord record1=new ImmutableRecord(values("a","b","c"));
    ImmutableRecord record2=new ImmutableRecord(values("1","2","3"));
    BoltResult result=new TestBoltResult(record1,record2);
    handler.onRecords(result,true);
    handler.onFinish();
    List<ResponseMessage> messages=messageWriter.asList();
    assertThat(messages.size(),equalTo(3));
    assertThat(messages.get(0),equalTo(new RecordMessage(record1)));
    assertThat(messages.get(1),equalTo(new RecordMessage(record2)));
    assertThat(messages.get(2),instanceOf(SuccessMessage.class));
  }
  @Test void shouldDiscardTheResult() throws Exception {
    BoltResponseMessageRecorder messageWriter=new BoltResponseMessageRecorder();
    ResultHandler handler=new ResultHandler(messageWriter,mock(BoltConnection.class),NullLog.getInstance());
    ImmutableRecord record1=new ImmutableRecord(values("a","b","c"));
    ImmutableRecord record2=new ImmutableRecord(values("1","2","3"));
    BoltResult result=new TestBoltResult(record1,record2);
    handler.onRecords(result,false);
    handler.onFinish();
    List<ResponseMessage> messages=messageWriter.asList();
    assertThat(messages.size(),equalTo(1));
    assertThat(messages.get(0),instanceOf(SuccessMessage.class));
  }
private static class TestBoltResult implements BoltResult {
    private final Record[] records;
    private TestBoltResult(    Record... records){
      this.records=records;
    }
    @Override public String[] fieldNames(){
      throw new UnsupportedOperationException();
    }
    @Override public void accept(    Visitor visitor) throws Exception {
      for (      Record record : records) {
        visitor.visit(record);
      }
    }
    @Override public void close(){
    }
    @Override public String toString(){
      return "TestBoltResult{" + "records=" + Arrays.toString(records) + '}';
    }
  }
}
