class SpaceFillingCurveSettingsReaderTest {
  @Test void shouldReadMultipleSettings(){
    ConfiguredSpaceFillingCurveSettingsCache globalSettings=new ConfiguredSpaceFillingCurveSettingsCache(Config.defaults());
    Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> expectedSpecificSettings=new HashMap<>();
    rememberSettings(globalSettings,expectedSpecificSettings,WGS84,WGS84_3D,Cartesian);
    IndexSpecificSpaceFillingCurveSettingsCache specificSettings=new IndexSpecificSpaceFillingCurveSettingsCache(globalSettings,expectedSpecificSettings);
    SpaceFillingCurveSettingsWriter writer=new SpaceFillingCurveSettingsWriter(specificSettings);
    byte[] bytes=new byte[PageCache.PAGE_SIZE];
    writer.accept(new ByteArrayPageCursor(bytes));
    Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> readExpectedSettings=new HashMap<>();
    SpaceFillingCurveSettingsReader reader=new SpaceFillingCurveSettingsReader(readExpectedSettings);
    reader.read(ByteBuffer.wrap(bytes));
    assertEquals(expectedSpecificSettings,readExpectedSettings);
  }
  private void rememberSettings(  ConfiguredSpaceFillingCurveSettingsCache globalSettings,  Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> expectedSpecificSettings,  CoordinateReferenceSystem... crss){
    for (    CoordinateReferenceSystem crs : crss) {
      expectedSpecificSettings.put(crs,globalSettings.forCRS(crs));
    }
  }
}
