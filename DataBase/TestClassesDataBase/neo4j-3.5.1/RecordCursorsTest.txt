class RecordCursorsTest {
  @Test void nodeCursorShouldClosePageCursor(){
    NodeStore store=mock(NodeStore.class);
    PageCursor pageCursor=mock(PageCursor.class);
    when(store.openPageCursorForReading(anyLong())).thenReturn(pageCursor);
    try (RecordNodeCursor cursor=new RecordNodeCursor(store)){
      cursor.single(0);
    }
     verify(pageCursor).close();
  }
  @Test void relationshipScanCursorShouldClosePageCursor(){
    RelationshipStore store=mock(RelationshipStore.class);
    PageCursor pageCursor=mock(PageCursor.class);
    when(store.openPageCursorForReading(anyLong())).thenReturn(pageCursor);
    try (RecordRelationshipScanCursor cursor=new RecordRelationshipScanCursor(store)){
      cursor.single(0);
    }
     verify(pageCursor).close();
  }
  @Test void relationshipTraversalCursorShouldClosePageCursor(){
    RelationshipStore store=mock(RelationshipStore.class);
    PageCursor pageCursor=mock(PageCursor.class);
    when(store.openPageCursorForReading(anyLong())).thenReturn(pageCursor);
    RelationshipGroupStore groupStore=mock(RelationshipGroupStore.class);
    PageCursor groupPageCursor=mock(PageCursor.class);
    when(store.openPageCursorForReading(anyLong())).thenReturn(pageCursor);
    try (RecordRelationshipTraversalCursor cursor=new RecordRelationshipTraversalCursor(store,groupStore)){
      cursor.init(0,0);
    }
     verify(pageCursor).close();
    verifyZeroInteractions(groupPageCursor,groupStore);
  }
  @Test void relationshipGroupCursorShouldClosePageCursor(){
    RelationshipStore relationshipStore=mock(RelationshipStore.class);
    PageCursor relationshipPageCursor=mock(PageCursor.class);
    when(relationshipStore.openPageCursorForReading(anyLong())).thenReturn(relationshipPageCursor);
    RelationshipGroupStore store=mock(RelationshipGroupStore.class);
    PageCursor pageCursor=mock(PageCursor.class);
    when(store.openPageCursorForReading(anyLong())).thenReturn(pageCursor);
    try (RecordRelationshipGroupCursor cursor=new RecordRelationshipGroupCursor(relationshipStore,store)){
      cursor.init(0,0);
    }
     verify(pageCursor).close();
    verifyZeroInteractions(relationshipStore,relationshipPageCursor);
  }
  @Test void propertyCursorShouldClosePageCursor(){
    PropertyStore store=mock(PropertyStore.class);
    PageCursor pageCursor=mock(PageCursor.class);
    when(store.openPageCursorForReading(anyLong())).thenReturn(pageCursor);
    try (RecordPropertyCursor cursor=new RecordPropertyCursor(store)){
      cursor.init(0);
    }
     verify(pageCursor).close();
  }
}
