public class TraversalBranchImplTest {
  @SuppressWarnings("unchecked") @Test public void shouldExpandOnFirstAccess(){
    TraversalBranch parent=mock(TraversalBranch.class);
    Node source=mock(Node.class);
    TraversalBranchImpl branch=new TraversalBranchImpl(parent,source);
    @SuppressWarnings("rawtypes") PathExpander expander=mock(PathExpander.class);
    when(expander.expand(eq(branch),any(BranchState.class))).thenReturn(Iterables.emptyResourceIterable());
    TraversalContext context=mock(TraversalContext.class);
    when(context.evaluate(eq(branch),isNull())).thenReturn(INCLUDE_AND_CONTINUE);
    branch.initialize(expander,context);
    verifyZeroInteractions(source);
    branch.next(expander,context);
    verify(expander).expand(any(Path.class),any(BranchState.class));
  }
}
