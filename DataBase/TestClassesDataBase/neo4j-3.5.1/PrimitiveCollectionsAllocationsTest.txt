class PrimitiveCollectionsAllocationsTest {
  @Test void trackPrimitiveMemoryAllocations(){
    LocalMemoryTracker memoryTracker=new LocalMemoryTracker();
    PrimitiveIntSet offHeapIntSet=Primitive.offHeapIntSet(memoryTracker);
    assertTrue(memoryTracker.usedDirectMemory() > 0);
    offHeapIntSet.close();
    assertEquals(0,memoryTracker.usedDirectMemory());
  }
  @Test void trackPrimitiveMemoryOnResize(){
    LocalMemoryTracker memoryTracker=new LocalMemoryTracker();
    PrimitiveIntSet offHeapIntSet=Primitive.offHeapIntSet(memoryTracker);
    long originalSetMemory=memoryTracker.usedDirectMemory();
    for (int i=0; i < Primitive.DEFAULT_OFFHEAP_CAPACITY + 1; i++) {
      offHeapIntSet.add(i);
    }
    assertTrue(memoryTracker.usedDirectMemory() > originalSetMemory);
    offHeapIntSet.close();
    assertEquals(0,memoryTracker.usedDirectMemory());
  }
}
