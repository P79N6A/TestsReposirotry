private static class ControlledCharReadable extends CharReadable.Adapter {
  private final StringReader reader;
  private final int maxBytesPerRead;
  private final String data;
  ControlledCharReadable(  String data,  int maxBytesPerRead){
    this.data=data;
    this.reader=new StringReader(data);
    this.maxBytesPerRead=maxBytesPerRead;
  }
  @Override public SectionedCharBuffer read(  SectionedCharBuffer buffer,  int from) throws IOException {
    buffer.compact(buffer,from);
    buffer.readFrom(reader,maxBytesPerRead);
    return buffer;
  }
  @Override public int read(  char[] into,  int offset,  int length){
    throw new UnsupportedOperationException();
  }
  @Override public long position(){
    return 0;
  }
  @Override public String sourceDescription(){
    return getClass().getSimpleName();
  }
  @Override public long length(){
    return data.length() * 2;
  }
}
