class DefaultIndexProviderMapTest {
  @Test void shouldNotSupportMultipleProvidersWithSameDescriptor(){
    IndexProviderDescriptor descriptor=new IndexProviderDescriptor("provider","1.2");
    IndexProvider provider1=mock(IndexProvider.class);
    when(provider1.getProviderDescriptor()).thenReturn(descriptor);
    IndexProvider provider2=mock(IndexProvider.class);
    when(provider2.getProviderDescriptor()).thenReturn(descriptor);
    Dependencies dependencies=new Dependencies();
    dependencies.satisfyDependency(provider1);
    dependencies.satisfyDependency(provider2);
    assertThrows(IllegalArgumentException.class,() -> createDefaultProviderMap(dependencies,descriptor).init());
  }
  @Test void shouldThrowOnLookupOnUnknownProvider(){
    IndexProvider provider=mock(IndexProvider.class);
    IndexProviderDescriptor descriptor=new IndexProviderDescriptor("provider","1.2");
    when(provider.getProviderDescriptor()).thenReturn(descriptor);
    Dependencies dependencies=new Dependencies();
    dependencies.satisfyDependency(provider);
    DefaultIndexProviderMap defaultIndexProviderMap=createDefaultProviderMap(dependencies,descriptor);
    defaultIndexProviderMap.init();
    assertThrows(IndexProviderNotFoundException.class,() -> defaultIndexProviderMap.lookup(new IndexProviderDescriptor("provider2","1.2")));
  }
  private static DefaultIndexProviderMap createDefaultProviderMap(  Dependencies dependencies,  IndexProviderDescriptor descriptor){
    return new DefaultIndexProviderMap(dependencies,Config.defaults(GraphDatabaseSettings.default_schema_provider,descriptor.name()));
  }
}
