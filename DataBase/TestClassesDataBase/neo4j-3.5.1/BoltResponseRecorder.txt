public class BoltResponseRecorder implements BoltResponseHandler {
  private BlockingQueue<RecordedBoltResponse> responses;
  private RecordedBoltResponse currentResponse;
  public BoltResponseRecorder(){
    reset();
  }
  public void reset(){
    responses=new LinkedBlockingQueue<>();
    currentResponse=new RecordedBoltResponse();
  }
  @Override public void onRecords(  BoltResult result,  boolean pull) throws Exception {
    result.accept(new BoltResult.Visitor(){
      @Override public void visit(      QueryResult.Record record){
        currentResponse.addRecord(record);
      }
      @Override public void addMetadata(      String key,      AnyValue value){
        currentResponse.addMetadata(key,value);
      }
    }
);
  }
  @Override public void onMetadata(  String key,  AnyValue value){
    currentResponse.addMetadata(key,value);
  }
  @Override public void markIgnored(){
    currentResponse.setResponse(IGNORED);
  }
  @Override public void markFailed(  Neo4jError error){
    currentResponse.setResponse(FAILURE);
    onMetadata("code",stringValue(error.status().code().serialize()));
    onMetadata("message",stringOrNoValue(error.message()));
  }
  @Override public void onFinish(){
    if (currentResponse.message() == null) {
      currentResponse.setResponse(SUCCESS);
    }
    responses.add(currentResponse);
    currentResponse=new RecordedBoltResponse();
  }
  public int responseCount(){
    return responses.size();
  }
  public RecordedBoltResponse nextResponse() throws InterruptedException {
    RecordedBoltResponse response=responses.poll(3,SECONDS);
    assertNotNull("No message arrived after 3s",response);
    return response;
  }
}
