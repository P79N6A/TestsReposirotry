public class TransactionPositionLocatorTest {
  private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader=mock(LogEntryReader.class);
  private final ReadableClosablePositionAwareChannel channel=mock(ReadableClosablePositionAwareChannel.class);
  private final TransactionMetadataCache metadataCache=mock(TransactionMetadataCache.class);
  private final long txId=42;
  private final LogPosition startPosition=new LogPosition(1,128);
  private final LogEntryStart start=new LogEntryStart(0,0,0,0,null,startPosition);
  private final LogEntryCommand command=new LogEntryCommand(new Command.NodeCommand(new NodeRecord(42),new NodeRecord(42)));
  private final LogEntryCommit commit=new LogEntryCommit(txId,System.currentTimeMillis());
  @Test public void shouldFindTransactionLogPosition() throws IOException {
    final PhysicalLogicalTransactionStore.TransactionPositionLocator locator=new PhysicalLogicalTransactionStore.TransactionPositionLocator(txId,logEntryReader);
    when(logEntryReader.readLogEntry(channel)).thenReturn(start,command,commit,null);
    final boolean result=locator.visit(channel);
    final LogPosition position=locator.getAndCacheFoundLogPosition(metadataCache);
    assertFalse(result);
    assertEquals(startPosition,position);
    verify(metadataCache,times(1)).cacheTransactionMetadata(txId,startPosition,start.getMasterId(),start.getLocalId(),LogEntryStart.checksum(start),commit.getTimeWritten());
  }
  @Test public void shouldNotFindTransactionLogPosition() throws IOException {
    final PhysicalLogicalTransactionStore.TransactionPositionLocator locator=new PhysicalLogicalTransactionStore.TransactionPositionLocator(txId,logEntryReader);
    when(logEntryReader.readLogEntry(channel)).thenReturn(start,command,null);
    final boolean result=locator.visit(channel);
    assertTrue(result);
    try {
      locator.getAndCacheFoundLogPosition(metadataCache);
      fail("should have thrown");
    }
 catch (    NoSuchTransactionException e) {
      assertEquals("Unable to find transaction " + txId + " in any of my logical logs",e.getMessage());
    }
  }
}
