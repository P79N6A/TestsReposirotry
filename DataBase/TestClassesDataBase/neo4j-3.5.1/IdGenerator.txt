public class IdGenerator {
  public long schema(){
    return schemaId++;
  }
  public long node(){
    return nodeId++;
  }
  public int label(){
    return labelId++;
  }
  public long nodeLabel(){
    return nodeLabelsId++;
  }
  public long relationship(){
    return relId++;
  }
  public long relationshipGroup(){
    return relGroupId++;
  }
  public long property(){
    return propId++;
  }
  public long stringProperty(){
    return stringPropId++;
  }
  public long arrayProperty(){
    return arrayPropId++;
  }
  public int relationshipType(){
    return relTypeId++;
  }
  public int propertyKey(){
    return propKeyId++;
  }
  void updateCorrespondingIdGenerators(  NeoStores neoStores){
    neoStores.getNodeStore().setHighestPossibleIdInUse(nodeId);
    neoStores.getRelationshipStore().setHighestPossibleIdInUse(relId);
    neoStores.getRelationshipGroupStore().setHighestPossibleIdInUse(relGroupId);
  }
}
