private class AssertableLog extends AbstractLog {
  private final Logger debugLogger;
  private final Logger infoLogger;
  private final Logger warnLogger;
  private final Logger errorLogger;
  AssertableLog(  String context){
    this.debugLogger=new LogCallRecorder(context,Level.DEBUG);
    this.infoLogger=new LogCallRecorder(context,Level.INFO);
    this.warnLogger=new LogCallRecorder(context,Level.WARN);
    this.errorLogger=new LogCallRecorder(context,Level.ERROR);
  }
  @Override public boolean isDebugEnabled(){
    return debugEnabled;
  }
  @Nonnull @Override public Logger debugLogger(){
    return debugLogger;
  }
  @Nonnull @Override public Logger infoLogger(){
    return infoLogger;
  }
  @Nonnull @Override public Logger warnLogger(){
    return warnLogger;
  }
  @Nonnull @Override public Logger errorLogger(){
    return errorLogger;
  }
  @Override public void bulk(  @Nonnull Consumer<Log> consumer){
    consumer.accept(this);
  }
}
