private static class FailingEventHandler<T> implements TransactionEventHandler<T> {
  private final TransactionEventHandler<T> source;
  private final boolean willFail;
  FailingEventHandler(  TransactionEventHandler<T> source,  boolean willFail){
    this.source=source;
    this.willFail=willFail;
  }
  @Override public void afterCommit(  TransactionData data,  T state){
    source.afterCommit(data,state);
  }
  @Override public void afterRollback(  TransactionData data,  T state){
    source.afterRollback(data,state);
  }
  @Override public T beforeCommit(  TransactionData data) throws Exception {
    try {
      return source.beforeCommit(data);
    }
  finally {
      if (willFail) {
        throw new Exception("Just failing commit, that's all");
      }
    }
  }
}
