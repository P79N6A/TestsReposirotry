public static final class ConsistencySummaryVerifier {
  private final ConsistencySummaryStatistics stats;
  private final Set<RecordType> types=new HashSet<>();
  private long total;
  public static ConsistencySummaryVerifier on(  ConsistencySummaryStatistics stats){
    return new ConsistencySummaryVerifier(stats);
  }
  private ConsistencySummaryVerifier(  ConsistencySummaryStatistics stats){
    this.stats=stats;
  }
  public ConsistencySummaryVerifier verify(  RecordType type,  int inconsistencies){
    if (!types.add(type)) {
      throw new IllegalStateException("Tried to verify the same type twice: " + type);
    }
    assertEquals("Inconsistencies of type: " + type,inconsistencies,stats.getInconsistencyCountForRecordType(type));
    total+=inconsistencies;
    return this;
  }
  public void andThatsAllFolks(){
    assertEquals("Total number of inconsistencies: " + stats,total,stats.getTotalInconsistencyCount());
  }
}
