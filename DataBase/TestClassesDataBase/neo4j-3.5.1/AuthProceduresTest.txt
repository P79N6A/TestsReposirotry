public class AuthProceduresTest extends KernelIntegrationTest {
  @Rule public ExpectedException exception=ExpectedException.none();
  private final ResourceTracker resourceTracker=new StubResourceManager();
  @Test public void shouldFailWhenDeprecatedChangePasswordWithStaticAccessModeInDbmsMode() throws Throwable {
    Object[] inputArray=new Object[1];
    inputArray[0]="newPassword";
    exception.expect(ProcedureException.class);
    exception.expectMessage("Anonymous cannot change password");
    dbmsOperations().procedureCallDbms(procedureName("dbms","changePassword"),inputArray,dependencyResolver,AnonymousContext.none().authorize(s -> -1,GraphDatabaseSettings.DEFAULT_DATABASE_NAME),resourceTracker);
  }
  @Test public void shouldFailWhenChangePasswordWithStaticAccessModeInDbmsMode() throws Throwable {
    Object[] inputArray=new Object[1];
    inputArray[0]="newPassword";
    exception.expect(ProcedureException.class);
    exception.expectMessage("Anonymous cannot change password");
    dbmsOperations().procedureCallDbms(procedureName("dbms","security","changePassword"),inputArray,dependencyResolver,AnonymousContext.none().authorize(s -> -1,GraphDatabaseSettings.DEFAULT_DATABASE_NAME),resourceTracker);
  }
  @Override protected GraphDatabaseBuilder configure(  GraphDatabaseBuilder graphDatabaseBuilder){
    graphDatabaseBuilder.setConfig(GraphDatabaseSettings.auth_enabled,"true");
    return graphDatabaseBuilder;
  }
}
