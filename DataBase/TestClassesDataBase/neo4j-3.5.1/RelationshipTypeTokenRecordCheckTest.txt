class RelationshipTypeTokenRecordCheckTest extends RecordCheckTestBase<RelationshipTypeTokenRecord,RelationshipTypeConsistencyReport,RelationshipTypeTokenRecordCheck> {
  RelationshipTypeTokenRecordCheckTest(){
    super(new RelationshipTypeTokenRecordCheck(),RelationshipTypeConsistencyReport.class,new int[0]);
  }
  @Test void shouldNotReportAnythingForRecordNotInUse(){
    RelationshipTypeTokenRecord label=notInUse(new RelationshipTypeTokenRecord(42));
    RelationshipTypeConsistencyReport report=check(label);
    verifyNoMoreInteractions(report);
  }
  @Test void shouldNotReportAnythingForRecordThatDoesNotReferenceADynamicBlock(){
    RelationshipTypeTokenRecord label=inUse(new RelationshipTypeTokenRecord(42));
    RelationshipTypeConsistencyReport report=check(label);
    verifyNoMoreInteractions(report);
  }
  @Test void shouldReportDynamicBlockNotInUse(){
    RelationshipTypeTokenRecord label=inUse(new RelationshipTypeTokenRecord(42));
    DynamicRecord name=addRelationshipTypeName(notInUse(new DynamicRecord(6)));
    label.setNameId((int)name.getId());
    RelationshipTypeConsistencyReport report=check(label);
    verify(report).nameBlockNotInUse(name);
    verifyNoMoreInteractions(report);
  }
  @Test void shouldReportEmptyName(){
    RelationshipTypeTokenRecord label=inUse(new RelationshipTypeTokenRecord(42));
    DynamicRecord name=addRelationshipTypeName(inUse(new DynamicRecord(6)));
    label.setNameId((int)name.getId());
    RelationshipTypeConsistencyReport report=check(label);
    verify(report).emptyName(name);
    verifyNoMoreInteractions(report);
  }
}
