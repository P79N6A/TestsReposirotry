public class AutoIndexOperationsTest {
  private final ExplicitIndexWrite ops=mock(ExplicitIndexWrite.class);
  private final TokenHolder tokens=mock(TokenHolder.class);
  private final AutoIndexOperations index=new InternalAutoIndexOperations(tokens,InternalAutoIndexOperations.EntityType.NODE);
  private final int nonIndexedProperty=1337;
  private final String nonIndexedPropertyName="foo";
  private final int indexedProperty=1338;
  private final int indexedProperty2=1339;
  private final String indexedPropertyName="bar";
  private final String indexedPropertyName2="baz";
  @Before public void setup() throws TokenNotFoundException {
    when(tokens.getTokenById(nonIndexedProperty)).thenReturn(new NamedToken(nonIndexedPropertyName,nonIndexedProperty));
    when(tokens.getTokenById(indexedProperty)).thenReturn(new NamedToken(indexedPropertyName,indexedProperty));
    when(tokens.getTokenById(indexedProperty2)).thenReturn(new NamedToken(indexedPropertyName,indexedProperty2));
    index.enabled(true);
  }
  @Test public void shouldNotRemoveFromIndexForNonAutoIndexedProperty() throws Exception {
    index.startAutoIndexingProperty(indexedPropertyName);
    index.propertyRemoved(ops,11,nonIndexedProperty);
    verifyZeroInteractions(ops);
  }
  @Test public void shouldRemoveSpecificValueFromIndexForAutoIndexedProperty() throws Exception {
    long nodeId=11;
    int value1=1;
    int value2=2;
    index.startAutoIndexingProperty(indexedPropertyName);
    index.startAutoIndexingProperty(indexedPropertyName2);
    index.propertyAdded(ops,nodeId,indexedProperty,Values.of(value1));
    index.propertyAdded(ops,nodeId,indexedProperty2,Values.of(value2));
    reset(ops);
    index.propertyRemoved(ops,nodeId,indexedProperty);
    verify(ops).nodeRemoveFromExplicitIndex(NODE_AUTO_INDEX,nodeId,indexedPropertyName);
  }
  @Test public void shouldNotAddToIndexForNonAutoIndexedProperty() throws Exception {
    index.startAutoIndexingProperty(indexedPropertyName);
    index.propertyAdded(ops,11,nonIndexedProperty,Values.of("Hello!"));
    verifyZeroInteractions(ops);
  }
  @Test public void shouldNotAddOrRemoveFromIndexForNonAutoIndexedProperty() throws Exception {
    index.startAutoIndexingProperty(indexedPropertyName);
    index.propertyChanged(ops,11,nonIndexedProperty,Values.of("Goodbye!"),Values.of("Hello!"));
    verifyZeroInteractions(ops);
  }
}
