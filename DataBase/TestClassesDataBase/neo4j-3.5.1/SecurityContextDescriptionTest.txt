public class SecurityContextDescriptionTest {
  private BasicAuthManager manager;
  private SecurityContext context;
  @Before public void setup() throws Throwable {
    manager=new BasicAuthManager(new InMemoryUserRepository(),new BasicPasswordPolicy(),Clocks.systemClock(),new InMemoryUserRepository(),Config.defaults());
    manager.init();
    manager.start();
    manager.newUser("johan",password("bar"),false);
    context=manager.login(authToken("johan","bar")).authorize(s -> -1,GraphDatabaseSettings.DEFAULT_DATABASE_NAME);
  }
  @After public void teardown() throws Throwable {
    manager.stop();
    manager.shutdown();
  }
  @Test public void shouldMakeNiceDescription(){
    assertThat(context.description(),equalTo("user 'johan' with FULL"));
  }
  @Test public void shouldMakeNiceDescriptionWithMode(){
    SecurityContext modified=context.withMode(AccessMode.Static.WRITE);
    assertThat(modified.description(),equalTo("user 'johan' with WRITE"));
  }
  @Test public void shouldMakeNiceDescriptionRestricted(){
    SecurityContext restricted=context.withMode(new RestrictedAccessMode(context.mode(),AccessMode.Static.READ));
    assertThat(restricted.description(),equalTo("user 'johan' with FULL restricted to READ"));
  }
  @Test public void shouldMakeNiceDescriptionOverridden(){
    SecurityContext overridden=context.withMode(new OverriddenAccessMode(context.mode(),AccessMode.Static.READ));
    assertThat(overridden.description(),equalTo("user 'johan' with FULL overridden by READ"));
  }
  @Test public void shouldMakeNiceDescriptionAuthDisabled(){
    SecurityContext disabled=SecurityContext.AUTH_DISABLED;
    assertThat(disabled.description(),equalTo("AUTH_DISABLED with FULL"));
  }
  @Test public void shouldMakeNiceDescriptionAuthDisabledAndRestricted(){
    SecurityContext disabled=SecurityContext.AUTH_DISABLED;
    SecurityContext restricted=disabled.withMode(new RestrictedAccessMode(disabled.mode(),AccessMode.Static.READ));
    assertThat(restricted.description(),equalTo("AUTH_DISABLED with FULL restricted to READ"));
  }
}
