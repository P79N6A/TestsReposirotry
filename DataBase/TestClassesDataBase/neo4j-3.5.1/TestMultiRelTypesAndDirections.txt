public class TestMultiRelTypesAndDirections extends TraversalTestBase {
  private static final RelationshipType ONE=withName("ONE");
  @Before public void setupGraph(){
    createGraph("A ONE B","B ONE C","A TWO C");
  }
  @Test public void testCIsReturnedOnDepthTwoDepthFirst(){
    testCIsReturnedOnDepthTwo(getGraphDb().traversalDescription().depthFirst());
  }
  @Test public void testCIsReturnedOnDepthTwoBreadthFirst(){
    testCIsReturnedOnDepthTwo(getGraphDb().traversalDescription().breadthFirst());
  }
  private void testCIsReturnedOnDepthTwo(  TraversalDescription description){
    try (Transaction transaction=beginTx()){
      description=description.expand(PathExpanders.forTypeAndDirection(ONE,OUTGOING));
      int i=0;
      for (      Path position : description.traverse(node("A"))) {
        assertEquals(i++,position.length());
      }
    }
   }
}
