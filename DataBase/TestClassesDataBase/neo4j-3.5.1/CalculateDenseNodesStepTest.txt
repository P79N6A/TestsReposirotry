public class CalculateDenseNodesStepTest {
  @Test public void shouldNotProcessLoopsTwice() throws Exception {
    NodeRelationshipCache cache=mock(NodeRelationshipCache.class);
    try (CalculateDenseNodesStep step=new CalculateDenseNodesStep(mock(StageControl.class),DEFAULT,cache)){
      step.processors(4);
      step.start(0);
      long id=0;
      RelationshipRecord[] batch=batch(relationship(id++,1,5),relationship(id++,3,10),relationship(id++,2,2),relationship(id++,4,1));
      step.receive(0,batch);
      step.endOfUpstream();
      step.awaitCompleted();
      verify(cache,times(2)).incrementCount(eq(1L));
      verify(cache,times(1)).incrementCount(eq(2L));
      verify(cache,times(1)).incrementCount(eq(3L));
      verify(cache,times(1)).incrementCount(eq(4L));
      verify(cache,times(1)).incrementCount(eq(5L));
      verify(cache,times(1)).incrementCount(eq(10L));
    }
   }
  private static RelationshipRecord[] batch(  RelationshipRecord... relationships){
    return relationships;
  }
  private static RelationshipRecord relationship(  long id,  long startNodeId,  long endNodeId){
    return new RelationshipRecord(id).initialize(true,Record.NO_NEXT_PROPERTY.longValue(),startNodeId,endNodeId,0,NULL_REFERENCE.longValue(),NULL_REFERENCE.longValue(),NULL_REFERENCE.longValue(),NULL_REFERENCE.longValue(),false,false);
  }
}
