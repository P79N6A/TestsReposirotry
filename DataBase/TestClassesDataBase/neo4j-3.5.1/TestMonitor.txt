private static class TestMonitor implements CypherCacheHitMonitor<Pair<String,scala.collection.immutable.Map<String,Class<?>>>> {
  private final AtomicInteger hits=new AtomicInteger();
  private final AtomicInteger misses=new AtomicInteger();
  private final AtomicInteger discards=new AtomicInteger();
  private final AtomicInteger recompilations=new AtomicInteger();
  private final AtomicLong waitTime=new AtomicLong();
  @Override public void cacheHit(  Pair<String,scala.collection.immutable.Map<String,Class<?>>> key){
    hits.incrementAndGet();
  }
  @Override public void cacheMiss(  Pair<String,scala.collection.immutable.Map<String,Class<?>>> key){
    misses.incrementAndGet();
  }
  @Override public void cacheDiscard(  Pair<String,scala.collection.immutable.Map<String,Class<?>>> key,  String ignored,  int secondsSinceReplan){
    discards.incrementAndGet();
    waitTime.addAndGet(secondsSinceReplan);
  }
  @Override public void cacheRecompile(  Pair<String,scala.collection.immutable.Map<String,Class<?>>> key){
    recompilations.incrementAndGet();
  }
  @Override public String toString(){
    return "TestMonitor{hits=" + hits + ", misses="+ misses+ ", discards="+ discards+ ", waitTime="+ waitTime+ ", recompilations="+ recompilations+ "}";
  }
  public void reset(){
    hits.set(0);
    recompilations.set(0);
    misses.set(0);
    discards.set(0);
    waitTime.set(0);
  }
}
