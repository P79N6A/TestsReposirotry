public class RedirectToBrowserTestIT extends ExclusiveServerTestBase {
  private static NeoServer server;
  @BeforeClass public static void startServer() throws IOException {
    server=ServerHelper.createNonPersistentServer();
  }
  @AfterClass public static void stopServer(){
    if (server != null) {
      server.stop();
    }
  }
  @Test public void shouldRedirectToBrowser() throws Exception {
    Client nonRedirectingClient=Client.create();
    nonRedirectingClient.setFollowRedirects(false);
    final JaxRsResponse response=new RestRequest(server.baseUri(),nonRedirectingClient).accept(MediaType.TEXT_HTML_TYPE).get(server.baseUri().toString());
    assertEquals(303,response.getStatus());
    assertEquals(new URI(server.baseUri() + "browser/"),response.getLocation());
    response.close();
  }
  @Test public void shouldRedirectToBrowserUsingXForwardedHeaders() throws Exception {
    Client nonRedirectingClient=Client.create();
    nonRedirectingClient.setFollowRedirects(false);
    final JaxRsResponse response=new RestRequest(server.baseUri(),nonRedirectingClient).accept(MediaType.TEXT_HTML_TYPE).header("X-Forwarded-Host","foo.bar:8734").header("X-Forwarded-Proto","https").get(server.baseUri().toString());
    assertEquals(303,response.getStatus());
    assertEquals(new URI("https://foo.bar:8734/browser/"),response.getLocation());
    response.close();
  }
}
