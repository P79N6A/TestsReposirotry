private static class MustBeConnectedToNodeFilter implements Predicate<Path>, Evaluator {
  private final Node node;
  MustBeConnectedToNodeFilter(  Node node){
    this.node=node;
  }
  @Override public boolean test(  Path item){
    ResourceIterable<Relationship> relationships=(ResourceIterable<Relationship>)item.endNode().getRelationships(Direction.OUTGOING);
    try (ResourceIterator<Relationship> iterator=relationships.iterator()){
      while (iterator.hasNext()) {
        Relationship rel=iterator.next();
        if (rel.getEndNode().equals(node)) {
          return true;
        }
      }
      return false;
    }
   }
  @Override public Evaluation evaluate(  Path path){
    return test(path) ? Evaluation.INCLUDE_AND_CONTINUE : Evaluation.EXCLUDE_AND_CONTINUE;
  }
}
