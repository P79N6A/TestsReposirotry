@RunWith(Parameterized.class) public class LongCollisionValuesTest {
  @Rule public final RandomRule random=new RandomRule();
  @Parameters public static Collection<NumberArrayFactory> data(){
    return Arrays.asList(HEAP,OFF_HEAP,AUTO_WITHOUT_PAGECACHE,CHUNKED_FIXED_SIZE);
  }
  @Parameter(0) public NumberArrayFactory factory;
  @Test public void shouldStoreAndLoadLongs(){
    try (LongCollisionValues values=new LongCollisionValues(factory,100)){
      long[] offsets=new long[100];
      long[] longs=new long[offsets.length];
      for (int i=0; i < offsets.length; i++) {
        long value=random.nextLong(Long.MAX_VALUE);
        offsets[i]=values.add(value);
        longs[i]=value;
      }
      for (int i=0; i < offsets.length; i++) {
        assertEquals(longs[i],(long)values.get(offsets[i]));
      }
    }
   }
}
