public class TestIndexNames {
  private static GraphDatabaseService graphDb;
  private Transaction tx;
  @BeforeClass public static void setUpStuff(){
    graphDb=new TestGraphDatabaseFactory().newImpermanentDatabase();
  }
  @AfterClass public static void tearDownStuff(){
    graphDb.shutdown();
  }
  @After public void commitTx(){
    finishTx(true);
  }
  public void finishTx(  boolean success){
    if (tx != null) {
      if (success) {
        tx.success();
      }
      tx.close();
      tx=null;
    }
  }
  public void beginTx(){
    if (tx == null) {
      tx=graphDb.beginTx();
    }
  }
  void restartTx(){
    finishTx(true);
    beginTx();
  }
  @Test public void makeSureIndexNamesCanBeRead(){
    beginTx();
    assertEquals(0,graphDb.index().nodeIndexNames().length);
    String name1="my-index-1";
    Index<Node> nodeIndex1=graphDb.index().forNodes(name1);
    assertContains(Arrays.asList(graphDb.index().nodeIndexNames()),name1);
    String name2="my-index-2";
    graphDb.index().forNodes(name2);
    assertContains(Arrays.asList(graphDb.index().nodeIndexNames()),name1,name2);
    graphDb.index().forRelationships(name1);
    assertContains(Arrays.asList(graphDb.index().nodeIndexNames()),name1,name2);
    assertContains(Arrays.asList(graphDb.index().relationshipIndexNames()),name1);
    finishTx(true);
    restartTx();
    assertContains(Arrays.asList(graphDb.index().nodeIndexNames()),name1,name2);
    assertContains(Arrays.asList(graphDb.index().relationshipIndexNames()),name1);
    nodeIndex1.delete();
    assertContains(Arrays.asList(graphDb.index().nodeIndexNames()),name1,name2);
    assertContains(Arrays.asList(graphDb.index().relationshipIndexNames()),name1);
    finishTx(true);
    beginTx();
    assertContains(Arrays.asList(graphDb.index().nodeIndexNames()),name2);
    assertContains(Arrays.asList(graphDb.index().relationshipIndexNames()),name1);
    finishTx(false);
  }
}
