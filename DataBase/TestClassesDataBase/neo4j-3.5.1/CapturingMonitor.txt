private static class CapturingMonitor implements HumanUnderstandableExecutionMonitor.Monitor {
  final EnumMap<ImportStage,AtomicInteger> progress=new EnumMap<>(ImportStage.class);
  @Override public void progress(  ImportStage stage,  int percent){
    if (percent > 100) {
      fail("Expected percentage to be 0..100% but was " + percent);
    }
    AtomicInteger stageProgress=progress.computeIfAbsent(stage,s -> new AtomicInteger());
    int previous=stageProgress.getAndSet(percent);
    if (previous > percent) {
      fail("Progress should go forwards only, but went from " + previous + " to "+ percent);
    }
  }
  void assertAllProgressReachedEnd(){
    assertEquals(ImportStage.values().length,progress.size());
    progress.values().forEach(p -> assertEquals(100,p.get()));
  }
}
