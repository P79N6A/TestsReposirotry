public class ReadOnlyIndexReferenceFactoryTest {
  private final TestDirectory testDirectory=TestDirectory.testDirectory();
  private final ExpectedException expectedException=ExpectedException.none();
  private final CleanupRule cleanupRule=new CleanupRule();
  private final DefaultFileSystemRule fileSystemRule=new DefaultFileSystemRule();
  @Rule public RuleChain ruleChain=RuleChain.outerRule(cleanupRule).around(expectedException).around(testDirectory).around(fileSystemRule);
  private static final String INDEX_NAME="testIndex";
  private LuceneDataSource.LuceneFilesystemFacade filesystemFacade=LuceneDataSource.LuceneFilesystemFacade.FS;
  private IndexIdentifier indexIdentifier=new IndexIdentifier(IndexEntityType.Node,INDEX_NAME);
  private IndexConfigStore indexStore;
  @Before public void setUp() throws Exception {
    setupIndexInfrastructure();
  }
  @Test public void createReadOnlyIndexReference() throws Exception {
    ReadOnlyIndexReferenceFactory indexReferenceFactory=getReadOnlyIndexReferenceFactory();
    IndexReference indexReference=indexReferenceFactory.createIndexReference(indexIdentifier);
    cleanupRule.add(indexReference);
    expectedException.expect(UnsupportedOperationException.class);
    indexReference.getWriter();
  }
  @Test public void refreshReadOnlyIndexReference() throws Exception {
    ReadOnlyIndexReferenceFactory indexReferenceFactory=getReadOnlyIndexReferenceFactory();
    IndexReference indexReference=indexReferenceFactory.createIndexReference(indexIdentifier);
    cleanupRule.add(indexReference);
    IndexReference refreshedIndex=indexReferenceFactory.refresh(indexReference);
    assertSame("Refreshed instance should be the same.",indexReference,refreshedIndex);
  }
  private void setupIndexInfrastructure() throws Exception {
    DatabaseLayout databaseLayout=testDirectory.databaseLayout();
    indexStore=new IndexConfigStore(databaseLayout,fileSystemRule.get());
    indexStore.set(Node.class,INDEX_NAME,MapUtil.stringMap(IndexManager.PROVIDER,"lucene","type","fulltext"));
    LuceneDataSource luceneDataSource=new LuceneDataSource(databaseLayout,Config.defaults(),indexStore,fileSystemRule.get(),OperationalMode.single);
    try {
      luceneDataSource.init();
      luceneDataSource.getIndexSearcher(indexIdentifier);
    }
  finally {
      luceneDataSource.shutdown();
    }
  }
  private ReadOnlyIndexReferenceFactory getReadOnlyIndexReferenceFactory(){
    return new ReadOnlyIndexReferenceFactory(filesystemFacade,testDirectory.databaseLayout().file("index"),new IndexTypeCache(indexStore));
  }
}
