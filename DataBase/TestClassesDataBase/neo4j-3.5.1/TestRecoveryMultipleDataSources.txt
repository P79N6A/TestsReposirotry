public class TestRecoveryMultipleDataSources {
  @Rule public final TestDirectory testDirectory=TestDirectory.testDirectory();
  /** 
 * Tests an issue where loading all relationship types and property indexes after the neostore data source had been started internally. The db would be in a state where it would need recovery for the neostore data source, as well as some other data source. This would fail since eventually TxManager#getTransaction() would be called, which would fail since it hadn't as of yet recovered fully. Whereas that failure would happen in a listener and merely be logged, one effect of it would be that there would seem to be no relationship types in the database.
 */
  @Test public void recoverNeoAndIndexHavingAllRelationshipTypesAfterRecovery() throws Exception {
    File storeDir=testDirectory.storeDir();
    assertEquals(0,getRuntime().exec(new String[]{getJavaExecutable().toString(),"-Djava.awt.headless=true","-cp",getClassPath(),getClass().getName(),storeDir.getAbsolutePath()}).waitFor());
    GraphDatabaseService db=new TestGraphDatabaseFactory().newEmbeddedDatabase(storeDir);
    try (Transaction ignored=db.beginTx();ResourceIterator<RelationshipType> typeResourceIterator=db.getAllRelationshipTypes().iterator()){
      assertEquals(MyRelTypes.TEST.name(),typeResourceIterator.next().name());
    }
  finally {
      db.shutdown();
    }
  }
  public static void main(  String[] args) throws IOException {
    if (args.length != 1) {
      exit(1);
    }
    File storeDir=new File(args[0]);
    GraphDatabaseService db=new TestGraphDatabaseFactory().newEmbeddedDatabase(storeDir);
    try (Transaction tx=db.beginTx()){
      db.createNode().createRelationshipTo(db.createNode(),MyRelTypes.TEST);
      tx.success();
    }
     ((GraphDatabaseAPI)db).getDependencyResolver().resolveDependency(CheckPointer.class).forceCheckPoint(new SimpleTriggerInfo("test"));
    try (Transaction tx=db.beginTx()){
      db.index().forNodes("index").add(db.createNode(),storeDir.getAbsolutePath(),db.createNode());
      tx.success();
    }
     exit(0);
  }
}
