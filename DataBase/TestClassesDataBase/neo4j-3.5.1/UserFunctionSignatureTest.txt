public class UserFunctionSignatureTest {
  @Rule public ExpectedException exception=ExpectedException.none();
  private final UserFunctionSignature signature=functionSignature("asd").in("in",Neo4jTypes.NTAny).out(Neo4jTypes.NTAny).build();
  @Test public void inputSignatureShouldNotBeModifiable(){
    exception.expect(UnsupportedOperationException.class);
    signature.inputSignature().add(FieldSignature.inputField("in2",Neo4jTypes.NTAny));
  }
  @Test public void toStringShouldMatchCypherSyntax(){
    String toStr=functionSignature("org","myProcedure").in("in",Neo4jTypes.NTList(Neo4jTypes.NTString)).out(Neo4jTypes.NTNumber).build().toString();
    assertEquals("org.myProcedure(in :: LIST? OF STRING?) :: (NUMBER?)",toStr);
  }
}
