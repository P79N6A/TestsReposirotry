public abstract static class Voice {
  private Suppressible suppressible;
  private ByteArrayOutputStream voiceStream;
  public Voice(  Suppressible suppressible,  ByteArrayOutputStream originalStream){
    this.suppressible=suppressible;
    this.voiceStream=originalStream;
  }
  public Suppressible getSuppressible(){
    return suppressible;
  }
  public boolean containsMessage(  String message){
    return voiceStream.toString().contains(message);
  }
  /** 
 * Get each line written to this voice since it was suppressed 
 */
  public List<String> lines(){
    return asList(toString().split(lineSeparator()));
  }
  @Override public String toString(){
    try {
      return voiceStream.toString(StandardCharsets.UTF_8.name());
    }
 catch (    UnsupportedEncodingException e) {
      throw new RuntimeException(e);
    }
  }
  abstract void restore(  boolean failure) throws IOException ;
}
