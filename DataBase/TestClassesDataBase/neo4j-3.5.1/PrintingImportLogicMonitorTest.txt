/** 
 * Why test a silly thing like this? This implementation contains some printf calls that needs to get arguments correct or will otherwise throw exception. It's surprisingly easy to get those wrong.
 */
class PrintingImportLogicMonitorTest {
  private final ByteArrayOutputStream outBuffer=new ByteArrayOutputStream();
  private final PrintStream out=new PrintStream(outBuffer);
  private final ByteArrayOutputStream errBuffer=new ByteArrayOutputStream();
  private final PrintStream err=new PrintStream(errBuffer);
  private final ImportLogic.Monitor monitor=new PrintingImportLogicMonitor(out,err);
  @Test void mayExceedNodeIdCapacity(){
    long capacity=10_000_000;
    long estimatedCount=12_000_000;
    monitor.mayExceedNodeIdCapacity(capacity,estimatedCount);
    String text=errBuffer.toString();
    assertTrue(text.contains("WARNING"));
    assertTrue(text.contains("exceed"));
    assertTrue(text.contains(String.valueOf(capacity)));
    assertTrue(text.contains(String.valueOf(estimatedCount)));
  }
  @Test void mayExceedRelationshipIdCapacity(){
    long capacity=10_000_000;
    long estimatedCount=12_000_000;
    monitor.mayExceedRelationshipIdCapacity(capacity,estimatedCount);
    String text=errBuffer.toString();
    assertTrue(text.contains("WARNING"));
    assertTrue(text.contains("exceed"));
    assertTrue(text.contains(String.valueOf(capacity)));
    assertTrue(text.contains(String.valueOf(estimatedCount)));
  }
  @Test void insufficientHeapSize(){
    long optimalHeapSize=gibiBytes(2);
    long heapSize=gibiBytes(1);
    monitor.insufficientHeapSize(optimalHeapSize,heapSize);
    String text=errBuffer.toString();
    assertTrue(text.contains("WARNING"));
    assertTrue(text.contains("too small"));
    assertTrue(text.contains(bytes(heapSize)));
    assertTrue(text.contains(bytes(optimalHeapSize)));
  }
  @Test void abundantHeapSize(){
    long optimalHeapSize=gibiBytes(2);
    long heapSize=gibiBytes(10);
    monitor.abundantHeapSize(optimalHeapSize,heapSize);
    String text=errBuffer.toString();
    assertTrue(text.contains("WARNING"));
    assertTrue(text.contains("unnecessarily large"));
    assertTrue(text.contains(bytes(heapSize)));
    assertTrue(text.contains(bytes(optimalHeapSize)));
  }
  @Test void insufficientAvailableMemory(){
    long estimatedCacheSize=gibiBytes(2);
    long optimalHeapSize=gibiBytes(2);
    long availableMemory=gibiBytes(1);
    monitor.insufficientAvailableMemory(estimatedCacheSize,optimalHeapSize,availableMemory);
    String text=errBuffer.toString();
    assertTrue(text.contains("WARNING"));
    assertTrue(text.contains("may not be sufficient"));
    assertTrue(text.contains(bytes(estimatedCacheSize)));
    assertTrue(text.contains(bytes(optimalHeapSize)));
    assertTrue(text.contains(bytes(availableMemory)));
  }
}
