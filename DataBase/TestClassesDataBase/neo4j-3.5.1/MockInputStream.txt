private static class MockInputStream extends InputStream {
  private final Ticker ticker;
  private final byte[][] chunks;
  private int chunk;
  MockInputStream(  Ticker ticker,  String... chunks){
    this.ticker=ticker;
    this.chunks=new byte[chunks.length][];
    for (int i=0; i < chunks.length; i++) {
      this.chunks[i]=chunks[i].getBytes();
    }
  }
  @Override public int available(){
    ticker.tick();
    if (chunk >= chunks.length) {
      return 0;
    }
    return chunks[chunk].length;
  }
  @Override public int read(  byte[] target){
    if (chunk >= chunks.length) {
      return 0;
    }
    byte[] source=chunks[chunk++];
    System.arraycopy(source,0,target,0,source.length);
    return source.length;
  }
  @Override public int read(){
    throw new UnsupportedOperationException();
  }
}
