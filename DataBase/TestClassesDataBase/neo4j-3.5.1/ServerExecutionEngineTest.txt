public class ServerExecutionEngineTest {
  @Rule public EmbeddedDatabaseRule rule=new EmbeddedDatabaseRule();
  @Test public void shouldDetectPeriodicCommitQueries(){
    QueryExecutionEngine engine=rule.getGraphDatabaseAPI().getDependencyResolver().resolveDependency(QueryExecutionEngine.class);
    boolean result=engine.isPeriodicCommit("USING PERIODIC COMMIT LOAD CSV FROM 'file:///tmp/foo.csv' AS line CREATE ()");
    assertTrue("Did not detect periodic commit query",result);
  }
  @Test public void shouldNotDetectNonPeriodicCommitQueriesAsPeriodicCommitQueries(){
    QueryExecutionEngine engine=rule.getGraphDatabaseAPI().getDependencyResolver().resolveDependency(QueryExecutionEngine.class);
    boolean result=engine.isPeriodicCommit("CREATE ()");
    assertFalse("Did detect non-periodic commit query as periodic commit query",result);
  }
  @Test public void shouldNotDetectInvalidQueriesAsPeriodicCommitQueries(){
    QueryExecutionEngine engine=rule.getGraphDatabaseAPI().getDependencyResolver().resolveDependency(QueryExecutionEngine.class);
    boolean result=engine.isPeriodicCommit("MATCH n RETURN m");
    assertFalse("Did detect an invalid query as periodic commit query",result);
  }
}
