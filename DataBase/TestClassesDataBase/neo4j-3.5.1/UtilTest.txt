public class UtilTest extends Neo4jAlgoTestCase {
  @Test public void testPathCounter(){
    Node a=graphDb.createNode();
    Node b=graphDb.createNode();
    Node c=graphDb.createNode();
    Node d=graphDb.createNode();
    Node e=graphDb.createNode();
    Node f=graphDb.createNode();
    List<Relationship> ap=new LinkedList<>();
    List<Relationship> bp=new LinkedList<>();
    List<Relationship> cp=new LinkedList<>();
    List<Relationship> dp=new LinkedList<>();
    List<Relationship> ep=new LinkedList<>();
    List<Relationship> fp=new LinkedList<>();
    Map<Node,List<Relationship>> predecessors=new HashMap<>();
    predecessors.put(a,ap);
    predecessors.put(b,bp);
    predecessors.put(c,cp);
    predecessors.put(d,dp);
    predecessors.put(e,ep);
    predecessors.put(f,fp);
    fp.add(f.createRelationshipTo(c,MyRelTypes.R1));
    fp.add(f.createRelationshipTo(e,MyRelTypes.R1));
    ep.add(e.createRelationshipTo(b,MyRelTypes.R1));
    ep.add(e.createRelationshipTo(d,MyRelTypes.R1));
    dp.add(d.createRelationshipTo(a,MyRelTypes.R1));
    cp.add(c.createRelationshipTo(b,MyRelTypes.R1));
    bp.add(b.createRelationshipTo(a,MyRelTypes.R1));
    PathCounter counter=new Util.PathCounter(predecessors);
    assertEquals(1,counter.getNumberOfPathsToNode(a));
    assertEquals(1,counter.getNumberOfPathsToNode(b));
    assertEquals(1,counter.getNumberOfPathsToNode(c));
    assertEquals(1,counter.getNumberOfPathsToNode(d));
    assertEquals(2,counter.getNumberOfPathsToNode(e));
    assertEquals(3,counter.getNumberOfPathsToNode(f));
    counter=new Util.PathCounter(Util.reversedPredecessors(predecessors));
    assertEquals(3,counter.getNumberOfPathsToNode(a));
    assertEquals(2,counter.getNumberOfPathsToNode(b));
    assertEquals(1,counter.getNumberOfPathsToNode(c));
    assertEquals(1,counter.getNumberOfPathsToNode(d));
    assertEquals(1,counter.getNumberOfPathsToNode(e));
    assertEquals(1,counter.getNumberOfPathsToNode(f));
  }
}
