public class SchemaIndexDescriptorFactoryTest {
  private static final int LABEL_ID=0;
  @Test public void shouldCreateIndexDescriptors(){
    IndexDescriptor desc;
    desc=TestIndexDescriptorFactory.forLabel(LABEL_ID,1);
    assertThat(desc.type(),equalTo(IndexDescriptor.Type.GENERAL));
    assertThat(desc.schema(),equalTo(SchemaDescriptorFactory.forLabel(LABEL_ID,1)));
  }
  @Test public void shouldCreateUniqueIndexDescriptors(){
    IndexDescriptor desc;
    desc=TestIndexDescriptorFactory.uniqueForLabel(LABEL_ID,1);
    assertThat(desc.type(),equalTo(IndexDescriptor.Type.UNIQUE));
    assertThat(desc.schema(),equalTo(SchemaDescriptorFactory.forLabel(LABEL_ID,1)));
  }
  @Test public void shouldCreateIndexDescriptorsFromSchema(){
    IndexDescriptor desc;
    desc=IndexDescriptorFactory.forSchema(SchemaDescriptorFactory.forLabel(LABEL_ID,1));
    assertThat(desc.type(),equalTo(IndexDescriptor.Type.GENERAL));
    assertThat(desc.schema(),equalTo(SchemaDescriptorFactory.forLabel(LABEL_ID,1)));
    desc=IndexDescriptorFactory.uniqueForSchema(SchemaDescriptorFactory.forLabel(LABEL_ID,1));
    assertThat(desc.type(),equalTo(IndexDescriptor.Type.UNIQUE));
    assertThat(desc.schema(),equalTo(SchemaDescriptorFactory.forLabel(LABEL_ID,1)));
  }
  @Test public void shouldCreateEqualDescriptors(){
    IndexDescriptor desc1;
    IndexDescriptor desc2;
    desc1=TestIndexDescriptorFactory.forLabel(LABEL_ID,1);
    desc2=TestIndexDescriptorFactory.forLabel(LABEL_ID,1);
    assertEquality(desc1,desc2);
    desc1=TestIndexDescriptorFactory.uniqueForLabel(LABEL_ID,1);
    desc2=TestIndexDescriptorFactory.uniqueForLabel(LABEL_ID,1);
    assertEquality(desc1,desc2);
  }
  @Test public void shouldGiveNiceUserDescriptions(){
    assertThat(TestIndexDescriptorFactory.forLabel(1,2).userDescription(simpleNameLookup),equalTo("Index( GENERAL, :Label1(property2) )"));
    assertThat(TestIndexDescriptorFactory.uniqueForLabel(2,4).userDescription(simpleNameLookup),equalTo("Index( UNIQUE, :Label2(property4) )"));
  }
}
