private static class MyPrimitiveProxy implements RecordProxy<NodeRecord,Void> {
  private final NodeRecord record=new NodeRecord(5);
  private boolean changed;
  MyPrimitiveProxy(){
    record.setInUse(true);
  }
  @Override public long getKey(){
    return record.getId();
  }
  @Override public NodeRecord forChangingLinkage(){
    changed=true;
    return record;
  }
  @Override public NodeRecord forChangingData(){
    changed=true;
    return record;
  }
  @Override public NodeRecord forReadingLinkage(){
    return record;
  }
  @Override public NodeRecord forReadingData(){
    return record;
  }
  @Override public Void getAdditionalData(){
    return null;
  }
  @Override public NodeRecord getBefore(){
    return record;
  }
  @Override public boolean isChanged(){
    return changed;
  }
  @Override public boolean isCreated(){
    return false;
  }
}
