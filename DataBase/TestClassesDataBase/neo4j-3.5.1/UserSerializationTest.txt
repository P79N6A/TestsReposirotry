public class UserSerializationTest {
  @Test public void shouldSerializeAndDeserialize() throws Exception {
    UserSerialization serialization=new UserSerialization();
    List<User> users=asList(new User.Builder("Mike",LegacyCredential.forPassword("1234321")).withFlag("not_as_nice").build(),new User.Builder("Steve",LegacyCredential.forPassword("1234321")).build(),new User.Builder("steve.stevesson@WINDOMAIN",LegacyCredential.forPassword("1234321")).build(),new User.Builder("Bob",LegacyCredential.forPassword("0987654")).build());
    byte[] serialized=serialization.serialize(users);
    assertThat(serialization.deserializeRecords(serialized),equalTo(users));
  }
  /** 
 * This is a future-proofing test. If you come here because you've made changes to the serialization format, this is your reminder to make sure to build this is in a backwards compatible way.
 */
  @Test public void shouldReadV1SerializationFormat() throws Exception {
    UserSerialization serialization=new UserSerialization();
    byte[] salt1=new byte[]{(byte)0xa5,(byte)0x43};
    byte[] hash1=new byte[]{(byte)0xfe,(byte)0x00,(byte)0x56,(byte)0xc3,(byte)0x7e};
    byte[] salt2=new byte[]{(byte)0x34,(byte)0xa4};
    byte[] hash2=new byte[]{(byte)0x0e,(byte)0x1f,(byte)0xff,(byte)0xc2,(byte)0x3e};
    List<User> deserialized=serialization.deserializeRecords(UTF8.encode("Mike:SHA-256,FE0056C37E,A543:\n" + "Steve:SHA-256,FE0056C37E,A543:nice_guy,password_change_required\n" + "Bob:SHA-256,0E1FFFC23E,34A4:password_change_required\n"));
    assertThat(deserialized,equalTo(asList(new User.Builder("Mike",new LegacyCredential(salt1,hash1)).build(),new User.Builder("Steve",new LegacyCredential(salt1,hash1)).withRequiredPasswordChange(true).withFlag("nice_guy").build(),new User.Builder("Bob",new LegacyCredential(salt2,hash2)).withRequiredPasswordChange(true).build())));
  }
}
