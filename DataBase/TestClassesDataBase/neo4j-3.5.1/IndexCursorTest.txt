public class IndexCursorTest {
  @Test public void shouldClosePreviousBeforeReinitialize(){
    StubIndexCursor cursor=new StubIndexCursor();
    StubProgressor progressor=new StubProgressor();
    cursor.initialize(progressor);
    assertFalse("open before re-initialize",progressor.isClosed);
    StubProgressor otherProgressor=new StubProgressor();
    cursor.initialize(otherProgressor);
    assertTrue("closed after re-initialize",progressor.isClosed);
    assertFalse("new still open",otherProgressor.isClosed);
  }
private static class StubIndexCursor extends IndexCursor<StubProgressor> {
  }
private static class StubProgressor implements IndexProgressor {
    boolean isClosed;
    StubProgressor(){
      isClosed=false;
    }
    @Override public boolean next(){
      return false;
    }
    @Override public void close(){
      isClosed=true;
    }
  }
}
