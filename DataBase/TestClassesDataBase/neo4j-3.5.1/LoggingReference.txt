private static class LoggingReference<T extends AbstractBaseRecord> implements RecordReference<T> {
  private final RecordReference<T> reference;
  private final InvocationLog log;
  LoggingReference(  RecordReference<T> reference,  InvocationLog log){
    this.reference=reference;
    this.log=log;
  }
  @SuppressWarnings("unchecked") @Override public void dispatch(  PendingReferenceCheck<T> reporter){
    reference.dispatch(mock((Class<PendingReferenceCheck<T>>)reporter.getClass(),withSettings().spiedInstance(reporter).defaultAnswer(new ReporterSpy<>(reference,reporter,log))));
  }
}
