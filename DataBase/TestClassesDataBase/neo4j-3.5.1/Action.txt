abstract class Action {
  long[] data;
  Set<Long> allKeys;
  Action(  long[] data){
    this.data=data;
    this.allKeys=keySet(data);
  }
  long[] data(){
    return data;
  }
  abstract void execute(  GBPTree<KEY,VALUE> index) throws IOException ;
  abstract boolean isCheckpoint();
  abstract boolean hasCausalDependencyWith(  Action other);
  private Set<Long> keySet(  long[] data){
    Set<Long> keys=new TreeSet<>();
    for (int i=0; i < data.length; i+=2) {
      keys.add(data[i]);
    }
    return keys;
  }
  abstract ActionType type();
}
