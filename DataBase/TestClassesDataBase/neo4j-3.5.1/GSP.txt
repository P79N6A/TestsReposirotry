/** 
 * Data for a GSP, i.e. generation and pointer. Checksum is generated from those two fields and so isn't a field in this struct - ahem class. The reason this class exists is that we, when reading, want to read two fields and a checksum and match the two fields with the checksum. This class is designed to be mutable and should be reused in as many places as possible.
 */
private static class GSP {
  long generation;
  long pointer;
  @Override public int hashCode(){
    final int prime=31;
    int result=1;
    result=prime * result + (int)(generation ^ (generation >>> 32));
    result=prime * result + (int)(pointer ^ (pointer >>> 32));
    return result;
  }
  @Override public boolean equals(  Object obj){
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    GSP other=(GSP)obj;
    if (generation != other.generation) {
      return false;
    }
    return pointer == other.pointer;
  }
  @Override public String toString(){
    return "[generation:" + generation + ",p:"+ pointer+ "]";
  }
}
