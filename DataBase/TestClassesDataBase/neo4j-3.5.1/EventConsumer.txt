static class EventConsumer implements Consumer<Event> {
  final BlockingQueue<Event> eventsProcessed=new LinkedBlockingQueue<>();
  @Override public void accept(  Event event){
    event.processedBy=Thread.currentThread();
    eventsProcessed.offer(event);
  }
  public Event poll(  long timeout,  TimeUnit unit) throws InterruptedException {
    return eventsProcessed.poll(timeout,unit);
  }
}
