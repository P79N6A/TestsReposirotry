public class CustomNameExtractorTest {
  @Test public void favours_name_over_value(){
    assertThat(CustomNameExtractor.getName(() -> "name",() -> "value")).contains("name");
    assertThat(CustomNameExtractor.getName(() -> "name",() -> "")).contains("name");
    assertThat(CustomNameExtractor.getName(() -> "name",() -> "  ")).contains("name");
    assertThat(CustomNameExtractor.getName(() -> "   name  ",() -> "  ")).contains("name");
  }
  @Test public void returns_value_if_trimmed_name_is_empty(){
    assertThat(CustomNameExtractor.getName(() -> "",() -> "value")).contains("value");
    assertThat(CustomNameExtractor.getName(() -> "   ",() -> "value")).contains("value");
    assertThat(CustomNameExtractor.getName(() -> "   ",() -> "   value  ")).contains("value");
  }
  @Test public void returns_nothing_if_none_defined(){
    assertThat(CustomNameExtractor.getName(() -> "",() -> "")).isEmpty();
    assertThat(CustomNameExtractor.getName(() -> "   ",() -> "")).isEmpty();
    assertThat(CustomNameExtractor.getName(() -> "",() -> "   ")).isEmpty();
    assertThat(CustomNameExtractor.getName(() -> "   ",() -> "   ")).isEmpty();
  }
}
