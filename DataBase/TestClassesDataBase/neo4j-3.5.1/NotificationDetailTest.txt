class NotificationDetailTest {
  @Test void shouldConstructIndexDetails(){
    NotificationDetail detail=NotificationDetail.Factory.index("Person","name");
    assertThat(detail.name(),equalTo("hinted index"));
    assertThat(detail.value(),equalTo("index on :Person(name)"));
    assertThat(detail.toString(),equalTo("hinted index is: index on :Person(name)"));
  }
  @Test void shouldConstructSuboptimalIndexDetails(){
    NotificationDetail detail=NotificationDetail.Factory.suboptimalIndex("Person","name");
    assertThat(detail.name(),equalTo("index"));
    assertThat(detail.value(),equalTo("index on :Person(name)"));
    assertThat(detail.toString(),equalTo("index is: index on :Person(name)"));
  }
  @Test void shouldConstructCartesianProductDetailsSingular(){
    Set<String> idents=new HashSet<>();
    idents.add("n");
    NotificationDetail detail=NotificationDetail.Factory.cartesianProduct(idents);
    assertThat(detail.name(),equalTo("identifier"));
    assertThat(detail.value(),equalTo("(n)"));
    assertThat(detail.toString(),equalTo("identifier is: (n)"));
  }
  @Test void shouldConstructCartesianProductDetails(){
    Set<String> idents=new TreeSet<>();
    idents.add("n");
    idents.add("node2");
    NotificationDetail detail=NotificationDetail.Factory.cartesianProduct(idents);
    assertThat(detail.name(),equalTo("identifiers"));
    assertThat(detail.value(),equalTo("(n, node2)"));
    assertThat(detail.toString(),equalTo("identifiers are: (n, node2)"));
  }
  @Test void shouldConstructJoinHintDetailsSingular(){
    List<String> idents=new ArrayList<>();
    idents.add("n");
    NotificationDetail detail=NotificationDetail.Factory.joinKey(idents);
    assertThat(detail.name(),equalTo("hinted join key identifier"));
    assertThat(detail.value(),equalTo("n"));
    assertThat(detail.toString(),equalTo("hinted join key identifier is: n"));
  }
  @Test void shouldConstructJoinHintDetails(){
    List<String> idents=new ArrayList<>();
    idents.add("n");
    idents.add("node2");
    NotificationDetail detail=NotificationDetail.Factory.joinKey(idents);
    assertThat(detail.name(),equalTo("hinted join key identifiers"));
    assertThat(detail.value(),equalTo("n, node2"));
    assertThat(detail.toString(),equalTo("hinted join key identifiers are: n, node2"));
  }
}
