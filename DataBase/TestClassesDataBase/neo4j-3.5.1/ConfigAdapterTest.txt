public class ConfigAdapterTest {
  @Test public void shouldGetDefaultPropertyByKey() throws Exception {
    Config config=Config.defaults();
    ConfigAdapter wrappingConfiguration=new ConfigAdapter(config);
    final Object propertyValue=wrappingConfiguration.getProperty(ServerSettings.rest_api_path.name());
    assertEquals(new URI(ServerSettings.rest_api_path.getDefaultValue()),propertyValue);
  }
  @Test public void shouldGetPropertyInRightFormat() throws Exception {
    Config config=Config.defaults();
    ConfigAdapter wrappingConfiguration=new ConfigAdapter(config);
    wrappingConfiguration.setProperty(ServerSettings.rest_api_path.name(),"http://localhost:7474///db///data///");
    final Object dataPath=wrappingConfiguration.getProperty(ServerSettings.rest_api_path.name());
    assertEquals(new URI(ServerSettings.rest_api_path.getDefaultValue()),dataPath);
  }
  @Test public void shouldContainAllKeysOfPropertiesWithDefaultOrUserDefinedValues(){
    Config config=Config.defaults();
    ConfigAdapter wrappingConfiguration=new ConfigAdapter(config);
    assertTrue(wrappingConfiguration.getKeys().hasNext());
  }
  @Test public void shouldAbleToAccessRegisteredPropertyByName(){
    Config config=Config.defaults();
    ConfigAdapter wrappingConfiguration=new ConfigAdapter(config);
    assertEquals(Duration.ofSeconds(60),wrappingConfiguration.getProperty(ServerSettings.transaction_idle_timeout.name()));
  }
  @Test public void shouldAbleToAccessNonRegisteredPropertyByName(){
    Config config=Config.defaults(ServerSettings.transaction_idle_timeout,"600ms");
    ConfigAdapter wrappingConfiguration=new ConfigAdapter(config);
    assertEquals(Duration.ofMillis(600),wrappingConfiguration.getProperty(ServerSettings.transaction_idle_timeout.name()));
  }
}
