@RunWith(Parameterized.class) public class CommunityIdTypeConfigurationProviderTest {
  private IdType reusableType;
  @Parameterized.Parameters public static List<IdType> data(){
    return Arrays.asList(IdType.PROPERTY,IdType.STRING_BLOCK,IdType.ARRAY_BLOCK,IdType.NODE_LABELS);
  }
  public CommunityIdTypeConfigurationProviderTest(  IdType reusableType){
    this.reusableType=reusableType;
  }
  @Test public void nonReusableTypeConfiguration(){
    IdTypeConfigurationProvider provider=createIdTypeProvider();
    IdTypeConfiguration typeConfiguration=provider.getIdTypeConfiguration(IdType.RELATIONSHIP);
    assertFalse("Relationship ids are not reusable.",typeConfiguration.allowAggressiveReuse());
    assertEquals("Relationship ids are not reusable.",IdTypeConfiguration.DEFAULT_GRAB_SIZE,typeConfiguration.getGrabSize());
  }
  @Test public void reusableTypeConfiguration(){
    IdTypeConfigurationProvider provider=createIdTypeProvider();
    IdTypeConfiguration typeConfiguration=provider.getIdTypeConfiguration(reusableType);
    assertTrue(typeConfiguration.allowAggressiveReuse());
    assertEquals(IdTypeConfiguration.AGGRESSIVE_GRAB_SIZE,typeConfiguration.getGrabSize());
  }
  private IdTypeConfigurationProvider createIdTypeProvider(){
    return new CommunityIdTypeConfigurationProvider();
  }
}
