public class Applier implements AutoCloseable {
  private final GraphDatabaseAPI database;
  private final TransactionRepresentationCommitProcess commitProcess;
  private final TransactionIdStore transactionIdStore;
  private final NeoStores neoStores;
  Applier(){
    database=(GraphDatabaseAPI)new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(directory.databaseDir()).setConfig("dbms.backup.enabled","false").newGraphDatabase();
    DependencyResolver dependencyResolver=database.getDependencyResolver();
    commitProcess=new TransactionRepresentationCommitProcess(dependencyResolver.resolveDependency(TransactionAppender.class),dependencyResolver.resolveDependency(StorageEngine.class));
    transactionIdStore=database.getDependencyResolver().resolveDependency(TransactionIdStore.class);
    neoStores=database.getDependencyResolver().resolveDependency(RecordStorageEngine.class).testAccessNeoStores();
  }
  public void apply(  Transaction transaction) throws TransactionFailureException {
    TransactionRepresentation representation=transaction.representation(idGenerator(),masterId(),myId(),transactionIdStore.getLastCommittedTransactionId(),neoStores);
    commitProcess.commit(new TransactionToApply(representation),CommitEvent.NULL,TransactionApplicationMode.EXTERNAL);
  }
  @Override public void close(){
    database.shutdown();
  }
}
