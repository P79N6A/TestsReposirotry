class SchemaImplMockTest {
  private static final Exception cause=new Exception("Kilroy made it");
  @Test void includeCauseOfFailure() throws IndexNotFoundKernelException {
    IndexDefinitionImpl indexDefinition=mockIndexDefinition();
    KernelTransaction kernelTransaction=mockKernelTransaction();
    SchemaImpl schema=new SchemaImpl(() -> kernelTransaction);
    IllegalStateException e=assertThrows(IllegalStateException.class,() -> schema.awaitIndexOnline(indexDefinition,1,TimeUnit.MINUTES));
    assertThat(e.getMessage(),Matchers.containsString(Exceptions.stringify(cause)));
  }
  private static IndexDefinitionImpl mockIndexDefinition(){
    IndexDefinitionImpl indexDefinition=mock(IndexDefinitionImpl.class);
    when(indexDefinition.getIndexReference()).thenReturn(IndexReference.NO_INDEX);
    return indexDefinition;
  }
  private static KernelTransaction mockKernelTransaction() throws IndexNotFoundKernelException {
    SchemaRead schemaRead=mock(SchemaRead.class);
    when(schemaRead.indexGetState(any(IndexReference.class))).thenReturn(InternalIndexState.FAILED);
    when(schemaRead.indexGetFailure(any(IndexReference.class))).thenReturn(Exceptions.stringify(cause));
    KernelTransaction kt=mock(KernelTransaction.class);
    when(kt.tokenRead()).thenReturn(mock(TokenRead.class));
    when(kt.schemaRead()).thenReturn(schemaRead);
    when(kt.isTerminated()).thenReturn(false);
    when(kt.acquireStatement()).thenReturn(mock(Statement.class));
    return kt;
  }
}
