/** 
 * JUnit rule that allows you to manage lifecycle of a set of instances. Register instances and then use the init/start/stop/shutdown methods.
 */
public class LifeRule implements TestRule {
  private LifeSupport life=new LifeSupport();
  private final boolean autoStart;
  public LifeRule(){
    this(false);
  }
  public LifeRule(  boolean autoStart){
    this.autoStart=autoStart;
  }
  @Override public Statement apply(  final Statement base,  Description description){
    return new Statement(){
      @Override public void evaluate() throws Throwable {
        try {
          if (autoStart) {
            start();
          }
          base.evaluate();
          life.shutdown();
        }
 catch (        Throwable failure) {
          try {
            life.shutdown();
          }
 catch (          Throwable suppressed) {
            failure.addSuppressed(suppressed);
          }
          throw failure;
        }
 finally {
          life=new LifeSupport();
        }
      }
    }
;
  }
  public <T extends Lifecycle>T add(  T instance){
    return life.add(instance);
  }
  public void init(){
    life.init();
  }
  public void start(){
    life.start();
  }
  public void stop(){
    life.stop();
  }
  public void shutdown(){
    life.shutdown();
  }
}
