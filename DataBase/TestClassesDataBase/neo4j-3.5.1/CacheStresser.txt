static class CacheStresser extends Thread {
  private final TemporalIndexCache<String> cache;
  private final AtomicBoolean shouldContinue;
  private final Random r=new Random();
  CacheStresser(  TemporalIndexCache<String> cache,  AtomicBoolean shouldContinue){
    this.cache=cache;
    this.shouldContinue=shouldContinue;
  }
  @Override public void run(){
    while (shouldContinue.get()) {
      stress();
    }
  }
  private void stress(){
    cache.select(valueGroups[r.nextInt(valueGroups.length)]);
    for (    String s : cache) {
      if (s == null) {
        throw new IllegalStateException("iterated over null");
      }
    }
  }
}
