/** 
 * JUnit @Rule for configuring, creating and managing an EmbeddedGraphDatabase instance. <p> The database instance is created lazily, so configurations can be injected prior to calling {@link #getGraphDatabaseAPI()}.
 */
public class EmbeddedDatabaseRule extends DatabaseRule {
  private final TestDirectory testDirectory;
  public EmbeddedDatabaseRule(){
    this.testDirectory=TestDirectory.testDirectory();
  }
  public EmbeddedDatabaseRule(  TestDirectory testDirectory){
    this.testDirectory=testDirectory;
  }
  @Override public EmbeddedDatabaseRule startLazily(){
    return (EmbeddedDatabaseRule)super.startLazily();
  }
  @Override public DatabaseLayout databaseLayout(){
    return testDirectory.databaseLayout();
  }
  @Override protected GraphDatabaseFactory newFactory(){
    return new TestGraphDatabaseFactory();
  }
  @Override protected GraphDatabaseBuilder newBuilder(  GraphDatabaseFactory factory){
    return factory.newEmbeddedDatabaseBuilder(testDirectory.databaseDir());
  }
  @Override public Statement apply(  Statement base,  Description description){
    return testDirectory.apply(super.apply(base,description),description);
  }
}
