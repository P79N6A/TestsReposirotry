class ProfilerExtensionTest {
  @Test void passingTestsMustNotProduceProfilerOutput(){
    CONTEXT.clear();
    execute("testThatPasses");
    File testDir=CONTEXT.getValue(TEST_DIR);
    assertFalse(testDir.exists());
  }
  @Test void failingTestsMustProduceProfilerOutput() throws IOException {
    CONTEXT.clear();
    execute("testThatFails");
    File testDir=CONTEXT.getValue(TEST_DIR);
    assertTrue(testDir.exists());
    assertTrue(testDir.isDirectory());
    File profileData=new File(testDir,"profiler-output.txt");
    assertTrue(profileData.exists());
    assertTrue(profileData.isFile());
    try (Stream<String> lines=Files.lines(profileData.toPath())){
      assertTrue(lines.anyMatch(line -> line.contains("someVeryExpensiveComputation")));
    }
   }
  private static void execute(  String testName,  TestExecutionListener... testExecutionListeners){
    LauncherDiscoveryRequest discoveryRequest=LauncherDiscoveryRequestBuilder.request().selectors(selectMethod(ProfilerExtensionVerificationTest.class,testName)).configurationParameter(TEST_TOGGLE,"true").build();
    Launcher launcher=LauncherFactory.create();
    launcher.execute(discoveryRequest,testExecutionListeners);
  }
}
