public class SnapshotQueryExecutionIT extends ExclusiveServerTestBase {
  private CommunityNeoServer server;
  @Before public void setUp() throws Exception {
    server=serverOnRandomPorts().withProperty(GraphDatabaseSettings.snapshot_query.name(),Settings.TRUE).build();
    server.start();
  }
  @After public void tearDown(){
    if (server != null) {
      server.stop();
    }
  }
  @Test public void executeQueryWithSnapshotEngine(){
    Database database=server.getDatabase();
    GraphDatabaseFacade graph=database.getGraph();
    try (Transaction transaction=graph.beginTx()){
      for (int i=0; i < 10; i++) {
        Node node=graph.createNode();
        node.setProperty("a","b");
      }
      transaction.success();
    }
     HTTP.Builder httpClientBuilder=HTTP.withBaseUri(server.baseUri());
    HTTP.Response transactionStart=httpClientBuilder.POST(transactionURI());
    assertThat(transactionStart.status(),equalTo(201));
    HTTP.Response response=httpClientBuilder.POST(transactionStart.location(),quotedJson("{ 'statements': [ { 'statement': 'MATCH (n) RETURN n' } ] }"));
    assertThat(response.status(),equalTo(200));
  }
  private String transactionURI(){
    return "db/data/transaction";
  }
}
