@RunWith(Parameterized.class) public static class NonUniqueTest<KEY extends NativeIndexKey<KEY>,VALUE extends NativeIndexValue> extends NativeIndexPopulatorTests.NonUnique<KEY,VALUE> {
  @Parameterized.Parameters(name="{index} {0}") public static Collection<Object[]> data(){
    return allPopulators();
  }
  @Parameterized.Parameter() public String name;
  @Parameterized.Parameter(1) public PopulatorFactory<KEY,VALUE> populatorFactory;
  @Parameterized.Parameter(2) public ValueType[] supportedTypes;
  @Parameterized.Parameter(3) public IndexLayoutFactory<KEY,VALUE> indexLayoutFactory;
  private static final StoreIndexDescriptor nonUniqueDescriptor=TestIndexDescriptorFactory.forLabel(42,666).withId(0);
  @Override NativeIndexPopulator<KEY,VALUE> createPopulator() throws IOException {
    return populatorFactory.create(pageCache,fs,getIndexFile(),layout,monitor,indexDescriptor);
  }
  @Override ValueCreatorUtil<KEY,VALUE> createValueCreatorUtil(){
    return new ValueCreatorUtil<>(nonUniqueDescriptor,supportedTypes,ValueCreatorUtil.FRACTION_DUPLICATE_NON_UNIQUE);
  }
  @Override IndexLayout<KEY,VALUE> createLayout(){
    return indexLayoutFactory.create();
  }
}
