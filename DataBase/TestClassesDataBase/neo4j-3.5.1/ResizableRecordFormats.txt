private class ResizableRecordFormats implements RecordFormats {
  private int dynamicRecordHeaderSize;
  ResizableRecordFormats(  int dynamicRecordHeaderSize){
    this.dynamicRecordHeaderSize=dynamicRecordHeaderSize;
  }
  @Override public String storeVersion(){
    return null;
  }
  @Override public String introductionVersion(){
    return null;
  }
  @Override public int generation(){
    return 0;
  }
  @Override public RecordFormat<NodeRecord> node(){
    return null;
  }
  @Override public RecordFormat<RelationshipGroupRecord> relationshipGroup(){
    return null;
  }
  @Override public RecordFormat<RelationshipRecord> relationship(){
    return null;
  }
  @Override public RecordFormat<PropertyRecord> property(){
    return null;
  }
  @Override public RecordFormat<LabelTokenRecord> labelToken(){
    return null;
  }
  @Override public RecordFormat<PropertyKeyTokenRecord> propertyKeyToken(){
    return null;
  }
  @Override public RecordFormat<RelationshipTypeTokenRecord> relationshipTypeToken(){
    return null;
  }
  @Override public RecordFormat<DynamicRecord> dynamic(){
    return new ResizableRecordFormat(dynamicRecordHeaderSize);
  }
  @Override public RecordFormat<MetaDataRecord> metaData(){
    return null;
  }
  @Override public Capability[] capabilities(){
    return new Capability[0];
  }
  @Override public boolean hasCapability(  Capability capability){
    return false;
  }
  @Override public FormatFamily getFormatFamily(){
    return StandardFormatFamily.INSTANCE;
  }
  @Override public boolean hasCompatibleCapabilities(  RecordFormats other,  CapabilityType type){
    return false;
  }
  @Override public String name(){
    return getClass().getName();
  }
}
