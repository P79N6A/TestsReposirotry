class SubProcessTest {
  private static final String MESSAGE="message";
  @Test void canInvokeSubprocessMethod() throws Exception {
    Callable<String> subprocess=new TestingProcess().start(MESSAGE);
    try {
      assertEquals(MESSAGE,subprocess.call());
    }
  finally {
      SubProcess.stop(subprocess);
    }
  }
@SuppressWarnings("serial") private static class TestingProcess extends SubProcess<Callable<String>,String> implements Callable<String> {
    private String message;
    private transient volatile boolean started;
    @Override protected void startup(    String parameter){
      message=parameter;
      started=true;
    }
    @Override public String call() throws Exception {
      while (!started) {
        Thread.sleep(1);
      }
      return message;
    }
  }
}
