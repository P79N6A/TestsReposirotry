class KernelTransactionMonitorSchedulerTest {
  private final JobScheduler scheduler=mock(JobScheduler.class);
  private final KernelTransactionMonitor transactionTimeoutMonitor=mock(KernelTransactionMonitor.class);
  @Test void scheduleRecurringMonitorJobIfConfigured(){
    KernelTransactionMonitorScheduler transactionMonitorScheduler=createMonitorScheduler(1);
    transactionMonitorScheduler.start();
    verify(scheduler).scheduleRecurring(Group.TRANSACTION_TIMEOUT_MONITOR,transactionTimeoutMonitor,1,TimeUnit.MILLISECONDS);
  }
  @Test void doNotScheduleMonitorJobIfDisabled(){
    KernelTransactionMonitorScheduler transactionMonitorScheduler=createMonitorScheduler(0);
    transactionMonitorScheduler.start();
    verifyZeroInteractions(scheduler);
  }
  private KernelTransactionMonitorScheduler createMonitorScheduler(  long checkInterval){
    return new KernelTransactionMonitorScheduler(transactionTimeoutMonitor,scheduler,checkInterval);
  }
}
