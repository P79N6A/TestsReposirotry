class EditionLocksFactoriesTest {
  @Test void createLocksForAllResourceTypes(){
    LocksFactory lockFactory=mock(LocksFactory.class);
    Config config=Config.defaults();
    Clock clock=Clocks.systemClock();
    createLockManager(lockFactory,config,clock);
    verify(lockFactory).newInstance(eq(config),eq(clock),eq(ResourceTypes.values()));
  }
  @Test void createCommunityLocksFactoryWhenNotConfigured(){
    Config config=Config.defaults();
    LocksFactory lockFactory=createLockFactory(config,NullLogService.getInstance());
    assertThat(lockFactory,instanceOf(CommunityLocksFactory.class));
  }
  @Test void createCommunityLocksFactoryWhenSpecified(){
    Config config=Config.defaults(GraphDatabaseSettings.lock_manager,"community");
    LocksFactory lockFactory=createLockFactory(config,NullLogService.getInstance());
    assertThat(lockFactory,instanceOf(CommunityLocksFactory.class));
  }
  @Test void failToCreateWhenConfiguredFactoryNotFound(){
    Config config=Config.defaults(GraphDatabaseSettings.lock_manager,"notFoundManager");
    IllegalArgumentException exception=assertThrows(IllegalArgumentException.class,() -> createLockFactory(config,NullLogService.getInstance()));
    assertEquals("No lock manager found with the name 'notFoundManager'.",exception.getMessage());
  }
}
