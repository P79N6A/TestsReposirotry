private class Repository {
  private final Description description;
  private int i;
  private final List<TaskThread> threads=new ArrayList<>();
  Repository(  Description description){
    this.description=description;
  }
  synchronized TaskThread createThread(  String name,  Task[] tasks){
    TaskThread thread=new TaskThread(nextName(name),tasks);
    threads.add(thread);
    thread.start();
    return thread;
  }
  private String nextName(  String name){
    return description.getMethodName() + "-" + (++i)+ (name == null ? "" : (":" + name));
  }
  void completeAll(  List<Throwable> failures){
    for (    TaskThread thread : threads) {
      try {
        thread.complete(failures,timeout,unit);
      }
 catch (      InterruptedException interrupted) {
        failures.add(interrupted);
      }
    }
  }
}
