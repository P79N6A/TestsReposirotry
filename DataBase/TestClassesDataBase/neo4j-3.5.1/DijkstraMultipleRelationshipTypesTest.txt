public class DijkstraMultipleRelationshipTypesTest extends Neo4jAlgoTestCase {
  protected Dijkstra<Double> getDijkstra(  String startNode,  String endNode,  RelationshipType... relTypes){
    return new Dijkstra<>(0.0,graph.getNode(startNode),graph.getNode(endNode),(relationship,direction) -> 1.0,new DoubleAdder(),Double::compareTo,Direction.BOTH,relTypes);
  }
  @Test public void testRun(){
    graph.setCurrentRelType(MyRelTypes.R1);
    graph.makeEdgeChain("a,b,c,d,e");
    graph.setCurrentRelType(MyRelTypes.R2);
    graph.makeEdges("a,c");
    graph.setCurrentRelType(MyRelTypes.R3);
    graph.makeEdges("c,e");
    Dijkstra<Double> dijkstra;
    dijkstra=getDijkstra("a","e",MyRelTypes.R1);
    assertEquals(4.0,dijkstra.getCost(),0.0);
    dijkstra=getDijkstra("a","e",MyRelTypes.R1,MyRelTypes.R2);
    assertEquals(3.0,dijkstra.getCost(),0.0);
    dijkstra=getDijkstra("a","e",MyRelTypes.R1,MyRelTypes.R3);
    assertEquals(3.0,dijkstra.getCost(),0.0);
    dijkstra=getDijkstra("a","e",MyRelTypes.R1,MyRelTypes.R2,MyRelTypes.R3);
    assertEquals(2.0,dijkstra.getCost(),0.0);
  }
}
