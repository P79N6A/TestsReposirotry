private static class Labels {
  private final int labelId;
  private final List<Pair<LabelScanKey,LabelScanValue>> entries;
  Labels(  int labelId,  List<Pair<LabelScanKey,LabelScanValue>> entries){
    this.labelId=labelId;
    this.entries=entries;
  }
  RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor(){
    return new RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException>(){
      int cursor=-1;
      @Override public Hit<LabelScanKey,LabelScanValue> get(){
        assert cursor >= 0;
        Pair<LabelScanKey,LabelScanValue> entry=entries.get(cursor);
        return new MutableHit<>(entry.first(),entry.other());
      }
      @Override public boolean next(){
        if (cursor + 1 >= entries.size()) {
          return false;
        }
        cursor++;
        return true;
      }
      @Override public void close(){
      }
    }
;
  }
}
