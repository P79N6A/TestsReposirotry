public class LabelScanValueIndexProgressorTest {
  @Test public void shouldCloseExhaustedCursors() throws Exception {
    RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor=mock(RawCursor.class);
    when(cursor.next()).thenReturn(false);
    Collection<RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException>> toRemoveFrom=new HashSet<>();
    LabelScanValueIndexProgressor iterator=new LabelScanValueIndexProgressor(cursor,toRemoveFrom,mock(IndexProgressor.NodeLabelClient.class));
    verify(cursor,never()).close();
    exhaust(iterator);
    verify(cursor,times(1)).close();
    iterator.next();
    verify(cursor,times(1)).close();
    assertTrue(toRemoveFrom.isEmpty());
  }
  private void exhaust(  LabelScanValueIndexProgressor pro){
    while (pro.next()) {
    }
  }
}
