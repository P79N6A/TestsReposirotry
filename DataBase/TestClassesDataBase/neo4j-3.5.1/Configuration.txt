public class Configuration extends ExternalResource {
  public static final String DEFAULT=null;
  private final Map<String,String> configuration=new HashMap<>();
  private final Map<String,String> sysProperties=new HashMap<>();
  public Config config(  LoadableConfig settingsClasses){
    return Config.builder().withSettings(configuration).withConfigClasses(Collections.singletonList(settingsClasses)).build();
  }
  public Configuration with(  Setting<?> setting,  String value){
    String key=setting.name();
    if (value == null) {
      configuration.remove(key);
    }
 else {
      configuration.put(key,value);
    }
    return this;
  }
  public Configuration withSystemProperty(  String key,  String value){
    value=sysProperties.put(key,updateSystemProperty(key,value));
    if (value != null) {
      sysProperties.remove(key);
      updateSystemProperty(key,value);
      throw new IllegalArgumentException("Cannot update '" + key + "' more than once.");
    }
    return this;
  }
  @Override protected void after(){
    for (    Map.Entry<String,String> entry : sysProperties.entrySet()) {
      updateSystemProperty(entry.getKey(),entry.getValue());
    }
  }
  private static String updateSystemProperty(  String key,  String value){
    if (value == null) {
      return System.clearProperty(key);
    }
 else {
      return System.setProperty(key,value);
    }
  }
}
