class IndexSpecificSpaceFillingCurveSettingsCacheTest {
  private final ConfiguredSpaceFillingCurveSettingsCache globalSettings=new ConfiguredSpaceFillingCurveSettingsCache(Config.defaults());
  @Test void shouldHaveInitialIndexSpecificSetting(){
    Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> initialSettings=new HashMap<>();
    initialSettings.put(WGS84,globalSettings.forCRS(WGS84));
    initialSettings.put(Cartesian,globalSettings.forCRS(Cartesian));
    IndexSpecificSpaceFillingCurveSettingsCache indexSettings=new IndexSpecificSpaceFillingCurveSettingsCache(globalSettings,initialSettings);
    ToMapSettingVisitor visitor=new ToMapSettingVisitor();
    indexSettings.visitIndexSpecificSettings(visitor);
    assertEquals(initialSettings,visitor.map);
  }
  @Test void shouldHaveInitialIndexSpecificSettingsPlusRequestedOnes(){
    Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> initialSettings=new HashMap<>();
    initialSettings.put(WGS84,globalSettings.forCRS(WGS84));
    initialSettings.put(Cartesian,globalSettings.forCRS(Cartesian));
    IndexSpecificSpaceFillingCurveSettingsCache indexSettings=new IndexSpecificSpaceFillingCurveSettingsCache(globalSettings,initialSettings);
    indexSettings.forCrs(Cartesian_3D,true);
    ToMapSettingVisitor visitor=new ToMapSettingVisitor();
    indexSettings.visitIndexSpecificSettings(visitor);
    Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> expectedSettings=new HashMap<>(initialSettings);
    assertNull(expectedSettings.put(Cartesian_3D,globalSettings.forCRS(Cartesian_3D)));
    assertEquals(expectedSettings,visitor.map);
  }
  @Test void shouldNotCreateIndexSpecificSettingForReadRequest(){
    Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> initialSettings=new HashMap<>();
    initialSettings.put(WGS84,globalSettings.forCRS(WGS84));
    initialSettings.put(Cartesian,globalSettings.forCRS(Cartesian));
    IndexSpecificSpaceFillingCurveSettingsCache indexSettings=new IndexSpecificSpaceFillingCurveSettingsCache(globalSettings,initialSettings);
    indexSettings.forCrs(Cartesian_3D,false);
    ToMapSettingVisitor visitor=new ToMapSettingVisitor();
    indexSettings.visitIndexSpecificSettings(visitor);
    assertEquals(initialSettings,visitor.map);
  }
}
