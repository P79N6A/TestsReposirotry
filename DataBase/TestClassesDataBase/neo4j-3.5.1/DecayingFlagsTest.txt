class DecayingFlagsTest {
  @Test void shouldTrackToggle(){
    DecayingFlags.Key myFeature=new DecayingFlags.Key(1);
    DecayingFlags set=new DecayingFlags(1);
    set.flag(myFeature);
    assertEquals("4000",set.asHex());
  }
  @Test void shouldTrackMultipleFlags(){
    DecayingFlags.Key featureA=new DecayingFlags.Key(1);
    DecayingFlags.Key featureB=new DecayingFlags.Key(3);
    DecayingFlags set=new DecayingFlags(2);
    set.flag(featureA);
    set.flag(featureA);
    set.flag(featureB);
    assertEquals("5000",set.asHex());
  }
  @Test void toggleShouldDecay(){
    DecayingFlags.Key featureA=new DecayingFlags.Key(1);
    DecayingFlags.Key featureB=new DecayingFlags.Key(3);
    DecayingFlags set=new DecayingFlags(2);
    set.flag(featureA);
    set.flag(featureA);
    set.flag(featureB);
    set.sweep();
    assertEquals("4000",set.asHex());
    set.sweep();
    assertEquals("0000",set.asHex());
  }
  @Test void resetFlagShouldRecoverIfToggledAgain(){
    DecayingFlags.Key featureA=new DecayingFlags.Key(9);
    DecayingFlags set=new DecayingFlags(2);
    set.flag(featureA);
    set.sweep();
    assertEquals("0000",set.asHex());
    set.flag(featureA);
    assertEquals("0040",set.asHex());
  }
}
