public class GetIndexRootIT extends AbstractRestFunctionalTestBase {
  private static FunctionalTestHelper functionalTestHelper;
  @BeforeClass public static void setupServer(){
    functionalTestHelper=new FunctionalTestHelper(server());
  }
  /** 
 * /db/data/index is not itself a resource
 */
  @Test public void shouldRespondWith404ForNonResourceIndexPath(){
    JaxRsResponse response=RestRequest.req().get(functionalTestHelper.indexUri());
    assertEquals(404,response.getStatus());
    response.close();
  }
  /** 
 * /db/data/index/node should be a resource with no content
 * @throws Exception
 */
  @Test public void shouldRespondWithNodeIndexes() throws Exception {
    JaxRsResponse response=RestRequest.req().get(functionalTestHelper.nodeIndexUri());
    assertResponseContainsNoIndexesOtherThanAutoIndexes(response);
    response.close();
  }
  private void assertResponseContainsNoIndexesOtherThanAutoIndexes(  JaxRsResponse response) throws JsonParseException {
switch (response.getStatus()) {
case 204:
      return;
case 200:
    assertEquals(0,functionalTestHelper.removeAnyAutoIndex(jsonToMap(response.getEntity())).size());
  break;
default :
fail("Invalid response code " + response.getStatus());
}
}
/** 
 * /db/data/index/relationship should be a resource with no content
 * @throws Exception
 */
@Test public void shouldRespondWithRelationshipIndexes() throws Exception {
JaxRsResponse response=RestRequest.req().get(functionalTestHelper.relationshipIndexUri());
assertResponseContainsNoIndexesOtherThanAutoIndexes(response);
response.close();
}
}
