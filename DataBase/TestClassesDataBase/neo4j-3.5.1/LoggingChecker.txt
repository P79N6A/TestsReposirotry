private static class LoggingChecker<REC extends AbstractBaseRecord,REP extends ConsistencyReport> implements OwningRecordCheck<REC,REP> {
  private final RecordCheck<REC,REP> checker;
  private final InvocationLog log;
  LoggingChecker(  RecordCheck<REC,REP> checker,  InvocationLog log){
    this.checker=checker;
    this.log=log;
  }
  @Override public void check(  REC record,  CheckerEngine<REC,REP> engine,  RecordAccess records){
    checker.check(record,engine,new ComparativeLogging(records,log));
  }
  @SuppressWarnings("unchecked") @Override public ComparativeRecordChecker<REC,PrimitiveRecord,REP> ownerCheck(){
    if (checker instanceof OwningRecordCheck) {
      return ((OwningRecordCheck)checker).ownerCheck();
    }
    throw new UnsupportedOperationException();
  }
}
