static class CapturingEventHandler<T> implements TransactionEventHandler<T> {
  private final Supplier<T> stateSource;
  boolean beforeCommitCalled;
  boolean afterCommitCalled;
  T afterCommitState;
  boolean afterRollbackCalled;
  T afterRollbackState;
  CapturingEventHandler(  Supplier<T> stateSource){
    this.stateSource=stateSource;
  }
  @Override public T beforeCommit(  TransactionData data){
    beforeCommitCalled=true;
    return stateSource.get();
  }
  @Override public void afterCommit(  TransactionData data,  T state){
    afterCommitCalled=true;
    afterCommitState=state;
  }
  @Override public void afterRollback(  TransactionData data,  T state){
    afterRollbackCalled=true;
    afterRollbackState=state;
  }
}
