public class IndexPopulationFailedKernelExceptionTest {
  private static final TokenNameLookup TOKEN_NAME_LOOKUP=SchemaUtil.idTokenNameLookup;
  @Test public void shouldHandleMultiplePropertiesInConstructor1(){
    LabelSchemaDescriptor descriptor=SchemaDescriptorFactory.forLabel(0,42,43,44);
    IndexPopulationFailedKernelException index=new IndexPopulationFailedKernelException(descriptor.userDescription(TOKEN_NAME_LOOKUP),new RuntimeException());
    assertThat(index.getUserMessage(TOKEN_NAME_LOOKUP),equalTo("Failed to populate index :label[0](property[42], property[43], property[44])"));
  }
  @Test public void shouldHandleMultiplePropertiesInConstructor2(){
    LabelSchemaDescriptor descriptor=SchemaDescriptorFactory.forLabel(0,42,43,44);
    IndexPopulationFailedKernelException index=new IndexPopulationFailedKernelException(descriptor.userDescription(TOKEN_NAME_LOOKUP),"an act of pure evil occurred");
    assertThat(index.getUserMessage(TOKEN_NAME_LOOKUP),equalTo("Failed to populate index :label[0](property[42], property[43], property[44]), due to an act of pure evil occurred"));
  }
}
