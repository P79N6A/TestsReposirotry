public class RFC1123Test {
  private final Calendar calendar=Calendar.getInstance(RFC1123.GMT,Locale.US);
  @Test public void shouldParseRFC1123() throws Exception {
    String input="Mon, 15 Aug 2005 15:52:01 +0000";
    Date result=RFC1123.parseTimestamp(input);
    calendar.setTime(result);
    assertEquals(Calendar.MONDAY,calendar.get(Calendar.DAY_OF_WEEK));
    assertEquals(15,calendar.get(Calendar.DAY_OF_MONTH));
    assertEquals(Calendar.AUGUST,calendar.get(Calendar.MONTH));
    assertEquals(2005,calendar.get(Calendar.YEAR));
    assertEquals(15,calendar.get(Calendar.HOUR_OF_DAY));
    assertEquals(52,calendar.get(Calendar.MINUTE));
    assertEquals(1,calendar.get(Calendar.SECOND));
  }
  @Test public void shouldFormatRFC1123() throws Exception {
    String input="Mon, 15 Aug 2005 15:52:01 +0000";
    String output=RFC1123.formatDate(RFC1123.parseTimestamp(input));
    assertEquals(input,output);
  }
  @Test public void shouldReturnSameInstanceInSameThread(){
    RFC1123 instance=RFC1123.instance();
    RFC1123 instance2=RFC1123.instance();
    assertSame("Expected to get same instance from second call to RFC1123.instance() in same thread",instance,instance2);
  }
}
