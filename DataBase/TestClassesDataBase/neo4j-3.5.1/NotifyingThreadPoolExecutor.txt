private class NotifyingThreadPoolExecutor extends ThreadPoolExecutor {
  private NotifyingThreadPoolExecutor(  int corePoolSize,  int maxPoolSize,  Duration keepAlive,  BlockingQueue<Runnable> workQueue,  ThreadFactory threadFactory,  RejectedExecutionHandler rejectionHandler){
    super(corePoolSize,maxPoolSize,keepAlive.toMillis(),MILLISECONDS,workQueue,threadFactory,rejectionHandler);
  }
  @Override protected void beforeExecute(  Thread t,  Runnable r){
    try {
      beforeExecuteEvent.await();
      super.beforeExecute(t,r);
      beforeExecuteBarrier.countDown();
    }
 catch (    Throwable ex) {
      throw new RuntimeException(ex);
    }
  }
  @Override protected void afterExecute(  Runnable r,  Throwable t){
    try {
      afterExecuteEvent.await();
      super.afterExecute(r,t);
      afterExecuteBarrier.countDown();
    }
 catch (    Throwable ex) {
      throw new RuntimeException(ex);
    }
  }
}
