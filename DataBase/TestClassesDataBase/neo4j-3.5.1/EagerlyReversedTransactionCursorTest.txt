public class EagerlyReversedTransactionCursorTest {
  @Test public void shouldReverseTransactionsFromSource() throws Exception {
    CommittedTransactionRepresentation tx1=mock(CommittedTransactionRepresentation.class);
    CommittedTransactionRepresentation tx2=mock(CommittedTransactionRepresentation.class);
    CommittedTransactionRepresentation tx3=mock(CommittedTransactionRepresentation.class);
    TransactionCursor source=given(tx1,tx2,tx3);
    EagerlyReversedTransactionCursor cursor=new EagerlyReversedTransactionCursor(source);
    CommittedTransactionRepresentation[] reversed=exhaust(cursor);
    assertArrayEquals(array(tx3,tx2,tx1),reversed);
  }
  @Test public void shouldHandleEmptySource() throws Exception {
    TransactionCursor source=given();
    EagerlyReversedTransactionCursor cursor=new EagerlyReversedTransactionCursor(source);
    CommittedTransactionRepresentation[] reversed=exhaust(cursor);
    assertEquals(0,reversed.length);
  }
}
