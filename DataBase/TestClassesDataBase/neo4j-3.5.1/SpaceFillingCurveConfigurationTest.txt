class SpaceFillingCurveConfigurationTest {
  @Test void shouldHandleMaxDepthWithEmptySearchArea(){
    SpaceFillingCurveConfiguration standardConfiguration=new StandardConfiguration();
    SpaceFillingCurveConfiguration partialOverlapConf=new PartialOverlapConfiguration();
    Envelope search=new Envelope(-180,-180,-90,90);
    Envelope range=new Envelope(-180,180,-90,90);
    int maxLevel=20;
    assertThat(partialOverlapConf.maxDepth(search,range,2,30),lessThan(maxLevel));
    assertThat(standardConfiguration.maxDepth(search,range,2,30),lessThan(maxLevel));
  }
  @Test void shouldReturnMaxDepth1WithWholeSearchArea(){
    SpaceFillingCurveConfiguration standardConfiguration=new StandardConfiguration();
    SpaceFillingCurveConfiguration partialOverlapConf=new PartialOverlapConfiguration();
    Envelope range=new Envelope(-180,180,-90,90);
    assertThat(partialOverlapConf.maxDepth(range,range,2,30),equalTo(1));
    assertThat(standardConfiguration.maxDepth(range,range,2,30),equalTo(1));
  }
  @Test void shouldReturnMaxDepth2WithQuarterOfWholeArea(){
    SpaceFillingCurveConfiguration standardConfiguration=new StandardConfiguration();
    SpaceFillingCurveConfiguration partialOverlapConf=new PartialOverlapConfiguration();
    Envelope range=new Envelope(-180,180,-90,90);
    Envelope search=new Envelope(0,180,0,90);
    assertThat(partialOverlapConf.maxDepth(search,range,2,30),equalTo(2));
    assertThat(standardConfiguration.maxDepth(search,range,2,30),equalTo(2));
  }
  @Test void shouldReturnAppropriateDepth(){
    final int maxLevel=30;
    for (int i=0; i < maxLevel; i++) {
      SpaceFillingCurveConfiguration standardConfiguration=new StandardConfiguration();
      SpaceFillingCurveConfiguration partialOverlapConf=new PartialOverlapConfiguration();
      Envelope range=new Envelope(0,1,0,1);
      Envelope search=new Envelope(0,Math.pow(2,-i),0,Math.pow(2,-i));
      assertThat(partialOverlapConf.maxDepth(search,range,2,maxLevel),equalTo(i + 1));
      assertThat(standardConfiguration.maxDepth(search,range,2,maxLevel),equalTo(i + 1));
    }
  }
}
