public class ServerCommandLineArgsTest {
  @Test public void shouldPickUpSpecifiedConfigFile(){
    File dir=new File("/some-dir").getAbsoluteFile();
    Optional<File> expectedFile=Optional.of(new File(dir,Config.DEFAULT_CONFIG_FILE_NAME));
    assertEquals(expectedFile,parse("--config-dir",dir.toString()).configFile());
    assertEquals(expectedFile,parse("--config-dir=" + dir).configFile());
  }
  @Test public void shouldResolveConfigFileRelativeToWorkingDirectory(){
    Optional<File> expectedFile=Optional.of(new File("some-dir",Config.DEFAULT_CONFIG_FILE_NAME));
    assertEquals(expectedFile,parse("--config-dir","some-dir").configFile());
    assertEquals(expectedFile,parse("--config-dir=some-dir").configFile());
  }
  @Test public void shouldReturnNullIfConfigDirIsNotSpecified(){
    assertEquals(Optional.empty(),parse().configFile());
  }
  @Test public void shouldPickUpSpecifiedHomeDir(){
    File homeDir=new File("/some/absolute/homedir").getAbsoluteFile();
    assertEquals(homeDir,parse("--home-dir",homeDir.toString()).homeDir());
    assertEquals(homeDir,parse("--home-dir=" + homeDir.toString()).homeDir());
  }
  @Test public void shouldReturnNullIfHomeDirIsNotSpecified(){
    assertNull(parse().homeDir());
  }
  @Test public void shouldPickUpOverriddenConfigurationParameters(){
    String[] args=array("-c","myoption=myvalue");
    ServerCommandLineArgs parsed=ServerCommandLineArgs.parse(args);
    assertEquals(stringMap("myoption","myvalue"),parsed.configOverrides());
  }
  @Test public void shouldPickUpOverriddenBooleanConfigurationParameters(){
    String[] args=array("-c","myoptionenabled");
    ServerCommandLineArgs parsed=ServerCommandLineArgs.parse(args);
    assertEquals(stringMap("myoptionenabled",Boolean.TRUE.toString()),parsed.configOverrides());
  }
  @Test public void shouldPickUpMultipleOverriddenConfigurationParameters(){
    String[] args=array("-c","my_first_option=first","-c","myoptionenabled","-c","my_second_option=second");
    ServerCommandLineArgs parsed=ServerCommandLineArgs.parse(args);
    assertEquals(stringMap("my_first_option","first","myoptionenabled",Boolean.TRUE.toString(),"my_second_option","second"),parsed.configOverrides());
  }
  private ServerCommandLineArgs parse(  String... args){
    return ServerCommandLineArgs.parse(args);
  }
}
