private static class CountDownReaper implements Consumer<Long> {
  private volatile CountDownLatch reaperLatch;
  CountDownReaper(){
    reset();
  }
  public void reset(){
    reaperLatch=new CountDownLatch(1);
  }
  @Override public void accept(  Long aLong){
    reaperLatch.countDown();
  }
  public void await(  String message,  long timeout,  TimeUnit timeUnit) throws InterruptedException {
    if (!reaperLatch.await(timeout,timeUnit)) {
      throw new IllegalStateException(message);
    }
  }
}
