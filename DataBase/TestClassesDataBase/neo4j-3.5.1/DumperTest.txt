@ExtendWith(TestDirectoryExtension.class) class DumperTest {
  @Inject private TestDirectory testDirectory;
  @Test void shouldGiveAClearErrorIfTheArchiveAlreadyExists() throws IOException {
    Path directory=testDirectory.directory("a-directory").toPath();
    Path archive=testDirectory.file("the-archive.dump").toPath();
    Files.write(archive,new byte[0]);
    FileAlreadyExistsException exception=assertThrows(FileAlreadyExistsException.class,() -> new Dumper().dump(directory,directory,archive,Predicates.alwaysFalse()));
    assertEquals(archive.toString(),exception.getMessage());
  }
  @Test void shouldGiveAClearErrorMessageIfTheDirectoryDoesntExist(){
    Path directory=testDirectory.file("a-directory").toPath();
    Path archive=testDirectory.file("the-archive.dump").toPath();
    NoSuchFileException exception=assertThrows(NoSuchFileException.class,() -> new Dumper().dump(directory,directory,archive,Predicates.alwaysFalse()));
    assertEquals(directory.toString(),exception.getMessage());
  }
  @Test void shouldGiveAClearErrorMessageIfTheArchivesParentDirectoryDoesntExist(){
    Path directory=testDirectory.directory("a-directory").toPath();
    Path archive=testDirectory.file("subdir/the-archive.dump").toPath();
    NoSuchFileException exception=assertThrows(NoSuchFileException.class,() -> new Dumper().dump(directory,directory,archive,Predicates.alwaysFalse()));
    assertEquals(archive.getParent().toString(),exception.getMessage());
  }
  @Test void shouldGiveAClearErrorMessageIfTheArchivesParentDirectoryIsAFile() throws IOException {
    Path directory=testDirectory.directory("a-directory").toPath();
    Path archive=testDirectory.file("subdir/the-archive.dump").toPath();
    Files.write(archive.getParent(),new byte[0]);
    FileSystemException exception=assertThrows(FileSystemException.class,() -> new Dumper().dump(directory,directory,archive,Predicates.alwaysFalse()));
    assertEquals(archive.getParent().toString() + ": Not a directory",exception.getMessage());
  }
  @Test @DisabledOnOs(OS.WINDOWS) void shouldGiveAClearErrorMessageIfTheArchivesParentDirectoryIsNotWritable() throws IOException {
    Path directory=testDirectory.directory("a-directory").toPath();
    Path archive=testDirectory.file("subdir/the-archive.dump").toPath();
    Files.createDirectories(archive.getParent());
    try (Closeable ignored=TestUtils.withPermissions(archive.getParent(),emptySet())){
      AccessDeniedException exception=assertThrows(AccessDeniedException.class,() -> new Dumper().dump(directory,directory,archive,Predicates.alwaysFalse()));
      assertEquals(archive.getParent().toString(),exception.getMessage());
    }
   }
}
