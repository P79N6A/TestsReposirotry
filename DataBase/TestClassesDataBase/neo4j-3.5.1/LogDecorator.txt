private static class LogDecorator implements CheckDecorator {
  private final InvocationLog log;
  LogDecorator(  InvocationLog log){
    this.log=log;
  }
  @Override public void prepare(){
  }
  <REC extends AbstractBaseRecord,REP extends ConsistencyReport>OwningRecordCheck<REC,REP> logging(  RecordCheck<REC,REP> checker){
    return new LoggingChecker<>(checker,log);
  }
  @Override public OwningRecordCheck<NeoStoreRecord,NeoStoreConsistencyReport> decorateNeoStoreChecker(  OwningRecordCheck<NeoStoreRecord,NeoStoreConsistencyReport> checker){
    return logging(checker);
  }
  @Override public OwningRecordCheck<NodeRecord,NodeConsistencyReport> decorateNodeChecker(  OwningRecordCheck<NodeRecord,NodeConsistencyReport> checker){
    return logging(checker);
  }
  @Override public OwningRecordCheck<RelationshipRecord,RelationshipConsistencyReport> decorateRelationshipChecker(  OwningRecordCheck<RelationshipRecord,RelationshipConsistencyReport> checker){
    return logging(checker);
  }
  @Override public RecordCheck<PropertyRecord,PropertyConsistencyReport> decoratePropertyChecker(  RecordCheck<PropertyRecord,PropertyConsistencyReport> checker){
    return logging(checker);
  }
  @Override public RecordCheck<PropertyKeyTokenRecord,PropertyKeyTokenConsistencyReport> decoratePropertyKeyTokenChecker(  RecordCheck<PropertyKeyTokenRecord,PropertyKeyTokenConsistencyReport> checker){
    return logging(checker);
  }
  @Override public RecordCheck<RelationshipTypeTokenRecord,RelationshipTypeConsistencyReport> decorateRelationshipTypeTokenChecker(  RecordCheck<RelationshipTypeTokenRecord,RelationshipTypeConsistencyReport> checker){
    return logging(checker);
  }
  @Override public RecordCheck<LabelTokenRecord,LabelTokenConsistencyReport> decorateLabelTokenChecker(  RecordCheck<LabelTokenRecord,LabelTokenConsistencyReport> checker){
    return logging(checker);
  }
  @Override public RecordCheck<RelationshipGroupRecord,RelationshipGroupConsistencyReport> decorateRelationshipGroupChecker(  RecordCheck<RelationshipGroupRecord,RelationshipGroupConsistencyReport> checker){
    return logging(checker);
  }
}
