public class SystemTimeZoneLoggingIT {
  @Rule public TestDirectory testDirectory=TestDirectory.testDirectory();
  @Test public void databaseLogsUseSystemTimeZoneIfConfigure() throws IOException {
    TimeZone defaultTimeZone=TimeZone.getDefault();
    try {
      checkStartLogLine(5,"+0500");
      checkStartLogLine(-7,"-0700");
    }
  finally {
      TimeZone.setDefault(defaultTimeZone);
    }
  }
  private void checkStartLogLine(  int hoursShift,  String timeZoneSuffix) throws IOException {
    TimeZone.setDefault(TimeZone.getTimeZone(ZoneOffset.ofHours(hoursShift)));
    File storeDir=testDirectory.storeDir(String.valueOf(hoursShift));
    File databaseDirectory=testDirectory.databaseLayout(storeDir).databaseDirectory();
    GraphDatabaseService database=new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(databaseDirectory).setConfig(GraphDatabaseSettings.db_timezone,LogTimeZone.SYSTEM.name()).newGraphDatabase();
    database.shutdown();
    Path databasePath=storeDir.toPath();
    Path debugLog=Paths.get("logs","debug.log");
    String debugLogLine=getLogLine(databasePath,debugLog);
    assertTrue(debugLogLine,debugLogLine.contains(timeZoneSuffix));
  }
  private static String getLogLine(  Path databasePath,  Path logFilePath) throws IOException {
    return Files.readAllLines(databasePath.resolve(logFilePath)).get(0);
  }
}
