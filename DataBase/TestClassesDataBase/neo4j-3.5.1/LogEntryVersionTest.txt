public class LogEntryVersionTest {
  @Rule public ExpectedException expect=ExpectedException.none();
  @Test public void shouldBeAbleToSelectAnyVersion(){
    for (    LogEntryVersion version : LogEntryVersion.values()) {
      byte code=version.byteCode();
      LogEntryVersion selectedVersion=LogEntryVersion.byVersion(code);
      assertEquals(version,selectedVersion);
    }
  }
  @Test public void shouldWarnAboutOldLogVersion(){
    expect.expect(UnsupportedLogVersionException.class);
    LogEntryVersion.byVersion((byte)-4);
  }
  @Test public void shouldWarnAboutNewerLogVersion(){
    expect.expect(UnsupportedLogVersionException.class);
    LogEntryVersion.byVersion((byte)-42);
  }
  @Test public void moreRecent(){
    assertTrue(LogEntryVersion.moreRecentVersionExists(LogEntryVersion.V2_3));
    assertTrue(LogEntryVersion.moreRecentVersionExists(LogEntryVersion.V3_0));
    assertTrue(LogEntryVersion.moreRecentVersionExists(LogEntryVersion.V2_3_5));
    assertTrue(LogEntryVersion.moreRecentVersionExists(LogEntryVersion.V3_0_2));
    assertFalse(LogEntryVersion.moreRecentVersionExists(LogEntryVersion.V3_0_10));
  }
}
