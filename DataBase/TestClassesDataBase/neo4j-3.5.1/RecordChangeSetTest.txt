public class RecordChangeSetTest {
  @Test public void shouldStartWithSetsInitializedAndEmpty(){
    RecordChangeSet changeSet=new RecordChangeSet(mock(Loaders.class));
    assertEquals(0,changeSet.getNodeRecords().changeSize());
    assertEquals(0,changeSet.getPropertyRecords().changeSize());
    assertEquals(0,changeSet.getRelRecords().changeSize());
    assertEquals(0,changeSet.getSchemaRuleChanges().changeSize());
    assertEquals(0,changeSet.getRelGroupRecords().changeSize());
  }
  @Test public void shouldClearStateOnClose(){
    NeoStores mockStore=mock(NeoStores.class);
    NodeStore store=mock(NodeStore.class);
    when(mockStore.getNodeStore()).thenReturn(store);
    RelationshipStore relationshipStore=mock(RelationshipStore.class);
    when(mockStore.getRelationshipStore()).thenReturn(relationshipStore);
    PropertyStore propertyStore=mock(PropertyStore.class);
    when(mockStore.getPropertyStore()).thenReturn(propertyStore);
    SchemaStore schemaStore=mock(SchemaStore.class);
    when(mockStore.getSchemaStore()).thenReturn(schemaStore);
    RelationshipGroupStore groupStore=mock(RelationshipGroupStore.class);
    when(mockStore.getRelationshipGroupStore()).thenReturn(groupStore);
    RecordChangeSet changeSet=new RecordChangeSet(new Loaders(mockStore));
    changeSet.getNodeRecords().create(1L,null).forChangingLinkage();
    changeSet.getPropertyRecords().create(1L,null).forChangingLinkage();
    changeSet.getRelRecords().create(1L,null).forChangingLinkage();
    changeSet.getSchemaRuleChanges().create(1L,null).forChangingLinkage();
    changeSet.getRelGroupRecords().create(1L,1).forChangingLinkage();
    changeSet.close();
    assertEquals(0,changeSet.getNodeRecords().changeSize());
    assertEquals(0,changeSet.getPropertyRecords().changeSize());
    assertEquals(0,changeSet.getRelRecords().changeSize());
    assertEquals(0,changeSet.getSchemaRuleChanges().changeSize());
    assertEquals(0,changeSet.getRelGroupRecords().changeSize());
  }
}
