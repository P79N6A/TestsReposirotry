private static class StringInputIdGenerator extends InputIdGenerator {
  private final String[] strings=new String[NODE_COUNT];
  @Override void reset(){
    Arrays.fill(strings,null);
  }
  @Override Object nextNodeId(  RandomValues random,  long item){
    byte[] randomBytes=random.nextByteArray(10,10).asObjectCopy();
    String result=UUID.nameUUIDFromBytes(randomBytes).toString();
    strings[toIntExact(item)]=result;
    return result;
  }
  @Override ExistingId randomExisting(  RandomValues random){
    int index=random.nextInt(strings.length);
    return new ExistingId(strings[index],index);
  }
  @Override Object miss(  RandomValues random,  Object id,  float chance){
    return random.nextFloat() < chance ? "_" + id : id;
  }
  @Override boolean isMiss(  Object id){
    return ((String)id).startsWith("_");
  }
}
