public class MetadataCollectorTest {
  private final BigEndianByteArrayBuffer key=new BigEndianByteArrayBuffer(new byte[4]);
  private final BigEndianByteArrayBuffer value=new BigEndianByteArrayBuffer(new byte[4]);
  @Test public void shouldComputePageCatalogue(){
    StubCollector collector=new StubCollector(4);
    collector.visit(key,value);
    collector.visit(key,value);
    key.putInt(0,24);
    collector.visit(key,value);
    key.putInt(0,62);
    collector.visit(key,value);
    key.putInt(0,78);
    collector.visit(key,value);
    key.putInt(0,84);
    collector.visit(key,value);
    key.putInt(0,96);
    collector.visit(key,value);
    assertArrayEquals(new byte[]{0,0,0,24,0,0,0,62,0,0,0,78,0,0,0,96},collector.pageCatalogue());
  }
  @Test public void shouldComputePageCatalogueOverThreePages(){
    StubCollector collector=new StubCollector(4);
    collector.visit(key,value);
    collector.visit(key,value);
    key.putInt(0,24);
    collector.visit(key,value);
    key.putInt(0,62);
    collector.visit(key,value);
    key.putInt(0,78);
    collector.visit(key,value);
    key.putInt(0,84);
    collector.visit(key,value);
    key.putInt(0,96);
    collector.visit(key,value);
    key.putInt(0,128);
    collector.visit(key,value);
    key.putInt(0,133);
    collector.visit(key,value);
    assertArrayEquals(new byte[]{0,0,0,24,0,0,0,62,0,0,0,78,0,0,0,(byte)128,0,0,0,(byte)133,0,0,0,(byte)133},collector.pageCatalogue());
  }
  @Test public void shouldComputePageCatalogueWhenHeaderCoversEntireFirstPage(){
    StubCollector collector=new StubCollector(4,"a","b","c");
    value.putInt(0,-1);
    collector.visit(key,value);
    collector.visit(key,value);
    collector.visit(key,value);
    collector.visit(key,value);
    key.putInt(0,16);
    collector.visit(key,value);
    key.putInt(0,32);
    collector.visit(key,value);
    assertArrayEquals(new byte[]{0,0,0,16,0,0,0,32},collector.pageCatalogue());
  }
  @Test public void shouldComputePageCatalogueWhenHeaderExceedsFirstPage(){
    StubCollector collector=new StubCollector(4,"a","b","c","d");
    value.putInt(0,-1);
    collector.visit(key,value);
    collector.visit(key,value);
    collector.visit(key,value);
    collector.visit(key,value);
    collector.visit(key,value);
    key.putInt(0,16);
    collector.visit(key,value);
    key.putInt(0,32);
    collector.visit(key,value);
    assertArrayEquals(new byte[]{0,0,0,16,0,0,0,32},collector.pageCatalogue());
  }
  @Test public void shouldComputeCatalogueWhenSingleDataEntryInPage(){
    StubCollector collector=new StubCollector(4,"a","b");
    value.putInt(0,-1);
    collector.visit(key,value);
    collector.visit(key,value);
    collector.visit(key,value);
    key.putInt(0,16);
    collector.visit(key,value);
    key.putInt(0,32);
    collector.visit(key,value);
    assertArrayEquals(new byte[]{0,0,0,16,0,0,0,16,0,0,0,32,0,0,0,32},collector.pageCatalogue());
  }
}
