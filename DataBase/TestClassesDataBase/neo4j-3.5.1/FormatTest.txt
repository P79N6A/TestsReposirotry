class FormatTest {
  @Test void shouldDisplayBytes(){
    String format=Format.bytes(123);
    assertTrue(format.contains(String.valueOf(123)));
    assertTrue(format.endsWith(" B"));
  }
  @Test void shouldDisplayKiloBytes(){
    String format=Format.bytes(1_234);
    assertTrue(format.startsWith("1"));
    assertTrue(format.endsWith(" kB"));
  }
  @Test void shouldDisplayMegaBytes(){
    String format=Format.bytes(1_234_567);
    assertTrue(format.startsWith("1"));
    assertTrue(format.endsWith(" MB"));
  }
  @Test void shouldDisplayGigaBytes(){
    String format=Format.bytes(1_234_567_890);
    assertTrue(format.startsWith("1"));
    assertTrue(format.endsWith(" GB"));
  }
  @Test void shouldDisplayPlainCount(){
    String format=Format.count(10);
    assertTrue(format.startsWith("10"));
  }
  @Test void shouldDisplayThousandCount(){
    String format=Format.count(2_000);
    assertTrue(format.startsWith("2"));
    assertTrue(format.endsWith("k"));
  }
  @Test void shouldDisplayMillionCount(){
    String format=Format.count(2_000_000);
    assertTrue(format.startsWith("2"));
    assertTrue(format.endsWith("M"));
  }
  @Test void shouldDisplayBillionCount(){
    String format=Format.count(2_000_000_000);
    assertTrue(format.startsWith("2"));
    assertTrue(format.endsWith("G"));
  }
  @Test void shouldDisplayTrillionCount(){
    String format=Format.count(4_000_000_000_000L);
    assertTrue(format.startsWith("4"));
    assertTrue(format.endsWith("T"));
  }
  @Test void displayDuration(){
    assertThat(duration(MINUTES.toMillis(1) + SECONDS.toMillis(2)),is("1m 2s"));
    assertThat(duration(42),is("42ms"));
    assertThat(duration(0),is("0ms"));
  }
}
