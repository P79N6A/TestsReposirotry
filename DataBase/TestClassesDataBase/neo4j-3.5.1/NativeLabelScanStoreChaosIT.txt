/** 
 * Tests functionality around missing or corrupted lucene label scan store index, and that the database should repair (i.e. rebuild) that automatically and just work.
 */
public class NativeLabelScanStoreChaosIT {
  private final DatabaseRule dbRule=new EmbeddedDatabaseRule();
  private final RandomRule randomRule=new RandomRule();
  @Rule public final RuleChain ruleChain=RuleChain.outerRule(randomRule).around(dbRule);
  @Test public void shouldRebuildDeletedLabelScanStoreOnStartup() throws Exception {
    Node node1=createLabeledNode(Labels.First);
    Node node2=createLabeledNode(Labels.First);
    Node node3=createLabeledNode(Labels.First);
    deleteNode(node2);
    dbRule.restartDatabase(deleteTheLabelScanStoreIndex());
    assertEquals(asSet(node1,node3),getAllNodesWithLabel(Labels.First));
  }
  @Test public void rebuildCorruptedLabelScanStoreToStartup() throws Exception {
    Node node=createLabeledNode(Labels.First);
    dbRule.restartDatabase(corruptTheLabelScanStoreIndex());
    assertEquals(asSet(node),getAllNodesWithLabel(Labels.First));
  }
  private static File storeFile(  DatabaseLayout databaseLayout){
    return databaseLayout.labelScanStore();
  }
  private DatabaseRule.RestartAction corruptTheLabelScanStoreIndex(){
    return (fs,directory) -> scrambleFile(storeFile(directory));
  }
  private DatabaseRule.RestartAction deleteTheLabelScanStoreIndex(){
    return (fs,directory) -> fs.deleteFile(storeFile(directory));
  }
  private Node createLabeledNode(  Label... labels){
    try (Transaction tx=dbRule.getGraphDatabaseAPI().beginTx()){
      Node node=dbRule.getGraphDatabaseAPI().createNode(labels);
      tx.success();
      return node;
    }
   }
  private Set<Node> getAllNodesWithLabel(  Label label){
    try (Transaction ignored=dbRule.getGraphDatabaseAPI().beginTx()){
      return asSet(dbRule.getGraphDatabaseAPI().findNodes(label));
    }
   }
  private void scrambleFile(  File file) throws IOException {
    LabelScanStoreTest.scrambleFile(randomRule.random(),file);
  }
  private void deleteNode(  Node node){
    try (Transaction tx=dbRule.getGraphDatabaseAPI().beginTx()){
      node.delete();
      tx.success();
    }
   }
  private enum Labels implements Label {  First,   Second,   Third}
}
