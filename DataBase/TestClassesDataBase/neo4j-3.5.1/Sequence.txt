/** 
 * To be frank, I don't understand the intricacies of how this works, but this is a cut-out version of the sequence generator that triggered the original bug. The gist is that it generates sequences of ids that "jump" to a much higher number every one hundred ids or so.
 */
private class Sequence {
  private static final int sizePerJump=100;
  private final AtomicLong nextId=new AtomicLong();
  private int leftToNextJump=sizePerJump / 2;
  private long highBits;
  public long next(){
    long result=tryNextId();
    if (--leftToNextJump == 0) {
      leftToNextJump=sizePerJump;
      nextId.set((0xFFFFFFFFL | (highBits++ << 32)) - sizePerJump / 2 + 1);
    }
    return result;
  }
  private long tryNextId(){
    long result=nextId.getAndIncrement();
    if (result == 0xFFFFFFFFL) {
      result=nextId.getAndIncrement();
      leftToNextJump--;
    }
    return result;
  }
}
