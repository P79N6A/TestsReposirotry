public class ChunkDecoderTest {
  private final EmbeddedChannel channel=new EmbeddedChannel(new ChunkDecoder());
  @After public void cleanup(){
    channel.finishAndReleaseAll();
  }
  @Test public void shouldDecodeFullChunk(){
    ByteBuf input=buffer();
    input.writeShort(7);
    input.writeByte(1);
    input.writeByte(11);
    input.writeByte(2);
    input.writeByte(22);
    input.writeByte(3);
    input.writeByte(33);
    input.writeByte(4);
    assertTrue(channel.writeInbound(input));
    assertTrue(channel.finish());
    assertEquals(1,channel.inboundMessages().size());
    assertByteBufEquals(input.slice(2,7),channel.readInbound());
  }
  @Test public void shouldDecodeSplitChunk(){
    ByteBuf input1=buffer();
    input1.writeShort(9);
    input1.writeByte(1);
    input1.writeByte(11);
    input1.writeByte(2);
    assertFalse(channel.writeInbound(input1));
    ByteBuf input2=buffer();
    input2.writeByte(22);
    assertFalse(channel.writeInbound(input2));
    ByteBuf input3=buffer();
    input3.writeByte(3);
    input3.writeByte(33);
    input3.writeByte(4);
    assertFalse(channel.writeInbound(input3));
    ByteBuf input4=buffer();
    input4.writeByte(44);
    input4.writeByte(5);
    assertTrue(channel.writeInbound(input4));
    assertTrue(channel.finish());
    assertEquals(1,channel.inboundMessages().size());
    assertByteBufEquals(wrappedBuffer(new byte[]{1,11,2,22,3,33,4,44,5}),channel.readInbound());
  }
  @Test public void shouldDecodeEmptyChunk(){
    ByteBuf input=copyShort(0);
    assertTrue(channel.writeInbound(input));
    assertTrue(channel.finish());
    assertEquals(1,channel.inboundMessages().size());
    assertByteBufEquals(wrappedBuffer(new byte[0]),channel.readInbound());
  }
  @Test public void shouldDecodeMaxSizeChunk(){
    byte[] message=new byte[0xFFFF];
    ByteBuf input=buffer();
    input.writeShort(message.length);
    input.writeBytes(message);
    assertTrue(channel.writeInbound(input));
    assertTrue(channel.finish());
    assertEquals(1,channel.inboundMessages().size());
    assertByteBufEquals(wrappedBuffer(message),channel.readInbound());
  }
}
