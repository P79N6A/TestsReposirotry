public class TransactionMetadataCacheTest {
  @Test public void shouldReturnNullWhenMissingATxInTheCache(){
    final TransactionMetadataCache cache=new TransactionMetadataCache();
    final TransactionMetadataCache.TransactionMetadata metadata=cache.getTransactionMetadata(42);
    assertNull(metadata);
  }
  @Test public void shouldReturnTheTxValueTIfInTheCached(){
    final TransactionMetadataCache cache=new TransactionMetadataCache();
    final LogPosition position=new LogPosition(3,4);
    final int txId=42;
    final int masterId=0;
    final int authorId=1;
    final int checksum=2;
    final long timestamp=System.currentTimeMillis();
    cache.cacheTransactionMetadata(txId,position,masterId,authorId,checksum,timestamp);
    final TransactionMetadataCache.TransactionMetadata metadata=cache.getTransactionMetadata(txId);
    assertEquals(new TransactionMetadataCache.TransactionMetadata(masterId,authorId,position,checksum,timestamp),metadata);
  }
  @Test public void shouldThrowWhenCachingATxWithNegativeOffsetPosition(){
    final TransactionMetadataCache cache=new TransactionMetadataCache();
    final LogPosition position=new LogPosition(3,-1);
    final int txId=42;
    final int masterId=0;
    final int authorId=1;
    final int checksum=2;
    final long timestamp=System.currentTimeMillis();
    try {
      cache.cacheTransactionMetadata(txId,position,masterId,authorId,checksum,timestamp);
      fail();
    }
 catch (    RuntimeException ex) {
      assertEquals("StartEntry.position is " + position,ex.getMessage());
    }
  }
  @Test public void shouldClearTheCache(){
    final TransactionMetadataCache cache=new TransactionMetadataCache();
    final LogPosition position=new LogPosition(3,4);
    final int txId=42;
    final int masterId=0;
    final int authorId=1;
    final int checksum=2;
    final long timestamp=System.currentTimeMillis();
    cache.cacheTransactionMetadata(txId,position,masterId,authorId,checksum,timestamp);
    cache.clear();
    final TransactionMetadataCache.TransactionMetadata metadata=cache.getTransactionMetadata(txId);
    assertNull(metadata);
  }
}
