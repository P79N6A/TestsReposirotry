abstract class DataAction extends Action {
  DataAction(  long[] data){
    super(data);
  }
  @Override boolean isCheckpoint(){
    return false;
  }
  @Override public boolean hasCausalDependencyWith(  Action other){
    if (other.isCheckpoint()) {
      return true;
    }
    Set<Long> intersection=new TreeSet<>(allKeys);
    intersection.retainAll(other.allKeys);
    return !intersection.isEmpty();
  }
}
