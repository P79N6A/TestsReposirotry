public class TestAutoIndexReopen {
  private GraphDatabaseAPI graphDb;
  private long id1=-1;
  private long id2=-1;
  private long id3=-1;
  @Before public void startDb(){
    graphDb=(GraphDatabaseAPI)new TestGraphDatabaseFactory().newImpermanentDatabaseBuilder().setConfig(new HashMap<>()).newGraphDatabase();
    try (Transaction tx=graphDb.beginTx()){
      graphDb.index().getNodeAutoIndexer().setEnabled(true);
      graphDb.index().getNodeAutoIndexer().startAutoIndexingProperty("nodeProp");
      graphDb.index().getRelationshipAutoIndexer().setEnabled(true);
      graphDb.index().getRelationshipAutoIndexer().startAutoIndexingProperty("type");
      tx.success();
    }
     try (Transaction tx=graphDb.beginTx()){
      Node node1=graphDb.createNode();
      Node node2=graphDb.createNode();
      Node node3=graphDb.createNode();
      id1=node1.getId();
      id2=node2.getId();
      id3=node3.getId();
      Relationship rel=node1.createRelationshipTo(node2,RelationshipType.withName("FOO"));
      rel.setProperty("type","FOO");
      tx.success();
    }
   }
  @After public void stopDb(){
    if (graphDb != null) {
      graphDb.shutdown();
    }
    graphDb=null;
  }
  private ReadableRelationshipIndex relationShipAutoIndex(){
    return graphDb.index().getRelationshipAutoIndexer().getAutoIndex();
  }
  @Test public void testForceOpenIfChanged(){
    try (Transaction tx=graphDb.beginTx()){
      Node node1=graphDb.getNodeById(id1);
      Node node2=graphDb.getNodeById(id2);
      Node node3=graphDb.getNodeById(id3);
      node1.setProperty("np2","test property");
      node1.getRelationships(RelationshipType.withName("FOO")).forEach(Relationship::delete);
      Relationship rel;
      try (IndexHits<Relationship> hits=relationShipAutoIndex().get("type","FOO",node1,node3)){
        assertEquals(0,hits.size());
      }
       rel=node1.createRelationshipTo(node3,RelationshipType.withName("FOO"));
      rel.setProperty("type","FOO");
      try (IndexHits<Relationship> indexHits=relationShipAutoIndex().get("type","FOO",node1,node2)){
        assertEquals(0,indexHits.size());
      }
       rel=node1.createRelationshipTo(node2,RelationshipType.withName("FOO"));
      rel.setProperty("type","FOO");
      try (IndexHits<Relationship> relationships=relationShipAutoIndex().get("type","FOO",node1,node2)){
        assertEquals(1,relationships.size());
      }
       tx.success();
    }
   }
}
