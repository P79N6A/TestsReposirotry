public class IndexReadAsserts {
  static void assertNodes(  NodeIndexCursor node,  MutableLongSet uniqueIds,  long... expected){
    uniqueIds.clear();
    for (    long count : expected) {
      assertTrue("at least " + expected.length + " nodes",node.next());
      assertTrue(uniqueIds.add(node.nodeReference()));
    }
    assertFalse("no more than " + expected.length + " nodes",node.next());
    assertEquals("all nodes are unique",expected.length,uniqueIds.size());
    for (    long expectedNode : expected) {
      assertTrue("expected node " + expectedNode,uniqueIds.contains(expectedNode));
    }
  }
  static void assertNodeCount(  NodeIndexCursor node,  int expectedCount,  MutableLongSet uniqueIds){
    uniqueIds.clear();
    for (int i=0; i < expectedCount; i++) {
      assertTrue("at least " + expectedCount + " nodes",node.next());
      assertTrue(uniqueIds.add(node.nodeReference()));
    }
    assertFalse("no more than " + expectedCount + " nodes",node.next());
  }
  static void assertFoundRelationships(  RelationshipIndexCursor edge,  int edges,  MutableLongSet uniqueIds){
    for (int i=0; i < edges; i++) {
      assertTrue("at least " + edges + " relationships",edge.next());
      assertTrue(uniqueIds.add(edge.relationshipReference()));
    }
    assertFalse("no more than " + edges + " relationships",edge.next());
  }
}
