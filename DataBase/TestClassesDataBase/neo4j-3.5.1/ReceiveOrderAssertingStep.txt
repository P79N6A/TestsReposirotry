private static class ReceiveOrderAssertingStep extends ProcessorStep<Object> {
  private final AtomicLong lastTicket=new AtomicLong();
  private final long processingTime;
  private final boolean endOfLine;
  ReceiveOrderAssertingStep(  StageControl control,  String name,  Configuration config,  long processingTime,  boolean endOfLine){
    super(control,name,config,1);
    this.processingTime=processingTime;
    this.endOfLine=endOfLine;
  }
  @Override public long receive(  long ticket,  Object batch){
    assertEquals("For " + batch + " in "+ name(),lastTicket.getAndIncrement(),ticket);
    return super.receive(ticket,batch);
  }
  @Override protected void process(  Object batch,  BatchSender sender){
    try {
      Thread.sleep(processingTime);
    }
 catch (    InterruptedException e) {
      throw new RuntimeException(e);
    }
    if (!endOfLine) {
      sender.send(batch);
    }
  }
}
