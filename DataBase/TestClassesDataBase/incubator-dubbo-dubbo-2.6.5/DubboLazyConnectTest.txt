/** 
 * dubbo protocol lazy connect test
 */
public class DubboLazyConnectTest {
  @BeforeClass public static void setUpBeforeClass() throws Exception {
  }
  @Before public void setUp() throws Exception {
  }
  @Test(expected=RpcException.class) public void testSticky1(){
    URL url=URL.valueOf("dubbo://127.0.0.1:9090/hi");
    ProtocolUtils.refer(IDemoService.class,url);
  }
  @Test public void testSticky2(){
    URL url=URL.valueOf("dubbo://127.0.0.1:9090/hi?" + Constants.LAZY_CONNECT_KEY + "=true");
    ProtocolUtils.refer(IDemoService.class,url);
  }
  @Test(expected=RpcException.class) public void testSticky3(){
    URL url=URL.valueOf("dubbo://127.0.0.1:9090/hi?" + Constants.LAZY_CONNECT_KEY + "=true");
    IDemoService service=(IDemoService)ProtocolUtils.refer(IDemoService.class,url);
    service.get();
  }
  @Test public void testSticky4(){
    int port=NetUtils.getAvailablePort();
    URL url=URL.valueOf("dubbo://127.0.0.1:" + port + "/hi?"+ Constants.LAZY_CONNECT_KEY+ "=true");
    ProtocolUtils.export(new DemoServiceImpl(),IDemoService.class,url);
    IDemoService service=(IDemoService)ProtocolUtils.refer(IDemoService.class,url);
    Assert.assertEquals("ok",service.get());
  }
public interface IDemoService {
    public String get();
  }
public class DemoServiceImpl implements IDemoService {
    public String get(){
      return "ok";
    }
  }
}
