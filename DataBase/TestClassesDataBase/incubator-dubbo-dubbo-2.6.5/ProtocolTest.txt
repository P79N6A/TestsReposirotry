public class ProtocolTest {
  IEcho echo=new IEcho(){
    public String echo(    String e){
      return e;
    }
  }
;
  ProxyFactory proxyFactory=ExtensionLoader.getExtensionLoader(ProxyFactory.class).getExtension("javassist");
  URL url=URL.valueOf("injvm://localhost:0/com.alibaba.dubbo.rpc.support.IEcho?interface=com.alibaba.dubbo.rpc.support.IEcho");
  Invoker<IEcho> invoker=proxyFactory.getInvoker(echo,IEcho.class,url);
  @Test public void test_destroyWontCloseAllProtocol() throws Exception {
    Protocol autowireProtocol=ExtensionLoader.getExtensionLoader(Protocol.class).getAdaptiveExtension();
    Protocol InjvmProtocol=ExtensionLoader.getExtensionLoader(Protocol.class).getExtension("injvm");
    InjvmProtocol.export(invoker);
    Invoker<IEcho> refer=InjvmProtocol.refer(IEcho.class,url);
    IEcho echoProxy=proxyFactory.getProxy(refer);
    assertEquals("ok",echoProxy.echo("ok"));
    try {
      autowireProtocol.destroy();
    }
 catch (    UnsupportedOperationException expected) {
      assertThat(expected.getMessage(),containsString("of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!"));
    }
    assertEquals("ok2",echoProxy.echo("ok2"));
  }
}
