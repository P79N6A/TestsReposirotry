public class ExporterSideConfigUrlTest extends UrlTestBase {
  private static final Logger log=LoggerFactory.getLogger(ExporterSideConfigUrlTest.class);
  @BeforeClass public static void start(){
  }
  @Before public void setUp(){
    initServConf();
  }
  @After() public void teardown(){
  }
  @Test public void exporterMethodConfigUrlTest(){
    verifyExporterUrlGeneration(methodConfForService,methodConfForServiceTable);
  }
  @Test public void exporterServiceConfigUrlTest(){
    verifyExporterUrlGeneration(servConf,servConfTable);
  }
  @Test public void exporterProviderConfigUrlTest(){
    verifyExporterUrlGeneration(provConf,provConfTable);
  }
  @Test public void exporterRegistryConfigUrlTest(){
  }
  protected <T>void verifyExporterUrlGeneration(  T config,  Object[][] dataTable){
    fillConfigs(config,dataTable,TESTVALUE1);
    servConf.export();
    String paramStringFromDb=getProviderParamString();
    try {
      paramStringFromDb=URLDecoder.decode(paramStringFromDb,"UTF-8");
    }
 catch (    UnsupportedEncodingException e) {
    }
    assertUrlStringWithLocalTable(paramStringFromDb,dataTable,config.getClass().getName(),TESTVALUE1);
    servConf.unexport();
  }
}
