public class ServerExceptionTest extends AbstractTest {
  @Override protected $__DemoStub.Iface getServiceImpl(){
    return new $__DemoStub.Iface(){
      public boolean echoBool(      boolean arg){
        return false;
      }
      public byte echoByte(      byte arg){
        return 0;
      }
      public short echoI16(      short arg){
        return 0;
      }
      public int echoI32(      int arg){
        return 0;
      }
      public long echoI64(      long arg){
        return 0;
      }
      public double echoDouble(      double arg){
        return 0;
      }
      public String echoString(      String arg){
        throw new RuntimeException("just for test");
      }
    }
;
  }
  @Test(expected=RpcException.class) public void testServerException() throws Exception {
    Assert.assertNotNull(invoker);
    RpcInvocation invocation=new RpcInvocation();
    invocation.setMethodName("echoString");
    invocation.setParameterTypes(new Class<?>[]{String.class});
    String arg="Hello, World!";
    invocation.setArguments(new Object[]{arg});
    Result result=invoker.invoke(invocation);
    System.out.println(result);
  }
  @Override protected URL getUrl(){
    URL url=super.getUrl();
    return url;
  }
}
