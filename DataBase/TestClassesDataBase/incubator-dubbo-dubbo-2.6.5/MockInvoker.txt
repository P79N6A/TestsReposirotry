public static class MockInvoker<T> extends AbstractInvoker<T> {
  URL url;
  boolean available=true;
  boolean destoryed=false;
  Result result;
  RpcException exception;
  Callable<?> callable;
  public MockInvoker(  Class<T> type,  URL url){
    super(type,url);
  }
  public void setResult(  Result result){
    this.result=result;
  }
  public void setException(  RpcException exception){
    this.exception=exception;
  }
  public void setCallable(  Callable<?> callable){
    this.callable=callable;
  }
  @Override protected Result doInvoke(  Invocation invocation) throws Throwable {
    if (callable != null) {
      try {
        callable.call();
      }
 catch (      Exception e) {
        throw new RpcException(e);
      }
    }
    if (exception != null) {
      throw exception;
    }
 else {
      return result;
    }
  }
}
