public class UnsafeByteArrayInputStreamTest {
  @Test public void testMark(){
    UnsafeByteArrayInputStream stream=new UnsafeByteArrayInputStream("abc".getBytes(),1);
    assertThat(stream.markSupported(),is(true));
    stream.mark(2);
    stream.read();
    assertThat(stream.position(),is(2));
    stream.reset();
    assertThat(stream.position(),is(1));
  }
  @Test public void testRead() throws IOException {
    UnsafeByteArrayInputStream stream=new UnsafeByteArrayInputStream("abc".getBytes());
    assertThat(stream.read(),is((int)'a'));
    assertThat(stream.available(),is(2));
    stream.skip(1);
    assertThat(stream.available(),is(1));
    byte[] bytes=new byte[1];
    int read=stream.read(bytes);
    assertThat(read,is(1));
    assertThat(bytes,is("c".getBytes()));
    stream.reset();
    assertThat(stream.position(),is(0));
    assertThat(stream.size(),is(3));
    stream.position(1);
    assertThat(stream.read(),is((int)'b'));
  }
  @Test(expected=IndexOutOfBoundsException.class) public void testWrongLength(){
    UnsafeByteArrayInputStream stream=new UnsafeByteArrayInputStream("abc".getBytes());
    stream.read(new byte[1],0,100);
  }
  @Test(expected=IndexOutOfBoundsException.class) public void testWrongOffset(){
    UnsafeByteArrayInputStream stream=new UnsafeByteArrayInputStream("abc".getBytes());
    stream.read(new byte[1],-1,1);
  }
  @Test(expected=NullPointerException.class) public void testReadEmptyByteArray(){
    UnsafeByteArrayInputStream stream=new UnsafeByteArrayInputStream("abc".getBytes());
    stream.read(null,0,1);
  }
  @Test public void testSkipZero(){
    UnsafeByteArrayInputStream stream=new UnsafeByteArrayInputStream("abc".getBytes());
    long skip=stream.skip(-1);
    assertThat(skip,is(0L));
    assertThat(stream.position(),is(0));
  }
}
