public class JValidatorTest {
  @Test(expected=NoSuchMethodException.class) public void testItWithNonExistMethod() throws Exception {
    URL url=URL.valueOf("test://test:11/com.alibaba.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget");
    JValidator jValidator=new JValidator(url);
    jValidator.validate("nonExistingMethod",new Class<?>[]{String.class},new Object[]{"arg1"});
  }
  @Test public void testItWithExistMethod() throws Exception {
    URL url=URL.valueOf("test://test:11/com.alibaba.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget");
    JValidator jValidator=new JValidator(url);
    jValidator.validate("someMethod1",new Class<?>[]{String.class},new Object[]{"anything"});
  }
  @Test(expected=ConstraintViolationException.class) public void testItWhenItViolatedConstraint() throws Exception {
    URL url=URL.valueOf("test://test:11/com.alibaba.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget");
    JValidator jValidator=new JValidator(url);
    jValidator.validate("someMethod2",new Class<?>[]{ValidationParameter.class},new Object[]{new ValidationParameter()});
  }
  @Test public void testItWhenItMeetsConstraint() throws Exception {
    URL url=URL.valueOf("test://test:11/com.alibaba.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget");
    JValidator jValidator=new JValidator(url);
    jValidator.validate("someMethod2",new Class<?>[]{ValidationParameter.class},new Object[]{new ValidationParameter("NotBeNull")});
  }
}
