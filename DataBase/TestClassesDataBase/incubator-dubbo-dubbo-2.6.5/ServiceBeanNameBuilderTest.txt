/** 
 * {@link ServiceBeanNameBuilder} Test
 * @see ServiceBeanNameBuilder
 * @since 2.6.5
 */
@Service(interfaceClass=DemoService.class,group=GROUP,version=VERSION,application="application",module="module",registry={"1","2","3"}) public class ServiceBeanNameBuilderTest {
  @Reference(interfaceClass=DemoService.class,group="DUBBO",version="1.0.0",application="application",module="module",registry={"1","2","3"}) static final Class<?> INTERFACE_CLASS=DemoService.class;
  static final String GROUP="DUBBO";
  static final String VERSION="1.0.0";
  static final String BEAN_NAME="ServiceBean:com.alibaba.dubbo.config.spring.api.DemoService:1.0.0:DUBBO";
  private MockEnvironment environment=new MockEnvironment();
  @Test public void testRequiredAttributes(){
    ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(INTERFACE_CLASS,environment);
    Assert.assertEquals("ServiceBean:com.alibaba.dubbo.config.spring.api.DemoService",builder.build());
  }
  @Test public void testServiceAnnotation(){
    Service service=AnnotationUtils.getAnnotation(ServiceBeanNameBuilderTest.class,Service.class);
    ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(service,INTERFACE_CLASS,environment);
    Assert.assertEquals(BEAN_NAME,builder.build());
  }
  @Test public void testReferenceAnnotation(){
    Reference reference=AnnotationUtils.getAnnotation(ReflectionUtils.findField(ServiceBeanNameBuilderTest.class,"INTERFACE_CLASS"),Reference.class);
    ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(reference,INTERFACE_CLASS,environment);
    Assert.assertEquals(BEAN_NAME,builder.build());
  }
}
