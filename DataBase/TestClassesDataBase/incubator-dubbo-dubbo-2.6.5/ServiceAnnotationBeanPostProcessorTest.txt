/** 
 * {@link ServiceAnnotationBeanPostProcessor} Test
 * @since 2.5.8
 */
@RunWith(SpringRunner.class) @ContextConfiguration(classes={ServiceAnnotationTestConfiguration.class,ServiceAnnotationBeanPostProcessorTest.class}) @TestPropertySource(properties={"provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider","packagesToScan = ${provider.package}"}) public class ServiceAnnotationBeanPostProcessorTest {
  @Autowired private ConfigurableListableBeanFactory beanFactory;
  @Bean public ServiceAnnotationBeanPostProcessor serviceAnnotationBeanPostProcessor2(  @Value("${packagesToScan}") String... packagesToScan){
    return new ServiceAnnotationBeanPostProcessor(packagesToScan);
  }
  @Test public void test(){
    Map<String,HelloService> helloServicesMap=beanFactory.getBeansOfType(HelloService.class);
    Assert.assertEquals(2,helloServicesMap.size());
    Map<String,ServiceBean> serviceBeansMap=beanFactory.getBeansOfType(ServiceBean.class);
    Assert.assertEquals(2,serviceBeansMap.size());
    Map<String,ServiceAnnotationBeanPostProcessor> beanPostProcessorsMap=beanFactory.getBeansOfType(ServiceAnnotationBeanPostProcessor.class);
    Assert.assertEquals(2,beanPostProcessorsMap.size());
    Assert.assertTrue(beanPostProcessorsMap.containsKey("serviceAnnotationBeanPostProcessor"));
    Assert.assertTrue(beanPostProcessorsMap.containsKey("serviceAnnotationBeanPostProcessor2"));
  }
}
