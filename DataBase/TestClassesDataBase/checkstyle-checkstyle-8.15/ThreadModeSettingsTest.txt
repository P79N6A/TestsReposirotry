public class ThreadModeSettingsTest {
  @Test public void testProperties(){
    final ThreadModeSettings config=new ThreadModeSettings(1,2);
    assertEquals("Invalid checker threads number",1,config.getCheckerThreadsNumber());
    assertEquals("Invalid treewalker threads number",2,config.getTreeWalkerThreadsNumber());
  }
  @Test public void testResolveCheckerInMultiThreadMode(){
    final ThreadModeSettings configuration=new ThreadModeSettings(2,2);
    try {
      configuration.resolveName(ThreadModeSettings.CHECKER_MODULE_NAME);
      fail("An exception is expected");
    }
 catch (    IllegalArgumentException ex) {
      assertEquals("Invalid exception message","Multi thread mode for Checker module is not implemented",ex.getMessage());
    }
  }
  @Test public void testResolveCheckerInSingleThreadMode(){
    final ThreadModeSettings singleThreadMode=ThreadModeSettings.SINGLE_THREAD_MODE_INSTANCE;
    assertEquals("Invalid name resolved",ThreadModeSettings.CHECKER_MODULE_NAME,singleThreadMode.resolveName(ThreadModeSettings.CHECKER_MODULE_NAME));
  }
  @Test public void testResolveTreeWalker(){
    final ThreadModeSettings configuration=new ThreadModeSettings(2,2);
    try {
      configuration.resolveName(ThreadModeSettings.TREE_WALKER_MODULE_NAME);
      fail("Exception is expected");
    }
 catch (    IllegalArgumentException ex) {
      assertEquals("Invalid exception message","Multi thread mode for TreeWalker module is not implemented",ex.getMessage());
    }
  }
  @Test public void testResolveTreeWalkerInSingleThreadMode(){
    final ThreadModeSettings singleThreadMode=ThreadModeSettings.SINGLE_THREAD_MODE_INSTANCE;
    final String actual=singleThreadMode.resolveName(ThreadModeSettings.TREE_WALKER_MODULE_NAME);
    assertThat("Invalid name resolved: " + actual,actual,is(ThreadModeSettings.TREE_WALKER_MODULE_NAME));
  }
  @Test public void testResolveAnyOtherModule() throws Exception {
    final Set<Class<?>> allModules=CheckUtil.getCheckstyleModules();
    final ThreadModeSettings multiThreadModeSettings=new ThreadModeSettings(2,2);
    final ThreadModeSettings singleThreadModeSettings=ThreadModeSettings.SINGLE_THREAD_MODE_INSTANCE;
    for (    Class<?> module : allModules) {
      if (Checker.class.isAssignableFrom(module) || TreeWalker.class.isAssignableFrom(module)) {
        continue;
      }
      final String moduleName=module.getSimpleName();
      assertThat("Invalid name resolved",singleThreadModeSettings.resolveName(moduleName),is(moduleName));
      assertThat("Invalid name resolved",multiThreadModeSettings.resolveName(moduleName),is(moduleName));
    }
  }
}
