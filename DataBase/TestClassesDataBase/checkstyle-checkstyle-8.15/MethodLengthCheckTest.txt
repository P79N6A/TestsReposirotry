public class MethodLengthCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/sizes/methodlength";
  }
  @Test public void testGetRequiredTokens(){
    final MethodLengthCheck checkObj=new MethodLengthCheck();
    assertArrayEquals("MethodLengthCheck#getRequiredTokens should return empty array by default",CommonUtil.EMPTY_INT_ARRAY,checkObj.getRequiredTokens());
  }
  @Test public void testGetAcceptableTokens(){
    final MethodLengthCheck methodLengthCheckObj=new MethodLengthCheck();
    final int[] actual=methodLengthCheckObj.getAcceptableTokens();
    final int[] expected={TokenTypes.METHOD_DEF,TokenTypes.CTOR_DEF};
    assertArrayEquals("Default acceptable tokens are invalid",expected,actual);
  }
  @Test public void testIt() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(MethodLengthCheck.class);
    checkConfig.addAttribute("max","19");
    final String[] expected={"79:5: " + getCheckMessage(MSG_KEY,20,19)};
    verify(checkConfig,getPath("InputMethodLengthSimple.java"),expected);
  }
  @Test public void testCountEmpty() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(MethodLengthCheck.class);
    checkConfig.addAttribute("max","19");
    checkConfig.addAttribute("countEmpty","false");
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputMethodLengthSimple.java"),expected);
  }
  @Test public void testWithComments() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(MethodLengthCheck.class);
    checkConfig.addAttribute("max","7");
    checkConfig.addAttribute("countEmpty","false");
    final String[] expected={"18:5: " + getCheckMessage(MSG_KEY,8,7)};
    verify(checkConfig,getPath("InputMethodLengthComments.java"),expected);
  }
  @Test public void testAbstract() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(MethodLengthCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputMethodLengthModifier.java"),expected);
  }
}
