public class LineColumnTest {
  @Test public void testCompareToBothEqual(){
    assertEquals("Invalid LineColumn comparing result",0,new LineColumn(0,0).compareTo(new LineColumn(0,0)));
  }
  @Test public void testCompareToFirstLarger(){
    final LineColumn lineColumn=new LineColumn(0,0);
    assertEquals("Invalid LineColumn comparison result",1,new LineColumn(1,0).compareTo(lineColumn));
    assertEquals("Invalid LineColumn comparison result",1,new LineColumn(0,1).compareTo(lineColumn));
  }
  @Test public void testCompareToFirstSmaller(){
    final Comparable<LineColumn> lineColumn=new LineColumn(0,0);
    assertEquals("Invalid LineColumn comparison result",-1,lineColumn.compareTo(new LineColumn(1,0)));
    assertEquals("Invalid LineColumn comparison result",-1,lineColumn.compareTo(new LineColumn(0,1)));
  }
  @Test public void testEqualsAndHashCode(){
    final EqualsVerifierReport ev=EqualsVerifier.forClass(LineColumn.class).usingGetClass().report();
    assertEquals("Error: " + ev.getMessage(),EqualsVerifierReport.SUCCESS,ev);
  }
  @Test public void testGetters(){
    final LineColumn lineColumn=new LineColumn(2,3);
    assertEquals("Invalid LineColumn comparison result",2,lineColumn.getLine());
    assertEquals("Invalid LineColumn comparison result",3,lineColumn.getColumn());
  }
}
