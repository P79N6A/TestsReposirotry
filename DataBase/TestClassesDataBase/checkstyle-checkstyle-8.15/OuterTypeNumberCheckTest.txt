public class OuterTypeNumberCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/sizes/outertypenumber";
  }
  @Test public void testGetRequiredTokens(){
    final OuterTypeNumberCheck checkObj=new OuterTypeNumberCheck();
    final int[] expected={TokenTypes.CLASS_DEF,TokenTypes.INTERFACE_DEF,TokenTypes.ENUM_DEF,TokenTypes.ANNOTATION_DEF};
    assertArrayEquals("Default required tokens are invalid",expected,checkObj.getRequiredTokens());
  }
  @Test public void testGetAcceptableTokens(){
    final OuterTypeNumberCheck outerTypeNumberObj=new OuterTypeNumberCheck();
    final int[] actual=outerTypeNumberObj.getAcceptableTokens();
    final int[] expected={TokenTypes.CLASS_DEF,TokenTypes.INTERFACE_DEF,TokenTypes.ENUM_DEF,TokenTypes.ANNOTATION_DEF};
    assertArrayEquals("Default acceptable tokens are invalid",expected,actual);
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(OuterTypeNumberCheck.class);
    final String[] expected={"6:1: " + getCheckMessage(MSG_KEY,3,1)};
    verify(checkConfig,getPath("InputOuterTypeNumberSimple.java"),expected);
  }
  @Test public void testMax30() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(OuterTypeNumberCheck.class);
    checkConfig.addAttribute("max","30");
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputOuterTypeNumberSimple.java"),expected);
  }
  @Test public void testWithInnerClass() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(OuterTypeNumberCheck.class);
    checkConfig.addAttribute("max","1");
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputOuterTypeNumberEmptyInner.java"),expected);
  }
}
