public class OneTopLevelClassTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel";
  }
  @Test public void testBad() throws Exception {
    final Class<OneTopLevelClassCheck> clazz=OneTopLevelClassCheck.class;
    final String messageKey="one.top.level.class";
    final String[] expected={"25: " + getCheckMessage(clazz,messageKey,"NoSuperClone"),"33: " + getCheckMessage(clazz,messageKey,"InnerClone"),"50: " + getCheckMessage(clazz,messageKey,"CloneWithTypeArguments"),"55: " + getCheckMessage(clazz,messageKey,"CloneWithTypeArgumentsAndNoSuper"),"60: " + getCheckMessage(clazz,messageKey,"MyClassWithGenericSuperMethod"),"77: " + getCheckMessage(clazz,messageKey,"AnotherClass")};
    final Configuration checkConfig=getModuleConfig("OneTopLevelClass");
    final String filePath=getPath("InputOneTopLevelClassBasic.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testGood() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("OneTopLevelClass");
    final String filePath=getPath("InputOneTopLevelClassGood.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testBad1() throws Exception {
    final Class<OneTopLevelClassCheck> clazz=OneTopLevelClassCheck.class;
    final String messageKey="one.top.level.class";
    final String[] expected={"4: " + getCheckMessage(clazz,messageKey,"FooEnum")};
    final Configuration checkConfig=getModuleConfig("OneTopLevelClass");
    final String filePath=getPath("InputOneTopLevelClassBad1.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testBad2() throws Exception {
    final Class<OneTopLevelClassCheck> clazz=OneTopLevelClassCheck.class;
    final String messageKey="one.top.level.class";
    final String[] expected={"5: " + getCheckMessage(clazz,messageKey,"FooIn"),"7: " + getCheckMessage(clazz,messageKey,"FooClass")};
    final Configuration checkConfig=getModuleConfig("OneTopLevelClass");
    final String filePath=getPath("InputOneTopLevelClassBad2.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
}
