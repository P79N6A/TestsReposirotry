public class PackageNameCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/naming/packagename";
  }
  @Test public void testGetRequiredTokens(){
    final PackageNameCheck checkObj=new PackageNameCheck();
    final int[] expected={TokenTypes.PACKAGE_DEF};
    assertArrayEquals("Default required tokens are invalid",expected,checkObj.getRequiredTokens());
  }
  @Test public void testSpecified() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(PackageNameCheck.class);
    checkConfig.addAttribute("format","[A-Z]+");
    final String pattern="[A-Z]+";
    final String[] expected={"6:9: " + getCheckMessage(MSG_KEY,"com.puppycrawl.tools.checkstyle.checks.naming.packagename",pattern)};
    verify(checkConfig,getPath("InputPackageNameSimple.java"),expected);
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(PackageNameCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputPackageNameSimple.java"),expected);
  }
  @Test public void testGetAcceptableTokens(){
    final PackageNameCheck packageNameCheckObj=new PackageNameCheck();
    final int[] actual=packageNameCheckObj.getAcceptableTokens();
    final int[] expected={TokenTypes.PACKAGE_DEF};
    assertArrayEquals("Default acceptable tokens are invalid",expected,actual);
  }
}
