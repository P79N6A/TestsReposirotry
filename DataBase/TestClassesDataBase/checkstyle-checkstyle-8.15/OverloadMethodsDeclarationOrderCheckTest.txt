public class OverloadMethodsDeclarationOrderCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/coding/overloadmethodsdeclarationorder";
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(OverloadMethodsDeclarationOrderCheck.class);
    final String[] expected={"28: " + getCheckMessage(MSG_KEY,17),"56: " + getCheckMessage(MSG_KEY,45),"68: " + getCheckMessage(MSG_KEY,66),"111: " + getCheckMessage(MSG_KEY,100)};
    verify(checkConfig,getPath("InputOverloadMethodsDeclarationOrder.java"),expected);
  }
  @Test public void testTokensNotNull(){
    final OverloadMethodsDeclarationOrderCheck check=new OverloadMethodsDeclarationOrderCheck();
    Assert.assertNotNull("Acceptable tokens should not be null",check.getAcceptableTokens());
    Assert.assertNotNull("Default tokens should not be null",check.getDefaultTokens());
    Assert.assertNotNull("Required tokens should not be null",check.getRequiredTokens());
  }
}
