public class SeverityMatchFilterTest {
  private final SeverityMatchFilter filter=new SeverityMatchFilter();
  @Test public void testDefault(){
    final AuditEvent ev=new AuditEvent(this,"Test.java");
    assertFalse("no message",filter.accept(ev));
    final SeverityLevel errorLevel=SeverityLevel.ERROR;
    final LocalizedMessage errorMessage=new LocalizedMessage(1,0,"","",null,errorLevel,null,getClass(),null);
    final AuditEvent ev2=new AuditEvent(this,"ATest.java",errorMessage);
    assertTrue("level:" + errorLevel,filter.accept(ev2));
    final SeverityLevel infoLevel=SeverityLevel.INFO;
    final LocalizedMessage infoMessage=new LocalizedMessage(1,0,"","",null,infoLevel,null,getClass(),null);
    final AuditEvent ev3=new AuditEvent(this,"ATest.java",infoMessage);
    assertFalse("level:" + infoLevel,filter.accept(ev3));
  }
  @Test public void testSeverity(){
    filter.setSeverity(SeverityLevel.INFO);
    final AuditEvent ev=new AuditEvent(this,"Test.java");
    assertTrue("no message",filter.accept(ev));
    final SeverityLevel errorLevel=SeverityLevel.ERROR;
    final LocalizedMessage errorMessage=new LocalizedMessage(1,0,"","",null,errorLevel,null,getClass(),null);
    final AuditEvent ev2=new AuditEvent(this,"ATest.java",errorMessage);
    assertFalse("level:" + errorLevel,filter.accept(ev2));
    final SeverityLevel infoLevel=SeverityLevel.INFO;
    final LocalizedMessage infoMessage=new LocalizedMessage(1,0,"","",null,infoLevel,null,getClass(),null);
    final AuditEvent ev3=new AuditEvent(this,"ATest.java",infoMessage);
    assertTrue("level:" + infoLevel,filter.accept(ev3));
  }
  @Test public void testAcceptOnMatch(){
    filter.setSeverity(SeverityLevel.INFO);
    filter.setAcceptOnMatch(false);
    final AuditEvent ev=new AuditEvent(this,"Test.java");
    assertFalse("no message",filter.accept(ev));
    final SeverityLevel errorLevel=SeverityLevel.ERROR;
    final LocalizedMessage errorMessage=new LocalizedMessage(1,0,"","",null,errorLevel,null,getClass(),null);
    final AuditEvent ev2=new AuditEvent(this,"ATest.java",errorMessage);
    assertTrue("level:" + errorLevel,filter.accept(ev2));
    final SeverityLevel infoLevel=SeverityLevel.INFO;
    final LocalizedMessage infoMessage=new LocalizedMessage(1,0,"","",null,infoLevel,null,getClass(),null);
    final AuditEvent ev3=new AuditEvent(this,"ATest.java",infoMessage);
    assertFalse("level:" + infoLevel,filter.accept(ev3));
  }
  @Test public void testConfigure() throws CheckstyleException {
    filter.configure(new DefaultConfiguration("test"));
    assertNotNull("object exists",filter);
  }
}
