public class InterfaceIsTypeCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/design/interfaceistype";
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(InterfaceIsTypeCheck.class);
    final String[] expected={"25: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputInterfaceIsType.java"),expected);
  }
  @Test public void testAllowMarker() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(InterfaceIsTypeCheck.class);
    checkConfig.addAttribute("allowMarkerInterfaces","false");
    final String[] expected={"20: " + getCheckMessage(MSG_KEY),"25: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputInterfaceIsType.java"),expected);
  }
  @Test public void testGetAcceptableTokens(){
    final InterfaceIsTypeCheck obj=new InterfaceIsTypeCheck();
    final int[] expected={TokenTypes.INTERFACE_DEF};
    assertArrayEquals("Default acceptable tokens are invalid",expected,obj.getAcceptableTokens());
  }
  @Test public void testGetRequiredTokens(){
    final InterfaceIsTypeCheck obj=new InterfaceIsTypeCheck();
    final int[] expected={TokenTypes.INTERFACE_DEF};
    assertArrayEquals("Default required tokens are invalid",expected,obj.getRequiredTokens());
  }
}
