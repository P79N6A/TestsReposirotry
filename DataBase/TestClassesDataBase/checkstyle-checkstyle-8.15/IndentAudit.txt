private static final class IndentAudit implements AuditListener {
  private final IndentComment[] comments;
  private int position;
  IndentAudit(  IndentComment... comments){
    this.comments=Arrays.copyOf(comments,comments.length);
  }
  @Override public void auditStarted(  AuditEvent event){
  }
  @Override public void auditFinished(  AuditEvent event){
  }
  @Override public void fileStarted(  AuditEvent event){
  }
  @Override public void fileFinished(  AuditEvent event){
  }
  @Override public void addError(  AuditEvent event){
    final int line=event.getLine();
    final String message=event.getMessage();
    if (position >= comments.length) {
      fail("found a warning when none was expected for #" + position + " at line "+ line+ " with message "+ message);
    }
    final IndentComment comment=comments[position];
    position++;
    final String possibleExceptedMessages=Arrays.stream(comment.getExpectedMessages()).reduce("",(cur,next) -> cur + "\"" + next+ "\", ");
    final String assertMessage=String.format(Locale.ROOT,"input expected warning #%d at line %d to report one of the following: %s" + "but got instead: %d: %s",position,comment.getLineNumber(),possibleExceptedMessages,line,message);
    assertTrue(assertMessage,line == comment.getLineNumber() && Arrays.stream(comment.getExpectedMessages()).anyMatch(message::endsWith));
  }
  @Override public void addException(  AuditEvent event,  Throwable throwable){
  }
}
