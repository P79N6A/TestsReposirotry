public class NoCloneCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/coding/noclone";
  }
  @Test public void testHasClone() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoCloneCheck.class);
    final String[] expected={"10: " + getCheckMessage(MSG_KEY),"27: " + getCheckMessage(MSG_KEY),"35: " + getCheckMessage(MSG_KEY),"39: " + getCheckMessage(MSG_KEY),"52: " + getCheckMessage(MSG_KEY),"60: " + getCheckMessage(MSG_KEY),"98: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputNoClone.java"),expected);
  }
  @Test public void testTokensNotNull(){
    final NoCloneCheck check=new NoCloneCheck();
    Assert.assertNotNull("Acceptable tokens should not be null",check.getAcceptableTokens());
    Assert.assertNotNull("Default tokens should not be null",check.getDefaultTokens());
    Assert.assertNotNull("Required tokens should not be null",check.getRequiredTokens());
  }
}
