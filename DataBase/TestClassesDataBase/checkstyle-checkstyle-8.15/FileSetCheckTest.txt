public class FileSetCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/api/fileset";
  }
  @Test public void testTranslation() throws Exception {
    final Configuration checkConfig=createModuleConfig(TestFileSetCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputFileSetIllegalTokens.java"),expected);
    assertTrue("destroy() not called by Checker",TestFileSetCheck.isDestroyed());
  }
  @Test public void testProcessCallsFinishBeforeCallingDestroy() throws Exception {
    final Configuration checkConfig=createModuleConfig(TestFileSetCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputFileSetIllegalTokens.java"),expected);
    assertTrue("FileContent should be available during finishProcessing() call",TestFileSetCheck.isFileContentAvailable());
  }
private static class TestFileSetCheck extends AbstractFileSetCheck {
    private static boolean destroyed;
    private static boolean fileContentAvailable;
    private static FileContents contents;
    @Override public void destroy(){
      destroyed=true;
    }
    public static boolean isDestroyed(){
      return destroyed;
    }
    public static boolean isFileContentAvailable(){
      return fileContentAvailable;
    }
    @Override protected void processFiltered(    File file,    FileText fileText){
      contents=new FileContents(fileText);
    }
    @Override public void finishProcessing(){
      fileContentAvailable=contents != null;
    }
  }
}
