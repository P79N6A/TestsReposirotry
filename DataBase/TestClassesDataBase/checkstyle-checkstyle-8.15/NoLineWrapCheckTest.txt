public class NoLineWrapCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/whitespace/nolinewrap";
  }
  @Test public void testCaseWithoutLineWrapping() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoLineWrapCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputNoLineWrapGood.java"),expected);
  }
  @Test public void testDefaultTokensLineWrapping() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoLineWrapCheck.class);
    final String[] expected={"1: " + getCheckMessage(MSG_KEY,"package"),"6: " + getCheckMessage(MSG_KEY,"import"),"10: " + getCheckMessage(MSG_KEY,"import")};
    verify(checkConfig,getPath("InputNoLineWrapBad.java"),expected);
  }
  @Test public void testCustomTokensLineWrapping() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoLineWrapCheck.class);
    checkConfig.addAttribute("tokens","IMPORT, STATIC_IMPORT, CLASS_DEF, METHOD_DEF, ENUM_DEF");
    final String[] expected={"6: " + getCheckMessage(MSG_KEY,"import"),"10: " + getCheckMessage(MSG_KEY,"import"),"13: " + getCheckMessage(MSG_KEY,"CLASS_DEF"),"16: " + getCheckMessage(MSG_KEY,"METHOD_DEF"),"23: " + getCheckMessage(MSG_KEY,"ENUM_DEF")};
    verify(checkConfig,getPath("InputNoLineWrapBad.java"),expected);
  }
}
