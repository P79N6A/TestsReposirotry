public class PackageAnnotationCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/annotation/packageannotation";
  }
  /** 
 * This tests a package annotation that is in the package-info.java file.
 */
  @Test public void testGoodPackageAnnotation() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(PackageAnnotationCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getNonCompilablePath("package-info.java"),expected);
  }
  @Test public void testGetAcceptableTokens(){
    final PackageAnnotationCheck constantNameCheckObj=new PackageAnnotationCheck();
    final int[] actual=constantNameCheckObj.getAcceptableTokens();
    final int[] expected={TokenTypes.PACKAGE_DEF};
    Assert.assertArrayEquals("Invalid acceptable tokens",expected,actual);
  }
  @Test public void testAnnotationNotInPackageInfo() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(PackageAnnotationCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputPackageAnnotation.java"),expected);
  }
  @Test public void testWithoutAnnotation() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(PackageAnnotationCheck.class);
    final String[] expected={"0: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getNonCompilablePath("InputPackageAnnotation2.java"),expected);
  }
}
