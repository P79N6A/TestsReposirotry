public class TypeNameCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/naming/typename";
  }
  @Test public void testSpecified() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(TypeNameCheck.class);
    checkConfig.addAttribute("format","^inputHe");
    final String[] expected={"13:14: " + getCheckMessage(MSG_INVALID_PATTERN,"InputTypeName","^inputHe")};
    verify(checkConfig,getPath("InputTypeName.java"),expected);
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(TypeNameCheck.class);
    final String[] expected={"3:7: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderClass",DEFAULT_PATTERN),"5:22: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderInterface",DEFAULT_PATTERN),"7:17: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderEnum",DEFAULT_PATTERN),"9:23: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderAnnotation",DEFAULT_PATTERN)};
    verify(checkConfig,getPath("InputTypeName.java"),expected);
  }
  @Test public void testClassSpecific() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(TypeNameCheck.class);
    checkConfig.addAttribute("tokens","CLASS_DEF");
    final String[] expected={"3:7: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderClass",DEFAULT_PATTERN)};
    verify(checkConfig,getPath("InputTypeName.java"),expected);
  }
  @Test public void testInterfaceSpecific() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(TypeNameCheck.class);
    checkConfig.addAttribute("tokens","INTERFACE_DEF");
    final String[] expected={"5:22: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderInterface",DEFAULT_PATTERN)};
    verify(checkConfig,getPath("InputTypeName.java"),expected);
  }
  @Test public void testEnumSpecific() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(TypeNameCheck.class);
    checkConfig.addAttribute("tokens","ENUM_DEF");
    final String[] expected={"7:17: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderEnum",DEFAULT_PATTERN)};
    verify(checkConfig,getPath("InputTypeName.java"),expected);
  }
  @Test public void testAnnotationSpecific() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(TypeNameCheck.class);
    checkConfig.addAttribute("tokens","ANNOTATION_DEF");
    final String[] expected={"9:23: " + getCheckMessage(MSG_INVALID_PATTERN,"inputHeaderAnnotation",DEFAULT_PATTERN)};
    verify(checkConfig,getPath("InputTypeName.java"),expected);
  }
}
