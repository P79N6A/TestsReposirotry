public class FileTabCharacterCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/whitespace/filetabcharacter";
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(FileTabCharacterCheck.class);
    checkConfig.addAttribute("eachLine","false");
    final String[] expected={"19:25: " + getCheckMessage(MSG_FILE_CONTAINS_TAB)};
    final File[] files={new File(getPath("InputFileTabCharacterSimple.java"))};
    verify(createChecker(checkConfig),files,getPath("InputFileTabCharacterSimple.java"),expected);
  }
  @Test public void testVerbose() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(FileTabCharacterCheck.class);
    checkConfig.addAttribute("eachLine","true");
    final String[] expected={"19:25: " + getCheckMessage(MSG_CONTAINS_TAB),"145:35: " + getCheckMessage(MSG_CONTAINS_TAB),"146:64: " + getCheckMessage(MSG_CONTAINS_TAB),"154:9: " + getCheckMessage(MSG_CONTAINS_TAB),"155:10: " + getCheckMessage(MSG_CONTAINS_TAB),"156:1: " + getCheckMessage(MSG_CONTAINS_TAB),"157:3: " + getCheckMessage(MSG_CONTAINS_TAB),"158:3: " + getCheckMessage(MSG_CONTAINS_TAB)};
    final File[] files={new File(getPath("InputFileTabCharacterSimple.java"))};
    verify(createChecker(checkConfig),files,getPath("InputFileTabCharacterSimple.java"),expected);
  }
  @Test public void testBadFile() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(FileTabCharacterCheck.class);
    checkConfig.addAttribute("eachLine","false");
    final String path=getPath("Claira");
    final String exceptionMessage=" (No such file or directory)";
    final LocalizedMessage localizedMessage=new LocalizedMessage(1,Definitions.CHECKSTYLE_BUNDLE,"general.exception",new String[]{path + exceptionMessage},null,getClass(),null);
    final String[] expected={"1: " + localizedMessage.getMessage()};
    final File[] files={new File(path)};
    verify(createChecker(checkConfig),files,path,expected);
  }
}
