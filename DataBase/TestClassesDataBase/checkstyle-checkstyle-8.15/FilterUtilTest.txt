public class FilterUtilTest {
  @Rule public final TemporaryFolder temporaryFolder=new TemporaryFolder();
  @Test public void testIsProperUtilsClass() throws ReflectiveOperationException {
    assertTrue("Constructor is not private",isUtilsClassHasPrivateConstructor(FilterUtil.class,true));
  }
  @Test public void testExistingFile() throws Exception {
    final File file=temporaryFolder.newFile();
    assertTrue("Suppression file exists",FilterUtil.isFileExists(file.getPath()));
  }
  @Test public void testNonExistentFile(){
    assertFalse("Suppression file does not exist",FilterUtil.isFileExists("non-existent.xml"));
  }
}
