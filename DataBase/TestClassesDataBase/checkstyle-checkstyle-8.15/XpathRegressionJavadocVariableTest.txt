public class XpathRegressionJavadocVariableTest extends AbstractXpathTestSupport {
  private final String checkName=JavadocVariableCheck.class.getSimpleName();
  @Override protected String getCheckName(){
    return checkName;
  }
  @Test public void testOne() throws Exception {
    final File fileToProcess=new File(getPath("SuppressionXpathRegressionJavadocVariableOne.java"));
    final DefaultConfiguration moduleConfig=createModuleConfig(JavadocVariableCheck.class);
    final String[] expectedViolation={"5:5: " + getCheckMessage(JavadocVariableCheck.class,JavadocVariableCheck.MSG_JAVADOC_MISSING)};
    final List<String> expectedXpathQueries=Arrays.asList("/CLASS_DEF[@text='SuppressionXpathRegressionJavadocVariableOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='age']","/CLASS_DEF[@text='SuppressionXpathRegressionJavadocVariableOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='age']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionJavadocVariableOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='age']/MODIFIERS/LITERAL_PRIVATE");
    runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);
  }
  @Test public void testTwo() throws Exception {
    final File fileToProcess=new File(getPath("SuppressionXpathRegressionJavadocVariableTwo.java"));
    final DefaultConfiguration moduleConfig=createModuleConfig(JavadocVariableCheck.class);
    final String[] expectedViolation={"6:9: " + getCheckMessage(JavadocVariableCheck.class,JavadocVariableCheck.MSG_JAVADOC_MISSING)};
    final List<String> expectedXpathQueries=Arrays.asList("/CLASS_DEF[@text='SuppressionXpathRegressionJavadocVariableTwo']/OBJBLOCK" + "/CLASS_DEF[@text='InnerInner2']/OBJBLOCK/VARIABLE_DEF[@text='fData']","/CLASS_DEF[@text='SuppressionXpathRegressionJavadocVariableTwo']/OBJBLOCK" + "/CLASS_DEF[@text='InnerInner2']/OBJBLOCK/VARIABLE_DEF[@text='fData']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionJavadocVariableTwo']/OBJBLOCK" + "/CLASS_DEF[@text='InnerInner2']/OBJBLOCK/VARIABLE_DEF[@text='fData']/MODIFIERS" + "/LITERAL_PUBLIC");
    runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);
  }
}
