public class NoWhitespaceBeforeCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/whitespace/nowhitespacebefore";
  }
  @Test public void testDefault() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    final String[] expected={"30:14: " + getCheckMessage(MSG_KEY,"++"),"30:21: " + getCheckMessage(MSG_KEY,"--"),"176:18: " + getCheckMessage(MSG_KEY,";"),"178:23: " + getCheckMessage(MSG_KEY,";"),"185:18: " + getCheckMessage(MSG_KEY,";"),"187:27: " + getCheckMessage(MSG_KEY,";"),"195:26: " + getCheckMessage(MSG_KEY,";"),"211:15: " + getCheckMessage(MSG_KEY,";"),"266:1: " + getCheckMessage(MSG_KEY,";"),"270:15: " + getCheckMessage(MSG_KEY,";"),"284:1: " + getCheckMessage(MSG_KEY,";"),"287:61: " + getCheckMessage(MSG_KEY,"...")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeDefault.java"),expected);
  }
  @Test public void testDot() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    checkConfig.addAttribute("tokens","DOT");
    final String[] expected={"5:12: " + getCheckMessage(MSG_KEY,"."),"6:4: " + getCheckMessage(MSG_KEY,"."),"129:17: " + getCheckMessage(MSG_KEY,"."),"135:12: " + getCheckMessage(MSG_KEY,"."),"136:10: " + getCheckMessage(MSG_KEY,"."),"264:1: " + getCheckMessage(MSG_KEY,".")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeDot.java"),expected);
  }
  @Test public void testDotAllowLineBreaks() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    checkConfig.addAttribute("tokens","DOT");
    checkConfig.addAttribute("allowLineBreaks","yes");
    final String[] expected={"5:12: " + getCheckMessage(MSG_KEY,"."),"129:17: " + getCheckMessage(MSG_KEY,"."),"136:10: " + getCheckMessage(MSG_KEY,".")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeDotAllowLineBreaks.java"),expected);
  }
  @Test public void testMethodReference() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    checkConfig.addAttribute("tokens","METHOD_REF");
    final String[] expected={"17:31: " + getCheckMessage(MSG_KEY,"::"),"18:60: " + getCheckMessage(MSG_KEY,"::")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeMethodRef.java"),expected);
  }
  @Test public void testDotAtTheStartOfTheLine() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    checkConfig.addAttribute("tokens","DOT");
    final String[] expected={"2:1: " + getCheckMessage(MSG_KEY,".")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeAtStartOfTheLine.java"),expected);
  }
  @Test public void testMethodRefAtTheStartOfTheLine() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    checkConfig.addAttribute("tokens","METHOD_REF");
    checkConfig.addAttribute("allowLineBreaks","yes");
    final String[] expected={"14:2: " + getCheckMessage(MSG_KEY,"::")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeAtStartOfTheLine.java"),expected);
  }
  @Test public void testEmptyForLoop() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoWhitespaceBeforeCheck.class);
    checkConfig.addAttribute("tokens","SEMI");
    checkConfig.addAttribute("allowLineBreaks","yes");
    final String[] expected={"12:23: " + getCheckMessage(MSG_KEY,";"),"18:31: " + getCheckMessage(MSG_KEY,";")};
    verify(checkConfig,getPath("InputNoWhitespaceBeforeEmptyForLoop.java"),expected);
  }
}
