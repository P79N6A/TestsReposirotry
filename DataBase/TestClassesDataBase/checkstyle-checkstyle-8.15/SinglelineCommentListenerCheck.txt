private static class SinglelineCommentListenerCheck extends AbstractCheck {
  @Override public boolean isCommentNodesRequired(){
    return true;
  }
  @Override public int[] getDefaultTokens(){
    return getAcceptableTokens();
  }
  @Override public int[] getAcceptableTokens(){
    return new int[]{TokenTypes.SINGLE_LINE_COMMENT};
  }
  @Override public int[] getRequiredTokens(){
    return getAcceptableTokens();
  }
  @Override public void init(){
    final int lines=63;
    for (int i=0; i < lines; i++) {
      ALL_COMMENTS.add(i + LINE_SEPARATOR);
    }
    ALL_COMMENTS.add(String.valueOf(lines));
  }
  @Override public void visitToken(  DetailAST ast){
    final String commentContent=ast.getFirstChild().getText();
    if (!ALL_COMMENTS.remove(commentContent)) {
      Assert.fail("Unexpected comment: " + commentContent);
    }
  }
}
