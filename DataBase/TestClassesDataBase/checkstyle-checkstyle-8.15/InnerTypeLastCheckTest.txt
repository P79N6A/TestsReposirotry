public class InnerTypeLastCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/design/innertypelast";
  }
  @Test public void testGetRequiredTokens(){
    final InnerTypeLastCheck checkObj=new InnerTypeLastCheck();
    final int[] expected={TokenTypes.CLASS_DEF,TokenTypes.INTERFACE_DEF};
    assertArrayEquals("Default required tokens are invalid",expected,checkObj.getRequiredTokens());
  }
  @Test public void testMembersBeforeInner() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(InnerTypeLastCheck.class);
    final String[] expected={"44:9: " + getCheckMessage(MSG_KEY),"65:9: " + getCheckMessage(MSG_KEY),"69:9: " + getCheckMessage(MSG_KEY),"78:5: " + getCheckMessage(MSG_KEY),"95:9: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputInnerTypeLastClass.java"),expected);
  }
  @Test public void testIfRootClassChecked() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(InnerTypeLastCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputInnerTypeLastClassRootClass.java"),expected);
  }
  @Test public void testGetAcceptableTokens(){
    final InnerTypeLastCheck obj=new InnerTypeLastCheck();
    final int[] expected={TokenTypes.CLASS_DEF,TokenTypes.INTERFACE_DEF};
    assertArrayEquals("Default acceptable tokens are invalid",expected,obj.getAcceptableTokens());
  }
}
