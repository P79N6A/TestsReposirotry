public class IndentationTest extends AbstractIndentationTestSupport {
  @Override protected String getPackageLocation(){
    return "com/google/checkstyle/test/chapter4formatting/rule4841indentation";
  }
  @Test public void testCorrectClass() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrectClass.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testCorrectField() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrectFieldAndParameter.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testCorrectFor() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrectForAndParameter.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testCorrectIf() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrectIfAndParameter.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testCorrect() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrect.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testCorrectReturn() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrectReturnAndParameter.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
  @Test public void testCorrectWhile() throws Exception {
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    final Configuration checkConfig=getModuleConfig("Indentation");
    final String filePath=getPath("InputIndentationCorrectWhileDoWhileAndParameter.java");
    final Integer[] warnList=getLinesWithWarn(filePath);
    verify(checkConfig,filePath,expected,warnList);
  }
}
