public class FileTextTest extends AbstractPathTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/api/filetext";
  }
  @Test public void testUnsupportedCharset() throws IOException {
    final String charsetName="STRANGE_CHARSET";
    try {
      final Object test=new FileText(new File("any name"),charsetName);
      fail("UnsupportedEncodingException is expected but got " + test);
    }
 catch (    IllegalStateException ex) {
      assertEquals("Invalid exception message","Unsupported charset: " + charsetName,ex.getMessage());
    }
  }
  @Test public void testSupportedCharset() throws IOException {
    final String charsetName=StandardCharsets.ISO_8859_1.name();
    final FileText fileText=new FileText(new File(getPath("InputFileTextImportControl.xml")),charsetName);
    assertEquals("Invalid charset name",charsetName,fileText.getCharset().name());
  }
  @Test public void testLineColumnBeforeCopyConstructor() throws IOException {
    final String charsetName=StandardCharsets.ISO_8859_1.name();
    final FileText fileText=new FileText(new File(getPath("InputFileTextImportControl.xml")),charsetName);
    final LineColumn lineColumn=fileText.lineColumn(100);
    final FileText copy=new FileText(fileText);
    assertEquals("Invalid linecolumn",lineColumn,copy.lineColumn(100));
  }
  @Test public void testLineColumnAfterCopyConstructor() throws IOException {
    final String charsetName=StandardCharsets.ISO_8859_1.name();
    final FileText fileText=new FileText(new File(getPath("InputFileTextImportControl.xml")),charsetName);
    final FileText copy=new FileText(fileText);
    final LineColumn lineColumn=copy.lineColumn(100);
    assertEquals("Invalid line",3,lineColumn.getLine());
    if (System.getProperty("os.name").toLowerCase(Locale.ENGLISH).startsWith("windows")) {
      assertEquals("Invalid column",44,lineColumn.getColumn());
    }
 else {
      assertEquals("Invalid column",46,lineColumn.getColumn());
    }
  }
  @Test public void testLineColumnAtTheStartOfFile() throws IOException {
    final String charsetName=StandardCharsets.ISO_8859_1.name();
    final FileText fileText=new FileText(new File(getPath("InputFileTextImportControl.xml")),charsetName);
    final FileText copy=new FileText(fileText);
    final LineColumn lineColumn=copy.lineColumn(0);
    assertEquals("Invalid line",1,lineColumn.getLine());
    assertEquals("Invalid column",0,lineColumn.getColumn());
  }
}
