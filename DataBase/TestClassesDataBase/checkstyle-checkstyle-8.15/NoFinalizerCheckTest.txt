/** 
 * NoFinalizerCheck test.
 */
public class NoFinalizerCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/coding/nofinalizer";
  }
  @Test public void testGetAcceptableTokens(){
    final NoFinalizerCheck noFinalizerCheck=new NoFinalizerCheck();
    final int[] expected={TokenTypes.METHOD_DEF};
    assertArrayEquals("Default acceptable tokens are invalid",expected,noFinalizerCheck.getAcceptableTokens());
  }
  @Test public void testHasFinalizer() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoFinalizerCheck.class);
    final String[] expected={"5: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputNoFinalizerHasFinalizer.java"),expected);
  }
  @Test public void testHasNoFinalizer() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(NoFinalizerCheck.class);
    final String[] expected=CommonUtil.EMPTY_STRING_ARRAY;
    verify(checkConfig,getPath("InputNoFinalizerFallThrough.java"),expected);
  }
}
