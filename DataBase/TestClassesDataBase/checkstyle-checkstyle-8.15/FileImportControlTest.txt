public class FileImportControlTest {
  private final PkgImportControl root=new PkgImportControl("com.kazgroup.courtlink",false,MismatchStrategy.DISALLOWED);
  private final FileImportControl fileNode=new FileImportControl(root,"MyClass",false);
  private final FileImportControl fileRegexpNode=new FileImportControl(root,".*Other.*",true);
  @Before public void setUp(){
    root.addChild(fileNode);
    root.addChild(fileRegexpNode);
    root.addImportRule(new PkgImportRule(false,false,"org.springframework",false,false));
    root.addImportRule(new PkgImportRule(false,false,"org.hibernate",false,false));
    root.addImportRule(new PkgImportRule(true,false,"org.apache.commons",false,false));
  }
  @Test public void testLocateFinest(){
    assertEquals("Unexpected response",root,root.locateFinest("com.kazgroup.courtlink.domain","Random"));
    assertEquals("Unexpected response",fileNode,root.locateFinest("com.kazgroup.courtlink.common.api","MyClass"));
    assertEquals("Unexpected response",fileRegexpNode,root.locateFinest("com.kazgroup.courtlink.common.api","SomeOtherName"));
    assertEquals("Unexpected response",root,root.locateFinest("com.kazgroup.courtlink",null));
  }
}
