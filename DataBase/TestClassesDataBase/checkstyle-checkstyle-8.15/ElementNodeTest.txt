public class ElementNodeTest extends AbstractPathTestSupport {
  private static RootNode rootNode;
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/xpath/xpathmapper";
  }
  @Before public void init() throws Exception {
    final File file=new File(getPath("InputXpathMapperAst.java"));
    final DetailAST rootAst=JavaParser.parseFile(file,JavaParser.Options.WITHOUT_COMMENTS);
    rootNode=new RootNode(rootAst);
  }
  @Test public void testGetParent() throws Exception {
    final String xpath="//OBJBLOCK";
    final List<NodeInfo> nodes=getXpathItems(xpath,rootNode);
    assertEquals("Invalid number of nodes",1,nodes.size());
    final AbstractNode parent=(AbstractNode)nodes.get(0).getParent();
    assertEquals("Invalid token type",TokenTypes.CLASS_DEF,parent.getTokenType());
  }
  @Test public void testRootOfElementNode() throws Exception {
    final String xpath="//OBJBLOCK";
    final List<NodeInfo> nodes=getXpathItems(xpath,rootNode);
    assertEquals("Invalid number of nodes",1,nodes.size());
    final AbstractNode root=(AbstractNode)nodes.get(0).getRoot();
    assertEquals("Invalid token type",TokenTypes.EOF,root.getTokenType());
    assertTrue("Should return true, because selected node is RootNode",root instanceof RootNode);
  }
}
