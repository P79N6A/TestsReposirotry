public class XpathRegressionOneStatementPerLineTest extends AbstractXpathTestSupport {
  private final String checkName=OneStatementPerLineCheck.class.getSimpleName();
  @Override protected String getCheckName(){
    return checkName;
  }
  @Test public void testOne() throws Exception {
    final File fileToProcess=new File(getPath("SuppressionXpathRegressionOneStatementPerLineOne.java"));
    final DefaultConfiguration moduleConfig=createModuleConfig(OneStatementPerLineCheck.class);
    final String[] expectedViolation={"4:17: " + getCheckMessage(OneStatementPerLineCheck.class,OneStatementPerLineCheck.MSG_KEY)};
    final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionOneStatementPerLineOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/SEMI");
    runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);
  }
  @Test public void testTwo() throws Exception {
    final File fileToProcess=new File(getPath("SuppressionXpathRegressionOneStatementPerLineTwo.java"));
    final DefaultConfiguration moduleConfig=createModuleConfig(OneStatementPerLineCheck.class);
    final String[] expectedViolation={"9:39: " + getCheckMessage(OneStatementPerLineCheck.class,OneStatementPerLineCheck.MSG_KEY)};
    final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionOneStatementPerLineTwo']/OBJBLOCK" + "/METHOD_DEF[@text='foo5']/SLIST/LITERAL_FOR/SLIST/SEMI");
    runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);
  }
}
