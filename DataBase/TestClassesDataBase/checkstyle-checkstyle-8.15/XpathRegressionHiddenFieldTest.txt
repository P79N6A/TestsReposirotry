public class XpathRegressionHiddenFieldTest extends AbstractXpathTestSupport {
  private final String checkName=HiddenFieldCheck.class.getSimpleName();
  @Override protected String getCheckName(){
    return checkName;
  }
  @Test public void testOne() throws Exception {
    final File fileToProcess=new File(getPath("SuppressionXpathRegressionExplicitOne.java"));
    final DefaultConfiguration moduleConfig=createModuleConfig(HiddenFieldCheck.class);
    final String[] expectedViolation={"10:34: " + getCheckMessage(HiddenFieldCheck.class,HiddenFieldCheck.MSG_KEY,"value")};
    final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionExplicitOne']/OBJBLOCK" + "/INSTANCE_INIT/SLIST/EXPR/METHOD_CALL/ELIST/LAMBDA/PARAMETERS" + "/PARAMETER_DEF[@text='value']/IDENT");
    runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);
  }
  @Test public void testTwo() throws Exception {
    final File fileToProcess=new File(getPath("SuppressionXpathRegressionExplicitTwo.java"));
    final DefaultConfiguration moduleConfig=createModuleConfig(HiddenFieldCheck.class);
    final String[] expectedViolation={"8:45: " + getCheckMessage(HiddenFieldCheck.class,HiddenFieldCheck.MSG_KEY,"other")};
    final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionExplicitTwo']/OBJBLOCK" + "/METHOD_DEF[@text='method']/PARAMETERS/PARAMETER_DEF[@text='other']/IDENT");
    runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);
  }
}
