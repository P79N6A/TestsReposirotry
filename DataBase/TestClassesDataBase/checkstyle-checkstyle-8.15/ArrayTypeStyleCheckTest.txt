public class ArrayTypeStyleCheckTest extends AbstractModuleTestSupport {
  @Override protected String getPackageLocation(){
    return "com/puppycrawl/tools/checkstyle/checks/arraytypestyle";
  }
  @Test public void testGetRequiredTokens(){
    final ArrayTypeStyleCheck checkObj=new ArrayTypeStyleCheck();
    final int[] expected={TokenTypes.ARRAY_DECLARATOR};
    assertArrayEquals("Required tokens differs from expected",expected,checkObj.getRequiredTokens());
  }
  @Test public void testJavaStyleOn() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(ArrayTypeStyleCheck.class);
    final String[] expected={"14:23: " + getCheckMessage(MSG_KEY),"15:18: " + getCheckMessage(MSG_KEY),"21:44: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputArrayTypeStyle.java"),expected);
  }
  @Test public void testJavaStyleOff() throws Exception {
    final DefaultConfiguration checkConfig=createModuleConfig(ArrayTypeStyleCheck.class);
    checkConfig.addAttribute("javaStyle","false");
    final String[] expected={"13:16: " + getCheckMessage(MSG_KEY),"17:39: " + getCheckMessage(MSG_KEY),"23:18: " + getCheckMessage(MSG_KEY),"31:20: " + getCheckMessage(MSG_KEY)};
    verify(checkConfig,getPath("InputArrayTypeStyle.java"),expected);
  }
  @Test public void testGetAcceptableTokens(){
    final int[] expected={TokenTypes.ARRAY_DECLARATOR};
    final ArrayTypeStyleCheck check=new ArrayTypeStyleCheck();
    final int[] actual=check.getAcceptableTokens();
    assertEquals("Amount of acceptable tokens differs from expected",1,actual.length);
    assertArrayEquals("Acceptable tokens differs from expected",expected,actual);
  }
}
