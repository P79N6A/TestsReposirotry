/** 
 * @author Tomasz Bak
 */
public class ZoneAffinityClusterResolverTest {
  @Test public void testApplicationZoneIsFirstOnTheList() throws Exception {
    List<AwsEndpoint> endpoints=SampleCluster.merge(SampleCluster.UsEast1a,SampleCluster.UsEast1b,SampleCluster.UsEast1c);
    ZoneAffinityClusterResolver resolver=new ZoneAffinityClusterResolver(new StaticClusterResolver<>("regionA",endpoints),"us-east-1b",true);
    List<AwsEndpoint> result=resolver.getClusterEndpoints();
    assertThat(result.size(),is(equalTo(endpoints.size())));
    assertThat(result.get(0).getZone(),is(equalTo("us-east-1b")));
  }
  @Test public void testAntiAffinity() throws Exception {
    List<AwsEndpoint> endpoints=SampleCluster.merge(SampleCluster.UsEast1a,SampleCluster.UsEast1b);
    ZoneAffinityClusterResolver resolver=new ZoneAffinityClusterResolver(new StaticClusterResolver<>("regionA",endpoints),"us-east-1b",false);
    List<AwsEndpoint> result=resolver.getClusterEndpoints();
    assertThat(result.size(),is(equalTo(endpoints.size())));
    assertThat(result.get(0).getZone(),is(equalTo("us-east-1a")));
  }
  @Test public void testUnrecognizedZoneIsIgnored() throws Exception {
    List<AwsEndpoint> endpoints=SampleCluster.merge(SampleCluster.UsEast1a,SampleCluster.UsEast1b);
    ZoneAffinityClusterResolver resolver=new ZoneAffinityClusterResolver(new StaticClusterResolver<>("regionA",endpoints),"us-east-1c",true);
    List<AwsEndpoint> result=resolver.getClusterEndpoints();
    assertThat(result.size(),is(equalTo(endpoints.size())));
  }
}
