static class BlockingRequestExecutor implements RequestExecutor<Void> {
  private final CountDownLatch readyLatch=new CountDownLatch(1);
  private final CountDownLatch completeLatch=new CountDownLatch(1);
  @Override public EurekaHttpResponse<Void> execute(  EurekaHttpClient delegate){
    readyLatch.countDown();
    try {
      completeLatch.await();
    }
 catch (    InterruptedException e) {
      throw new IllegalStateException("never released");
    }
    return EurekaHttpResponse.status(200);
  }
  @Override public RequestType getRequestType(){
    return TEST_REQUEST_TYPE;
  }
  void awaitReady(){
    try {
      readyLatch.await();
    }
 catch (    InterruptedException e) {
      throw new IllegalStateException("never released");
    }
  }
  void complete(){
    completeLatch.countDown();
  }
}
