/** 
 * @author David Liu
 */
public class AwsAsgUtilTest {
  private ApplicationInfoManager applicationInfoManager;
  private PeerAwareInstanceRegistry registry;
  private DiscoveryClient client;
  private AwsAsgUtil awsAsgUtil;
  private InstanceInfo instanceInfo;
  @Before public void setUp() throws Exception {
    ConfigurationManager.getConfigInstance().setProperty("eureka.awsAccessId","fakeId");
    ConfigurationManager.getConfigInstance().setProperty("eureka.awsSecretKey","fakeKey");
    AmazonInfo dataCenterInfo=mock(AmazonInfo.class);
    EurekaServerConfig serverConfig=new DefaultEurekaServerConfig();
    InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();
    builder.setIPAddr("10.10.101.00");
    builder.setHostName("fakeHost");
    builder.setAppName("fake-" + UUID.randomUUID());
    builder.setLeaseInfo(LeaseInfo.Builder.newBuilder().build());
    builder.setDataCenterInfo(dataCenterInfo);
    instanceInfo=builder.build();
    applicationInfoManager=new ApplicationInfoManager(new MyDataCenterInstanceConfig(),instanceInfo);
    DefaultEurekaClientConfig clientConfig=new DefaultEurekaClientConfig();
    client=mock(DiscoveryClient.class);
    registry=mock(PeerAwareInstanceRegistry.class);
    awsAsgUtil=spy(new AwsAsgUtil(serverConfig,clientConfig,registry));
  }
  @After public void tearDown() throws Exception {
    ConfigurationManager.getConfigInstance().clear();
  }
  @Test public void testDefaultAsgStatus(){
    Assert.assertEquals(true,awsAsgUtil.isASGEnabled(instanceInfo));
  }
  @Test public void testAsyncLoadingFromCache(){
  }
}
