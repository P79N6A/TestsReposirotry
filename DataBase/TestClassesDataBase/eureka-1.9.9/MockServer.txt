private static class MockServer {
  public final ApplicationResource applicationResource;
  public final PeerReplicationResource replicationResource;
  public final PeerAwareInstanceRegistry registry;
  public MockServer(  String appName,  PeerEurekaNodes peerEurekaNodes) throws Exception {
    ApplicationInfoManager infoManager=new ApplicationInfoManager(new MyDataCenterInstanceConfig());
    DefaultEurekaServerConfig serverConfig=Mockito.spy(new DefaultEurekaServerConfig());
    DefaultEurekaClientConfig clientConfig=new DefaultEurekaClientConfig();
    ServerCodecs serverCodecs=new DefaultServerCodecs(serverConfig);
    EurekaClient eurekaClient=Mockito.mock(EurekaClient.class);
    Mockito.doReturn("true").when(serverConfig).getExperimental("registry.registration.ignoreIfDirtyTimestampIsOlder");
    this.registry=new PeerAwareInstanceRegistryImpl(serverConfig,clientConfig,serverCodecs,eurekaClient);
    this.registry.init(peerEurekaNodes);
    this.applicationResource=new ApplicationResource(appName,serverConfig,registry);
    EurekaServerContext serverContext=Mockito.mock(EurekaServerContext.class);
    Mockito.when(serverContext.getServerConfig()).thenReturn(serverConfig);
    Mockito.when(serverContext.getRegistry()).thenReturn(registry);
    this.replicationResource=new PeerReplicationResource(serverContext);
  }
}
