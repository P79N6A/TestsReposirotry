public class TestKryoSerialization extends BaseSparkTest {
  @Override public boolean useKryo(){
    return true;
  }
  @Test public void testCsvRecordReader() throws Exception {
    SerializerInstance si=sc.env().serializer().newInstance();
    assertTrue(si instanceof KryoSerializerInstance);
    RecordReader r1=new CSVRecordReader(1,'\t');
    RecordReader r2=serDe(r1,si);
    File f=new ClassPathResource("iris_tab_delim.txt").getFile();
    r1.initialize(new FileSplit(f));
    r2.initialize(new FileSplit(f));
    while (r1.hasNext()) {
      assertEquals(r1.next(),r2.next());
    }
    assertFalse(r2.hasNext());
  }
  private <T>T serDe(  T in,  SerializerInstance si){
    ByteBuffer bb=si.serialize(in,null);
    return (T)si.deserialize(bb,null);
  }
}
