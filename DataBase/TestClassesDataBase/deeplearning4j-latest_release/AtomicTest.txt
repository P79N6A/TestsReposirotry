public class AtomicTest {
  @Test public void testEquality_1(){
    val v0=new Atomic<Integer>(1327541);
    val v1=new Atomic<Integer>(1327541);
    val v3=new Atomic<Integer>(1327542);
    assertEquals(v0,v1);
    assertNotEquals(v0,v3);
  }
  @Test public void testSerialization_1() throws Exception {
    val v0=new Atomic<Integer>(1327541);
    try (val baos=new ByteArrayOutputStream()){
      SerializationUtils.serialize(v0,baos);
      try (val bais=new ByteArrayInputStream(baos.toByteArray())){
        Atomic<Integer> v1=SerializationUtils.deserialize(bais);
        assertEquals(v1,v0);
      }
     }
   }
  @Test public void testCas_1() throws Exception {
    val v0=new Atomic<String>();
    v0.cas(null,"alpha");
    assertEquals("alpha",v0.get());
  }
  @Test public void testCas_2() throws Exception {
    val v0=new Atomic<String>("beta");
    v0.cas(null,"alpha");
    assertEquals("beta",v0.get());
  }
}
