public class TestAnalyzeLocal {
  @Rule public TemporaryFolder testDir=new TemporaryFolder();
  @Test public void testAnalysisBasic() throws Exception {
    RecordReader rr=new CSVRecordReader();
    rr.initialize(new FileSplit(new ClassPathResource("iris.txt").getFile()));
    Schema s=new Schema.Builder().addColumnsDouble("0","1","2","3").addColumnInteger("label").build();
    DataAnalysis da=AnalyzeLocal.analyze(s,rr);
    System.out.println(da);
    List<List<Writable>> list=new ArrayList<>();
    rr.reset();
    while (rr.hasNext()) {
      list.add(rr.next());
    }
    INDArray arr=RecordConverter.toMatrix(list);
    INDArray mean=arr.mean(0);
    INDArray std=arr.std(0);
    for (int i=0; i < 5; i++) {
      double m=((NumericalColumnAnalysis)da.getColumnAnalysis().get(i)).getMean();
      double stddev=((NumericalColumnAnalysis)da.getColumnAnalysis().get(i)).getSampleStdev();
      assertEquals(mean.getDouble(i),m,1e-3);
      assertEquals(std.getDouble(i),stddev,1e-3);
    }
  }
}
