private class GpuThreadInternalData extends Thread implements Runnable {
  @Override public void run(){
    log.info(this.getName() + "/" + this.getId()+ " started on device ["+ AtomicAllocator.getInstance().getDeviceId()+ "]");
    Random rnd=new Random(42);
    INDArray array1=Nd4j.create(100,757);
    INDArray array2=Nd4j.create(100,757);
    for (int y=0; y < array1.rows(); y++) {
      float[] srcArray1=new float[757];
      float[] srcArray2=new float[757];
      for (int x=0; x < srcArray1.length; x++) {
        srcArray1[x]=rnd.nextFloat();
        srcArray2[x]=rnd.nextFloat();
      }
      array1.putRow(y,Nd4j.create(srcArray1));
      array2.putRow(y,Nd4j.create(srcArray2));
    }
    double results[]=new double[]{196.73057556152344,187.9628448486328,185.44927978515625,195.71868896484375,201.3914031982422,206.9940948486328,186.59426879882812,178.36427307128906,188.29483032226562,183.08912658691406,193.56333923339844,189.89263916015625,189.0192108154297,193.63824462890625,201.99197387695312,187.71295166015625,197.52166748046875,180.9663848876953,189.44374084472656,186.75148010253906};
    INDArray slice1=null;
    INDArray slice2=null;
    long time1=0;
    long time2=0;
    int cnt=0;
    for (int i=0; i < 100; i++) {
      for (int x=0; x < 20; x++) {
        slice1=array1.slice(x);
        slice2=array2.slice(x);
        time1=System.nanoTime();
        double dotWrapped=Nd4j.getBlasWrapper().dot(slice1,slice2);
        time2=System.nanoTime();
        assertEquals(results[x],dotWrapped,0.001d);
        cnt++;
      }
    }
    log.info("Data deviceId: [" + allocator.getDeviceId(slice1) + "]; Last time: ["+ (time2 - time1)+ "] ns");
  }
}
