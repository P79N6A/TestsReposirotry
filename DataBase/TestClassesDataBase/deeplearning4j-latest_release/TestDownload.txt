/** 
 * Tests downloads and checksum verification.
 * @note This test uses a temporary directory, so local model copies won't be impacted
 * @author Justin Long (crockpotveggies)
 */
@Slf4j public class TestDownload extends BaseDL4JTest {
  @ClassRule public static TemporaryFolder testDir=new TemporaryFolder();
  private static File f;
  @BeforeClass public static void before() throws Exception {
    f=testDir.newFolder();
    DL4JResources.setBaseDirectory(f);
  }
  @AfterClass public static void after(){
    DL4JResources.resetBaseDirectoryLocation();
  }
  @Test public void testDownloadAllModels() throws Exception {
    ZooModel[] models=new ZooModel[]{LeNet.builder().build(),SimpleCNN.builder().build(),UNet.builder().build(),NASNet.builder().build()};
    for (int i=0; i < models.length; i++) {
      log.info("Testing zoo model " + models[i].getClass().getName());
      ZooModel model=models[i];
      for (      PretrainedType pretrainedType : PretrainedType.values()) {
        if (model.pretrainedAvailable(pretrainedType)) {
          model.initPretrained(pretrainedType);
        }
      }
      Nd4j.getWorkspaceManager().destroyAllWorkspacesForCurrentThread();
      System.gc();
      Thread.sleep(1000);
    }
  }
  @Test public void testLabelsDownload() throws Exception {
    assertEquals("person",new COCOLabels().getLabel(0));
    assertEquals("kit fox",new DarknetLabels(true).getLabel(0));
    assertEquals("n02119789",new DarknetLabels(false).getLabel(0));
    assertEquals("tench",new ImageNetLabels().getLabel(0));
  }
}
