private class IterableWithoutException implements Iterable<DataSet> {
  private final AtomicLong counter=new AtomicLong(0);
  private final int datasets;
  public IterableWithoutException(  int datasets){
    this.datasets=datasets;
  }
  @Override public Iterator<DataSet> iterator(){
    counter.set(0);
    return new Iterator<DataSet>(){
      @Override public boolean hasNext(){
        return counter.get() < datasets;
      }
      @Override public DataSet next(){
        counter.incrementAndGet();
        return new DataSet(Nd4j.create(100),Nd4j.create(10));
      }
      @Override public void remove(){
      }
    }
;
  }
}
