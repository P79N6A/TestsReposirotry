/** 
 * Created by Alex on 20/07/2016.
 */
public class TestKryoWarning {
  private static void doTestMLN(  SparkConf sparkConf){
    JavaSparkContext sc=new JavaSparkContext(sparkConf);
    try {
      MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().list().layer(0,new OutputLayer.Builder().nIn(10).nOut(10).build()).build();
      TrainingMaster tm=new ParameterAveragingTrainingMaster.Builder(1).build();
      SparkDl4jMultiLayer sml=new SparkDl4jMultiLayer(sc,conf,tm);
    }
  finally {
      sc.stop();
    }
  }
  private static void doTestCG(  SparkConf sparkConf){
    JavaSparkContext sc=new JavaSparkContext(sparkConf);
    try {
      ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").addLayer("0",new OutputLayer.Builder().nIn(10).nOut(10).build(),"in").setOutputs("0").build();
      TrainingMaster tm=new ParameterAveragingTrainingMaster.Builder(1).build();
      SparkListenable scg=new SparkComputationGraph(sc,conf,tm);
    }
  finally {
      sc.stop();
    }
  }
  @Test @Ignore public void testKryoMessageMLNIncorrectConfig(){
    SparkConf sparkConf=new SparkConf().setMaster("local[*]").setAppName("sparktest").set("spark.serializer","org.apache.spark.serializer.KryoSerializer");
    doTestMLN(sparkConf);
  }
  @Test @Ignore public void testKryoMessageMLNCorrectConfigKryo(){
    SparkConf sparkConf=new SparkConf().setMaster("local[*]").setAppName("sparktest").set("spark.serializer","org.apache.spark.serializer.KryoSerializer").set("spark.kryo.registrator","org.nd4j.Nd4jRegistrator");
    doTestMLN(sparkConf);
  }
  @Test @Ignore public void testKryoMessageMLNCorrectConfigNoKryo(){
    SparkConf sparkConf=new SparkConf().setMaster("local[*]").setAppName("sparktest");
    doTestMLN(sparkConf);
  }
  @Test @Ignore public void testKryoMessageCGIncorrectConfig(){
    SparkConf sparkConf=new SparkConf().setMaster("local[*]").setAppName("sparktest").set("spark.serializer","org.apache.spark.serializer.KryoSerializer");
    doTestCG(sparkConf);
  }
  @Test @Ignore public void testKryoMessageCGCorrectConfigKryo(){
    SparkConf sparkConf=new SparkConf().setMaster("local[*]").setAppName("sparktest").set("spark.serializer","org.apache.spark.serializer.KryoSerializer").set("spark.kryo.registrator","org.nd4j.Nd4jRegistrator");
    doTestCG(sparkConf);
  }
  @Test @Ignore public void testKryoMessageCGCorrectConfigNoKryo(){
    SparkConf sparkConf=new SparkConf().setMaster("local[*]").setAppName("sparktest");
    doTestCG(sparkConf);
  }
}
