/** 
 * @author wangfeng
 * @date June 3,2017
 * @Description
 */
@Slf4j public class ChineseTokenizerTest {
  private final String toTokenize="青山绿水和伟大的科学家让世界更美好和平";
  private final String[] expect={"青山绿水","和","伟大","的","科学家","让","世界","更","美好","和平"};
  @Test public void testChineseTokenizer(){
    TokenizerFactory tokenizerFactory=new ChineseTokenizerFactory();
    Tokenizer tokenizer=tokenizerFactory.create(toTokenize);
    assertEquals(expect.length,tokenizer.countTokens());
    for (int i=0; i < tokenizer.countTokens(); ++i) {
      assertEquals(tokenizer.nextToken(),expect[i]);
    }
  }
  @Ignore @Test public void testFindNamesFromText() throws IOException {
    SentenceIterator iter=new BasicLineIterator("src/test/resources/chineseName.txt");
    log.info("load is right!");
    TokenizerFactory tokenizerFactory=new ChineseTokenizerFactory();
    Word2Vec vec=new Word2Vec.Builder().minWordFrequency(2).iterations(5).layerSize(100).seed(42).learningRate(0.1).windowSize(20).iterate(iter).tokenizerFactory(tokenizerFactory).build();
    vec.fit();
    WordVectorSerializer.writeWordVectors(vec,new File("src/test/resources/chineseNameWordVector.txt"));
  }
}
