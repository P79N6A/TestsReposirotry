/** 
 * @author Adam Gibson
 */
public class TfidfRecordReaderTest {
  @Rule public TemporaryFolder testDir=new TemporaryFolder();
  @Test public void testReader() throws Exception {
    TfidfVectorizer vectorizer=new TfidfVectorizer();
    Configuration conf=new Configuration();
    conf.setInt(TfidfVectorizer.MIN_WORD_FREQUENCY,1);
    conf.setBoolean(RecordReader.APPEND_LABEL,true);
    vectorizer.initialize(conf);
    TfidfRecordReader reader=new TfidfRecordReader();
    File f=testDir.newFolder();
    new ClassPathResource("datavec-data-nlp/labeled/").copyDirectory(f);
    reader.initialize(conf,new FileSplit(f));
    int count=0;
    int[] labelAssertions=new int[3];
    while (reader.hasNext()) {
      Collection<Writable> record=reader.next();
      Iterator<Writable> recordIter=record.iterator();
      NDArrayWritable writable=(NDArrayWritable)recordIter.next();
      labelAssertions[count]=recordIter.next().toInt();
      count++;
    }
    assertArrayEquals(new int[]{0,1,2},labelAssertions);
    assertEquals(3,reader.getLabels().size());
    assertEquals(3,count);
  }
  @Test public void testRecordMetaData() throws Exception {
    TfidfVectorizer vectorizer=new TfidfVectorizer();
    Configuration conf=new Configuration();
    conf.setInt(TfidfVectorizer.MIN_WORD_FREQUENCY,1);
    conf.setBoolean(RecordReader.APPEND_LABEL,true);
    vectorizer.initialize(conf);
    TfidfRecordReader reader=new TfidfRecordReader();
    File f=testDir.newFolder();
    new ClassPathResource("datavec-data-nlp/labeled/").copyDirectory(f);
    reader.initialize(conf,new FileSplit(f));
    while (reader.hasNext()) {
      Record record=reader.nextRecord();
      assertNotNull(record.getMetaData().getURI());
      assertEquals(record.getMetaData().getReaderClass(),TfidfRecordReader.class);
    }
  }
  @Test public void testReadRecordFromMetaData() throws Exception {
    TfidfVectorizer vectorizer=new TfidfVectorizer();
    Configuration conf=new Configuration();
    conf.setInt(TfidfVectorizer.MIN_WORD_FREQUENCY,1);
    conf.setBoolean(RecordReader.APPEND_LABEL,true);
    vectorizer.initialize(conf);
    TfidfRecordReader reader=new TfidfRecordReader();
    File f=testDir.newFolder();
    new ClassPathResource("datavec-data-nlp/labeled/").copyDirectory(f);
    reader.initialize(conf,new FileSplit(f));
    Record record=reader.nextRecord();
    Record reread=reader.loadFromMetaData(record.getMetaData());
    assertEquals(record.getRecord().size(),2);
    assertEquals(reread.getRecord().size(),2);
    assertEquals(record.getRecord().get(0),reread.getRecord().get(0));
    assertEquals(record.getRecord().get(1),reread.getRecord().get(1));
    assertEquals(record.getMetaData(),reread.getMetaData());
  }
}
