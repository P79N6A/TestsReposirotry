@Slf4j @RunWith(Parameterized.class) public class NameTests extends BaseNd4jTest {
  public NameTests(  Nd4jBackend backend){
    super(backend);
  }
  @Test public void testNameExtraction_1() throws Exception {
    val str="Name";
    val exp="Name";
    val pair=SameDiff.parseVariable(str);
    assertEquals(exp,pair.getFirst());
    assertEquals(0,pair.getSecond().intValue());
  }
  @Test public void testNameExtraction_2() throws Exception {
    val str="Name_2";
    val exp="Name_2";
    val pair=SameDiff.parseVariable(str);
    assertEquals(exp,pair.getFirst());
    assertEquals(0,pair.getSecond().intValue());
  }
  @Test public void testNameExtraction_3() throws Exception {
    val str="Name_1:2";
    val exp="Name_1";
    val pair=SameDiff.parseVariable(str);
    assertEquals(exp,pair.getFirst());
    assertEquals(2,pair.getSecond().intValue());
  }
  @Test public void testNameExtraction_4() throws Exception {
    val str="Name_1:1:2";
    val exp="Name_1:1";
    val pair=SameDiff.parseVariable(str);
    assertEquals(exp,pair.getFirst());
    assertEquals(2,pair.getSecond().intValue());
  }
  @Override public char ordering(){
    return 'c';
  }
}
