public class OptimizerImport {
  @Test public void importAdam() throws Exception {
    importSequential("modelimport/keras/optimizers/adam.h5");
  }
  @Test public void importAdaMax() throws Exception {
    importSequential("modelimport/keras/optimizers/adamax.h5");
  }
  @Test public void importAdaGrad() throws Exception {
    importSequential("modelimport/keras/optimizers/adagrad.h5");
  }
  @Test public void importAdaDelta() throws Exception {
    importSequential("modelimport/keras/optimizers/adadelta.h5");
  }
  @Test public void importSGD() throws Exception {
    importSequential("modelimport/keras/optimizers/sgd.h5");
  }
  @Test public void importRmsProp() throws Exception {
    importSequential("modelimport/keras/optimizers/rmsprop.h5");
  }
  @Test public void importNadam() throws Exception {
    importSequential("modelimport/keras/optimizers/nadam.h5");
  }
  private void importSequential(  String modelPath) throws Exception {
    ClassPathResource modelResource=new ClassPathResource(modelPath,KerasModelEndToEndTest.class.getClassLoader());
    File modelFile=DL4JFileUtils.createTempFile("tempModel",".h5");
    Files.copy(modelResource.getInputStream(),modelFile.toPath(),StandardCopyOption.REPLACE_EXISTING);
    KerasModelBuilder builder=new KerasModel().modelBuilder().modelHdf5Filename(modelFile.getAbsolutePath()).enforceTrainingConfig(false);
    KerasSequentialModel model=builder.buildSequential();
    model.getMultiLayerNetwork();
  }
}
