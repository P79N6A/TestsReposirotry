/** 
 * @author raver119@gmail.com
 */
@Ignore public class CudaHalfsTest {
  @Before public void setUp(){
    DataTypeUtil.setDTypeForContext(DataBuffer.Type.HALF);
  }
  @Test public void testSerialization1() throws Exception {
    INDArray array=Nd4j.linspace(1,5,10);
    File tempFile=File.createTempFile("alpha","11");
    tempFile.deleteOnExit();
    try (DataOutputStream dos=new DataOutputStream(Files.newOutputStream(Paths.get(tempFile.getAbsolutePath())))){
      Nd4j.write(array,dos);
    }
     DataInputStream dis=new DataInputStream(new FileInputStream(tempFile.getAbsoluteFile()));
    INDArray restored=Nd4j.read(dis);
    assertEquals(array,restored);
  }
  @Test public void testSerialization2() throws Exception {
    INDArray array=Nd4j.linspace(1,5,10);
    File tempFile=File.createTempFile("alpha","11");
    tempFile.deleteOnExit();
    try (DataOutputStream dos=new DataOutputStream(Files.newOutputStream(Paths.get(tempFile.getAbsolutePath())))){
      Nd4j.write(array,dos);
    }
     DataInputStream dis=new DataInputStream(new FileInputStream(tempFile.getAbsoluteFile()));
    DataTypeUtil.setDTypeForContext(DataBuffer.Type.FLOAT);
    INDArray exp=Nd4j.linspace(1,5,10);
    INDArray restored=Nd4j.read(dis);
    assertArrayEquals(exp.data().asFloat(),restored.data().asFloat(),0.1f);
    assertEquals(DataBuffer.Type.FLOAT,exp.data().dataType());
  }
  @Test public void test2D1() throws Exception {
    float[][] array=new float[5][5];
    for (int i=0; i < array.length; i++) {
      for (int j=0; j < array[0].length; j++) {
        array[i][j]=i;
      }
    }
    INDArray data=Nd4j.create(array);
    assertEquals(25,data.length());
    for (int i=0; i < array.length; i++) {
      INDArray row=data.getRow(i);
      for (int x=0; x < row.length(); x++) {
        assertEquals((float)i,row.getFloat(x),0.1f);
      }
    }
    System.out.println(data);
  }
}
