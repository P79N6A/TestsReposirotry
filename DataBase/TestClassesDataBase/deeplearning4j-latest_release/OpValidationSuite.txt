/** 
 * Op validation test suite. Should include all classes using the  {@link OpValidation} test framework, so test coverage can be calculated and reported.NOTE: For the op coverage information to work properly, we need the op validation to be run via this suite. Otherwise, we could report coverage information before all test have run - underestimating coverage. For op coverage information to be collected, you need to execute a test like:<br> SINGLE OP TEST: OpValidation.validate(new OpTestCase(op).expectedOutputs(0, <INDArray here>)) - OpTestCase checks the output values of a single op, no backprop/gradients<br> - Returns an error message if op failed, or NULL if op passed<br> SAMEDIFF TEST:  OpValidation.validate(new TestCase(sameDiff).gradientCheck(true).expectedOutput("someVar", <INDArray>))<br> - These tests can be used to check both gradients AND expected output, collecting coverage as required<br> - Returns an error message if op failed, or NULL if op passed<br> - Note gradientCheck(true) is the default<br> - Expected outputs are optional<br> - You can specify a function for validating the correctness of each output using  {@link org.nd4j.autodiff.validation.TestCase#expected(String,Function)}<br>
 */
@RunWith(Suite.class) @Suite.SuiteClasses({LayerOpValidation.class,LossOpValidation.class,MiscOpValidation.class,RandomOpValidation.class,ReductionBpOpValidation.class,ReductionOpValidation.class,ShapeOpValidation.class,TransformOpValidation.class,TFGraphTestAllSameDiff.class,TFGraphTestAllLibnd4j.class}) @Ignore public class OpValidationSuite {
  public static final boolean IGNORE_FAILING=true;
  public static void ignoreFailing(){
    assumeFalse(IGNORE_FAILING);
  }
  private static DataBuffer.Type initialType;
  @BeforeClass public static void beforeClass() throws Exception {
    Nd4j.create(1);
    initialType=Nd4j.dataType();
    Nd4j.setDataType(DataBuffer.Type.DOUBLE);
    Nd4j.getRandom().setSeed(123);
  }
  @AfterClass public static void afterClass() throws Exception {
    Nd4j.setDataType(initialType);
    OpValidation.logCoverageInformation(true,true,true,true,true);
  }
}
