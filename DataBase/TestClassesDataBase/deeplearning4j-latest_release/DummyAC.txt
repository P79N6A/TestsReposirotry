public static class DummyAC<NN extends DummyAC> implements IActorCritic<NN> {
  NeuralNetwork nn;
  DummyAC(  NeuralNetwork nn){
    this.nn=nn;
  }
  @Override public NeuralNetwork[] getNeuralNetworks(){
    return new NeuralNetwork[]{nn};
  }
  @Override public boolean isRecurrent(){
    throw new UnsupportedOperationException();
  }
  @Override public void reset(){
    throw new UnsupportedOperationException();
  }
  @Override public void fit(  INDArray input,  INDArray[] labels){
    throw new UnsupportedOperationException();
  }
  @Override public INDArray[] outputAll(  INDArray batch){
    return new INDArray[]{batch,batch};
  }
  @Override public NN clone(){
    throw new UnsupportedOperationException();
  }
  @Override public void copy(  NN from){
    throw new UnsupportedOperationException();
  }
  @Override public Gradient[] gradient(  INDArray input,  INDArray[] labels){
    throw new UnsupportedOperationException();
  }
  @Override public void applyGradient(  Gradient[] gradient,  int batchSize){
    throw new UnsupportedOperationException();
  }
  @Override public void save(  OutputStream streamValue,  OutputStream streamPolicy) throws IOException {
    throw new UnsupportedOperationException();
  }
  @Override public void save(  String pathValue,  String pathPolicy) throws IOException {
    throw new UnsupportedOperationException();
  }
  @Override public double getLatestScore(){
    throw new UnsupportedOperationException();
  }
  @Override public void save(  OutputStream os) throws IOException {
    throw new UnsupportedOperationException();
  }
  @Override public void save(  String filename) throws IOException {
    throw new UnsupportedOperationException();
  }
}
