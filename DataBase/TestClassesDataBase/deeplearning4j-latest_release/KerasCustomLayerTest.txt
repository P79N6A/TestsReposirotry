/** 
 * Test import of Keras custom layers. Must be run manually, since user must download weights and config from http://blob.deeplearning4j.org/models/googlenet_keras_weights.h5 http://blob.deeplearning4j.org/models/googlenet_config.json
 * @author Justin Long (crockpotveggies)
 */
@Slf4j public class KerasCustomLayerTest {
  @Rule public TemporaryFolder testDir=new TemporaryFolder();
  @Ignore @Test public void testCustomLayerImport() throws Exception {
    String kerasWeightsAndConfigUrl=DL4JResources.getURLString("googlenet_keras_weightsandconfig.h5");
    File cachedKerasFile=testDir.newFile("googlenet_keras_weightsandconfig.h5");
    String outputPath=testDir.newFile("googlenet_dl4j_inference.zip").getAbsolutePath();
    KerasLayer.registerCustomLayer("PoolHelper",KerasPoolHelper.class);
    KerasLayer.registerCustomLayer("LRN",KerasLRN.class);
    if (!cachedKerasFile.exists()) {
      log.info("Downloading model to " + cachedKerasFile.toString());
      FileUtils.copyURLToFile(new URL(kerasWeightsAndConfigUrl),cachedKerasFile);
      cachedKerasFile.deleteOnExit();
    }
    org.deeplearning4j.nn.api.Model importedModel=KerasModelImport.importKerasModelAndWeights(cachedKerasFile.getAbsolutePath());
    ModelSerializer.writeModel(importedModel,outputPath,false);
    ComputationGraph serializedModel=ModelSerializer.restoreComputationGraph(outputPath);
    log.info(serializedModel.summary());
  }
}
