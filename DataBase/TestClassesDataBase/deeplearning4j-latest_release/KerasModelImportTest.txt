/** 
 * Test import of Keras models.
 */
@Slf4j public class KerasModelImportTest {
  ClassLoader classLoader=KerasModelImportTest.class.getClassLoader();
  @Test public void testH5WithoutTensorflowScope() throws Exception {
    MultiLayerNetwork model=loadModel("modelimport/keras/tfscope/model.h5");
    assertNotNull(model);
  }
  @Test public void testH5WithTensorflowScope() throws Exception {
    MultiLayerNetwork model=loadModel("modelimport/keras/tfscope/model.h5.with.tensorflow.scope");
    assertNotNull(model);
  }
  @Test public void testWeightAndJsonWithoutTensorflowScope() throws Exception {
    MultiLayerNetwork model=loadModel("modelimport/keras/tfscope/model.json","modelimport/keras/tfscope/model.weight");
    assertNotNull(model);
  }
  @Test public void testWeightAndJsonWithTensorflowScope() throws Exception {
    MultiLayerNetwork model=loadModel("modelimport/keras/tfscope/model.json.with.tensorflow.scope","modelimport/keras/tfscope/model.weight.with.tensorflow.scope");
    assertNotNull(model);
  }
  private MultiLayerNetwork loadModel(  String modelJsonFilename,  String modelWeightFilename) throws NullPointerException {
    ClassPathResource modelResource=new ClassPathResource(modelJsonFilename,classLoader);
    ClassPathResource weightResource=new ClassPathResource(modelWeightFilename,classLoader);
    MultiLayerNetwork network=null;
    try {
      network=KerasModelImport.importKerasSequentialModelAndWeights(modelResource.getFile().getAbsolutePath(),weightResource.getFile().getAbsolutePath(),false);
    }
 catch (    IOException|InvalidKerasConfigurationException|UnsupportedKerasConfigurationException e) {
      e.printStackTrace();
    }
    return network;
  }
  private MultiLayerNetwork loadModel(  String modelFilename){
    ClassPathResource modelResource=new ClassPathResource(modelFilename,classLoader);
    MultiLayerNetwork model=null;
    try {
      model=KerasModelImport.importKerasSequentialModelAndWeights(modelResource.getFile().getAbsolutePath());
    }
 catch (    IOException|InvalidKerasConfigurationException|UnsupportedKerasConfigurationException e) {
      e.printStackTrace();
    }
    return model;
  }
}
