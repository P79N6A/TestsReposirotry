public class MiscRegressionTests {
  @Test public void testFrozen() throws Exception {
    File f=new ClassPathResource("regression_testing/misc/legacy_frozen/configuration.json").getFile();
    String json=FileUtils.readFileToString(f,StandardCharsets.UTF_8.name());
    ComputationGraphConfiguration conf=ComputationGraphConfiguration.fromJson(json);
    int countFrozen=0;
    for (    Map.Entry<String,GraphVertex> e : conf.getVertices().entrySet()) {
      GraphVertex gv=e.getValue();
      assertNotNull(gv);
      if (gv instanceof LayerVertex) {
        LayerVertex lv=(LayerVertex)gv;
        Layer layer=lv.getLayerConf().getLayer();
        if (layer instanceof FrozenLayer)         countFrozen++;
      }
    }
    assertTrue(countFrozen > 0);
  }
  @Test public void testFrozenNewFormat(){
    MultiLayerConfiguration configuration=new NeuralNetConfiguration.Builder().list().layer(0,new FrozenLayer(new DenseLayer.Builder().nIn(10).nOut(10).build())).build();
    String json=configuration.toJson();
    MultiLayerConfiguration fromJson=MultiLayerConfiguration.fromJson(json);
    assertEquals(configuration,fromJson);
  }
}
