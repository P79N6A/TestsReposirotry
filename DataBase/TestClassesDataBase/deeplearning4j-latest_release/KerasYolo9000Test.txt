/** 
 * Import previously stored YOLO9000 Keras net from https://github.com/allanzelener/YAD2K. <p> git clone https://github.com/allanzelener/YAD2K cd YAD2K wget http://pjreddie.com/media/files/yolo.weights wget https://raw.githubusercontent.com/pjreddie/darknet/master/cfg/yolo.cfg python3 yad2k.py yolo.cfg yolo.weights yolo.h5 <p> To run this test put the output of this script on the test resources path.
 * @author Max Pumperla
 */
@Slf4j public class KerasYolo9000Test {
  private static final String TEMP_MODEL_FILENAME="tempModel";
  private static final String H5_EXTENSION=".h5";
  @Rule public TemporaryFolder testDir=new TemporaryFolder();
  @Ignore @Test public void testCustomLayerYoloImport() throws Exception {
    KerasLayer.registerCustomLayer("Lambda",KerasSpaceToDepth.class);
    String modelPath="modelimport/keras/examples/yolo/yolo.h5";
    ClassPathResource modelResource=new ClassPathResource(modelPath,KerasModelEndToEndTest.class.getClassLoader());
    File modelFile=testDir.newFile(TEMP_MODEL_FILENAME + System.currentTimeMillis() + H5_EXTENSION);
    Files.copy(modelResource.getInputStream(),modelFile.toPath(),StandardCopyOption.REPLACE_EXISTING);
    ComputationGraph model=new KerasModel().modelBuilder().modelHdf5Filename(modelFile.getAbsolutePath()).enforceTrainingConfig(false).buildModel().getComputationGraph();
    System.out.println(model.summary());
  }
}
