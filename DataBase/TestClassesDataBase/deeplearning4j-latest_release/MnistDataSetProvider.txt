private static class MnistDataSetProvider implements DataProvider {
  @Override public DataSetIterator trainData(  Map<String,Object> dataParameters){
    try {
      if (dataParameters == null || dataParameters.isEmpty()) {
        return new MnistDataSetIterator(64,10000,false,true,true,123);
      }
      if (dataParameters.containsKey("batchsize")) {
        int b=(Integer)dataParameters.get("batchsize");
        return new MnistDataSetIterator(b,10000,false,true,true,123);
      }
      return new MnistDataSetIterator(64,10000,false,true,true,123);
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  @Override public DataSetIterator testData(  Map<String,Object> dataParameters){
    return trainData(dataParameters);
  }
  @Override public Class<?> getDataType(){
    return DataSetIterator.class;
  }
  @Override public String toString(){
    return "MnistDataSetProvider()";
  }
}
