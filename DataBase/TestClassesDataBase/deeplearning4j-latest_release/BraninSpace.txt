public static class BraninSpace extends AbstractParameterSpace<BraninConfig> {
  private int[] indices;
  private ParameterSpace<Double> first=new ContinuousParameterSpace(-5,10);
  private ParameterSpace<Double> second=new ContinuousParameterSpace(0,15);
  @Override public BraninConfig getValue(  double[] parameterValues){
    double f=first.getValue(parameterValues);
    double s=second.getValue(parameterValues);
    return new BraninConfig(f,s);
  }
  @Override public int numParameters(){
    return 2;
  }
  @Override public List<ParameterSpace> collectLeaves(){
    List<ParameterSpace> list=new ArrayList<>();
    list.addAll(first.collectLeaves());
    list.addAll(second.collectLeaves());
    return list;
  }
  @Override public boolean isLeaf(){
    return false;
  }
  @Override public void setIndices(  int... indices){
    throw new UnsupportedOperationException();
  }
}
