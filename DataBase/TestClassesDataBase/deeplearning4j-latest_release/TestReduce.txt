/** 
 * Created by Alex on 21/03/2016.
 */
public class TestReduce {
  @Test public void testReducerDouble(){
    List<List<Writable>> inputs=new ArrayList<>();
    inputs.add(Arrays.asList((Writable)new Text("1"),new Text("2")));
    inputs.add(Arrays.asList((Writable)new Text("1"),new Text("2")));
    inputs.add(Arrays.asList((Writable)new Text("1"),new Text("2")));
    Map<StringReduceOp,String> exp=new LinkedHashMap<>();
    exp.put(StringReduceOp.MERGE,"12");
    exp.put(StringReduceOp.APPEND,"12");
    exp.put(StringReduceOp.PREPEND,"21");
    exp.put(StringReduceOp.REPLACE,"2");
    for (    StringReduceOp op : exp.keySet()) {
      Schema schema=new Schema.Builder().addColumnString("key").addColumnString("column").build();
      StringReducer reducer=new StringReducer.Builder(op).build();
      reducer.setInputSchema(schema);
      List<Writable> out=reducer.reduce(inputs);
      assertEquals(3,out.size());
      assertEquals(exp.get(op),out.get(0).toString());
    }
  }
}
