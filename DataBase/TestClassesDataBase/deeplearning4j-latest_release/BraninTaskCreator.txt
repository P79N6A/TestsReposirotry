public static class BraninTaskCreator implements TaskCreator {
  @Override public Callable<OptimizationResult> create(  final Candidate c,  DataProvider dataProvider,  final ScoreFunction scoreFunction,  final List<StatusListener> statusListeners,  IOptimizationRunner runner){
    return new Callable<OptimizationResult>(){
      @Override public OptimizationResult call() throws Exception {
        BraninConfig candidate=(BraninConfig)c.getValue();
        double score=scoreFunction.score(candidate,null,(Map)null);
        System.out.println(candidate.getX1() + "\t" + candidate.getX2()+ "\t"+ score);
        Thread.sleep(20);
        if (statusListeners != null) {
          for (          StatusListener sl : statusListeners) {
            sl.onCandidateIteration(null,null,0);
          }
        }
        CandidateInfo ci=new CandidateInfo(-1,CandidateStatus.Complete,score,System.currentTimeMillis(),null,null,null,null);
        return new OptimizationResult(c,score,c.getIndex(),null,ci,null);
      }
    }
;
  }
  @Override public Callable<OptimizationResult> create(  Candidate candidate,  Class<? extends DataSource> dataSource,  Properties dataSourceProperties,  ScoreFunction scoreFunction,  List<StatusListener> statusListeners,  IOptimizationRunner runner){
    throw new UnsupportedOperationException();
  }
}
