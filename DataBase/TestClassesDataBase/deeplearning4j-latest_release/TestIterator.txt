private static class TestIterator implements DataSetIterator {
  private int size;
  private int cursor;
  private long delayMSOnNext;
  private TestIterator(  int size,  long delayMSOnNext){
    this.size=size;
    this.cursor=0;
    this.delayMSOnNext=delayMSOnNext;
  }
  @Override public DataSet next(  int num){
    throw new UnsupportedOperationException();
  }
  @Override public int inputColumns(){
    return 1;
  }
  @Override public int totalOutcomes(){
    return 1;
  }
  @Override public boolean resetSupported(){
    return true;
  }
  @Override public boolean asyncSupported(){
    return false;
  }
  @Override public void reset(){
    cursor=0;
  }
  @Override public int batch(){
    return 1;
  }
  @Override public void setPreProcessor(  DataSetPreProcessor preProcessor){
    throw new UnsupportedOperationException();
  }
  @Override public DataSetPreProcessor getPreProcessor(){
    throw new UnsupportedOperationException();
  }
  @Override public List<String> getLabels(){
    return null;
  }
  @Override public boolean hasNext(){
    return cursor < size;
  }
  @Override public DataSet next(){
    if (delayMSOnNext > 0) {
      try {
        Thread.sleep(delayMSOnNext);
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
    INDArray features=Nd4j.scalar(cursor);
    INDArray labels=Nd4j.scalar(cursor);
    cursor++;
    return new DataSet(features,labels);
  }
  @Override public void remove(){
  }
}
