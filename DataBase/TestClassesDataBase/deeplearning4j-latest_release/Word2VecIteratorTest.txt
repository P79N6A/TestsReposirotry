/** 
 * Created by agibsonccc on 3/5/15.
 */
public class Word2VecIteratorTest {
  private Word2Vec vec;
  @Rule public TemporaryFolder testDir=new TemporaryFolder();
  @Before public void before() throws Exception {
    if (vec == null) {
      ClassPathResource resource=new ClassPathResource("/labeled/");
      File dir=testDir.newFolder();
      resource.copyDirectory(dir);
      SentenceIterator iter=UimaSentenceIterator.createWithPath(dir.getAbsolutePath());
      new File("cache.ser").delete();
      TokenizerFactory t=new UimaTokenizerFactory();
      vec=new Word2Vec.Builder().minWordFrequency(1).iterations(5).layerSize(100).stopWords(new ArrayList<String>()).useUnknown(true).windowSize(5).iterate(iter).tokenizerFactory(t).build();
      vec.fit();
    }
  }
  @Test public void testLabeledExample() throws Exception {
    INDArray unk=vec.getWordVectorMatrix(Word2Vec.DEFAULT_UNK);
    assertNotEquals(null,unk);
    unk=vec.getWordVectorMatrix("2131241sdasdas");
    assertNotEquals(null,unk);
    ClassPathResource resource=new ClassPathResource("/labeled/");
    File dir=testDir.newFolder();
    resource.copyDirectory(dir);
    Word2VecDataSetIterator iter=new Word2VecDataSetIterator(vec,new LabelAwareFileSentenceIterator(null,dir),Arrays.asList("negative","positive","neutral"));
    DataSet next=iter.next();
  }
}
