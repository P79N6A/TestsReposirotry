/** 
 * WARNING: DO NOT ENABLE (UN-IGNORE) THESE TESTS. They should be run manually, not as part of standard unit test run.
 */
@Ignore public class TestFailureListener extends BaseDL4JTest {
  @Ignore @Test public void testFailureIter5() throws Exception {
    MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Adam(1e-4)).list().layer(0,new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
    MultiLayerNetwork net=new MultiLayerNetwork(conf);
    net.init();
    net.setListeners(new FailureTestingListener(FailureTestingListener.FailureMode.SYSTEM_EXIT_1,new FailureTestingListener.IterationEpochTrigger(false,10)));
    DataSetIterator iter=new IrisDataSetIterator(5,150);
    net.fit(iter);
  }
  @Ignore @Test public void testFailureRandom_OR(){
    MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Adam(1e-4)).list().layer(0,new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
    MultiLayerNetwork net=new MultiLayerNetwork(conf);
    net.init();
    String username=System.getProperty("user.name");
    assertNotNull(username);
    assertFalse(username.isEmpty());
    net.setListeners(new FailureTestingListener(FailureTestingListener.FailureMode.SYSTEM_EXIT_1,new FailureTestingListener.Or(new FailureTestingListener.IterationEpochTrigger(false,10000),new FailureTestingListener.RandomProb(FailureTestingListener.CallType.ANY,0.02))));
    DataSetIterator iter=new IrisDataSetIterator(5,150);
    net.fit(iter);
  }
  @Ignore @Test public void testFailureRandom_AND() throws Exception {
    MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().updater(new Adam(1e-4)).list().layer(0,new OutputLayer.Builder().nIn(4).nOut(3).activation(Activation.SOFTMAX).lossFunction(LossFunctions.LossFunction.MCXENT).build()).build();
    MultiLayerNetwork net=new MultiLayerNetwork(conf);
    net.init();
    String hostname=InetAddress.getLocalHost().getHostName();
    assertNotNull(hostname);
    assertFalse(hostname.isEmpty());
    net.setListeners(new FailureTestingListener(FailureTestingListener.FailureMode.ILLEGAL_STATE,new FailureTestingListener.And(new FailureTestingListener.HostNameTrigger(hostname),new FailureTestingListener.RandomProb(FailureTestingListener.CallType.ANY,0.05))));
    DataSetIterator iter=new IrisDataSetIterator(5,150);
    net.fit(iter);
  }
}
