public static class SameValidator implements ConstraintValidator<Same,Object> {
  private String field;
  private String comparingField;
  private String message;
  public void initialize(  Same constraintAnnotation){
    field=constraintAnnotation.field();
    comparingField=constraintAnnotation.comparingField();
    message=constraintAnnotation.message();
  }
  public boolean isValid(  Object value,  ConstraintValidatorContext context){
    BeanWrapper beanWrapper=new BeanWrapperImpl(value);
    Object fieldValue=beanWrapper.getPropertyValue(field);
    Object comparingFieldValue=beanWrapper.getPropertyValue(comparingField);
    boolean matched=ObjectUtils.nullSafeEquals(fieldValue,comparingFieldValue);
    if (matched) {
      return true;
    }
 else {
      context.disableDefaultConstraintViolation();
      context.buildConstraintViolationWithTemplate(message).addPropertyNode(field).addConstraintViolation();
      return false;
    }
  }
}
