private static class MultipartHandler {
  public Mono<ServerResponse> multipartData(  ServerRequest request){
    return request.body(BodyExtractors.toMultipartData()).flatMap(map -> {
      Map<String,Part> parts=map.toSingleValueMap();
      try {
        assertEquals(2,parts.size());
        assertEquals("foo.txt",((FilePart)parts.get("fooPart")).filename());
        assertEquals("bar",((FormFieldPart)parts.get("barPart")).value());
      }
 catch (      Exception e) {
        return Mono.error(e);
      }
      return ServerResponse.ok().build();
    }
);
  }
  public Mono<ServerResponse> parts(  ServerRequest request){
    return request.body(BodyExtractors.toParts()).collectList().flatMap(parts -> {
      try {
        assertEquals(2,parts.size());
        assertEquals("foo.txt",((FilePart)parts.get(0)).filename());
        assertEquals("bar",((FormFieldPart)parts.get(1)).value());
      }
 catch (      Exception e) {
        return Mono.error(e);
      }
      return ServerResponse.ok().build();
    }
);
  }
}
