private static class MockReference<K,V> implements Reference<K,V> {
  private final int hash;
  private Entry<K,V> entry;
  private final Reference<K,V> next;
  private final LinkedList<MockReference<K,V>> queue;
  public MockReference(  Entry<K,V> entry,  int hash,  Reference<K,V> next,  LinkedList<MockReference<K,V>> queue){
    this.hash=hash;
    this.entry=entry;
    this.next=next;
    this.queue=queue;
  }
  @Override public Entry<K,V> get(){
    return this.entry;
  }
  @Override public int getHash(){
    return this.hash;
  }
  @Override public Reference<K,V> getNext(){
    return this.next;
  }
  @Override public void release(){
    this.queue.add(this);
    this.entry=null;
  }
  public void queueForPurge(){
    this.queue.add(this);
  }
}
