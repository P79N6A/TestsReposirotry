/** 
 * Integration test which verifies correct interaction between the {@link DirtiesContextBeforeModesTestExecutionListener}, {@link DependencyInjectionTestExecutionListener}, and {@link DirtiesContextTestExecutionListener} when{@link DirtiesContext @DirtiesContext} is used at the method level.
 * @author Sam Brannen
 * @since 4.2
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration @FixMethodOrder(MethodSorters.NAME_ASCENDING) public class MethodLevelDirtiesContextTests {
  private static final AtomicInteger contextCount=new AtomicInteger();
@Configuration static class Config {
    @Bean Integer count(){
      return contextCount.incrementAndGet();
    }
  }
  @Autowired private ConfigurableApplicationContext context;
  @Autowired private Integer count;
  @Test public void test01() throws Exception {
    performAssertions(1);
  }
  @Test @DirtiesContext(methodMode=BEFORE_METHOD) public void test02_dirtyContextBeforeTestMethod() throws Exception {
    performAssertions(2);
  }
  @Test @DirtiesContext public void test03_dirtyContextAfterTestMethod() throws Exception {
    performAssertions(2);
  }
  @Test public void test04() throws Exception {
    performAssertions(3);
  }
  private void performAssertions(  int expectedContextCreationCount) throws Exception {
    assertNotNull("context must not be null",this.context);
    assertTrue("context must be active",this.context.isActive());
    assertNotNull("count must not be null",this.count);
    assertEquals("count: ",expectedContextCreationCount,this.count.intValue());
    assertEquals("context creation count: ",expectedContextCreationCount,contextCount.get());
  }
}
