/** 
 * To run the tests in the class, set the following Java system property: {@code -DtestGroups=jmxmp}.
 * @author Rob Harrop
 * @author Chris Beams
 * @author Sam Brannen
 */
public class ConnectorServerFactoryBeanTests extends AbstractMBeanServerTests {
  private static final String OBJECT_NAME="spring:type=connector,name=test";
  @Override protected void onSetUp() throws Exception {
    Assume.group(TestGroup.JMXMP);
  }
  @After @Override public void tearDown() throws Exception {
    Assume.group(TestGroup.JMXMP,() -> super.tearDown());
  }
  @Test public void startupWithLocatedServer() throws Exception {
    ConnectorServerFactoryBean bean=new ConnectorServerFactoryBean();
    bean.afterPropertiesSet();
    try {
      checkServerConnection(getServer());
    }
  finally {
      bean.destroy();
    }
  }
  @Test public void startupWithSuppliedServer() throws Exception {
    Thread.sleep(1);
    ConnectorServerFactoryBean bean=new ConnectorServerFactoryBean();
    bean.setServer(getServer());
    bean.afterPropertiesSet();
    try {
      checkServerConnection(getServer());
    }
  finally {
      bean.destroy();
    }
  }
  @Test public void registerWithMBeanServer() throws Exception {
    Thread.sleep(1);
    ConnectorServerFactoryBean bean=new ConnectorServerFactoryBean();
    bean.setObjectName(OBJECT_NAME);
    bean.afterPropertiesSet();
    try {
      ObjectInstance instance=getServer().getObjectInstance(ObjectName.getInstance(OBJECT_NAME));
      assertNotNull("ObjectInstance should not be null",instance);
    }
  finally {
      bean.destroy();
    }
  }
  @Test public void noRegisterWithMBeanServer() throws Exception {
    ConnectorServerFactoryBean bean=new ConnectorServerFactoryBean();
    bean.afterPropertiesSet();
    try {
      getServer().getObjectInstance(ObjectName.getInstance(OBJECT_NAME));
      fail("Instance should not be found");
    }
 catch (    InstanceNotFoundException ex) {
    }
 finally {
      bean.destroy();
    }
  }
  private void checkServerConnection(  MBeanServer hostedServer) throws IOException, MalformedURLException {
    JMXServiceURL serviceURL=new JMXServiceURL(ConnectorServerFactoryBean.DEFAULT_SERVICE_URL);
    JMXConnector connector=JMXConnectorFactory.connect(serviceURL);
    assertNotNull("Client Connector should not be null",connector);
    MBeanServerConnection connection=connector.getMBeanServerConnection();
    assertNotNull("MBeanServerConnection should not be null",connection);
    assertEquals("Registered MBean count should be the same",hostedServer.getMBeanCount(),connection.getMBeanCount());
  }
}
