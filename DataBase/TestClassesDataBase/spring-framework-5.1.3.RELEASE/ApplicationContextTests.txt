/** 
 * Sample tests demonstrating "mock" server tests binding to server infrastructure declared in a Spring ApplicationContext.
 * @author Rossen Stoyanchev
 * @since 5.0
 */
public class ApplicationContextTests {
  private WebTestClient client;
  @Before public void setUp() throws Exception {
    AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext();
    context.register(WebConfig.class);
    context.refresh();
    this.client=WebTestClient.bindToApplicationContext(context).build();
  }
  @Test public void test() throws Exception {
    this.client.get().uri("/test").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("It works!");
  }
@Configuration @EnableWebFlux static class WebConfig {
    @Bean public TestController controller(){
      return new TestController();
    }
  }
@RestController static class TestController {
    @GetMapping("/test") public String handle(){
      return "It works!";
    }
  }
}
