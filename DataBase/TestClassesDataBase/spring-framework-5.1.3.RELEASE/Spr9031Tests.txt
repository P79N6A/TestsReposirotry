/** 
 * Unit tests cornering bug SPR-9031.
 * @author Chris Beams
 * @since 3.1.1
 */
public class Spr9031Tests {
  /** 
 * Use of @Import to register LowLevelConfig results in ASM-based annotation processing.
 */
  @Test public void withAsmAnnotationProcessing(){
    AnnotationConfigApplicationContext ctx=new AnnotationConfigApplicationContext();
    ctx.register(HighLevelConfig.class);
    ctx.refresh();
    assertThat(ctx.getBean(LowLevelConfig.class).scanned,not(nullValue()));
  }
  /** 
 * Direct registration of LowLevelConfig results in reflection-based annotation processing.
 */
  @Test public void withoutAsmAnnotationProcessing(){
    AnnotationConfigApplicationContext ctx=new AnnotationConfigApplicationContext();
    ctx.register(LowLevelConfig.class);
    ctx.refresh();
    assertThat(ctx.getBean(LowLevelConfig.class).scanned,not(nullValue()));
  }
@Configuration @Import(LowLevelConfig.class) static class HighLevelConfig {
  }
@Configuration @ComponentScan(basePackages="org.springframework.context.annotation.configuration.spr9031.scanpackage",includeFilters={@Filter(MarkerAnnotation.class)}) static class LowLevelConfig {
    @Autowired Spr9031Component scanned;
  }
  public @interface MarkerAnnotation {}
}
