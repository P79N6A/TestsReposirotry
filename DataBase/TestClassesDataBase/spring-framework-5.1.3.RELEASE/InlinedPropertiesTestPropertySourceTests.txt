/** 
 * Integration tests for  {@link TestPropertySource @TestPropertySource} support withinlined properties.
 * @author Sam Brannen
 * @since 4.1
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration @TestPropertySource(properties={"","foo = bar","baz quux","enigma: 42","x.y.z = a=b=c","server.url = http://example.com","key.value.1: key=value","key.value.2 key=value","key.value.3 key:value"}) public class InlinedPropertiesTestPropertySourceTests {
  @Autowired private ConfigurableEnvironment env;
  private String property(  String key){
    return env.getProperty(key);
  }
  @Test public void propertiesAreAvailableInEnvironment(){
    assertThat(property("foo"),is("bar"));
    assertThat(property("baz"),is("quux"));
    assertThat(property("enigma"),is("42"));
    assertThat(property("x.y.z"),is("a=b=c"));
    assertThat(property("server.url"),is("http://example.com"));
    assertThat(property("key.value.1"),is("key=value"));
    assertThat(property("key.value.2"),is("key=value"));
    assertThat(property("key.value.3"),is("key:value"));
  }
  @Test @SuppressWarnings("rawtypes") public void propertyNameOrderingIsPreservedInEnvironment(){
    final String[] expectedPropertyNames=new String[]{"foo","baz","enigma","x.y.z","server.url","key.value.1","key.value.2","key.value.3"};
    EnumerablePropertySource eps=(EnumerablePropertySource)env.getPropertySources().get(INLINED_PROPERTIES_PROPERTY_SOURCE_NAME);
    assertArrayEquals(expectedPropertyNames,eps.getPropertyNames());
  }
@Configuration static class Config {
  }
}
