/** 
 * Tests for various parameter binding scenarios with before advice.
 * @author Adrian Colyer
 * @author Chris Beams
 */
public class AfterThrowingAdviceBindingTests {
  private ITestBean testBean;
  private AfterThrowingAdviceBindingTestAspect afterThrowingAdviceAspect;
  private AfterThrowingAdviceBindingCollaborator mockCollaborator;
  @Before public void setup(){
    ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext(getClass().getSimpleName() + ".xml",getClass());
    testBean=(ITestBean)ctx.getBean("testBean");
    afterThrowingAdviceAspect=(AfterThrowingAdviceBindingTestAspect)ctx.getBean("testAspect");
    mockCollaborator=mock(AfterThrowingAdviceBindingCollaborator.class);
    afterThrowingAdviceAspect.setCollaborator(mockCollaborator);
  }
  @Test(expected=Throwable.class) public void testSimpleAfterThrowing() throws Throwable {
    this.testBean.exceptional(new Throwable());
    verify(mockCollaborator).noArgs();
  }
  @Test(expected=Throwable.class) public void testAfterThrowingWithBinding() throws Throwable {
    Throwable t=new Throwable();
    this.testBean.exceptional(t);
    verify(mockCollaborator).oneThrowable(t);
  }
  @Test(expected=Throwable.class) public void testAfterThrowingWithNamedTypeRestriction() throws Throwable {
    Throwable t=new Throwable();
    this.testBean.exceptional(t);
    verify(mockCollaborator).noArgs();
    verify(mockCollaborator).oneThrowable(t);
    verify(mockCollaborator).noArgsOnThrowableMatch();
  }
  @Test(expected=Throwable.class) public void testAfterThrowingWithRuntimeExceptionBinding() throws Throwable {
    RuntimeException ex=new RuntimeException();
    this.testBean.exceptional(ex);
    verify(mockCollaborator).oneRuntimeException(ex);
  }
  @Test(expected=Throwable.class) public void testAfterThrowingWithTypeSpecified() throws Throwable {
    this.testBean.exceptional(new Throwable());
    verify(mockCollaborator).noArgsOnThrowableMatch();
  }
  @Test(expected=Throwable.class) public void testAfterThrowingWithRuntimeTypeSpecified() throws Throwable {
    this.testBean.exceptional(new RuntimeException());
    verify(mockCollaborator).noArgsOnRuntimeExceptionMatch();
  }
}
