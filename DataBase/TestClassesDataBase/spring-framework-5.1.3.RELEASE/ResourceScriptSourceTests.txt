/** 
 * @author Rick Evans
 * @author Juergen Hoeller
 */
public class ResourceScriptSourceTests {
  @Test public void doesNotPropagateFatalExceptionOnResourceThatCannotBeResolvedToAFile() throws Exception {
    Resource resource=mock(Resource.class);
    given(resource.lastModified()).willThrow(new IOException());
    ResourceScriptSource scriptSource=new ResourceScriptSource(resource);
    long lastModified=scriptSource.retrieveLastModifiedTime();
    assertEquals(0,lastModified);
  }
  @Test public void beginsInModifiedState() throws Exception {
    Resource resource=mock(Resource.class);
    ResourceScriptSource scriptSource=new ResourceScriptSource(resource);
    assertTrue(scriptSource.isModified());
  }
  @Test public void lastModifiedWorksWithResourceThatDoesNotSupportFileBasedReading() throws Exception {
    Resource resource=mock(Resource.class);
    given(resource.lastModified()).willReturn(100L,100L,200L);
    given(resource.getInputStream()).willReturn(StreamUtils.emptyInput());
    ResourceScriptSource scriptSource=new ResourceScriptSource(resource);
    assertTrue("ResourceScriptSource must start off in the 'isModified' state (it obviously isn't).",scriptSource.isModified());
    scriptSource.getScriptAsString();
    assertFalse("ResourceScriptSource must not report back as being modified if the underlying File resource is not reporting a changed lastModified time.",scriptSource.isModified());
    assertTrue("ResourceScriptSource must report back as being modified if the underlying File resource is reporting a changed lastModified time.",scriptSource.isModified());
  }
  @Test public void lastModifiedWorksWithResourceThatDoesNotSupportFileBasedAccessAtAll() throws Exception {
    Resource resource=new ByteArrayResource(new byte[0]);
    ResourceScriptSource scriptSource=new ResourceScriptSource(resource);
    assertTrue("ResourceScriptSource must start off in the 'isModified' state (it obviously isn't).",scriptSource.isModified());
    scriptSource.getScriptAsString();
    assertFalse("ResourceScriptSource must not report back as being modified if the underlying File resource is not reporting a changed lastModified time.",scriptSource.isModified());
    assertFalse("ResourceScriptSource must not report back as being modified if the underlying File resource is not reporting a changed lastModified time.",scriptSource.isModified());
  }
}
