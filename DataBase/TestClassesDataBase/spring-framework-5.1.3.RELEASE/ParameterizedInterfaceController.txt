/** 
 * CONTROLLER WITH PARAMETERIZED INTERFACE <p>All annotations can be on interface except parameter annotations. <p>Cannot be used as JDK dynamic proxy since parameterized interface does not contain type information.
 */
static class ParameterizedInterfaceController implements MappingGenericInterface<String,Date,Date> {
  @Override @InitBinder public void initBinder(  WebDataBinder dataBinder,  @RequestParam("datePattern") String thePattern){
    CustomDateEditor dateEditor=new CustomDateEditor(new SimpleDateFormat(thePattern),false);
    dataBinder.registerCustomEditor(Date.class,dateEditor);
  }
  @Override @ModelAttribute public void initModel(  @RequestHeader("header1") Date date,  Model model){
    model.addAttribute("attr1",date);
  }
  @Override @RequestMapping(value="/path1/path2",method=RequestMethod.POST) @ModelAttribute("attr2") public Date handle(  @RequestHeader("header2") Date date,  Model model) throws Exception {
    return date;
  }
  @Override @ExceptionHandler(Exception.class) @ResponseBody public String handleException(  Exception exception){
    return exception.getMessage();
  }
}
