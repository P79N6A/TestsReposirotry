/** 
 * Regardless of the current context object, or root context object, this resolver can tell you what colour a fruit is ! It only supports property reading, not writing.  To support writing it would need to override canWrite() and write()
 */
private static class FruitColourAccessor implements PropertyAccessor {
  private static Map<String,Color> propertyMap=new HashMap<>();
static {
    propertyMap.put("banana",Color.yellow);
    propertyMap.put("apple",Color.red);
    propertyMap.put("orange",Color.orange);
  }
  /** 
 * Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it
 */
  @Override public Class<?>[] getSpecificTargetClasses(){
    return null;
  }
  @Override public boolean canRead(  EvaluationContext context,  Object target,  String name) throws AccessException {
    return propertyMap.containsKey(name);
  }
  @Override public TypedValue read(  EvaluationContext context,  Object target,  String name) throws AccessException {
    return new TypedValue(propertyMap.get(name));
  }
  @Override public boolean canWrite(  EvaluationContext context,  Object target,  String name) throws AccessException {
    return false;
  }
  @Override public void write(  EvaluationContext context,  Object target,  String name,  Object newValue) throws AccessException {
  }
}
