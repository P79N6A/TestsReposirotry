private static class TestBrokerMessageHandler extends AbstractBrokerMessageHandler implements ApplicationEventPublisher {
  private final List<Message<?>> messages=new ArrayList<>();
  private final List<Boolean> availabilityEvents=new ArrayList<>();
  private TestBrokerMessageHandler(){
    super(mock(SubscribableChannel.class),mock(MessageChannel.class),mock(SubscribableChannel.class));
    setApplicationEventPublisher(this);
  }
  @Override protected void handleMessageInternal(  Message<?> message){
    this.messages.add(message);
  }
  @Override public void publishEvent(  ApplicationEvent event){
    publishEvent((Object)event);
  }
  @Override public void publishEvent(  Object event){
    if (event instanceof BrokerAvailabilityEvent) {
      this.availabilityEvents.add(((BrokerAvailabilityEvent)event).isBrokerAvailable());
    }
  }
}
