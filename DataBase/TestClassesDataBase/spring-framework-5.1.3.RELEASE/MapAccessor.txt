static class MapAccessor implements PropertyAccessor {
  @Override public Class<?>[] getSpecificTargetClasses(){
    return new Class<?>[]{Map.class};
  }
  @Override public boolean canRead(  EvaluationContext context,  Object target,  String name) throws AccessException {
    return (((Map<?,?>)target).containsKey(name));
  }
  @Override public TypedValue read(  EvaluationContext context,  Object target,  String name) throws AccessException {
    return new TypedValue(((Map<?,?>)target).get(name));
  }
  @Override public boolean canWrite(  EvaluationContext context,  Object target,  String name) throws AccessException {
    return true;
  }
  @Override @SuppressWarnings("unchecked") public void write(  EvaluationContext context,  Object target,  String name,  Object newValue) throws AccessException {
    ((Map<String,Object>)target).put(name,newValue);
  }
}
