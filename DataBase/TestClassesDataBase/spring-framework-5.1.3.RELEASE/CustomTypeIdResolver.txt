public static class CustomTypeIdResolver implements TypeIdResolver {
  @Autowired private Capitalizer capitalizer;
  public static boolean isAutowiredFiledInitialized=false;
  public CustomTypeIdResolver(){
  }
  @Override public String idFromValueAndType(  Object o,  Class<?> type){
    return type.getClass().getName();
  }
  @Override public JsonTypeInfo.Id getMechanism(){
    return JsonTypeInfo.Id.CUSTOM;
  }
  public JavaType typeFromId(  String s){
    return TypeFactory.defaultInstance().constructFromCanonical(s);
  }
  @Override public String idFromValue(  Object value){
    isAutowiredFiledInitialized=(this.capitalizer != null);
    return value.getClass().getName();
  }
  @Override public void init(  JavaType type){
  }
  @Override public String idFromBaseType(){
    return null;
  }
  @Override public JavaType typeFromId(  DatabindContext context,  String id){
    return null;
  }
  public String getDescForKnownTypeIds(){
    return null;
  }
}
