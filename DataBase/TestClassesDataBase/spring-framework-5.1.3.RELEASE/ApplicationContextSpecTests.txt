/** 
 * Unit tests with  {@link ApplicationContextSpec}.
 * @author Rossen Stoyanchev
 */
public class ApplicationContextSpecTests {
  @Test public void sessionManagerBean(){
    ApplicationContext context=new AnnotationConfigApplicationContext(WebConfig.class);
    ApplicationContextSpec spec=new ApplicationContextSpec(context);
    WebTestClient testClient=spec.configureClient().build();
    for (int i=0; i < 2; i++) {
      testClient.get().uri("/sessionClassName").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("MockWebSession");
    }
  }
@Configuration @EnableWebFlux static class WebConfig {
    @Bean public RouterFunction<?> handler(){
      return RouterFunctions.route().GET("/sessionClassName",request -> request.session().flatMap(session -> {
        String className=session.getClass().getSimpleName();
        return ServerResponse.ok().syncBody(className);
      }
)).build();
    }
    @Bean public WebSessionManager webSessionManager(){
      MockWebSession session=new MockWebSession();
      return exchange -> Mono.just(session);
    }
  }
}
