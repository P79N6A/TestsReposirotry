@Aspect class RetryAspect {
  private int beginCalls;
  private int commitCalls;
  private int rollbackCalls;
  @Pointcut("execution(public * UnreliableBean.*(..))") public void execOfPublicMethod(){
  }
  /** 
 * Retry Advice
 */
  @Around("execOfPublicMethod()") public Object retry(  ProceedingJoinPoint jp) throws Throwable {
    boolean retry=true;
    Object o=null;
    while (retry) {
      try {
        retry=false;
        this.beginCalls++;
        try {
          o=jp.proceed();
          this.commitCalls++;
        }
 catch (        RetryableException re) {
          this.rollbackCalls++;
          throw re;
        }
      }
 catch (      RetryableException re) {
        retry=true;
      }
    }
    return o;
  }
  public int getBeginCalls(){
    return this.beginCalls;
  }
  public int getCommitCalls(){
    return this.commitCalls;
  }
  public int getRollbackCalls(){
    return this.rollbackCalls;
  }
}
