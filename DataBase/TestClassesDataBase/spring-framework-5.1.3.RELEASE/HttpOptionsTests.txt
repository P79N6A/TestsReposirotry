/** 
 * Tests for SPR-10093 (support for OPTIONS requests).
 * @author Arnaud Cogolu√®gnes
 */
@RunWith(SpringJUnit4ClassRunner.class) @WebAppConfiguration @ContextConfiguration public class HttpOptionsTests {
  @Autowired private WebApplicationContext wac;
  private MockMvc mockMvc;
  @Before public void setup(){
    this.mockMvc=webAppContextSetup(this.wac).dispatchOptions(true).build();
  }
  @Test public void test() throws Exception {
    MyController controller=this.wac.getBean(MyController.class);
    int initialCount=controller.counter.get();
    this.mockMvc.perform(options("/myUrl")).andExpect(status().isOk());
    assertEquals(initialCount + 1,controller.counter.get());
  }
@Configuration @EnableWebMvc static class WebConfig implements WebMvcConfigurer {
    @Bean public MyController myController(){
      return new MyController();
    }
  }
@Controller private static class MyController {
    private AtomicInteger counter=new AtomicInteger(0);
    @RequestMapping(value="/myUrl",method=RequestMethod.OPTIONS) @ResponseBody public void handle(){
      counter.incrementAndGet();
    }
  }
}
