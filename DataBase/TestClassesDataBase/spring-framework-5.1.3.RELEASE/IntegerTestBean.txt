static class IntegerTestBean {
  private final IntegerWrapper wrapper;
  IntegerTestBean(  Number value){
    this.wrapper=new IntegerWrapper(value);
  }
  public IntegerWrapper getWrapper(){
    return this.wrapper;
  }
  static List<IntegerTestBean> createList(){
    List<IntegerTestBean> list=new ArrayList<>();
    for (int i=0; i < 3; i++) {
      list.add(new IntegerTestBean(i + 5));
    }
    return list;
  }
  static Set<IntegerTestBean> createSet(){
    Set<IntegerTestBean> set=new LinkedHashSet<>();
    for (int i=0; i < 3; i++) {
      set.add(new IntegerTestBean(i + 5));
    }
    return set;
  }
  static Iterable<IntegerTestBean> createIterable(){
    final Set<IntegerTestBean> set=createSet();
    return new Iterable<IntegerTestBean>(){
      @Override public Iterator<IntegerTestBean> iterator(){
        return set.iterator();
      }
    }
;
  }
  static IntegerTestBean[] createArray(){
    IntegerTestBean[] array=new IntegerTestBean[3];
    for (int i=0; i < 3; i++) {
      if (i == 1) {
        array[i]=new IntegerTestBean(5.9f);
      }
 else {
        array[i]=new IntegerTestBean(i + 5);
      }
    }
    return array;
  }
}
