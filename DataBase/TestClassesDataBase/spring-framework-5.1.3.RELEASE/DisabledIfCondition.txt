/** 
 * {@code DisabledIfCondition} is an {@link org.junit.jupiter.api.extension.ExecutionCondition}that supports the  {@link DisabledIf @DisabledIf} annotation when using the <em>SpringTestContext Framework</em> in conjunction with JUnit 5's <em>Jupiter</em> programming model. <p>Any attempt to use the  {@code DisabledIfCondition} without the presence of{@link DisabledIf @DisabledIf} will result in an <em>enabled</em>{@link ConditionEvaluationResult}.
 * @author Sam Brannen
 * @since 5.0
 * @see DisabledIf
 * @see EnabledIf
 * @see SpringExtension
 */
public class DisabledIfCondition extends AbstractExpressionEvaluatingCondition {
  /** 
 * Containers and tests are disabled if  {@code @DisabledIf} is present on thecorresponding test class or test method and the configured expression evaluates to  {@code true}.
 */
  @Override public ConditionEvaluationResult evaluateExecutionCondition(  ExtensionContext context){
    return evaluateAnnotation(DisabledIf.class,DisabledIf::expression,DisabledIf::reason,DisabledIf::loadContext,false,context);
  }
}
