public static class PassThroughFactoryBean<T> implements FactoryBean<T>, BeanFactoryAware {
  private Class<T> type;
  private String instanceName;
  private BeanFactory beanFactory;
  private T instance;
  public PassThroughFactoryBean(  Class<T> type){
    this.type=type;
  }
  public void setInstanceName(  String instanceName){
    this.instanceName=instanceName;
  }
  @Override public void setBeanFactory(  BeanFactory beanFactory){
    this.beanFactory=beanFactory;
  }
  @Override public T getObject(){
    if (instance == null) {
      instance=beanFactory.getBean(instanceName,type);
    }
    return instance;
  }
  @Override public Class<?> getObjectType(){
    return type;
  }
  @Override public boolean isSingleton(){
    return true;
  }
}
