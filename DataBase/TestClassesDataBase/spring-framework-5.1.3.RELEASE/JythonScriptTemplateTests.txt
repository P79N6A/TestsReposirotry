/** 
 * Unit tests for String templates running on Jython.
 * @author Sebastien Deleuze
 */
public class JythonScriptTemplateTests {
  private WebApplicationContext webAppContext;
  private ServletContext servletContext;
  @Before public void setup(){
    this.webAppContext=mock(WebApplicationContext.class);
    this.servletContext=new MockServletContext();
    this.servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,this.webAppContext);
  }
  @Test public void renderTemplate() throws Exception {
    Map<String,Object> model=new HashMap<>();
    model.put("title","Layout example");
    model.put("body","This is the body");
    String url="org/springframework/web/servlet/view/script/jython/template.html";
    MockHttpServletResponse response=render(url,model);
    assertEquals("<html><head><title>Layout example</title></head><body><p>This is the body</p></body></html>",response.getContentAsString());
  }
  private MockHttpServletResponse render(  String viewUrl,  Map<String,Object> model) throws Exception {
    ScriptTemplateView view=createViewWithUrl(viewUrl);
    MockHttpServletResponse response=new MockHttpServletResponse();
    MockHttpServletRequest request=new MockHttpServletRequest();
    view.renderMergedOutputModel(model,request,response);
    return response;
  }
  private ScriptTemplateView createViewWithUrl(  String viewUrl) throws Exception {
    AnnotationConfigApplicationContext ctx=new AnnotationConfigApplicationContext();
    ctx.register(ScriptTemplatingConfiguration.class);
    ctx.refresh();
    ScriptTemplateView view=new ScriptTemplateView();
    view.setApplicationContext(ctx);
    view.setUrl(viewUrl);
    view.afterPropertiesSet();
    return view;
  }
@Configuration static class ScriptTemplatingConfiguration {
    @Bean public ScriptTemplateConfigurer jythonConfigurer(){
      ScriptTemplateConfigurer configurer=new ScriptTemplateConfigurer();
      configurer.setScripts("org/springframework/web/servlet/view/script/jython/render.py");
      configurer.setEngineName("jython");
      configurer.setRenderFunction("render");
      return configurer;
    }
  }
}
