/** 
 * @author Dave Syer
 */
public class CompositeFilterTests {
  @Test public void testCompositeFilter() throws ServletException, IOException {
    ServletContext sc=new MockServletContext();
    MockFilter targetFilter=new MockFilter();
    MockFilterConfig proxyConfig=new MockFilterConfig(sc);
    CompositeFilter filterProxy=new CompositeFilter();
    filterProxy.setFilters(Arrays.asList(targetFilter));
    filterProxy.init(proxyConfig);
    MockHttpServletRequest request=new MockHttpServletRequest();
    MockHttpServletResponse response=new MockHttpServletResponse();
    filterProxy.doFilter(request,response,null);
    assertNotNull(targetFilter.filterConfig);
    assertEquals(Boolean.TRUE,request.getAttribute("called"));
    filterProxy.destroy();
    assertNull(targetFilter.filterConfig);
  }
public static class MockFilter implements Filter {
    public FilterConfig filterConfig;
    @Override public void init(    FilterConfig filterConfig) throws ServletException {
      this.filterConfig=filterConfig;
    }
    @Override public void doFilter(    ServletRequest request,    ServletResponse response,    FilterChain filterChain){
      request.setAttribute("called",Boolean.TRUE);
    }
    @Override public void destroy(){
      this.filterConfig=null;
    }
  }
}
