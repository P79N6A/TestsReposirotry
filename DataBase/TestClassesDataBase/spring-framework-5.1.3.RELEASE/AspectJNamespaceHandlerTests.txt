/** 
 * @author Rob Harrop
 * @author Chris Beams
 */
public class AspectJNamespaceHandlerTests {
  private ParserContext parserContext;
  private CollectingReaderEventListener readerEventListener=new CollectingReaderEventListener();
  private BeanDefinitionRegistry registry=new DefaultListableBeanFactory();
  @Before public void setUp() throws Exception {
    SourceExtractor sourceExtractor=new PassThroughSourceExtractor();
    XmlBeanDefinitionReader reader=new XmlBeanDefinitionReader(this.registry);
    XmlReaderContext readerContext=new XmlReaderContext(null,null,this.readerEventListener,sourceExtractor,reader,null);
    this.parserContext=new ParserContext(readerContext,null);
  }
  @Test public void testRegisterAutoProxyCreator() throws Exception {
    AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals("Incorrect number of definitions registered",1,registry.getBeanDefinitionCount());
    AopNamespaceUtils.registerAspectJAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals("Incorrect number of definitions registered",1,registry.getBeanDefinitionCount());
  }
  @Test public void testRegisterAspectJAutoProxyCreator() throws Exception {
    AopNamespaceUtils.registerAspectJAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals("Incorrect number of definitions registered",1,registry.getBeanDefinitionCount());
    AopNamespaceUtils.registerAspectJAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals("Incorrect number of definitions registered",1,registry.getBeanDefinitionCount());
    BeanDefinition definition=registry.getBeanDefinition(AopConfigUtils.AUTO_PROXY_CREATOR_BEAN_NAME);
    assertEquals("Incorrect APC class",AspectJAwareAdvisorAutoProxyCreator.class.getName(),definition.getBeanClassName());
  }
  @Test public void testRegisterAspectJAutoProxyCreatorWithExistingAutoProxyCreator() throws Exception {
    AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals(1,registry.getBeanDefinitionCount());
    AopNamespaceUtils.registerAspectJAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals("Incorrect definition count",1,registry.getBeanDefinitionCount());
    BeanDefinition definition=registry.getBeanDefinition(AopConfigUtils.AUTO_PROXY_CREATOR_BEAN_NAME);
    assertEquals("APC class not switched",AspectJAwareAdvisorAutoProxyCreator.class.getName(),definition.getBeanClassName());
  }
  @Test public void testRegisterAutoProxyCreatorWhenAspectJAutoProxyCreatorAlreadyExists() throws Exception {
    AopNamespaceUtils.registerAspectJAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals(1,registry.getBeanDefinitionCount());
    AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(this.parserContext,null);
    assertEquals("Incorrect definition count",1,registry.getBeanDefinitionCount());
    BeanDefinition definition=registry.getBeanDefinition(AopConfigUtils.AUTO_PROXY_CREATOR_BEAN_NAME);
    assertEquals("Incorrect APC class",AspectJAwareAdvisorAutoProxyCreator.class.getName(),definition.getBeanClassName());
  }
}
