class MapAwareMethodInterceptor implements MethodInterceptor {
  private final Map<String,String> expectedValues;
  private final Map<String,String> valuesToAdd;
  public MapAwareMethodInterceptor(  Map<String,String> expectedValues,  Map<String,String> valuesToAdd){
    this.expectedValues=expectedValues;
    this.valuesToAdd=valuesToAdd;
  }
  @Override public Object invoke(  MethodInvocation invocation) throws Throwable {
    ReflectiveMethodInvocation rmi=(ReflectiveMethodInvocation)invocation;
    for (Iterator<String> it=rmi.getUserAttributes().keySet().iterator(); it.hasNext(); ) {
      Object key=it.next();
      assertEquals(expectedValues.get(key),rmi.getUserAttributes().get(key));
    }
    rmi.getUserAttributes().putAll(valuesToAdd);
    return invocation.proceed();
  }
}
