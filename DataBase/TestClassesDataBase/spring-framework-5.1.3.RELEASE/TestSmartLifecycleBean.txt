private static class TestSmartLifecycleBean extends TestLifecycleBean implements SmartLifecycle {
  private final int phase;
  private final int shutdownDelay;
  private volatile boolean autoStartup=true;
  static TestSmartLifecycleBean forStartupTests(  int phase,  CopyOnWriteArrayList<Lifecycle> startedBeans){
    return new TestSmartLifecycleBean(phase,0,startedBeans,null);
  }
  static TestSmartLifecycleBean forShutdownTests(  int phase,  int shutdownDelay,  CopyOnWriteArrayList<Lifecycle> stoppedBeans){
    return new TestSmartLifecycleBean(phase,shutdownDelay,null,stoppedBeans);
  }
  private TestSmartLifecycleBean(  int phase,  int shutdownDelay,  CopyOnWriteArrayList<Lifecycle> startedBeans,  CopyOnWriteArrayList<Lifecycle> stoppedBeans){
    super(startedBeans,stoppedBeans);
    this.phase=phase;
    this.shutdownDelay=shutdownDelay;
  }
  @Override public int getPhase(){
    return this.phase;
  }
  @Override public boolean isAutoStartup(){
    return this.autoStartup;
  }
  public void setAutoStartup(  boolean autoStartup){
    this.autoStartup=autoStartup;
  }
  @Override public void stop(  final Runnable callback){
    stop();
    final int delay=this.shutdownDelay;
    new Thread(new Runnable(){
      @Override public void run(){
        try {
          Thread.sleep(delay);
        }
 catch (        InterruptedException e) {
        }
 finally {
          callback.run();
        }
      }
    }
).start();
  }
}
