@SpringJUnitConfig(Config.class) @TestPropertySource(properties="foo = false") @Nested class EnabledIfOnMethodTests {
  @Test @EnabledIf("false") void enabledIfWithStringFalse(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("   false   ") void enabledIfWithStringFalseWithSurroundingWhitespace(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("FaLsE") void enabledIfWithStringFalseIgnoreCase(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("${__EnigmaPropertyShouldNotExist__:false}") void enabledIfWithPropertyPlaceholderForNonexistentPropertyWithDefaultValue(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf(expression="${foo}",loadContext=true) void enabledIfWithPropertyPlaceholder(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf(expression="\t${foo}   ",loadContext=true) void enabledIfWithPropertyPlaceholderWithSurroundingWhitespace(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("#{T(Boolean).FALSE}") void enabledIfWithSpelBoolean(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("   #{T(Boolean).FALSE}   ") void enabledIfWithSpelBooleanWithSurroundingWhitespace(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("#{'fal' + 'se'}") void enabledIfWithSpelStringConcatenation(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf("#{1 + 2 == 4}") void enabledIfWithSpelArithmeticComparison(){
    fail("This test must be disabled");
  }
  @Test @EnabledOnMac void enabledIfWithSpelOsCheckInCustomComposedAnnotation(){
    String os=System.getProperty("os.name").toLowerCase();
    assertTrue(os.contains("mac"),"This test must be enabled on Mac OS");
    assertFalse(os.contains("win"),"This test must be disabled on Windows");
  }
  @Test @EnabledIf(expression="#{@booleanFalseBean}",loadContext=true) void enabledIfWithSpelBooleanFalseBean(){
    fail("This test must be disabled");
  }
  @Test @EnabledIf(expression="#{@stringFalseBean}",loadContext=true) void enabledIfWithSpelStringFalseBean(){
    fail("This test must be disabled");
  }
}
