/** 
 * Unit tests for checking the behaviour of  {@link CachingMetadataReaderFactory} underload. If the cache is not controlled, this test should fail with an out of memory exception around entry 5k.
 * @author Costin Leau
 * @author Sam Brannen
 */
public class CachingMetadataReaderLeakTests {
  private static final int ITEMS_TO_LOAD=9999;
  private final MetadataReaderFactory mrf=new CachingMetadataReaderFactory();
  @Test public void testSignificantLoad() throws Exception {
    Assume.group(TestGroup.LONG_RUNNING);
    URL url=getClass().getResource("/java/awt/Component.class");
    assertThat(url,notNullValue());
    for (int i=0; i < ITEMS_TO_LOAD; i++) {
      Resource resource=new UrlResource(url){
        @Override public boolean equals(        Object obj){
          return (obj == this);
        }
        @Override public int hashCode(){
          return System.identityHashCode(this);
        }
      }
;
      MetadataReader reader=mrf.getMetadataReader(resource);
      assertThat(reader,notNullValue());
    }
  }
}
