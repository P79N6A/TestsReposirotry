private static class ResponseStoringProducer implements MessageProducer {
  public Message response;
  public boolean closed=false;
  @Override public void setDisableMessageID(  boolean b) throws JMSException {
  }
  @Override public boolean getDisableMessageID() throws JMSException {
    return false;
  }
  @Override public void setDisableMessageTimestamp(  boolean b) throws JMSException {
  }
  @Override public boolean getDisableMessageTimestamp() throws JMSException {
    return false;
  }
  @Override public void setDeliveryMode(  int i) throws JMSException {
  }
  @Override public int getDeliveryMode() throws JMSException {
    return 0;
  }
  @Override public void setPriority(  int i) throws JMSException {
  }
  @Override public int getPriority() throws JMSException {
    return 0;
  }
  @Override public void setTimeToLive(  long l) throws JMSException {
  }
  @Override public long getTimeToLive() throws JMSException {
    return 0;
  }
  @Override public void setDeliveryDelay(  long deliveryDelay) throws JMSException {
  }
  @Override public long getDeliveryDelay() throws JMSException {
    return 0;
  }
  @Override public Destination getDestination() throws JMSException {
    return null;
  }
  @Override public void close() throws JMSException {
    this.closed=true;
  }
  @Override public void send(  Message message) throws JMSException {
    this.response=message;
  }
  @Override public void send(  Message message,  int i,  int i1,  long l) throws JMSException {
  }
  @Override public void send(  Destination destination,  Message message) throws JMSException {
  }
  @Override public void send(  Destination destination,  Message message,  int i,  int i1,  long l) throws JMSException {
  }
  @Override public void send(  Message message,  CompletionListener completionListener) throws JMSException {
  }
  @Override public void send(  Message message,  int deliveryMode,  int priority,  long timeToLive,  CompletionListener completionListener) throws JMSException {
  }
  @Override public void send(  Destination destination,  Message message,  CompletionListener completionListener) throws JMSException {
  }
  @Override public void send(  Destination destination,  Message message,  int deliveryMode,  int priority,  long timeToLive,  CompletionListener completionListener) throws JMSException {
  }
}
