/** 
 * @author Rod Johnson
 * @since 13-Jan-03
 */
public class SQLStateExceptionTranslatorTests {
  private static final String sql="SELECT FOO FROM BAR";
  private final SQLStateSQLExceptionTranslator trans=new SQLStateSQLExceptionTranslator();
  @Test public void badSqlGrammar(){
    SQLException sex=new SQLException("Message","42001",1);
    try {
      throw this.trans.translate("task",sql,sex);
    }
 catch (    BadSqlGrammarException ex) {
      assertTrue("SQL is correct",sql.equals(ex.getSql()));
      assertTrue("Exception matches",sex.equals(ex.getSQLException()));
    }
  }
  @Test public void invalidSqlStateCode(){
    SQLException sex=new SQLException("Message","NO SUCH CODE",1);
    try {
      throw this.trans.translate("task",sql,sex);
    }
 catch (    UncategorizedSQLException ex) {
      assertTrue("SQL is correct",sql.equals(ex.getSql()));
      assertTrue("Exception matches",sex.equals(ex.getSQLException()));
    }
  }
  /** 
 * PostgreSQL can return null. SAP DB can apparently return empty SQL code. Bug 729170
 */
  @Test public void malformedSqlStateCodes(){
    SQLException sex=new SQLException("Message",null,1);
    testMalformedSqlStateCode(sex);
    sex=new SQLException("Message","",1);
    testMalformedSqlStateCode(sex);
    sex=new SQLException("Message","I",1);
    testMalformedSqlStateCode(sex);
  }
  private void testMalformedSqlStateCode(  SQLException sex){
    try {
      throw this.trans.translate("task",sql,sex);
    }
 catch (    UncategorizedSQLException ex) {
      assertTrue("SQL is correct",sql.equals(ex.getSql()));
      assertTrue("Exception matches",sex.equals(ex.getSQLException()));
    }
  }
}
