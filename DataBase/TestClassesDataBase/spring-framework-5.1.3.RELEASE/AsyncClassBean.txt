@Async @SuppressWarnings("serial") public static class AsyncClassBean implements Serializable, DisposableBean {
  public void doSomething(  int i){
    assertTrue(!Thread.currentThread().getName().equals(originalThreadName));
  }
  public Future<String> returnSomething(  int i){
    assertTrue(!Thread.currentThread().getName().equals(originalThreadName));
    if (i == 0) {
      throw new IllegalArgumentException();
    }
    return new AsyncResult<>(Integer.toString(i));
  }
  public ListenableFuture<String> returnSomethingListenable(  int i){
    assertTrue(!Thread.currentThread().getName().equals(originalThreadName));
    if (i == 0) {
      throw new IllegalArgumentException();
    }
    return new AsyncResult<>(Integer.toString(i));
  }
  @Async public CompletableFuture<String> returnSomethingCompletable(  int i){
    assertTrue(!Thread.currentThread().getName().equals(originalThreadName));
    if (i == 0) {
      throw new IllegalArgumentException();
    }
    return CompletableFuture.completedFuture(Integer.toString(i));
  }
  @Override public void destroy(){
  }
}
