private static class MockTransport extends Transport {
  private String connectedHost=null;
  private int connectedPort=-2;
  private String connectedUsername=null;
  private String connectedPassword=null;
  private boolean closeCalled=false;
  private List<Message> sentMessages=new ArrayList<>();
  private MockTransport(  Session session,  URLName urlName){
    super(session,urlName);
  }
  public String getConnectedHost(){
    return connectedHost;
  }
  public int getConnectedPort(){
    return connectedPort;
  }
  public String getConnectedUsername(){
    return connectedUsername;
  }
  public String getConnectedPassword(){
    return connectedPassword;
  }
  public boolean isCloseCalled(){
    return closeCalled;
  }
  public List<Message> getSentMessages(){
    return sentMessages;
  }
  public MimeMessage getSentMessage(  int index){
    return (MimeMessage)this.sentMessages.get(index);
  }
  @Override public void connect(  String host,  int port,  String username,  String password) throws MessagingException {
    if (host == null) {
      throw new MessagingException("no host");
    }
    this.connectedHost=host;
    this.connectedPort=port;
    this.connectedUsername=username;
    this.connectedPassword=password;
    setConnected(true);
  }
  @Override public synchronized void close() throws MessagingException {
    if ("".equals(connectedHost)) {
      throw new MessagingException("close failure");
    }
    this.closeCalled=true;
  }
  @Override public void sendMessage(  Message message,  Address[] addresses) throws MessagingException {
    if ("fail".equals(message.getSubject())) {
      throw new MessagingException("failed");
    }
    if (!ObjectUtils.nullSafeEquals(addresses,message.getAllRecipients())) {
      throw new MessagingException("addresses not correct");
    }
    if (message.getSentDate() == null) {
      throw new MessagingException("No sentDate specified");
    }
    if (message.getSubject() != null && message.getSubject().contains("custom")) {
      assertEquals(new GregorianCalendar(2005,3,1).getTime(),message.getSentDate());
    }
    this.sentMessages.add(message);
  }
}
