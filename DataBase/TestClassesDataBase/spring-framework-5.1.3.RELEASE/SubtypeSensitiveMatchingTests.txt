/** 
 * @author Adrian Colyer
 * @author Chris Beams
 */
public class SubtypeSensitiveMatchingTests {
  private NonSerializableFoo nonSerializableBean;
  private SerializableFoo serializableBean;
  private Bar bar;
  @Before public void setup(){
    ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext(getClass().getSimpleName() + ".xml",getClass());
    nonSerializableBean=(NonSerializableFoo)ctx.getBean("testClassA");
    serializableBean=(SerializableFoo)ctx.getBean("testClassB");
    bar=(Bar)ctx.getBean("testClassC");
  }
  @Test public void testBeansAreProxiedOnStaticMatch(){
    assertTrue("bean with serializable type should be proxied",this.serializableBean instanceof Advised);
  }
  @Test public void testBeansThatDoNotMatchBasedSolelyOnRuntimeTypeAreNotProxied(){
    assertFalse("bean with non-serializable type should not be proxied",this.nonSerializableBean instanceof Advised);
  }
  @Test public void testBeansThatDoNotMatchBasedOnOtherTestAreProxied(){
    assertTrue("bean with args check should be proxied",this.bar instanceof Advised);
  }
}
