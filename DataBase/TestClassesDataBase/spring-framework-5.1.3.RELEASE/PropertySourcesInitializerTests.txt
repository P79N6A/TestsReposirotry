/** 
 * Integration tests that verify that a  {@link PropertySource} can be set via acustom  {@link ApplicationContextInitializer} in the Spring TestContext Framework.
 * @author Sam Brannen
 * @since 4.1
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration(initializers=PropertySourcesInitializerTests.PropertySourceInitializer.class) public class PropertySourcesInitializerTests {
@Configuration static class Config {
    @Value("${enigma}") private String enigma;
    @Bean public String enigma(){
      return enigma;
    }
  }
  @Autowired private String enigma;
  @Test public void customPropertySourceConfiguredViaContextInitializer(){
    assertEquals("foo",enigma);
  }
public static class PropertySourceInitializer implements ApplicationContextInitializer<ConfigurableApplicationContext> {
    @Override public void initialize(    ConfigurableApplicationContext applicationContext){
      applicationContext.getEnvironment().getPropertySources().addFirst(new MockPropertySource().withProperty("enigma","foo"));
    }
  }
}
