private static class StubTcpOperations implements TcpOperations<byte[]> {
  private StubTcpConnection connection=new StubTcpConnection();
  private TcpConnectionHandler<byte[]> connectionHandler;
  public List<Message<byte[]>> getSentMessages(){
    return this.connection.getMessages();
  }
  public StompHeaderAccessor getSentHeaders(  int index){
    assertTrue("Size: " + getSentMessages().size(),getSentMessages().size() > index);
    Message<byte[]> message=getSentMessages().get(index);
    StompHeaderAccessor accessor=MessageHeaderAccessor.getAccessor(message,StompHeaderAccessor.class);
    assertNotNull(accessor);
    return accessor;
  }
  @Override public ListenableFuture<Void> connect(  TcpConnectionHandler<byte[]> handler){
    this.connectionHandler=handler;
    handler.afterConnected(this.connection);
    return getVoidFuture();
  }
  @Override public ListenableFuture<Void> connect(  TcpConnectionHandler<byte[]> handler,  ReconnectStrategy strategy){
    this.connectionHandler=handler;
    handler.afterConnected(this.connection);
    return getVoidFuture();
  }
  @Override public ListenableFuture<Void> shutdown(){
    return getVoidFuture();
  }
  public void handleMessage(  Message<byte[]> message){
    this.connectionHandler.handleMessage(message);
  }
}
