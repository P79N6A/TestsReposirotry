/** 
 * Concrete implementation of  {@link AbstractTransactionalAnnotatedConfigClassTests}that uses a true  {@link Configuration @Configuration class}.
 * @author Sam Brannen
 * @since 3.2
 * @see TransactionalAnnotatedConfigClassesWithoutAtConfigurationTests
 */
@ContextConfiguration public class TransactionalAnnotatedConfigClassWithAtConfigurationTests extends AbstractTransactionalAnnotatedConfigClassTests {
  /** 
 * This is <b>intentionally</b> annotated with  {@code @Configuration}. <p>Consequently, this class contains standard singleton bean methods instead of <i>annotated factory bean methods</i>.
 */
@Configuration static class Config {
    @Bean public Employee employee(){
      Employee employee=new Employee();
      employee.setName("John Smith");
      employee.setAge(42);
      employee.setCompany("Acme Widgets, Inc.");
      return employee;
    }
    @Bean public PlatformTransactionManager transactionManager(){
      return new DataSourceTransactionManager(dataSource());
    }
    @Bean public DataSource dataSource(){
      return new EmbeddedDatabaseBuilder().addScript("classpath:/org/springframework/test/jdbc/schema.sql").setName(getClass().getName()).build();
    }
  }
  @Before public void compareDataSources() throws Exception {
    assertSame(dataSourceFromTxManager,dataSourceViaInjection);
  }
}
