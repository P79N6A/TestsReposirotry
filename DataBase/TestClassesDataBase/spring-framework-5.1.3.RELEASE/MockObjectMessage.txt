private static class MockObjectMessage implements ObjectMessage {
  private Serializable serializable;
  private Destination replyTo;
  public MockObjectMessage(  Serializable serializable){
    this.serializable=serializable;
  }
  @Override public void setObject(  Serializable serializable) throws JMSException {
    this.serializable=serializable;
  }
  @Override public Serializable getObject() throws JMSException {
    return serializable;
  }
  @Override public String getJMSMessageID() throws JMSException {
    return null;
  }
  @Override public void setJMSMessageID(  String string) throws JMSException {
  }
  @Override public long getJMSTimestamp() throws JMSException {
    return 0;
  }
  @Override public void setJMSTimestamp(  long l) throws JMSException {
  }
  @Override public byte[] getJMSCorrelationIDAsBytes() throws JMSException {
    return new byte[0];
  }
  @Override public void setJMSCorrelationIDAsBytes(  byte[] bytes) throws JMSException {
  }
  @Override public void setJMSCorrelationID(  String string) throws JMSException {
  }
  @Override public String getJMSCorrelationID() throws JMSException {
    return null;
  }
  @Override public Destination getJMSReplyTo() throws JMSException {
    return replyTo;
  }
  @Override public void setJMSReplyTo(  Destination destination) throws JMSException {
    this.replyTo=destination;
  }
  @Override public Destination getJMSDestination() throws JMSException {
    return null;
  }
  @Override public void setJMSDestination(  Destination destination) throws JMSException {
  }
  @Override public int getJMSDeliveryMode() throws JMSException {
    return 0;
  }
  @Override public void setJMSDeliveryMode(  int i) throws JMSException {
  }
  @Override public boolean getJMSRedelivered() throws JMSException {
    return false;
  }
  @Override public void setJMSRedelivered(  boolean b) throws JMSException {
  }
  @Override public String getJMSType() throws JMSException {
    return null;
  }
  @Override public void setJMSType(  String string) throws JMSException {
  }
  @Override public long getJMSExpiration() throws JMSException {
    return 0;
  }
  @Override public void setJMSExpiration(  long l) throws JMSException {
  }
  @Override public int getJMSPriority() throws JMSException {
    return 0;
  }
  @Override public void setJMSPriority(  int i) throws JMSException {
  }
  @Override public long getJMSDeliveryTime() throws JMSException {
    return 0;
  }
  @Override public void setJMSDeliveryTime(  long deliveryTime) throws JMSException {
  }
  @Override public <T>T getBody(  Class<T> c) throws JMSException {
    return null;
  }
  @Override public boolean isBodyAssignableTo(  Class c) throws JMSException {
    return false;
  }
  @Override public void clearProperties() throws JMSException {
  }
  @Override public boolean propertyExists(  String string) throws JMSException {
    return false;
  }
  @Override public boolean getBooleanProperty(  String string) throws JMSException {
    return false;
  }
  @Override public byte getByteProperty(  String string) throws JMSException {
    return 0;
  }
  @Override public short getShortProperty(  String string) throws JMSException {
    return 0;
  }
  @Override public int getIntProperty(  String string) throws JMSException {
    return 0;
  }
  @Override public long getLongProperty(  String string) throws JMSException {
    return 0;
  }
  @Override public float getFloatProperty(  String string) throws JMSException {
    return 0;
  }
  @Override public double getDoubleProperty(  String string) throws JMSException {
    return 0;
  }
  @Override public String getStringProperty(  String string) throws JMSException {
    return null;
  }
  @Override public Object getObjectProperty(  String string) throws JMSException {
    return null;
  }
  @Override public Enumeration getPropertyNames() throws JMSException {
    return null;
  }
  @Override public void setBooleanProperty(  String string,  boolean b) throws JMSException {
  }
  @Override public void setByteProperty(  String string,  byte b) throws JMSException {
  }
  @Override public void setShortProperty(  String string,  short i) throws JMSException {
  }
  @Override public void setIntProperty(  String string,  int i) throws JMSException {
  }
  @Override public void setLongProperty(  String string,  long l) throws JMSException {
  }
  @Override public void setFloatProperty(  String string,  float v) throws JMSException {
  }
  @Override public void setDoubleProperty(  String string,  double v) throws JMSException {
  }
  @Override public void setStringProperty(  String string,  String string1) throws JMSException {
  }
  @Override public void setObjectProperty(  String string,  Object object) throws JMSException {
  }
  @Override public void acknowledge() throws JMSException {
  }
  @Override public void clearBody() throws JMSException {
  }
}
