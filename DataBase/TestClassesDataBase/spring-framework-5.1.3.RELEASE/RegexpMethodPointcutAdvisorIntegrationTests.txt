/** 
 * @author Rod Johnson
 * @author Chris Beams
 */
public class RegexpMethodPointcutAdvisorIntegrationTests {
  private static final Resource CONTEXT=qualifiedResource(RegexpMethodPointcutAdvisorIntegrationTests.class,"context.xml");
  @Test public void testSinglePattern() throws Throwable {
    DefaultListableBeanFactory bf=new DefaultListableBeanFactory();
    new XmlBeanDefinitionReader(bf).loadBeanDefinitions(CONTEXT);
    ITestBean advised=(ITestBean)bf.getBean("settersAdvised");
    NopInterceptor nop=(NopInterceptor)bf.getBean("nopInterceptor");
    assertEquals(0,nop.getCount());
    int newAge=12;
    advised.exceptional(null);
    assertEquals(0,nop.getCount());
    advised.setAge(newAge);
    assertEquals(newAge,advised.getAge());
    assertEquals(1,nop.getCount());
  }
  @Test public void testMultiplePatterns() throws Throwable {
    DefaultListableBeanFactory bf=new DefaultListableBeanFactory();
    new XmlBeanDefinitionReader(bf).loadBeanDefinitions(CONTEXT);
    TestBean advised=(TestBean)bf.getBean("settersAndAbsquatulateAdvised");
    NopInterceptor nop=(NopInterceptor)bf.getBean("nopInterceptor");
    assertEquals(0,nop.getCount());
    int newAge=12;
    advised.exceptional(null);
    assertEquals(0,nop.getCount());
    advised.absquatulate();
    assertEquals(1,nop.getCount());
    advised.setAge(newAge);
    assertEquals(newAge,advised.getAge());
    assertEquals(2,nop.getCount());
  }
  @Test public void testSerialization() throws Throwable {
    DefaultListableBeanFactory bf=new DefaultListableBeanFactory();
    new XmlBeanDefinitionReader(bf).loadBeanDefinitions(CONTEXT);
    Person p=(Person)bf.getBean("serializableSettersAdvised");
    NopInterceptor nop=(NopInterceptor)bf.getBean("nopInterceptor");
    assertEquals(0,nop.getCount());
    int newAge=12;
    assertEquals(0,p.getAge());
    assertEquals(0,nop.getCount());
    p.setAge(newAge);
    assertEquals(1,nop.getCount());
    p.setAge(newAge);
    assertEquals(newAge,p.getAge());
    assertEquals(2,nop.getCount());
    p=(Person)SerializationTestUtils.serializeAndDeserialize(p);
    assertEquals(newAge,p.getAge());
    nop=(SerializableNopInterceptor)((Advised)p).getAdvisors()[0].getAdvice();
    assertEquals(2,nop.getCount());
    assertEquals("serializableSettersAdvised",p.getName());
    p.setAge(newAge + 1);
    assertEquals(3,nop.getCount());
    assertEquals(newAge + 1,p.getAge());
  }
}
