@SuppressWarnings({"rawtypes","unchecked"}) private static class CountingAttributeChangeNotificationListener implements NotificationListener {
  private Map attributeCounts=new HashMap();
  private Map attributeHandbacks=new HashMap();
  @Override public void handleNotification(  Notification notification,  Object handback){
    if (notification instanceof AttributeChangeNotification) {
      AttributeChangeNotification attNotification=(AttributeChangeNotification)notification;
      String attributeName=attNotification.getAttributeName();
      Integer currentCount=(Integer)this.attributeCounts.get(attributeName);
      if (currentCount != null) {
        int count=currentCount.intValue() + 1;
        this.attributeCounts.put(attributeName,new Integer(count));
      }
 else {
        this.attributeCounts.put(attributeName,new Integer(1));
      }
      this.attributeHandbacks.put(attributeName,handback);
    }
  }
  public int getCount(  String attribute){
    Integer count=(Integer)this.attributeCounts.get(attribute);
    return (count == null) ? 0 : count.intValue();
  }
  public Object getLastHandback(  String attributeName){
    return this.attributeHandbacks.get(attributeName);
  }
}
