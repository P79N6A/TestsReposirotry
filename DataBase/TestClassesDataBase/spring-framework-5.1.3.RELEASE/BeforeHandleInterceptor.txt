private static class BeforeHandleInterceptor extends AbstractTestInterceptor {
  private Message<?> messageToReturn;
  private RuntimeException exceptionToRaise;
  public void setMessageToReturn(  Message<?> messageToReturn){
    this.messageToReturn=messageToReturn;
  }
  @SuppressWarnings("unused") public void setExceptionToRaise(  RuntimeException exception){
    this.exceptionToRaise=exception;
  }
  @Override public Message<?> beforeHandle(  Message<?> message,  MessageChannel channel,  MessageHandler handler){
    super.beforeHandle(message,channel,handler);
    if (this.exceptionToRaise != null) {
      throw this.exceptionToRaise;
    }
    return (this.messageToReturn != null ? this.messageToReturn : message);
  }
}
