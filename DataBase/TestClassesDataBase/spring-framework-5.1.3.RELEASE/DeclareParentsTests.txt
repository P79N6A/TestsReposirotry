/** 
 * @author Rod Johnson
 * @author Chris Beams
 */
public class DeclareParentsTests {
  private ITestBean testBeanProxy;
  private Object introductionObject;
  @Before public void setup(){
    ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext(getClass().getSimpleName() + ".xml",getClass());
    testBeanProxy=(ITestBean)ctx.getBean("testBean");
    introductionObject=ctx.getBean("introduction");
  }
  @Test public void testIntroductionWasMade(){
    assertTrue(AopUtils.isAopProxy(testBeanProxy));
    assertFalse("Introduction should not be proxied",AopUtils.isAopProxy(introductionObject));
    assertTrue("Introduction must have been made",testBeanProxy instanceof Lockable);
  }
  @Test public void testLockingWorks(){
    Lockable lockable=(Lockable)testBeanProxy;
    assertFalse(lockable.locked());
    testBeanProxy.getAge();
    testBeanProxy.setName("");
    lockable.lock();
    try {
      testBeanProxy.setName(" ");
      fail("Should be locked");
    }
 catch (    IllegalStateException ex) {
    }
  }
}
