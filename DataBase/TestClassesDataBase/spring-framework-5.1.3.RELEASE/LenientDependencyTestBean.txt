public static class LenientDependencyTestBean {
  public final ITestBean tb;
  public LenientDependencyTestBean(  ITestBean tb){
    this.tb=tb;
  }
  public LenientDependencyTestBean(  TestBean tb){
    this.tb=tb;
  }
  public LenientDependencyTestBean(  DerivedTestBean tb){
    this.tb=tb;
  }
  @SuppressWarnings("rawtypes") public LenientDependencyTestBean(  Map[] m){
    throw new IllegalStateException("Don't pick this constructor");
  }
  public static LenientDependencyTestBean create(  ITestBean tb){
    return new LenientDependencyTestBean(tb);
  }
  public static LenientDependencyTestBean create(  TestBean tb){
    return new LenientDependencyTestBean(tb);
  }
  public static LenientDependencyTestBean create(  DerivedTestBean tb){
    return new LenientDependencyTestBean(tb);
  }
}
