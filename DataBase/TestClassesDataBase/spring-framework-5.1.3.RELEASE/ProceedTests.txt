/** 
 * Test for SPR-3522. Arguments changed on a call to proceed should be visible to advice further down the invocation chain.
 * @author Adrian Colyer
 * @author Chris Beams
 */
public class ProceedTests {
  private SimpleBean testBean;
  private ProceedTestingAspect firstTestAspect;
  private ProceedTestingAspect secondTestAspect;
  @Before public void setup(){
    ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext(getClass().getSimpleName() + ".xml",getClass());
    testBean=(SimpleBean)ctx.getBean("testBean");
    firstTestAspect=(ProceedTestingAspect)ctx.getBean("firstTestAspect");
    secondTestAspect=(ProceedTestingAspect)ctx.getBean("secondTestAspect");
  }
  @Test public void testSimpleProceedWithChangedArgs(){
    this.testBean.setName("abc");
    assertEquals("Name changed in around advice","ABC",this.testBean.getName());
  }
  @Test public void testGetArgsIsDefensive(){
    this.testBean.setAge(5);
    assertEquals("getArgs is defensive",5,this.testBean.getAge());
  }
  @Test public void testProceedWithArgsInSameAspect(){
    this.testBean.setMyFloat(1.0F);
    assertTrue("value changed in around advice",this.testBean.getMyFloat() > 1.9F);
    assertTrue("changed value visible to next advice in chain",this.firstTestAspect.getLastBeforeFloatValue() > 1.9F);
  }
  @Test public void testProceedWithArgsAcrossAspects(){
    this.testBean.setSex("male");
    assertEquals("value changed in around advice","MALE",this.testBean.getSex());
    assertEquals("changed value visible to next before advice in chain","MALE",this.secondTestAspect.getLastBeforeStringValue());
    assertEquals("changed value visible to next around advice in chain","MALE",this.secondTestAspect.getLastAroundStringValue());
  }
}
