public static class ConstructorDependency implements BeanNameAware {
  public TestBean spouse;
  public int spouseAge;
  private String beanName;
  public ConstructorDependency(  TestBean spouse){
    this.spouse=spouse;
  }
  public ConstructorDependency(  int spouseAge){
    this.spouseAge=spouseAge;
  }
  @SuppressWarnings("unused") private ConstructorDependency(  TestBean spouse,  TestBean otherSpouse){
    throw new IllegalArgumentException("Should never be called");
  }
  @Override public void setBeanName(  String name){
    this.beanName=name;
  }
  @Override public boolean equals(  Object o){
    if (this == o)     return true;
    if (o == null || getClass() != o.getClass())     return false;
    ConstructorDependency that=(ConstructorDependency)o;
    return spouseAge == that.spouseAge && Objects.equals(spouse,that.spouse) && Objects.equals(beanName,that.beanName);
  }
  @Override public int hashCode(){
    return Objects.hash(spouse,spouseAge,beanName);
  }
}
