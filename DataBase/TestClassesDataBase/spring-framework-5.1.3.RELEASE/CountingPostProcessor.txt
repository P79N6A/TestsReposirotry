public static class CountingPostProcessor implements BeanPostProcessor {
  private final Map<String,AtomicInteger> count=new HashMap<>();
  @Override public Object postProcessBeforeInitialization(  Object bean,  String beanName){
    return bean;
  }
  @Override public Object postProcessAfterInitialization(  Object bean,  String beanName){
    if (bean instanceof FactoryBean) {
      return bean;
    }
    AtomicInteger c=count.get(beanName);
    if (c == null) {
      c=new AtomicInteger(0);
      count.put(beanName,c);
    }
    c.incrementAndGet();
    return bean;
  }
  public int getCount(  String beanName){
    AtomicInteger c=count.get(beanName);
    if (c != null) {
      return c.intValue();
    }
 else {
      return 0;
    }
  }
}
