/** 
 * Integration tests that verify that  {@link MockMvc} can be reused multipletimes within the same test method without side effects between independent requests. <p>See <a href="https://jira.spring.io/browse/SPR-13260" target="_blank">SPR-13260</a>.
 * @author Sam Brannen
 * @author Rob Winch
 * @since 4.2
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration @WebAppConfiguration public class MockMvcReuseTests {
  private static final String HELLO="hello";
  private static final String ENIGMA="enigma";
  private static final String FOO="foo";
  private static final String BAR="bar";
  @Autowired private WebApplicationContext wac;
  private MockMvc mvc;
  @Before public void setUp(){
    this.mvc=webAppContextSetup(this.wac).build();
  }
  @Test public void sessionAttributesAreClearedBetweenInvocations() throws Exception {
    this.mvc.perform(get("/")).andExpect(content().string(HELLO)).andExpect(request().sessionAttribute(FOO,nullValue()));
    this.mvc.perform(get("/").sessionAttr(FOO,BAR)).andExpect(content().string(HELLO)).andExpect(request().sessionAttribute(FOO,BAR));
    this.mvc.perform(get("/")).andExpect(content().string(HELLO)).andExpect(request().sessionAttribute(FOO,nullValue()));
  }
  @Test public void requestParametersAreClearedBetweenInvocations() throws Exception {
    this.mvc.perform(get("/")).andExpect(content().string(HELLO));
    this.mvc.perform(get("/").param(ENIGMA,"")).andExpect(content().string(ENIGMA));
    this.mvc.perform(get("/")).andExpect(content().string(HELLO));
  }
@Configuration @EnableWebMvc static class Config {
    @Bean public MyController myController(){
      return new MyController();
    }
  }
@RestController static class MyController {
    @RequestMapping("/") public String hello(){
      return HELLO;
    }
    @RequestMapping(path="/",params=ENIGMA) public String enigma(){
      return ENIGMA;
    }
  }
}
