class AroundAdviceBindingTestAspect {
  private AroundAdviceBindingCollaborator collaborator=null;
  public void setCollaborator(  AroundAdviceBindingCollaborator aCollaborator){
    this.collaborator=aCollaborator;
  }
  public void oneIntArg(  ProceedingJoinPoint pjp,  int age) throws Throwable {
    this.collaborator.oneIntArg(age);
    pjp.proceed();
  }
  public int oneObjectArg(  ProceedingJoinPoint pjp,  Object bean) throws Throwable {
    this.collaborator.oneObjectArg(bean);
    return ((Integer)pjp.proceed()).intValue();
  }
  public void oneIntAndOneObject(  ProceedingJoinPoint pjp,  int x,  Object o) throws Throwable {
    this.collaborator.oneIntAndOneObject(x,o);
    pjp.proceed();
  }
  public int justJoinPoint(  ProceedingJoinPoint pjp) throws Throwable {
    this.collaborator.justJoinPoint(pjp.getSignature().getName());
    return ((Integer)pjp.proceed()).intValue();
  }
  /** 
 * Collaborator interface that makes it easy to test this aspect is working as expected through mocking.
 */
public interface AroundAdviceBindingCollaborator {
    void oneIntArg(    int x);
    void oneObjectArg(    Object o);
    void oneIntAndOneObject(    int x,    Object o);
    void justJoinPoint(    String s);
  }
}
