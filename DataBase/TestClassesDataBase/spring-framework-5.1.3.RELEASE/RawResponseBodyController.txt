@RestController @RequestMapping("/raw-response") @SuppressWarnings("unused") private static class RawResponseBodyController {
  @GetMapping("/publisher") public Publisher<ByteBuffer> getPublisher(){
    DataBufferFactory dataBufferFactory=new DefaultDataBufferFactory();
    Jackson2JsonEncoder encoder=new Jackson2JsonEncoder();
    return encoder.encode(Mono.just(new Person("Robert")),dataBufferFactory,ResolvableType.forClass(Person.class),JSON,Collections.emptyMap()).map(DataBuffer::asByteBuffer);
  }
  @GetMapping("/flux") public Flux<ByteBuffer> getFlux(){
    return Flux.just(ByteBuffer.wrap("Hello!".getBytes()));
  }
  @GetMapping("/mono") public Mono<ByteBuffer> getMonoString(){
    return Mono.just(ByteBuffer.wrap("Hello!".getBytes()));
  }
  @GetMapping("/observable") public Observable<ByteBuffer> getObservable(){
    return Observable.just(ByteBuffer.wrap("Hello!".getBytes()));
  }
  @GetMapping("/rxjava2-observable") public io.reactivex.Observable<ByteBuffer> getRxJava2Observable(){
    return io.reactivex.Observable.just(ByteBuffer.wrap("Hello!".getBytes()));
  }
  @GetMapping("/flowable") public Flowable<ByteBuffer> getFlowable(){
    return Flowable.just(ByteBuffer.wrap("Hello!".getBytes()));
  }
}
