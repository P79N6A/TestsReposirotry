private static class SpecialIntAnnotationFormatterFactory implements AnnotationFormatterFactory<SpecialInt> {
  private final Set<Class<?>> fieldTypes=new HashSet<>(1);
  public SpecialIntAnnotationFormatterFactory(){
    fieldTypes.add(Integer.class);
  }
  @Override public Set<Class<?>> getFieldTypes(){
    return fieldTypes;
  }
  @Override public Printer<?> getPrinter(  SpecialInt annotation,  Class<?> fieldType){
    assertEquals("aliased",annotation.value());
    assertEquals("aliased",annotation.alias());
    return new Printer<Integer>(){
      @Override public String print(      Integer object,      Locale locale){
        return ":" + object.toString();
      }
    }
;
  }
  @Override public Parser<?> getParser(  SpecialInt annotation,  Class<?> fieldType){
    assertEquals("aliased",annotation.value());
    assertEquals("aliased",annotation.alias());
    return new Parser<Integer>(){
      @Override public Integer parse(      String text,      Locale locale) throws ParseException {
        return Integer.parseInt(text.substring(1));
      }
    }
;
  }
}
