private static class RequestInterceptor implements AsyncClientHttpRequestInterceptor {
  private final CountDownLatch latch=new CountDownLatch(1);
  private volatile ClientHttpResponse response;
  private volatile Throwable exception;
  @Override public ListenableFuture<ClientHttpResponse> intercept(  HttpRequest request,  byte[] body,  AsyncClientHttpRequestExecution execution) throws IOException {
    ListenableFuture<ClientHttpResponse> future=execution.executeAsync(request,body);
    future.addCallback(resp -> {
      response=resp;
      this.latch.countDown();
    }
,ex -> {
      exception=ex;
      this.latch.countDown();
    }
);
    return future;
  }
}
