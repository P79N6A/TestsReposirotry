private static class MyConditionalConverterFactory implements ConverterFactory<String,Color>, ConditionalConverter {
  private MyConditionalConverter converter=new MyConditionalConverter();
  private int matchAttempts=0;
  @Override public boolean matches(  TypeDescriptor sourceType,  TypeDescriptor targetType){
    matchAttempts++;
    return true;
  }
  @Override @SuppressWarnings("unchecked") public <T extends Color>Converter<String,T> getConverter(  Class<T> targetType){
    return (Converter<String,T>)converter;
  }
  public int getMatchAttempts(){
    return matchAttempts;
  }
  public int getNestedMatchAttempts(){
    return converter.getMatchAttempts();
  }
}
