private static class InvertedTreeDependencyController extends AbstractController {
  @ModelAttribute public C1 getC1(  Model model) throws IOException {
    return updateAndReturn(model,"getC1",new C1());
  }
  @ModelAttribute public C2 getC2(  Model model) throws IOException {
    return updateAndReturn(model,"getC2",new C2());
  }
  @ModelAttribute public C3 getC3(  Model model) throws IOException {
    return updateAndReturn(model,"getC3",new C3());
  }
  @ModelAttribute public C4 getC4(  Model model) throws IOException {
    return updateAndReturn(model,"getC4",new C4());
  }
  @ModelAttribute public B1 getB1(  @ModelAttribute C1 c1,  @ModelAttribute C2 c2,  Model model) throws IOException {
    return updateAndReturn(model,"getB1",new B1());
  }
  @ModelAttribute public B2 getB2(  @ModelAttribute C3 c3,  @ModelAttribute C4 c4,  Model model) throws IOException {
    return updateAndReturn(model,"getB2",new B2());
  }
  @ModelAttribute public A getA(  @ModelAttribute B1 b1,  @ModelAttribute B2 b2,  Model model) throws IOException {
    return updateAndReturn(model,"getA",new A());
  }
}
