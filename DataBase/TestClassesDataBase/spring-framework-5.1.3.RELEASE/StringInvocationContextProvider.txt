private static class StringInvocationContextProvider implements TestTemplateInvocationContextProvider {
  private final List<String> parameters;
  StringInvocationContextProvider(  List<String> parameters){
    this.parameters=parameters;
  }
  @Override public boolean supportsTestTemplate(  ExtensionContext context){
    return true;
  }
  @Override public Stream<TestTemplateInvocationContext> provideTestTemplateInvocationContexts(  ExtensionContext context){
    return this.parameters.stream().map(this::invocationContext);
  }
  private TestTemplateInvocationContext invocationContext(  String parameter){
    return new TestTemplateInvocationContext(){
      @Override public String getDisplayName(      int invocationIndex){
        return parameter;
      }
      @Override public List<Extension> getAdditionalExtensions(){
        return Collections.singletonList(new ParameterResolver(){
          @Override public boolean supportsParameter(          ParameterContext parameterContext,          ExtensionContext extensionContext){
            return parameterContext.getParameter().getType() == String.class;
          }
          @Override public Object resolveParameter(          ParameterContext parameterContext,          ExtensionContext extensionContext){
            return parameter;
          }
        }
);
      }
    }
;
  }
}
