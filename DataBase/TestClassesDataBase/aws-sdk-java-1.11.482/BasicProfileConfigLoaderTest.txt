public class BasicProfileConfigLoaderTest {
  @Test public void basicProfileWithAccessKeySecretKey(){
    File file=ProfileResourceLoader.basicProfile().asFile();
    BasicProfile profile=loadProfiles(file).getProfile("default");
    assertEquals("defaultAccessKey",profile.getAwsAccessIdKey());
    assertEquals("defaultSecretAccessKey",profile.getAwsSecretAccessKey());
  }
  @Test(expected=IllegalArgumentException.class) public void profileNameWithNoBrackets(){
    File file=ProfileResourceLoader.profileNameWithNoBraces().asFile();
    loadProfiles(file);
  }
  @Test(expected=IllegalArgumentException.class) public void profileNameWithNoOpeningBraces(){
    File file=ProfileResourceLoader.profileNameWithNoOpeningBraces().asFile();
    loadProfiles(file);
  }
  @Test(expected=IllegalArgumentException.class) public void profileNameWithNoClosingBraces(){
    File file=ProfileResourceLoader.profileNameWithNoClosingBraces().asFile();
    loadProfiles(file);
  }
  @Test(expected=AmazonClientException.class) public void blankProfileName(){
    File file=ProfileResourceLoader.profileNameWithSpaces().asFile();
    loadProfiles(file);
  }
  @Test(expected=AmazonClientException.class) public void emptyProfileName(){
    File file=ProfileResourceLoader.profilesWithNoProfileName().asFile();
    loadProfiles(file);
  }
  @Test public void duplicateProfile(){
    File file=ProfileResourceLoader.profilesWithSameProfileName().asFile();
    BasicProfile profile=loadProfiles(file).getProfile("test");
    assertEquals("testProfile2",profile.getAwsAccessIdKey());
    assertEquals("testProfile2",profile.getAwsSecretAccessKey());
    assertEquals("testProfile2",profile.getAwsSessionToken());
  }
  @Test(expected=IllegalArgumentException.class) public void duplicateProperty(){
    File file=ProfileResourceLoader.profilesWithTwoAccessKeyUnderSameProfile().asFile();
    loadProfiles(file);
  }
  @Test public void profileWithNoPropertyValue(){
    File file=ProfileResourceLoader.profileWithEmptyAccessKey().asFile();
    BasicProfile profile=loadProfiles(file).getProfile("test");
    assertThat(profile.getAwsAccessIdKey(),isEmptyString());
  }
  public AllProfiles loadProfiles(  File file){
    return BasicProfileConfigLoader.INSTANCE.loadProfiles(file);
  }
}
