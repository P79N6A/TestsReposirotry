/** 
 */
public class AbortedExceptionClientExecutionTimerIntegrationTest extends MockServerTestBase {
  private AmazonHttpClient httpClient;
  @BeforeClass public static void preConditions(){
    TestPreConditions.assumeNotJava6();
  }
  @Override protected MockServer buildMockServer(){
    return new MockServer(MockServer.DummyResponseServerBehavior.build(200,"Hi","Dummy response"));
  }
  @Test(expected=AbortedException.class) public void clientExecutionTimeoutEnabled_aborted_exception_occurs_timeout_not_expired() throws Exception {
    ClientConfiguration config=new ClientConfiguration().withClientExecutionTimeout(CLIENT_EXECUTION_TIMEOUT).withMaxErrorRetry(0);
    ConnectionManagerAwareHttpClient rawHttpClient=createRawHttpClientSpy(config);
    doThrow(new AbortedException()).when(rawHttpClient).execute(any(HttpRequestBase.class),any(HttpContext.class));
    httpClient=new AmazonHttpClient(config,rawHttpClient,null);
    execute(httpClient,createMockGetRequest());
  }
  @Test(expected=ClientExecutionTimeoutException.class) public void clientExecutionTimeoutEnabled_aborted_exception_occurs_timeout_expired() throws Exception {
    ClientConfiguration config=new ClientConfiguration().withClientExecutionTimeout(CLIENT_EXECUTION_TIMEOUT).withMaxErrorRetry(0);
    ConnectionManagerAwareHttpClient rawHttpClient=createRawHttpClientSpy(config);
    httpClient=new AmazonHttpClient(config,rawHttpClient,null);
    execute(httpClient,new EmptyHttpRequest(server.getEndpoint(),HttpMethodName.PUT,new SdkBufferedInputStream(new InputStream(){
      @Override public int read() throws IOException {
        try {
          Thread.sleep(100);
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
        }
        return 1;
      }
    }
)));
  }
}
