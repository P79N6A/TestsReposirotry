/** 
 * Tests for  {@link SystemPropertyCsmConfigurationProvider}.
 */
public class SystemPropertyCsmConfigurationProviderTest {
  private final SystemPropertyCsmConfigurationProvider provider=new SystemPropertyCsmConfigurationProvider();
  @Before public void testSetup(){
    System.clearProperty(AWS_CSM_ENABLED_SYSTEM_PROPERTY);
    System.clearProperty(AWS_CSM_PORT_SYSTEM_PROPERTY);
    System.clearProperty(AWS_CSM_CLIENT_ID_SYSTEM_PROPERTY);
  }
  @AfterClass public static void cleanup(){
    System.clearProperty(AWS_CSM_ENABLED_SYSTEM_PROPERTY);
    System.clearProperty(AWS_CSM_PORT_SYSTEM_PROPERTY);
    System.clearProperty(AWS_CSM_CLIENT_ID_SYSTEM_PROPERTY);
  }
  @Test public void testCorrectlyResolvesConfiguration(){
    System.setProperty(AWS_CSM_ENABLED_SYSTEM_PROPERTY,"true");
    System.setProperty(AWS_CSM_PORT_SYSTEM_PROPERTY,"1234");
    System.setProperty(AWS_CSM_CLIENT_ID_SYSTEM_PROPERTY,"foo");
    CsmConfiguration cfg=provider.getConfiguration();
    assertEquals(new CsmConfiguration(true,1234,"foo"),cfg);
  }
  @Test(expected=SdkClientException.class) public void testThrowsSdkClientExceptionWhenVariablesNotPresent(){
    provider.getConfiguration();
  }
  @Test(expected=SdkClientException.class) public void testThrowsSdkClientExceptionWhenPortCannotBeParsed(){
    System.setProperty(AWS_CSM_ENABLED_SYSTEM_PROPERTY,"true");
    System.setProperty(AWS_CSM_PORT_SYSTEM_PROPERTY,"onetwothreefour");
    System.setProperty(AWS_CSM_CLIENT_ID_SYSTEM_PROPERTY,"foo");
    provider.getConfiguration();
  }
  @Test public void portClientIdPortNumberNotProvided_shouldUseDefaultValues(){
    System.setProperty(AWS_CSM_ENABLED_SYSTEM_PROPERTY,"true");
    assertEquals(DEFAULT_AWS_CSM_PORT,provider.getConfiguration().getPort());
    assertEquals(DEFAULT_AWS_CSM_CLIENT_ID,provider.getConfiguration().getClientId());
  }
}
