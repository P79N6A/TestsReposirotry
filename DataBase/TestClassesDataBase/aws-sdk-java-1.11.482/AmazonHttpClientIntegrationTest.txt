public class AmazonHttpClientIntegrationTest extends WireMockTestBase {
  private static final String OPERATION="/some-operation";
  private static final String HEADER="Some-Header";
  private static final String CONFIG_HEADER_VALUE="client config header value";
  private static final String REQUEST_HEADER_VALUE="request header value";
  @Before public void setUp(){
    stubFor(any(urlPathEqualTo(OPERATION)).willReturn(aResponse()));
  }
  @Test public void headersSpecifiedInClientConfigurationArePutOnRequest() throws Exception {
    Request<?> request=newGetRequest(OPERATION);
    AmazonHttpClient sut=createClient(HEADER,CONFIG_HEADER_VALUE);
    sut.requestExecutionBuilder().request(request).execute();
    verify(getRequestedFor(urlPathEqualTo(OPERATION)).withHeader(HEADER,matching(CONFIG_HEADER_VALUE)));
  }
  @Test public void headersOnRequestsWinOverClientConfigurationHeaders() throws Exception {
    Request<?> request=newGetRequest(OPERATION);
    request.getOriginalRequest().putCustomRequestHeader(HEADER,REQUEST_HEADER_VALUE);
    AmazonHttpClient sut=createClient(HEADER,CONFIG_HEADER_VALUE);
    sut.requestExecutionBuilder().request(request).execute();
    verify(getRequestedFor(urlPathEqualTo(OPERATION)).withHeader(HEADER,matching(REQUEST_HEADER_VALUE)));
  }
  @Test public void canHandleOptionsRequest() throws Exception {
    Request<?> request=newRequest(OPERATION);
    request.setHttpMethod(HttpMethodName.OPTIONS);
    AmazonHttpClient sut=new AmazonHttpClient(new ClientConfiguration());
    sut.requestExecutionBuilder().request(request).execute();
    verify(optionsRequestedFor(urlPathEqualTo(OPERATION)));
  }
  private AmazonHttpClient createClient(  String headerName,  String headerValue){
    ClientConfiguration clientConfiguration=new ClientConfiguration().withHeader(headerName,headerValue);
    return new AmazonHttpClient(clientConfiguration);
  }
}
