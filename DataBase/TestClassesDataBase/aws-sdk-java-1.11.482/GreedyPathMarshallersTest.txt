public class GreedyPathMarshallersTest {
  private final PathMarshallers.PathMarshaller marshaller=PathMarshallers.GREEDY;
  @Test(expected=IllegalArgumentException.class) public void nullPathValue_ThrowsException(){
    marshaller.marshall("/foo/{greedyParam+}","greedyParam",(String)null);
  }
  @Test(expected=IllegalArgumentException.class) public void emptyPathValue_ThrowsException(){
    marshaller.marshall("/foo/{greedyParam+}","greedyParam","");
  }
  @Test public void nonEmptyPathValue_ReplacesPlaceholder(){
    assertEquals("/foo/nonEmpty",marshaller.marshall("/foo/{greedyParam+}","greedyParam","nonEmpty"));
  }
  @Test public void pathValueWithSlashes_NotUrlEncodedWhenReplaced(){
    assertEquals("/foo/my/greedy/value",marshaller.marshall("/foo/{greedyParam+}","greedyParam","my/greedy/value"));
  }
  @Test public void pathValueWithLeadingSlash_TrimmedBeforeReplaced(){
    assertEquals("/foo/my/greedy/value",marshaller.marshall("/foo/{greedyParam+}","greedyParam","/my/greedy/value"));
  }
  @Test public void integerPathValue_ReplacesPlaceholder(){
    assertEquals("/foo/1234",marshaller.marshall("/foo/{greedyParam+}","greedyParam",1234));
  }
  @Test public void longPathValue_ReplacesPlaceholder(){
    assertEquals("/foo/9001",marshaller.marshall("/foo/{greedyParam+}","greedyParam",9001L));
  }
  @Test(expected=IllegalArgumentException.class) public void nullIntegerPathValue_ThrowsException(){
    marshaller.marshall("/foo/{greedyParam+}","greedyParam",(Integer)null);
  }
  @Test(expected=IllegalArgumentException.class) public void nullLongPathValue_ThrowsException(){
    marshaller.marshall("/foo/{greedyParam+}","greedyParam",(Long)null);
  }
}
