/** 
 * If the EC2 metadata service is running it should return the region the server is mocked with.
 */
public static class MetadataServiceRunningTest {
  private static EC2MetadataUtilsServer server;
  private AwsRegionProvider regionProvider;
  @BeforeClass public static void setupFixture() throws IOException {
    server=new EC2MetadataUtilsServer("localhost",0);
    server.start();
    System.setProperty(SDKGlobalConfiguration.EC2_METADATA_SERVICE_OVERRIDE_SYSTEM_PROPERTY,"http://localhost:" + server.getLocalPort());
  }
  @AfterClass public static void tearDownFixture() throws IOException {
    server.stop();
    System.clearProperty(SDKGlobalConfiguration.EC2_METADATA_SERVICE_OVERRIDE_SYSTEM_PROPERTY);
  }
  @Before public void setup(){
    regionProvider=new InstanceMetadataRegionProvider();
  }
  @Test public void metadataServiceRunning_ProvidesCorrectRegion(){
    assertEquals("us-east-1",regionProvider.getRegion());
  }
  @Test public void ec2MetadataDisabled_shouldReturnRegionAfterEnabled(){
    try {
      System.setProperty("com.amazonaws.sdk.disableEc2Metadata","true");
      regionProvider.getRegion();
      fail("exception not thrown when EC2Metadata disabled");
    }
 catch (    AmazonClientException ex) {
    }
 finally {
      System.clearProperty("com.amazonaws.sdk.disableEc2Metadata");
    }
    assertNotNull("region should not be null",regionProvider.getRegion());
  }
}
