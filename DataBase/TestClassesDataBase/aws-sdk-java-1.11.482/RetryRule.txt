public class RetryRule implements TestRule {
  private int maxRetryAttempts;
  private long delay;
  private TimeUnit timeUnit;
  public RetryRule(  int maxRetryAttempts){
    this(maxRetryAttempts,0,TimeUnit.SECONDS);
  }
  public RetryRule(  int maxRetryAttempts,  long delay,  TimeUnit timeUnit){
    this.maxRetryAttempts=maxRetryAttempts;
    this.delay=delay;
    this.timeUnit=ValidationUtils.assertNotNull(timeUnit,"timeUnit");
  }
  @Override public Statement apply(  final Statement base,  Description description){
    return new Statement(){
      @Override public void evaluate() throws Throwable {
        retry(base,1);
      }
      public void retry(      final Statement base,      int attempts) throws Throwable {
        try {
          base.evaluate();
        }
 catch (        Exception e) {
          if (attempts > maxRetryAttempts) {
            throw e;
          }
          System.out.println("Test failed. Retrying with delay of: " + delay + " "+ timeUnit);
          timeUnit.sleep(delay);
          retry(base,++attempts);
        }
      }
    }
;
  }
}
