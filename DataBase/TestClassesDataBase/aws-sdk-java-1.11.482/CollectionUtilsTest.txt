public class CollectionUtilsTest {
  @Test public void isEmpty_NullCollection_ReturnsTrue(){
    assertTrue(CollectionUtils.isNullOrEmpty(null));
  }
  @Test public void isEmpty_EmptyCollection_ReturnsTrue(){
    assertTrue(CollectionUtils.isNullOrEmpty(Collections.emptyList()));
  }
  @Test public void isEmpty_NonEmptyCollection_ReturnsFalse(){
    assertFalse(CollectionUtils.isNullOrEmpty(Arrays.asList("something")));
  }
  @Test public void join_NullCollection_ReturnsNull(){
    assertThat(CollectionUtils.join(null,","),isEmptyString());
  }
  @Test public void join_EmptyCollection_ReturnsNull(){
    assertThat(CollectionUtils.join(Collections.<String>emptyList(),","),isEmptyString());
  }
  @Test public void join_SingleItemCollection_ReturnsItemAsString(){
    assertEquals("foo",CollectionUtils.join(Arrays.asList("foo"),","));
  }
  @Test public void join_SingleItemCollectionOfNullString_ReturnsEmptyString(){
    List<String> list=new ArrayList<String>();
    list.add(null);
    assertEquals("",CollectionUtils.join(list,","));
  }
  @Test public void join_MultiItemCollection_ReturnsItemsJoinedWithSeparator(){
    assertEquals("foo,bar,baz",CollectionUtils.join(Arrays.asList("foo","bar","baz"),","));
  }
  @Test public void join_MultiItemCollectionWithNullItem_ReturnsItemsJoinedWithSeparator(){
    assertEquals("foo,,baz",CollectionUtils.join(Arrays.asList("foo",null,"baz"),","));
  }
  @Test public void join_MultiItemCollectionWithAllNulls_ReturnsItemsJoinedWithSeparator(){
    assertEquals(",,",CollectionUtils.join(Arrays.<String>asList(null,null,null),","));
  }
}
