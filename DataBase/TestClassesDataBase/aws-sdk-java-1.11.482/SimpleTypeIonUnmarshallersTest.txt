public class SimpleTypeIonUnmarshallersTest {
  @Test public void unmarshalString() throws Exception {
    assertEquals("foo",StringIonUnmarshaller.getInstance().unmarshall(context("\"foo\"")));
  }
  @Test public void unmarshalDouble() throws Exception {
    assertEquals(new Double(123.456),DoubleIonUnmarshaller.getInstance().unmarshall(context("123.456")));
  }
  @Test public void unmarshalInteger() throws Exception {
    assertEquals(new Integer(-999),IntegerIonUnmarshaller.getInstance().unmarshall(context("-999")));
  }
  @Test public void unmarshalBigInteger() throws Exception {
    assertEquals(new BigInteger("123456789012345678901234567890"),BigIntegerIonUnmarshaller.getInstance().unmarshall(context("123456789012345678901234567890")));
  }
  @Test public void unmarshalBigDecimal() throws Exception {
    assertEquals(new BigDecimal("1234567890.12345678901234567890"),BigDecimalIonUnmarshaller.getInstance().unmarshall(context("1234567890.12345678901234567890")));
  }
  @Test public void unmarshalBoolean() throws Exception {
    assertEquals(Boolean.TRUE,BooleanIonUnmarshaller.getInstance().unmarshall(context("true")));
  }
  @Test public void unmarshalFloat() throws Exception {
    assertEquals(new Float(123.456f),FloatIonUnmarshaller.getInstance().unmarshall(context("123.456")));
  }
  @Test public void unmarshalLong() throws Exception {
    assertEquals(new Long(123456L),LongIonUnmarshaller.getInstance().unmarshall(context("123456")));
  }
  @Test public void unmarshalByte() throws Exception {
    assertEquals(new Byte((byte)123),ByteIonUnmarshaller.getInstance().unmarshall(context("123")));
  }
  @Test public void unmarshalDate() throws Exception {
    Calendar calendar=Calendar.getInstance(TimeZone.getTimeZone("UTC"));
    calendar.clear();
    calendar.set(2000,0,1);
    assertEquals(calendar.getTime(),DateIonUnmarshaller.getInstance().unmarshall(context("2000-01-01T")));
  }
  @Test public void unmarshalByteBuffer() throws Exception {
    byte[] buffer=new byte[]{1,2,3,4,5,6};
    assertEquals(ByteBuffer.wrap(buffer),ByteBufferIonUnmarshaller.getInstance().unmarshall(context("{{AQIDBAUG}}")));
  }
  @Test public void unmarshalShort() throws Exception {
    assertEquals(new Short((short)1234),ShortIonUnmarshaller.getInstance().unmarshall(context("1234")));
  }
  private static JsonUnmarshallerContext context(  String ion) throws Exception {
    JsonParser parser=new IonFactory(IonSystemBuilder.standard().build()).createParser(new StringInputStream(ion));
    JsonUnmarshallerContext context=new JsonUnmarshallerContextImpl(parser,null,null,null);
    context.nextToken();
    return context;
  }
}
