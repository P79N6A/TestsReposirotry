/** 
 * These tests don't actually start up a mock server. They use a partially mocked Apache HTTP client to return the desired response
 */
public class MockedClientTests {
  private AmazonHttpClient httpClient;
  @BeforeClass public static void preConditions(){
    TestPreConditions.assumeNotJava6();
  }
  @Test public void clientExecutionTimeoutEnabled_RequestCompletesWithinTimeout_TaskCanceledAndEntityBuffered() throws Exception {
    ClientConfiguration config=new ClientConfiguration().withClientExecutionTimeout(CLIENT_EXECUTION_TIMEOUT).withMaxErrorRetry(0);
    ConnectionManagerAwareHttpClient rawHttpClient=createRawHttpClientSpy(config);
    HttpResponseProxy responseProxy=createHttpResponseProxySpy();
    doReturn(responseProxy).when(rawHttpClient).execute(any(HttpRequestBase.class),any(HttpContext.class));
    httpClient=new AmazonHttpClient(config,rawHttpClient,null);
    try {
      execute(httpClient,createMockGetRequest());
      fail("Exception expected");
    }
 catch (    AmazonClientException e) {
      NullResponseHandler.assertIsUnmarshallingException(e);
    }
    assertResponseIsBuffered(responseProxy);
    ScheduledThreadPoolExecutor requestTimerExecutor=httpClient.getClientExecutionTimer().getExecutor();
    assertTimerNeverTriggered(requestTimerExecutor);
    assertCanceledTasksRemoved(requestTimerExecutor);
    assertEquals(1,requestTimerExecutor.getPoolSize());
    assertCoreThreadsShutDownAfterBeingIdle(requestTimerExecutor);
  }
  @Test public void clientExecutionTimeoutDisabled_RequestCompletesWithinTimeout_EntityNotBuffered() throws Exception {
    ClientConfiguration config=new ClientConfiguration().withClientExecutionTimeout(0);
    ConnectionManagerAwareHttpClient rawHttpClient=createRawHttpClientSpy(config);
    HttpResponseProxy responseProxy=createHttpResponseProxySpy();
    doReturn(responseProxy).when(rawHttpClient).execute(any(HttpRequestBase.class),any(HttpContext.class));
    httpClient=new AmazonHttpClient(config,rawHttpClient,null);
    try {
      execute(httpClient,createMockGetRequest());
      fail("Exception expected");
    }
 catch (    AmazonClientException e) {
    }
    assertResponseWasNotBuffered(responseProxy);
  }
  @Test public void clientExecutionTimeoutEnabled_RequestCompletesWithinTimeout_EntityNotBufferedForStreamedResponse() throws Exception {
    ClientConfiguration config=new ClientConfiguration().withClientExecutionTimeout(CLIENT_EXECUTION_TIMEOUT);
    ConnectionManagerAwareHttpClient rawHttpClient=createRawHttpClientSpy(config);
    HttpResponseProxy responseProxy=createHttpResponseProxySpy();
    doReturn(responseProxy).when(rawHttpClient).execute(any(HttpRequestBase.class),any(HttpContext.class));
    httpClient=new AmazonHttpClient(config,rawHttpClient,null);
    try {
      httpClient.requestExecutionBuilder().request(createMockGetRequest()).execute(new ErrorDuringUnmarshallingResponseHandler().leaveConnectionOpen());
      fail("Exception expected");
    }
 catch (    AmazonClientException e) {
    }
    assertResponseWasNotBuffered(responseProxy);
  }
}
