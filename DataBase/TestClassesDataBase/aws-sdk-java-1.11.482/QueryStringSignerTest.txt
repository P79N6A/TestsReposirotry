public class QueryStringSignerTest {
  private static final QueryStringSigner signer=new QueryStringSigner();
  private static final AWSCredentials credentials=new BasicAWSCredentials("123456789","123456789");
  private static final String EXPECTED_SIGNATURE="VjYMhf9TWp08zAxXbKDAvUhW9GjJ56QjAuSj3LBsfjM=";
static {
    Calendar c=new GregorianCalendar();
    c.clear();
    c.set(1981,1,16,6,30,0);
    c.setTimeZone(TimeZone.getTimeZone("UTC"));
    signer.overrideDate(c.getTime());
  }
  @Test public void testRequestResourcePath() throws Exception {
    SignableRequest<?> request=MockRequestBuilder.create().withEndpoint("http://foo.amazon.com").withParameter("foo","bar").withPath("foo/bar").build();
    signer.sign(request,credentials);
    assertSignature(EXPECTED_SIGNATURE,request.getParameters());
  }
  @Test public void testRequestAndEndpointResourcePath() throws Exception {
    SignableRequest<?> request=MockRequestBuilder.create().withEndpoint("http://foo.amazon.com/foo").withParameter("foo","bar").withPath("/bar").build();
    signer.sign(request,credentials);
    assertSignature(EXPECTED_SIGNATURE,request.getParameters());
  }
  @Test public void testRequestAndEndpointResourcePathNoSlash() throws Exception {
    SignableRequest<?> request=MockRequestBuilder.create().withEndpoint("http://foo.amazon.com/foo").withParameter("foo","bar").withPath("bar").build();
    signer.sign(request,credentials);
    assertSignature(EXPECTED_SIGNATURE,request.getParameters());
  }
  @Test public void testAnonymous() throws Exception {
    SignableRequest<?> request=MockRequestBuilder.create().withEndpoint("http://foo.amazon.com").withParameter("foo","bar").withPath("bar").build();
    signer.sign(request,new AnonymousAWSCredentials());
    assertNull(request.getParameters().get("Signature"));
  }
  /** 
 * Asserts the given signature to the signature generated as part of the signing the request.
 */
  private void assertSignature(  String expected,  Map<String,List<String>> requestParams){
    List<String> signature=requestParams.get("Signature");
    assertNotNull(signature);
    assertEquals(1,signature.size());
    assertEquals(expected,signature.iterator().next());
  }
}
