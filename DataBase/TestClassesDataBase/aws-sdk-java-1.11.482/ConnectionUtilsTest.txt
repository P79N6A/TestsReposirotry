public class ConnectionUtilsTest {
  @ClassRule public static WireMockRule mockProxyServer=new WireMockRule(0);
  @Rule public WireMockRule mockServer=new WireMockRule(0);
  private final ConnectionUtils sut=ConnectionUtils.getInstance();
  @After public void cleanup(){
    System.getProperties().remove("http.proxyHost");
    System.getProperties().remove("http.proxyPort");
  }
  @Test public void proxiesAreNotUsedEvenIfPropertyIsSet() throws IOException {
    System.getProperties().put("http.proxyHost","localhost");
    System.getProperties().put("http.proxyPort",String.valueOf(mockProxyServer.port()));
    HttpURLConnection connection=sut.connectToEndpoint(URI.create("http://" + Inet4Address.getLocalHost().getHostAddress() + ":"+ mockServer.port()),new HashMap<String,String>());
    assertThat(connection.usingProxy(),is(false));
  }
  @Test public void headersArePassedAsPartOfRequest() throws IOException {
    HttpURLConnection connection=sut.connectToEndpoint(URI.create("http://localhost:" + mockServer.port()),Collections.singletonMap("HeaderA","ValueA"));
    connection.getResponseCode();
    mockServer.verify(getRequestedFor(urlMatching("/")).withHeader("HeaderA",equalTo("ValueA")));
  }
}
