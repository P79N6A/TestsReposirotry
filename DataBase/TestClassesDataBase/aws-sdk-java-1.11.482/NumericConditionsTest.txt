public class NumericConditionsTest {
  @Test public void getExpectedValue_numericEquals_ReturnsIntegralString(){
    assertEquals("42",eq("$.var",42).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericGreaterThan_ReturnsIntegralString(){
    assertEquals("42",gt("$.var",42).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericGreaterThanEquals_ReturnsIntegralString(){
    assertEquals("42",gte("$.var",42).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericLessThan_ReturnsIntegralString(){
    assertEquals("42",lt("$.var",42).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericLessThanEquals_ReturnsIntegralString(){
    assertEquals("42",lte("$.var",42).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericEquals_ReturnsDoubleString(){
    assertEquals("9000.1",eq("$.var",9000.1).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericGreaterThan_ReturnsDoubleString(){
    assertEquals("9000.1",gt("$.var",9000.1).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericGreaterThanEquals_ReturnsDoubleString(){
    assertEquals("9000.1",gte("$.var",9000.1).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericLessThan_ReturnsDoubleString(){
    assertEquals("9000.1",lt("$.var",9000.1).build().getExpectedValue());
  }
  @Test public void getExpectedValue_numericLessThanEquals_ReturnsDoubleString(){
    assertEquals("9000.1",lte("$.var",9000.1).build().getExpectedValue());
  }
}
