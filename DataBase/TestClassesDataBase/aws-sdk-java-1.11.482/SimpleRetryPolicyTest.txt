@RunWith(MockitoJUnitRunner.class) public class SimpleRetryPolicyTest {
  @Mock private RetryCondition retryCondition;
  @Mock private BackoffStrategy backoffStrategy;
  @Test(expected=IllegalArgumentException.class) public void nullRetryCondition_ThrowsException(){
    new SimpleRetryPolicy(null,backoffStrategy);
  }
  @Test(expected=IllegalArgumentException.class) public void nullBackoffStrategy_ThrowsException(){
    new SimpleRetryPolicy(retryCondition,null);
  }
  @Test public void shouldRetry_DelegatesToRetryCondition(){
    RetryPolicy policy=new SimpleRetryPolicy(retryCondition,backoffStrategy);
    policy.shouldRetry(RetryPolicyContexts.EMPTY);
    verify(retryCondition).shouldRetry(RetryPolicyContexts.EMPTY);
  }
  @Test public void delay_DelegatesToBackoffStrategy(){
    RetryPolicy policy=new SimpleRetryPolicy(retryCondition,backoffStrategy);
    policy.computeDelayBeforeNextRetry(RetryPolicyContexts.EMPTY);
    verify(backoffStrategy).computeDelayBeforeNextRetry(RetryPolicyContexts.EMPTY);
  }
}
