public class AwsRegionProviderChainTest {
  @Test public void firstProviderInChainGivesRegionInformation_DoesNotConsultOtherProviders(){
    AwsRegionProvider providerOne=mock(AwsRegionProvider.class);
    AwsRegionProvider providerTwo=mock(AwsRegionProvider.class);
    AwsRegionProvider providerThree=mock(AwsRegionProvider.class);
    AwsRegionProviderChain chain=new AwsRegionProviderChain(providerOne,providerTwo,providerThree);
    final String expectedRegion="some-region-string";
    when(providerOne.getRegion()).thenReturn(expectedRegion);
    assertEquals(expectedRegion,chain.getRegion());
    verify(providerTwo,never()).getRegion();
    verify(providerThree,never()).getRegion();
  }
  @Test public void lastProviderInChainGivesRegionInformation(){
    final String expectedRegion="some-region-string";
    AwsRegionProviderChain chain=new AwsRegionProviderChain(new NeverAwsRegionProvider(),new NeverAwsRegionProvider(),new StaticAwsRegionProvider(expectedRegion));
    assertEquals(expectedRegion,chain.getRegion());
  }
  @Test public void providerThrowsException_ContinuesToNextInChain(){
    final String expectedRegion="some-region-string";
    AwsRegionProviderChain chain=new AwsRegionProviderChain(new NeverAwsRegionProvider(),new FaultyAwsRegionProvider(),new StaticAwsRegionProvider(expectedRegion));
    assertEquals(expectedRegion,chain.getRegion());
  }
  /** 
 * Only Exceptions should be caught and continued, Errors should propagate to caller and short circuit the chain.
 */
  @Test(expected=Error.class) public void providerThrowsError_DoesNotContinueChain(){
    final String expectedRegion="some-region-string";
    AwsRegionProviderChain chain=new AwsRegionProviderChain(new NeverAwsRegionProvider(),new FatalAwsRegionProvider(),new StaticAwsRegionProvider(expectedRegion));
    assertEquals(expectedRegion,chain.getRegion());
  }
  @Test(expected=AmazonClientException.class) public void noProviderGivesRegion_ThrowsAmazonClientException(){
    AwsRegionProviderChain chain=new AwsRegionProviderChain(new NeverAwsRegionProvider(),new NeverAwsRegionProvider(),new NeverAwsRegionProvider());
    chain.getRegion();
  }
private static class NeverAwsRegionProvider extends AwsRegionProvider {
    @Override public String getRegion() throws AmazonClientException {
      return null;
    }
  }
private static class StaticAwsRegionProvider extends AwsRegionProvider {
    private final String region;
    public StaticAwsRegionProvider(    String region){
      this.region=region;
    }
    @Override public String getRegion(){
      return region;
    }
  }
private static class FaultyAwsRegionProvider extends AwsRegionProvider {
    @Override public String getRegion() throws AmazonClientException {
      throw new AmazonClientException("Unable to fetch region info");
    }
  }
private static class FatalAwsRegionProvider extends AwsRegionProvider {
    @Override public String getRegion() throws AmazonClientException {
      throw new Error("Something really bad happened");
    }
  }
}
