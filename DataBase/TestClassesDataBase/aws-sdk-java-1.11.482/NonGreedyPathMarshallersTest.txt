public class NonGreedyPathMarshallersTest {
  private final PathMarshallers.PathMarshaller marshaller=PathMarshallers.NON_GREEDY;
  @Test(expected=IllegalArgumentException.class) public void nullPathValue_ThrowsException(){
    marshaller.marshall("/foo/{pathParam}","pathParam",(String)null);
  }
  @Test(expected=IllegalArgumentException.class) public void emptyPathValue_ThrowsException(){
    marshaller.marshall("/foo/{pathParam}","pathParam","");
  }
  @Test public void nonEmptyPathValue_ReplacesPlaceholder(){
    assertEquals("/foo/nonEmpty",marshaller.marshall("/foo/{pathParam}","pathParam","nonEmpty"));
  }
  @Test public void pathValueWithSlashes_UrlEncodedWhenReplaced(){
    assertEquals("/foo/has%2Fslash",marshaller.marshall("/foo/{pathParam}","pathParam","has/slash"));
  }
  @Test public void integerPathValue_ReplacesPlaceholder(){
    assertEquals("/foo/1234",marshaller.marshall("/foo/{pathParam}","pathParam",1234));
  }
  @Test public void longPathValue_ReplacesPlaceholder(){
    assertEquals("/foo/9001",marshaller.marshall("/foo/{pathParam}","pathParam",9001L));
  }
  @Test(expected=IllegalArgumentException.class) public void nullIntegerPathValue_ThrowsException(){
    marshaller.marshall("/foo/{pathParam}","pathParam",(Integer)null);
  }
  @Test(expected=IllegalArgumentException.class) public void nullLongPathValue_ThrowsException(){
    marshaller.marshall("/foo/{pathParam}","pathParam",(Long)null);
  }
}
