public class SdkTransactionIdInHeaderTest extends WireMockTestBase {
  private static final String RESOURCE_PATH="/transaction-id/";
  @Test public void retriedRequest_HasSameTransactionIdForAllRetries() throws Exception {
    stubFor(get(urlEqualTo(RESOURCE_PATH)).willReturn(aResponse().withStatus(500)));
    executeRequest();
    assertTransactionIdIsUnchangedAcrossRetries();
  }
  private void assertTransactionIdIsUnchangedAcrossRetries(){
    String previousTransactionId=null;
    for (    LoggedRequest request : findAll(getRequestedFor(urlEqualTo(RESOURCE_PATH)))) {
      final String currentTransactionId=request.getHeader(HEADER_SDK_TRANSACTION_ID);
      assertNotNull(currentTransactionId);
      if (previousTransactionId != null) {
        assertEquals(previousTransactionId,currentTransactionId);
      }
      previousTransactionId=currentTransactionId;
    }
  }
  private void executeRequest() throws Exception {
    AmazonHttpClient httpClient=new AmazonHttpClient(new ClientConfiguration());
    try {
      httpClient.requestExecutionBuilder().request(newGetRequest(RESOURCE_PATH)).errorResponseHandler(stubErrorHandler()).execute();
      fail("Expected exception");
    }
 catch (    AmazonServiceException expected) {
    }
  }
}
