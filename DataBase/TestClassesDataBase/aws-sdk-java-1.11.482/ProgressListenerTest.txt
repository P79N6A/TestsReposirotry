public class ProgressListenerTest {
  @Test public void throwErrorWithSyncListener(){
    ProgressListener syncListener=new SyncProgressListener(){
      @Override public void progressChanged(      ProgressEvent progressEvent){
        throw new Error();
      }
    }
;
    ExceptionReporter reporter=ExceptionReporter.wrap(syncListener);
    publishProgress(syncListener,ProgressEventType.CLIENT_REQUEST_STARTED_EVENT);
    assertNull(reporter.getCause());
    publishProgress(reporter,ProgressEventType.CLIENT_REQUEST_STARTED_EVENT);
    assertNotNull(reporter.getCause());
    try {
      reporter.throwExceptionIfAny();
      fail();
    }
 catch (    AmazonClientException ex) {
    }
  }
  @Test public void throwErrorWithAsyncListener() throws InterruptedException {
    final CountDownLatch latch=new CountDownLatch(1);
    ProgressListener asyncListener=new ProgressListener(){
      @Override public void progressChanged(      ProgressEvent progressEvent){
        throw new Error();
      }
    }
;
    ExceptionReporter reporter=new ExceptionReporter(asyncListener){
      @Override public void progressChanged(      ProgressEvent progressEvent){
        super.progressChanged(progressEvent);
        latch.countDown();
      }
    }
;
    publishProgress(reporter,ProgressEventType.CLIENT_REQUEST_STARTED_EVENT);
    latch.await();
    assertNotNull(reporter.getCause());
    try {
      reporter.throwExceptionIfAny();
      fail();
    }
 catch (    AmazonClientException ex) {
    }
  }
}
