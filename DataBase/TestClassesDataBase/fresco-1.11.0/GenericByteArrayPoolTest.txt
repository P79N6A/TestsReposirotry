/** 
 * Basic tests for GenericByteArrayPool
 */
@RunWith(RobolectricTestRunner.class) public class GenericByteArrayPoolTest {
  private GenericByteArrayPool mPool;
  @Before public void setup(){
    final SparseIntArray bucketSizes=new SparseIntArray();
    bucketSizes.put(32,2);
    bucketSizes.put(64,1);
    bucketSizes.put(128,1);
    mPool=new GenericByteArrayPool(mock(MemoryTrimmableRegistry.class),new PoolParams(128,bucketSizes),mock(PoolStatsTracker.class));
  }
  @Test public void testAlloc() throws Exception {
    Assert.assertEquals(1,mPool.alloc(1).length);
    Assert.assertEquals(33,mPool.alloc(33).length);
    Assert.assertEquals(32,mPool.alloc(32).length);
  }
  @Test public void testFree() throws Exception {
  }
  @Test public void testGetBucketedSize() throws Exception {
    Assert.assertEquals(32,mPool.getBucketedSize(1));
    Assert.assertEquals(32,mPool.getBucketedSize(32));
    Assert.assertEquals(64,mPool.getBucketedSize(33));
    Assert.assertEquals(64,mPool.getBucketedSize(64));
    Assert.assertEquals(128,mPool.getBucketedSize(69));
    Assert.assertEquals(129,mPool.getBucketedSize(129));
    int[] invalidSizes=new int[]{-1,0};
    for (    int size : invalidSizes) {
      try {
        mPool.getBucketedSize(size);
        Assert.fail();
      }
 catch (      BasePool.InvalidSizeException e) {
      }
    }
  }
  @Test public void testGetBucketedSizeForValue() throws Exception {
    Assert.assertEquals(32,mPool.getBucketedSizeForValue(new byte[32]));
    Assert.assertEquals(64,mPool.getBucketedSizeForValue(new byte[64]));
    Assert.assertEquals(128,mPool.getBucketedSizeForValue(new byte[128]));
    Assert.assertEquals(1,mPool.getBucketedSizeForValue(new byte[1]));
    Assert.assertEquals(129,mPool.getBucketedSizeForValue(new byte[129]));
    Assert.assertEquals(31,mPool.getBucketedSizeForValue(new byte[31]));
  }
  @Test public void testGetSizeInBytes() throws Exception {
    Assert.assertEquals(1,mPool.getSizeInBytes(1));
    Assert.assertEquals(32,mPool.getSizeInBytes(32));
    Assert.assertEquals(33,mPool.getSizeInBytes(33));
    Assert.assertEquals(64,mPool.getSizeInBytes(64));
    Assert.assertEquals(69,mPool.getSizeInBytes(69));
  }
}
