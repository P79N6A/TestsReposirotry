private static class ProduceResultsNewResultAnswer implements Answer<Void> {
  private final List<CloseableReference<CloseableImage>> mResults;
  private ProduceResultsNewResultAnswer(  List<CloseableReference<CloseableImage>> results){
    mResults=results;
  }
  @Override public Void answer(  InvocationOnMock invocation) throws Throwable {
    Consumer consumer=(Consumer)invocation.getArguments()[0];
    Iterator<CloseableReference<CloseableImage>> iterator=mResults.iterator();
    while (iterator.hasNext()) {
      CloseableReference<CloseableImage> result=iterator.next();
      consumer.onNewResult(result,BaseConsumer.simpleStatusForIsLast(!iterator.hasNext()));
    }
    return null;
  }
}
