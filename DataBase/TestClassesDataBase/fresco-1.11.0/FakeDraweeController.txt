public static class FakeDraweeController extends AbstractDraweeController<FakeImage,FakeImageInfo> {
  private Supplier<DataSource<FakeImage>> mDataSourceSupplier;
  public boolean mIsAttached=false;
  public FakeDraweeController(  DeferredReleaser deferredReleaser,  Executor uiThreadExecutor,  Supplier<DataSource<FakeImage>> dataSourceSupplier,  String id,  Object callerContext){
    super(deferredReleaser,uiThreadExecutor,id,callerContext);
    mDataSourceSupplier=dataSourceSupplier;
  }
  @Override public void onAttach(){
    mIsAttached=true;
    super.onAttach();
  }
  @Override public void onDetach(){
    mIsAttached=false;
    super.onDetach();
  }
  public boolean isAttached(){
    return mIsAttached;
  }
  @Override protected DataSource<FakeImage> getDataSource(){
    return mDataSourceSupplier.get();
  }
  @Override protected Drawable createDrawable(  FakeImage image){
    return image.getDrawable();
  }
  @Override protected @Nullable FakeImageInfo getImageInfo(  FakeImage image){
    return image.getImageInfo();
  }
  @Override protected void releaseImage(  @Nullable FakeImage image){
    if (image != null) {
      image.close();
    }
  }
  @Override protected void releaseDrawable(  @Nullable Drawable drawable){
  }
  @Override public boolean isSameImageRequest(  DraweeController other){
    return false;
  }
}
