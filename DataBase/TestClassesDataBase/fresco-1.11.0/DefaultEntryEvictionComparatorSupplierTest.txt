/** 
 * Test for  {@link DefaultEntryEvictionComparatorSupplierTest}
 */
@RunWith(RobolectricTestRunner.class) public class DefaultEntryEvictionComparatorSupplierTest {
  private static final long RANDOM_SEED=42;
  @Test public void testSortingOrder(){
    Random random=new Random(RANDOM_SEED);
    List<DiskStorage.Entry> entries=new ArrayList<>();
    for (int i=0; i < 100; i++) {
      entries.add(createEntry(random.nextLong()));
    }
    Collections.sort(entries,new DefaultEntryEvictionComparatorSupplier().get());
    for (int i=0; i < entries.size() - 1; i++) {
      assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());
    }
  }
  private static DiskStorage.Entry createEntry(  long time){
    DiskStorage.Entry entry=mock(DiskStorage.Entry.class);
    when(entry.getTimestamp()).thenReturn(time);
    return entry;
  }
}
