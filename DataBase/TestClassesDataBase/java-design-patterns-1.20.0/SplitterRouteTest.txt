/** 
 * Test class for <i>SplitterRoute</i>. <p> In order for it to work we have to mock endpoints we want to read/write to. To mock those we need to substitute original endpoint names to mocks. </p>
 */
@ExtendWith(SpringExtension.class) @SpringApplicationConfiguration(classes=SplitterRouteTest.class) @ActiveProfiles("test") @EnableAutoConfiguration @ComponentScan public class SplitterRouteTest {
  @EndpointInject(uri="{{entry}}") private ProducerTemplate entry;
  @EndpointInject(uri="{{endpoint}}") private MockEndpoint endpoint;
  /** 
 * Test if endpoint receives three separate messages.
 * @throws Exception in case of en exception during the test
 */
  @Test @DirtiesContext public void testSplitter() throws Exception {
    entry.sendBody(new String[]{"TEST1","TEST2","TEST3"});
    endpoint.expectedMessageCount(3);
    endpoint.assertIsSatisfied();
  }
}
