/** 
 * Date: 12/20/15 - 2:04 PM
 * @author Jeroen Meulemeester
 */
public class GiantViewTest {
  private InMemoryAppender appender;
  @BeforeEach public void setUp(){
    appender=new InMemoryAppender(GiantView.class);
  }
  @AfterEach public void tearDown(){
    appender.stop();
  }
  /** 
 * Verify if the  {@link GiantView} does what it has to do: Print the {@link GiantModel} to thestandard out stream, nothing more, nothing less.
 */
  @Test public void testDisplayGiant(){
    final GiantView view=new GiantView();
    final GiantModel model=mock(GiantModel.class);
    view.displayGiant(model);
    assertEquals(model.toString(),appender.getLastMessage());
    assertEquals(1,appender.getLogSize());
  }
  /** 
 * Logging Appender Implementation
 */
public class InMemoryAppender extends AppenderBase<ILoggingEvent> {
    private List<ILoggingEvent> log=new LinkedList<>();
    public InMemoryAppender(    Class clazz){
      ((Logger)LoggerFactory.getLogger(clazz)).addAppender(this);
      start();
    }
    @Override protected void append(    ILoggingEvent eventObject){
      log.add(eventObject);
    }
    public String getLastMessage(){
      return log.get(log.size() - 1).getMessage();
    }
    public int getLogSize(){
      return log.size();
    }
  }
}
