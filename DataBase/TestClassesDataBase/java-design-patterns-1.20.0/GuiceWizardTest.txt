/** 
 * Date: 12/10/15 - 8:57 PM
 * @author Jeroen Meulemeester
 */
public class GuiceWizardTest {
  private InMemoryAppender appender;
  @BeforeEach public void setUp(){
    appender=new InMemoryAppender(Tobacco.class);
  }
  @AfterEach public void tearDown(){
    appender.stop();
  }
  /** 
 * Test if the  {@link GuiceWizard} smokes whatever instance of {@link Tobacco} is passed to himthrough the constructor parameter
 */
  @Test public void testSmokeEveryThingThroughConstructor() throws Exception {
    final Tobacco[] tobaccos={new OldTobyTobacco(),new RivendellTobacco(),new SecondBreakfastTobacco()};
    for (    final Tobacco tobacco : tobaccos) {
      final GuiceWizard guiceWizard=new GuiceWizard(tobacco);
      guiceWizard.smoke();
      assertEquals("GuiceWizard smoking " + tobacco.getClass().getSimpleName(),appender.getLastMessage());
    }
    assertEquals(tobaccos.length,appender.getLogSize());
  }
  /** 
 * Test if the  {@link GuiceWizard} smokes whatever instance of {@link Tobacco} is passed to himthrough the Guice google inject framework
 */
  @Test public void testSmokeEveryThingThroughInjectionFramework() throws Exception {
    @SuppressWarnings("unchecked") final Class<? extends Tobacco>[] tobaccos=new Class[]{OldTobyTobacco.class,RivendellTobacco.class,SecondBreakfastTobacco.class};
    for (    final Class<? extends Tobacco> tobaccoClass : tobaccos) {
      final Injector injector=Guice.createInjector(new AbstractModule(){
        @Override protected void configure(){
          bind(Tobacco.class).to(tobaccoClass);
        }
      }
);
      final GuiceWizard guiceWizard=injector.getInstance(GuiceWizard.class);
      guiceWizard.smoke();
      assertEquals("GuiceWizard smoking " + tobaccoClass.getSimpleName(),appender.getLastMessage());
    }
    assertEquals(tobaccos.length,appender.getLogSize());
  }
}
