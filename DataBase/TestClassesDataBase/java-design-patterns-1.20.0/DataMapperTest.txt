/** 
 * The Data Mapper (DM) is a layer of software that separates the in-memory objects from the database. Its responsibility is to transfer data between the two and also to isolate them from each other. With Data Mapper the in-memory objects needn't know even that there's a database present; they need no SQL interface code, and certainly no knowledge of the database schema. (The database schema is always ignorant of the objects that use it.) Since it's a form of Mapper , Data Mapper itself is even unknown to the domain layer. <p>
 */
public class DataMapperTest {
  /** 
 * This test verify that first data mapper is able to perform all CRUD operations on Student
 */
  @Test public void testFirstDataMapper(){
    final StudentDataMapper mapper=new StudentDataMapperImpl();
    Student student=new Student(1,"Adam",'A');
    mapper.insert(student);
    assertEquals(student.getStudentId(),mapper.find(student.getStudentId()).get().getStudentId());
    student=new Student(student.getStudentId(),"AdamUpdated",'A');
    mapper.update(student);
    assertEquals(mapper.find(student.getStudentId()).get().getName(),"AdamUpdated");
    mapper.delete(student);
    assertEquals(false,mapper.find(student.getStudentId()).isPresent());
  }
}
