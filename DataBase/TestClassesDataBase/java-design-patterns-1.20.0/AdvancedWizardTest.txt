/** 
 * Date: 12/10/15 - 8:40 PM
 * @author Jeroen Meulemeester
 */
public class AdvancedWizardTest {
  private InMemoryAppender appender;
  @BeforeEach public void setUp(){
    appender=new InMemoryAppender(Tobacco.class);
  }
  @AfterEach public void tearDown(){
    appender.stop();
  }
  /** 
 * Test if the  {@link AdvancedWizard} smokes whatever instance of {@link Tobacco} is passed to himthrough the constructor parameter
 */
  @Test public void testSmokeEveryThing() throws Exception {
    final Tobacco[] tobaccos={new OldTobyTobacco(),new RivendellTobacco(),new SecondBreakfastTobacco()};
    for (    final Tobacco tobacco : tobaccos) {
      final AdvancedWizard advancedWizard=new AdvancedWizard(tobacco);
      advancedWizard.smoke();
      assertEquals("AdvancedWizard smoking " + tobacco.getClass().getSimpleName(),appender.getLastMessage());
    }
    assertEquals(tobaccos.length,appender.getLogSize());
  }
}
