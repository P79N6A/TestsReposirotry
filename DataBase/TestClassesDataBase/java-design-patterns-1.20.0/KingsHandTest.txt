/** 
 * Date: 12/12/15 - 10:57 AM
 * @author Jeroen Meulemeester
 */
public class KingsHandTest extends EventEmitterTest<KingsHand> {
  /** 
 * Create a new test instance, using the correct object factory
 */
  public KingsHandTest(){
    super(null,null,KingsHand::new,KingsHand::new);
  }
  /** 
 * The  {@link KingsHand} is both an {@link EventEmitter} as an {@link EventObserver} so verify if everyevent received is passed up to it's superior, in most cases  {@link KingJoffrey} but now just amocked observer.
 */
  @Test public void testPassThrough() throws Exception {
    final EventObserver observer=mock(EventObserver.class);
    final KingsHand kingsHand=new KingsHand(observer);
    verifyZeroInteractions(observer);
    for (    final Event event : Event.values()) {
      kingsHand.onEvent(event);
      verify(observer,times(1)).onEvent(eq(event));
      verifyNoMoreInteractions(observer);
    }
  }
}
