/** 
 * Date: 28/04/17 - 7:40 AM
 * @author Stanislav Kapinus
 */
public class AdvancedSorceressTest {
  private InMemoryAppender appender;
  @BeforeEach public void setUp(){
    appender=new InMemoryAppender(Tobacco.class);
  }
  @AfterEach public void tearDown(){
    appender.stop();
  }
  /** 
 * Test if the  {@link AdvancedSorceress} smokes whatever instance of {@link Tobacco} is passed to herthrough the setter's parameter
 */
  @Test public void testSmokeEveryThing() throws Exception {
    final Tobacco[] tobaccos={new OldTobyTobacco(),new RivendellTobacco(),new SecondBreakfastTobacco()};
    for (    final Tobacco tobacco : tobaccos) {
      final AdvancedSorceress advancedSorceress=new AdvancedSorceress();
      advancedSorceress.setTobacco(tobacco);
      advancedSorceress.smoke();
      assertEquals("AdvancedSorceress smoking " + tobacco.getClass().getSimpleName(),appender.getLastMessage());
    }
    assertEquals(tobaccos.length,appender.getLogSize());
  }
}
