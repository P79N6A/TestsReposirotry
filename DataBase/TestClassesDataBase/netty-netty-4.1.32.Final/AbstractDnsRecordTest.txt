public class AbstractDnsRecordTest {
  @Test public void testValidDomainName(){
    String name="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
    AbstractDnsRecord record=new AbstractDnsRecord(name,DnsRecordType.A,0){
    }
;
    Assert.assertEquals(name + '.',record.name());
  }
  @Test public void testValidDomainNameUmlaut(){
    String name="ä";
    AbstractDnsRecord record=new AbstractDnsRecord(name,DnsRecordType.A,0){
    }
;
    Assert.assertEquals("xn--4ca.",record.name());
  }
  @Test public void testValidDomainNameTrailingDot(){
    String name="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.";
    AbstractDnsRecord record=new AbstractDnsRecord(name,DnsRecordType.A,0){
    }
;
    Assert.assertEquals(name,record.name());
  }
  @Test public void testValidDomainNameUmlautTrailingDot(){
    String name="ä.";
    AbstractDnsRecord record=new AbstractDnsRecord(name,DnsRecordType.A,0){
    }
;
    Assert.assertEquals("xn--4ca.",record.name());
  }
  @Test(expected=IllegalArgumentException.class) public void testValidDomainNameLength(){
    String name="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
    new AbstractDnsRecord(name,DnsRecordType.A,0){
    }
;
  }
  @Test(expected=IllegalArgumentException.class) public void testValidDomainNameUmlautLength(){
    String name="äaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
    new AbstractDnsRecord(name,DnsRecordType.A,0){
    }
;
  }
}
