public class SignatureAlgorithmConverterTest {
  @Test public void testWithEncryption(){
    assertEquals("SHA512withRSA",SignatureAlgorithmConverter.toJavaName("sha512WithRSAEncryption"));
  }
  @Test public void testWithDash(){
    assertEquals("SHA256withECDSA",SignatureAlgorithmConverter.toJavaName("ecdsa-with-SHA256"));
  }
  @Test public void testWithUnderscore(){
    assertEquals("SHA256withDSA",SignatureAlgorithmConverter.toJavaName("dsa_with_SHA256"));
  }
  @Test public void testBoringSSLOneUnderscore(){
    assertEquals("SHA256withECDSA",SignatureAlgorithmConverter.toJavaName("ecdsa_sha256"));
  }
  @Test public void testBoringSSLPkcs1(){
    assertEquals("SHA256withRSA",SignatureAlgorithmConverter.toJavaName("rsa_pkcs1_sha256"));
  }
  @Test public void testBoringSSLPSS(){
    assertEquals("SHA256withRSA",SignatureAlgorithmConverter.toJavaName("rsa_pss_rsae_sha256"));
  }
  @Test public void testInvalid(){
    assertNull(SignatureAlgorithmConverter.toJavaName("ThisIsSomethingInvalid"));
  }
}
