private static final class CheckExceptionHandler extends ChannelInboundHandlerAdapter {
  private final Throwable expected;
  private final Promise<Void> promise;
  CheckExceptionHandler(  Throwable expected,  Promise<Void> promise){
    this.expected=expected;
    this.promise=promise;
  }
  @Override public void exceptionCaught(  ChannelHandlerContext ctx,  Throwable cause) throws Exception {
    if (cause instanceof ChannelPipelineException && cause.getCause() == expected) {
      promise.setSuccess(null);
    }
 else {
      promise.setFailure(new AssertionError("cause not the expected instance"));
    }
  }
}
