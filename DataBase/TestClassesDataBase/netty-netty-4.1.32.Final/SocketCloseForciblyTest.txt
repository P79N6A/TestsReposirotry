public class SocketCloseForciblyTest extends AbstractSocketTest {
  @Test public void testCloseForcibly() throws Throwable {
    run();
  }
  public void testCloseForcibly(  ServerBootstrap sb,  Bootstrap cb) throws Throwable {
    sb.handler(new ChannelInboundHandlerAdapter(){
      @Override public void channelRead(      ChannelHandlerContext ctx,      Object msg) throws Exception {
        SocketChannel childChannel=(SocketChannel)msg;
        childChannel.config().setSoLinger(0);
        childChannel.unsafe().closeForcibly();
      }
    }
).childHandler(new ChannelInboundHandlerAdapter());
    cb.handler(new ChannelInboundHandlerAdapter());
    Channel sc=sb.bind().sync().channel();
    cb.connect(sc.localAddress()).channel().closeFuture().syncUninterruptibly();
    sc.close().sync();
  }
}
