public class ProtobufVarint32FrameDecoderTest {
  private EmbeddedChannel ch;
  @Before public void setUp(){
    ch=new EmbeddedChannel(new ProtobufVarint32FrameDecoder());
  }
  @Test public void testTinyDecode(){
    byte[] b={4,1,1,1,1};
    assertFalse(ch.writeInbound(wrappedBuffer(b,0,1)));
    assertThat(ch.readInbound(),is(nullValue()));
    assertFalse(ch.writeInbound(wrappedBuffer(b,1,2)));
    assertThat(ch.readInbound(),is(nullValue()));
    assertTrue(ch.writeInbound(wrappedBuffer(b,3,b.length - 3)));
    ByteBuf expected=wrappedBuffer(new byte[]{1,1,1,1});
    ByteBuf actual=ch.readInbound();
    assertThat(expected,is(actual));
    assertFalse(ch.finish());
    expected.release();
    actual.release();
  }
  @Test public void testRegularDecode(){
    byte[] b=new byte[2048];
    for (int i=2; i < 2048; i++) {
      b[i]=1;
    }
    b[0]=-2;
    b[1]=15;
    assertFalse(ch.writeInbound(wrappedBuffer(b,0,1)));
    assertThat(ch.readInbound(),is(nullValue()));
    assertFalse(ch.writeInbound(wrappedBuffer(b,1,127)));
    assertThat(ch.readInbound(),is(nullValue()));
    assertFalse(ch.writeInbound(wrappedBuffer(b,127,600)));
    assertThat(ch.readInbound(),is(nullValue()));
    assertTrue(ch.writeInbound(wrappedBuffer(b,727,b.length - 727)));
    ByteBuf expected=wrappedBuffer(b,2,b.length - 2);
    ByteBuf actual=ch.readInbound();
    assertThat(expected,is(actual));
    assertFalse(ch.finish());
    expected.release();
    actual.release();
  }
}
