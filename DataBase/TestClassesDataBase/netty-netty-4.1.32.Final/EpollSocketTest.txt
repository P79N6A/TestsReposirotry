public class EpollSocketTest extends SocketTest<LinuxSocket> {
  @BeforeClass public static void loadJNI(){
    assumeTrue(Epoll.isAvailable());
  }
  @Test public void testTcpCork() throws Exception {
    assertFalse(socket.isTcpCork());
    socket.setTcpCork(true);
    assertTrue(socket.isTcpCork());
  }
  @Test public void testPeerCreds() throws IOException {
    LinuxSocket s1=LinuxSocket.newSocketDomain();
    LinuxSocket s2=LinuxSocket.newSocketDomain();
    try {
      DomainSocketAddress dsa=UnixTestUtils.newSocketAddress();
      s1.bind(dsa);
      s1.listen(1);
      assertTrue(s2.connect(dsa));
      byte[] addr=new byte[64];
      s1.accept(addr);
      PeerCredentials pc=s1.getPeerCredentials();
      assertNotEquals(pc.uid(),-1);
    }
  finally {
      s1.close();
      s2.close();
    }
  }
  @Override protected LinuxSocket newSocket(){
    return LinuxSocket.newSocketStream();
  }
}
