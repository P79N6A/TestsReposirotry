public abstract class AbstractPooledByteBufTest extends AbstractByteBufTest {
  protected abstract ByteBuf alloc(  int length,  int maxCapacity);
  @Override protected ByteBuf newBuffer(  int length,  int maxCapacity){
    ByteBuf buffer=alloc(length,maxCapacity);
    assertEquals(0,buffer.writerIndex());
    assertEquals(0,buffer.readerIndex());
    buffer.resetReaderIndex();
    buffer.resetWriterIndex();
    assertEquals(0,buffer.writerIndex());
    assertEquals(0,buffer.readerIndex());
    return buffer;
  }
  @Test public void ensureWritableWithEnoughSpaceShouldNotThrow(){
    ByteBuf buf=newBuffer(1,10);
    buf.ensureWritable(3);
    assertThat(buf.writableBytes(),is(greaterThanOrEqualTo(3)));
    buf.release();
  }
  @Test(expected=IndexOutOfBoundsException.class) public void ensureWritableWithNotEnoughSpaceShouldThrow(){
    ByteBuf buf=newBuffer(1,10);
    try {
      buf.ensureWritable(11);
      fail();
    }
  finally {
      buf.release();
    }
  }
}
