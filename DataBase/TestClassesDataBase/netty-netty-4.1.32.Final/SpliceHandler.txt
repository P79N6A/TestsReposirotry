private static class SpliceHandler extends ChannelInboundHandlerAdapter {
  private final File file;
  volatile Channel channel;
  volatile ChannelFuture future;
  final AtomicReference<Throwable> exception=new AtomicReference<Throwable>();
  public SpliceHandler(  File file){
    this.file=file;
  }
  @Override public void channelActive(  ChannelHandlerContext ctx) throws Exception {
    channel=ctx.channel();
    final EpollSocketChannel ch=(EpollSocketChannel)ctx.channel();
    final FileDescriptor fd=FileDescriptor.from(file);
    future=ch.spliceTo(fd,0,data.length);
  }
  @Override public void exceptionCaught(  ChannelHandlerContext ctx,  Throwable cause) throws Exception {
    if (exception.compareAndSet(null,cause)) {
      cause.printStackTrace();
      ctx.close();
    }
  }
}
