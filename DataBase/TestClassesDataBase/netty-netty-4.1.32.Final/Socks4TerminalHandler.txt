private final class Socks4TerminalHandler extends TerminalHandler {
  @Override protected boolean handleProxyProtocol(  ChannelHandlerContext ctx,  Object msg) throws Exception {
    Socks4CommandRequest req=(Socks4CommandRequest)msg;
    boolean authzSuccess=authenticate(ctx,req);
    Socks4CommandResponse res;
    boolean sendGreeting=false;
    if (!authzSuccess) {
      res=new DefaultSocks4CommandResponse(Socks4CommandStatus.IDENTD_AUTH_FAILURE);
    }
 else     if (!req.dstAddr().equals(destination.getHostString()) || req.dstPort() != destination.getPort()) {
      res=new DefaultSocks4CommandResponse(Socks4CommandStatus.REJECTED_OR_FAILED);
    }
 else {
      res=new DefaultSocks4CommandResponse(Socks4CommandStatus.SUCCESS);
      sendGreeting=true;
    }
    ctx.write(res);
    ctx.pipeline().remove(Socks4ServerDecoder.class);
    ctx.pipeline().remove(Socks4ServerEncoder.class);
    if (sendGreeting) {
      ctx.write(Unpooled.copiedBuffer("0\n",CharsetUtil.US_ASCII));
    }
    return true;
  }
}
