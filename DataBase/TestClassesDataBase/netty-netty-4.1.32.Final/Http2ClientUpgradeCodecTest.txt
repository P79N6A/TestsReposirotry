public class Http2ClientUpgradeCodecTest {
  @Test public void testUpgradeToHttp2ConnectionHandler() throws Exception {
    testUpgrade(new Http2ConnectionHandlerBuilder().server(false).frameListener(new Http2FrameAdapter()).build());
  }
  @Test public void testUpgradeToHttp2FrameCodec() throws Exception {
    testUpgrade(Http2FrameCodecBuilder.forClient().build());
  }
  @Test public void testUpgradeToHttp2MultiplexCodec() throws Exception {
    testUpgrade(Http2MultiplexCodecBuilder.forClient(new HttpInboundHandler()).withUpgradeStreamHandler(new ChannelInboundHandlerAdapter()).build());
  }
  private static void testUpgrade(  Http2ConnectionHandler handler) throws Exception {
    FullHttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.OPTIONS,"*");
    EmbeddedChannel channel=new EmbeddedChannel(new ChannelInboundHandlerAdapter());
    ChannelHandlerContext ctx=channel.pipeline().firstContext();
    Http2ClientUpgradeCodec codec=new Http2ClientUpgradeCodec("connectionHandler",handler);
    codec.setUpgradeHeaders(ctx,request);
    channel.flush();
    codec.upgradeTo(ctx,null);
    assertNotNull(channel.pipeline().get("connectionHandler"));
    assertTrue(channel.finishAndReleaseAll());
  }
@ChannelHandler.Sharable private static final class HttpInboundHandler extends ChannelInboundHandlerAdapter {
  }
}
