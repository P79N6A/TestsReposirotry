private static final class SingleThreadEventLoopA extends SingleThreadEventLoop {
  final AtomicInteger cleanedUp=new AtomicInteger();
  SingleThreadEventLoopA(){
    super(null,Executors.defaultThreadFactory(),true);
  }
  @Override protected void run(){
    for (; ; ) {
      Runnable task=takeTask();
      if (task != null) {
        task.run();
        updateLastExecutionTime();
      }
      if (confirmShutdown()) {
        break;
      }
    }
  }
  @Override protected void cleanup(){
    cleanedUp.incrementAndGet();
  }
}
