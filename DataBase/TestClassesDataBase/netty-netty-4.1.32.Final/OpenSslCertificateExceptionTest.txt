public class OpenSslCertificateExceptionTest {
  @Test public void testValidErrorCode() throws Exception {
    Assume.assumeTrue(OpenSsl.isAvailable());
    Field[] fields=CertificateVerifier.class.getFields();
    for (    Field field : fields) {
      if (field.isAccessible()) {
        int errorCode=field.getInt(null);
        OpenSslCertificateException exception=new OpenSslCertificateException(errorCode);
        Assert.assertEquals(errorCode,exception.errorCode());
      }
    }
  }
  @Test(expected=IllegalArgumentException.class) public void testNonValidErrorCode(){
    Assume.assumeTrue(OpenSsl.isAvailable());
    new OpenSslCertificateException(Integer.MIN_VALUE);
  }
  @Test public void testCanBeInstancedWhenOpenSslIsNotAvailable(){
    Assume.assumeFalse(OpenSsl.isAvailable());
    new OpenSslCertificateException(0);
  }
}
