public class DefaultAttributeMapTest {
  private DefaultAttributeMap map;
  @Before public void setup(){
    map=new DefaultAttributeMap();
  }
  @Test public void testMapExists(){
    assertNotNull(map);
  }
  @Test public void testGetSetString(){
    AttributeKey<String> key=AttributeKey.valueOf("Nothing");
    Attribute<String> one=map.attr(key);
    assertSame(one,map.attr(key));
    one.setIfAbsent("Whoohoo");
    assertSame("Whoohoo",one.get());
    one.setIfAbsent("What");
    assertNotSame("What",one.get());
    one.remove();
    assertNull(one.get());
  }
  @Test public void testGetSetInt(){
    AttributeKey<Integer> key=AttributeKey.valueOf("Nada");
    Attribute<Integer> one=map.attr(key);
    assertSame(one,map.attr(key));
    one.setIfAbsent(3653);
    assertEquals(Integer.valueOf(3653),one.get());
    one.setIfAbsent(1);
    assertNotSame(1,one.get());
    one.remove();
    assertNull(one.get());
  }
  @Test public void testSetRemove(){
    AttributeKey<Integer> key=AttributeKey.valueOf("key");
    Attribute<Integer> attr=map.attr(key);
    attr.set(1);
    assertSame(1,attr.getAndRemove());
    Attribute<Integer> attr2=map.attr(key);
    attr2.set(2);
    assertSame(2,attr2.get());
    assertNotSame(attr,attr2);
  }
  @Test public void testGetAndSetWithNull(){
    AttributeKey<Integer> key=AttributeKey.valueOf("key");
    Attribute<Integer> attr=map.attr(key);
    attr.set(1);
    assertSame(1,attr.getAndSet(null));
    Attribute<Integer> attr2=map.attr(key);
    attr2.set(2);
    assertSame(2,attr2.get());
    assertSame(attr,attr2);
  }
}
