public class Bzip2EncoderTest extends AbstractEncoderTest {
  @Override public void initChannel(){
    channel=new EmbeddedChannel(new Bzip2Encoder(MIN_BLOCK_SIZE));
  }
  @Override protected ByteBuf decompress(  ByteBuf compressed,  int originalLength) throws Exception {
    InputStream is=new ByteBufInputStream(compressed,true);
    BZip2CompressorInputStream bzip2Is=null;
    byte[] decompressed=new byte[originalLength];
    try {
      bzip2Is=new BZip2CompressorInputStream(is);
      int remaining=originalLength;
      while (remaining > 0) {
        int read=bzip2Is.read(decompressed,originalLength - remaining,remaining);
        if (read > 0) {
          remaining-=read;
        }
 else {
          break;
        }
      }
      assertEquals(-1,bzip2Is.read());
    }
  finally {
      if (bzip2Is != null) {
        bzip2Is.close();
      }
 else {
        is.close();
      }
    }
    return Unpooled.wrappedBuffer(decompressed);
  }
}
