private final class Socks4IntermediaryHandler extends IntermediaryHandler {
  private SocketAddress intermediaryDestination;
  @Override protected boolean handleProxyProtocol(  ChannelHandlerContext ctx,  Object msg) throws Exception {
    Socks4CommandRequest req=(Socks4CommandRequest)msg;
    Socks4CommandResponse res;
    if (!authenticate(ctx,req)) {
      res=new DefaultSocks4CommandResponse(Socks4CommandStatus.IDENTD_AUTH_FAILURE);
    }
 else {
      res=new DefaultSocks4CommandResponse(Socks4CommandStatus.SUCCESS);
      intermediaryDestination=SocketUtils.socketAddress(req.dstAddr(),req.dstPort());
    }
    ctx.write(res);
    ctx.pipeline().remove(Socks4ServerDecoder.class);
    ctx.pipeline().remove(Socks4ServerEncoder.class);
    return true;
  }
  @Override protected SocketAddress intermediaryDestination(){
    return intermediaryDestination;
  }
}
