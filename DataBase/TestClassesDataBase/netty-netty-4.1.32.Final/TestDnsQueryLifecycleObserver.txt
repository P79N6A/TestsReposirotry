private static final class TestDnsQueryLifecycleObserver implements DnsQueryLifecycleObserver {
  final Queue<Object> events=new ArrayDeque<Object>();
  final DnsQuestion question;
  TestDnsQueryLifecycleObserver(  DnsQuestion question){
    this.question=question;
  }
  @Override public void queryWritten(  InetSocketAddress dnsServerAddress,  ChannelFuture future){
    events.add(new QueryWrittenEvent(dnsServerAddress));
  }
  @Override public void queryCancelled(  int queriesRemaining){
    events.add(new QueryCancelledEvent(queriesRemaining));
  }
  @Override public DnsQueryLifecycleObserver queryRedirected(  List<InetSocketAddress> nameServers){
    events.add(new QueryRedirectedEvent(nameServers));
    return this;
  }
  @Override public DnsQueryLifecycleObserver queryCNAMEd(  DnsQuestion cnameQuestion){
    events.add(new QueryCnamedEvent(cnameQuestion));
    return this;
  }
  @Override public DnsQueryLifecycleObserver queryNoAnswer(  DnsResponseCode code){
    events.add(new QueryNoAnswerEvent(code));
    return this;
  }
  @Override public void queryFailed(  Throwable cause){
    events.add(new QueryFailedEvent(cause));
  }
  @Override public void querySucceed(){
    events.add(new QuerySucceededEvent());
  }
}
