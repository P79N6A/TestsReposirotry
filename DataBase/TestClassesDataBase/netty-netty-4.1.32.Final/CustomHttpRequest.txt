/** 
 * This class is required to triggered the desired initialization order of  {@link EmptyHttpHeaders}. If  {@link DefaultHttpRequest} is used, the {@link HttpHeaders} class will be initialized before {@link HttpUtil}and the test won't trigger the original issue.
 */
private static final class CustomHttpRequest implements HttpRequest {
  @Override public DecoderResult decoderResult(){
    return DecoderResult.SUCCESS;
  }
  @Override public void setDecoderResult(  DecoderResult result){
  }
  @Override public DecoderResult getDecoderResult(){
    return decoderResult();
  }
  @Override public HttpVersion getProtocolVersion(){
    return HttpVersion.HTTP_1_1;
  }
  @Override public HttpVersion protocolVersion(){
    return getProtocolVersion();
  }
  @Override public HttpHeaders headers(){
    DefaultHttpHeaders headers=new DefaultHttpHeaders();
    headers.add("Transfer-Encoding","chunked");
    return headers;
  }
  @Override public HttpMethod getMethod(){
    return HttpMethod.POST;
  }
  @Override public HttpMethod method(){
    return getMethod();
  }
  @Override public HttpRequest setMethod(  HttpMethod method){
    return this;
  }
  @Override public String getUri(){
    return "/";
  }
  @Override public String uri(){
    return "/";
  }
  @Override public HttpRequest setUri(  String uri){
    return this;
  }
  @Override public HttpRequest setProtocolVersion(  HttpVersion version){
    return this;
  }
}
