public class MqttConnectPayloadTest {
  @Test public void testNullWillMessage() throws Exception {
    String clientIdentifier="clientIdentifier";
    String willTopic="willTopic";
    byte[] willMessage=null;
    String userName="userName";
    byte[] password="password".getBytes(CharsetUtil.UTF_8);
    MqttConnectPayload mqttConnectPayload=new MqttConnectPayload(clientIdentifier,willTopic,willMessage,userName,password);
    assertNull(mqttConnectPayload.willMessageInBytes());
    assertNull(mqttConnectPayload.willMessage());
  }
  @Test public void testNullPassword() throws Exception {
    String clientIdentifier="clientIdentifier";
    String willTopic="willTopic";
    byte[] willMessage="willMessage".getBytes(CharsetUtil.UTF_8);
    String userName="userName";
    byte[] password=null;
    MqttConnectPayload mqttConnectPayload=new MqttConnectPayload(clientIdentifier,willTopic,willMessage,userName,password);
    assertNull(mqttConnectPayload.passwordInBytes());
    assertNull(mqttConnectPayload.password());
  }
  @Test public void testBuilderNullPassword() throws Exception {
    MqttMessageBuilders.ConnectBuilder builder=new MqttMessageBuilders.ConnectBuilder();
    builder.password((String)null);
    MqttConnectPayload mqttConnectPayload=builder.build().payload();
    assertNull(mqttConnectPayload.passwordInBytes());
    assertNull(mqttConnectPayload.password());
    builder=new MqttMessageBuilders.ConnectBuilder();
    builder.password((byte[])null);
    mqttConnectPayload=builder.build().payload();
    assertNull(mqttConnectPayload.passwordInBytes());
    assertNull(mqttConnectPayload.password());
  }
  @Test public void testBuilderNullWillMessage() throws Exception {
    MqttMessageBuilders.ConnectBuilder builder=new MqttMessageBuilders.ConnectBuilder();
    builder.willMessage((String)null);
    MqttConnectPayload mqttConnectPayload=builder.build().payload();
    assertNull(mqttConnectPayload.willMessageInBytes());
    assertNull(mqttConnectPayload.willMessage());
    builder=new MqttMessageBuilders.ConnectBuilder();
    builder.willMessage((byte[])null);
    mqttConnectPayload=builder.build().payload();
    assertNull(mqttConnectPayload.willMessageInBytes());
    assertNull(mqttConnectPayload.willMessage());
  }
}
