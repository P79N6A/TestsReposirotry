private final class HttpIntermediaryHandler extends IntermediaryHandler {
  private SocketAddress intermediaryDestination;
  @Override protected boolean handleProxyProtocol(  ChannelHandlerContext ctx,  Object msg) throws Exception {
    FullHttpRequest req=(FullHttpRequest)msg;
    FullHttpResponse res;
    if (!authenticate(ctx,req)) {
      res=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.UNAUTHORIZED);
      res.headers().set(HttpHeaderNames.CONTENT_LENGTH,0);
    }
 else {
      res=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.OK);
      String uri=req.uri();
      int lastColonPos=uri.lastIndexOf(':');
      assertThat(lastColonPos,is(greaterThan(0)));
      intermediaryDestination=SocketUtils.socketAddress(uri.substring(0,lastColonPos),Integer.parseInt(uri.substring(lastColonPos + 1)));
    }
    ctx.write(res);
    ctx.pipeline().get(HttpServerCodec.class).removeOutboundHandler();
    return true;
  }
  @Override protected SocketAddress intermediaryDestination(){
    return intermediaryDestination;
  }
}
