public class ByteToMessageCodecTest {
  @Test(expected=IllegalStateException.class) public void testSharable(){
    new InvalidByteToMessageCodec();
  }
  @Test(expected=IllegalStateException.class) public void testSharable2(){
    new InvalidByteToMessageCodec2();
  }
  @Test public void testForwardPendingData(){
    ByteToMessageCodec<Integer> codec=new ByteToMessageCodec<Integer>(){
      @Override protected void encode(      ChannelHandlerContext ctx,      Integer msg,      ByteBuf out) throws Exception {
        out.writeInt(msg);
      }
      @Override protected void decode(      ChannelHandlerContext ctx,      ByteBuf in,      List<Object> out) throws Exception {
        if (in.readableBytes() >= 4) {
          out.add(in.readInt());
        }
      }
    }
;
    ByteBuf buffer=Unpooled.buffer();
    buffer.writeInt(1);
    buffer.writeByte('0');
    EmbeddedChannel ch=new EmbeddedChannel(codec);
    assertTrue(ch.writeInbound(buffer));
    ch.pipeline().remove(codec);
    assertTrue(ch.finish());
    assertEquals(1,ch.readInbound());
    ByteBuf buf=(ByteBuf)ch.readInbound();
    assertEquals(Unpooled.wrappedBuffer(new byte[]{'0'}),buf);
    buf.release();
    assertNull(ch.readInbound());
    assertNull(ch.readOutbound());
  }
@ChannelHandler.Sharable private static final class InvalidByteToMessageCodec extends ByteToMessageCodec<Integer> {
    InvalidByteToMessageCodec(){
      super(true);
    }
    @Override protected void encode(    ChannelHandlerContext ctx,    Integer msg,    ByteBuf out) throws Exception {
    }
    @Override protected void decode(    ChannelHandlerContext ctx,    ByteBuf in,    List<Object> out) throws Exception {
    }
  }
@ChannelHandler.Sharable private static final class InvalidByteToMessageCodec2 extends ByteToMessageCodec<Integer> {
    InvalidByteToMessageCodec2(){
      super(Integer.class,true);
    }
    @Override protected void encode(    ChannelHandlerContext ctx,    Integer msg,    ByteBuf out) throws Exception {
    }
    @Override protected void decode(    ChannelHandlerContext ctx,    ByteBuf in,    List<Object> out) throws Exception {
    }
  }
}
