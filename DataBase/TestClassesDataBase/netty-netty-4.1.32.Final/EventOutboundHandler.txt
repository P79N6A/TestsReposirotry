private static final class EventOutboundHandler extends ChannelOutboundHandlerAdapter {
  static final Integer DISCONNECT=0;
  static final Integer CLOSE=1;
  private final Queue<Integer> queue=new ArrayDeque<Integer>();
  @Override public void disconnect(  ChannelHandlerContext ctx,  ChannelPromise promise) throws Exception {
    queue.add(DISCONNECT);
    promise.setSuccess();
  }
  @Override public void close(  ChannelHandlerContext ctx,  ChannelPromise promise) throws Exception {
    queue.add(CLOSE);
    promise.setSuccess();
  }
  Integer pollEvent(){
    return queue.poll();
  }
}
