public class ShadingIT {
  private static final String SHADING_PREFIX=System.getProperty("shadingPrefix2");
  private static final String SHADING_PREFIX2=System.getProperty("shadingPrefix");
  @Test public void testShadingNativeTransport() throws Exception {
    Assume.assumeFalse(PlatformDependent.isWindows());
    String className=PlatformDependent.isOsx() ? "io.netty.channel.kqueue.KQueue" : "io.netty.channel.epoll.Epoll";
    testShading0(SHADING_PREFIX,className);
    testShading0(SHADING_PREFIX2,className);
  }
  @Test public void testShadingTcnative() throws Exception {
    Assume.assumeFalse(PlatformDependent.isWindows());
    String className="io.netty.handler.ssl.OpenSsl";
    testShading0(SHADING_PREFIX,className);
    testShading0(SHADING_PREFIX2,className);
  }
  private static void testShading0(  String shadingPrefix,  String classname) throws Exception {
    final Class<?> clazz=Class.forName(shadingPrefix + '.' + classname);
    Method method=clazz.getMethod("ensureAvailability");
    method.invoke(null);
  }
}
