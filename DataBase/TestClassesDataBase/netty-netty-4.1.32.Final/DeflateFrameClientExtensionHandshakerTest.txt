public class DeflateFrameClientExtensionHandshakerTest {
  @Test public void testWebkitDeflateFrameData(){
    DeflateFrameClientExtensionHandshaker handshaker=new DeflateFrameClientExtensionHandshaker(true);
    WebSocketExtensionData data=handshaker.newRequestData();
    assertEquals(X_WEBKIT_DEFLATE_FRAME_EXTENSION,data.name());
    assertTrue(data.parameters().isEmpty());
  }
  @Test public void testDeflateFrameData(){
    DeflateFrameClientExtensionHandshaker handshaker=new DeflateFrameClientExtensionHandshaker(false);
    WebSocketExtensionData data=handshaker.newRequestData();
    assertEquals(DEFLATE_FRAME_EXTENSION,data.name());
    assertTrue(data.parameters().isEmpty());
  }
  @Test public void testNormalHandshake(){
    DeflateFrameClientExtensionHandshaker handshaker=new DeflateFrameClientExtensionHandshaker(false);
    WebSocketClientExtension extension=handshaker.handshakeExtension(new WebSocketExtensionData(DEFLATE_FRAME_EXTENSION,Collections.<String,String>emptyMap()));
    assertNotNull(extension);
    assertEquals(WebSocketClientExtension.RSV1,extension.rsv());
    assertTrue(extension.newExtensionDecoder() instanceof PerFrameDeflateDecoder);
    assertTrue(extension.newExtensionEncoder() instanceof PerFrameDeflateEncoder);
  }
  @Test public void testFailedHandshake(){
    DeflateFrameClientExtensionHandshaker handshaker=new DeflateFrameClientExtensionHandshaker(false);
    Map<String,String> parameters=new HashMap<String,String>();
    parameters.put("invalid","12");
    WebSocketClientExtension extension=handshaker.handshakeExtension(new WebSocketExtensionData(DEFLATE_FRAME_EXTENSION,parameters));
    assertNull(extension);
  }
}
