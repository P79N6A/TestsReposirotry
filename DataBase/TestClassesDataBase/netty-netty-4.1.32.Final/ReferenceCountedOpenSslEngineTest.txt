public class ReferenceCountedOpenSslEngineTest extends OpenSslEngineTest {
  public ReferenceCountedOpenSslEngineTest(  BufferType type,  ProtocolCipherCombo combo){
    super(type,combo);
  }
  @Override protected SslProvider sslClientProvider(){
    return SslProvider.OPENSSL_REFCNT;
  }
  @Override protected SslProvider sslServerProvider(){
    return SslProvider.OPENSSL_REFCNT;
  }
  @Override protected void cleanupClientSslContext(  SslContext ctx){
    ReferenceCountUtil.release(ctx);
  }
  @Override protected void cleanupClientSslEngine(  SSLEngine engine){
    ReferenceCountUtil.release(engine);
  }
  @Override protected void cleanupServerSslContext(  SslContext ctx){
    ReferenceCountUtil.release(ctx);
  }
  @Override protected void cleanupServerSslEngine(  SSLEngine engine){
    ReferenceCountUtil.release(engine);
  }
  @Test(expected=NullPointerException.class) public void testNotLeakOnException() throws Exception {
    clientSslCtx=SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).sslProvider(sslClientProvider()).protocols(protocols()).ciphers(ciphers()).build();
    clientSslCtx.newEngine(null);
  }
}
