private static final class TlsReadTest extends ChannelOutboundHandlerAdapter {
  private volatile boolean readIssued;
  @Override public void read(  ChannelHandlerContext ctx) throws Exception {
    readIssued=true;
    super.read(ctx);
  }
  public void test(  final boolean dropChannelActive) throws Exception {
    SSLEngine engine=SSLContext.getDefault().createSSLEngine();
    engine.setUseClientMode(true);
    EmbeddedChannel ch=new EmbeddedChannel(false,false,this,new SslHandler(engine),new ChannelInboundHandlerAdapter(){
      @Override public void channelActive(      ChannelHandlerContext ctx) throws Exception {
        if (!dropChannelActive) {
          ctx.fireChannelActive();
        }
      }
    }
);
    ch.config().setAutoRead(false);
    assertFalse(ch.config().isAutoRead());
    ch.register();
    assertTrue(readIssued);
    readIssued=false;
    assertTrue(ch.writeOutbound(Unpooled.EMPTY_BUFFER));
    assertTrue(readIssued);
    assertTrue(ch.finishAndReleaseAll());
  }
}
