public class DelimiterBasedFrameDecoderTest {
  @Test public void testMultipleLinesStrippedDelimiters(){
    EmbeddedChannel ch=new EmbeddedChannel(new DelimiterBasedFrameDecoder(8192,true,Delimiters.lineDelimiter()));
    ch.writeInbound(Unpooled.copiedBuffer("TestLine\r\ng\r\n",Charset.defaultCharset()));
    ByteBuf buf=ch.readInbound();
    assertEquals("TestLine",buf.toString(Charset.defaultCharset()));
    ByteBuf buf2=ch.readInbound();
    assertEquals("g",buf2.toString(Charset.defaultCharset()));
    assertNull(ch.readInbound());
    ch.finish();
    buf.release();
    buf2.release();
  }
  @Test public void testIncompleteLinesStrippedDelimiters(){
    EmbeddedChannel ch=new EmbeddedChannel(new DelimiterBasedFrameDecoder(8192,true,Delimiters.lineDelimiter()));
    ch.writeInbound(Unpooled.copiedBuffer("Test",Charset.defaultCharset()));
    assertNull(ch.readInbound());
    ch.writeInbound(Unpooled.copiedBuffer("Line\r\ng\r\n",Charset.defaultCharset()));
    ByteBuf buf=ch.readInbound();
    assertEquals("TestLine",buf.toString(Charset.defaultCharset()));
    ByteBuf buf2=ch.readInbound();
    assertEquals("g",buf2.toString(Charset.defaultCharset()));
    assertNull(ch.readInbound());
    ch.finish();
    buf.release();
    buf2.release();
  }
  @Test public void testMultipleLines(){
    EmbeddedChannel ch=new EmbeddedChannel(new DelimiterBasedFrameDecoder(8192,false,Delimiters.lineDelimiter()));
    ch.writeInbound(Unpooled.copiedBuffer("TestLine\r\ng\r\n",Charset.defaultCharset()));
    ByteBuf buf=ch.readInbound();
    assertEquals("TestLine\r\n",buf.toString(Charset.defaultCharset()));
    ByteBuf buf2=ch.readInbound();
    assertEquals("g\r\n",buf2.toString(Charset.defaultCharset()));
    assertNull(ch.readInbound());
    ch.finish();
    buf.release();
    buf2.release();
  }
  @Test public void testIncompleteLines(){
    EmbeddedChannel ch=new EmbeddedChannel(new DelimiterBasedFrameDecoder(8192,false,Delimiters.lineDelimiter()));
    ch.writeInbound(Unpooled.copiedBuffer("Test",Charset.defaultCharset()));
    assertNull(ch.readInbound());
    ch.writeInbound(Unpooled.copiedBuffer("Line\r\ng\r\n",Charset.defaultCharset()));
    ByteBuf buf=ch.readInbound();
    assertEquals("TestLine\r\n",buf.toString(Charset.defaultCharset()));
    ByteBuf buf2=ch.readInbound();
    assertEquals("g\r\n",buf2.toString(Charset.defaultCharset()));
    assertNull(ch.readInbound());
    ch.finish();
    buf.release();
    buf2.release();
  }
  @Test public void testDecode() throws Exception {
    EmbeddedChannel ch=new EmbeddedChannel(new DelimiterBasedFrameDecoder(8192,true,Delimiters.lineDelimiter()));
    ch.writeInbound(Unpooled.copiedBuffer("first\r\nsecond\nthird",CharsetUtil.US_ASCII));
    ByteBuf buf=ch.readInbound();
    assertEquals("first",buf.toString(CharsetUtil.US_ASCII));
    ByteBuf buf2=ch.readInbound();
    assertEquals("second",buf2.toString(CharsetUtil.US_ASCII));
    assertNull(ch.readInbound());
    ch.finish();
    ReferenceCountUtil.release(ch.readInbound());
    buf.release();
    buf2.release();
  }
}
