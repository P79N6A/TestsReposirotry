private static final class FileRegionWrapper implements FileRegion {
  private final FileRegion region;
  FileRegionWrapper(  FileRegion region){
    this.region=region;
  }
  @Override public int refCnt(){
    return region.refCnt();
  }
  @Override public long position(){
    return region.position();
  }
  @Override @Deprecated public long transfered(){
    return region.transferred();
  }
  @Override public boolean release(){
    return region.release();
  }
  @Override public long transferred(){
    return region.transferred();
  }
  @Override public long count(){
    return region.count();
  }
  @Override public boolean release(  int decrement){
    return region.release(decrement);
  }
  @Override public long transferTo(  WritableByteChannel target,  long position) throws IOException {
    return region.transferTo(target,position);
  }
  @Override public FileRegion retain(){
    region.retain();
    return this;
  }
  @Override public FileRegion retain(  int increment){
    region.retain(increment);
    return this;
  }
  @Override public FileRegion touch(){
    region.touch();
    return this;
  }
  @Override public FileRegion touch(  Object hint){
    region.touch(hint);
    return this;
  }
}
