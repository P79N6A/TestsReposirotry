public class ReadOnlyUnsafeDirectByteBufferBufTest extends ReadOnlyDirectByteBufferBufTest {
  /** 
 * Needs unsafe to run
 */
  @BeforeClass public static void assumeConditions(){
    assumeTrue("sun.misc.Unsafe not found, skip tests",PlatformDependent.hasUnsafe());
  }
  @Override protected ByteBuf buffer(  ByteBuffer buffer){
    return new ReadOnlyUnsafeDirectByteBuf(UnpooledByteBufAllocator.DEFAULT,buffer);
  }
  @Test @Override public void testMemoryAddress(){
    ByteBuf buf=buffer(allocate(8).asReadOnlyBuffer());
    try {
      Assert.assertTrue(buf.hasMemoryAddress());
      buf.memoryAddress();
    }
  finally {
      buf.release();
    }
  }
}
