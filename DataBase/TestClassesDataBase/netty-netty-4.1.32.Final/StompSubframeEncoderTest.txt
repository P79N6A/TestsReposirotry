public class StompSubframeEncoderTest {
  private EmbeddedChannel channel;
  @Before public void setup() throws Exception {
    channel=new EmbeddedChannel(new StompSubframeEncoder());
  }
  @After public void teardown() throws Exception {
    assertFalse(channel.finish());
  }
  @Test public void testFrameAndContentEncoding(){
    StompHeadersSubframe frame=new DefaultStompHeadersSubframe(StompCommand.CONNECT);
    StompHeaders headers=frame.headers();
    headers.set(StompHeaders.HOST,"stomp.github.org");
    headers.set(StompHeaders.ACCEPT_VERSION,"1.1,1.2");
    channel.writeOutbound(frame);
    channel.writeOutbound(LastStompContentSubframe.EMPTY_LAST_CONTENT);
    ByteBuf aggregatedBuffer=Unpooled.buffer();
    ByteBuf byteBuf=channel.readOutbound();
    assertNotNull(byteBuf);
    aggregatedBuffer.writeBytes(byteBuf);
    byteBuf.release();
    byteBuf=channel.readOutbound();
    assertNotNull(byteBuf);
    aggregatedBuffer.writeBytes(byteBuf);
    byteBuf.release();
    aggregatedBuffer.resetReaderIndex();
    String content=aggregatedBuffer.toString(CharsetUtil.UTF_8);
    assertEquals(StompTestConstants.CONNECT_FRAME,content);
    aggregatedBuffer.release();
  }
}
