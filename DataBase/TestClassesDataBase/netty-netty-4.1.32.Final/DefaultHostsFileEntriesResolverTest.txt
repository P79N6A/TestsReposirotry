public class DefaultHostsFileEntriesResolverTest {
  /** 
 * show issue https://github.com/netty/netty/issues/5182 HostsFileParser tries to resolve hostnames as case-sensitive
 */
  @Test public void testCaseInsensitivity() throws Exception {
    DefaultHostsFileEntriesResolver resolver=new DefaultHostsFileEntriesResolver();
    Assert.assertEquals(resolver.normalize("localhost"),resolver.normalize("LOCALHOST"));
  }
  @Test public void shouldntFindWhenAddressTypeDoesntMatch(){
    Map<String,Inet4Address> inet4Entries=new HashMap<String,Inet4Address>();
    Map<String,Inet6Address> inet6Entries=new HashMap<String,Inet6Address>();
    inet4Entries.put("localhost",NetUtil.LOCALHOST4);
    DefaultHostsFileEntriesResolver resolver=new DefaultHostsFileEntriesResolver(new HostsFileEntries(inet4Entries,inet6Entries));
    InetAddress address=resolver.address("localhost",ResolvedAddressTypes.IPV6_ONLY);
    Assert.assertNull("Should pick an IPv6 address",address);
  }
  @Test public void shouldPickIpv4WhenBothAreDefinedButIpv4IsPreferred(){
    Map<String,Inet4Address> inet4Entries=new HashMap<String,Inet4Address>();
    Map<String,Inet6Address> inet6Entries=new HashMap<String,Inet6Address>();
    inet4Entries.put("localhost",NetUtil.LOCALHOST4);
    inet6Entries.put("localhost",NetUtil.LOCALHOST6);
    DefaultHostsFileEntriesResolver resolver=new DefaultHostsFileEntriesResolver(new HostsFileEntries(inet4Entries,inet6Entries));
    InetAddress address=resolver.address("localhost",ResolvedAddressTypes.IPV4_PREFERRED);
    Assert.assertTrue("Should pick an IPv4 address",address instanceof Inet4Address);
  }
  @Test public void shouldPickIpv6WhenBothAreDefinedButIpv6IsPreferred(){
    Map<String,Inet4Address> inet4Entries=new HashMap<String,Inet4Address>();
    Map<String,Inet6Address> inet6Entries=new HashMap<String,Inet6Address>();
    inet4Entries.put("localhost",NetUtil.LOCALHOST4);
    inet6Entries.put("localhost",NetUtil.LOCALHOST6);
    DefaultHostsFileEntriesResolver resolver=new DefaultHostsFileEntriesResolver(new HostsFileEntries(inet4Entries,inet6Entries));
    InetAddress address=resolver.address("localhost",ResolvedAddressTypes.IPV6_PREFERRED);
    Assert.assertTrue("Should pick an IPv6 address",address instanceof Inet6Address);
  }
}
