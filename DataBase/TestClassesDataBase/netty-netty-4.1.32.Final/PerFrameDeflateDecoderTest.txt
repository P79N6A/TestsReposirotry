public class PerFrameDeflateDecoderTest {
  private static final Random random=new Random();
  @Test public void testCompressedFrame(){
    EmbeddedChannel encoderChannel=new EmbeddedChannel(ZlibCodecFactory.newZlibEncoder(ZlibWrapper.NONE,9,15,8));
    EmbeddedChannel decoderChannel=new EmbeddedChannel(new PerFrameDeflateDecoder(false));
    byte[] payload=new byte[300];
    random.nextBytes(payload);
    encoderChannel.writeOutbound(Unpooled.wrappedBuffer(payload));
    ByteBuf compressedPayload=encoderChannel.readOutbound();
    BinaryWebSocketFrame compressedFrame=new BinaryWebSocketFrame(true,RSV1 | RSV3,compressedPayload.slice(0,compressedPayload.readableBytes() - 4));
    decoderChannel.writeInbound(compressedFrame);
    BinaryWebSocketFrame uncompressedFrame=decoderChannel.readInbound();
    assertNotNull(uncompressedFrame);
    assertNotNull(uncompressedFrame.content());
    assertTrue(uncompressedFrame instanceof BinaryWebSocketFrame);
    assertEquals(RSV3,uncompressedFrame.rsv());
    assertEquals(300,uncompressedFrame.content().readableBytes());
    byte[] finalPayload=new byte[300];
    uncompressedFrame.content().readBytes(finalPayload);
    assertTrue(Arrays.equals(finalPayload,payload));
    uncompressedFrame.release();
  }
  @Test public void testNormalFrame(){
    EmbeddedChannel decoderChannel=new EmbeddedChannel(new PerFrameDeflateDecoder(false));
    byte[] payload=new byte[300];
    random.nextBytes(payload);
    BinaryWebSocketFrame frame=new BinaryWebSocketFrame(true,RSV3,Unpooled.wrappedBuffer(payload));
    decoderChannel.writeInbound(frame);
    BinaryWebSocketFrame newFrame=decoderChannel.readInbound();
    assertNotNull(newFrame);
    assertNotNull(newFrame.content());
    assertTrue(newFrame instanceof BinaryWebSocketFrame);
    assertEquals(RSV3,newFrame.rsv());
    assertEquals(300,newFrame.content().readableBytes());
    byte[] finalPayload=new byte[300];
    newFrame.content().readBytes(finalPayload);
    assertTrue(Arrays.equals(finalPayload,payload));
    newFrame.release();
  }
  @Test public void testCompressedEmptyFrame(){
    EmbeddedChannel encoderChannel=new EmbeddedChannel(ZlibCodecFactory.newZlibEncoder(ZlibWrapper.NONE,9,15,8));
    EmbeddedChannel decoderChannel=new EmbeddedChannel(new PerFrameDeflateDecoder(false));
    encoderChannel.writeOutbound(Unpooled.EMPTY_BUFFER);
    ByteBuf compressedPayload=encoderChannel.readOutbound();
    BinaryWebSocketFrame compressedFrame=new BinaryWebSocketFrame(true,RSV1 | RSV3,compressedPayload);
    decoderChannel.writeInbound(compressedFrame);
    BinaryWebSocketFrame uncompressedFrame=decoderChannel.readInbound();
    assertNotNull(uncompressedFrame);
    assertNotNull(uncompressedFrame.content());
    assertTrue(uncompressedFrame instanceof BinaryWebSocketFrame);
    assertEquals(RSV3,uncompressedFrame.rsv());
    assertEquals(0,uncompressedFrame.content().readableBytes());
    uncompressedFrame.release();
  }
}
