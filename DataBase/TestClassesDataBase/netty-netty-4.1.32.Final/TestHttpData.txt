/** 
 * Memory-based HTTP data implementation for test purposes. 
 */
private static final class TestHttpData extends AbstractMemoryHttpData {
  /** 
 * Constructs HTTP data for tests.
 * @param name    Name of parsed data block.
 * @param charset Used charset for data decoding.
 * @param size    Expected data block size.
 */
  private TestHttpData(  String name,  Charset charset,  long size){
    super(name,charset,size);
  }
  @Override public InterfaceHttpData.HttpDataType getHttpDataType(){
    throw reject();
  }
  @Override public HttpData copy(){
    throw reject();
  }
  @Override public HttpData duplicate(){
    throw reject();
  }
  @Override public HttpData retainedDuplicate(){
    throw reject();
  }
  @Override public HttpData replace(  ByteBuf content){
    return null;
  }
  @Override public int compareTo(  InterfaceHttpData o){
    throw reject();
  }
  @Override public int hashCode(){
    return super.hashCode();
  }
  @Override public boolean equals(  Object obj){
    return super.equals(obj);
  }
  private static UnsupportedOperationException reject(){
    throw new UnsupportedOperationException("Should never be called.");
  }
}
