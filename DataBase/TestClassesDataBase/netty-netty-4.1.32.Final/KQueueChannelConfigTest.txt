public class KQueueChannelConfigTest {
  @Before public void before(){
    KQueue.ensureAvailability();
  }
  @Test public void testOptionGetThrowsChannelException() throws Exception {
    KQueueSocketChannel channel=new KQueueSocketChannel();
    channel.config().getSoLinger();
    channel.fd().close();
    try {
      channel.config().getSoLinger();
      fail();
    }
 catch (    ChannelException e) {
    }
  }
  @Test public void testOptionSetThrowsChannelException() throws Exception {
    KQueueSocketChannel channel=new KQueueSocketChannel();
    channel.config().setKeepAlive(true);
    channel.fd().close();
    try {
      channel.config().setKeepAlive(true);
      fail();
    }
 catch (    ChannelException e) {
    }
  }
  @Test public void testSoLingerNoAssertError() throws Exception {
    EventLoopGroup group=new KQueueEventLoopGroup(1);
    try {
      Bootstrap bootstrap=new Bootstrap();
      KQueueSocketChannel ch=(KQueueSocketChannel)bootstrap.group(group).channel(KQueueSocketChannel.class).option(ChannelOption.SO_LINGER,10).handler(new ChannelInboundHandlerAdapter()).bind(new InetSocketAddress(0)).syncUninterruptibly().channel();
      ch.close().syncUninterruptibly();
    }
  finally {
      group.shutdownGracefully();
    }
  }
}
