public abstract class AbstractCompatibleMarshallingDecoderTest extends AbstractMarshallingTest {
  @SuppressWarnings("RedundantStringConstructorCall") private final String testObject=new String("test");
  @Test public void testSimpleUnmarshalling() throws IOException {
    MarshallerFactory marshallerFactory=createMarshallerFactory();
    MarshallingConfiguration configuration=createMarshallingConfig();
    EmbeddedChannel ch=new EmbeddedChannel(createDecoder(Integer.MAX_VALUE));
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    Marshaller marshaller=marshallerFactory.createMarshaller(configuration);
    marshaller.start(Marshalling.createByteOutput(bout));
    marshaller.writeObject(testObject);
    marshaller.finish();
    marshaller.close();
    byte[] testBytes=bout.toByteArray();
    ch.writeInbound(input(testBytes));
    assertTrue(ch.finish());
    String unmarshalled=ch.readInbound();
    assertEquals(testObject,unmarshalled);
    assertNull(ch.readInbound());
  }
  protected ByteBuf input(  byte[] input){
    return Unpooled.wrappedBuffer(input);
  }
  @Test public void testFragmentedUnmarshalling() throws IOException {
    MarshallerFactory marshallerFactory=createMarshallerFactory();
    MarshallingConfiguration configuration=createMarshallingConfig();
    EmbeddedChannel ch=new EmbeddedChannel(createDecoder(Integer.MAX_VALUE));
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    Marshaller marshaller=marshallerFactory.createMarshaller(configuration);
    marshaller.start(Marshalling.createByteOutput(bout));
    marshaller.writeObject(testObject);
    marshaller.finish();
    marshaller.close();
    byte[] testBytes=bout.toByteArray();
    ByteBuf buffer=input(testBytes);
    ByteBuf slice=buffer.readRetainedSlice(2);
    ch.writeInbound(slice);
    ch.writeInbound(buffer);
    assertTrue(ch.finish());
    String unmarshalled=ch.readInbound();
    assertEquals(testObject,unmarshalled);
    assertNull(ch.readInbound());
  }
  @Test public void testTooBigObject() throws IOException {
    MarshallerFactory marshallerFactory=createMarshallerFactory();
    MarshallingConfiguration configuration=createMarshallingConfig();
    ChannelHandler mDecoder=createDecoder(4);
    EmbeddedChannel ch=new EmbeddedChannel(mDecoder);
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    Marshaller marshaller=marshallerFactory.createMarshaller(configuration);
    marshaller.start(Marshalling.createByteOutput(bout));
    marshaller.writeObject(testObject);
    marshaller.finish();
    marshaller.close();
    byte[] testBytes=bout.toByteArray();
    onTooBigFrame(ch,input(testBytes));
  }
  protected void onTooBigFrame(  EmbeddedChannel ch,  ByteBuf input){
    ch.writeInbound(input);
    assertFalse(ch.isActive());
  }
  protected ChannelHandler createDecoder(  int maxObjectSize){
    return new CompatibleMarshallingDecoder(createProvider(createMarshallerFactory(),createMarshallingConfig()),maxObjectSize);
  }
  protected UnmarshallerProvider createProvider(  MarshallerFactory factory,  MarshallingConfiguration config){
    return new DefaultUnmarshallerProvider(factory,config);
  }
  protected abstract MarshallerFactory createMarshallerFactory();
  protected abstract MarshallingConfiguration createMarshallingConfig();
}
