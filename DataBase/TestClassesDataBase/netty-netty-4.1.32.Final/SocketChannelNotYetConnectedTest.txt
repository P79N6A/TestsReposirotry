public class SocketChannelNotYetConnectedTest extends AbstractClientSocketTest {
  @Test(timeout=30000) public void testShutdownNotYetConnected() throws Throwable {
    run();
  }
  public void testShutdownNotYetConnected(  Bootstrap cb) throws Throwable {
    SocketChannel ch=(SocketChannel)cb.handler(new ChannelInboundHandlerAdapter()).bind(newSocketAddress()).syncUninterruptibly().channel();
    try {
      try {
        ch.shutdownInput().syncUninterruptibly();
        fail();
      }
 catch (      Throwable cause) {
        checkThrowable(cause);
      }
      try {
        ch.shutdownOutput().syncUninterruptibly();
        fail();
      }
 catch (      Throwable cause) {
        checkThrowable(cause);
      }
    }
  finally {
      ch.close().syncUninterruptibly();
    }
  }
  private static void checkThrowable(  Throwable cause) throws Throwable {
    if (!(cause instanceof NotYetConnectedException) && !(cause instanceof SocketException)) {
      throw cause;
    }
  }
}
