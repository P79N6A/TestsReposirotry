public class DefaultDnsCnameCacheTest {
  @Test public void testExpire() throws Throwable {
    EventLoopGroup group=new DefaultEventLoopGroup(1);
    try {
      EventLoop loop=group.next();
      final DefaultDnsCnameCache cache=new DefaultDnsCnameCache();
      cache.cache("netty.io","mapping.netty.io",1,loop);
      Throwable error=loop.schedule(new Callable<Throwable>(){
        @Override public Throwable call(){
          try {
            assertNull(cache.get("netty.io"));
            return null;
          }
 catch (          Throwable cause) {
            return cause;
          }
        }
      }
,1,TimeUnit.SECONDS).get();
      if (error != null) {
        throw error;
      }
    }
  finally {
      group.shutdownGracefully();
    }
  }
  @Test public void testExpireWithDifferentTTLs(){
    testExpireWithTTL0(1);
    testExpireWithTTL0(1000);
    testExpireWithTTL0(1000000);
  }
  private static void testExpireWithTTL0(  int days){
    EventLoopGroup group=new DefaultEventLoopGroup(1);
    try {
      EventLoop loop=group.next();
      final DefaultDnsCnameCache cache=new DefaultDnsCnameCache();
      cache.cache("netty.io","mapping.netty.io",TimeUnit.DAYS.toSeconds(days),loop);
      assertEquals("mapping.netty.io",cache.get("netty.io"));
    }
  finally {
      group.shutdownGracefully();
    }
  }
  @Test public void testMultipleCnamesForSameHostname() throws Exception {
    EventLoopGroup group=new DefaultEventLoopGroup(1);
    try {
      EventLoop loop=group.next();
      final DefaultDnsCnameCache cache=new DefaultDnsCnameCache();
      cache.cache("netty.io","mapping1.netty.io",10,loop);
      cache.cache("netty.io","mapping2.netty.io",10000,loop);
      assertEquals("mapping2.netty.io",cache.get("netty.io"));
    }
  finally {
      group.shutdownGracefully();
    }
  }
  @Test public void testAddSameCnameForSameHostname() throws Exception {
    EventLoopGroup group=new DefaultEventLoopGroup(1);
    try {
      EventLoop loop=group.next();
      final DefaultDnsCnameCache cache=new DefaultDnsCnameCache();
      cache.cache("netty.io","mapping.netty.io",10,loop);
      cache.cache("netty.io","mapping.netty.io",10000,loop);
      assertEquals("mapping.netty.io",cache.get("netty.io"));
    }
  finally {
      group.shutdownGracefully();
    }
  }
  @Test public void testClear() throws Exception {
    EventLoopGroup group=new DefaultEventLoopGroup(1);
    try {
      EventLoop loop=group.next();
      final DefaultDnsCnameCache cache=new DefaultDnsCnameCache();
      cache.cache("x.netty.io","mapping.netty.io",100000,loop);
      cache.cache("y.netty.io","mapping.netty.io",100000,loop);
      assertEquals("mapping.netty.io",cache.get("x.netty.io"));
      assertEquals("mapping.netty.io",cache.get("y.netty.io"));
      assertTrue(cache.clear("x.netty.io"));
      assertNull(cache.get("x.netty.io"));
      assertEquals("mapping.netty.io",cache.get("y.netty.io"));
      cache.clear();
      assertNull(cache.get("y.netty.io"));
    }
  finally {
      group.shutdownGracefully();
    }
  }
}
