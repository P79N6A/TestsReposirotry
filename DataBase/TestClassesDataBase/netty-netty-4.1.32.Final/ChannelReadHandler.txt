private static final class ChannelReadHandler extends ChannelInboundHandlerAdapter {
  private final CountDownLatch latch;
  private final boolean autoRead;
  private int read;
  ChannelReadHandler(  CountDownLatch latch,  boolean autoRead){
    this.latch=latch;
    this.autoRead=autoRead;
  }
  @Override public void channelActive(  ChannelHandlerContext ctx){
    if (!autoRead) {
      ctx.read();
    }
    ctx.fireChannelActive();
  }
  @Override public void channelRead(  final ChannelHandlerContext ctx,  Object msg){
    assertEquals(0,read);
    read++;
    ctx.fireChannelRead(msg);
  }
  @Override public void channelReadComplete(  final ChannelHandlerContext ctx){
    assertEquals(1,read);
    latch.countDown();
    if (latch.getCount() > 0) {
      if (!autoRead) {
        ctx.executor().schedule(new Runnable(){
          @Override public void run(){
            read=0;
            ctx.read();
          }
        }
,100,TimeUnit.MILLISECONDS);
      }
 else {
        read=0;
      }
    }
 else {
      read=0;
    }
    ctx.fireChannelReadComplete();
  }
  @Override public void exceptionCaught(  ChannelHandlerContext ctx,  Throwable cause){
    ctx.fireExceptionCaught(cause);
    ctx.close();
  }
}
