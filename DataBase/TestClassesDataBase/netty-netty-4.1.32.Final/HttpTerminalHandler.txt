private final class HttpTerminalHandler extends TerminalHandler {
  @Override protected boolean handleProxyProtocol(  ChannelHandlerContext ctx,  Object msg) throws Exception {
    FullHttpRequest req=(FullHttpRequest)msg;
    FullHttpResponse res;
    boolean sendGreeting=false;
    if (!authenticate(ctx,req)) {
      res=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.UNAUTHORIZED);
      res.headers().set(HttpHeaderNames.CONTENT_LENGTH,0);
    }
 else     if (!req.uri().equals(destination.getHostString() + ':' + destination.getPort())) {
      res=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.FORBIDDEN);
      res.headers().set(HttpHeaderNames.CONTENT_LENGTH,0);
    }
 else {
      res=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.OK);
      sendGreeting=true;
    }
    ctx.write(res);
    ctx.pipeline().get(HttpServerCodec.class).removeOutboundHandler();
    if (sendGreeting) {
      ctx.write(Unpooled.copiedBuffer("0\n",CharsetUtil.US_ASCII));
    }
    return true;
  }
}
