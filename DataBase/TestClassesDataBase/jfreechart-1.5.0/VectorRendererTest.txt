/** 
 * Tests for the  {@link VectorRenderer} class.
 */
public class VectorRendererTest {
  /** 
 * Test that the equals() method distinguishes all fields.
 */
  @Test public void testEquals(){
    VectorRenderer r1=new VectorRenderer();
    VectorRenderer r2=new VectorRenderer();
    assertTrue(r1.equals(r2));
    assertTrue(r2.equals(r1));
    r1.setSeriesFillPaint(0,Color.green);
    assertFalse(r1.equals(r2));
    r2.setSeriesFillPaint(0,Color.green);
    assertTrue(r1.equals(r2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashcode(){
    VectorRenderer r1=new VectorRenderer();
    VectorRenderer r2=new VectorRenderer();
    assertTrue(r1.equals(r2));
    int h1=r1.hashCode();
    int h2=r2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    VectorRenderer r1=new VectorRenderer();
    VectorRenderer r2=(VectorRenderer)r1.clone();
    assertTrue(r1 != r2);
    assertTrue(r1.getClass() == r2.getClass());
    assertTrue(r1.equals(r2));
  }
  /** 
 * Verify that this class implements  {@link PublicCloneable}.
 */
  @Test public void testPublicCloneable(){
    VectorRenderer r1=new VectorRenderer();
    assertTrue(r1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    VectorRenderer r1=new VectorRenderer();
    VectorRenderer r2=(VectorRenderer)TestUtils.serialised(r1);
    assertEquals(r1,r2);
  }
}
