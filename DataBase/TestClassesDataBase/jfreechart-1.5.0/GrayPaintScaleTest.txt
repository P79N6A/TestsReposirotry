/** 
 * Tests for the  {@link GrayPaintScale} class.
 */
public class GrayPaintScaleTest {
  private static final double EPSILON=0.000000001;
  /** 
 * Simple check for the default constructor.
 */
  @Test public void testConstructor(){
    GrayPaintScale gps=new GrayPaintScale();
    assertEquals(0.0,gps.getLowerBound(),EPSILON);
    assertEquals(1.0,gps.getUpperBound(),EPSILON);
    assertEquals(255,gps.getAlpha());
  }
  /** 
 * Some checks for the getPaint() method.
 */
  @Test public void testGetPaint(){
    GrayPaintScale gps=new GrayPaintScale();
    Color c=(Color)gps.getPaint(0.0);
    assertTrue(c.equals(Color.BLACK));
    c=(Color)gps.getPaint(1.0);
    assertTrue(c.equals(Color.WHITE));
    c=(Color)gps.getPaint(-0.5);
    assertTrue(c.equals(Color.BLACK));
    c=(Color)gps.getPaint(1.5);
    assertTrue(c.equals(Color.WHITE));
  }
  /** 
 * A test for the equals() method.
 */
  @Test public void testEquals(){
    GrayPaintScale g1=new GrayPaintScale();
    GrayPaintScale g2=new GrayPaintScale();
    assertTrue(g1.equals(g2));
    assertTrue(g2.equals(g1));
    g1=new GrayPaintScale(0.0,1.0);
    g2=new GrayPaintScale(0.0,1.0);
    assertTrue(g1.equals(g2));
    g1=new GrayPaintScale(0.1,1.0);
    assertFalse(g1.equals(g2));
    g2=new GrayPaintScale(0.1,1.0);
    assertTrue(g1.equals(g2));
    g1=new GrayPaintScale(0.1,0.9);
    assertFalse(g1.equals(g2));
    g2=new GrayPaintScale(0.1,0.9);
    assertTrue(g1.equals(g2));
    g1=new GrayPaintScale(0.1,0.9,128);
    assertFalse(g1.equals(g2));
    g2=new GrayPaintScale(0.1,0.9,128);
    assertTrue(g1.equals(g2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    GrayPaintScale g1=new GrayPaintScale();
    GrayPaintScale g2=(GrayPaintScale)g1.clone();
    assertTrue(g1 != g2);
    assertTrue(g1.getClass() == g2.getClass());
    assertTrue(g1.equals(g2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    GrayPaintScale g1=new GrayPaintScale();
    GrayPaintScale g2=(GrayPaintScale)TestUtils.serialised(g1);
    assertEquals(g1,g2);
  }
}
