/** 
 * Tests for the  {@link LayeredBarRenderer} class.
 */
public class LayeredBarRendererTest {
  /** 
 * Check that the equals() method distinguishes all fields.
 */
  @Test public void testEquals(){
    LayeredBarRenderer r1=new LayeredBarRenderer();
    LayeredBarRenderer r2=new LayeredBarRenderer();
    assertEquals(r1,r2);
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashcode(){
    LayeredBarRenderer r1=new LayeredBarRenderer();
    LayeredBarRenderer r2=new LayeredBarRenderer();
    assertTrue(r1.equals(r2));
    int h1=r1.hashCode();
    int h2=r2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    LayeredBarRenderer r1=new LayeredBarRenderer();
    LayeredBarRenderer r2=(LayeredBarRenderer)r1.clone();
    assertTrue(r1 != r2);
    assertTrue(r1.getClass() == r2.getClass());
    assertTrue(r1.equals(r2));
  }
  /** 
 * Check that this class implements PublicCloneable.
 */
  @Test public void testPublicCloneable(){
    LayeredBarRenderer r1=new LayeredBarRenderer();
    assertTrue(r1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    LayeredBarRenderer r1=new LayeredBarRenderer();
    LayeredBarRenderer r2=(LayeredBarRenderer)TestUtils.serialised(r1);
    assertEquals(r1,r2);
  }
  /** 
 * Draws the chart with a  {@code null} info object to make sure thatno exceptions are thrown (particularly by code in the renderer).
 */
  @Test public void testDrawWithNullInfo(){
    try {
      DefaultCategoryDataset dataset=new DefaultCategoryDataset();
      dataset.addValue(1.0,"S1","C1");
      CategoryPlot plot=new CategoryPlot(dataset,new CategoryAxis("Category"),new NumberAxis("Value"),new LayeredBarRenderer());
      JFreeChart chart=new JFreeChart(plot);
      chart.createBufferedImage(300,200,null);
    }
 catch (    NullPointerException e) {
      fail("No exception should be thrown.");
    }
  }
}
