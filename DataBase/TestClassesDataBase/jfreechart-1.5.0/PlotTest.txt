/** 
 * Some tests for the  {@link Plot} class.
 */
public class PlotTest {
  /** 
 * Check that the equals() method can distinguish all fields (note that the dataset is NOT considered in the equals() method).
 */
  @Test public void testEquals(){
    PiePlot plot1=new PiePlot();
    PiePlot plot2=new PiePlot();
    assertTrue(plot1.equals(plot2));
    assertTrue(plot2.equals(plot1));
    plot1.setNoDataMessage("No data XYZ");
    assertFalse(plot1.equals(plot2));
    plot2.setNoDataMessage("No data XYZ");
    assertTrue(plot1.equals(plot2));
    plot1.setNoDataMessageFont(new Font("SansSerif",Font.PLAIN,13));
    assertFalse(plot1.equals(plot2));
    plot2.setNoDataMessageFont(new Font("SansSerif",Font.PLAIN,13));
    assertTrue(plot1.equals(plot2));
    plot1.setNoDataMessagePaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE));
    assertFalse(plot1.equals(plot2));
    plot2.setNoDataMessagePaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE));
    assertTrue(plot1.equals(plot2));
    plot1.setInsets(new RectangleInsets(1.0,2.0,3.0,4.0));
    assertFalse(plot1.equals(plot2));
    plot2.setInsets(new RectangleInsets(1.0,2.0,3.0,4.0));
    assertTrue(plot1.equals(plot2));
    plot1.setOutlineVisible(false);
    assertFalse(plot1.equals(plot2));
    plot2.setOutlineVisible(false);
    assertTrue(plot1.equals(plot2));
    BasicStroke s=new BasicStroke(1.23f);
    plot1.setOutlineStroke(s);
    assertFalse(plot1.equals(plot2));
    plot2.setOutlineStroke(s);
    assertTrue(plot1.equals(plot2));
    plot1.setOutlinePaint(new GradientPaint(1.0f,2.0f,Color.YELLOW,3.0f,4.0f,Color.green));
    assertFalse(plot1.equals(plot2));
    plot2.setOutlinePaint(new GradientPaint(1.0f,2.0f,Color.YELLOW,3.0f,4.0f,Color.green));
    assertTrue(plot1.equals(plot2));
    plot1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.cyan,3.0f,4.0f,Color.green));
    assertFalse(plot1.equals(plot2));
    plot2.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.cyan,3.0f,4.0f,Color.green));
    assertTrue(plot1.equals(plot2));
    plot1.setBackgroundImageAlignment(Align.BOTTOM_RIGHT);
    assertFalse(plot1.equals(plot2));
    plot2.setBackgroundImageAlignment(Align.BOTTOM_RIGHT);
    assertTrue(plot1.equals(plot2));
    plot1.setBackgroundImageAlpha(0.77f);
    assertFalse(plot1.equals(plot2));
    plot2.setBackgroundImageAlpha(0.77f);
    assertTrue(plot1.equals(plot2));
    plot1.setForegroundAlpha(0.99f);
    assertFalse(plot1.equals(plot2));
    plot2.setForegroundAlpha(0.99f);
    assertTrue(plot1.equals(plot2));
    plot1.setBackgroundAlpha(0.99f);
    assertFalse(plot1.equals(plot2));
    plot2.setBackgroundAlpha(0.99f);
    assertTrue(plot1.equals(plot2));
    plot1.setDrawingSupplier(new DefaultDrawingSupplier(new Paint[]{Color.BLUE},new Paint[]{Color.RED},new Stroke[]{new BasicStroke(1.1f)},new Stroke[]{new BasicStroke(9.9f)},new Shape[]{new Rectangle(1,2,3,4)}));
    assertFalse(plot1.equals(plot2));
    plot2.setDrawingSupplier(new DefaultDrawingSupplier(new Paint[]{Color.BLUE},new Paint[]{Color.RED},new Stroke[]{new BasicStroke(1.1f)},new Stroke[]{new BasicStroke(9.9f)},new Shape[]{new Rectangle(1,2,3,4)}));
    assertTrue(plot1.equals(plot2));
  }
}
