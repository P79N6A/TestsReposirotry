/** 
 * Tests for the  {@link XYInterval} class.
 */
public class XYIntervalTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    XYInterval i1=new XYInterval(1.0,2.0,3.0,2.5,3.5);
    XYInterval i2=new XYInterval(1.0,2.0,3.0,2.5,3.5);
    assertEquals(i1,i2);
    i1=new XYInterval(1.1,2.0,3.0,2.5,3.5);
    assertFalse(i1.equals(i2));
    i2=new XYInterval(1.1,2.0,3.0,2.5,3.5);
    assertTrue(i1.equals(i2));
    i1=new XYInterval(1.1,2.2,3.0,2.5,3.5);
    assertFalse(i1.equals(i2));
    i2=new XYInterval(1.1,2.2,3.0,2.5,3.5);
    assertTrue(i1.equals(i2));
    i1=new XYInterval(1.1,2.2,3.3,2.5,3.5);
    assertFalse(i1.equals(i2));
    i2=new XYInterval(1.1,2.2,3.3,2.5,3.5);
    assertTrue(i1.equals(i2));
    i1=new XYInterval(1.1,2.2,3.3,2.6,3.5);
    assertFalse(i1.equals(i2));
    i2=new XYInterval(1.1,2.2,3.3,2.6,3.5);
    assertTrue(i1.equals(i2));
    i1=new XYInterval(1.1,2.2,3.3,2.6,3.6);
    assertFalse(i1.equals(i2));
    i2=new XYInterval(1.1,2.2,3.3,2.6,3.6);
    assertTrue(i1.equals(i2));
  }
  /** 
 * This class is immutable.
 */
  @Test public void testCloning(){
    XYInterval i1=new XYInterval(1.0,2.0,3.0,2.5,3.5);
    assertFalse(i1 instanceof Cloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    XYInterval i1=new XYInterval(1.0,2.0,3.0,2.5,3.5);
    XYInterval i2=(XYInterval)TestUtils.serialised(i1);
    assertEquals(i1,i2);
  }
}
