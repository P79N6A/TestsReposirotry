/** 
 * Tests for the  {@link NormalDistributionFunction2D} class.
 */
public class NormalDistributionFunction2DTest {
  private static final double EPSILON=0.000000001;
  /** 
 * Some tests for the constructor.
 */
  @Test public void testConstructor(){
    NormalDistributionFunction2D f=new NormalDistributionFunction2D(1.0,2.0);
    assertEquals(1.0,f.getMean(),EPSILON);
    assertEquals(2.0,f.getStandardDeviation(),EPSILON);
  }
  /** 
 * For datasets, the equals() method just checks keys and values.
 */
  @Test public void testEquals(){
    NormalDistributionFunction2D f1=new NormalDistributionFunction2D(1.0,2.0);
    NormalDistributionFunction2D f2=new NormalDistributionFunction2D(1.0,2.0);
    assertEquals(f1,f2);
    f1=new NormalDistributionFunction2D(2.0,3.0);
    assertNotEquals(f1,f2);
    f2=new NormalDistributionFunction2D(2.0,3.0);
    assertEquals(f1,f2);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    NormalDistributionFunction2D f1=new NormalDistributionFunction2D(1.0,2.0);
    NormalDistributionFunction2D f2=(NormalDistributionFunction2D)TestUtils.serialised(f1);
    assertEquals(f1,f2);
  }
  /** 
 * Objects that are equal should have the same hash code otherwise FindBugs will tell on us...
 */
  @Test public void testHashCode(){
    NormalDistributionFunction2D f1=new NormalDistributionFunction2D(1.0,2.0);
    NormalDistributionFunction2D f2=new NormalDistributionFunction2D(1.0,2.0);
    assertEquals(f1.hashCode(),f2.hashCode());
  }
}
