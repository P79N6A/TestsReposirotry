/** 
 * Some tests for the  {@link PaintMap} class.
 */
public class PaintMapTest {
  /** 
 * Some checks for the getPaint() method.
 */
  @Test public void testGetPaint(){
    PaintMap m1=new PaintMap();
    assertEquals(null,m1.getPaint("A"));
    m1.put("A",Color.RED);
    assertEquals(Color.RED,m1.getPaint("A"));
    m1.put("A",null);
    assertEquals(null,m1.getPaint("A"));
    try {
      m1.getPaint(null);
      fail("IllegalArgumentException should have been thrown on passing null value");
    }
 catch (    IllegalArgumentException e) {
      assertEquals("Null 'key' argument.",e.getMessage());
    }
  }
  /** 
 * Some checks for the put() method.
 */
  @Test public void testPut(){
    PaintMap m1=new PaintMap();
    m1.put("A",Color.RED);
    assertEquals(Color.RED,m1.getPaint("A"));
    try {
      m1.put(null,Color.BLUE);
      fail("IllegalArgumentException should have been thrown on null key");
    }
 catch (    IllegalArgumentException e) {
      assertEquals("Null 'key' argument.",e.getMessage());
    }
  }
  /** 
 * Some checks for the equals() method.
 */
  @Test public void testEquals(){
    PaintMap m1=new PaintMap();
    PaintMap m2=new PaintMap();
    assertEquals(m1,m1);
    assertEquals(m1,m2);
    assertFalse(m1.equals(null));
    assertFalse(m1.equals("ABC"));
    m1.put("K1",Color.RED);
    assertFalse(m1.equals(m2));
    m2.put("K1",Color.RED);
    assertEquals(m1,m2);
    m1.put("K2",new GradientPaint(1.0f,2.0f,Color.green,3.0f,4.0f,Color.YELLOW));
    assertFalse(m1.equals(m2));
    m2.put("K2",new GradientPaint(1.0f,2.0f,Color.green,3.0f,4.0f,Color.YELLOW));
    assertEquals(m1,m2);
    m1.put("K2",null);
    assertFalse(m1.equals(m2));
    m2.put("K2",null);
    assertEquals(m1,m2);
  }
  /** 
 * Some checks for cloning.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    PaintMap m1=new PaintMap();
    PaintMap m2=(PaintMap)m1.clone();
    assertEquals(m1,m2);
    m1.put("K1",Color.RED);
    m1.put("K2",new GradientPaint(1.0f,2.0f,Color.green,3.0f,4.0f,Color.YELLOW));
    m2=(PaintMap)m1.clone();
    assertEquals(m1,m2);
  }
  /** 
 * A check for serialization.
 */
  @Test public void testSerialization1(){
    PaintMap m1=new PaintMap();
    PaintMap m2=(PaintMap)TestUtils.serialised(m1);
    assertEquals(m1,m2);
  }
  /** 
 * A check for serialization.
 */
  @Test public void testSerialization2(){
    PaintMap m1=new PaintMap();
    m1.put("K1",Color.RED);
    m1.put("K2",new GradientPaint(1.0f,2.0f,Color.green,3.0f,4.0f,Color.YELLOW));
    PaintMap m2=(PaintMap)TestUtils.serialised(m1);
    assertEquals(m1,m2);
  }
  /** 
 * This test covers a bug reported in the forum: http://www.jfree.org/phpBB2/viewtopic.php?t=19980
 */
  @Test public void testKeysOfDifferentClasses(){
    PaintMap m=new PaintMap();
    m.put("ABC",Color.RED);
    m.put(new Integer(99),Color.BLUE);
    assertEquals(Color.BLUE,m.getPaint(new Integer(99)));
  }
}
