/** 
 * Tests for the  {@link MatrixSeriesCollection} class.
 */
public class MatrixSeriesCollectionTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    MatrixSeries s1=new MatrixSeries("Series",2,3);
    s1.update(0,0,1.1);
    MatrixSeriesCollection c1=new MatrixSeriesCollection();
    c1.addSeries(s1);
    MatrixSeries s2=new MatrixSeries("Series",2,3);
    s2.update(0,0,1.1);
    MatrixSeriesCollection c2=new MatrixSeriesCollection();
    c2.addSeries(s2);
    assertTrue(c1.equals(c2));
    assertTrue(c2.equals(c1));
    c1.addSeries(new MatrixSeries("Empty Series",1,1));
    assertFalse(c1.equals(c2));
    c2.addSeries(new MatrixSeries("Empty Series",1,1));
    assertTrue(c1.equals(c2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    MatrixSeries s1=new MatrixSeries("Series",2,3);
    s1.update(0,0,1.1);
    MatrixSeriesCollection c1=new MatrixSeriesCollection();
    c1.addSeries(s1);
    MatrixSeriesCollection c2=(MatrixSeriesCollection)c1.clone();
    assertTrue(c1 != c2);
    assertTrue(c1.getClass() == c2.getClass());
    assertTrue(c1.equals(c2));
    s1.setDescription("XYZ");
    assertFalse(c1.equals(c2));
  }
  /** 
 * Verify that this class implements  {@link PublicCloneable}.
 */
  @Test public void testPublicCloneable(){
    MatrixSeriesCollection c1=new MatrixSeriesCollection();
    assertTrue(c1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    MatrixSeries s1=new MatrixSeries("Series",2,3);
    s1.update(0,0,1.1);
    MatrixSeriesCollection c1=new MatrixSeriesCollection();
    c1.addSeries(s1);
    MatrixSeriesCollection c2=(MatrixSeriesCollection)TestUtils.serialised(c1);
    assertEquals(c1,c2);
  }
}
