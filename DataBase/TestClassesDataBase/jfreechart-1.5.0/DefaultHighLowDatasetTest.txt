/** 
 * Tests for the  {@link DefaultHighLowDataset} class.
 */
public class DefaultHighLowDatasetTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    DefaultHighLowDataset d1=new DefaultHighLowDataset("Series 1",new Date[0],new double[0],new double[0],new double[0],new double[0],new double[0]);
    DefaultHighLowDataset d2=new DefaultHighLowDataset("Series 1",new Date[0],new double[0],new double[0],new double[0],new double[0],new double[0]);
    assertTrue(d1.equals(d2));
    assertTrue(d2.equals(d1));
    d1=new DefaultHighLowDataset("Series 2",new Date[0],new double[0],new double[0],new double[0],new double[0],new double[0]);
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[0],new double[0],new double[0],new double[0],new double[0],new double[0]);
    assertTrue(d1.equals(d2));
    d1=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[1],new double[1],new double[1],new double[1],new double[1]);
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[1],new double[1],new double[1],new double[1],new double[1]);
    assertTrue(d1.equals(d2));
    d1=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[1],new double[1],new double[1],new double[1]);
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[1],new double[1],new double[1],new double[1]);
    assertTrue(d1.equals(d2));
    d1=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[1],new double[1],new double[1]);
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[1],new double[1],new double[1]);
    assertTrue(d1.equals(d2));
    d1=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[1],new double[1]);
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[1],new double[1]);
    assertTrue(d1.equals(d2));
    d1=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[]{7.8},new double[1]);
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[]{7.8},new double[1]);
    assertTrue(d1.equals(d2));
    d1=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[]{7.8},new double[]{99.9});
    assertFalse(d1.equals(d2));
    d2=new DefaultHighLowDataset("Series 2",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[]{7.8},new double[]{99.9});
    assertTrue(d1.equals(d2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    DefaultHighLowDataset d1=new DefaultHighLowDataset("Series 1",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[]{7.8},new double[]{99.9});
    DefaultHighLowDataset d2=(DefaultHighLowDataset)d1.clone();
    assertTrue(d1 != d2);
    assertTrue(d1.getClass() == d2.getClass());
    assertTrue(d1.equals(d2));
  }
  /** 
 * Verify that this class implements  {@link PublicCloneable}.
 */
  @Test public void testPublicCloneable(){
    DefaultHighLowDataset d1=new DefaultHighLowDataset("Series 1",new Date[0],new double[0],new double[0],new double[0],new double[0],new double[0]);
    assertTrue(d1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    DefaultHighLowDataset d1=new DefaultHighLowDataset("Series 1",new Date[]{new Date(123L)},new double[]{1.2},new double[]{3.4},new double[]{5.6},new double[]{7.8},new double[]{99.9});
    DefaultHighLowDataset d2=(DefaultHighLowDataset)TestUtils.serialised(d1);
    assertEquals(d1,d2);
  }
}
