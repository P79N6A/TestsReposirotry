/** 
 * Tests for the  {@link PowerFunction2D} class.
 */
public class PowerFunction2DTest {
  private static final double EPSILON=0.000000001;
  /** 
 * Some tests for the constructor.
 */
  @Test public void testConstructor(){
    PowerFunction2D f=new PowerFunction2D(1.0,2.0);
    assertEquals(1.0,f.getA(),EPSILON);
    assertEquals(2.0,f.getB(),EPSILON);
  }
  /** 
 * For datasets, the equals() method just checks keys and values.
 */
  @Test public void testEquals(){
    PowerFunction2D f1=new PowerFunction2D(1.0,2.0);
    PowerFunction2D f2=new PowerFunction2D(1.0,2.0);
    assertTrue(f1.equals(f2));
    f1=new PowerFunction2D(2.0,3.0);
    assertFalse(f1.equals(f2));
    f2=new PowerFunction2D(2.0,3.0);
    assertTrue(f1.equals(f2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    PowerFunction2D f1=new PowerFunction2D(1.0,2.0);
    PowerFunction2D f2=(PowerFunction2D)TestUtils.serialised(f1);
    assertEquals(f1,f2);
  }
  /** 
 * Objects that are equal should have the same hash code otherwise FindBugs will tell on us...
 */
  @Test public void testHashCode(){
    PowerFunction2D f1=new PowerFunction2D(1.0,2.0);
    PowerFunction2D f2=new PowerFunction2D(1.0,2.0);
    assertEquals(f1.hashCode(),f2.hashCode());
  }
}
