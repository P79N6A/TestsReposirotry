/** 
 * Some tests for the  {@link XYBarDataset} class.
 */
public class XYBarDatasetTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    DefaultXYDataset d1=new DefaultXYDataset();
    double[] x1=new double[]{1.0,2.0,3.0};
    double[] y1=new double[]{4.0,5.0,6.0};
    double[][] data1=new double[][]{x1,y1};
    d1.addSeries("S1",data1);
    DefaultXYDataset d2=new DefaultXYDataset();
    double[] x2=new double[]{1.0,2.0,3.0};
    double[] y2=new double[]{4.0,5.0,6.0};
    double[][] data2=new double[][]{x2,y2};
    d2.addSeries("S1",data2);
    XYBarDataset bd1=new XYBarDataset(d1,5.0);
    XYBarDataset bd2=new XYBarDataset(d2,5.0);
    assertTrue(bd1.equals(bd2));
    assertTrue(bd2.equals(bd1));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    DefaultXYDataset d1=new DefaultXYDataset();
    double[] x1=new double[]{1.0,2.0,3.0};
    double[] y1=new double[]{4.0,5.0,6.0};
    double[][] data1=new double[][]{x1,y1};
    d1.addSeries("S1",data1);
    XYBarDataset bd1=new XYBarDataset(d1,5.0);
    XYBarDataset bd2=(XYBarDataset)bd1.clone();
    assertTrue(bd1 != bd2);
    assertTrue(bd1.getClass() == bd2.getClass());
    assertTrue(bd1.equals(bd2));
    d1=(DefaultXYDataset)bd1.getUnderlyingDataset();
    d1.addSeries("S2",new double[][]{{1.0},{2.0}});
    assertFalse(bd1.equals(bd2));
    DefaultXYDataset d2=(DefaultXYDataset)bd2.getUnderlyingDataset();
    d2.addSeries("S2",new double[][]{{1.0},{2.0}});
    assertTrue(bd1.equals(bd2));
  }
  /** 
 * Verify that this class implements  {@link PublicCloneable}.
 */
  @Test public void testPublicCloneable(){
    DefaultXYDataset d1=new DefaultXYDataset();
    double[] x1=new double[]{1.0,2.0,3.0};
    double[] y1=new double[]{4.0,5.0,6.0};
    double[][] data1=new double[][]{x1,y1};
    d1.addSeries("S1",data1);
    XYBarDataset bd1=new XYBarDataset(d1,5.0);
    assertTrue(bd1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    DefaultXYDataset d1=new DefaultXYDataset();
    double[] x1=new double[]{1.0,2.0,3.0};
    double[] y1=new double[]{4.0,5.0,6.0};
    double[][] data1=new double[][]{x1,y1};
    d1.addSeries("S1",data1);
    XYBarDataset bd1=new XYBarDataset(d1,5.0);
    XYBarDataset bd2=(XYBarDataset)TestUtils.serialised(bd1);
    assertEquals(bd1,bd2);
  }
}
