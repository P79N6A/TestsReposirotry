/** 
 * Tests for the  {@link XYTaskDataset} class.
 */
public class XYTaskDatasetTest {
  /** 
 * Some checks for the equals() method.
 */
  @Test public void testEquals(){
    TaskSeries s1=new TaskSeries("Series");
    s1.add(new Task("Task 1",new Date(0L),new Date(1L)));
    s1.add(new Task("Task 2",new Date(10L),new Date(11L)));
    s1.add(new Task("Task 3",new Date(20L),new Date(21L)));
    TaskSeriesCollection u1=new TaskSeriesCollection();
    u1.add(s1);
    XYTaskDataset d1=new XYTaskDataset(u1);
    TaskSeries s2=new TaskSeries("Series");
    s2.add(new Task("Task 1",new Date(0L),new Date(1L)));
    s2.add(new Task("Task 2",new Date(10L),new Date(11L)));
    s2.add(new Task("Task 3",new Date(20L),new Date(21L)));
    TaskSeriesCollection u2=new TaskSeriesCollection();
    u2.add(s2);
    XYTaskDataset d2=new XYTaskDataset(u2);
    assertTrue(d1.equals(d2));
    d1.setSeriesWidth(0.123);
    assertFalse(d1.equals(d2));
    d2.setSeriesWidth(0.123);
    assertTrue(d1.equals(d2));
    d1.setTransposed(true);
    assertFalse(d1.equals(d2));
    d2.setTransposed(true);
    assertTrue(d1.equals(d2));
    s1.add(new Task("Task 2",new Date(10L),new Date(11L)));
    assertFalse(d1.equals(d2));
    s2.add(new Task("Task 2",new Date(10L),new Date(11L)));
    assertTrue(d1.equals(d2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    TaskSeries s1=new TaskSeries("Series");
    s1.add(new Task("Task 1",new Date(0L),new Date(1L)));
    TaskSeriesCollection u1=new TaskSeriesCollection();
    u1.add(s1);
    XYTaskDataset d1=new XYTaskDataset(u1);
    XYTaskDataset d2=(XYTaskDataset)d1.clone();
    assertTrue(d1 != d2);
    assertTrue(d1.getClass() == d2.getClass());
    assertTrue(d1.equals(d2));
    s1.add(new Task("Task 2",new Date(10L),new Date(11L)));
    assertFalse(d1.equals(d2));
    TaskSeriesCollection u2=d2.getTasks();
    TaskSeries s2=u2.getSeries("Series");
    s2.add(new Task("Task 2",new Date(10L),new Date(11L)));
    assertTrue(d1.equals(d2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    TaskSeries s1=new TaskSeries("Series");
    s1.add(new Task("Task 1",new Date(0L),new Date(1L)));
    TaskSeriesCollection u1=new TaskSeriesCollection();
    u1.add(s1);
    XYTaskDataset d1=new XYTaskDataset(u1);
    XYTaskDataset d2=(XYTaskDataset)TestUtils.serialised(d1);
    assertEquals(d1,d2);
    s1.add(new Task("Task 2",new Date(10L),new Date(11L)));
    assertFalse(d1.equals(d2));
    TaskSeriesCollection u2=d2.getTasks();
    TaskSeries s2=u2.getSeries("Series");
    s2.add(new Task("Task 2",new Date(10L),new Date(11L)));
    assertTrue(d1.equals(d2));
  }
}
