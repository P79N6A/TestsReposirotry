/** 
 * Tests for the  {@link LegendGraphic} class.
 */
public class LegendGraphicTest {
  /** 
 * Check that the equals() method distinguishes all fields.
 */
  @Test public void testEquals(){
    LegendGraphic g1=new LegendGraphic(new Rectangle2D.Double(1.0,2.0,3.0,4.0),Color.BLACK);
    LegendGraphic g2=new LegendGraphic(new Rectangle2D.Double(1.0,2.0,3.0,4.0),Color.BLACK);
    assertEquals(g1,g2);
    assertEquals(g2,g1);
    g1.setShapeVisible(!g1.isShapeVisible());
    assertFalse(g1.equals(g2));
    g2.setShapeVisible(!g2.isShapeVisible());
    assertTrue(g1.equals(g2));
    g1.setShape(new Rectangle2D.Double(4.0,3.0,2.0,1.0));
    assertFalse(g1.equals(g2));
    g2.setShape(new Rectangle2D.Double(4.0,3.0,2.0,1.0));
    assertTrue(g1.equals(g2));
    g1.setShapeFilled(!g1.isShapeFilled());
    assertFalse(g1.equals(g2));
    g2.setShapeFilled(!g2.isShapeFilled());
    assertTrue(g1.equals(g2));
    g1.setFillPaint(Color.GREEN);
    assertFalse(g1.equals(g2));
    g2.setFillPaint(Color.GREEN);
    assertTrue(g1.equals(g2));
    g1.setShapeOutlineVisible(!g1.isShapeOutlineVisible());
    assertFalse(g1.equals(g2));
    g2.setShapeOutlineVisible(!g2.isShapeOutlineVisible());
    assertTrue(g1.equals(g2));
    g1.setOutlinePaint(Color.GREEN);
    assertFalse(g1.equals(g2));
    g2.setOutlinePaint(Color.GREEN);
    assertTrue(g1.equals(g2));
    g1.setOutlineStroke(new BasicStroke(1.23f));
    assertFalse(g1.equals(g2));
    g2.setOutlineStroke(new BasicStroke(1.23f));
    assertTrue(g1.equals(g2));
    g1.setShapeAnchor(RectangleAnchor.BOTTOM_RIGHT);
    assertFalse(g1.equals(g2));
    g2.setShapeAnchor(RectangleAnchor.BOTTOM_RIGHT);
    assertTrue(g1.equals(g2));
    g1.setShapeLocation(RectangleAnchor.BOTTOM_RIGHT);
    assertFalse(g1.equals(g2));
    g2.setShapeLocation(RectangleAnchor.BOTTOM_RIGHT);
    assertTrue(g1.equals(g2));
    g1.setLineVisible(!g1.isLineVisible());
    assertFalse(g1.equals(g2));
    g2.setLineVisible(!g2.isLineVisible());
    assertTrue(g1.equals(g2));
    g1.setLine(new Line2D.Double(1.0,2.0,3.0,4.0));
    assertFalse(g1.equals(g2));
    g2.setLine(new Line2D.Double(1.0,2.0,3.0,4.0));
    assertTrue(g1.equals(g2));
    g1.setLinePaint(Color.GREEN);
    assertFalse(g1.equals(g2));
    g2.setLinePaint(Color.GREEN);
    assertTrue(g1.equals(g2));
    g1.setLineStroke(new BasicStroke(1.23f));
    assertFalse(g1.equals(g2));
    g2.setLineStroke(new BasicStroke(1.23f));
    assertTrue(g1.equals(g2));
    g1.setFillPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_HORIZONTAL));
    assertFalse(g1.equals(g2));
    g2.setFillPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_HORIZONTAL));
    assertTrue(g1.equals(g2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashcode(){
    LegendGraphic g1=new LegendGraphic(new Rectangle2D.Double(1.0,2.0,3.0,4.0),Color.BLACK);
    LegendGraphic g2=new LegendGraphic(new Rectangle2D.Double(1.0,2.0,3.0,4.0),Color.BLACK);
    assertTrue(g1.equals(g2));
    int h1=g1.hashCode();
    int h2=g2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    Rectangle r=new Rectangle(1,2,3,4);
    LegendGraphic g1=new LegendGraphic(r,Color.BLACK);
    LegendGraphic g2=(LegendGraphic)g1.clone();
    assertTrue(g1 != g2);
    assertTrue(g1.getClass() == g2.getClass());
    assertTrue(g1.equals(g2));
    r.setBounds(4,3,2,1);
    assertFalse(g1.equals(g2));
  }
  /** 
 * A test for cloning - checks that the line shape is cloned correctly.
 */
  @Test public void testCloning2() throws CloneNotSupportedException {
    Rectangle r=new Rectangle(1,2,3,4);
    LegendGraphic g1=new LegendGraphic(r,Color.BLACK);
    Line2D l=new Line2D.Double(1.0,2.0,3.0,4.0);
    g1.setLine(l);
    LegendGraphic g2=(LegendGraphic)g1.clone();
    assertTrue(g1 != g2);
    assertTrue(g1.getClass() == g2.getClass());
    assertTrue(g1.equals(g2));
    l.setLine(4.0,3.0,2.0,1.0);
    assertFalse(g1.equals(g2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    Stroke s=new BasicStroke(1.23f);
    LegendGraphic g1=new LegendGraphic(new Rectangle2D.Double(1.0,2.0,3.0,4.0),Color.BLACK);
    g1.setOutlineStroke(s);
    LegendGraphic g2=(LegendGraphic)TestUtils.serialised(g1);
    assertTrue(g1.equals(g2));
  }
}
