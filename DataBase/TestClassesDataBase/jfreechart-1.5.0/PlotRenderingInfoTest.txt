/** 
 * Tests for the  {@link PlotRenderingInfo} class.
 */
public class PlotRenderingInfoTest {
  /** 
 * Test the equals() method.
 */
  @Test public void testEquals(){
    PlotRenderingInfo p1=new PlotRenderingInfo(new ChartRenderingInfo());
    PlotRenderingInfo p2=new PlotRenderingInfo(new ChartRenderingInfo());
    assertTrue(p1.equals(p2));
    assertTrue(p2.equals(p1));
    p1.setPlotArea(new Rectangle(2,3,4,5));
    assertFalse(p1.equals(p2));
    p2.setPlotArea(new Rectangle(2,3,4,5));
    assertTrue(p1.equals(p2));
    p1.setDataArea(new Rectangle(2,4,6,8));
    assertFalse(p1.equals(p2));
    p2.setDataArea(new Rectangle(2,4,6,8));
    assertTrue(p1.equals(p2));
    p1.addSubplotInfo(new PlotRenderingInfo(null));
    assertFalse(p1.equals(p2));
    p2.addSubplotInfo(new PlotRenderingInfo(null));
    assertTrue(p1.equals(p2));
    p1.getSubplotInfo(0).setDataArea(new Rectangle(1,2,3,4));
    assertFalse(p1.equals(p2));
    p2.getSubplotInfo(0).setDataArea(new Rectangle(1,2,3,4));
    assertTrue(p1.equals(p2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    PlotRenderingInfo p1=new PlotRenderingInfo(new ChartRenderingInfo());
    p1.setPlotArea(new Rectangle2D.Double());
    PlotRenderingInfo p2=(PlotRenderingInfo)p1.clone();
    assertTrue(p1 != p2);
    assertTrue(p1.getClass() == p2.getClass());
    assertTrue(p1.equals(p2));
    p1.getPlotArea().setRect(1.0,2.0,3.0,4.0);
    assertFalse(p1.equals(p2));
    p2.getPlotArea().setRect(1.0,2.0,3.0,4.0);
    assertTrue(p1.equals(p2));
    p1.getDataArea().setRect(4.0,3.0,2.0,1.0);
    assertFalse(p1.equals(p2));
    p2.getDataArea().setRect(4.0,3.0,2.0,1.0);
    assertTrue(p1.equals(p2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    PlotRenderingInfo p1=new PlotRenderingInfo(new ChartRenderingInfo());
    PlotRenderingInfo p2=(PlotRenderingInfo)TestUtils.serialised(p1);
    assertEquals(p1,p2);
  }
}
