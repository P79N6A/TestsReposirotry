/** 
 * Tests for the  {@link ModuloAxis} class.
 */
public class ModuloAxisTest {
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    ModuloAxis a1=new ModuloAxis("Test",new Range(0.0,1.0));
    ModuloAxis a2=(ModuloAxis)a1.clone();
    assertTrue(a1 != a2);
    assertTrue(a1.getClass() == a2.getClass());
    assertTrue(a1.equals(a2));
  }
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    ModuloAxis a1=new ModuloAxis("Test",new Range(0.0,1.0));
    ModuloAxis a2=new ModuloAxis("Test",new Range(0.0,1.0));
    assertTrue(a1.equals(a2));
    a1.setDisplayRange(0.1,1.1);
    assertFalse(a1.equals(a2));
    a2.setDisplayRange(0.1,1.1);
    assertTrue(a1.equals(a2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashCode(){
    ModuloAxis a1=new ModuloAxis("Test",new Range(0.0,1.0));
    ModuloAxis a2=new ModuloAxis("Test",new Range(0.0,1.0));
    assertTrue(a1.equals(a2));
    int h1=a1.hashCode();
    int h2=a2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    ModuloAxis a1=new ModuloAxis("Test",new Range(0.0,1.0));
    ModuloAxis a2=(ModuloAxis)TestUtils.serialised(a1);
    assertEquals(a1,a2);
  }
}
