/** 
 * Tests for the  {@link GanttRenderer} class.
 */
public class GanttRendererTest {
  /** 
 * Check that the equals() method distinguishes all fields.
 */
  @Test public void testEquals(){
    GanttRenderer r1=new GanttRenderer();
    GanttRenderer r2=new GanttRenderer();
    assertEquals(r1,r2);
    r1.setCompletePaint(Color.YELLOW);
    assertFalse(r1.equals(r2));
    r2.setCompletePaint(Color.YELLOW);
    assertTrue(r1.equals(r2));
    r1.setIncompletePaint(Color.green);
    assertFalse(r1.equals(r2));
    r2.setIncompletePaint(Color.green);
    assertTrue(r1.equals(r2));
    r1.setStartPercent(0.11);
    assertFalse(r1.equals(r2));
    r2.setStartPercent(0.11);
    assertTrue(r1.equals(r2));
    r1.setEndPercent(0.88);
    assertFalse(r1.equals(r2));
    r2.setEndPercent(0.88);
    assertTrue(r1.equals(r2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashcode(){
    GanttRenderer r1=new GanttRenderer();
    GanttRenderer r2=new GanttRenderer();
    assertTrue(r1.equals(r2));
    int h1=r1.hashCode();
    int h2=r2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    GanttRenderer r1=new GanttRenderer();
    GanttRenderer r2=(GanttRenderer)r1.clone();
    assertTrue(r1 != r2);
    assertTrue(r1.getClass() == r2.getClass());
    assertTrue(r1.equals(r2));
  }
  /** 
 * Check that this class implements PublicCloneable.
 */
  @Test public void testPublicCloneable(){
    GanttRenderer r1=new GanttRenderer();
    assertThat(r1,instanceOf(PublicCloneable.class));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    GanttRenderer r1=new GanttRenderer();
    r1.setCompletePaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE));
    r1.setIncompletePaint(new GradientPaint(4.0f,3.0f,Color.RED,2.0f,1.0f,Color.BLUE));
    GanttRenderer r2=(GanttRenderer)TestUtils.serialised(r1);
    assertEquals(r1,r2);
  }
}
