/** 
 * Tests for the  {@link SymbolAxis} class.
 */
public class SymbolAxisTest {
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    String[] tickLabels=new String[]{"One","Two","Three"};
    SymbolAxis a1=new SymbolAxis("Test Axis",tickLabels);
    SymbolAxis a2=(SymbolAxis)TestUtils.serialised(a1);
    assertEquals(a1,a2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    SymbolAxis a1=new SymbolAxis("Axis",new String[]{"A","B"});
    SymbolAxis a2=(SymbolAxis)a1.clone();
    assertTrue(a1 != a2);
    assertTrue(a1.getClass() == a2.getClass());
    assertTrue(a1.equals(a2));
  }
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    SymbolAxis a1=new SymbolAxis("Axis",new String[]{"A","B"});
    SymbolAxis a2=new SymbolAxis("Axis",new String[]{"A","B"});
    assertTrue(a1.equals(a2));
    assertTrue(a2.equals(a1));
    a1=new SymbolAxis("Axis 2",new String[]{"A","B"});
    assertFalse(a1.equals(a2));
    a2=new SymbolAxis("Axis 2",new String[]{"A","B"});
    assertTrue(a1.equals(a2));
    a1=new SymbolAxis("Axis 2",new String[]{"C","B"});
    assertFalse(a1.equals(a2));
    a2=new SymbolAxis("Axis 2",new String[]{"C","B"});
    assertTrue(a1.equals(a2));
    a1.setGridBandsVisible(false);
    assertFalse(a1.equals(a2));
    a2.setGridBandsVisible(false);
    assertTrue(a1.equals(a2));
    a1.setGridBandPaint(Color.BLACK);
    assertFalse(a1.equals(a2));
    a2.setGridBandPaint(Color.BLACK);
    assertTrue(a1.equals(a2));
    a1.setGridBandAlternatePaint(Color.RED);
    assertFalse(a1.equals(a2));
    a2.setGridBandAlternatePaint(Color.RED);
    assertTrue(a1.equals(a2));
  }
}
