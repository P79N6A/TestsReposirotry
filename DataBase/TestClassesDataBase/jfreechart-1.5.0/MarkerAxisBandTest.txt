/** 
 * Tests for the  {@link MarkerAxisBand} class.
 */
public class MarkerAxisBandTest {
  /** 
 * Test that the equals() method can distinguish all fields.
 */
  @Test public void testEquals(){
    Font font1=new Font("SansSerif",Font.PLAIN,12);
    Font font2=new Font("SansSerif",Font.PLAIN,14);
    MarkerAxisBand a1=new MarkerAxisBand(null,1.0,1.0,1.0,1.0,font1);
    MarkerAxisBand a2=new MarkerAxisBand(null,1.0,1.0,1.0,1.0,font1);
    assertEquals(a1,a2);
    a1=new MarkerAxisBand(null,2.0,1.0,1.0,1.0,font1);
    assertFalse(a1.equals(a2));
    a2=new MarkerAxisBand(null,2.0,1.0,1.0,1.0,font1);
    assertTrue(a1.equals(a2));
    a1=new MarkerAxisBand(null,2.0,3.0,1.0,1.0,font1);
    assertFalse(a1.equals(a2));
    a2=new MarkerAxisBand(null,2.0,3.0,1.0,1.0,font1);
    assertTrue(a1.equals(a2));
    a1=new MarkerAxisBand(null,2.0,3.0,4.0,1.0,font1);
    assertFalse(a1.equals(a2));
    a2=new MarkerAxisBand(null,2.0,3.0,4.0,1.0,font1);
    assertTrue(a1.equals(a2));
    a1=new MarkerAxisBand(null,2.0,3.0,4.0,5.0,font1);
    assertFalse(a1.equals(a2));
    a2=new MarkerAxisBand(null,2.0,3.0,4.0,5.0,font1);
    assertTrue(a1.equals(a2));
    a1=new MarkerAxisBand(null,2.0,3.0,4.0,5.0,font2);
    assertFalse(a1.equals(a2));
    a2=new MarkerAxisBand(null,2.0,3.0,4.0,5.0,font2);
    assertTrue(a1.equals(a2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashCode(){
    Font font1=new Font("SansSerif",Font.PLAIN,12);
    MarkerAxisBand a1=new MarkerAxisBand(null,1.0,1.0,1.0,1.0,font1);
    MarkerAxisBand a2=new MarkerAxisBand(null,1.0,1.0,1.0,1.0,font1);
    assertTrue(a1.equals(a2));
    int h1=a1.hashCode();
    int h2=a2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    MarkerAxisBand a1=new MarkerAxisBand(null,1.0,1.0,1.0,1.0,null);
    MarkerAxisBand a2=(MarkerAxisBand)TestUtils.serialised(a1);
    assertEquals(a1,a2);
  }
}
