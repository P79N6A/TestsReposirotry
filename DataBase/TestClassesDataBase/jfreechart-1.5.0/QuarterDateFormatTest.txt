/** 
 * Tests for the  {@link QuarterDateFormat} class.
 */
public class QuarterDateFormatTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    QuarterDateFormat qf1=new QuarterDateFormat(TimeZone.getTimeZone("GMT"),new String[]{"1","2","3","4"});
    QuarterDateFormat qf2=new QuarterDateFormat(TimeZone.getTimeZone("GMT"),new String[]{"1","2","3","4"});
    assertTrue(qf1.equals(qf2));
    assertTrue(qf2.equals(qf1));
    qf1=new QuarterDateFormat(TimeZone.getTimeZone("PST"),new String[]{"1","2","3","4"});
    assertFalse(qf1.equals(qf2));
    qf2=new QuarterDateFormat(TimeZone.getTimeZone("PST"),new String[]{"1","2","3","4"});
    assertTrue(qf1.equals(qf2));
    qf1=new QuarterDateFormat(TimeZone.getTimeZone("PST"),new String[]{"A","2","3","4"});
    assertFalse(qf1.equals(qf2));
    qf2=new QuarterDateFormat(TimeZone.getTimeZone("PST"),new String[]{"A","2","3","4"});
    assertTrue(qf1.equals(qf2));
    qf1=new QuarterDateFormat(TimeZone.getTimeZone("PST"),new String[]{"A","2","3","4"},true);
    assertFalse(qf1.equals(qf2));
    qf2=new QuarterDateFormat(TimeZone.getTimeZone("PST"),new String[]{"A","2","3","4"},true);
    assertTrue(qf1.equals(qf2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashCode(){
    QuarterDateFormat qf1=new QuarterDateFormat(TimeZone.getTimeZone("GMT"),new String[]{"1","2","3","4"});
    QuarterDateFormat qf2=new QuarterDateFormat(TimeZone.getTimeZone("GMT"),new String[]{"1","2","3","4"});
    assertTrue(qf1.equals(qf2));
    int h1=qf1.hashCode();
    int h2=qf2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning(){
    QuarterDateFormat qf1=new QuarterDateFormat(TimeZone.getTimeZone("GMT"),new String[]{"1","2","3","4"});
    QuarterDateFormat qf2=null;
    qf2=(QuarterDateFormat)qf1.clone();
    assertTrue(qf1 != qf2);
    assertTrue(qf1.getClass() == qf2.getClass());
    assertTrue(qf1.equals(qf2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    QuarterDateFormat qf1=new QuarterDateFormat(TimeZone.getTimeZone("GMT"),new String[]{"1","2","3","4"});
    QuarterDateFormat qf2=(QuarterDateFormat)TestUtils.serialised(qf1);
    assertEquals(qf1,qf2);
  }
}
