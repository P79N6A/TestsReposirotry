/** 
 * Tests for the  {@link TaskSeries} class.
 */
public class TaskSeriesTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    TaskSeries s1=new TaskSeries("S");
    s1.add(new Task("T1",new Date(1),new Date(2)));
    s1.add(new Task("T2",new Date(11),new Date(22)));
    TaskSeries s2=new TaskSeries("S");
    s2.add(new Task("T1",new Date(1),new Date(2)));
    s2.add(new Task("T2",new Date(11),new Date(22)));
    assertTrue(s1.equals(s2));
    assertTrue(s2.equals(s1));
    s1.add(new Task("T3",new Date(22),new Date(33)));
    assertFalse(s1.equals(s2));
    s2.add(new Task("T3",new Date(22),new Date(33)));
    assertTrue(s1.equals(s2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    TaskSeries s1=new TaskSeries("S");
    s1.add(new Task("T1",new Date(1),new Date(2)));
    s1.add(new Task("T2",new Date(11),new Date(22)));
    TaskSeries s2=(TaskSeries)s1.clone();
    assertTrue(s1 != s2);
    assertTrue(s1.getClass() == s2.getClass());
    assertTrue(s1.equals(s2));
    s1.add(new Task("T3",new Date(22),new Date(33)));
    assertFalse(s1.equals(s2));
    s2.add(new Task("T3",new Date(22),new Date(33)));
    assertTrue(s1.equals(s2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    TaskSeries s1=new TaskSeries("S");
    s1.add(new Task("T1",new Date(1),new Date(2)));
    s1.add(new Task("T2",new Date(11),new Date(22)));
    TaskSeries s2=(TaskSeries)TestUtils.serialised(s1);
    assertEquals(s1,s2);
  }
  /** 
 * Some checks for the getTask() method.
 */
  @Test public void testGetTask(){
    TaskSeries s1=new TaskSeries("S");
    s1.add(new Task("T1",new Date(1),new Date(2)));
    s1.add(new Task("T2",new Date(11),new Date(22)));
    Task t1=s1.get("T1");
    assertTrue(t1.equals(new Task("T1",new Date(1),new Date(2))));
    Task t2=s1.get("T2");
    assertTrue(t2.equals(new Task("T2",new Date(11),new Date(22))));
    Task t3=s1.get("T3");
    assertTrue(t3 == null);
  }
}
