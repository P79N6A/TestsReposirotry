/** 
 * Tests for the  {@link SymbolicXYItemLabelGenerator} class.
 */
public class SymbolicXYItemLabelGeneratorTest {
  /** 
 * Tests the equals method.
 */
  @Test public void testEquals(){
    SymbolicXYItemLabelGenerator g1=new SymbolicXYItemLabelGenerator();
    SymbolicXYItemLabelGenerator g2=new SymbolicXYItemLabelGenerator();
    assertTrue(g1.equals(g2));
    assertTrue(g2.equals(g1));
  }
  /** 
 * Simple check that hashCode is implemented.
 */
  @Test public void testHashCode(){
    SymbolicXYItemLabelGenerator g1=new SymbolicXYItemLabelGenerator();
    SymbolicXYItemLabelGenerator g2=new SymbolicXYItemLabelGenerator();
    assertTrue(g1.equals(g2));
    assertTrue(g1.hashCode() == g2.hashCode());
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    SymbolicXYItemLabelGenerator g1=new SymbolicXYItemLabelGenerator();
    SymbolicXYItemLabelGenerator g2=(SymbolicXYItemLabelGenerator)g1.clone();
    assertTrue(g1 != g2);
    assertTrue(g1.getClass() == g2.getClass());
    assertTrue(g1.equals(g2));
  }
  /** 
 * Check to ensure that this class implements PublicCloneable.
 */
  @Test public void testPublicCloneable(){
    SymbolicXYItemLabelGenerator g1=new SymbolicXYItemLabelGenerator();
    assertTrue(g1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    SymbolicXYItemLabelGenerator g1=new SymbolicXYItemLabelGenerator();
    SymbolicXYItemLabelGenerator g2=(SymbolicXYItemLabelGenerator)TestUtils.serialised(g1);
    assertEquals(g1,g2);
  }
}
