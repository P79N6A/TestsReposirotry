/** 
 * Tests for the  {@link AbstractXYItemRenderer} class.
 */
public class AbstractXYItemRendererTest {
  /** 
 * Creates a test dataset.
 * @return A test dataset.
 */
  private XYDataset createDataset1(){
    XYSeries series=new XYSeries("Series");
    series.add(1.0,1.0);
    series.add(2.0,2.0);
    series.add(3.0,3.0);
    XYSeriesCollection dataset=new XYSeriesCollection();
    dataset.addSeries(series);
    return dataset;
  }
  private static final double EPSILON=0.0000000001;
  /** 
 * Some checks for the findDomainBounds() method.
 */
  @Test public void testFindDomainBounds(){
    AbstractXYItemRenderer renderer=new StandardXYItemRenderer();
    XYDataset dataset=createDataset1();
    Range r=renderer.findDomainBounds(dataset);
    assertEquals(1.0,r.getLowerBound(),EPSILON);
    assertEquals(3.0,r.getUpperBound(),EPSILON);
    assertTrue(renderer.findDomainBounds(null) == null);
  }
  /** 
 * Some checks for the findRangeBounds() method.
 */
  @Test public void testFindRangeBounds(){
    AbstractXYItemRenderer renderer=new StandardXYItemRenderer();
    assertTrue(renderer.findRangeBounds(null) == null);
  }
  /** 
 * Check that the legendItemLabelGenerator is cloned.
 */
  @Test public void testCloning_LegendItemLabelGenerator() throws CloneNotSupportedException {
    StandardXYSeriesLabelGenerator generator=new StandardXYSeriesLabelGenerator("Series {0}");
    XYBarRenderer r1=new XYBarRenderer();
    r1.setLegendItemLabelGenerator(generator);
    XYBarRenderer r2=(XYBarRenderer)r1.clone();
    assertTrue(r1 != r2);
    assertTrue(r1.getClass() == r2.getClass());
    assertTrue(r1.equals(r2));
    assertTrue(r1.getLegendItemLabelGenerator() != r2.getLegendItemLabelGenerator());
  }
  /** 
 * Check that the legendItemToolTipGenerator is cloned.
 */
  @Test public void testCloning_LegendItemToolTipGenerator() throws CloneNotSupportedException {
    StandardXYSeriesLabelGenerator generator=new StandardXYSeriesLabelGenerator("Series {0}");
    XYBarRenderer r1=new XYBarRenderer();
    r1.setLegendItemToolTipGenerator(generator);
    XYBarRenderer r2=(XYBarRenderer)r1.clone();
    assertTrue(r1 != r2);
    assertTrue(r1.getClass() == r2.getClass());
    assertTrue(r1.equals(r2));
    assertTrue(r1.getLegendItemToolTipGenerator() != r2.getLegendItemToolTipGenerator());
  }
  /** 
 * Check that the legendItemURLGenerator is cloned.
 */
  @Test public void testCloning_LegendItemURLGenerator() throws CloneNotSupportedException {
    StandardXYSeriesLabelGenerator generator=new StandardXYSeriesLabelGenerator("Series {0}");
    XYBarRenderer r1=new XYBarRenderer();
    r1.setLegendItemURLGenerator(generator);
    XYBarRenderer r2=(XYBarRenderer)r1.clone();
    assertTrue(r1 != r2);
    assertTrue(r1.getClass() == r2.getClass());
    assertTrue(r1.equals(r2));
    assertTrue(r1.getLegendItemURLGenerator() != r2.getLegendItemURLGenerator());
  }
  @Test public void testEquals_ObjectList(){
    XYBarRenderer r1=new XYBarRenderer();
    r1.setSeriesItemLabelGenerator(0,new StandardXYItemLabelGenerator());
    XYBarRenderer r2=new XYBarRenderer();
    r2.setSeriesItemLabelGenerator(0,new StandardXYItemLabelGenerator());
    assertEquals(r1,r2);
    r2.setSeriesItemLabelGenerator(1,new StandardXYItemLabelGenerator("X"));
    assertNotEquals(r1,r2);
  }
  @Test public void testEquals_ObjectList2(){
    XYBarRenderer r1=new XYBarRenderer();
    r1.setSeriesToolTipGenerator(0,new StandardXYToolTipGenerator());
    XYBarRenderer r2=new XYBarRenderer();
    r2.setSeriesToolTipGenerator(0,new StandardXYToolTipGenerator());
    assertEquals(r1,r2);
    r2.setSeriesToolTipGenerator(1,new StandardXYToolTipGenerator());
    assertNotEquals(r1,r2);
  }
}
