/** 
 * Tests for the  {@link StandardCategoryToolTipGenerator} class.
 */
public class StandardCategoryToolTipGeneratorTest {
  /** 
 * Tests the equals() method.
 */
  @Test public void testEquals(){
    StandardCategoryToolTipGenerator g1=new StandardCategoryToolTipGenerator();
    StandardCategoryToolTipGenerator g2=new StandardCategoryToolTipGenerator();
    assertTrue(g1.equals(g2));
    assertTrue(g2.equals(g1));
    g1=new StandardCategoryToolTipGenerator("{0}",new DecimalFormat("0.000"));
    assertFalse(g1.equals(g2));
    g2=new StandardCategoryToolTipGenerator("{0}",new DecimalFormat("0.000"));
    assertTrue(g1.equals(g2));
    g1=new StandardCategoryToolTipGenerator("{1}",new DecimalFormat("0.000"));
    assertFalse(g1.equals(g2));
    g2=new StandardCategoryToolTipGenerator("{1}",new DecimalFormat("0.000"));
    assertTrue(g1.equals(g2));
    g1=new StandardCategoryToolTipGenerator("{2}",new SimpleDateFormat("d-MMM"));
    assertFalse(g1.equals(g2));
    g2=new StandardCategoryToolTipGenerator("{2}",new SimpleDateFormat("d-MMM"));
    assertTrue(g1.equals(g2));
  }
  /** 
 * Simple check that hashCode is implemented.
 */
  @Test public void testHashCode(){
    StandardCategoryToolTipGenerator g1=new StandardCategoryToolTipGenerator();
    StandardCategoryToolTipGenerator g2=new StandardCategoryToolTipGenerator();
    assertTrue(g1.equals(g2));
    assertTrue(g1.hashCode() == g2.hashCode());
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    StandardCategoryToolTipGenerator g1=new StandardCategoryToolTipGenerator();
    StandardCategoryToolTipGenerator g2=(StandardCategoryToolTipGenerator)g1.clone();
    assertTrue(g1 != g2);
    assertTrue(g1.getClass() == g2.getClass());
    assertTrue(g1.equals(g2));
  }
  /** 
 * Check to ensure that this class implements PublicCloneable.
 */
  @Test public void testPublicCloneable(){
    StandardCategoryToolTipGenerator g1=new StandardCategoryToolTipGenerator();
    assertTrue(g1 instanceof PublicCloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    StandardCategoryToolTipGenerator g1=new StandardCategoryToolTipGenerator("{2}",DateFormat.getInstance());
    StandardCategoryToolTipGenerator g2=(StandardCategoryToolTipGenerator)TestUtils.serialised(g1);
    assertEquals(g1,g2);
  }
  /** 
 * A test for bug 1481087.
 */
  @Test public void testEquals1481087(){
    StandardCategoryToolTipGenerator g1=new StandardCategoryToolTipGenerator("{0}",new DecimalFormat("0.00"));
    StandardCategoryItemLabelGenerator g2=new StandardCategoryItemLabelGenerator("{0}",new DecimalFormat("0.00"));
    assertFalse(g1.equals(g2));
  }
}
