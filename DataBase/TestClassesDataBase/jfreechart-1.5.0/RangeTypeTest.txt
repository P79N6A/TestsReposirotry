/** 
 * Tests for the  {@link RangeType} class.
 */
public class RangeTypeTest {
  /** 
 * Some checks for the equals() method.
 */
  @Test public void testEquals(){
    assertEquals(RangeType.FULL,RangeType.FULL);
    assertEquals(RangeType.NEGATIVE,RangeType.NEGATIVE);
    assertEquals(RangeType.POSITIVE,RangeType.POSITIVE);
    assertFalse(RangeType.FULL.equals(RangeType.NEGATIVE));
    assertFalse(RangeType.FULL.equals(RangeType.POSITIVE));
    assertFalse(RangeType.FULL.equals(null));
    assertFalse(RangeType.NEGATIVE.equals(RangeType.FULL));
    assertFalse(RangeType.NEGATIVE.equals(RangeType.POSITIVE));
    assertFalse(RangeType.NEGATIVE.equals(null));
    assertFalse(RangeType.POSITIVE.equals(RangeType.NEGATIVE));
    assertFalse(RangeType.POSITIVE.equals(RangeType.FULL));
    assertFalse(RangeType.POSITIVE.equals(null));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashCode(){
    RangeType r1=RangeType.FULL;
    RangeType r2=RangeType.FULL;
    assertTrue(r1.equals(r2));
    int h1=r1.hashCode();
    int h2=r2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    RangeType r1=RangeType.FULL;
    RangeType r2=(RangeType)TestUtils.serialised(r1);
    assertSame(r1,r2);
  }
}
