/** 
 * Tests for the  {@link DialTextAnnotation} class.
 */
public class DialTextAnnotationTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    DialTextAnnotation a1=new DialTextAnnotation("A1");
    DialTextAnnotation a2=new DialTextAnnotation("A1");
    assertTrue(a1.equals(a2));
    a1.setAngle(1.1);
    assertFalse(a1.equals(a2));
    a2.setAngle(1.1);
    assertTrue(a1.equals(a2));
    a1.setRadius(9.9);
    assertFalse(a1.equals(a2));
    a2.setRadius(9.9);
    assertTrue(a1.equals(a2));
    Font f=new Font("SansSerif",Font.PLAIN,14);
    a1.setFont(f);
    assertFalse(a1.equals(a2));
    a2.setFont(f);
    assertTrue(a1.equals(a2));
    a1.setPaint(Color.RED);
    assertFalse(a1.equals(a2));
    a2.setPaint(Color.RED);
    assertTrue(a1.equals(a2));
    a1.setLabel("ABC");
    assertFalse(a1.equals(a2));
    a2.setLabel("ABC");
    assertTrue(a1.equals(a2));
    a1.setVisible(false);
    assertFalse(a1.equals(a2));
    a2.setVisible(false);
    assertTrue(a1.equals(a2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashCode(){
    DialTextAnnotation a1=new DialTextAnnotation("A1");
    DialTextAnnotation a2=new DialTextAnnotation("A1");
    assertTrue(a1.equals(a2));
    int h1=a1.hashCode();
    int h2=a2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    DialTextAnnotation a1=new DialTextAnnotation("A1");
    DialTextAnnotation a2=(DialTextAnnotation)a1.clone();
    assertTrue(a1 != a2);
    assertTrue(a1.getClass() == a2.getClass());
    assertTrue(a1.equals(a2));
    MyDialLayerChangeListener l1=new MyDialLayerChangeListener();
    a1.addChangeListener(l1);
    assertTrue(a1.hasListener(l1));
    assertFalse(a2.hasListener(l1));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    DialTextAnnotation a1=new DialTextAnnotation("A1");
    DialTextAnnotation a2=(DialTextAnnotation)TestUtils.serialised(a1);
    assertEquals(a1,a2);
    a1=new DialTextAnnotation("A1");
    a1.setPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE));
    a2=(DialTextAnnotation)TestUtils.serialised(a1);
    assertEquals(a1,a2);
  }
}
