/** 
 * Tests for the  {@link StandardEntityCollection} class.
 */
public class StandardEntityCollectionTest {
  /** 
 * Confirm that the equals method can distinguish all the required fields.
 */
  @Test public void testEquals(){
    StandardEntityCollection c1=new StandardEntityCollection();
    StandardEntityCollection c2=new StandardEntityCollection();
    assertTrue(c1.equals(c2));
    PieSectionEntity e1=new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset(),0,1,"Key","ToolTip","URL");
    c1.add(e1);
    assertFalse(c1.equals(c2));
    PieSectionEntity e2=new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset(),0,1,"Key","ToolTip","URL");
    c2.add(e2);
    assertTrue(c1.equals(c2));
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    PieSectionEntity e1=new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset(),0,1,"Key","ToolTip","URL");
    StandardEntityCollection c1=new StandardEntityCollection();
    c1.add(e1);
    StandardEntityCollection c2=(StandardEntityCollection)c1.clone();
    assertTrue(c1 != c2);
    assertTrue(c1.getClass() == c2.getClass());
    assertTrue(c1.equals(c2));
    c1.clear();
    assertFalse(c1.equals(c2));
    c2.clear();
    assertTrue(c1.equals(c2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    PieSectionEntity e1=new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset(),0,1,"Key","ToolTip","URL");
    StandardEntityCollection c1=new StandardEntityCollection();
    c1.add(e1);
    StandardEntityCollection c2=(StandardEntityCollection)TestUtils.serialised(c1);
    assertEquals(c1,c2);
  }
}
