/** 
 * Tests for the  {@link CompassPlot} class.
 */
public class CompassPlotTest {
  /** 
 * Test the equals() method.
 */
  @Test public void testEquals(){
    CompassPlot plot1=new CompassPlot();
    CompassPlot plot2=new CompassPlot();
    assertTrue(plot1.equals(plot2));
    plot1.setLabelType(CompassPlot.VALUE_LABELS);
    assertFalse(plot1.equals(plot2));
    plot2.setLabelType(CompassPlot.VALUE_LABELS);
    assertTrue(plot1.equals(plot2));
    plot1.setLabelFont(new Font("Serif",Font.PLAIN,10));
    assertFalse(plot1.equals(plot2));
    plot2.setLabelFont(new Font("Serif",Font.PLAIN,10));
    assertTrue(plot1.equals(plot2));
    plot1.setDrawBorder(true);
    assertFalse(plot1.equals(plot2));
    plot2.setDrawBorder(true);
    assertTrue(plot1.equals(plot2));
    plot1.setRosePaint(new GradientPaint(1.0f,2.0f,Color.BLUE,3.0f,4.0f,Color.YELLOW));
    assertFalse(plot1.equals(plot2));
    plot2.setRosePaint(new GradientPaint(1.0f,2.0f,Color.BLUE,3.0f,4.0f,Color.YELLOW));
    assertTrue(plot1.equals(plot2));
    plot1.setRoseCenterPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW));
    assertFalse(plot1.equals(plot2));
    plot2.setRoseCenterPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW));
    assertTrue(plot1.equals(plot2));
    plot1.setRoseHighlightPaint(new GradientPaint(1.0f,2.0f,Color.green,3.0f,4.0f,Color.YELLOW));
    assertFalse(plot1.equals(plot2));
    plot2.setRoseHighlightPaint(new GradientPaint(1.0f,2.0f,Color.green,3.0f,4.0f,Color.YELLOW));
    assertTrue(plot1.equals(plot2));
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    CompassPlot p1=new CompassPlot(null);
    p1.setRosePaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE));
    p1.setRoseCenterPaint(new GradientPaint(4.0f,3.0f,Color.RED,2.0f,1.0f,Color.green));
    p1.setRoseHighlightPaint(new GradientPaint(4.0f,3.0f,Color.RED,2.0f,1.0f,Color.green));
    CompassPlot p2=(CompassPlot)TestUtils.serialised(p1);
    assertEquals(p1,p2);
  }
  /** 
 * Confirm that cloning works.
 */
  @Test public void testCloning() throws CloneNotSupportedException {
    CompassPlot p1=new CompassPlot(new DefaultValueDataset(15.0));
    CompassPlot p2=(CompassPlot)p1.clone();
    assertTrue(p1 != p2);
    assertTrue(p1.getClass() == p2.getClass());
    assertTrue(p1.equals(p2));
  }
}
