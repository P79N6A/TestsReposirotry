/** 
 * Tests for the  {@link XYCoordinate} class.
 */
public class XYCoordinateTest {
  /** 
 * Test that the equals() method distinguishes all fields.
 */
  @Test public void testEquals(){
    XYCoordinate v1=new XYCoordinate(1.0,2.0);
    XYCoordinate v2=new XYCoordinate(1.0,2.0);
    assertTrue(v1.equals(v2));
    assertTrue(v2.equals(v1));
    v1=new XYCoordinate(1.1,2.0);
    assertFalse(v1.equals(v2));
    v2=new XYCoordinate(1.1,2.0);
    assertTrue(v1.equals(v2));
    v1=new XYCoordinate(1.1,2.2);
    assertFalse(v1.equals(v2));
    v2=new XYCoordinate(1.1,2.2);
    assertTrue(v1.equals(v2));
  }
  /** 
 * Two objects that are equal are required to return the same hashCode.
 */
  @Test public void testHashcode(){
    XYCoordinate v1=new XYCoordinate(1.0,2.0);
    XYCoordinate v2=new XYCoordinate(1.0,2.0);
    assertTrue(v1.equals(v2));
    int h1=v1.hashCode();
    int h2=v2.hashCode();
    assertEquals(h1,h2);
  }
  /** 
 * Immutable class is not cloneable.
 */
  @Test public void testCloning(){
    XYCoordinate v1=new XYCoordinate(1.0,2.0);
    assertFalse(v1 instanceof Cloneable);
  }
  /** 
 * Serialize an instance, restore it, and check for equality.
 */
  @Test public void testSerialization(){
    XYCoordinate v1=new XYCoordinate(1.0,2.0);
    XYCoordinate v2=(XYCoordinate)TestUtils.serialised(v1);
    assertEquals(v1,v2);
  }
}
