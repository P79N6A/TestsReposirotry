/** 
 * Requires the validated member to be non-static
 */
private static final class MemberMustBeNonStaticOrAlsoClassRule implements RuleValidator {
  public void validate(  FrameworkMember<?> member,  Class<? extends Annotation> annotation,  List<Throwable> errors){
    boolean isMethodRuleMember=isMethodRule(member);
    boolean isClassRuleAnnotated=(member.getAnnotation(ClassRule.class) != null);
    if (member.isStatic() && (isMethodRuleMember || !isClassRuleAnnotated)) {
      String message;
      if (isMethodRule(member)) {
        message="must not be static.";
      }
 else {
        message="must not be static or it must be annotated with @ClassRule.";
      }
      errors.add(new ValidationError(member,annotation,message));
    }
  }
}
