static public class SubShadowing extends SuperShadowing {
  @Override @Rule public TestRule rule(){
    return new ExternalResource(){
      @Override protected void before() throws Throwable {
        log+="sub.rule().before() ";
      }
      @Override protected void after(){
        log+="sub.rule().after() ";
      }
    }
;
  }
  @Override @Before public void before(){
    super.before();
    log+="sub.before() ";
  }
  @Before public void anotherBefore(){
    log+="sub.anotherBefore() ";
  }
  @Override @After public void after(){
    log+="sub.after() ";
    super.after();
  }
  @After public void anotherAfter(){
    log+="sub.anotherAfter() ";
  }
  @Test public void test(){
    log+="Test ";
  }
}
