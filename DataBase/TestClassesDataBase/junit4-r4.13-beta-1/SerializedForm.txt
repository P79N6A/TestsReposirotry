/** 
 * Represents the serialized output of  {@code Result}. The fields on this class match the files that  {@code Result} had in JUnit 4.11.
 */
private static class SerializedForm implements Serializable {
  private static final long serialVersionUID=1L;
  private final AtomicInteger fCount;
  private final AtomicInteger fIgnoreCount;
  private final AtomicInteger assumptionFailureCount;
  private final List<Failure> fFailures;
  private final long fRunTime;
  private final long fStartTime;
  public SerializedForm(  Result result){
    fCount=result.count;
    fIgnoreCount=result.ignoreCount;
    assumptionFailureCount=result.assumptionFailureCount;
    fFailures=Collections.synchronizedList(new ArrayList<Failure>(result.failures));
    fRunTime=result.runTime.longValue();
    fStartTime=result.startTime.longValue();
  }
  @SuppressWarnings("unchecked") private SerializedForm(  ObjectInputStream.GetField fields) throws IOException {
    fCount=(AtomicInteger)fields.get("fCount",null);
    fIgnoreCount=(AtomicInteger)fields.get("fIgnoreCount",null);
    assumptionFailureCount=(AtomicInteger)fields.get("assumptionFailureCount",null);
    fFailures=(List<Failure>)fields.get("fFailures",null);
    fRunTime=fields.get("fRunTime",0L);
    fStartTime=fields.get("fStartTime",0L);
  }
  public void serialize(  ObjectOutputStream s) throws IOException {
    ObjectOutputStream.PutField fields=s.putFields();
    fields.put("fCount",fCount);
    fields.put("fIgnoreCount",fIgnoreCount);
    fields.put("fFailures",fFailures);
    fields.put("fRunTime",fRunTime);
    fields.put("fStartTime",fStartTime);
    fields.put("assumptionFailureCount",assumptionFailureCount);
    s.writeFields();
  }
  public static SerializedForm deserialize(  ObjectInputStream s) throws ClassNotFoundException, IOException {
    ObjectInputStream.GetField fields=s.readFields();
    return new SerializedForm(fields);
  }
}
