private static final class FactoryHolder {
  private static final Class<?> MANAGEMENT_FACTORY_CLASS;
static {
    Class<?> managementFactoryClass=null;
    try {
      managementFactoryClass=Classes.getClass("java.lang.management.ManagementFactory");
    }
 catch (    ClassNotFoundException e) {
    }
    MANAGEMENT_FACTORY_CLASS=managementFactoryClass;
  }
  static Object getBeanObject(  String methodName){
    if (MANAGEMENT_FACTORY_CLASS != null) {
      try {
        return MANAGEMENT_FACTORY_CLASS.getMethod(methodName).invoke(null);
      }
 catch (      IllegalAccessException e) {
      }
catch (      IllegalArgumentException e) {
      }
catch (      InvocationTargetException e) {
      }
catch (      NoSuchMethodException e) {
      }
catch (      SecurityException e) {
      }
    }
    return null;
  }
}
