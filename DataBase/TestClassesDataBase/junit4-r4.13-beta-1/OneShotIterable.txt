private static class OneShotIterable<T> implements Iterable<T> {
  private final Iterable<T> delegate;
  private final AtomicBoolean iterated=new AtomicBoolean(false);
  OneShotIterable(  Iterable<T> delegate){
    this.delegate=delegate;
  }
  public Iterator<T> iterator(){
    if (iterated.compareAndSet(false,true)) {
      return delegate.iterator();
    }
    throw new IllegalStateException("Cannot call iterator() more than once");
  }
}
