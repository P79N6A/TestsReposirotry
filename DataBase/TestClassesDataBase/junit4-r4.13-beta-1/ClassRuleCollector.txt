private static class ClassRuleCollector implements MemberValueConsumer<TestRule> {
  final List<RuleContainer.RuleEntry> entries=new ArrayList<RuleContainer.RuleEntry>();
  public void accept(  FrameworkMember member,  TestRule value){
    ClassRule rule=member.getAnnotation(ClassRule.class);
    entries.add(new RuleContainer.RuleEntry(value,RuleContainer.RuleEntry.TYPE_TEST_RULE,rule != null ? rule.order() : null));
  }
  public List<TestRule> getOrderedRules(){
    if (entries.isEmpty()) {
      return Collections.emptyList();
    }
    Collections.sort(entries,RuleContainer.ENTRY_COMPARATOR);
    List<TestRule> result=new ArrayList<TestRule>(entries.size());
    for (    RuleContainer.RuleEntry entry : entries) {
      result.add((TestRule)entry.rule);
    }
    return result;
  }
}
