/** 
 * Implementation of  {@link RuntimeMXBean} using the JVM reflectively.
 */
final class ReflectiveRuntimeMXBean implements RuntimeMXBean {
  private final Object runtimeMxBean;
private static final class Holder {
    private static final Method getInputArgumentsMethod;
static {
      Method inputArguments=null;
      try {
        Class<?> threadMXBeanClass=Classes.getClass("java.lang.management.RuntimeMXBean");
        inputArguments=threadMXBeanClass.getMethod("getInputArguments");
      }
 catch (      ClassNotFoundException e) {
      }
catch (      NoSuchMethodException e) {
      }
catch (      SecurityException e) {
      }
      getInputArgumentsMethod=inputArguments;
    }
  }
  ReflectiveRuntimeMXBean(  Object runtimeMxBean){
    super();
    this.runtimeMxBean=runtimeMxBean;
  }
  /** 
 * {@inheritDoc}
 */
  @SuppressWarnings("unchecked") public List<String> getInputArguments(){
    if (Holder.getInputArgumentsMethod != null) {
      try {
        return (List<String>)Holder.getInputArgumentsMethod.invoke(runtimeMxBean);
      }
 catch (      ClassCastException e) {
      }
catch (      IllegalAccessException e) {
      }
catch (      IllegalArgumentException e) {
      }
catch (      InvocationTargetException e) {
      }
    }
    return Collections.emptyList();
  }
}
