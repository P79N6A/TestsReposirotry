static public abstract class SuperShadowing {
  @Rule public TestRule rule(){
    return new ExternalResource(){
      @Override protected void before() throws Throwable {
        log+="super.rule().before() ";
      }
      @Override protected void after(){
        log+="super.rule().after() ";
      }
    }
;
  }
  @Before public void before(){
    log+="super.before() ";
  }
  @After public void after(){
    log+="super.after() ";
  }
}
