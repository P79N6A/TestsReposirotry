public class ParallelMethodTest {
  private static final long TIMEOUT=15;
  private static volatile Thread fOne=null;
  private static volatile Thread fTwo=null;
public static class Example {
    private static volatile CountDownLatch fSynchronizer;
    @BeforeClass public static void init(){
      fSynchronizer=new CountDownLatch(2);
    }
    @Test public void one() throws InterruptedException {
      fSynchronizer.countDown();
      assertTrue(fSynchronizer.await(TIMEOUT,TimeUnit.SECONDS));
      fOne=Thread.currentThread();
    }
    @Test public void two() throws InterruptedException {
      fSynchronizer.countDown();
      assertTrue(fSynchronizer.await(TIMEOUT,TimeUnit.SECONDS));
      fTwo=Thread.currentThread();
    }
  }
  @Before public void init(){
    fOne=null;
    fTwo=null;
  }
  @Test public void testsRunInParallel(){
    Result result=JUnitCore.runClasses(ParallelComputer.methods(),Example.class);
    assertTrue(result.wasSuccessful());
    assertNotNull(fOne);
    assertNotNull(fTwo);
    assertThat(fOne,is(not(fTwo)));
  }
}
