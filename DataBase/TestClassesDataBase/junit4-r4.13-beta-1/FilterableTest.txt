public class FilterableTest {
public static class FilteredRunner extends Parameterized {
    public FilteredRunner(    Class<?> klass) throws Throwable {
      super(klass);
      filter(new Filter(){
        @Override public boolean shouldRun(        Description description){
          return !description.getDisplayName().contains("skip");
        }
        @Override public String describe(){
          return "skip methods containing the word 'skip'";
        }
      }
);
    }
  }
@RunWith(FilteredRunner.class) public static class FilteredTest {
    @Parameters public static List<Object[]> parameters(){
      return Arrays.asList(new Object[]{3},new Object[]{4});
    }
    public FilteredTest(    int x){
    }
    @Test public void skipThis(){
      Assert.fail();
    }
    @Test public void runThis(){
    }
  }
  @Test public void testFilterInRunnerConstructor(){
    Result result=JUnitCore.runClasses(FilteredTest.class);
    assertTrue(result.wasSuccessful());
  }
}
