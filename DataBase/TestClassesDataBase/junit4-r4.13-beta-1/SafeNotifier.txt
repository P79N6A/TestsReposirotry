private abstract class SafeNotifier {
  private final List<RunListener> currentListeners;
  SafeNotifier(){
    this(listeners);
  }
  SafeNotifier(  List<RunListener> currentListeners){
    this.currentListeners=currentListeners;
  }
  void run(){
    int capacity=currentListeners.size();
    List<RunListener> safeListeners=new ArrayList<RunListener>(capacity);
    List<Failure> failures=new ArrayList<Failure>(capacity);
    for (    RunListener listener : currentListeners) {
      try {
        notifyListener(listener);
        safeListeners.add(listener);
      }
 catch (      Exception e) {
        failures.add(new Failure(Description.TEST_MECHANISM,e));
      }
    }
    fireTestFailures(safeListeners,failures);
  }
  abstract protected void notifyListener(  RunListener each) throws Exception ;
}
