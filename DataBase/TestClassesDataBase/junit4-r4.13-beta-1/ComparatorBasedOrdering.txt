/** 
 * An ordering that internally uses a  {@link Comparator}.
 */
class ComparatorBasedOrdering extends Ordering {
  private final Comparator<Description> comparator;
  protected ComparatorBasedOrdering(  Comparator<Description> comparator){
    this.comparator=comparator;
  }
  @Override protected List<Description> orderItems(  Collection<Description> descriptions){
    List<Description> ordered=new ArrayList<Description>(descriptions);
    Collections.sort(ordered,comparator);
    return ordered;
  }
}
