public class OracleSelectTest9 extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT e.employee_id, e.salary, e.commission_pct" + "   FROM employees e JOIN departments d" + "   USING (department_id)"+ "   WHERE job_id = 'SA_REP'"+ "   AND location_id = 2500"+ "   ORDER BY e.employee_id"+ "   FOR UPDATE OF e.salary;";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("departments")));
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("employees")));
    Assert.assertEquals(7,visitor.getColumns().size());
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("departments","department_id")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","department_id")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","employee_id")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","commission_pct")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","department_id")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("UNKNOWN","job_id")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("UNKNOWN","location_id")));
  }
}
