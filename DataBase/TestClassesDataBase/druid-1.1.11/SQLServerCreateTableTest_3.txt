public class SQLServerCreateTableTest_3 extends TestCase {
  public void test_0() throws Exception {
    String sql="CREATE TABLE dbo.cwd_directory (" + "ID NUMERIC NOT NULL, directory_name NVARCHAR(255), " + "lower_directory_name NVARCHAR(255), created_date DATETIME, "+ "updated_date DATETIME, active int, description NVARCHAR(255), "+ "impl_class NVARCHAR(255), lower_impl_class NVARCHAR(255), "+ "directory_type NVARCHAR(60), directory_position NUMERIC, "+ "CONSTRAINT PK_cwd_directory PRIMARY KEY (ID))";
    SQLServerStatementParser parser=new SQLServerStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLCreateTableStatement stmt=(SQLCreateTableStatement)statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    Assert.assertEquals("CREATE TABLE dbo.cwd_directory (" + "\n\tID NUMERIC NOT NULL," + "\n\tdirectory_name NVARCHAR(255),"+ "\n\tlower_directory_name NVARCHAR(255),"+ "\n\tcreated_date DATETIME,"+ "\n\tupdated_date DATETIME,"+ "\n\tactive int,"+ "\n\tdescription NVARCHAR(255),"+ "\n\timpl_class NVARCHAR(255),"+ "\n\tlower_impl_class NVARCHAR(255),"+ "\n\tdirectory_type NVARCHAR(60),"+ "\n\tdirectory_position NUMERIC,"+ "\n\tCONSTRAINT PK_cwd_directory PRIMARY KEY (ID)"+ "\n)",SQLUtils.toSQLString(stmt,JdbcConstants.SQL_SERVER));
    Assert.assertEquals("create table dbo.cwd_directory (" + "\n\tID NUMERIC not null," + "\n\tdirectory_name NVARCHAR(255),"+ "\n\tlower_directory_name NVARCHAR(255),"+ "\n\tcreated_date DATETIME,"+ "\n\tupdated_date DATETIME,"+ "\n\tactive int,"+ "\n\tdescription NVARCHAR(255),"+ "\n\timpl_class NVARCHAR(255),"+ "\n\tlower_impl_class NVARCHAR(255),"+ "\n\tdirectory_type NVARCHAR(60),"+ "\n\tdirectory_position NUMERIC,"+ "\n\tconstraint PK_cwd_directory primary key (ID)"+ "\n)",SQLUtils.toSQLString(stmt,JdbcConstants.SQL_SERVER,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
    SQLServerSchemaStatVisitor visitor=new SQLServerSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(12,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("dbo.cwd_directory")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.cwd_directory","ID")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.cwd_directory","directory_name")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.cwd_directory","lower_directory_name")));
  }
}
