public class HexadecimalValuesTest extends TestCase {
  public void test_0() throws Exception {
    String sql="SELECT 0x5061756c;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT 0x5061756c;",text);
  }
  public void test_1() throws Exception {
    String sql="SELECT X'4D7953514C';";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT 0x4D7953514C;",text);
  }
  public void test_2() throws Exception {
    String sql="SELECT x'4D7953514C';";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT 0x4D7953514C;",text);
  }
  public void test_3() throws Exception {
    String sql="SELECT 0x65 USING utf8;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT 0x65 USING utf8;",text);
  }
  public void test_4() throws Exception {
    String sql="SELECT 0x41, CAST(0x41 AS UNSIGNED)";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT 0x41, CAST(0x41 AS UNSIGNED)",text);
  }
  public void test_5() throws Exception {
    String sql="SELECT HEX('cat')";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT HEX('cat')",text);
  }
  private String output(  List<SQLStatement> stmtList){
    return SQLUtils.toSQLString(stmtList,JdbcConstants.MYSQL);
  }
}
