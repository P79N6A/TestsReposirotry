public class OracleSelectTest70 extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT CAST(a.nsrdzdah AS char)\n" + "FROM DJ_NSRXX_DZB a\n" + "\tINNER JOIN DJ_NSRXX b ON a.nsrdzdah = b.nsrdzdah\n"+ "\tINNER JOIN DM_SWJG c ON b.nsr_swjg_dm = c.swjg_dm\n"+ "WHERE (a.nsrsbh_old = ?\n"+ "\t\tOR a.nsrsbh_new = ?)\n"+ "\tAND b.nsrzt_dm <= ?\n"+ "\tAND c.JBDM LIKE ?\n"+ "\tAND rownum = 1";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(3,visitor.getTables().size());
    assertEquals(8,visitor.getColumns().size());
{
      String text=SQLUtils.toOracleString(stmt);
      assertEquals("SELECT CAST(a.nsrdzdah AS char)\n" + "FROM DJ_NSRXX_DZB a\n" + "INNER JOIN DJ_NSRXX b ON a.nsrdzdah = b.nsrdzdah \n"+ "\tINNER JOIN DM_SWJG c ON b.nsr_swjg_dm = c.swjg_dm \n"+ "WHERE (a.nsrsbh_old = ?\n"+ "\t\tOR a.nsrsbh_new = ?)\n"+ "\tAND b.nsrzt_dm <= ?\n"+ "\tAND c.JBDM LIKE ?\n"+ "\tAND rownum = 1",text);
    }
  }
}
