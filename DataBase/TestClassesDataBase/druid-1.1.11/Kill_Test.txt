public class Kill_Test extends TestCase {
  public void test_0() throws Exception {
    String sql="KILL  QUERY 233";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("KILL QUERY 233;",text);
  }
  public void test_1() throws Exception {
    String sql="KILL  CONNECTION 233";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("KILL CONNECTION 233;",text);
  }
  public void test_2() throws Exception {
    String sql="KILL 233";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("KILL 233;",text);
  }
  public void test_3() throws Exception {
    String sql="KILL 233,234";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("KILL 233, 234;",text);
  }
  private String output(  List<SQLStatement> stmtList){
    StringBuilder out=new StringBuilder();
    for (    SQLStatement stmt : stmtList) {
      stmt.accept(new MySqlOutputVisitor(out));
      out.append(";");
    }
    return out.toString();
  }
}
