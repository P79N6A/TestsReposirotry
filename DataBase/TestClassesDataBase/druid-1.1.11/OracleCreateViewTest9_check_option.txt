public class OracleCreateViewTest9_check_option extends OracleTest {
  public void test_types() throws Exception {
    String sql=" CREATE VIEW clerk AS\n" + "   SELECT employee_id, last_name, department_id, job_id \n" + "   FROM employees\n"+ "   WHERE job_id = 'PU_CLERK' \n"+ "      or job_id = 'SH_CLERK' \n"+ "      or job_id = 'ST_CLERK'\n"+ "   WITH CHECK OPTION;";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    assertEquals(1,statementList.size());
    assertEquals("CREATE VIEW clerk\n" + "AS\n" + "SELECT employee_id, last_name, department_id, job_id\n"+ "FROM employees\n"+ "WHERE job_id = 'PU_CLERK'\n"+ "\tOR job_id = 'SH_CLERK'\n"+ "\tOR job_id = 'ST_CLERK'\n"+ "WITH CHECK OPTION;",SQLUtils.toSQLString(stmt,JdbcConstants.ORACLE));
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(4,visitor.getColumns().size());
    assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","last_name")));
  }
}
