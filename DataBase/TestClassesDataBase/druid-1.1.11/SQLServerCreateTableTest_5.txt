public class SQLServerCreateTableTest_5 extends TestCase {
  public void test_0() throws Exception {
    String sql="CREATE TABLE dbo.AO_563AEE_ACTOR_ENTITY (" + "    FULL_NAME VARCHAR(255)," + "    ID INTEGER IDENTITY(1,1) NOT NULL,"+ "    PROFILE_PAGE_URI VARCHAR(767),"+ "    PROFILE_PICTURE_URI VARCHAR(767),"+ "    USERNAME VARCHAR(255),"+ ")";
    SQLServerStatementParser parser=new SQLServerStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLCreateTableStatement stmt=(SQLCreateTableStatement)statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    String output=SQLUtils.toSQLString(stmt,JdbcConstants.SQL_SERVER);
    Assert.assertEquals("CREATE TABLE dbo.AO_563AEE_ACTOR_ENTITY (" + "\n\tFULL_NAME VARCHAR(255)," + "\n\tID INTEGER DEFAULT NULL IDENTITY (1, 1),"+ "\n\tPROFILE_PAGE_URI VARCHAR(767),"+ "\n\tPROFILE_PICTURE_URI VARCHAR(767),"+ "\n\tUSERNAME VARCHAR(255)"+ "\n)",output);
    SQLServerSchemaStatVisitor visitor=new SQLServerSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(5,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("dbo.AO_563AEE_ACTOR_ENTITY")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.AO_563AEE_ACTOR_ENTITY","FULL_NAME")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.AO_563AEE_ACTOR_ENTITY","ID")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.AO_563AEE_ACTOR_ENTITY","USERNAME")));
  }
}
