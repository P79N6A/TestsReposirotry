public class H2_AlterTableTest_0 extends TestCase {
  public void test_0() throws Exception {
    String sql="alter table ACT_GE_BYTEARRAY add constraint ACT_FK_BYTEARR_DEPL foreign key (DEPLOYMENT_ID_) references ACT_RE_DEPLOYMENT (ID_);";
    List<SQLStatement> statementList=SQLUtils.toStatementList(sql,JdbcConstants.H2);
    SQLStatement stmt=statementList.get(0);
    System.out.println(stmt.toString());
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toSQLString(stmt,JdbcConstants.H2);
      assertEquals("ALTER TABLE ACT_GE_BYTEARRAY\n" + "\tADD CONSTRAINT ACT_FK_BYTEARR_DEPL FOREIGN KEY (DEPLOYMENT_ID_)\n" + "\t\tREFERENCES ACT_RE_DEPLOYMENT (ID_);",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(2,visitor.getTables().size());
    assertEquals(2,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
    assertTrue(visitor.containsTable("ACT_GE_BYTEARRAY"));
  }
}
