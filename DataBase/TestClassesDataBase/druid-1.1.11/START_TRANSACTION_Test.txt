public class START_TRANSACTION_Test extends TestCase {
  public void test_0() throws Exception {
    String sql="START TRANSACTION;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("START TRANSACTION;",text);
  }
  public void test_1() throws Exception {
    String sql="START TRANSACTION WITH CONSISTENT SNAPSHOT;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("START TRANSACTION WITH CONSISTENT SNAPSHOT;",text);
  }
  public void test_2() throws Exception {
    String sql="START TRANSACTION BEGIN;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("START TRANSACTION BEGIN;",text);
  }
  public void test_3() throws Exception {
    String sql="START TRANSACTION BEGIN WORK;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("START TRANSACTION BEGIN WORK;",text);
  }
  public void test_4() throws Exception {
    String sql="COMMIT;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("COMMIT;",text);
  }
  public void test_5() throws Exception {
    String sql="COMMIT WORK;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("COMMIT WORK;",text);
  }
  public void test_6() throws Exception {
    String sql="ROLLBACK;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("ROLLBACK;",text);
  }
  public void test_7() throws Exception {
    String sql="SET autocommit=0;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SET autocommit = 0;",text);
  }
  private String output(  List<SQLStatement> stmtList){
    return SQLUtils.toSQLString(stmtList,JdbcConstants.MYSQL);
  }
}
