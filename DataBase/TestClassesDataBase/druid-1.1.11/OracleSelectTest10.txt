public class OracleSelectTest10 extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT * FROM pivot_table" + "  UNPIVOT INCLUDE NULLS " + "    (yearly_total FOR order_mode IN (store AS 'direct', internet AS 'online'))"+ "  ORDER BY year, order_mode;";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    String result=SQLUtils.toOracleString(stmt);
    String result_lcase=SQLUtils.toOracleString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION);
    Assert.assertEquals("SELECT *" + "\nFROM pivot_table" + "\nUNPIVOT INCLUDE NULLS (yearly_total FOR order_mode IN (store AS 'direct', internet AS 'online'))"+ "\nORDER BY year, order_mode;",result);
    Assert.assertEquals("select *" + "\nfrom pivot_table" + "\nunpivot include nulls (yearly_total for order_mode in (store as 'direct', internet as 'online'))"+ "\norder by year, order_mode;",result_lcase);
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("pivot_table")));
    Assert.assertEquals(3,visitor.getColumns().size());
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("pivot_table","*")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("pivot_table","YEAR")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("pivot_table","order_mode")));
  }
}
