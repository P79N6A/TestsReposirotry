public class OracleInsertTest12 extends OracleTest {
  public void test_0() throws Exception {
    String sql="INSERT INTO employees (employee_id, last_name, email, " + "      hire_date, job_id, salary, commission_pct) " + "   VALUES (207, 'Gregory', 'pgregory@example.com', "+ "      sysdate, 'PU_CLERK', 1.2E3, NULL);";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    Assert.assertEquals("INSERT INTO employees" + "\n\t(employee_id, last_name, email, hire_date, job_id" + "\n\t, salary, commission_pct)"+ "\nVALUES (207, 'Gregory', 'pgregory@example.com', SYSDATE, 'PU_CLERK'"+ "\n\t, 1.2E3, NULL);",SQLUtils.toSQLString(stmt,JdbcConstants.ORACLE));
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(7,visitor.getColumns().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("employees")));
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","employee_id")));
  }
}
