public class MySqlCreateTableTest43 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="CREATE TABLE client_firms (" + "    id   INT," + "    name VARCHAR(35)"+ ")"+ "PARTITION BY LIST (id) ("+ "    PARTITION r0 VALUES IN (1, 5, 9, 13, 17, 21),"+ "    PARTITION r1 VALUES IN (2, 6, 10, 14, 18, 22),"+ "    PARTITION r2 VALUES IN (3, 7, 11, 15, 19, 23),"+ "    PARTITION r3 VALUES IN (4, 8, 12, 16, 20, 24)"+ ");";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("client_firms")));
    String output=SQLUtils.toMySqlString(stmt);
    Assert.assertEquals("CREATE TABLE client_firms (\n" + "\tid INT,\n" + "\tname VARCHAR(35)\n"+ ")\n"+ "PARTITION BY LIST (id) (\n"+ "\tPARTITION r0 VALUES IN (1, 5, 9, 13, 17, 21), \n"+ "\tPARTITION r1 VALUES IN (2, 6, 10, 14, 18, 22), \n"+ "\tPARTITION r2 VALUES IN (3, 7, 11, 15, 19, 23), \n"+ "\tPARTITION r3 VALUES IN (4, 8, 12, 16, 20, 24)\n"+ ");",output);
  }
}
