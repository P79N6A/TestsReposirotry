public class DB2CreateTableTest_04 extends DB2Test {
  public void test_0() throws Exception {
    String sql="CREATE TABLE CUSTOMER\n" + "          (CUSTOMERNUM      INTEGER,\n" + "           CUSTOMERNAME     VARCHAR(80),\n"+ "           ADDRESS          VARCHAR(200),\n"+ "           CITY             VARCHAR(50),\n"+ "           COUNTRY          VARCHAR(50),\n"+ "           CODE             VARCHAR(15),\n"+ "           CUSTOMERNUMDIM   INTEGER)\n"+ "           COMPRESS YES;";
    DB2StatementParser parser=new DB2StatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    System.out.println(SQLUtils.toDB2String(stmt));
    Assert.assertEquals(1,statementList.size());
    DB2SchemaStatVisitor visitor=new DB2SchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(7,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.containsTable("CUSTOMER"));
    Assert.assertEquals("CREATE TABLE CUSTOMER (\n" + "\tCUSTOMERNUM INTEGER,\n" + "\tCUSTOMERNAME VARCHAR(80),\n"+ "\tADDRESS VARCHAR(200),\n"+ "\tCITY VARCHAR(50),\n"+ "\tCOUNTRY VARCHAR(50),\n"+ "\tCODE VARCHAR(15),\n"+ "\tCUSTOMERNUMDIM INTEGER\n"+ ")\n"+ "COMPRESS YES;",SQLUtils.toSQLString(stmt,JdbcConstants.DB2));
    Assert.assertEquals("create table CUSTOMER (\n" + "\tCUSTOMERNUM INTEGER,\n" + "\tCUSTOMERNAME VARCHAR(80),\n"+ "\tADDRESS VARCHAR(200),\n"+ "\tCITY VARCHAR(50),\n"+ "\tCOUNTRY VARCHAR(50),\n"+ "\tCODE VARCHAR(15),\n"+ "\tCUSTOMERNUMDIM INTEGER\n"+ ")\n"+ "compress yes;",SQLUtils.toSQLString(stmt,JdbcConstants.DB2,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
  }
}
