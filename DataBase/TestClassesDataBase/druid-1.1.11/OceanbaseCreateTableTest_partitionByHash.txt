public class OceanbaseCreateTableTest_partitionByHash extends MysqlTest {
  public void test_0() throws Exception {
    String sql="CREATE TABLE tnhash ( id INT, name VARCHAR(5) ) PARTITION BY HASH(id) PARTITIONS 2;";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    SQLStatement stmt=stmtList.get(0);
{
      String result=SQLUtils.toMySqlString(stmt);
      Assert.assertEquals("CREATE TABLE tnhash (" + "\n\tid INT," + "\n\tname VARCHAR(5)"+ "\n)"+ "\nPARTITION BY HASH (id) PARTITIONS 2;",result);
    }
{
      String result=SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION);
      Assert.assertEquals("create table tnhash (" + "\n\tid INT," + "\n\tname VARCHAR(5)"+ "\n)"+ "\npartition by hash (id) partitions 2;",result);
    }
    Assert.assertEquals(1,stmtList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
  }
}
