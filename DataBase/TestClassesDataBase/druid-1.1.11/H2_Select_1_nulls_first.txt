public class H2_Select_1_nulls_first extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT * FROM (SELECT ID, COUNT(*) FROM TEST\n" + "    GROUP BY ID UNION SELECT NULL, COUNT(*) FROM TEST)\n" + "    ORDER BY 1 NULLS LAST;";
    List<SQLStatement> stmtList=SQLUtils.toStatementList(sql,JdbcConstants.H2);
    SQLStatement stmt=stmtList.get(0);
    Assert.assertEquals(1,stmtList.size());
    SchemaStatVisitor visitor=SQLUtils.createSchemaStatVisitor(JdbcConstants.H2);
    stmt.accept(visitor);
{
      String text=SQLUtils.toSQLString(stmt,JdbcConstants.H2);
      assertEquals("SELECT *\n" + "FROM (\n" + "\tSELECT ID, COUNT(*)\n"+ "\tFROM TEST\n"+ "\tGROUP BY ID\n"+ "\tUNION\n"+ "\tSELECT NULL, COUNT(*)\n"+ "\tFROM TEST\n"+ ")\n"+ "ORDER BY 1 NULLS LAST;",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(2,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
    Assert.assertTrue(visitor.containsTable("TEST"));
  }
}
