public class MySqlSelectTest_12 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="SELECT COUNT(*) a FROM (select nickname,mobile,comment,createdate from ub_userdiscuss order by discuss_id desc) b  ";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    SQLSelectStatement selectStmt=(SQLSelectStatement)stmt;
    SQLSelect select=selectStmt.getSelect();
    Assert.assertNotNull(select.getQuery());
    MySqlSelectQueryBlock queryBlock=(MySqlSelectQueryBlock)select.getQuery();
    Assert.assertNull(queryBlock.getOrderBy());
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(5,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    assertEquals(1,visitor.getOrderByColumns().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("ub_userdiscuss")));
    String output=SQLUtils.toMySqlString(stmt);
    assertEquals("SELECT COUNT(*) AS a\n" + "FROM (\n" + "\tSELECT nickname, mobile, comment, createdate\n"+ "\tFROM ub_userdiscuss\n"+ "\tORDER BY discuss_id DESC\n"+ ") b",output);
  }
}
