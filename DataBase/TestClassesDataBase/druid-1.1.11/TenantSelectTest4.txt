public class TenantSelectTest4 extends TestCase {
  private String sql="SELECT a.*,b.name " + "FROM vote_info a left join vote_item b on a.item_id=b.id " + "where 1=1 limit 1,10";
  private String expect_sql="SELECT a.*, b.name, b.tenant, a.tenant" + "\nFROM vote_info a" + "\n\tLEFT JOIN vote_item b ON a.item_id = b.id"+ "\nWHERE 1 = 1"+ "\nLIMIT 1, 10";
  private WallConfig config=new WallConfig();
  private WallConfig config_callback=new WallConfig();
  protected void setUp() throws Exception {
    config.setTenantTablePattern("*");
    config.setTenantColumn("tenant");
    config_callback.setTenantCallBack(new TenantTestCallBack());
  }
  public void testMySql() throws Exception {
    WallProvider.setTenantValue(123);
    MySqlWallProvider provider=new MySqlWallProvider(config);
    WallCheckResult checkResult=provider.check(sql);
    Assert.assertEquals(0,checkResult.getViolations().size());
    String resultSql=SQLUtils.toSQLString(checkResult.getStatementList(),JdbcConstants.MYSQL);
    Assert.assertEquals(expect_sql,resultSql);
  }
  public void testMySql2() throws Exception {
    MySqlWallProvider provider=new MySqlWallProvider(config_callback);
    WallCheckResult checkResult=provider.check(sql);
    Assert.assertEquals(0,checkResult.getViolations().size());
    String resultSql=SQLUtils.toSQLString(checkResult.getStatementList(),JdbcConstants.MYSQL);
    Assert.assertEquals(expect_sql,resultSql);
  }
}
