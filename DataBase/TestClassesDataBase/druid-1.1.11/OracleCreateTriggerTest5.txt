public class OracleCreateTriggerTest5 extends OracleTest {
  public void test_0() throws Exception {
    String sql="CREATE OR REPLACE TRIGGER XONN.GAPM_PROJECT_INFO_SYNC_IOA_t\n" + "\tBEFORE INSERT\n" + "\tON XONN.GAPM_PROJECT_INFO_SYNC_IOA\n"+ "\tFOR EACH ROW\n"+ "BEGIN\n"+ "\tSELECT XONN.GAPM_PROJECT_INFO_SYNC_IOA_S.Nextval\n"+ "\tINTO :New.PROJECT_SYN_ID\n"+ "\tFROM dual;\n"+ "END;";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    Assert.assertEquals("CREATE OR REPLACE TRIGGER XONN.GAPM_PROJECT_INFO_SYNC_IOA_t\n" + "\tBEFORE INSERT\n" + "\tON XONN.GAPM_PROJECT_INFO_SYNC_IOA\n"+ "\tFOR EACH ROW\n"+ "BEGIN\n"+ "\tSELECT XONN.GAPM_PROJECT_INFO_SYNC_IOA_S.Nextval\n"+ "\tINTO :New.PROJECT_SYN_ID\n"+ "\tFROM dual;\n"+ "END;",SQLUtils.toSQLString(stmt,JdbcConstants.ORACLE));
    Assert.assertEquals("CREATE OR REPLACE TRIGGER XONN.GAPM_PROJECT_INFO_SYNC_IOA_t\n" + "\tBEFORE INSERT\n" + "\tON XONN.GAPM_PROJECT_INFO_SYNC_IOA\n"+ "\tFOR EACH ROW\n"+ "BEGIN\n"+ "\tSELECT XONN.GAPM_PROJECT_INFO_SYNC_IOA_S.Nextval\n"+ "\tINTO :New.PROJECT_SYN_ID\n"+ "\tFROM dual;\n"+ "END;",SQLUtils.toSQLString(stmt,JdbcConstants.POSTGRESQL));
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(0,visitor.getColumns().size());
  }
}
