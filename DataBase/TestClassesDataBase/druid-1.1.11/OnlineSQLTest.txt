public class OnlineSQLTest extends TestCase {
  private String url="jdbc:mysql://a.b.c.d/dragoon_v25monitordb_online";
  private String user="dragoon";
  private String password="dragoon";
  public void test_list_sql() throws Exception {
    update(19730,"",4);
    update(20164,"",4);
    update(20386,"",4);
    update(20440,"",4);
    update(21208,"",4);
    update(18035,"",4);
    Connection conn=DriverManager.getConnection(url,user,password);
    int count=0;
    String sql="SELECT id, value FROM m_sql_const WHERE flag IS NULL LIMIT 100";
    Statement stmt=conn.createStatement();
    ResultSet rs=stmt.executeQuery(sql);
    while (rs.next()) {
      int id=rs.getInt(1);
      String value=rs.getString(2);
      if (value.indexOf('ï¼ˆ') != -1) {
        update(id,"",4);
        continue;
      }
      System.out.println(value);
      System.out.println();
      try {
        validateOracle(id,value);
      }
 catch (      Exception e) {
        e.printStackTrace();
        System.out.println("id : " + id);
        continue;
      }
      count++;
    }
    rs.close();
    stmt.close();
    System.out.println("COUNT : " + count);
    conn.close();
  }
  void reset() throws SQLException {
    Connection conn=DriverManager.getConnection(url,user,password);
    String sql="UPDATE m_sql_const SET flag = NULL, value2 = NULL";
    PreparedStatement stmt=conn.prepareStatement(sql);
    stmt.executeUpdate();
    stmt.close();
    conn.close();
  }
  void update(  int id,  String value2,  int flag) throws SQLException {
    Connection conn=DriverManager.getConnection(url,user,password);
    String sql="UPDATE m_sql_const SET flag = ?, value2 = ? WHERE id = ?";
    PreparedStatement stmt=conn.prepareStatement(sql);
    stmt.setInt(1,flag);
    stmt.setString(2,value2);
    stmt.setInt(3,id);
    stmt.executeUpdate();
    stmt.close();
    conn.close();
  }
  void validate(  int id,  String sql) throws Exception {
    sql=sql.trim();
    boolean sqlFlag=false;
    String lowerSql=sql.toLowerCase();
    if (lowerSql.startsWith("insert") || lowerSql.startsWith("select") || lowerSql.startsWith("upate")|| lowerSql.startsWith("delete")|| lowerSql.startsWith("create")|| lowerSql.startsWith("drop")) {
      sqlFlag=true;
    }
    if (!sqlFlag) {
      update(id,sql,2);
      return;
    }
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    StringBuilder out=new StringBuilder();
    MySqlOutputVisitor visitor=new MySqlOutputVisitor(out,true);
    statemen.accept(visitor);
    update(id,out.toString(),1);
    System.out.println(sql);
    System.out.println(out.toString());
  }
  void validateOracle(  int id,  String sql) throws Exception {
    sql=sql.trim();
    boolean sqlFlag=false;
    String lowerSql=sql.toLowerCase();
    if (lowerSql.startsWith("insert") || lowerSql.startsWith("select") || lowerSql.startsWith("upate")|| lowerSql.startsWith("delete")|| lowerSql.startsWith("create")|| lowerSql.startsWith("drop")) {
      sqlFlag=true;
    }
    if (!sqlFlag) {
      update(id,sql,2);
      return;
    }
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    StringBuilder out=new StringBuilder();
    OracleParameterizedOutputVisitor visitor=new OracleParameterizedOutputVisitor(out);
    statemen.accept(visitor);
    update(id,out.toString(),1);
    System.out.println(sql);
    System.out.println(out.toString());
  }
}
