public class OracleSelectTest50 extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT * from ( SELECT ID,MATTER,CODE,NAME,ADDRESS,AREA,PROPOSER,PROPOSER_CONTACTOR,PROPOSER_PHONE,REG_TIME,ASSIGN_TIME,DEPART,HANDLER,HANDLER_PHONE,STATUS,FINISH_DATE,FINISH_TYPE,DEPART_CODE,SYSTEM_CODE,rownum num FROM gxpt_items WHERE rownum<=20  order by REG_TIME desc )  WHERE num>0";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(19,visitor.getColumns().size());
    String text=TestUtils.outputOracle(stmt);
    Assert.assertEquals("SELECT *" + "\nFROM (" + "\n\tSELECT ID, MATTER, CODE, NAME, ADDRESS"+ "\n\t\t, AREA, PROPOSER, PROPOSER_CONTACTOR, PROPOSER_PHONE, REG_TIME"+ "\n\t\t, ASSIGN_TIME, DEPART, HANDLER, HANDLER_PHONE, STATUS"+ "\n\t\t, FINISH_DATE, FINISH_TYPE, DEPART_CODE, SYSTEM_CODE, rownum AS num"+ "\n\tFROM gxpt_items"+ "\n\tWHERE rownum <= 20"+ "\n\tORDER BY REG_TIME DESC"+ "\n)"+ "\nWHERE num > 0",text);
  }
}
