public class OracleSelectTest91 extends OracleTest {
  public void test_0() throws Exception {
    String sql="select *\n" + "from hdr a\n" + "inner join sh s\n"+ "inner join ca c\n"+ "on c.id = s.id\n"+ "on a.va = s.va";
    System.out.println(sql);
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLSelectStatement stmt=(SQLSelectStatement)statementList.get(0);
    System.out.println(stmt.toString());
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toOracleString(stmt);
      assertEquals("SELECT *\n" + "FROM hdr a\n" + "INNER JOIN sh s ON a.va = s.va \n"+ "\tINNER JOIN ca c ON c.id = s.id ",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(3,visitor.getTables().size());
    assertEquals(7,visitor.getColumns().size());
    assertEquals(4,visitor.getConditions().size());
    assertEquals(2,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
  }
}
