public class DB2MergeTest extends DB2Test {
  public void test_0() throws Exception {
    String sql="MERGE INTO product AS T " + "      USING sales AS S" + "    ON S.id = T.id"+ "  WHEN MATCHED THEN UPDATE SET inventory = T.inventory - S.sold;";
    DB2StatementParser parser=new DB2StatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    System.out.println(stmt);
    Assert.assertEquals(1,statementList.size());
    DB2SchemaStatVisitor visitor=new DB2SchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertEquals(4,visitor.getColumns().size());
    Assert.assertEquals(2,visitor.getConditions().size());
    Assert.assertTrue(visitor.containsTable("sales"));
    Assert.assertTrue(visitor.containsTable("product"));
    Assert.assertEquals("MERGE INTO product T" + "\nUSING sales S ON (S.id = T.id) " + "\nWHEN MATCHED THEN UPDATE SET inventory = T.inventory - S.sold;",SQLUtils.toSQLString(stmt,JdbcConstants.DB2));
    Assert.assertEquals("merge into product T" + "\nusing sales S on (S.id = T.id) " + "\nwhen matched then update set inventory = T.inventory - S.sold;",SQLUtils.toSQLString(stmt,JdbcConstants.DB2,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
  }
}
