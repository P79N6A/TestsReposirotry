public class MySqlCreateTableTest42 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="CREATE TABLE rc (" + "    a INT NOT NULL, " + "    b INT NOT NULL"+ ")"+ "PARTITION BY RANGE COLUMNS(a,b) ("+ "    PARTITION p0 VALUES LESS THAN (10,5),"+ "    PARTITION p1 VALUES LESS THAN (20,10),"+ "    PARTITION p2 VALUES LESS THAN (MAXVALUE,15),"+ "    PARTITION p3 VALUES LESS THAN (MAXVALUE,MAXVALUE)"+ ");";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("rc")));
    String output=SQLUtils.toMySqlString(stmt);
    Assert.assertEquals("CREATE TABLE rc (\n" + "\ta INT NOT NULL,\n" + "\tb INT NOT NULL\n"+ ")\n"+ "PARTITION BY RANGE COLUMNS (a, b) (\n"+ "\tPARTITION p0 VALUES LESS THAN (10, 5),\n"+ "\tPARTITION p1 VALUES LESS THAN (20, 10),\n"+ "\tPARTITION p2 VALUES LESS THAN (MAXVALUE, 15),\n"+ "\tPARTITION p3 VALUES LESS THAN (MAXVALUE, MAXVALUE)\n"+ ");",output);
  }
}
