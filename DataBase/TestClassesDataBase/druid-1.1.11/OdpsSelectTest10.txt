public class OdpsSelectTest10 extends TestCase {
  public void test_select() throws Exception {
    String sql="select /* + mapjoin(a) */ " + " a.name, b.fals" + " from abc a join abc1 b  on a.name = b.fals;";
    assertEquals("SELECT /*+ mapjoin(a) */ a.name, b.fals\n" + "FROM abc a\n" + "JOIN abc1 b\n"+ "ON a.name = b.fals;",SQLUtils.formatOdps(sql));
    assertEquals("select /*+ mapjoin(a) */ a.name, b.fals\n" + "from abc a\n" + "join abc1 b\n"+ "on a.name = b.fals;",SQLUtils.formatOdps(sql,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
    List<SQLStatement> statementList=SQLUtils.parseStatements(sql,JdbcConstants.ODPS);
    SQLStatement stmt=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    SchemaStatVisitor visitor=SQLUtils.createSchemaStatVisitor(JdbcConstants.ODPS);
    stmt.accept(visitor);
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(2,visitor.getConditions().size());
    Assert.assertTrue(visitor.getColumns().contains(new Column("abc","name")));
  }
}
