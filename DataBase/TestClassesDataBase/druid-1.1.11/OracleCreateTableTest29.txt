public class OracleCreateTableTest29 extends OracleTest {
  public void test_types() throws Exception {
    String sql="CREATE TABLE dept_20" + "   (employee_id     NUMBER(4) PRIMARY KEY, " + "    last_name       VARCHAR2(10), "+ "    job_id          VARCHAR2(9), "+ "    manager_id      NUMBER(4), "+ "    salary          NUMBER(7,2), "+ "    commission_pct  NUMBER(7,2), "+ "    department_id   NUMBER(2),"+ "    CONSTRAINT check_sal CHECK (salary * commission_pct <= 5000));";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    Assert.assertEquals("CREATE TABLE dept_20 (" + "\n\temployee_id NUMBER(4) PRIMARY KEY," + "\n\tlast_name VARCHAR2(10),"+ "\n\tjob_id VARCHAR2(9),"+ "\n\tmanager_id NUMBER(4),"+ "\n\tsalary NUMBER(7, 2),"+ "\n\tcommission_pct NUMBER(7, 2),"+ "\n\tdepartment_id NUMBER(2),"+ "\n\tCONSTRAINT check_sal CHECK (salary * commission_pct <= 5000)"+ "\n);",SQLUtils.toSQLString(stmt,JdbcConstants.ORACLE));
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(7,visitor.getColumns().size());
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("dept_20","employee_id")));
  }
}
