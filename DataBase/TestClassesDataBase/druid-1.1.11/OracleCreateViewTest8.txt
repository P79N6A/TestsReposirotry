public class OracleCreateViewTest8 extends OracleTest {
  public void test_types() throws Exception {
    String sql=" CREATE VIEW emp_sal (emp_id, last_name, \n" + "      email UNIQUE RELY DISABLE NOVALIDATE,\n" + "   CONSTRAINT id_pk PRIMARY KEY (emp_id) RELY DISABLE NOVALIDATE)\n"+ "   AS SELECT employee_id, last_name, email FROM employees;";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    Assert.assertEquals("CREATE VIEW emp_sal (\n" + "\temp_id, \n" + "\tlast_name, \n"+ "\temail UNIQUE, \n"+ "\tCONSTRAINT id_pk PRIMARY KEY (emp_id) RELY DISABLE NOVALIDATE\n"+ ")\n"+ "AS\n"+ "SELECT employee_id, last_name, email\n"+ "FROM employees;",SQLUtils.toSQLString(stmt,JdbcConstants.ORACLE));
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(3,visitor.getColumns().size());
    Assert.assertTrue(visitor.getColumns().contains(new TableStat.Column("employees","last_name")));
  }
}
