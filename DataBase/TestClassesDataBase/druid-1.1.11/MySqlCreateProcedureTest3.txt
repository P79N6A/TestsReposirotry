/** 
 * @Description : procedure begin-end, loop, while use label
 * @author zz email:455910092@qq.com
 * @date 2015-9-14
 * @version V1.0
 */
public class MySqlCreateProcedureTest3 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="create or replace procedure sp_name(level int,age int)" + " begin" + " declare x,y,z int;"+ " lable_1: while x do"+ " insert into test values(id,age);"+ " leave lable_1;"+ " end while lable_1;"+ " end";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    System.out.println(stmt);
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(1,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("test")));
    Assert.assertTrue(visitor.containsColumn("test","id"));
  }
  public void test_1() throws Exception {
    String sql="create or replace procedure sp_name(level int,age int)" + " begin" + " declare x,y,z int;"+ " lable_1: begin"+ " insert into test values(id,age);"+ " leave lable_1;"+ " end lable_1;"+ " end";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    statemen.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(1,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("test")));
    Assert.assertTrue(visitor.containsColumn("test","id"));
  }
  public void test_2() throws Exception {
    String sql="create or replace procedure sp_name(level int,age int)" + " begin" + " declare x,y,z int;"+ " lable_1: loop"+ " insert into test values(id,age);"+ " leave lable_1;"+ " end loop lable_1;"+ " end";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    statemen.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(1,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("test")));
    Assert.assertTrue(visitor.containsColumn("test","id"));
  }
}
