public class MySqlSelectTest_14 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="SELECT * FROM t1 WHERE column1 = (SELECT column1 FROM t2);";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    SQLSelectStatement selectStmt=(SQLSelectStatement)stmt;
    SQLSelect select=selectStmt.getSelect();
    Assert.assertNotNull(select.getQuery());
    MySqlSelectQueryBlock queryBlock=(MySqlSelectQueryBlock)select.getQuery();
    Assert.assertNull(queryBlock.getOrderBy());
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertEquals(3,visitor.getColumns().size());
    Assert.assertEquals(1,visitor.getConditions().size());
    Assert.assertEquals(0,visitor.getOrderByColumns().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("t1")));
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("t2")));
    String output=SQLUtils.toMySqlString(stmt);
    Assert.assertEquals("SELECT *\n" + "FROM t1\n" + "WHERE column1 = (\n"+ "\tSELECT column1\n"+ "\tFROM t2\n"+ ");",output);
    String output_lcase=SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION);
    Assert.assertEquals("select *" + "\nfrom t1" + "\nwhere column1 = ("+ "\n\tselect column1"+ "\n\tfrom t2"+ "\n);",output_lcase);
  }
}
