public class DB2CreateTableTest_05 extends DB2Test {
  public void test_0() throws Exception {
    String sql="CREATE TABLE MK.M_DM_BASE_CHARGE_TMP1\n" + "(PROD_ID BIGINT,\n" + "ITEM_ID SMALLINT,\n"+ "CHARGE BIGINT,\n"+ "PAGES BIGINT,\n"+ "DURATION BIGINT,\n"+ "BILLING_DURATION BIGINT\n"+ ") DATA CAPTURE NONE\n"+ "IN MK_APP_TEMP\n"+ "INDEX IN WH_INDEX1\n"+ "PARTITIONING KEY\n"+ "(PROD_ID\n"+ ") USING HASHING";
    DB2StatementParser parser=new DB2StatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    System.out.println(SQLUtils.toDB2String(stmt));
    assertEquals(1,statementList.size());
    DB2SchemaStatVisitor visitor=new DB2SchemaStatVisitor();
    stmt.accept(visitor);
    assertEquals(1,visitor.getTables().size());
    assertEquals(6,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertTrue(visitor.containsTable("MK.M_DM_BASE_CHARGE_TMP1"));
    assertEquals("CREATE TABLE MK.M_DM_BASE_CHARGE_TMP1 (\n" + "\tPROD_ID BIGINT,\n" + "\tITEM_ID SMALLINT,\n"+ "\tCHARGE BIGINT,\n"+ "\tPAGES BIGINT,\n"+ "\tDURATION BIGINT,\n"+ "\tBILLING_DURATION BIGINT\n"+ ")\n"+ "DATA CAPTURE NONE\n"+ "IN MK_APP_TEMP\n"+ "INDEX IN WH_INDEX1\n"+ "PARTITION BY HASH (PROD_ID)",SQLUtils.toSQLString(stmt,JdbcConstants.DB2));
    assertEquals("create table MK.M_DM_BASE_CHARGE_TMP1 (\n" + "\tPROD_ID BIGINT,\n" + "\tITEM_ID SMALLINT,\n"+ "\tCHARGE BIGINT,\n"+ "\tPAGES BIGINT,\n"+ "\tDURATION BIGINT,\n"+ "\tBILLING_DURATION BIGINT\n"+ ")\n"+ "DATA CAPTURE NONE\n"+ "IN MK_APP_TEMP\n"+ "INDEX IN WH_INDEX1\n"+ "partition by hash (PROD_ID)",SQLUtils.toSQLString(stmt,JdbcConstants.DB2,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
  }
}
