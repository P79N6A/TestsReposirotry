public class MySqlSelectTest_29 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="select * from Function " + "where Id in (select FunctionId from RoleFunction " + "where RoleId = '001' and LogicalDel = 0) and LogicalDel = 0";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    System.out.println(stmt);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertEquals(6,visitor.getColumns().size());
    Assert.assertEquals(4,visitor.getConditions().size());
    Assert.assertEquals(0,visitor.getOrderByColumns().size());
{
      String output=SQLUtils.toMySqlString(stmt);
      assertEquals("SELECT *\n" + "FROM Function\n" + "WHERE Id IN (\n"+ "\t\tSELECT FunctionId\n"+ "\t\tFROM RoleFunction\n"+ "\t\tWHERE RoleId = '001'\n"+ "\t\t\tAND LogicalDel = 0\n"+ "\t)\n"+ "\tAND LogicalDel = 0",output);
    }
{
      String output=SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION);
      assertEquals("select *\n" + "from Function\n" + "where Id in (\n"+ "\t\tselect FunctionId\n"+ "\t\tfrom RoleFunction\n"+ "\t\twhere RoleId = '001'\n"+ "\t\t\tand LogicalDel = 0\n"+ "\t)\n"+ "\tand LogicalDel = 0",output);
    }
  }
}
