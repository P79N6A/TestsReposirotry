public class CALL_Test extends TestCase {
  public void test_0() throws Exception {
    String sql="CALL p(@version, @increment);";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("CALL p(@version, @increment);",text);
  }
  public void test_1() throws Exception {
    String sql="PREPARE s FROM 'CALL p(?, ?)';";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("PREPARE s FROM 'CALL p(?, ?)';",text);
  }
  public void test_2() throws Exception {
    String sql="EXECUTE s USING @version, @increment;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    SQLStatement stmt=stmtList.get(0);
    assertEquals("EXECUTE s USING @version, @increment;",SQLUtils.toMySqlString(stmt));
    assertEquals("execute s using @version, @increment;",SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
  }
  public void test_3() throws Exception {
    String sql="EXECUTE s";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    SQLStatement stmt=stmtList.get(0);
    assertEquals("EXECUTE s",SQLUtils.toMySqlString(stmt));
    assertEquals("execute s",SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
  }
  private String output(  List<SQLStatement> stmtList){
    return SQLUtils.toSQLString(stmtList,JdbcConstants.MYSQL);
  }
}
