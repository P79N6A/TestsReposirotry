public class CallableStatmentTest extends PoolTestCase {
  private DruidDataSource dataSource;
  protected void setUp() throws Exception {
    super.setUp();
    dataSource=new DruidDataSource();
    dataSource.setUrl("jdbc:mock:xxx");
    dataSource.setTestOnBorrow(false);
    dataSource.setPoolPreparedStatements(true);
    dataSource.setMaxOpenPreparedStatements(100);
    dataSource.setFilters("log4j");
    dataSource.setDriver(new MockDriver(){
      public MockCallableStatement createMockCallableStatement(      MockConnection conn,      String sql){
        return new MyMockCallableStatement(conn,sql);
      }
    }
);
  }
  protected void tearDown() throws Exception {
    dataSource.close();
    super.tearDown();
  }
  public void test_connect() throws Exception {
    MockCallableStatement rawStmt=null;
    MockResultSet rawRs=null;
{
      Connection conn=dataSource.getConnection();
      CallableStatement stmt=conn.prepareCall("select 1");
      stmt.execute();
      rawStmt=stmt.unwrap(MockCallableStatement.class);
      ResultSet rs=(ResultSet)stmt.getObject(0);
      rawRs=rs.unwrap(MockResultSet.class);
      rs.next();
      rs.close();
      stmt.close();
      Assert.assertFalse(rawStmt.isClosed());
      Assert.assertTrue(rawRs.isClosed());
      rawRs=rs.unwrap(MockResultSet.class);
      Assert.assertNotNull(rawRs);
      conn.close();
    }
{
      Connection conn=dataSource.getConnection();
      CallableStatement stmt=conn.prepareCall("select 1");
      stmt.execute();
      Assert.assertSame(rawStmt,stmt.unwrap(MockCallableStatement.class));
      Assert.assertFalse(rawStmt.isClosed());
      stmt.getObject(0);
      ResultSet rs=(ResultSet)stmt.getObject(0);
      rs.next();
      rs.close();
      stmt.close();
      conn.close();
    }
  }
public static class MyMockCallableStatement extends MockCallableStatement {
    public MyMockCallableStatement(    MockConnection conn,    String sql){
      super(conn,sql);
    }
    public Object getObject(    int index) throws SQLException {
      return this.getConnection().getDriver().createResultSet(this);
    }
  }
}
