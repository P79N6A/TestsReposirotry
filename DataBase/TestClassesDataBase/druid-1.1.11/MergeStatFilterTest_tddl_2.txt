public class MergeStatFilterTest_tddl_2 extends TestCase {
  private DruidDataSource dataSource;
  protected void setUp() throws Exception {
    TabularData sqlList=JdbcStatManager.getInstance().getSqlList();
    if (sqlList.size() > 0) {
      for (      Object item : JdbcStatManager.getInstance().getSqlList().values()) {
        String text=JSONUtils.toJSONString(item);
        System.out.println(text);
      }
    }
    Assert.assertEquals(0,JdbcStatManager.getInstance().getSqlList().size());
    dataSource=new DruidDataSource();
    dataSource.setUrl("jdbc:mock:xx");
    dataSource.setFilters("mergeStat");
    dataSource.setDbType("mysql");
  }
  protected void tearDown() throws Exception {
    JdbcUtils.close(dataSource);
    Assert.assertEquals(0,JdbcStatManager.getInstance().getSqlList().size());
  }
  public void test_merge() throws Exception {
    for (int i=1000; i < 2000; ++i) {
      String tableName="t" + i;
      String sql="insert into " + tableName + " (fid, fname) values (?, ?)";
      Connection conn=dataSource.getConnection();
      Statement stmt=conn.createStatement();
      stmt.execute(sql);
      stmt.close();
      conn.close();
    }
    Assert.assertEquals(1,dataSource.getDataSourceStat().getSqlStatMap().size());
  }
}
