public class FilterChainTest_NClob extends TestCase {
  private DruidDataSource dataSource;
  private StatementProxy statement;
  private MockResultSet mockResultSet;
  private int invokeCount=0;
  protected void setUp() throws Exception {
    dataSource=new DruidDataSource();
    ConnectionProxyImpl conn=new ConnectionProxyImpl(dataSource,null,new Properties(),0);
    statement=new StatementProxyImpl(conn,null,1);
    mockResultSet=new MockResultSet(null){
      public Object getObject(      int columnIndex) throws SQLException {
        invokeCount++;
        return new MockNClob();
      }
    }
;
  }
  protected void tearDown() throws Exception {
    JdbcUtils.close(dataSource);
    invokeCount=0;
  }
  public void test_resultSet_getClob() throws Exception {
    FilterChainImpl chain=new FilterChainImpl(dataSource);
    Clob clob=chain.resultSet_getClob(new ResultSetProxyImpl(statement,mockResultSet,1,null),1);
    Assert.assertTrue(clob instanceof NClobProxy);
    Assert.assertEquals(1,invokeCount);
  }
  public void test_resultSet_getClob_1() throws Exception {
    FilterChainImpl chain=new FilterChainImpl(dataSource);
    Clob clob=chain.resultSet_getClob(new ResultSetProxyImpl(statement,mockResultSet,1,null),"1");
    Assert.assertTrue(clob instanceof NClobProxy);
    Assert.assertEquals(1,invokeCount);
  }
  public void test_resultSet_getObject() throws Exception {
    FilterChainImpl chain=new FilterChainImpl(dataSource);
    Clob clob=(Clob)chain.resultSet_getObject(new ResultSetProxyImpl(statement,mockResultSet,1,null),1);
    Assert.assertTrue(clob instanceof NClobProxy);
    Assert.assertEquals(1,invokeCount);
  }
  public void test_resultSet_getObject_1() throws Exception {
    FilterChainImpl chain=new FilterChainImpl(dataSource);
    Clob clob=(Clob)chain.resultSet_getObject(new ResultSetProxyImpl(statement,mockResultSet,1,null),"1");
    Assert.assertTrue(clob instanceof NClobProxy);
    Assert.assertEquals(1,invokeCount);
  }
  public void test_resultSet_getObject_2() throws Exception {
    FilterChainImpl chain=new FilterChainImpl(dataSource);
    Clob clob=(Clob)chain.resultSet_getObject(new ResultSetProxyImpl(statement,mockResultSet,1,null),1,Collections.<String,Class<?>>emptyMap());
    Assert.assertTrue(clob instanceof NClobProxy);
    Assert.assertEquals(1,invokeCount);
  }
  public void test_resultSet_getObject_3() throws Exception {
    FilterChainImpl chain=new FilterChainImpl(dataSource);
    Clob clob=(Clob)chain.resultSet_getObject(new ResultSetProxyImpl(statement,mockResultSet,1,null),"1",Collections.<String,Class<?>>emptyMap());
    Assert.assertTrue(clob instanceof NClobProxy);
    Assert.assertEquals(1,invokeCount);
  }
}
