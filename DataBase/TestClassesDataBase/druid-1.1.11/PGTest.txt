public class PGTest extends TestCase {
  protected String output(  List<SQLStatement> stmtList){
    StringBuilder out=new StringBuilder();
    PGOutputVisitor visitor=new PGOutputVisitor(out);
    for (    SQLStatement stmt : stmtList) {
      stmt.accept(visitor);
    }
    return out.toString();
  }
  protected void print(  List<SQLStatement> stmtList){
    String text=output(stmtList);
    String outputProperty=System.getProperty("druid.output");
    if ("false".equals(outputProperty)) {
      return;
    }
    System.out.println(text);
  }
  protected void testParseSql(  String sql,  String expectedSql,  String expectedPattern,  Class<?> type){
    PGSQLStatementParser parser=new PGSQLStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statement=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    Assert.assertTrue(type.isAssignableFrom(statement.getClass()));
    StringBuilder sb=new StringBuilder();
    PGOutputVisitor visitor=new PGOutputVisitor(sb);
    statement.accept(visitor);
    Assert.assertEquals(expectedSql,sb.toString());
  }
}
