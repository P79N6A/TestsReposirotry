public class OracleSelectTest99 extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT last_name, hire_date, salary, SUM(salary) \n" + "   OVER (ORDER BY hire_date \n" + "   RANGE NUMTOYMINTERVAL(1,'year') PRECEDING) AS t_sal \n"+ "   FROM employees;";
    System.out.println(sql);
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLSelectStatement stmt=(SQLSelectStatement)statementList.get(0);
    System.out.println(stmt.toString());
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toOracleString(stmt);
      assertEquals("SELECT last_name, hire_date, salary, SUM(salary) OVER (ORDER BY hire_date RANGE NUMTOYMINTERVAL(1, 'year') PRECEDING) AS t_sal\n" + "FROM employees;",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(3,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(1,visitor.getOrderByColumns().size());
  }
}
