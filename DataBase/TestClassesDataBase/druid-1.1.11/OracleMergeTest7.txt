public class OracleMergeTest7 extends OracleTest {
  public void test_0() throws Exception {
    String sql="MERGE INTO copy_emp c " + "USING employees e " + "ON (c.employee_id=e.employee_id) "+ "WHEN MATCHED THEN "+ "UPDATE SET "+ "c.first_name=e.first_name, "+ "c.last_name=e.last_name, "+ "c.department_id=e.department_id "+ "WHEN NOT MATCHED THEN "+ "INSERT VALUES(e.employee_id,e.first_name,e.last_name,"+ "e.email,e.phone_number,e.hire_date,e.job_id, "+ "e.salary,e.commission_pct,e.manager_id,e.department_id)";
    SQLStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    SQLMergeStatement mergeStatement=(SQLMergeStatement)stmtList.get(0);
    String result=SQLUtils.toOracleString(mergeStatement);
    Assert.assertEquals("MERGE INTO copy_emp c" + "\nUSING employees e ON (c.employee_id = e.employee_id) " + "\nWHEN MATCHED THEN UPDATE SET c.first_name = e.first_name, c.last_name = e.last_name, c.department_id = e.department_id"+ "\nWHEN NOT MATCHED THEN INSERT VALUES (e.employee_id, e.first_name, e.last_name, e.email, e.phone_number, e.hire_date, e.job_id, e.salary, e.commission_pct, e.manager_id, e.department_id)",result);
  }
}
