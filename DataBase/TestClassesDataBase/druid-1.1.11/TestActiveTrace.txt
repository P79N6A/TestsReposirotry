public class TestActiveTrace extends TestCase {
  private DruidDataSource dataSource;
  protected void setUp() throws Exception {
    DruidDataSourceStatManager.clear();
    dataSource=new DruidDataSource();
    dataSource.setRemoveAbandoned(true);
    dataSource.setRemoveAbandonedTimeoutMillis(100);
    dataSource.setLogAbandoned(true);
    dataSource.setTimeBetweenEvictionRunsMillis(10);
    dataSource.setMinEvictableIdleTimeMillis(300 * 1000);
    dataSource.setUrl("jdbc:mock:xxx");
  }
  protected void tearDown() throws Exception {
    dataSource.close();
    Assert.assertEquals(0,DruidDataSourceStatManager.getInstance().getDataSourceList().size());
  }
  public void test_activeTrace() throws Exception {
    for (int i=0; i < 1000 * 10; ++i) {
      dataSource.shrink();
      Connection conn=dataSource.getConnection();
      conn.close();
      dataSource.shrink();
      Assert.assertEquals("createCount : " + dataSource.getCreateCount(),0,dataSource.getPoolingCount());
      Assert.assertEquals(0,dataSource.getActiveConnections().size());
    }
  }
}
