public class OracleSelectTest104 extends OracleTest {
  public void test_0() throws Exception {
    String sql="SELECT\n" + "  /* DS_SVC */\n" + "  /*+ cursor_sharing_exact dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) */\n"+ "  SUM(C1)\n"+ "FROM\n"+ "  (SELECT\n"+ "    /*+ qb_name(\"innerQuery\")  */\n"+ "    1 AS C1\n"+ "  FROM SYS.\"X$KZSPR\" \"X$KZSPR\"\n"+ "  WHERE (\"X$KZSPR\".\"INST_ID\"  =USERENV('INSTANCE'))\n"+ "  AND ((-\"X$KZSPR\".\"KZSPRPRV\")=(-45)\n"+ "  OR (  -\"X$KZSPR\".\"KZSPRPRV\")=(-47)\n"+ "  OR (  -\"X$KZSPR\".\"KZSPRPRV\")=(-48)\n"+ "  OR (  -\"X$KZSPR\".\"KZSPRPRV\")=(-49)\n"+ "  OR (  -\"X$KZSPR\".\"KZSPRPRV\")=(-50))\n"+ "  ) innerQuery";
    System.out.println(sql);
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLSelectStatement stmt=(SQLSelectStatement)statementList.get(0);
    System.out.println(stmt.toString());
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toOracleString(stmt);
      assertEquals("SELECT /* DS_SVC */ /*+ cursor_sharing_exact dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) */ SUM(C1)\n" + "FROM (\n" + "\tSELECT /*+ qb_name(\"innerQuery\")  */ 1 AS C1\n"+ "\tFROM SYS.\"X$KZSPR\" \"X$KZSPR\"\n"+ "\tWHERE \"X$KZSPR\".\"INST_ID\" = USERENV('INSTANCE')\n"+ "\t\tAND (-\"X$KZSPR\".\"KZSPRPRV\" = -45\n"+ "\t\t\tOR -\"X$KZSPR\".\"KZSPRPRV\" = -47\n"+ "\t\t\tOR -\"X$KZSPR\".\"KZSPRPRV\" = -48\n"+ "\t\t\tOR -\"X$KZSPR\".\"KZSPRPRV\" = -49\n"+ "\t\t\tOR -\"X$KZSPR\".\"KZSPRPRV\" = -50)\n"+ ") innerQuery",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(2,visitor.getColumns().size());
    assertEquals(1,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
  }
}
