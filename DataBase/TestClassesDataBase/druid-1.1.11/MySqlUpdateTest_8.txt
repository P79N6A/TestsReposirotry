public class MySqlUpdateTest_8 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="update haskell_function set `arity` = arity-'1' where id = 1;";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(1,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("haskell_function")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("haskell_function","arity")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("haskell_function","id")));
{
      String output=SQLUtils.toMySqlString(stmt);
      Assert.assertEquals("UPDATE haskell_function" + "\nSET `arity` = arity - '1'" + "\nWHERE id = 1;",output);
    }
{
      String output=SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION);
      Assert.assertEquals("update haskell_function" + "\nset `arity` = arity - '1'" + "\nwhere id = 1;",output);
    }
  }
}
