public class MySqlDeleteTest_1 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="DELETE FROM a1, a2 USING t1 AS a1 INNER JOIN t2 AS a2 WHERE a1.id=a2.id;";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    Assert.assertEquals("DELETE FROM a1, a2\n" + "USING t1 a1\n" + "\tINNER JOIN t2 a2\n"+ "WHERE a1.id = a2.id;",SQLUtils.toMySqlString(stmt));
    Assert.assertEquals("delete from a1, a2\n" + "using t1 a1\n" + "\tinner join t2 a2\n"+ "where a1.id = a2.id;",SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
    Assert.assertEquals(1,statementList.size());
    System.out.println(stmt.toString());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(2,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("t1")));
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("t2")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("t1","id")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("t2","id")));
  }
}
