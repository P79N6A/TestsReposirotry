public class OracleBlockTest15 extends OracleTest {
  public void test_0() throws Exception {
    String sql="DECLARE\n" + "   sales  NUMBER(8,2) := 10100;\n" + "   quota  NUMBER(8,2) := 10000;\n"+ "   bonus  NUMBER(6,2);\n"+ "   emp_id NUMBER(6) := 120;\n"+ " BEGIN\n"+ "   IF sales > (quota + 200) THEN\n"+ "      bonus := (sales - quota)/4;\n"+ " \n"+ "      UPDATE employees SET salary =\n"+ "        salary + bonus\n"+ "          WHERE employee_id = emp_id;\n"+ "   END IF;\n"+ " END;";
    List<SQLStatement> stmtList=SQLUtils.parseStatements(sql,JdbcConstants.ORACLE);
    assertEquals(1,stmtList.size());
    String result=SQLUtils.toOracleString(stmtList.get(0));
    System.out.println(result);
    assertEquals("DECLARE\n" + "\tsales NUMBER(8, 2) := 10100;\n" + "\tquota NUMBER(8, 2) := 10000;\n"+ "\tbonus NUMBER(6, 2);\n"+ "\temp_id NUMBER(6) := 120;\n"+ "BEGIN\n"+ "\tIF sales > quota + 200 THEN\n"+ "\t\tbonus := (sales - quota) / 4;\n"+ "\t\tUPDATE employees\n"+ "\t\tSET salary = salary + bonus\n"+ "\t\tWHERE employee_id = emp_id;\n"+ "\tEND IF;\n"+ "END;",result);
    Assert.assertEquals(1,stmtList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    for (    SQLStatement statement : stmtList) {
      statement.accept(visitor);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("employees")));
    Assert.assertEquals(2,visitor.getColumns().size());
    Assert.assertEquals(1,visitor.getConditions().size());
    Assert.assertEquals(0,visitor.getRelationships().size());
  }
}
