public class OracleMergeTest9 extends OracleTest {
  public void test_0() throws Exception {
    String sql="MERGE INTO tb_xxx_test t1\n" + "USING (SELECT '1' AS aa_item_id, '2' AS mem_test_id FROM dual) t2\n" + "ON (t1.aa_item_id = t2.aa_item_id AND t1.mem_test_id = t2.mem_test_id)\n"+ "WHEN NOT MATCHED THEN\n"+ "INSERT (aa_id, aa_item_id, gg_id, test_id)\n"+ "VALUES\n"+ "(?,\n"+ "?,\n"+ "?,\n"+ "?)";
    SQLStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    SQLMergeStatement mergeStatement=(SQLMergeStatement)stmtList.get(0);
    String result=SQLUtils.toOracleString(mergeStatement);
    Assert.assertEquals("MERGE INTO tb_xxx_test t1\n" + "USING (\n" + "\tSELECT '1' AS aa_item_id, '2' AS mem_test_id\n"+ "\tFROM dual\n"+ ") t2 ON (t1.aa_item_id = t2.aa_item_id\n"+ "AND t1.mem_test_id = t2.mem_test_id) \n"+ "WHEN NOT MATCHED THEN INSERT (aa_id, aa_item_id, gg_id, test_id) VALUES (?, ?, ?, ?)",result);
  }
}
