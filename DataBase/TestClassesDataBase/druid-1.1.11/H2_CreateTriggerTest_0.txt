public class H2_CreateTriggerTest_0 extends OracleTest {
  public void test_0() throws Exception {
    String sql="create trigger employee_trigger after insert,update,delete on employee for each row call \"test.redisson.h2cluster.trigger.ClusterTrigger\"\n";
    List<SQLStatement> statementList=SQLUtils.toStatementList(sql,JdbcConstants.H2);
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toSQLString(stmt,JdbcConstants.H2);
      assertEquals("CREATE TRIGGER employee_trigger\n" + "\tAFTER INSERT OR DELETE OR UPDATE\n" + "\tON employee\n"+ "\tFOR EACH ROW\n"+ "CALL \"test.redisson.h2cluster.trigger.ClusterTrigger\"()",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(0,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
    Assert.assertTrue(visitor.containsTable("employee"));
  }
}
