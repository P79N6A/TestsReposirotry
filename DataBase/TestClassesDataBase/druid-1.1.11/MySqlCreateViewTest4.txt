public class MySqlCreateViewTest4 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="create or replace definer = 'ivan'@'%' view my_view3 as select count(*) from t3;";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLCreateViewStatement stmt=(SQLCreateViewStatement)statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    assertEquals("CREATE OR REPLACE DEFINER = 'ivan'@'%'\n" + "\tVIEW my_view3\n" + "AS\n"+ "SELECT COUNT(*)\n"+ "FROM t3;",SQLUtils.toMySqlString(stmt));
    Assert.assertEquals("create or replace definer = 'ivan'@'%'\n" + "\tview my_view3\n" + "as\n"+ "select count(*)\n"+ "from t3;",SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
    System.out.println("fields : " + visitor.getColumns());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(1,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("t3")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("t3","*")));
  }
}
