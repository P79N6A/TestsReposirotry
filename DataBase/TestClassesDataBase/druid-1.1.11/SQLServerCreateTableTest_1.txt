public class SQLServerCreateTableTest_1 extends TestCase {
  public void test_0() throws Exception {
    String sql="CREATE TABLE [projects] (" + "[id] int NOT NULL IDENTITY(1, 1) PRIMARY KEY, " + "[name] NVARCHAR(256), [description] NVARCHAR(2000), "+ "[enabled] bit DEFAULT 1 NOT NULL, "+ "[scope] NVARCHAR(3), "+ "[qualifier] NVARCHAR(3), "+ "[kee] NVARCHAR(400), "+ "[root_id] int, "+ "[profile_id] int, "+ "[language] NVARCHAR(5), "+ "[copy_resource_id] int, "+ "[long_name] NVARCHAR(256)) ";
    SQLServerStatementParser parser=new SQLServerStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLCreateTableStatement stmt=(SQLCreateTableStatement)statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    SQLServerSchemaStatVisitor visitor=new SQLServerSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(12,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("projects")));
    Assert.assertTrue(visitor.containsColumn("projects","id"));
    Assert.assertTrue(visitor.containsColumn("projects","name"));
    Assert.assertTrue(visitor.containsColumn("projects","enabled"));
    Assert.assertTrue(visitor.containsColumn("projects","scope"));
  }
}
