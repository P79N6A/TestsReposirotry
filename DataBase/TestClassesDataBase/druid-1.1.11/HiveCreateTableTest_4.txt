public class HiveCreateTableTest_4 extends OracleTest {
  public void test_0() throws Exception {
    String sql="CREATE TABLE merge_data.transactions(\n" + "\tID int,\n" + "\tTranValue string,\n"+ "\tlast_update_user string)\n"+ "PARTITIONED BY (tran_date string)\n"+ "CLUSTERED BY (ID) into 5 buckets \n"+ "STORED AS ORC TBLPROPERTIES ('transactional'='true');\n";
    List<SQLStatement> statementList=SQLUtils.toStatementList(sql,JdbcConstants.HIVE);
    SQLStatement stmt=statementList.get(0);
    System.out.println(stmt.toString());
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toSQLString(stmt,JdbcConstants.HIVE);
      assertEquals("CREATE TABLE merge_data.transactions (\n" + "\tID int,\n" + "\tTranValue string,\n"+ "\tlast_update_user string\n"+ ")\n"+ "PARTITIONED BY (\n"+ "\ttran_date string\n"+ ")\n"+ "CLUSTERED BY (ID)\n"+ "INTO 5 BUCKETS\n"+ "STORE AS ORC\n"+ "TBLPROPERTIES (transactional = 'true');",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(3,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
    Assert.assertTrue(visitor.containsTable("merge_data.transactions"));
  }
}
