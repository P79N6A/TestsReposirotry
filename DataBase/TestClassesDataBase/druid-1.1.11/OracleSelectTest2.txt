public class OracleSelectTest2 extends OracleTest {
  public void test_0() throws Exception {
    String sql="WITH " + "   dept_costs AS (" + "      SELECT d.department_name, SUM(d.salary) dept_total"+ "         FROM employees e, departments d"+ "         WHERE e.department_id = d.department_id"+ "      GROUP BY d.department_name),"+ "   avg_cost AS ("+ "      SELECT SUM(dept_total)/COUNT(*) avg"+ "      FROM dept_costs)"+ "SELECT * FROM dept_costs"+ "   WHERE dept_total >"+ "      (SELECT avg FROM avg_cost)"+ "      ORDER BY department_name;";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    String result=SQLUtils.toOracleString(stmt);
    String result_lcase=SQLUtils.toOracleString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION);
    Assert.assertEquals(result.toLowerCase(),result_lcase);
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    Assert.assertEquals(2,visitor.getTables().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("employees")));
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("departments")));
    Assert.assertEquals(4,visitor.getColumns().size());
  }
}
