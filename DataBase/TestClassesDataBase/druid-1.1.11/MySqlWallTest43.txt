/** 
 * SQLServerWallTest
 * @author RaymondXiu
 * @version 1.0, 2012-3-18
 * @see
 */
public class MySqlWallTest43 extends TestCase {
  public void test_false() throws Exception {
    WallProvider provider=new MySqlWallProvider();
    Assert.assertFalse(provider.checkValid("SELECT COUNT(1) AS count FROM `team` " + "WHERE `team_type` = 'normal' AND 1 = 1 AND `city_id` IN (0,10)"));
    Assert.assertEquals(1,provider.getTableStats().size());
  }
  public void test_true() throws Exception {
    WallProvider provider=new MySqlWallProvider();
    provider.getConfig().setConditionAndAlwayTrueAllow(true);
    Assert.assertTrue(provider.checkValid("SELECT COUNT(1) AS count FROM `team` " + "WHERE `team_type` = 'normal' AND 1 = 1 AND `city_id` IN (0,10)"));
    Assert.assertEquals(1,provider.getTableStats().size());
  }
  public void test_false2() throws Exception {
    WallProvider provider=new MySqlWallProvider();
    Assert.assertFalse(provider.checkValid("SELECT COUNT(1) AS count FROM `team` " + "WHERE `team_type` = 'normal' AND 1 = 2 AND `city_id` IN (0,10)"));
    Assert.assertEquals(1,provider.getTableStats().size());
  }
  public void test_true2() throws Exception {
    WallProvider provider=new MySqlWallProvider();
    provider.getConfig().setConditionAndAlwayFalseAllow(true);
    Assert.assertTrue(provider.checkValid("SELECT COUNT(1) AS count FROM `team` " + "WHERE `team_type` = 'normal' AND 1 = 2 AND `city_id` IN (0,10)"));
    Assert.assertEquals(1,provider.getTableStats().size());
  }
}
