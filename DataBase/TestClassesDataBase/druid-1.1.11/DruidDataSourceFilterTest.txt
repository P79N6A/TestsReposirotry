public class DruidDataSourceFilterTest extends TestCase {
  protected void setUp() throws Exception {
    DruidDataSourceStatManager.clear();
  }
  protected void tearDown() throws Exception {
    Assert.assertEquals(0,DruidDataSourceStatManager.getInstance().getDataSourceList().size());
  }
  public void test_filter() throws Exception {
    System.out.println(System.nanoTime() / (1000 * 1000));
    DruidDataSource dataSource=new DruidDataSource();
    Assert.assertEquals(0,dataSource.getProxyFilters().size());
    dataSource.setFilters("stat");
    Assert.assertEquals(1,dataSource.getProxyFilters().size());
    dataSource.close();
  }
  public void test_filter_3() throws Exception {
    DruidDataSource dataSource=new DruidDataSource();
    dataSource.setUrl("jdbc:mock:");
    Assert.assertEquals(0,dataSource.getProxyFilters().size());
    dataSource.setFilters("stat");
    JdbcStatManager.getInstance().reset();
    dataSource.init();
    JdbcDataSourceStat dataSourceStat=dataSource.getDataSourceStat();
    Assert.assertEquals(0,dataSourceStat.getConnectionStat().getConnectCount());
    Assert.assertEquals(1,dataSource.getProxyFilters().size());
    for (int i=0; i < 2; ++i) {
      Connection conn=dataSource.getConnection();
      Assert.assertEquals(1,dataSourceStat.getConnectionStat().getConnectCount());
      Assert.assertEquals(0,dataSourceStat.getConnectionStat().getCloseCount());
      conn.close();
      Assert.assertEquals(1,dataSourceStat.getConnectionStat().getConnectCount());
      Assert.assertEquals(0,dataSourceStat.getConnectionStat().getCloseCount());
    }
    Assert.assertEquals(1,DruidDataSourceStatManager.getInstance().getDataSourceList().size());
    dataSource.close();
    Assert.assertEquals(1,dataSourceStat.getConnectionStat().getConnectCount());
    Assert.assertEquals(1,dataSourceStat.getConnectionStat().getCloseCount());
  }
}
