public class StatFilterOpenReaderCountTest extends TestCase {
  private DruidDataSource dataSource;
  protected void setUp() throws Exception {
    dataSource=new DruidDataSource();
    dataSource.setUrl("jdbc:mock:xxx");
    dataSource.setFilters("stat");
    dataSource.setTestOnBorrow(false);
    dataSource.getProxyFilters().add(new FilterAdapter(){
      @Override public java.io.Reader resultSet_getCharacterStream(      FilterChain chain,      ResultSetProxy result,      int columnIndex) throws SQLException {
        return new StringReader("");
      }
      @Override public java.io.Reader resultSet_getCharacterStream(      FilterChain chain,      ResultSetProxy result,      String columnLabel) throws SQLException {
        return new StringReader("");
      }
    }
);
    dataSource.init();
  }
  protected void tearDown() throws Exception {
    JdbcUtils.close(dataSource);
  }
  public void test_stat() throws Exception {
    Connection conn=dataSource.getConnection();
    String sql="select 'x'";
    PreparedStatement stmt=conn.prepareStatement("select 'x'");
    JdbcSqlStat sqlStat=dataSource.getDataSourceStat().getSqlStat(sql);
    Assert.assertEquals(0,sqlStat.getReaderOpenCount());
    ResultSet rs=stmt.executeQuery();
    rs.next();
    rs.getCharacterStream(1);
    rs.getCharacterStream(2);
    rs.close();
    stmt.close();
    conn.close();
    Assert.assertEquals(2,sqlStat.getReaderOpenCount());
    sqlStat.reset();
    Assert.assertEquals(0,sqlStat.getReaderOpenCount());
  }
  public void test_stat_1() throws Exception {
    Connection conn=dataSource.getConnection();
    String sql="select 'x'";
    PreparedStatement stmt=conn.prepareStatement("select 'x'");
    JdbcSqlStat sqlStat=dataSource.getDataSourceStat().getSqlStat(sql);
    Assert.assertEquals(0,sqlStat.getReaderOpenCount());
    ResultSet rs=stmt.executeQuery();
    rs.next();
    rs.getCharacterStream("1");
    rs.getCharacterStream("2");
    rs.getCharacterStream("3");
    rs.close();
    stmt.close();
    conn.close();
    Assert.assertEquals(3,sqlStat.getReaderOpenCount());
    sqlStat.reset();
    Assert.assertEquals(0,sqlStat.getReaderOpenCount());
  }
}
