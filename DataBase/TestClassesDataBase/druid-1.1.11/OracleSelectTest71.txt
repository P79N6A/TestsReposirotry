public class OracleSelectTest71 extends OracleTest {
  public void test_0() throws Exception {
    String sql="select * from (\n" + "  select a.*,rownum rn from (SELECT\n" + "  A.ID,A.SIM_NO,A.ICCID,A.IMSI,A.IMEI,A.OPERATOR,\n"+ "  A.CHARGES_PLAN_ID,A.USED_TRAFFIC,\n"+ "  A.STATUS,A.MEMO,A.TYPE,A.TER_ID,B.ID DEVICE_ID,C.TER_CODE,\n"+ "  D.ID VECL_ID,D.VIN VECL_VIN,D.LPN VECL_LPN,D.LPC VECL_LPC,E.APP_KEY\n"+ "  FROM\n"+ "  BAS_SIM A LEFT JOIN BAS_DEVICE B ON A.TER_ID=B.TER_ID\n"+ "  LEFT JOIN BAS_TERMINAL C ON A.TER_ID=C.ID\n"+ "  LEFT JOIN BAS_VEHICLE D ON B.VECL_ID=D.ID\n"+ "  LEFT JOIN BAS_APPLICATION E ON A.APP_ID=E.ID\n"+ "   WHERE 1=1\n"+ "   \n"+ "   \n"+ "    AND A.SIM_NO LIKE '%'||?||'%' \n"+ "  order by A.SIM_NO ASC ) a\n"+ "\n"+ "  ) where rn > ?*(?-1) and rn <= ?*?";
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    print(statementList);
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(5,visitor.getTables().size());
    assertEquals(24,visitor.getColumns().size());
{
      String text=SQLUtils.toOracleString(stmt);
      assertEquals("SELECT *\n" + "FROM (\n" + "\tSELECT a.*, rownum AS rn\n"+ "\tFROM (\n"+ "\t\tSELECT A.ID, A.SIM_NO, A.ICCID, A.IMSI, A.IMEI\n"+ "\t\t\t, A.OPERATOR, A.CHARGES_PLAN_ID, A.USED_TRAFFIC, A.STATUS, A.MEMO\n"+ "\t\t\t, A.TYPE, A.TER_ID, B.ID AS DEVICE_ID, C.TER_CODE, D.ID AS VECL_ID\n"+ "\t\t\t, D.VIN AS VECL_VIN, D.LPN AS VECL_LPN, D.LPC AS VECL_LPC, E.APP_KEY\n"+ "\t\tFROM BAS_SIM A\n"+ "\t\tLEFT JOIN BAS_DEVICE B ON A.TER_ID = B.TER_ID \n"+ "\t\tLEFT JOIN BAS_TERMINAL C ON A.TER_ID = C.ID \n"+ "\t\tLEFT JOIN BAS_VEHICLE D ON B.VECL_ID = D.ID \n"+ "\t\t\tLEFT JOIN BAS_APPLICATION E ON A.APP_ID = E.ID \n"+ "\t\tWHERE 1 = 1\n"+ "\t\t\tAND A.SIM_NO LIKE ('%' || ? || '%')\n"+ "\t\tORDER BY A.SIM_NO ASC\n"+ "\t) a\n"+ ")\n"+ "WHERE rn > ? * (? - 1)\n"+ "\tAND rn <= ? * ?",text);
    }
  }
}
