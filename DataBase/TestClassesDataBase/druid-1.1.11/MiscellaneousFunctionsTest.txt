public class MiscellaneousFunctionsTest extends TestCase {
  public void test_0() throws Exception {
    String sql="UPDATE t SET i = DEFAULT(i)+1 WHERE id < 100;";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("UPDATE t\nSET i = DEFAULT(i) + 1\nWHERE id < 100;",text);
  }
  public void test_1() throws Exception {
    String sql="SELECT GET_LOCK('lock1',10);";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT GET_LOCK('lock1', 10);",text);
  }
  public void test_2() throws Exception {
    String sql="SELECT INET_ATON('209.207.224.40');";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT INET_ATON('209.207.224.40');",text);
  }
  public void test_3() throws Exception {
    String sql="SELECT UUID();";
    SQLStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> stmtList=parser.parseStatementList();
    String text=output(stmtList);
    Assert.assertEquals("SELECT UUID();",text);
  }
  private String output(  List<SQLStatement> stmtList){
    return SQLUtils.toSQLString(stmtList,JdbcConstants.MYSQL);
  }
}
