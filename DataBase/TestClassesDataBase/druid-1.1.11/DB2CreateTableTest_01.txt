public class DB2CreateTableTest_01 extends DB2Test {
  public void test_0() throws Exception {
    String sql="CREATE TABLE MK.KPI_AREA_SORT_FACT_LATN_ID_MID\n" + "(\n" + "LATN_ID INTEGER,\n"+ "BUREAU_KEY INTEGER,\n"+ "ADD_SUM BIGINT,\n"+ "USER_ACCT BIGINT,\n"+ "USER_ACCT_LY BIGINT,\n"+ "TYPE_ID INTEGER\n"+ ")\n"+ "DATA CAPTURE NONE\n"+ "IN WH_APP_TEMP\n"+ "PARTITIONING KEY\n"+ "(LATN_ID,BUREAU_KEY,ADD_SUM\n"+ ") USING HASHING;";
    DB2StatementParser parser=new DB2StatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    System.out.println(SQLUtils.toDB2String(stmt));
    Assert.assertEquals(1,statementList.size());
    DB2SchemaStatVisitor visitor=new DB2SchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(6,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("MK.KPI_AREA_SORT_FACT_LATN_ID_MID")));
    Assert.assertEquals("CREATE TABLE MK.KPI_AREA_SORT_FACT_LATN_ID_MID (\n" + "\tLATN_ID INTEGER,\n" + "\tBUREAU_KEY INTEGER,\n"+ "\tADD_SUM BIGINT,\n"+ "\tUSER_ACCT BIGINT,\n"+ "\tUSER_ACCT_LY BIGINT,\n"+ "\tTYPE_ID INTEGER\n"+ ")\n"+ "DATA CAPTURE NONE\n"+ "IN WH_APP_TEMP\n"+ "PARTITION BY HASH (LATN_ID, BUREAU_KEY, ADD_SUM);",SQLUtils.toSQLString(stmt,JdbcConstants.DB2));
    Assert.assertEquals("create table MK.KPI_AREA_SORT_FACT_LATN_ID_MID (\n" + "\tLATN_ID INTEGER,\n" + "\tBUREAU_KEY INTEGER,\n"+ "\tADD_SUM BIGINT,\n"+ "\tUSER_ACCT BIGINT,\n"+ "\tUSER_ACCT_LY BIGINT,\n"+ "\tTYPE_ID INTEGER\n"+ ")\n"+ "DATA CAPTURE NONE\n"+ "IN WH_APP_TEMP\n"+ "partition by hash (LATN_ID, BUREAU_KEY, ADD_SUM);",SQLUtils.toSQLString(stmt,JdbcConstants.DB2,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
  }
}
