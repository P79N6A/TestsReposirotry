/** 
 * @author <a href="mailto:danping.yudp@alibaba-inc.com">YU Danping</a>
 */
public class DMLCallParserTest extends TestCase {
  public void testCall_0() throws Exception {
    String sql="call p(?,?)";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    SQLStatement stmt=parser.parseStatementList().get(0);
    parser.match(Token.EOF);
    String output=SQLUtils.toMySqlString(stmt);
    Assert.assertEquals("CALL p(?, ?)",output);
  }
  public void testCall_1() throws Exception {
    String sql="call p(@var1,'@var2',var3)";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    SQLStatement stmt=parser.parseStatementList().get(0);
    parser.match(Token.EOF);
    String output=SQLUtils.toMySqlString(stmt);
    Assert.assertEquals("CALL p(@var1, '@var2', var3)",output);
  }
  public void testCall_2() throws Exception {
    String sql="call p()";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    SQLStatement stmt=parser.parseStatementList().get(0);
    parser.match(Token.EOF);
    String output=SQLUtils.toMySqlString(stmt);
    Assert.assertEquals("CALL p()",output);
  }
}
