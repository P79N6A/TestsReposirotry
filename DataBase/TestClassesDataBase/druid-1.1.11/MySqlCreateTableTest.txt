public class MySqlCreateTableTest extends MysqlTest {
  public void test_0() throws Exception {
    String sql="CREATE TABLE t (c CHAR(20) CHARACTER SET utf8 COLLATE utf8_bin);";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    statemen.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(1,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("t")));
  }
  public void test_1() throws Exception {
    String sql="CREATE TABLE `ins_ebay_auth` (" + " `auth_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键id'," + " `usr_id` int(10) NOT NULL COMMENT '外键，用户表',"+ " `status` char(1) COLLATE utf8_bin NOT NULL COMMENT '状态 0.有效?1.无效',"+ " `ebay_token` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'eBay授权码',"+ " `ebay_name` varchar(50) COLLATE utf8_bin NOT NULL COMMENT 'eBay唯一名',"+ " `create_time` datetime NOT NULL COMMENT '授权时间', "+ " `invalid_time` datetime NOT NULL COMMENT '授权失效时间',"+ " PRIMARY KEY (`auth_id`)"+ " ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='INS_EBAY_AUTH'";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    statemen.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(7,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
  }
  public void test_2() throws Exception {
    String sql="create table t2 as select * from t1";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement statemen=statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    statemen.accept(visitor);
  }
}
