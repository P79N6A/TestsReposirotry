public class PGSelectTest43 extends PGTest {
  public void test_0() throws Exception {
    String sql="select task_id from mod_period_time where task_id in (SELECT task_id as b FROM mod_period_time order by task_id desc limit 1)";
    PGSQLStatementParser parser=new PGSQLStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLStatement stmt=statementList.get(0);
    assertEquals("SELECT task_id\n" + "FROM mod_period_time\n" + "WHERE task_id IN (\n"+ "\tSELECT task_id AS b\n"+ "\tFROM mod_period_time\n"+ "\tORDER BY task_id DESC\n"+ "\tLIMIT 1\n"+ ")",SQLUtils.toPGString(stmt));
    assertEquals("select task_id\n" + "from mod_period_time\n" + "where task_id in (\n"+ "\tselect task_id as b\n"+ "\tfrom mod_period_time\n"+ "\torder by task_id desc\n"+ "\tlimit 1\n"+ ")",SQLUtils.toPGString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
    Assert.assertEquals(1,statementList.size());
    PGSchemaStatVisitor visitor=new PGSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getColumns().size());
    Assert.assertEquals(1,visitor.getTables().size());
  }
}
