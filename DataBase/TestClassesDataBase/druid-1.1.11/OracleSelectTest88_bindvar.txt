public class OracleSelectTest88_bindvar extends OracleTest {
  public void test_0() throws Exception {
    String sql="select *\n" + "from \n" + "(\n"+ "    select *\n"+ "    from \"rme\" \"rm\" \n"+ "    where \"rm\".a-interval:\"sys_b_07\" day(:\"sys_b_08\") to second(:\"sys_b_09\")\n"+ ")";
    System.out.println(sql);
    OracleStatementParser parser=new OracleStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLSelectStatement stmt=(SQLSelectStatement)statementList.get(0);
    System.out.println(stmt.toString());
    Assert.assertEquals(1,statementList.size());
    OracleSchemaStatVisitor visitor=new OracleSchemaStatVisitor();
    stmt.accept(visitor);
{
      String text=SQLUtils.toOracleString(stmt);
      assertEquals("SELECT *\n" + "FROM (\n" + "\tSELECT *\n"+ "\tFROM \"rme\" \"rm\"\n"+ "\tWHERE \"rm\".a - INTERVAL :\"sys_b_07\" DAY(:\"sys_b_08\") TO SECOND(:\"sys_b_09\")\n"+ ")",text);
    }
    System.out.println("Tables : " + visitor.getTables());
    System.out.println("fields : " + visitor.getColumns());
    System.out.println("coditions : " + visitor.getConditions());
    System.out.println("relationships : " + visitor.getRelationships());
    System.out.println("orderBy : " + visitor.getOrderByColumns());
    assertEquals(1,visitor.getTables().size());
    assertEquals(2,visitor.getColumns().size());
    assertEquals(0,visitor.getConditions().size());
    assertEquals(0,visitor.getRelationships().size());
    assertEquals(0,visitor.getOrderByColumns().size());
  }
}
