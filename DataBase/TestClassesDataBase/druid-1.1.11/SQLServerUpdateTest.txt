public class SQLServerUpdateTest extends TestCase {
  public void test_isEmpty() throws Exception {
    String sql="update reg_student_charge_item " + "set FAmountReceived = b.amount   " + "from reg_student_charge_item a"+ "    ,("+ "          select a.FId,      "+ "                   case when sum(b.FChargeAmount) is null then 0 "+ "                        else sum(b.FChargeAmount)"+ "                   end as amount "+ "           from reg_student_charge_item a "+ "           left join reg_student_charge_daybook b on a.FId = b.FChargeItemId"+ "           where a.FId=?    group by a.FId"+ "     ) b "+ "where a.FId = b.FId and a.FId = ?";
    SQLServerStatementParser parser=new SQLServerStatementParser(sql);
    SQLStatement stmt=parser.parseStatementList().get(0);
    String text=TestUtils.outputSqlServer(stmt);
    assertEquals("UPDATE reg_student_charge_item\n" + "SET FAmountReceived = b.amount\n" + "FROM reg_student_charge_item a, (\n"+ "\t\tSELECT a.FId\n"+ "\t\t\t, CASE \n"+ "\t\t\t\tWHEN SUM(b.FChargeAmount) IS NULL THEN 0\n"+ "\t\t\t\tELSE SUM(b.FChargeAmount)\n"+ "\t\t\tEND AS amount\n"+ "\t\tFROM reg_student_charge_item a\n"+ "\t\t\tLEFT JOIN reg_student_charge_daybook b ON a.FId = b.FChargeItemId\n"+ "\t\tWHERE a.FId = ?\n"+ "\t\tGROUP BY a.FId\n"+ "\t) b\n"+ "WHERE a.FId = b.FId\n"+ "\tAND a.FId = ?",text);
  }
}
