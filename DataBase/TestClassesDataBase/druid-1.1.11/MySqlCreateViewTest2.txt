public class MySqlCreateViewTest2 extends MysqlTest {
  public void test_0() throws Exception {
    String sql="create view revenue0 as \n" + "select l_suppkey as supplier_no, sum(l_extendedprice * (1 - l_discount)) as total_revenue \n" + "from lineitem \n"+ "where l_shipdate >= date '1993-01-01' and l_shipdate < date '1993-01-01' + interval '3' month \n"+ "group by l_suppkey";
    MySqlStatementParser parser=new MySqlStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLCreateViewStatement stmt=(SQLCreateViewStatement)statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    MySqlSchemaStatVisitor visitor=new MySqlSchemaStatVisitor();
    stmt.accept(visitor);
    assertEquals("CREATE VIEW revenue0\n" + "AS\n" + "SELECT l_suppkey AS supplier_no, SUM(l_extendedprice * (1 - l_discount)) AS total_revenue\n"+ "FROM lineitem\n"+ "WHERE l_shipdate >= DATE '1993-01-01'\n"+ "\tAND l_shipdate < DATE '1993-01-01' + INTERVAL '3' MONTH\n"+ "GROUP BY l_suppkey",SQLUtils.toMySqlString(stmt));
    Assert.assertEquals("create view revenue0\n" + "as\n" + "select l_suppkey as supplier_no, sum(l_extendedprice * (1 - l_discount)) as total_revenue\n"+ "from lineitem\n"+ "where l_shipdate >= date '1993-01-01'\n"+ "\tand l_shipdate < date '1993-01-01' + interval '3' month\n"+ "group by l_suppkey",SQLUtils.toMySqlString(stmt,SQLUtils.DEFAULT_LCASE_FORMAT_OPTION));
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(4,visitor.getColumns().size());
    Assert.assertEquals(2,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("lineitem")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("lineitem","l_shipdate")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("lineitem","l_suppkey")));
  }
}
