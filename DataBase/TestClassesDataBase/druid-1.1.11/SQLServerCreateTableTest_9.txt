public class SQLServerCreateTableTest_9 extends TestCase {
  public void test_0() throws Exception {
    String sql="CREATE TABLE [dbo].[users2](\n" + "\t[id] [bigint] IDENTITY(1,1) NOT NULL,\n" + "\t[email] [varchar](255) NOT NULL,\n"+ "\t[name] [varchar](255) NOT NULL,\n"+ "PRIMARY KEY CLUSTERED \n"+ "(\n"+ "\t[id] ASC\n"+ ")\n"+ ")";
    SQLServerStatementParser parser=new SQLServerStatementParser(sql);
    List<SQLStatement> statementList=parser.parseStatementList();
    SQLCreateTableStatement stmt=(SQLCreateTableStatement)statementList.get(0);
    Assert.assertEquals(1,statementList.size());
    String output=SQLUtils.toSQLString(stmt,JdbcConstants.SQL_SERVER);
    Assert.assertEquals("CREATE TABLE [dbo].[users2] (\n" + "\t[id] [bigint] DEFAULT NULL IDENTITY (1, 1),\n" + "\t[email] [varchar](255) NOT NULL,\n"+ "\t[name] [varchar](255) NOT NULL,\n"+ "\tPRIMARY KEY CLUSTERED ([id] ASC)\n"+ ")",output);
    SQLServerSchemaStatVisitor visitor=new SQLServerSchemaStatVisitor();
    stmt.accept(visitor);
    Assert.assertEquals(1,visitor.getTables().size());
    Assert.assertEquals(3,visitor.getColumns().size());
    Assert.assertEquals(0,visitor.getConditions().size());
    Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name("dbo.users2")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.users2","id")));
    Assert.assertTrue(visitor.getColumns().contains(new Column("dbo.users2","email")));
  }
}
