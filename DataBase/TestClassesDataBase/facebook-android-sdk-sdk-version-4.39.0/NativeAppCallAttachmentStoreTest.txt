public class NativeAppCallAttachmentStoreTest extends FacebookTestCase {
  private static final UUID CALL_ID=UUID.randomUUID();
  private static final String ATTACHMENT_NAME="hello";
  @Before public void before() throws Exception {
    FacebookSdk.setApplicationId("123456789");
    FacebookSdk.setAutoLogAppEventsEnabled(false);
    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
  }
  private Bitmap createBitmap(){
    return Bitmap.createBitmap(20,20,Bitmap.Config.ALPHA_8);
  }
  private List<NativeAppCallAttachmentStore.Attachment> createAttachments(  UUID callId,  Bitmap bitmap){
    List<NativeAppCallAttachmentStore.Attachment> attachments=new ArrayList<>();
    attachments.add(NativeAppCallAttachmentStore.createAttachment(callId,bitmap));
    return attachments;
  }
  @Test public void testAddAttachmentsForCallWithNullCallId() throws Exception {
    try {
      List<NativeAppCallAttachmentStore.Attachment> attachments=createAttachments(null,createBitmap());
      NativeAppCallAttachmentStore.addAttachments(attachments);
      fail("expected exception");
    }
 catch (    NullPointerException ex) {
      assertTrue(ex.getMessage().contains("callId"));
    }
  }
  @Test public void testAddAttachmentsForCallWithNullBitmap() throws Exception {
    try {
      List<NativeAppCallAttachmentStore.Attachment> attachments=createAttachments(CALL_ID,null);
      NativeAppCallAttachmentStore.addAttachments(attachments);
      fail("expected exception");
    }
 catch (    NullPointerException ex) {
      assertTrue(ex.getMessage().contains("attachmentBitmap"));
    }
  }
  @Test public void testGetAttachmentsDirectory() throws Exception {
    File dir=NativeAppCallAttachmentStore.getAttachmentsDirectory();
    assertNotNull(dir);
    assertTrue(dir.getAbsolutePath().contains(NativeAppCallAttachmentStore.ATTACHMENTS_DIR_NAME));
  }
  @Test public void testGetAttachmentsDirectoryForCall() throws Exception {
    NativeAppCallAttachmentStore.ensureAttachmentsDirectoryExists();
    File dir=NativeAppCallAttachmentStore.getAttachmentsDirectoryForCall(CALL_ID,false);
    assertNotNull(dir);
    assertTrue(dir.getAbsolutePath().contains(NativeAppCallAttachmentStore.ATTACHMENTS_DIR_NAME));
    assertTrue(dir.getAbsolutePath().contains(CALL_ID.toString()));
  }
  @Test public void testGetAttachmentFile() throws Exception {
    NativeAppCallAttachmentStore.ensureAttachmentsDirectoryExists();
    File dir=NativeAppCallAttachmentStore.getAttachmentFile(CALL_ID,ATTACHMENT_NAME,false);
    assertNotNull(dir);
    assertTrue(dir.getAbsolutePath().contains(NativeAppCallAttachmentStore.ATTACHMENTS_DIR_NAME));
    assertTrue(dir.getAbsolutePath().contains(CALL_ID.toString()));
    assertTrue(dir.getAbsolutePath().contains(ATTACHMENT_NAME.toString()));
  }
}
