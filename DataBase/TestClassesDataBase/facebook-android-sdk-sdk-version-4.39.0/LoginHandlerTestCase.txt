public abstract class LoginHandlerTestCase extends FacebookPowerMockTestCase {
  protected static final String ACCESS_TOKEN="An access token";
  protected static final String USER_ID="1000";
  protected static final long EXPIRES_IN_DELTA=3600 * 24 * 60;
  protected static final HashSet<String> PERMISSIONS=new HashSet<String>(Arrays.asList("go outside","come back in"));
  protected static final String ERROR_MESSAGE="This is bad!";
  protected FragmentActivity activity;
  protected LoginClient mockLoginClient;
  @Before public void before() throws Exception {
    mockLoginClient=mock(LoginClient.class);
    activity=Robolectric.buildActivity(FragmentActivity.class).create().get();
    when(mockLoginClient.getActivity()).thenReturn(activity);
  }
  protected LoginClient.Request createRequest(){
    return createRequest(null);
  }
  protected LoginClient.Request createRequest(  String previousAccessTokenString){
    return new LoginClient.Request(LoginBehavior.NATIVE_WITH_FALLBACK,new HashSet<String>(PERMISSIONS),DefaultAudience.FRIENDS,"rerequest","1234","5678");
  }
  protected void assertDateDiffersWithinDelta(  Date expected,  Date actual,  long expectedDifference,  long deltaInMsec){
    long delta=Math.abs(expected.getTime() - actual.getTime()) - expectedDifference;
    assertTrue(delta < deltaInMsec);
  }
}
