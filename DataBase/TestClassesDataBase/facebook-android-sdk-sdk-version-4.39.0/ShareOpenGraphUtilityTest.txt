public class ShareOpenGraphUtilityTest extends FacebookTestCase {
  private static final String TYPE_KEY="type";
  private static final String ACTION_JSON_STRING="{\n" + "  \"type\": \"myActionType\",\n" + "  \"myObject\": {\n"+ "    \"fbsdk:create_object\":true,\n"+ "    \"myString\": \"value\",\n"+ "    \"myInt\": 42,\n"+ "    \"myBoolean\": true,\n"+ "    \"myStringArray\": [\n"+ "      \"string1\",\n"+ "      \"string2\",\n"+ "      \"string3\"\n"+ "    ],\n"+ "    \"myObject\": {\n"+ "      \"fbsdk:create_object\":true,\n"+ "      \"myPi\": 3.14\n"+ "    }\n"+ "  }\n"+ "}";
  @Test public void testToJSONObject() throws IOException, JSONException {
    final JSONObject actual=OpenGraphJSONUtility.toJSONObject(this.getAction(),null);
    final JSONObject expected=this.getActionJSONObject();
    TestUtils.assertEquals(expected,actual);
  }
  private static <E>ArrayList<E> createArrayList(  E... params){
    final ArrayList<E> list=new ArrayList<>();
    Collections.addAll(list,params);
    return list;
  }
  private ShareOpenGraphAction getAction(){
    return new ShareOpenGraphAction.Builder().putString(TYPE_KEY,"myActionType").putObject("myObject",new ShareOpenGraphObject.Builder().putString("myString","value").putInt("myInt",42).putBoolean("myBoolean",true).putStringArrayList("myStringArray",createArrayList("string1","string2","string3")).putObject("myObject",new ShareOpenGraphObject.Builder().putDouble("myPi",3.14).build()).build()).build();
  }
  private JSONObject getActionJSONObject() throws IOException, JSONException {
    return new JSONObject(ACTION_JSON_STRING);
  }
}
