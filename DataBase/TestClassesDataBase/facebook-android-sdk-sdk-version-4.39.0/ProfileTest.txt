public final class ProfileTest extends FacebookTestCase {
  static final String ID="ID";
  static final String ANOTHER_ID="ANOTHER_ID";
  static final String FIRST_NAME="FIRST_NAME";
  static final String MIDDLE_NAME="MIDDLE_NAME";
  static final String LAST_NAME="LAST_NAME";
  static final String NAME="NAME";
  static final Uri LINK_URI=Uri.parse("https://www.facebook.com/name");
  public static Profile createDefaultProfile(){
    return new Profile(ID,FIRST_NAME,MIDDLE_NAME,LAST_NAME,NAME,LINK_URI);
  }
  static void assertDefaultObjectGetters(  Profile profile){
    assertEquals(ID,profile.getId());
    assertEquals(FIRST_NAME,profile.getFirstName());
    assertEquals(MIDDLE_NAME,profile.getMiddleName());
    assertEquals(LAST_NAME,profile.getLastName());
    assertEquals(NAME,profile.getName());
    assertEquals(LINK_URI,profile.getLinkUri());
  }
  static Profile createMostlyNullsProfile(){
    return new Profile(ANOTHER_ID,null,null,null,null,null);
  }
  static void assertMostlyNullsObjectGetters(  Profile profile){
    assertEquals(ANOTHER_ID,profile.getId());
    assertNull(profile.getFirstName());
    assertNull(profile.getMiddleName());
    assertNull(profile.getLastName());
    assertNull(profile.getName());
    assertNull(profile.getLinkUri());
  }
  @Test public void testProfileCtorAndGetters(){
    Profile profile=createDefaultProfile();
    assertDefaultObjectGetters(profile);
    profile=createMostlyNullsProfile();
    assertMostlyNullsObjectGetters(profile);
  }
  @Test public void testHashCode(){
    Profile profile1=createDefaultProfile();
    Profile profile2=createDefaultProfile();
    assertEquals(profile1.hashCode(),profile2.hashCode());
    Profile profile3=createMostlyNullsProfile();
    assertNotEquals(profile1.hashCode(),profile3.hashCode());
  }
  @Test public void testEquals(){
    Profile profile1=createDefaultProfile();
    Profile profile2=createDefaultProfile();
    assertEquals(profile1,profile2);
    Profile profile3=createMostlyNullsProfile();
    assertNotEquals(profile1,profile3);
  }
  @Test public void testJsonSerialization(){
    Profile profile1=createDefaultProfile();
    JSONObject jsonObject=profile1.toJSONObject();
    Profile profile2=new Profile(jsonObject);
    assertDefaultObjectGetters(profile2);
    assertEquals(profile1,profile2);
    profile1=createMostlyNullsProfile();
    jsonObject=profile1.toJSONObject();
    profile2=new Profile(jsonObject);
    assertMostlyNullsObjectGetters(profile2);
    assertEquals(profile1,profile2);
  }
  @Test public void testParcelSerialization(){
    Profile profile1=createDefaultProfile();
    Profile profile2=TestUtils.parcelAndUnparcel(profile1);
    assertDefaultObjectGetters(profile2);
    assertEquals(profile1,profile2);
    profile1=createMostlyNullsProfile();
    profile2=TestUtils.parcelAndUnparcel(profile1);
    assertMostlyNullsObjectGetters(profile2);
    assertEquals(profile1,profile2);
  }
  @Test public void testGetSetCurrentProfile(){
    FacebookSdk.setApplicationId("123456789");
    FacebookSdk.setAutoLogAppEventsEnabled(false);
    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
    Profile profile1=createDefaultProfile();
    Profile.setCurrentProfile(profile1);
    assertEquals(ProfileManager.getInstance().getCurrentProfile(),profile1);
    assertEquals(profile1,Profile.getCurrentProfile());
    Profile.setCurrentProfile(null);
    assertNull(ProfileManager.getInstance().getCurrentProfile());
    assertNull(Profile.getCurrentProfile());
  }
}
