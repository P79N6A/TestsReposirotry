@PrepareForTest({CallbackManagerImpl.class}) public final class CallbackManagerImplPowerMockTest extends FacebookPowerMockTestCase {
  @Before public void before(){
    FacebookSdk.setApplicationId("123456789");
    FacebookSdk.setAutoLogAppEventsEnabled(false);
    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
    Whitebox.setInternalState(CallbackManagerImpl.class,"staticCallbacks",new HashMap<Integer,CallbackManagerImpl.Callback>());
  }
  @Test public void testStaticRegisterValidations(){
    try {
      CallbackManagerImpl.registerStaticCallback(CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode(),null);
      fail();
    }
 catch (    NullPointerException exception) {
    }
  }
  @Test public void testRegisterValidations(){
    CallbackManagerImpl callbackManagerImpl=new CallbackManagerImpl();
    try {
      callbackManagerImpl.registerCallback(CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode(),null);
      fail();
    }
 catch (    NullPointerException exception) {
    }
  }
  @Test public void testCallbackExecuted(){
    final Capture<Boolean> capture=new Capture(false);
    final CallbackManagerImpl callbackManagerImpl=new CallbackManagerImpl();
    callbackManagerImpl.registerCallback(CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode(),new CallbackManagerImpl.Callback(){
      @Override public boolean onActivityResult(      int resultCode,      Intent data){
        capture.set(true);
        return true;
      }
    }
);
    callbackManagerImpl.onActivityResult(FacebookSdk.getCallbackRequestCodeOffset(),1,new Intent());
    assertTrue(capture.get());
  }
  @Test public void testRightCallbackExecuted(){
    final Capture<Boolean> capture=new Capture(false);
    final CallbackManagerImpl callbackManagerImpl=new CallbackManagerImpl();
    callbackManagerImpl.registerCallback(123,new CallbackManagerImpl.Callback(){
      @Override public boolean onActivityResult(      int resultCode,      Intent data){
        capture.set(true);
        return true;
      }
    }
);
    callbackManagerImpl.registerCallback(456,new CallbackManagerImpl.Callback(){
      @Override public boolean onActivityResult(      int resultCode,      Intent data){
        return false;
      }
    }
);
    callbackManagerImpl.onActivityResult(123,1,new Intent());
    assertTrue(capture.get());
  }
  @Test public void testStaticCallbackExecuted(){
    final Capture<Boolean> capture=new Capture(false);
    final CallbackManagerImpl callbackManagerImpl=new CallbackManagerImpl();
    callbackManagerImpl.registerStaticCallback(CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode(),new CallbackManagerImpl.Callback(){
      @Override public boolean onActivityResult(      int resultCode,      Intent data){
        capture.set(true);
        return true;
      }
    }
);
    callbackManagerImpl.onActivityResult(FacebookSdk.getCallbackRequestCodeOffset(),1,new Intent());
    assertTrue(capture.get());
  }
  @Test public void testStaticCallbackSkipped(){
    final Capture<Boolean> capture=new Capture(false);
    final Capture<Boolean> captureStatic=new Capture(false);
    final CallbackManagerImpl callbackManagerImpl=new CallbackManagerImpl();
    callbackManagerImpl.registerCallback(CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode(),new CallbackManagerImpl.Callback(){
      @Override public boolean onActivityResult(      int resultCode,      Intent data){
        capture.set(true);
        return true;
      }
    }
);
    callbackManagerImpl.registerStaticCallback(CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode(),new CallbackManagerImpl.Callback(){
      @Override public boolean onActivityResult(      int resultCode,      Intent data){
        captureStatic.set(true);
        return true;
      }
    }
);
    callbackManagerImpl.onActivityResult(FacebookSdk.getCallbackRequestCodeOffset(),1,new Intent());
    assertTrue(capture.get());
    assertFalse(captureStatic.get());
  }
}
