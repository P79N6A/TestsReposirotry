private class MockNMClientAsync1 extends NMClientAsyncImpl {
  private Set<String> errorMsgs=Collections.synchronizedSet(new HashSet<String>());
  protected MockNMClientAsync1(  int expectedSuccess,  int expectedFailure) throws YarnException, IOException {
    super(MockNMClientAsync1.class.getName(),mockNMClient(0),new TestCallbackHandler1(expectedSuccess,expectedFailure));
  }
private class MockContainerEventProcessor extends ContainerEventProcessor {
    public MockContainerEventProcessor(    ContainerEvent event){
      super(event);
    }
    @Override public void run(){
      try {
        super.run();
      }
 catch (      RuntimeException e) {
        errorMsgs.add("Unexpected throwable from callback functions should" + " be ignored by Container " + event.getContainerId());
      }
    }
  }
  @Override protected ContainerEventProcessor getContainerEventProcessor(  ContainerEvent event){
    return new MockContainerEventProcessor(event);
  }
}
