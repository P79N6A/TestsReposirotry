/** 
 * Test  {@link MountTableResolver} initialization.
 */
public class TestInitializeMountTableResolver {
  @Test public void testDefaultNameserviceIsMissing(){
    Configuration conf=new Configuration();
    MountTableResolver mountTable=new MountTableResolver(conf);
    assertEquals("",mountTable.getDefaultNamespace());
  }
  @Test public void testDefaultNameserviceWithEmptyString(){
    Configuration conf=new Configuration();
    conf.set(DFS_ROUTER_DEFAULT_NAMESERVICE,"");
    MountTableResolver mountTable=new MountTableResolver(conf);
    assertEquals("",mountTable.getDefaultNamespace());
  }
  @Test public void testRouterDefaultNameservice(){
    Configuration conf=new Configuration();
    conf.set(DFS_ROUTER_DEFAULT_NAMESERVICE,"router_ns");
    conf.set(DFS_NAMESERVICE_ID,"ns_id");
    conf.set(DFS_NAMESERVICES,"nss");
    MountTableResolver mountTable=new MountTableResolver(conf);
    assertEquals("router_ns",mountTable.getDefaultNamespace());
  }
  @Test public void testNameserviceID(){
    Configuration conf=new Configuration();
    conf.set(DFS_NAMESERVICE_ID,"ns_id");
    conf.set(DFS_NAMESERVICES,"nss");
    MountTableResolver mountTable=new MountTableResolver(conf);
    assertEquals("ns_id",mountTable.getDefaultNamespace());
  }
  @Test public void testSingleNameservices(){
    Configuration conf=new Configuration();
    conf.set(DFS_NAMESERVICES,"ns1");
    MountTableResolver mountTable=new MountTableResolver(conf);
    assertEquals("ns1",mountTable.getDefaultNamespace());
  }
  @Test public void testMultipleNameservices(){
    Configuration conf=new Configuration();
    conf.set(DFS_NAMESERVICES,"ns1,ns2");
    MountTableResolver mountTable=new MountTableResolver(conf);
    assertEquals("ns1",mountTable.getDefaultNamespace());
  }
}
