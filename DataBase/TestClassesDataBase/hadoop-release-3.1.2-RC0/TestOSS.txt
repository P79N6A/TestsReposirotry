/** 
 * OSS tests through the  {@link FileContext} API.
 */
public class TestOSS {
  private FileContext fc;
  @Before public void setUp() throws Exception {
    Configuration conf=new Configuration();
    fc=AliyunOSSTestUtils.createTestFileContext(conf);
  }
  @After public void tearDown() throws Exception {
    if (fc != null) {
      fc.delete(getTestPath(),true);
    }
  }
  protected Path getTestPath(){
    return new Path(AliyunOSSTestUtils.generateUniqueTestPath());
  }
  @Test public void testOSSStatus() throws Exception {
    FsStatus fsStatus=fc.getFsStatus(null);
    assertNotNull(fsStatus);
    assertTrue("Used capacity should be positive: " + fsStatus.getUsed(),fsStatus.getUsed() >= 0);
    assertTrue("Remaining capacity should be positive: " + fsStatus.getRemaining(),fsStatus.getRemaining() >= 0);
    assertTrue("Capacity should be positive: " + fsStatus.getCapacity(),fsStatus.getCapacity() >= 0);
  }
  @Test(timeout=90000L) public void testOSSCreateFileInSubDir() throws Exception {
    Path dirPath=getTestPath();
    fc.mkdir(dirPath,FileContext.DIR_DEFAULT_PERM,true);
    Path filePath=new Path(dirPath,"file");
    try (FSDataOutputStream file=fc.create(filePath,EnumSet.of(CreateFlag.CREATE))){
      file.write(666);
    }
   }
}
