public static class LogCapturer {
  private StringWriter sw=new StringWriter();
  private WriterAppender appender;
  private Logger logger;
  public static LogCapturer captureLogs(  Log l){
    Logger logger=((Log4JLogger)l).getLogger();
    return new LogCapturer(logger);
  }
  public static LogCapturer captureLogs(  org.slf4j.Logger logger){
    return new LogCapturer(toLog4j(logger));
  }
  private LogCapturer(  Logger logger){
    this.logger=logger;
    Appender defaultAppender=Logger.getRootLogger().getAppender("stdout");
    if (defaultAppender == null) {
      defaultAppender=Logger.getRootLogger().getAppender("console");
    }
    final Layout layout=(defaultAppender == null) ? new PatternLayout() : defaultAppender.getLayout();
    this.appender=new WriterAppender(layout,sw);
    logger.addAppender(this.appender);
  }
  public String getOutput(){
    return sw.toString();
  }
  public void stopCapturing(){
    logger.removeAppender(appender);
  }
  public void clearOutput(){
    sw.getBuffer().setLength(0);
  }
}
