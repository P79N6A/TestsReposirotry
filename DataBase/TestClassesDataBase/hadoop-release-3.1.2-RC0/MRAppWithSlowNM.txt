private class MRAppWithSlowNM extends MRApp {
  private NMTokenSecretManagerInNM tokenSecretManager;
  public MRAppWithSlowNM(  NMTokenSecretManagerInNM tokenSecretManager){
    super(1,0,false,"TestContainerLauncher",true);
    this.tokenSecretManager=tokenSecretManager;
  }
  @Override protected ContainerLauncher createContainerLauncher(  final AppContext context){
    return new ContainerLauncherImpl(context){
      @Override public ContainerManagementProtocolProxyData getCMProxy(      String containerMgrBindAddr,      ContainerId containerId) throws IOException {
        InetSocketAddress addr=NetUtils.getConnectAddress(server);
        String containerManagerBindAddr=addr.getHostName() + ":" + addr.getPort();
        Token token=tokenSecretManager.createNMToken(containerId.getApplicationAttemptId(),NodeId.newInstance(addr.getHostName(),addr.getPort()),"user");
        ContainerManagementProtocolProxy cmProxy=new ContainerManagementProtocolProxy(conf);
        ContainerManagementProtocolProxyData proxy=cmProxy.new ContainerManagementProtocolProxyData(YarnRPC.create(conf),containerManagerBindAddr,containerId,token);
        return proxy;
      }
    }
;
  }
}
