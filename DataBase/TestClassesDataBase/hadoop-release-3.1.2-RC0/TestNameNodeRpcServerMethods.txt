public class TestNameNodeRpcServerMethods {
  private static NamenodeProtocols nnRpc;
  private static Configuration conf;
  private static MiniDFSCluster cluster;
  /** 
 * Start a cluster 
 */
  @Before public void setup() throws Exception {
    conf=new HdfsConfiguration();
    cluster=new MiniDFSCluster.Builder(conf).build();
    cluster.waitActive();
    nnRpc=cluster.getNameNode().getRpcServer();
  }
  /** 
 * Cleanup after the test
 * @throws IOException
 * @throws UnresolvedLinkException
 * @throws SafeModeException
 * @throws AccessControlException
 */
  @After public void cleanup() throws IOException {
    if (cluster != null) {
      cluster.shutdown();
      cluster=null;
    }
  }
  @Test public void testDeleteSnapshotWhenSnapshotNameIsEmpty() throws Exception {
    String dir="/testNamenodeRetryCache/testDelete";
    try {
      nnRpc.deleteSnapshot(dir,null);
      Assert.fail("testdeleteSnapshot is not thrown expected exception ");
    }
 catch (    IOException e) {
      GenericTestUtils.assertExceptionContains("The snapshot name is null or empty.",e);
    }
    try {
      nnRpc.deleteSnapshot(dir,"");
      Assert.fail("testdeleteSnapshot is not thrown expected exception");
    }
 catch (    IOException e) {
      GenericTestUtils.assertExceptionContains("The snapshot name is null or empty.",e);
    }
  }
}
