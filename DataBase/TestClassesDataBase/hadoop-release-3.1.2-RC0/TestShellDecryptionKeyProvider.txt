/** 
 * Windows only tests of shell scripts to provide decryption keys.
 */
public class TestShellDecryptionKeyProvider extends AbstractWasbTestWithTimeout {
  public static final Logger LOG=LoggerFactory.getLogger(TestShellDecryptionKeyProvider.class);
  private static File TEST_ROOT_DIR=new File(System.getProperty("test.build.data","/tmp"),"TestShellDecryptionKeyProvider");
  @Test public void testScriptPathNotSpecified() throws Exception {
    assumeWindows();
    ShellDecryptionKeyProvider provider=new ShellDecryptionKeyProvider();
    Configuration conf=new Configuration();
    String account="testacct";
    String key="key";
    conf.set(SimpleKeyProvider.KEY_ACCOUNT_KEY_PREFIX + account,key);
    try {
      provider.getStorageAccountKey(account,conf);
      Assert.fail("fs.azure.shellkeyprovider.script is not specified, we should throw");
    }
 catch (    KeyProviderException e) {
      LOG.info("Received an expected exception: " + e.getMessage());
    }
  }
  @Test public void testValidScript() throws Exception {
    assumeWindows();
    String expectedResult="decretedKey";
    File scriptFile=new File(TEST_ROOT_DIR,"testScript.cmd");
    FileUtils.writeStringToFile(scriptFile,"@echo %1 " + expectedResult,StandardCharsets.UTF_8);
    ShellDecryptionKeyProvider provider=new ShellDecryptionKeyProvider();
    Configuration conf=new Configuration();
    String account="testacct";
    String key="key1";
    conf.set(SimpleKeyProvider.KEY_ACCOUNT_KEY_PREFIX + account,key);
    conf.set(ShellDecryptionKeyProvider.KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT,"cmd /c " + scriptFile.getAbsolutePath());
    String result=provider.getStorageAccountKey(account,conf);
    assertEquals(key + " " + expectedResult,result);
  }
}
