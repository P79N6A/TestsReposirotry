/** 
 * This class tests hadoopStreaming with customized separator in MapReduce local mode.
 */
public class TestStreamingSeparator {
  protected File INPUT_FILE=new File("TestStreamingSeparator.input.txt");
  protected File OUTPUT_DIR=new File("TestStreamingSeparator.out");
  protected String input="roses1are.red\nviolets1are.blue\nbunnies1are.pink\n";
  protected String map=UtilTest.makeJavaCommand(TrApp.class,new String[]{"2","3"});
  protected String reduce=UtilTest.makeJavaCommand(TrAppReduce.class,new String[]{"3","4"});
  protected String outputExpect="bunnies5are.pink\nroses5are.red\nviolets5are.blue\n";
  private StreamJob job;
  public TestStreamingSeparator() throws IOException {
    UtilTest utilTest=new UtilTest(getClass().getName());
    utilTest.checkUserDir();
    utilTest.redirectIfAntJunit();
  }
  protected void createInput() throws IOException {
    DataOutputStream out=new DataOutputStream(new FileOutputStream(INPUT_FILE.getAbsoluteFile()));
    out.write(input.getBytes("UTF-8"));
    out.close();
  }
  protected String[] genArgs(){
    return new String[]{"-input",INPUT_FILE.getAbsolutePath(),"-output",OUTPUT_DIR.getAbsolutePath(),"-mapper",map,"-reducer",reduce,"-jobconf","mapreduce.task.files.preserve.failedtasks=true","-jobconf","stream.tmpdir=" + System.getProperty("test.build.data","/tmp"),"-inputformat","KeyValueTextInputFormat","-jobconf","mapreduce.input.keyvaluelinerecordreader.key.value.separator=1","-jobconf","stream.map.input.field.separator=2","-jobconf","stream.map.output.field.separator=3","-jobconf","stream.reduce.input.field.separator=3","-jobconf","stream.reduce.output.field.separator=4","-jobconf","mapreduce.output.textoutputformat.separator=5"};
  }
  @Test public void testCommandLine() throws Exception {
    try {
      try {
        FileUtil.fullyDelete(OUTPUT_DIR.getAbsoluteFile());
      }
 catch (      Exception e) {
      }
      createInput();
      boolean mayExit=false;
      job=new StreamJob(genArgs(),mayExit);
      job.go();
      File outFile=new File(OUTPUT_DIR,"part-00000").getAbsoluteFile();
      String output=StreamUtil.slurp(outFile);
      outFile.delete();
      System.err.println("outEx1=" + outputExpect);
      System.err.println("  out1=" + output);
      assertEquals(outputExpect,output);
    }
  finally {
      INPUT_FILE.delete();
      FileUtil.fullyDelete(OUTPUT_DIR.getAbsoluteFile());
    }
  }
  public static void main(  String[] args) throws Exception {
    new TestStreamingSeparator().testCommandLine();
  }
}
