/** 
 * UnOverrideDefaultPortFileSystem does not define default port. The default port defined by AbstractFilesystem is used in this case. (default 0).
 */
private static class UnOverrideDefaultPortFileSystem extends FileSystem {
  @Override public URI getUri(){
    return null;
  }
  @Override public FSDataInputStream open(  Path f,  int bufferSize) throws IOException {
    return null;
  }
  @Override public FSDataOutputStream create(  Path f,  FsPermission permission,  boolean overwrite,  int bufferSize,  short replication,  long blockSize,  Progressable progress) throws IOException {
    return null;
  }
  @Override public FSDataOutputStream append(  Path f,  int bufferSize,  Progressable progress) throws IOException {
    return null;
  }
  @Override public boolean rename(  Path src,  Path dst) throws IOException {
    return false;
  }
  @Override public boolean delete(  Path f,  boolean recursive) throws IOException {
    return false;
  }
  @Override public FileStatus[] listStatus(  Path f) throws FileNotFoundException, IOException {
    return new FileStatus[0];
  }
  @Override public void setWorkingDirectory(  Path newDir){
  }
  @Override public Path getWorkingDirectory(){
    return null;
  }
  @Override public boolean mkdirs(  Path f,  FsPermission permission) throws IOException {
    return false;
  }
  @Override public FileStatus getFileStatus(  Path f) throws IOException {
    return null;
  }
}
