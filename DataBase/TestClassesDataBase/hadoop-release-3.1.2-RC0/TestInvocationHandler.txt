/** 
 * A RpcInvocationHandler instance for test. Its invoke function uses the same {@link Client} instance, and will fail the first totalRetry times (by throwing an IOException).
 */
private static class TestInvocationHandler implements RpcInvocationHandler {
  private static int retry=0;
  private final Client client;
  private final Server server;
  private final int total;
  TestInvocationHandler(  Client client,  Server server,  int total){
    this.client=client;
    this.server=server;
    this.total=total;
  }
  protected Object returnValue(  Object value) throws Exception {
    if (retry++ < total) {
      throw new IOException("Fake IOException");
    }
    return value;
  }
  @Override public Object invoke(  Object proxy,  Method method,  Object[] args) throws Throwable {
    LongWritable value=call(client,RANDOM.nextLong(),NetUtils.getConnectAddress(server),conf);
    return returnValue(value);
  }
  @Override public void close() throws IOException {
  }
  @Override public ConnectionId getConnectionId(){
    return null;
  }
}
