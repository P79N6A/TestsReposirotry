private static class EditLogByteInputStream extends EditLogInputStream {
  private final InputStream input;
  private final long len;
  private int version;
  private FSEditLogOp.Reader reader=null;
  private FSEditLogLoader.PositionTrackingInputStream tracker=null;
  public EditLogByteInputStream(  byte[] data) throws IOException {
    len=data.length;
    input=new ByteArrayInputStream(data);
    BufferedInputStream bin=new BufferedInputStream(input);
    DataInputStream in=new DataInputStream(bin);
    version=EditLogFileInputStream.readLogVersion(in,true);
    tracker=new FSEditLogLoader.PositionTrackingInputStream(in);
    in=new DataInputStream(tracker);
    reader=FSEditLogOp.Reader.create(in,tracker,version);
  }
  @Override public long getFirstTxId(){
    return HdfsServerConstants.INVALID_TXID;
  }
  @Override public long getLastTxId(){
    return HdfsServerConstants.INVALID_TXID;
  }
  @Override public long length() throws IOException {
    return len;
  }
  @Override public long getPosition(){
    return tracker.getPos();
  }
  @Override protected FSEditLogOp nextOp() throws IOException {
    return reader.readOp(false);
  }
  @Override public int getVersion(  boolean verifyVersion) throws IOException {
    return version;
  }
  @Override public void close() throws IOException {
    input.close();
  }
  @Override public String getName(){
    return "AnonEditLogByteInputStream";
  }
  @Override public boolean isInProgress(){
    return true;
  }
  @Override public void setMaxOpSize(  int maxOpSize){
    reader.setMaxOpSize(maxOpSize);
  }
  @Override public boolean isLocalLog(){
    return true;
  }
}
