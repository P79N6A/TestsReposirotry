private static abstract class SimpleCheckerBase<V extends Writable> implements Mapper<IntWritable,V,IntWritable,IntWritable>, Reducer<IntWritable,IntWritable,Text,Text> {
  protected final static IntWritable one=new IntWritable(1);
  int srcs;
  public void close(){
  }
  public void configure(  JobConf job){
    srcs=job.getInt("testdatamerge.sources",0);
    assertTrue("Invalid src count: " + srcs,srcs > 0);
  }
  public abstract void map(  IntWritable key,  V val,  OutputCollector<IntWritable,IntWritable> out,  Reporter reporter) throws IOException ;
  public void reduce(  IntWritable key,  Iterator<IntWritable> values,  OutputCollector<Text,Text> output,  Reporter reporter) throws IOException {
    int seen=0;
    while (values.hasNext()) {
      seen+=values.next().get();
    }
    assertTrue("Bad count for " + key.get(),verify(key.get(),seen));
  }
  public abstract boolean verify(  int key,  int occ);
}
