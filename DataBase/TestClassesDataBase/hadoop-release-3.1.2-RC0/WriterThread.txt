private class WriterThread extends Thread {
  private final FSDataOutputStream stm;
  private final AtomicReference<Throwable> thrown;
  private final int numWrites;
  private final CountDownLatch countdown;
  public WriterThread(  FSDataOutputStream stm,  AtomicReference<Throwable> thrown,  CountDownLatch countdown,  int numWrites){
    this.stm=stm;
    this.thrown=thrown;
    this.numWrites=numWrites;
    this.countdown=countdown;
  }
  @Override public void run(){
    try {
      countdown.await();
      for (int i=0; i < numWrites && thrown.get() == null; i++) {
        doAWrite();
      }
    }
 catch (    Throwable t) {
      thrown.compareAndSet(null,t);
    }
  }
  private void doAWrite() throws IOException {
    StopWatch sw=new StopWatch().start();
    stm.write(toWrite);
    stm.hflush();
    long micros=sw.now(TimeUnit.MICROSECONDS);
    quantiles.insert(micros);
  }
}
