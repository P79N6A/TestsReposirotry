/** 
 * Taker consumes FakeCalls
 */
public class Taker implements Runnable {
  private final BlockingQueue<Schedulable> cq;
  public final String tag;
  public volatile int callsTaken=0;
  public volatile Schedulable lastResult=null;
  private final int maxCalls;
  private final CountDownLatch latch;
  private IdentityProvider uip;
  public Taker(  BlockingQueue<Schedulable> aCq,  int maxCalls,  String tag,  CountDownLatch latch){
    this.maxCalls=maxCalls;
    this.cq=aCq;
    this.tag=tag;
    this.uip=new UserIdentityProvider();
    this.latch=latch;
  }
  @Override public void run(){
    try {
      while (callsTaken < maxCalls || maxCalls < 0) {
        Schedulable res=cq.take();
        String identity=uip.makeIdentity(res);
        if (tag != null && this.tag.equals(identity)) {
          cq.put(res);
        }
 else {
          callsTaken++;
          latch.countDown();
          lastResult=res;
        }
      }
    }
 catch (    InterruptedException e) {
      return;
    }
  }
}
