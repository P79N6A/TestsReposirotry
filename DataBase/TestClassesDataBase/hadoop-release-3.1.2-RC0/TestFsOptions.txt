public class TestFsOptions {
  @Test public void testProcessChecksumOpt(){
    ChecksumOpt defaultOpt=new ChecksumOpt(DataChecksum.Type.CRC32,512);
    ChecksumOpt finalOpt;
    finalOpt=ChecksumOpt.processChecksumOpt(defaultOpt,null);
    checkParams(defaultOpt,finalOpt);
    finalOpt=ChecksumOpt.processChecksumOpt(defaultOpt,null,1024);
    checkParams(DataChecksum.Type.CRC32,1024,finalOpt);
    ChecksumOpt myOpt=new ChecksumOpt();
    finalOpt=ChecksumOpt.processChecksumOpt(defaultOpt,myOpt);
    checkParams(defaultOpt,finalOpt);
    myOpt=new ChecksumOpt(DataChecksum.Type.CRC32C,2048);
    finalOpt=ChecksumOpt.processChecksumOpt(defaultOpt,myOpt);
    checkParams(DataChecksum.Type.CRC32C,2048,finalOpt);
    finalOpt=ChecksumOpt.processChecksumOpt(defaultOpt,myOpt,4096);
    checkParams(DataChecksum.Type.CRC32C,4096,finalOpt);
  }
  private void checkParams(  ChecksumOpt expected,  ChecksumOpt obtained){
    assertEquals(expected.getChecksumType(),obtained.getChecksumType());
    assertEquals(expected.getBytesPerChecksum(),obtained.getBytesPerChecksum());
  }
  private void checkParams(  DataChecksum.Type type,  int bpc,  ChecksumOpt obtained){
    assertEquals(type,obtained.getChecksumType());
    assertEquals(bpc,obtained.getBytesPerChecksum());
  }
}
