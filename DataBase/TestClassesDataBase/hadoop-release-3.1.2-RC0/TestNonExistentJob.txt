public class TestNonExistentJob {
  private MiniDFSCluster dfsCluster=null;
  private MiniMRCluster mrCluster=null;
  @Before public void setUp() throws Exception {
    if (System.getProperty("hadoop.log.dir") == null) {
      System.setProperty("hadoop.log.dir","/tmp");
    }
    int taskTrackers=2;
    int dataNodes=2;
    String proxyUser=System.getProperty("user.name");
    String proxyGroup="g";
    StringBuilder sb=new StringBuilder();
    sb.append("127.0.0.1,localhost");
    for (    InetAddress i : InetAddress.getAllByName(InetAddress.getLocalHost().getHostName())) {
      sb.append(",").append(i.getCanonicalHostName());
    }
    JobConf conf=new JobConf();
    conf.set("dfs.block.access.token.enable","false");
    conf.set("dfs.permissions","true");
    conf.set("hadoop.security.authentication","simple");
    dfsCluster=new MiniDFSCluster.Builder(conf).numDataNodes(dataNodes).build();
    FileSystem fileSystem=dfsCluster.getFileSystem();
    fileSystem.mkdirs(new Path("/tmp"));
    fileSystem.mkdirs(new Path("/user"));
    fileSystem.mkdirs(new Path("/hadoop/mapred/system"));
    fileSystem.setPermission(new Path("/tmp"),FsPermission.valueOf("-rwxrwxrwx"));
    fileSystem.setPermission(new Path("/user"),FsPermission.valueOf("-rwxrwxrwx"));
    fileSystem.setPermission(new Path("/hadoop/mapred/system"),FsPermission.valueOf("-rwx------"));
    String nnURI=fileSystem.getUri().toString();
    int numDirs=1;
    String[] racks=null;
    String[] hosts=null;
    mrCluster=new MiniMRCluster(0,0,taskTrackers,nnURI,numDirs,racks,hosts,null,conf);
    ProxyUsers.refreshSuperUserGroupsConfiguration(conf);
  }
  protected JobConf getJobConf(){
    return mrCluster.createJobConf();
  }
  @After public void tearDown() throws Exception {
    if (mrCluster != null) {
      mrCluster.shutdown();
    }
    if (dfsCluster != null) {
      dfsCluster.shutdown();
    }
  }
  @Test public void testGetInvalidJob() throws Exception {
    RunningJob runJob=new JobClient(getJobConf()).getJob(JobID.forName("job_0_0"));
    assertNull(runJob);
  }
}
