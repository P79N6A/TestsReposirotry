/** 
 * Test to validate Azure storage client side logging. Tests works only when testing with Live Azure storage because Emulator does not have support for client-side logging. <I>Important: </I> Do not attempt to move off commons-logging. The tests will fail.
 */
public class ITestNativeAzureFileSystemClientLogging extends AbstractWasbTestBase {
  private static final String KEY_LOGGING_CONF_STRING="fs.azure.storage.client.logging";
  private static final String TEMP_DIR="tempDir";
  private boolean verifyStorageClientLogs(  String capturedLogs,  String entity) throws Exception {
    URI uri=testAccount.getRealAccount().getBlobEndpoint();
    String container=testAccount.getRealContainer().getName();
    String validateString=uri + Path.SEPARATOR + container+ Path.SEPARATOR+ entity;
    boolean entityFound=false;
    StringTokenizer tokenizer=new StringTokenizer(capturedLogs,"\n");
    while (tokenizer.hasMoreTokens()) {
      String token=tokenizer.nextToken();
      if (token.contains(validateString)) {
        entityFound=true;
        break;
      }
    }
    return entityFound;
  }
  private void updateFileSystemConfiguration(  Boolean loggingFlag) throws Exception {
    Configuration conf=fs.getConf();
    conf.set(KEY_LOGGING_CONF_STRING,loggingFlag.toString());
    URI uri=fs.getUri();
    fs.initialize(uri,conf);
  }
  private void performWASBOperations() throws Exception {
    Path tempDir=new Path(Path.SEPARATOR + TEMP_DIR);
    fs.mkdirs(tempDir);
    fs.delete(tempDir,true);
  }
  @Test public void testLoggingEnabled() throws Exception {
    LogCapturer logs=LogCapturer.captureLogs(new Log4JLogger(Logger.getRootLogger()));
    updateFileSystemConfiguration(true);
    performWASBOperations();
    String output=getLogOutput(logs);
    assertTrue("Log entry " + TEMP_DIR + " not found  in "+ output,verifyStorageClientLogs(output,TEMP_DIR));
  }
  protected String getLogOutput(  LogCapturer logs){
    String output=logs.getOutput();
    assertTrue("No log created/captured",!output.isEmpty());
    return output;
  }
  @Test public void testLoggingDisabled() throws Exception {
    LogCapturer logs=LogCapturer.captureLogs(new Log4JLogger(Logger.getRootLogger()));
    updateFileSystemConfiguration(false);
    performWASBOperations();
    String output=getLogOutput(logs);
    assertFalse("Log entry " + TEMP_DIR + " found  in "+ output,verifyStorageClientLogs(output,TEMP_DIR));
  }
  @Override protected AzureBlobStorageTestAccount createTestAccount() throws Exception {
    return AzureBlobStorageTestAccount.create();
  }
}
