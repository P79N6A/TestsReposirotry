/** 
 * The Item which tasks process.
 */
private final class Item {
  private final int id;
  private final String text;
  private volatile boolean committed, aborted, reverted, failed;
  private Item(  int item,  String text){
    this.id=item;
    this.text=text;
  }
  boolean commit(){
    committed=true;
    return true;
  }
  boolean abort(){
    aborted=true;
    return true;
  }
  boolean revert(){
    reverted=true;
    return true;
  }
  boolean fail(){
    failed=true;
    return true;
  }
  public Item assertCommitted(){
    assertTrue(toString() + " was not committed in\n" + itemsToString(),committed);
    return this;
  }
  public Item assertCommittedOrFailed(){
    assertTrue(toString() + " was not committed nor failed in\n" + itemsToString(),committed || failed);
    return this;
  }
  public Item assertAborted(){
    assertTrue(toString() + " was not aborted in\n" + itemsToString(),aborted);
    return this;
  }
  public Item assertReverted(){
    assertTrue(toString() + " was not reverted in\n" + itemsToString(),reverted);
    return this;
  }
  @Override public String toString(){
    final StringBuilder sb=new StringBuilder("Item{");
    sb.append(String.format("[%02d]",id));
    sb.append(", committed=").append(committed);
    sb.append(", aborted=").append(aborted);
    sb.append(", reverted=").append(reverted);
    sb.append(", failed=").append(failed);
    sb.append(", text=").append(text);
    sb.append('}');
    return sb.toString();
  }
}
