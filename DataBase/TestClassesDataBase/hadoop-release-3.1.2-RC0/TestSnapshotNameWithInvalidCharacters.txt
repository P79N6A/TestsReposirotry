public class TestSnapshotNameWithInvalidCharacters {
  private static final long SEED=0;
  private static final short REPLICATION=1;
  private static final int BLOCKSIZE=1024;
  private static final Configuration conf=new Configuration();
  private static MiniDFSCluster cluster;
  private static DistributedFileSystem hdfs;
  private final Path dir1=new Path("/");
  private final String file1Name="file1";
  private final String snapshot1="a:b:c";
  private final String snapshot2="a/b/c";
  @Before public void setUp() throws Exception {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(REPLICATION).build();
    cluster.waitActive();
    hdfs=cluster.getFileSystem();
  }
  @After public void tearDown() throws Exception {
    if (cluster != null) {
      cluster.shutdown();
      cluster=null;
    }
  }
  @Test(timeout=600000) public void TestSnapshotWithInvalidName() throws Exception {
    Path file1=new Path(dir1,file1Name);
    DFSTestUtil.createFile(hdfs,file1,BLOCKSIZE,REPLICATION,SEED);
    hdfs.allowSnapshot(dir1);
    try {
      hdfs.createSnapshot(dir1,snapshot1);
    }
 catch (    RemoteException e) {
    }
  }
  @Test(timeout=60000) public void TestSnapshotWithInvalidName1() throws Exception {
    Path file1=new Path(dir1,file1Name);
    DFSTestUtil.createFile(hdfs,file1,BLOCKSIZE,REPLICATION,SEED);
    hdfs.allowSnapshot(dir1);
    try {
      hdfs.createSnapshot(dir1,snapshot2);
    }
 catch (    RemoteException e) {
    }
  }
}
