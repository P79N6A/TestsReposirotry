class TestServiceClient extends ServiceClient {
  @Override protected void serviceStart() throws Exception {
  }
  @Override protected void serviceStop() throws Exception {
  }
  @Override protected void serviceInit(  Configuration configuration) throws Exception {
  }
  @Override public int actionBuild(  Service service) throws YarnException, IOException {
    String userName=UserGroupInformation.getCurrentUser().getShortUserName();
    Set<String> services=savedServices.get(userName);
    if (services == null) {
      services=new HashSet<>();
      savedServices.put(userName,services);
    }
    if (services.contains(service.getName())) {
      String message="Failed to save service " + service.getName() + ", because it already exists.";
      throw new SliderException(SliderExitCodes.EXIT_INSTANCE_EXISTS,message);
    }
    services.add(service.getName());
    return 0;
  }
  @Override public ApplicationId actionStartAndGetId(  String serviceName) throws YarnException, IOException {
    String userName=UserGroupInformation.getCurrentUser().getShortUserName();
    Set<String> services=submittedServices.get(userName);
    if (services == null) {
      services=new HashSet<>();
      submittedServices.put(userName,services);
    }
    if (services.contains(serviceName)) {
      String message="Failed to create service " + serviceName + ", because it is already running.";
      throw new YarnException(message);
    }
    services.add(serviceName);
    return ApplicationId.newInstance(System.currentTimeMillis(),1);
  }
}
