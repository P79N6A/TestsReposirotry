private static class ReplicationToggler extends RepeatingTestThread {
  private final FileSystem fs;
  private final Path path;
  private final MiniDFSCluster cluster;
  ReplicationToggler(  TestContext ctx,  FileSystem fs,  Path p,  MiniDFSCluster cluster){
    super(ctx);
    this.fs=fs;
    this.path=p;
    this.cluster=cluster;
  }
  @Override public void doAnAction() throws Exception {
    fs.setReplication(path,(short)1);
    waitForReplicas(1);
    fs.setReplication(path,(short)2);
    waitForReplicas(2);
  }
  private void waitForReplicas(  final int replicas) throws Exception {
    try {
      GenericTestUtils.waitFor(new Supplier<Boolean>(){
        @Override public Boolean get(){
          try {
            cluster.waitActive();
            BlockLocation[] blocks=fs.getFileBlockLocations(path,0,10);
            Assert.assertEquals(1,blocks.length);
            return blocks[0].getHosts().length == replicas;
          }
 catch (          IOException e) {
            throw new RuntimeException(e);
          }
        }
      }
,100,60000);
    }
 catch (    TimeoutException te) {
      throw new IOException("Timed out waiting for " + replicas + " replicas on path "+ path);
    }
  }
  @Override public String toString(){
    return "Toggler for " + path;
  }
}
