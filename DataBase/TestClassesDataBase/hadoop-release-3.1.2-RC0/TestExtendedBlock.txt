public class TestExtendedBlock {
  static final String POOL_A="blockpool-a";
  static final String POOL_B="blockpool-b";
  static final Block BLOCK_1_GS1=new Block(1L,100L,1L);
  static final Block BLOCK_1_GS2=new Block(1L,100L,2L);
  static final Block BLOCK_2_GS1=new Block(2L,100L,1L);
  @Test public void testEquals(){
    assertEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1),new ExtendedBlock(POOL_A,BLOCK_1_GS1));
    assertNotEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1),new ExtendedBlock(POOL_B,BLOCK_1_GS1));
    assertNotEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1),new ExtendedBlock(POOL_A,BLOCK_2_GS1));
    assertEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1),new ExtendedBlock(POOL_A,BLOCK_1_GS2));
  }
  @Test public void testHashcode(){
    assertNotEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1).hashCode(),new ExtendedBlock(POOL_B,BLOCK_1_GS1).hashCode());
    assertNotEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1).hashCode(),new ExtendedBlock(POOL_A,BLOCK_2_GS1).hashCode());
    assertEquals(new ExtendedBlock(POOL_A,BLOCK_1_GS1).hashCode(),new ExtendedBlock(POOL_A,BLOCK_1_GS1).hashCode());
  }
  private static void assertNotEquals(  Object a,  Object b){
    assertFalse("expected not equal: '" + a + "' and '"+ b+ "'",a.equals(b));
  }
}
