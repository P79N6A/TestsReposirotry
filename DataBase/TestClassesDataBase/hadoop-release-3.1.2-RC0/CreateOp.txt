/** 
 * create file operation (without OverWrite) 
 */
class CreateOp extends AtMostOnceOp {
  private final String fileName;
  private HdfsFileStatus status;
  CreateOp(  DFSClient client,  String fileName){
    super("create",client);
    this.fileName=fileName;
  }
  @Override void prepare() throws Exception {
    final Path filePath=new Path(fileName);
    if (dfs.exists(filePath)) {
      dfs.delete(filePath,true);
    }
    final Path fileParent=filePath.getParent();
    if (!dfs.exists(fileParent)) {
      dfs.mkdirs(fileParent);
    }
  }
  @Override void invoke() throws Exception {
    EnumSet<CreateFlag> createFlag=EnumSet.of(CreateFlag.CREATE);
    this.status=client.getNamenode().create(fileName,FsPermission.getFileDefault(),client.getClientName(),new EnumSetWritable<CreateFlag>(createFlag),false,DataNodes,BlockSize,new CryptoProtocolVersion[]{CryptoProtocolVersion.ENCRYPTION_ZONES},null);
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    final Path filePath=new Path(fileName);
    boolean fileCreated=dfs.exists(filePath);
    for (int i=0; i < CHECKTIMES && !fileCreated; i++) {
      Thread.sleep(1000);
      fileCreated=dfs.exists(filePath);
    }
    return fileCreated;
  }
  @Override Object getResult(){
    return status;
  }
}
