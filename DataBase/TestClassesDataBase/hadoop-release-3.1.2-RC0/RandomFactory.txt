public static class RandomFactory extends RecordFactory {
  public int minkey;
  public int maxkey;
  public int minval;
  public int maxval;
  private final Random r=new Random();
  private static int nextRand(  Random r,  int max){
    return (int)Math.exp(r.nextDouble() * Math.log(max));
  }
  public void setConf(  Configuration conf){
    r.setSeed(conf.getLong("test.randomfactory.seed",0L));
    minkey=conf.getInt("test.randomfactory.minkey",0);
    maxkey=conf.getInt("test.randomfactory.maxkey",0) - minkey;
    minval=conf.getInt("test.randomfactory.minval",0);
    maxval=conf.getInt("test.randomfactory.maxval",0) - minval;
  }
  public static void setLengths(  Configuration conf,  Random r,  int max){
    int k1=nextRand(r,max);
    int k2=nextRand(r,max);
    if (k1 > k2) {
      final int tmp=k1;
      k1=k2;
      k2=k1;
    }
    int v1=nextRand(r,max);
    int v2=nextRand(r,max);
    if (v1 > v2) {
      final int tmp=v1;
      v1=v2;
      v2=v1;
    }
    setLengths(conf,k1,++k2,v1,++v2);
  }
  public static void setLengths(  Configuration conf,  int minkey,  int maxkey,  int minval,  int maxval){
    assert minkey < maxkey;
    assert minval < maxval;
    conf.setInt("test.randomfactory.minkey",minkey);
    conf.setInt("test.randomfactory.maxkey",maxkey);
    conf.setInt("test.randomfactory.minval",minval);
    conf.setInt("test.randomfactory.maxval",maxval);
    conf.setBoolean("test.disable.key.read",minkey == 0);
    conf.setBoolean("test.disable.val.read",minval == 0);
  }
  public int keyLen(  int i){
    return minkey + nextRand(r,maxkey - minkey);
  }
  public int valLen(  int i){
    return minval + nextRand(r,maxval - minval);
  }
}
