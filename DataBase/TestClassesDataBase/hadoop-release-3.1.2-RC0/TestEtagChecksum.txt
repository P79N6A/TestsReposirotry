/** 
 * Unit test of etag operations.
 */
public class TestEtagChecksum extends Assert {
  private final EtagChecksum empty1=tag("");
  private final EtagChecksum empty2=tag("");
  private final EtagChecksum valid1=tag("valid");
  private final EtagChecksum valid2=tag("valid");
  @Test public void testEmptyTagsEqual(){
    assertEquals(empty1,empty2);
  }
  @Test public void testEmptyTagRoundTrip() throws Throwable {
    assertEquals(empty1,roundTrip(empty1));
  }
  @Test public void testValidTagsEqual(){
    assertEquals(valid1,valid2);
  }
  @Test public void testValidTagRoundTrip() throws Throwable {
    assertEquals(valid1,roundTrip(valid1));
  }
  @Test public void testValidAndEmptyTagsDontMatch(){
    assertNotEquals(valid1,empty1);
    assertNotEquals(valid1,tag("other valid one"));
  }
  @Test public void testDifferentTagsDontMatch(){
    assertNotEquals(valid1,tag("other valid one"));
  }
  private EtagChecksum tag(  String t){
    return new EtagChecksum(t);
  }
  private EtagChecksum roundTrip(  EtagChecksum tag) throws IOException {
    try (DataOutputBuffer dob=new DataOutputBuffer();DataInputBuffer dib=new DataInputBuffer()){
      tag.write(dob);
      dib.reset(dob.getData(),dob.getLength());
      EtagChecksum t2=new EtagChecksum();
      t2.readFields(dib);
      return t2;
    }
   }
}
