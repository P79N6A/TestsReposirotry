public class TestTimelineReaderServer {
  @Test(timeout=60000) public void testStartStopServer() throws Exception {
    @SuppressWarnings("resource") TimelineReaderServer server=new TimelineReaderServer();
    Configuration config=new YarnConfiguration();
    config.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
    config.setFloat(YarnConfiguration.TIMELINE_SERVICE_VERSION,2.0f);
    config.set(YarnConfiguration.TIMELINE_SERVICE_READER_WEBAPP_ADDRESS,"localhost:0");
    config.setClass(YarnConfiguration.TIMELINE_SERVICE_READER_CLASS,FileSystemTimelineReaderImpl.class,TimelineReader.class);
    try {
      server.init(config);
      assertEquals(STATE.INITED,server.getServiceState());
      assertEquals(2,server.getServices().size());
      server.start();
      assertEquals(STATE.STARTED,server.getServiceState());
      server.stop();
      assertEquals(STATE.STOPPED,server.getServiceState());
    }
  finally {
      server.stop();
    }
  }
  @Test(timeout=60000,expected=YarnRuntimeException.class) public void testTimelineReaderServerWithInvalidTimelineReader(){
    Configuration conf=new YarnConfiguration();
    conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
    conf.setFloat(YarnConfiguration.TIMELINE_SERVICE_VERSION,2.0f);
    conf.set(YarnConfiguration.TIMELINE_SERVICE_READER_WEBAPP_ADDRESS,"localhost:0");
    conf.set(YarnConfiguration.TIMELINE_SERVICE_READER_CLASS,Object.class.getName());
    runTimelineReaderServerWithConfig(conf);
  }
  @Test(timeout=60000,expected=YarnRuntimeException.class) public void testTimelineReaderServerWithNonexistentTimelineReader(){
    String nonexistentTimelineReaderClass="org.apache.org.yarn.server." + "timelineservice.storage.XXXXXXXX";
    Configuration conf=new YarnConfiguration();
    conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
    conf.setFloat(YarnConfiguration.TIMELINE_SERVICE_VERSION,2.0f);
    conf.set(YarnConfiguration.TIMELINE_SERVICE_READER_WEBAPP_ADDRESS,"localhost:0");
    conf.set(YarnConfiguration.TIMELINE_SERVICE_READER_CLASS,nonexistentTimelineReaderClass);
    runTimelineReaderServerWithConfig(conf);
  }
  /** 
 * Run a TimelineReaderServer with a given configuration.
 * @param conf configuration to run TimelineReaderServer with
 */
  private static void runTimelineReaderServerWithConfig(  final Configuration conf){
    TimelineReaderServer server=new TimelineReaderServer();
    try {
      server.init(conf);
      server.start();
    }
  finally {
      server.stop();
    }
  }
}
