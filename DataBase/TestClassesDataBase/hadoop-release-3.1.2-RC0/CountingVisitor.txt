private static class CountingVisitor implements CacheVisitor {
  private final int expectedNumOutstandingMmaps;
  private final int expectedNumReplicas;
  private final int expectedNumEvictable;
  private final int expectedNumMmapedEvictable;
  CountingVisitor(  int expectedNumOutstandingMmaps,  int expectedNumReplicas,  int expectedNumEvictable,  int expectedNumMmapedEvictable){
    this.expectedNumOutstandingMmaps=expectedNumOutstandingMmaps;
    this.expectedNumReplicas=expectedNumReplicas;
    this.expectedNumEvictable=expectedNumEvictable;
    this.expectedNumMmapedEvictable=expectedNumMmapedEvictable;
  }
  @Override public void visit(  int numOutstandingMmaps,  Map<ExtendedBlockId,ShortCircuitReplica> replicas,  Map<ExtendedBlockId,InvalidToken> failedLoads,  LinkedMap evictable,  LinkedMap evictableMmapped){
    if (expectedNumOutstandingMmaps >= 0) {
      Assert.assertEquals(expectedNumOutstandingMmaps,numOutstandingMmaps);
    }
    if (expectedNumReplicas >= 0) {
      Assert.assertEquals(expectedNumReplicas,replicas.size());
    }
    if (expectedNumEvictable >= 0) {
      Assert.assertEquals(expectedNumEvictable,evictable.size());
    }
    if (expectedNumMmapedEvictable >= 0) {
      Assert.assertEquals(expectedNumMmapedEvictable,evictableMmapped.size());
    }
  }
}
