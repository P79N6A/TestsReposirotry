static class Summation2 extends Summation {
  Summation2(  ArithmeticProgression N,  ArithmeticProgression E){
    super(N,E);
  }
  final Montgomery2 m2=new Montgomery2();
  double compute_montgomery2(){
    long e=E.value;
    long n=N.value;
    double s=0;
    for (; e > E.limit; e+=E.delta) {
      m2.set(n);
      s=Modular.addMod(s,m2.mod2(e) / (double)n);
      n+=N.delta;
    }
    return s;
  }
  double compute_modBigInteger(){
    long e=E.value;
    long n=N.value;
    double s=0;
    for (; e > E.limit; e+=E.delta) {
      s=Modular.addMod(s,TestModular.modBigInteger(e,n) / (double)n);
      n+=N.delta;
    }
    return s;
  }
  double compute_modPow(){
    long e=E.value;
    long n=N.value;
    double s=0;
    for (; e > E.limit; e+=E.delta) {
      s=Modular.addMod(s,TWO.modPow(BigInteger.valueOf(e),BigInteger.valueOf(n)).doubleValue() / n);
      n+=N.delta;
    }
    return s;
  }
}
