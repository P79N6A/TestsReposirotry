public class TestMapFileOutputFormat {
  @SuppressWarnings("static-access") @Test public void testPartitionerShouldNotBeCalledWhenOneReducerIsPresent() throws Exception {
    MapFileOutputFormat outputFormat=new MapFileOutputFormat();
    Reader reader=Mockito.mock(Reader.class);
    Reader[] readers=new Reader[]{reader};
    outputFormat.getEntry(readers,new MyPartitioner(),new Text(),new Text());
    assertTrue(!MyPartitioner.isGetPartitionCalled());
  }
  @After public void tearDown() throws Exception {
    MyPartitioner.setGetPartitionCalled(false);
  }
private static class MyPartitioner extends Partitioner<WritableComparable,Writable> {
    private static boolean getPartitionCalled=false;
    public static boolean isGetPartitionCalled(){
      return getPartitionCalled;
    }
    @Override public int getPartition(    WritableComparable key,    Writable value,    int numPartitions){
      setGetPartitionCalled(true);
      return -1;
    }
    public static void setGetPartitionCalled(    boolean getPartitionCalled){
      MyPartitioner.getPartitionCalled=getPartitionCalled;
    }
  }
}
