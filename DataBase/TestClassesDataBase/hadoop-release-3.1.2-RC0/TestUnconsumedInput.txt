public class TestUnconsumedInput {
  protected final int EXPECTED_OUTPUT_SIZE=10000;
  protected File INPUT_FILE=new File("stream_uncinput_input.txt");
  protected File OUTPUT_DIR=new File("stream_uncinput_out");
  protected String input="roses.are.red\nviolets.are.blue\nbunnies.are.pink\n";
  protected String map=UtilTest.makeJavaCommand(OutputOnlyApp.class,new String[]{Integer.toString(EXPECTED_OUTPUT_SIZE)});
  private StreamJob job;
  public TestUnconsumedInput() throws IOException {
    UtilTest utilTest=new UtilTest(getClass().getName());
    utilTest.checkUserDir();
    utilTest.redirectIfAntJunit();
  }
  protected void createInput() throws IOException {
    DataOutputStream out=new DataOutputStream(new FileOutputStream(INPUT_FILE.getAbsoluteFile()));
    for (int i=0; i < 10000; ++i) {
      out.write(input.getBytes("UTF-8"));
    }
    out.close();
  }
  protected String[] genArgs(){
    return new String[]{"-input",INPUT_FILE.getAbsolutePath(),"-output",OUTPUT_DIR.getAbsolutePath(),"-mapper",map,"-reducer","org.apache.hadoop.mapred.lib.IdentityReducer","-numReduceTasks","0","-jobconf","mapreduce.task.files.preserve.failedtasks=true","-jobconf","stream.tmpdir=" + System.getProperty("test.build.data","/tmp")};
  }
  @Test public void testUnconsumedInput() throws Exception {
    String outFileName="part-00000";
    File outFile=null;
    try {
      try {
        FileUtil.fullyDelete(OUTPUT_DIR.getAbsoluteFile());
      }
 catch (      Exception e) {
      }
      createInput();
      Configuration conf=new Configuration();
      conf.set("stream.minRecWrittenToEnableSkip_","0");
      job=new StreamJob();
      job.setConf(conf);
      int exitCode=job.run(genArgs());
      assertEquals("Job failed",0,exitCode);
      outFile=new File(OUTPUT_DIR,outFileName).getAbsoluteFile();
      String output=StreamUtil.slurp(outFile);
      assertEquals("Output was truncated",EXPECTED_OUTPUT_SIZE,StringUtils.countMatches(output,"\t"));
    }
  finally {
      INPUT_FILE.delete();
      FileUtil.fullyDelete(OUTPUT_DIR.getAbsoluteFile());
    }
  }
}
