/** 
 * Test the ViewFsBaseTest using a viewfs with authority:  viewfs://mountTableName/ ie the authority is used to load a mount table. The authority name used is "default"
 */
public class TestViewFileSystemWithAuthorityLocalFileSystem extends ViewFileSystemBaseTest {
  URI schemeWithAuthority;
  @Override @Before public void setUp() throws Exception {
    fsTarget=FileSystem.getLocal(new Configuration());
    super.setUp();
    schemeWithAuthority=new URI(FsConstants.VIEWFS_SCHEME,"default","/",null,null);
    fsView=FileSystem.get(schemeWithAuthority,conf);
  }
  @Override @After public void tearDown() throws Exception {
    fsTarget.delete(fileSystemTestHelper.getTestRootPath(fsTarget),true);
    super.tearDown();
  }
  @Override @Test public void testBasicPaths(){
    Assert.assertEquals(schemeWithAuthority,fsView.getUri());
    Assert.assertEquals(fsView.makeQualified(new Path("/user/" + System.getProperty("user.name"))),fsView.getWorkingDirectory());
    Assert.assertEquals(fsView.makeQualified(new Path("/user/" + System.getProperty("user.name"))),fsView.getHomeDirectory());
    Assert.assertEquals(new Path("/foo/bar").makeQualified(schemeWithAuthority,null),fsView.makeQualified(new Path("/foo/bar")));
  }
}
