public class TestCompressorStream extends CompressorStream {
  private static FileOutputStream fop=null;
  private static File file=null;
static {
    try {
      file=new File("tmp.txt");
      fop=new FileOutputStream(file);
      if (!file.exists()) {
        file.createNewFile();
      }
    }
 catch (    IOException e) {
      System.out.println("Error while creating a new file " + e.getMessage());
    }
  }
  public TestCompressorStream(){
    super(fop);
  }
  /** 
 * Overriding  {@link CompressorStream#finish()} method in order to reproduce test case
 */
  public void finish() throws IOException {
    throw new IOException();
  }
  /** 
 * In  {@link CompressorStream#close()}, if  {@link CompressorStream#finish()} throws an IOEXception, outputStream object was not getting closed.
 */
  @Test public void testClose(){
    TestCompressorStream testCompressorStream=new TestCompressorStream();
    try {
      testCompressorStream.close();
    }
 catch (    IOException e) {
      System.out.println("Expected IOException");
    }
    Assert.assertTrue("closed shoud be true",((CompressorStream)testCompressorStream).closed);
    file.delete();
  }
}
