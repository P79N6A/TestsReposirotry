/** 
 * Unit test for ReplicasMap class
 */
public class TestReplicaMap {
  private final ReplicaMap map=new ReplicaMap(new AutoCloseableLock());
  private final String bpid="BP-TEST";
  private final Block block=new Block(1234,1234,1234);
  @Before public void setup(){
    map.add(bpid,new FinalizedReplica(block,null,null));
  }
  /** 
 * Test for ReplicasMap.get(Block) and ReplicasMap.get(long) tests
 */
  @Test public void testGet(){
    try {
      map.get(bpid,null);
      fail("Expected exception not thrown");
    }
 catch (    IllegalArgumentException expected) {
    }
    assertNotNull(map.get(bpid,block));
    Block b=new Block(block);
    b.setGenerationStamp(0);
    assertNull(map.get(bpid,b));
    b.setGenerationStamp(block.getGenerationStamp());
    b.setBlockId(0);
    assertNull(map.get(bpid,b));
    assertNotNull(map.get(bpid,block.getBlockId()));
    assertNull(map.get(bpid,0));
  }
  @Test public void testAdd(){
    try {
      map.add(bpid,null);
      fail("Expected exception not thrown");
    }
 catch (    IllegalArgumentException expected) {
    }
  }
  @Test public void testRemove(){
    try {
      map.remove(bpid,null);
      fail("Expected exception not thrown");
    }
 catch (    IllegalArgumentException expected) {
    }
    Block b=new Block(block);
    b.setGenerationStamp(0);
    assertNull(map.remove(bpid,b));
    b.setGenerationStamp(block.getGenerationStamp());
    b.setBlockId(0);
    assertNull(map.remove(bpid,b));
    assertNotNull(map.remove(bpid,block));
    assertNull(map.remove(bpid,0));
    map.add(bpid,new FinalizedReplica(block,null,null));
    assertNotNull(map.remove(bpid,block.getBlockId()));
  }
}
