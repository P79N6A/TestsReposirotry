/** 
 * A class used for testing cleanup of client side RPC resources.
 */
private static class StoppedRpcEngine implements RpcEngine {
  @Override public <T>ProtocolProxy<T> getProxy(  Class<T> protocol,  long clientVersion,  InetSocketAddress addr,  UserGroupInformation ticket,  Configuration conf,  SocketFactory factory,  int rpcTimeout,  RetryPolicy connectionRetryPolicy) throws IOException {
    return getProxy(protocol,clientVersion,addr,ticket,conf,factory,rpcTimeout,connectionRetryPolicy,null);
  }
  @SuppressWarnings("unchecked") @Override public <T>ProtocolProxy<T> getProxy(  Class<T> protocol,  long clientVersion,  InetSocketAddress addr,  UserGroupInformation ticket,  Configuration conf,  SocketFactory factory,  int rpcTimeout,  RetryPolicy connectionRetryPolicy,  AtomicBoolean fallbackToSimpleAuth) throws IOException {
    T proxy=(T)Proxy.newProxyInstance(protocol.getClassLoader(),new Class[]{protocol},new StoppedInvocationHandler());
    return new ProtocolProxy<T>(protocol,proxy,false);
  }
  @Override public org.apache.hadoop.ipc.RPC.Server getServer(  Class<?> protocol,  Object instance,  String bindAddress,  int port,  int numHandlers,  int numReaders,  int queueSizePerHandler,  boolean verbose,  Configuration conf,  SecretManager<? extends TokenIdentifier> secretManager,  String portRangeConfig) throws IOException {
    return null;
  }
  @Override public ProtocolProxy<ProtocolMetaInfoPB> getProtocolMetaInfoProxy(  ConnectionId connId,  Configuration conf,  SocketFactory factory) throws IOException {
    throw new UnsupportedOperationException("This proxy is not supported");
  }
}
