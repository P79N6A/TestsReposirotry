/** 
 * Waits on a  {@link CountDownLatch} before calling through to the method.
 */
private final class LatchAwaitingAnswer<T> implements Answer<T> {
  private final CountDownLatch latch;
  public LatchAwaitingAnswer(  CountDownLatch latch){
    this.latch=latch;
  }
  @Override @SuppressWarnings("unchecked") public T answer(  InvocationOnMock invocation) throws Throwable {
    LOG.info("Awaiting, remaining latch count is {}.",latch.getCount());
    latch.await();
    return (T)invocation.callRealMethod();
  }
}
