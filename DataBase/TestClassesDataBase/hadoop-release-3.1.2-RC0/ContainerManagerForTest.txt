private static class ContainerManagerForTest implements ContainerManagementProtocolClient {
  private CyclicBarrier startLaunchBarrier;
  private CyclicBarrier completeLaunchBarrier;
  ContainerManagerForTest(  CyclicBarrier startLaunchBarrier,  CyclicBarrier completeLaunchBarrier){
    this.startLaunchBarrier=startLaunchBarrier;
    this.completeLaunchBarrier=completeLaunchBarrier;
  }
  @Override public StartContainersResponse startContainers(  StartContainersRequest request) throws IOException {
    try {
      startLaunchBarrier.await();
      completeLaunchBarrier.await();
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
catch (    BrokenBarrierException e) {
      e.printStackTrace();
    }
    throw new IOException(new ContainerException("Force fail CM"));
  }
  @Override public StopContainersResponse stopContainers(  StopContainersRequest request) throws IOException {
    return null;
  }
  @Override public GetContainerStatusesResponse getContainerStatuses(  GetContainerStatusesRequest request) throws IOException {
    return null;
  }
  @Override @Deprecated public IncreaseContainersResourceResponse increaseContainersResource(  IncreaseContainersResourceRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public void close() throws IOException {
  }
  @Override public SignalContainerResponse signalToContainer(  SignalContainerRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public ResourceLocalizationResponse localize(  ResourceLocalizationRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public ReInitializeContainerResponse reInitializeContainer(  ReInitializeContainerRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public RestartContainerResponse restartContainer(  ContainerId containerId) throws YarnException, IOException {
    return null;
  }
  @Override public RollbackResponse rollbackLastReInitialization(  ContainerId containerId) throws YarnException, IOException {
    return null;
  }
  @Override public CommitResponse commitLastReInitialization(  ContainerId containerId) throws YarnException, IOException {
    return null;
  }
  @Override public ContainerUpdateResponse updateContainer(  ContainerUpdateRequest request) throws YarnException, IOException {
    return null;
  }
}
