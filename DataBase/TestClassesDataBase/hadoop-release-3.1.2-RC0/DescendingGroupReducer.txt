/** 
 * The reducer checks whether the input values are in descending order and whether they are correctly grouped by key (i.e. each call to reduce should have 5 values if the grouping is correct). 
 */
static class DescendingGroupReducer implements Reducer<IntWritable,IntWritable,IntWritable,Text> {
  public void configure(  JobConf job){
  }
  private int lastKey=Integer.MAX_VALUE;
  public void reduce(  IntWritable key,  Iterator<IntWritable> values,  OutputCollector<IntWritable,Text> out,  Reporter reporter) throws IOException {
    int currentKey=key.get();
    if (currentKey > lastKey) {
      fail("Keys not in sorted descending order");
    }
    lastKey=currentKey;
    IntWritable previous=new IntWritable(Integer.MAX_VALUE);
    int valueCount=0;
    while (values.hasNext()) {
      IntWritable current=values.next();
      if (current.compareTo(previous) > 0)       fail("Values generated by Mapper not in order");
      previous=current;
      ++valueCount;
    }
    if (valueCount != 5) {
      fail("Values not grouped by primary key");
    }
    out.collect(key,new Text("success"));
  }
  public void close(){
  }
}
