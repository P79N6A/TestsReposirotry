class TestNodeStatusUpdaterImpl4 extends MockNodeStatusUpdater {
  public TestNodeStatusUpdaterImpl4(  Context context,  Dispatcher dispatcher,  NodeHealthCheckerService healthChecker,  NodeManagerMetrics metrics){
    super(context,dispatcher,healthChecker,metrics);
  }
  @Override protected void rebootNodeStatusUpdaterAndRegisterWithRM(){
    try {
      try {
        List<ContainerId> containerIds=new ArrayList<>();
        ContainerId cId=TestContainerManager.createContainerId(0);
        containerIds.add(cId);
        GetContainerStatusesRequest gcsRequest=GetContainerStatusesRequest.newInstance(containerIds);
        ContainerStatus containerStatus=getContainerManager().getContainerStatuses(gcsRequest).getContainerStatuses().get(0);
        assertEquals(Resource.newInstance(1024,1),containerStatus.getCapability());
        updateBarrier.await();
        updateBarrier.await();
        super.rebootNodeStatusUpdaterAndRegisterWithRM();
        containerStatus=getContainerManager().getContainerStatuses(gcsRequest).getContainerStatuses().get(0);
        assertEquals(Resource.newInstance(4096,2),containerStatus.getCapability());
      }
 catch (      AssertionError ae) {
        ae.printStackTrace();
        assertionFailedInThread.set(true);
      }
 finally {
        syncBarrier.await();
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
