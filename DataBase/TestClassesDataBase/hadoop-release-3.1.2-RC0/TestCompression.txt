public class TestCompression {
  @BeforeClass public static void resetConfigBeforeAll(){
    Compression.Algorithm.LZO.conf.setBoolean("test.reload.lzo.codec",true);
  }
  @AfterClass public static void resetConfigAfterAll(){
    Compression.Algorithm.LZO.conf.setBoolean("test.reload.lzo.codec",false);
  }
  /** 
 * Regression test for HADOOP-11418. Verify we can set a LZO codec different from default LZO codec.
 */
  @Test public void testConfigureLZOCodec() throws IOException {
    String defaultCodec="org.apache.hadoop.io.compress.DefaultCodec";
    Compression.Algorithm.conf.set(Compression.Algorithm.CONF_LZO_CLASS,defaultCodec);
    assertEquals(defaultCodec,Compression.Algorithm.LZO.getCodec().getClass().getName());
  }
  @Test public void testMisconfiguredLZOCodec() throws Exception {
    String defaultCodec="org.apache.hadoop.io.compress.InvalidLzoCodec";
    Compression.Algorithm.conf.set(Compression.Algorithm.CONF_LZO_CLASS,defaultCodec);
    IOException ioEx=LambdaTestUtils.intercept(IOException.class,defaultCodec,() -> Compression.Algorithm.LZO.getCodec());
    if (!(ioEx.getCause() instanceof ClassNotFoundException)) {
      throw ioEx;
    }
  }
}
