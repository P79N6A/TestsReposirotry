/** 
 * modifyCachePool 
 */
class ModifyCachePoolOp extends AtMostOnceOp {
  final String pool;
  ModifyCachePoolOp(  DFSClient client,  String pool){
    super("modifyCachePool",client);
    this.pool=pool;
  }
  @Override void prepare() throws Exception {
    expectedUpdateCount++;
    client.addCachePool(new CachePoolInfo(pool).setLimit(10l));
  }
  @Override void invoke() throws Exception {
    expectedUpdateCount++;
    client.modifyCachePool(new CachePoolInfo(pool).setLimit(99l));
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    for (int i=0; i < CHECKTIMES; i++) {
      RemoteIterator<CachePoolEntry> iter=dfs.listCachePools();
      if (iter.hasNext() && iter.next().getInfo().getLimit() == 99) {
        return true;
      }
      Thread.sleep(1000);
    }
    return false;
  }
  @Override Object getResult(){
    return null;
  }
}
