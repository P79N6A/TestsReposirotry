/** 
 * This class tests hadoopStreaming in MapReduce local mode. It uses Hadoop Aggregate to count the numbers of word occurrences  in the input.
 */
public class TestStreamAggregate {
  protected File INPUT_FILE=new File("stream_aggregate_input.txt");
  protected File OUTPUT_DIR=new File("stream_aggregate_out");
  protected String input="roses are red\nviolets are blue\nbunnies are pink\n";
  protected String map=UtilTest.makeJavaCommand(StreamAggregate.class,new String[]{".","\\n"});
  protected String outputExpect="are\t3\nblue\t1\nbunnies\t1\npink\t1\nred\t1\nroses\t1\nviolets\t1\n";
  private StreamJob job;
  public TestStreamAggregate() throws IOException {
    UtilTest utilTest=new UtilTest(getClass().getName());
    utilTest.checkUserDir();
    utilTest.redirectIfAntJunit();
  }
  protected void createInput() throws IOException {
    DataOutputStream out=new DataOutputStream(new FileOutputStream(INPUT_FILE.getAbsoluteFile()));
    out.write(input.getBytes("UTF-8"));
    out.close();
  }
  protected String[] genArgs(){
    return new String[]{"-input",INPUT_FILE.getAbsolutePath(),"-output",OUTPUT_DIR.getAbsolutePath(),"-mapper",map,"-reducer","aggregate","-jobconf",MRJobConfig.PRESERVE_FAILED_TASK_FILES + "=true","-jobconf","stream.tmpdir=" + System.getProperty("test.build.data","/tmp")};
  }
  @Test public void testCommandLine() throws Exception {
    try {
      try {
        FileUtil.fullyDelete(OUTPUT_DIR.getAbsoluteFile());
      }
 catch (      Exception e) {
      }
      createInput();
      boolean mayExit=false;
      job=new StreamJob(genArgs(),mayExit);
      job.go();
      File outFile=new File(OUTPUT_DIR,"part-00000").getAbsoluteFile();
      String output=StreamUtil.slurp(outFile);
      outFile.delete();
      System.err.println("outEx1=" + outputExpect);
      System.err.println("  out1=" + output);
      assertEquals(outputExpect,output);
    }
  finally {
      INPUT_FILE.delete();
      FileUtil.fullyDelete(OUTPUT_DIR.getAbsoluteFile());
    }
  }
  public static void main(  String[] args) throws Exception {
    new TestStreaming().testCommandLine();
  }
}
