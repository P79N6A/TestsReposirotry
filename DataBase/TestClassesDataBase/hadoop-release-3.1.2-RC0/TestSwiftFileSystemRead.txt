/** 
 * Test filesystem read operations
 */
public class TestSwiftFileSystemRead extends SwiftFileSystemBaseTest {
  /** 
 * Read past the end of a file: expect the operation to fail
 * @throws IOException
 */
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testOverRead() throws IOException {
    final String message="message";
    final Path filePath=new Path("/test/file.txt");
    writeTextFile(fs,filePath,message,false);
    try {
      readBytesToString(fs,filePath,20);
      fail("expected an exception");
    }
 catch (    EOFException e) {
    }
  }
  /** 
 * Read and write some JSON
 * @throws IOException
 */
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testRWJson() throws IOException {
    final String message="{" + " 'json': { 'i':43, 'b':true}," + " 's':'string'"+ "}";
    final Path filePath=new Path("/test/file.json");
    writeTextFile(fs,filePath,message,false);
    String readJson=readBytesToString(fs,filePath,message.length());
    assertEquals(message,readJson);
    FileStatus status=fs.getFileStatus(filePath);
    BlockLocation[] locations=fs.getFileBlockLocations(status,0,10);
  }
  /** 
 * Read and write some XML
 * @throws IOException
 */
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testRWXML() throws IOException {
    final String message="<x>" + " <json i='43' 'b'=true/>" + " string"+ "</x>";
    final Path filePath=new Path("/test/file.xml");
    writeTextFile(fs,filePath,message,false);
    String read=readBytesToString(fs,filePath,message.length());
    assertEquals(message,read);
  }
}
