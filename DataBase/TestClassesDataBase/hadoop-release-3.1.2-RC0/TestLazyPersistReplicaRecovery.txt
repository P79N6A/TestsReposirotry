public class TestLazyPersistReplicaRecovery extends LazyPersistTestCase {
  @Test public void testDnRestartWithSavedReplicas() throws IOException, InterruptedException, TimeoutException {
    getClusterBuilder().build();
    final String METHOD_NAME=GenericTestUtils.getMethodName();
    Path path1=new Path("/" + METHOD_NAME + ".01.dat");
    makeTestFile(path1,BLOCK_SIZE,true);
    ensureFileReplicasOnStorageType(path1,RAM_DISK);
    Thread.sleep(3 * LAZY_WRITER_INTERVAL_SEC * 1000);
    ensureFileReplicasOnStorageType(path1,RAM_DISK);
    LOG.info("Restarting the DataNode");
    cluster.restartDataNode(0,true);
    cluster.waitActive();
    triggerBlockReport();
    ensureFileReplicasOnStorageType(path1,DEFAULT);
  }
  @Test public void testDnRestartWithUnsavedReplicas() throws IOException, InterruptedException, TimeoutException {
    getClusterBuilder().build();
    FsDatasetTestUtil.stopLazyWriter(cluster.getDataNodes().get(0));
    final String METHOD_NAME=GenericTestUtils.getMethodName();
    Path path1=new Path("/" + METHOD_NAME + ".01.dat");
    makeTestFile(path1,BLOCK_SIZE,true);
    ensureFileReplicasOnStorageType(path1,RAM_DISK);
    LOG.info("Restarting the DataNode");
    cluster.restartDataNode(0,true);
    cluster.waitActive();
    ensureFileReplicasOnStorageType(path1,RAM_DISK);
  }
}
