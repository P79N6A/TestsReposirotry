/** 
 * test for NvidiaDockerV2CommandPlugin.
 */
public class TestNvidiaDockerV2CommandPlugin {
  private Map<String,List<String>> copyCommandLine(  Map<String,List<String>> map){
    Map<String,List<String>> ret=new HashMap<>();
    for (    Map.Entry<String,List<String>> entry : map.entrySet()) {
      ret.put(entry.getKey(),new ArrayList<>(entry.getValue()));
    }
    return ret;
  }
  private boolean commandlinesEquals(  Map<String,List<String>> cli1,  Map<String,List<String>> cli2){
    if (!Sets.symmetricDifference(cli1.keySet(),cli2.keySet()).isEmpty()) {
      return false;
    }
    for (    String key : cli1.keySet()) {
      List<String> value1=cli1.get(key);
      List<String> value2=cli2.get(key);
      if (!value1.equals(value2)) {
        return false;
      }
    }
    return true;
  }
static class MyNvidiaDockerV2CommandPlugin extends NvidiaDockerV2CommandPlugin {
    private boolean requestsGpu=false;
    MyNvidiaDockerV2CommandPlugin(){
    }
    public void setRequestsGpu(    boolean r){
      requestsGpu=r;
    }
    @Override protected boolean requestsGpu(    Container container){
      return requestsGpu;
    }
  }
  @Test public void testPlugin() throws Exception {
    DockerRunCommand runCommand=new DockerRunCommand("container_1","user","fakeimage");
    Map<String,List<String>> originalCommandline=copyCommandLine(runCommand.getDockerCommandWithArguments());
    MyNvidiaDockerV2CommandPlugin commandPlugin=new MyNvidiaDockerV2CommandPlugin();
    Container nmContainer=mock(Container.class);
    commandPlugin.updateDockerRunCommand(runCommand,nmContainer);
    Assert.assertTrue(commandlinesEquals(originalCommandline,runCommand.getDockerCommandWithArguments()));
    ResourceMappings resourceMappings=new ResourceMappings();
    when(nmContainer.getResourceMappings()).thenReturn(resourceMappings);
    commandPlugin.updateDockerRunCommand(runCommand,nmContainer);
    Assert.assertTrue(commandlinesEquals(originalCommandline,runCommand.getDockerCommandWithArguments()));
    ResourceMappings.AssignedResources assigned=new ResourceMappings.AssignedResources();
    assigned.updateAssignedResources(ImmutableList.of(new GpuDevice(0,0),new GpuDevice(1,1)));
    resourceMappings.addAssignedResources(ResourceInformation.GPU_URI,assigned);
    commandPlugin.setRequestsGpu(true);
    commandPlugin.updateDockerRunCommand(runCommand,nmContainer);
    Map<String,List<String>> newCommandLine=runCommand.getDockerCommandWithArguments();
    Assert.assertFalse(commandlinesEquals(originalCommandline,newCommandLine));
    Assert.assertTrue(runCommand.getEnv().get("NVIDIA_VISIBLE_DEVICES").equals("0,1"));
    Assert.assertTrue(newCommandLine.containsKey("runtime"));
  }
}
