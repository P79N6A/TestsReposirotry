public class TestDBOutputFormat {
  private String[] fieldNames=new String[]{"id","name","value"};
  private String[] nullFieldNames=new String[]{null,null,null};
  private String expected="INSERT INTO hadoop_output " + "(id,name,value) VALUES (?,?,?);";
  private String nullExpected="INSERT INTO hadoop_output VALUES (?,?,?);";
  private DBOutputFormat<DBWritable,NullWritable> format=new DBOutputFormat<DBWritable,NullWritable>();
  @Test public void testConstructQuery(){
    String actual=format.constructQuery("hadoop_output",fieldNames);
    assertEquals(expected,actual);
    actual=format.constructQuery("hadoop_output",nullFieldNames);
    assertEquals(nullExpected,actual);
  }
  @Test public void testDB2ConstructQuery(){
    String db2expected=StringUtils.removeEnd(expected,";");
    String db2nullExpected=StringUtils.removeEnd(nullExpected,";");
    try {
      Class<?> clazz=this.format.getClass();
      Field field=clazz.getDeclaredField("dbProductName");
      field.setAccessible(true);
      field.set(format,"DB2");
    }
 catch (    IllegalAccessException|NoSuchFieldException e) {
      fail(e.getMessage());
    }
    String actual=format.constructQuery("hadoop_output",fieldNames);
    assertEquals(db2expected,actual);
    actual=format.constructQuery("hadoop_output",nullFieldNames);
    assertEquals(db2nullExpected,actual);
  }
  @Test public void testORACLEConstructQuery(){
    String oracleExpected=StringUtils.removeEnd(expected,";");
    String oracleNullExpected=StringUtils.removeEnd(nullExpected,";");
    try {
      Class<?> clazz=this.format.getClass();
      Field field=clazz.getDeclaredField("dbProductName");
      field.setAccessible(true);
      field.set(format,"ORACLE");
    }
 catch (    IllegalAccessException|NoSuchFieldException e) {
      fail(e.getMessage());
    }
    String actual=format.constructQuery("hadoop_output",fieldNames);
    assertEquals(oracleExpected,actual);
    actual=format.constructQuery("hadoop_output",nullFieldNames);
    assertEquals(oracleNullExpected,actual);
  }
  @Test public void testSetOutput() throws IOException {
    Job job=Job.getInstance(new Configuration());
    DBOutputFormat.setOutput(job,"hadoop_output",fieldNames);
    DBConfiguration dbConf=new DBConfiguration(job.getConfiguration());
    String actual=format.constructQuery(dbConf.getOutputTableName(),dbConf.getOutputFieldNames());
    assertEquals(expected,actual);
    job=Job.getInstance(new Configuration());
    dbConf=new DBConfiguration(job.getConfiguration());
    DBOutputFormat.setOutput(job,"hadoop_output",nullFieldNames.length);
    assertNull(dbConf.getOutputFieldNames());
    assertEquals(nullFieldNames.length,dbConf.getOutputFieldCount());
    actual=format.constructQuery(dbConf.getOutputTableName(),new String[dbConf.getOutputFieldCount()]);
    assertEquals(nullExpected,actual);
  }
}
