private static class Stats {
  private final String fileName;
  private final boolean dropped[]=new boolean[MAX_TEST_FILE_LEN];
  Stats(  String fileName){
    this.fileName=fileName;
  }
  synchronized void fadvise(  int offset,  int len,  int flags){
    LOG.debug("got fadvise(offset={}, len={}, flags={})",offset,len,flags);
    if (flags == POSIX_FADV_DONTNEED) {
      for (int i=0; i < len; i++) {
        dropped[(offset + i)]=true;
      }
    }
  }
  synchronized void assertNotDroppedInRange(  int start,  int end){
    for (int i=start; i < end; i++) {
      if (dropped[i]) {
        throw new RuntimeException("in file " + fileName + ", we "+ "dropped the cache at offset "+ i);
      }
    }
  }
  synchronized void assertDroppedInRange(  int start,  int end){
    for (int i=start; i < end; i++) {
      if (!dropped[i]) {
        throw new RuntimeException("in file " + fileName + ", we "+ "did not drop the cache at offset "+ i);
      }
    }
  }
  synchronized void clear(){
    Arrays.fill(dropped,false);
  }
}
