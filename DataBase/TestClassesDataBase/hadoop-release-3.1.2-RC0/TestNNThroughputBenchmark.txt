public class TestNNThroughputBenchmark {
  @BeforeClass public static void setUp(){
    ExitUtil.disableSystemExit();
  }
  @After public void cleanUp(){
    FileUtil.fullyDeleteContents(new File(MiniDFSCluster.getBaseDirectory()));
  }
  /** 
 * This test runs all benchmarks defined in  {@link NNThroughputBenchmark}.
 */
  @Test public void testNNThroughput() throws Exception {
    Configuration conf=new HdfsConfiguration();
    File nameDir=new File(MiniDFSCluster.getBaseDirectory(),"name");
    conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,nameDir.getAbsolutePath());
    DFSTestUtil.formatNameNode(conf);
    NNThroughputBenchmark.runBenchmark(conf,new String[]{"-op","all"});
  }
  /** 
 * This test runs all benchmarks defined in  {@link NNThroughputBenchmark}, with explicit local -fs option.
 */
  @Test(timeout=120000) public void testNNThroughputWithFsOption() throws Exception {
    Configuration conf=new HdfsConfiguration();
    File nameDir=new File(MiniDFSCluster.getBaseDirectory(),"name");
    conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,nameDir.getAbsolutePath());
    DFSTestUtil.formatNameNode(conf);
    NNThroughputBenchmark.runBenchmark(conf,new String[]{"-fs","file:///","-op","all"});
  }
  /** 
 * This test runs  {@link NNThroughputBenchmark} against a mini DFS cluster.
 */
  @Test(timeout=120000) public void testNNThroughputAgainstRemoteNN() throws Exception {
    final Configuration conf=new HdfsConfiguration();
    conf.setInt(DFSConfigKeys.DFS_NAMENODE_MIN_BLOCK_SIZE_KEY,16);
    MiniDFSCluster cluster=null;
    try {
      cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).build();
      cluster.waitActive();
      final Configuration benchConf=new HdfsConfiguration();
      FileSystem.setDefaultUri(benchConf,cluster.getURI());
      NNThroughputBenchmark.runBenchmark(benchConf,new String[]{"-op","all"});
    }
  finally {
      if (cluster != null) {
        cluster.shutdown();
      }
    }
  }
  /** 
 * This test runs  {@link NNThroughputBenchmark} against a mini DFS clusterwith explicit -fs option.
 */
  @Test(timeout=120000) public void testNNThroughputRemoteAgainstNNWithFsOption() throws Exception {
    final Configuration conf=new HdfsConfiguration();
    conf.setInt(DFSConfigKeys.DFS_NAMENODE_MIN_BLOCK_SIZE_KEY,16);
    MiniDFSCluster cluster=null;
    try {
      cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).build();
      cluster.waitActive();
      NNThroughputBenchmark.runBenchmark(new HdfsConfiguration(),new String[]{"-fs",cluster.getURI().toString(),"-op","all"});
    }
  finally {
      if (cluster != null) {
        cluster.shutdown();
      }
    }
  }
}
