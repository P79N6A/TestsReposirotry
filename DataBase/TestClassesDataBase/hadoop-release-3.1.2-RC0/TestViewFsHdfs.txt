public class TestViewFsHdfs extends ViewFsBaseTest {
  private static MiniDFSCluster cluster;
  private static final HdfsConfiguration CONF=new HdfsConfiguration();
  private static FileContext fc;
  @Override protected FileContextTestHelper createFileContextHelper(){
    return new FileContextTestHelper("/tmp/TestViewFsHdfs");
  }
  @BeforeClass public static void clusterSetupAtBegining() throws IOException, LoginException, URISyntaxException {
    SupportsBlocks=true;
    CONF.setBoolean(DFSConfigKeys.DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY,true);
    cluster=new MiniDFSCluster.Builder(CONF).numDataNodes(2).build();
    cluster.waitClusterUp();
    fc=FileContext.getFileContext(cluster.getURI(0),CONF);
    Path defaultWorkingDirectory=fc.makeQualified(new Path("/user/" + UserGroupInformation.getCurrentUser().getShortUserName()));
    fc.mkdir(defaultWorkingDirectory,FileContext.DEFAULT_PERM,true);
  }
  @AfterClass public static void ClusterShutdownAtEnd() throws Exception {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
  @Override @Before public void setUp() throws Exception {
    fcTarget=fc;
    super.setUp();
  }
  /** 
 * This overrides the default implementation since hdfs does have delegation tokens.
 */
  @Override int getExpectedDelegationTokenCount(){
    return 8;
  }
}
