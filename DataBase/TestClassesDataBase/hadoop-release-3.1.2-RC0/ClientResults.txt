/** 
 * Results accrued during mock runs. This data is serialized in MR Tests and read back in in the test runner
 */
public static class ClientResults implements Serializable {
  private static final long serialVersionUID=-3137637327090709905L;
  private final Map<String,InitiateMultipartUploadRequest> requests=Maps.newHashMap();
  private final List<String> uploads=Lists.newArrayList();
  private final List<UploadPartRequest> parts=Lists.newArrayList();
  private final Map<String,List<String>> tagsByUpload=Maps.newHashMap();
  private final List<CompleteMultipartUploadRequest> commits=Lists.newArrayList();
  private final List<AbortMultipartUploadRequest> aborts=Lists.newArrayList();
  private final Map<String,String> activeUploads=Maps.newHashMap();
  private final List<DeleteObjectRequest> deletes=Lists.newArrayList();
  public Map<String,InitiateMultipartUploadRequest> getRequests(){
    return requests;
  }
  public List<String> getUploads(){
    return uploads;
  }
  public List<UploadPartRequest> getParts(){
    return parts;
  }
  public Map<String,List<String>> getTagsByUpload(){
    return tagsByUpload;
  }
  public List<CompleteMultipartUploadRequest> getCommits(){
    return commits;
  }
  public List<AbortMultipartUploadRequest> getAborts(){
    return aborts;
  }
  public List<DeleteObjectRequest> getDeletes(){
    return deletes;
  }
  public void resetDeletes(){
    deletes.clear();
  }
  public void resetUploads(){
    uploads.clear();
    activeUploads.clear();
  }
  public void resetCommits(){
    commits.clear();
  }
  public void resetRequests(){
    requests.clear();
  }
  @Override public String toString(){
    final StringBuilder sb=new StringBuilder(super.toString());
    sb.append("{ requests=").append(requests.size());
    sb.append(", uploads=").append(uploads.size());
    sb.append(", parts=").append(parts.size());
    sb.append(", tagsByUpload=").append(tagsByUpload.size());
    sb.append(", commits=").append(commits.size());
    sb.append(", aborts=").append(aborts.size());
    sb.append(", deletes=").append(deletes.size());
    sb.append('}');
    return sb.toString();
  }
}
