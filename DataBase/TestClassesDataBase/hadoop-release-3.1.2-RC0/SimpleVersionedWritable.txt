/** 
 * Example class used in test cases below. 
 */
public static class SimpleVersionedWritable extends VersionedWritable {
  private static final Random RANDOM=new Random();
  int state=RANDOM.nextInt();
  private static byte VERSION=1;
  @Override public byte getVersion(){
    return VERSION;
  }
  @Override public void write(  DataOutput out) throws IOException {
    super.write(out);
    out.writeInt(state);
  }
  @Override public void readFields(  DataInput in) throws IOException {
    super.readFields(in);
    this.state=in.readInt();
  }
  public static SimpleVersionedWritable read(  DataInput in) throws IOException {
    SimpleVersionedWritable result=new SimpleVersionedWritable();
    result.readFields(in);
    return result;
  }
  /** 
 * Required by test code, below. 
 */
  @Override public boolean equals(  Object o){
    if (!(o instanceof SimpleVersionedWritable))     return false;
    SimpleVersionedWritable other=(SimpleVersionedWritable)o;
    return this.state == other.state;
  }
}
