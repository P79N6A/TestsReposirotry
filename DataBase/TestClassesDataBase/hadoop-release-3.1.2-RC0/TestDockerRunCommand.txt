/** 
 * Tests the docker run command and its command line arguments.
 */
public class TestDockerRunCommand {
  private DockerRunCommand dockerRunCommand;
  private static final String CONTAINER_NAME="foo";
  private static final String USER_ID="user_id";
  private static final String IMAGE_NAME="image_name";
  private static final String CLIENT_CONFIG_PATH="/path/to/client.json";
  @Before public void setUp() throws Exception {
    dockerRunCommand=new DockerRunCommand(CONTAINER_NAME,USER_ID,IMAGE_NAME);
  }
  @Test public void testGetCommandOption(){
    assertEquals("run",dockerRunCommand.getCommandOption());
  }
  @Test public void testCommandArguments(){
    String sourceDevice="source";
    String destDevice="dest";
    dockerRunCommand.addDevice(sourceDevice,destDevice);
    List<String> commands=new ArrayList<>();
    commands.add("launch_command");
    dockerRunCommand.setOverrideCommandWithArgs(commands);
    dockerRunCommand.removeContainerOnExit();
    dockerRunCommand.addTmpfsMount("/run");
    String portsMapping="127.0.0.1:8080:80,1234:1234,:2222";
    for (    String mapping : portsMapping.split(",")) {
      dockerRunCommand.addPortsMapping(mapping);
    }
    dockerRunCommand.addRuntime("nvidia");
    assertEquals("run",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("docker-command")));
    assertEquals("foo",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("name")));
    assertEquals("user_id",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("user")));
    assertEquals("image_name",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("image")));
    assertEquals("source:dest",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("devices")));
    assertEquals("true",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("rm")));
    assertEquals("launch_command",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("launch-command")));
    assertEquals("/run",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("tmpfs")));
    assertEquals("127.0.0.1:8080:80,1234:1234,:2222",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("ports-mapping")));
    assertEquals("nvidia",StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("runtime")));
    assertEquals(10,dockerRunCommand.getDockerCommandWithArguments().size());
  }
  @Test public void testSetClientConfigDir(){
    dockerRunCommand.setClientConfigDir(CLIENT_CONFIG_PATH);
    assertEquals(CLIENT_CONFIG_PATH,StringUtils.join(",",dockerRunCommand.getDockerCommandWithArguments().get("docker-config")));
  }
}
