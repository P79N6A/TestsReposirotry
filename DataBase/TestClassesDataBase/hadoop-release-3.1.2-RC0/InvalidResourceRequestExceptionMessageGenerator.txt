private static class InvalidResourceRequestExceptionMessageGenerator {
  private StringBuilder sb;
  private Resource requestedResource;
  private Resource availableAllocation;
  private Resource configuredMaxAllowedAllocation;
  private String resourceType;
  InvalidResourceRequestExceptionMessageGenerator(  StringBuilder sb){
    this.sb=sb;
  }
  public static InvalidResourceRequestExceptionMessageGenerator create(){
    return new InvalidResourceRequestExceptionMessageGenerator(new StringBuilder());
  }
  InvalidResourceRequestExceptionMessageGenerator withRequestedResource(  Resource r){
    this.requestedResource=r;
    return this;
  }
  InvalidResourceRequestExceptionMessageGenerator withRequestedResourceType(  String rt){
    this.resourceType=rt;
    return this;
  }
  InvalidResourceRequestExceptionMessageGenerator withAvailableAllocation(  Resource r){
    this.availableAllocation=r;
    return this;
  }
  InvalidResourceRequestExceptionMessageGenerator withMaxAllocation(  Resource r){
    this.configuredMaxAllowedAllocation=r;
    return this;
  }
  public String build(){
    return sb.append("Invalid resource request, requested resource type=[").append(resourceType).append("]").append(" < 0 or greater than maximum allowed allocation. ").append("Requested resource=").append(requestedResource).append(", ").append("maximum allowed allocation=").append(availableAllocation).append(", please note that maximum allowed allocation is calculated " + "by scheduler based on maximum resource of " + "registered NodeManagers, which might be less than "+ "configured maximum allocation=").append(configuredMaxAllowedAllocation).toString();
  }
}
