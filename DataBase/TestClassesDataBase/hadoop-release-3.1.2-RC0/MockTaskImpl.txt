private class MockTaskImpl extends TaskImpl {
  private int taskAttemptCounter=0;
  TaskType taskType;
  public MockTaskImpl(  JobId jobId,  int partition,  EventHandler eventHandler,  Path remoteJobConfFile,  JobConf conf,  TaskAttemptListener taskAttemptListener,  Token<JobTokenIdentifier> jobToken,  Credentials credentials,  Clock clock,  int startCount,  MRAppMetrics metrics,  AppContext appContext,  TaskType taskType){
    super(jobId,taskType,partition,eventHandler,remoteJobConfFile,conf,taskAttemptListener,jobToken,credentials,clock,startCount,metrics,appContext);
    this.taskType=taskType;
  }
  @Override public TaskType getType(){
    return taskType;
  }
  @Override protected TaskAttemptImpl createAttempt(){
    MockTaskAttemptImpl attempt=new MockTaskAttemptImpl(getID(),++taskAttemptCounter,eventHandler,taskAttemptListener,remoteJobConfFile,partition,conf,jobToken,credentials,clock,appContext,taskType);
    taskAttempts.add(attempt);
    return attempt;
  }
  @Override protected int getMaxAttempts(){
    return 100;
  }
  @Override protected void internalError(  TaskEventType type){
    super.internalError(type);
    fail("Internal error: " + type);
  }
}
