private class MyNodeManager2 extends NodeManager {
  public boolean isStopped=false;
  private NodeStatusUpdater nodeStatusUpdater;
  private CyclicBarrier syncBarrier;
  private Configuration conf;
  public MyNodeManager2(  CyclicBarrier syncBarrier,  Configuration conf){
    this.syncBarrier=syncBarrier;
    this.conf=conf;
  }
  @Override protected NodeStatusUpdater createNodeStatusUpdater(  Context context,  Dispatcher dispatcher,  NodeHealthCheckerService healthChecker){
    nodeStatusUpdater=new MyNodeStatusUpdater5(context,dispatcher,healthChecker,metrics,conf);
    return nodeStatusUpdater;
  }
  @Override protected void serviceStop() throws Exception {
    syncBarrier.await(10000,TimeUnit.MILLISECONDS);
    System.out.println("Called stooppppp");
    super.serviceStop();
    isStopped=true;
    ConcurrentMap<ApplicationId,Application> applications=getNMContext().getApplications();
    if (!applications.isEmpty()) {
      assertionFailedInThread.set(true);
    }
    syncBarrier.await(10000,TimeUnit.MILLISECONDS);
  }
}
