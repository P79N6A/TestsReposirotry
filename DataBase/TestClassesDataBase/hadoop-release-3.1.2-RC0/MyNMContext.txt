private class MyNMContext extends NMContext {
  public MyNMContext(  NMContainerTokenSecretManager containerTokenSecretManager,  NMTokenSecretManagerInNM nmTokenSecretManager,  Configuration conf){
    super(containerTokenSecretManager,nmTokenSecretManager,null,null,new NMNullStateStoreService(),false,conf);
  }
  @Override public ConcurrentMap<ContainerId,Container> getContainers(){
    if (heartBeatID == 0) {
      return containers;
    }
 else     if (heartBeatID == 1) {
      ContainerStatus containerStatus2=createContainerStatus(2,ContainerState.RUNNING);
      putMockContainer(containerStatus2);
      ContainerStatus containerStatus3=createContainerStatus(3,ContainerState.COMPLETE);
      putMockContainer(containerStatus3);
      return containers;
    }
 else     if (heartBeatID == 2) {
      ContainerStatus containerStatus4=createContainerStatus(4,ContainerState.RUNNING);
      putMockContainer(containerStatus4);
      ContainerStatus containerStatus5=createContainerStatus(5,ContainerState.COMPLETE);
      putMockContainer(containerStatus5);
      return containers;
    }
 else     if (heartBeatID == 3 || heartBeatID == 4) {
      return containers;
    }
 else {
      containers.clear();
      return containers;
    }
  }
  private void putMockContainer(  ContainerStatus containerStatus){
    Container container=getMockContainer(containerStatus);
    containers.put(containerStatus.getContainerId(),container);
    applications.putIfAbsent(containerStatus.getContainerId().getApplicationAttemptId().getApplicationId(),mock(Application.class));
  }
}
