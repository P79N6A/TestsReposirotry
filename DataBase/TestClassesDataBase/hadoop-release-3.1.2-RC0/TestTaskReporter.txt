private class TestTaskReporter implements Reporter {
  private int recordNum=0;
  private String status=null;
  private Counters counters=new Counters();
  private InputSplit split=new FakeSplit();
  @Override public void progress(){
    recordNum++;
  }
  @Override public void setStatus(  String status){
    this.status=status;
  }
  public String getStatus(){
    return this.status;
  }
  public Counters.Counter getCounter(  String group,  String name){
    Counters.Counter counter=null;
    if (counters != null) {
      counter=counters.findCounter(group,name);
      if (counter == null) {
        Group grp=counters.addGroup(group,group);
        counter=grp.addCounter(name,name,10);
      }
    }
    return counter;
  }
  public Counters.Counter getCounter(  Enum<?> name){
    return counters == null ? null : counters.findCounter(name);
  }
  public void incrCounter(  Enum<?> key,  long amount){
    if (counters != null) {
      counters.incrCounter(key,amount);
    }
  }
  public void incrCounter(  String group,  String counter,  long amount){
    if (counters != null) {
      counters.incrCounter(group,counter,amount);
    }
  }
  @Override public InputSplit getInputSplit() throws UnsupportedOperationException {
    return split;
  }
  @Override public float getProgress(){
    return recordNum;
  }
}
