public static class MockRMWithAMS extends MockRMWithCustomAMLauncher {
  public MockRMWithAMS(  Configuration conf,  ContainerManagementProtocol containerManager){
    super(conf,containerManager);
  }
  @Override protected void doSecureLogin() throws IOException {
  }
  @Override protected ApplicationMasterService createApplicationMasterService(){
    return new ApplicationMasterService(getRMContext(),this.scheduler);
  }
  @SuppressWarnings("unchecked") public static Token<? extends TokenIdentifier> setupAndReturnAMRMToken(  InetSocketAddress rmBindAddress,  Collection<Token<? extends TokenIdentifier>> allTokens){
    for (    Token<? extends TokenIdentifier> token : allTokens) {
      if (token.getKind().equals(AMRMTokenIdentifier.KIND_NAME)) {
        SecurityUtil.setTokenService(token,rmBindAddress);
        return (Token<AMRMTokenIdentifier>)token;
      }
    }
    return null;
  }
}
