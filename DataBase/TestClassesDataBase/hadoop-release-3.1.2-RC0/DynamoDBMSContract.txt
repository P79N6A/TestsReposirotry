/** 
 * Each contract has its own S3AFileSystem and DynamoDBMetadataStore objects.
 */
private static class DynamoDBMSContract extends AbstractMSContract {
  private final S3AFileSystem s3afs;
  private final DynamoDBMetadataStore ms=new DynamoDBMetadataStore();
  DynamoDBMSContract() throws IOException {
    this(new Configuration());
  }
  DynamoDBMSContract(  Configuration conf) throws IOException {
    conf.setClass(S3_CLIENT_FACTORY_IMPL,MockS3ClientFactory.class,S3ClientFactory.class);
    conf.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY,S3URI);
    conf.set(ACCESS_KEY,"dummy-access-key");
    conf.set(SECRET_KEY,"dummy-secret-key");
    conf.setBoolean(S3GUARD_DDB_TABLE_CREATE_KEY,true);
    conf.setClass(S3Guard.S3GUARD_DDB_CLIENT_FACTORY_IMPL,DynamoDBLocalClientFactory.class,DynamoDBClientFactory.class);
    s3afs=(S3AFileSystem)FileSystem.newInstance(conf);
    ms.initialize(s3afs);
  }
  @Override public S3AFileSystem getFileSystem(){
    return s3afs;
  }
  @Override public DynamoDBMetadataStore getMetadataStore(){
    return ms;
  }
}
