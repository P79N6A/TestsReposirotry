private class MockRMWithElector extends MockRM {
  private long delayMs=0;
  MockRMWithElector(  Configuration conf){
    super(conf);
  }
  MockRMWithElector(  Configuration conf,  long delayMs){
    this(conf);
    this.delayMs=delayMs;
  }
  @Override protected EmbeddedElector createEmbeddedElector(){
    return new ActiveStandbyElectorBasedElectorService(this){
      @Override public void becomeActive() throws ServiceFailedException {
        try {
          callbackCalled.set(true);
          TestRMEmbeddedElector.LOG.info("Callback called. Sleeping now");
          Thread.sleep(delayMs);
          TestRMEmbeddedElector.LOG.info("Sleep done");
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
        super.becomeActive();
      }
    }
;
  }
}
