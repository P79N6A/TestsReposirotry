public class TestDirectBufferPool {
  final org.apache.hadoop.util.DirectBufferPool pool=new org.apache.hadoop.util.DirectBufferPool();
  @Test public void testBasics(){
    ByteBuffer a=pool.getBuffer(100);
    assertEquals(100,a.capacity());
    assertEquals(100,a.remaining());
    pool.returnBuffer(a);
    ByteBuffer b=pool.getBuffer(100);
    assertSame(a,b);
    ByteBuffer c=pool.getBuffer(100);
    assertNotSame(b,c);
    pool.returnBuffer(b);
    pool.returnBuffer(c);
  }
  @Test public void testBuffersAreReset(){
    ByteBuffer a=pool.getBuffer(100);
    a.putInt(0xdeadbeef);
    assertEquals(96,a.remaining());
    pool.returnBuffer(a);
    ByteBuffer b=pool.getBuffer(100);
    assertSame(a,b);
    assertEquals(100,a.remaining());
    pool.returnBuffer(b);
  }
  @Test public void testWeakRefClearing(){
    List<ByteBuffer> bufs=Lists.newLinkedList();
    for (int i=0; i < 10; i++) {
      ByteBuffer buf=pool.getBuffer(100);
      bufs.add(buf);
    }
    for (    ByteBuffer buf : bufs) {
      pool.returnBuffer(buf);
    }
    assertEquals(10,pool.countBuffersOfSize(100));
    bufs.clear();
    bufs=null;
    for (int i=0; i < 3; i++) {
      System.gc();
    }
    ByteBuffer buf=pool.getBuffer(100);
    assertEquals(0,pool.countBuffersOfSize(100));
    pool.returnBuffer(buf);
  }
}
