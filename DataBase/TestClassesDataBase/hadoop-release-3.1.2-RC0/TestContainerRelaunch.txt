/** 
 * Unit tests for relaunching containers. 
 */
public class TestContainerRelaunch {
  @Test public void testRelaunchContext() throws Exception {
    Configuration conf=new Configuration();
    Context mockContext=mock(Context.class);
    doReturn(new NMNullStateStoreService()).when(mockContext).getNMStateStore();
    ApplicationId appId=ApplicationId.newInstance(1,1);
    ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
    ContainerId cid=ContainerId.newContainerId(appAttemptId,1);
    Application mockApp=mock(Application.class);
    doReturn(appId).when(mockApp).getAppId();
    Container mockContainer=mock(Container.class);
    doReturn("somebody").when(mockContainer).getUser();
    doReturn(cid).when(mockContainer).getContainerId();
    doReturn("/foo").when(mockContainer).getWorkDir();
    doReturn("/bar").when(mockContainer).getLogDir();
    LocalDirsHandlerService mockDirsHandler=mock(LocalDirsHandlerService.class);
    doReturn(true).when(mockDirsHandler).isGoodLocalDir(any(String.class));
    doReturn(true).when(mockDirsHandler).isGoodLogDir(anyString());
    doReturn(true).when(mockDirsHandler).areDisksHealthy();
    doReturn(new Path("/some/file")).when(mockDirsHandler).getLocalPathForRead(anyString());
    Dispatcher dispatcher=new InlineDispatcher();
    ContainerExecutor mockExecutor=mock(ContainerExecutor.class);
    ContainerRelaunch cr=new ContainerRelaunch(mockContext,conf,dispatcher,mockExecutor,mockApp,mockContainer,mockDirsHandler,null);
    int result=cr.call();
    assertEquals("relaunch failed",0,result);
    ArgumentCaptor<ContainerStartContext> captor=ArgumentCaptor.forClass(ContainerStartContext.class);
    verify(mockExecutor).relaunchContainer(captor.capture());
    ContainerStartContext csc=captor.getValue();
    assertNotNull("app ID null",csc.getAppId());
    assertNotNull("container null",csc.getContainer());
    assertNotNull("container local dirs null",csc.getContainerLocalDirs());
    assertNotNull("container log dirs null",csc.getContainerLogDirs());
    assertNotNull("work dir null",csc.getContainerWorkDir());
    assertNotNull("filecache dirs null",csc.getFilecacheDirs());
    assertNotNull("local dirs null",csc.getLocalDirs());
    assertNotNull("localized resources null",csc.getLocalizedResources());
    assertNotNull("log dirs null",csc.getLogDirs());
    assertNotNull("script path null",csc.getNmPrivateContainerScriptPath());
    assertNotNull("tokens path null",csc.getNmPrivateTokensPath());
    assertNotNull("user null",csc.getUser());
    assertNotNull("user local dirs null",csc.getUserLocalDirs());
    assertNotNull("user filecache dirs null",csc.getUserFilecacheDirs());
    assertNotNull("application local dirs null",csc.getApplicationLocalDirs());
  }
}
