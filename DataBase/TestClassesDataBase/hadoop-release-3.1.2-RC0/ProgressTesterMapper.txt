@SuppressWarnings("deprecation") static class ProgressTesterMapper extends MapReduceBase implements Mapper<LongWritable,Text,Text,Text> {
  private float progressRange=0;
  private int numRecords=0;
  private Reporter reporter=null;
  @Override public void configure(  JobConf job){
    super.configure(job);
    if (job.getNumReduceTasks() == 0) {
      progressRange=1f;
    }
 else {
      progressRange=0.667f;
    }
  }
  @Override public void map(  LongWritable key,  Text value,  OutputCollector<Text,Text> output,  Reporter reporter) throws IOException {
    this.reporter=reporter;
    float mapProgress=((float)++numRecords) / INPUT_LINES;
    float attemptProgress=progressRange * mapProgress;
    assertEquals("Invalid progress in map",attemptProgress,reporter.getProgress(),0f);
    output.collect(new Text(value.toString() + numRecords),value);
  }
  @Override public void close() throws IOException {
    super.close();
    assertEquals("Invalid progress in map cleanup",progressRange,reporter.getProgress(),0f);
  }
}
