public class TestDeleteCLI extends CLITestHelperDFS {
  protected MiniDFSCluster dfsCluster=null;
  protected FileSystem fs=null;
  protected String namenode=null;
  @Before @Override public void setUp() throws Exception {
    super.setUp();
    conf.setInt(DFSConfigKeys.DFS_REPLICATION_KEY,1);
    conf.setLong(CommonConfigurationKeysPublic.HADOOP_SHELL_SAFELY_DELETE_LIMIT_NUM_FILES,5);
    dfsCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
    dfsCluster.waitClusterUp();
    namenode=conf.get(DFSConfigKeys.FS_DEFAULT_NAME_KEY,"file:///");
    fs=dfsCluster.getFileSystem();
    assertTrue("Not an HDFS: " + fs.getUri(),fs instanceof DistributedFileSystem);
  }
  @After @Override public void tearDown() throws Exception {
    if (fs != null) {
      fs.close();
      fs=null;
    }
    if (dfsCluster != null) {
      dfsCluster.shutdown();
      dfsCluster=null;
    }
    Thread.sleep(2000);
    super.tearDown();
  }
  @Override protected String getTestFile(){
    return "testDeleteConf.xml";
  }
  @Override protected String expandCommand(  final String cmd){
    String expCmd=cmd;
    expCmd=expCmd.replaceAll("NAMENODE",namenode);
    expCmd=super.expandCommand(expCmd);
    return expCmd;
  }
  @Override protected Result execute(  CLICommand cmd) throws Exception {
    return cmd.getExecutor(namenode,conf).executeCommand(cmd.getCmd());
  }
  @Test @Override public void testAll(){
    super.testAll();
  }
}
