/** 
 * A short-circuit test context which makes it easier to get a short-circuit configuration and set everything up.
 */
public static class ShortCircuitTestContext implements Closeable {
  private final String testName;
  private final TemporarySocketDirectory sockDir;
  private boolean closed=false;
  private final boolean formerTcpReadsDisabled;
  public ShortCircuitTestContext(  String testName){
    this.testName=testName;
    this.sockDir=new TemporarySocketDirectory();
    DomainSocket.disableBindPathValidation();
    formerTcpReadsDisabled=DFSInputStream.tcpReadsDisabledForTesting;
    Assume.assumeTrue(DomainSocket.getLoadingFailureReason() == null);
  }
  public Configuration newConfiguration(){
    Configuration conf=new Configuration();
    conf.setBoolean(HdfsClientConfigKeys.Read.ShortCircuit.KEY,true);
    conf.set(DFSConfigKeys.DFS_DOMAIN_SOCKET_PATH_KEY,new File(sockDir.getDir(),testName + "._PORT.sock").getAbsolutePath());
    return conf;
  }
  public String getTestName(){
    return testName;
  }
  public void close() throws IOException {
    if (closed)     return;
    closed=true;
    DFSInputStream.tcpReadsDisabledForTesting=formerTcpReadsDisabled;
    sockDir.close();
  }
}
