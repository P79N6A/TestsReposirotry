public class IndexInstancesMapperTest extends MahoutTestCase {
  private Mapper.Context ctx;
  private OpenObjectIntHashMap<String> labelIndex;
  private VectorWritable instance;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    ctx=EasyMock.createMock(Mapper.Context.class);
    instance=new VectorWritable(new DenseVector(new double[]{1,0,1,1,0}));
    labelIndex=new OpenObjectIntHashMap<>();
    labelIndex.put("bird",0);
    labelIndex.put("cat",1);
  }
  @Test public void index() throws Exception {
    ctx.write(new IntWritable(0),instance);
    EasyMock.replay(ctx);
    IndexInstancesMapper indexInstances=new IndexInstancesMapper();
    setField(indexInstances,"labelIndex",labelIndex);
    indexInstances.map(new Text("/bird/"),instance,ctx);
    EasyMock.verify(ctx);
  }
  @Test public void skip() throws Exception {
    Counter skippedInstances=EasyMock.createMock(Counter.class);
    EasyMock.expect(ctx.getCounter(IndexInstancesMapper.Counter.SKIPPED_INSTANCES)).andReturn(skippedInstances);
    skippedInstances.increment(1);
    EasyMock.replay(ctx,skippedInstances);
    IndexInstancesMapper indexInstances=new IndexInstancesMapper();
    setField(indexInstances,"labelIndex",labelIndex);
    indexInstances.map(new Text("/fish/"),instance,ctx);
    EasyMock.verify(ctx,skippedInstances);
  }
}
