/** 
 * <p>Tests  {@link PearsonCorrelationSimilarity}.</p> 
 */
public final class PearsonCorrelationSimilarityTest extends SimilarityTestCase {
  @Test public void testFullCorrelation1() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,-2.0},{3.0,-2.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).userSimilarity(1,2);
    assertCorrelationEquals(1.0,correlation);
  }
  @Test public void testFullCorrelation1Weighted() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,-2.0},{3.0,-2.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel,Weighting.WEIGHTED).userSimilarity(1,2);
    assertCorrelationEquals(1.0,correlation);
  }
  @Test public void testFullCorrelation2() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,3.0},{3.0,3.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).userSimilarity(1,2);
    assertTrue(Double.isNaN(correlation));
  }
  @Test public void testNoCorrelation1() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,-2.0},{-3.0,2.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).userSimilarity(1,2);
    assertCorrelationEquals(-1.0,correlation);
  }
  @Test public void testNoCorrelation1Weighted() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,-2.0},{-3.0,2.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel,Weighting.WEIGHTED).userSimilarity(1,2);
    assertCorrelationEquals(-1.0,correlation);
  }
  @Test public void testNoCorrelation2() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{null,1.0,null},{null,null,1.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).userSimilarity(1,2);
    assertTrue(Double.isNaN(correlation));
  }
  @Test public void testNoCorrelation3() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{90.0,80.0,70.0},{70.0,80.0,90.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).userSimilarity(1,2);
    assertCorrelationEquals(-1.0,correlation);
  }
  @Test public void testSimple() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{1.0,2.0,3.0},{2.0,5.0,6.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).userSimilarity(1,2);
    assertCorrelationEquals(0.9607689228305227,correlation);
  }
  @Test public void testSimpleWeighted() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{1.0,2.0,3.0},{2.0,5.0,6.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel,Weighting.WEIGHTED).userSimilarity(1,2);
    assertCorrelationEquals(0.9901922307076306,correlation);
  }
  @Test public void testFullItemCorrelation1() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,3.0},{-2.0,-2.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).itemSimilarity(0,1);
    assertCorrelationEquals(1.0,correlation);
  }
  @Test public void testFullItemCorrelation2() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,3.0},{3.0,3.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).itemSimilarity(0,1);
    assertTrue(Double.isNaN(correlation));
  }
  @Test public void testNoItemCorrelation1() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{3.0,-3.0},{2.0,-2.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).itemSimilarity(0,1);
    assertCorrelationEquals(-1.0,correlation);
  }
  @Test public void testNoItemCorrelation2() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{null,1.0,null},{null,null,1.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).itemSimilarity(1,2);
    assertTrue(Double.isNaN(correlation));
  }
  @Test public void testNoItemCorrelation3() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2,3},new Double[][]{{90.0,70.0},{80.0,80.0},{70.0,90.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).itemSimilarity(0,1);
    assertCorrelationEquals(-1.0,correlation);
  }
  @Test public void testSimpleItem() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2,3},new Double[][]{{1.0,2.0},{2.0,5.0},{3.0,6.0}});
    double correlation=new PearsonCorrelationSimilarity(dataModel).itemSimilarity(0,1);
    assertCorrelationEquals(0.9607689228305227,correlation);
  }
  @Test public void testSimpleItemWeighted() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2,3},new Double[][]{{1.0,2.0},{2.0,5.0},{3.0,6.0}});
    ItemSimilarity itemSimilarity=new PearsonCorrelationSimilarity(dataModel,Weighting.WEIGHTED);
    double correlation=itemSimilarity.itemSimilarity(0,1);
    assertCorrelationEquals(0.9901922307076306,correlation);
  }
  @Test public void testRefresh() throws Exception {
    new PearsonCorrelationSimilarity(getDataModel()).refresh(null);
  }
  @Test public void testInferrer() throws Exception {
    DataModel dataModel=getDataModel(new long[]{1,2},new Double[][]{{null,1.0,2.0,null,null,6.0},{1.0,8.0,null,3.0,4.0,null}});
    UserSimilarity similarity=new PearsonCorrelationSimilarity(dataModel);
    similarity.setPreferenceInferrer(new PreferenceInferrer(){
      @Override public float inferPreference(      long userID,      long itemID){
        return 1.0f;
      }
      @Override public void refresh(      Collection<Refreshable> alreadyRefreshed){
      }
    }
);
    assertEquals(-0.435285750066007,similarity.userSimilarity(1L,2L),EPSILON);
  }
}
