public final class TestDistributedConjugateGradientSolver extends MahoutTestCase {
  private static Vector randomVector(  int size,  double entryMean){
    DenseVector v=new DenseVector(size);
    Random r=RandomUtils.getRandom();
    for (int i=0; i < size; ++i) {
      v.setQuick(i,r.nextGaussian() * entryMean);
    }
    return v;
  }
  @Test public void testSolver() throws Exception {
    File testData=getTestTempDir("testdata");
    DistributedRowMatrix matrix=new TestDistributedRowMatrix().randomDistributedMatrix(10,10,10,10,10.0,true,testData.getAbsolutePath());
    matrix.setConf(getConfiguration());
    Vector vector=randomVector(matrix.numCols(),10.0);
    DistributedConjugateGradientSolver solver=new DistributedConjugateGradientSolver();
    Vector x=solver.solve(matrix,vector);
    Vector solvedVector=matrix.times(x);
    double distance=Math.sqrt(vector.getDistanceSquared(solvedVector));
    assertEquals(0.0,distance,EPSILON);
  }
}
