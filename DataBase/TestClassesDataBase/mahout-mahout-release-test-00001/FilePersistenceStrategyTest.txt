public class FilePersistenceStrategyTest extends TasteTestCase {
  @Test public void persistAndLoad() throws Exception {
    FastByIDMap<Integer> userIDMapping=new FastByIDMap<>();
    FastByIDMap<Integer> itemIDMapping=new FastByIDMap<>();
    userIDMapping.put(123,0);
    userIDMapping.put(456,1);
    itemIDMapping.put(12,0);
    itemIDMapping.put(34,1);
    double[][] userFeatures={{0.1,0.2,0.3},{0.4,0.5,0.6}};
    double[][] itemFeatures={{0.7,0.8,0.9},{1.0,1.1,1.2}};
    Factorization original=new Factorization(userIDMapping,itemIDMapping,userFeatures,itemFeatures);
    File storage=getTestTempFile("storage.bin");
    PersistenceStrategy persistenceStrategy=new FilePersistenceStrategy(storage);
    assertNull(persistenceStrategy.load());
    persistenceStrategy.maybePersist(original);
    Factorization clone=persistenceStrategy.load();
    assertEquals(original,clone);
  }
}
