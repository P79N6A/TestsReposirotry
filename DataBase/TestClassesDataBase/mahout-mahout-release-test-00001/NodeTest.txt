@Deprecated public final class NodeTest extends MahoutTestCase {
  private Random rng;
  private ByteArrayOutputStream byteOutStream;
  private DataOutput out;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    rng=RandomUtils.getRandom();
    byteOutStream=new ByteArrayOutputStream();
    out=new DataOutputStream(byteOutStream);
  }
  /** 
 * Test method for {@link org.apache.mahout.classifier.df.node.Node#read(java.io.DataInput)}.
 */
  @Test public void testReadTree() throws Exception {
    Node node1=new CategoricalNode(rng.nextInt(),new double[]{rng.nextDouble(),rng.nextDouble()},new Node[]{new Leaf(rng.nextDouble()),new Leaf(rng.nextDouble())});
    Node node2=new NumericalNode(rng.nextInt(),rng.nextDouble(),new Leaf(rng.nextDouble()),new Leaf(rng.nextDouble()));
    Node root=new CategoricalNode(rng.nextInt(),new double[]{rng.nextDouble(),rng.nextDouble(),rng.nextDouble()},new Node[]{node1,node2,new Leaf(rng.nextDouble())});
    root.write(out);
    assertEquals(root,readNode());
  }
  Node readNode() throws IOException {
    ByteArrayInputStream byteInStream=new ByteArrayInputStream(byteOutStream.toByteArray());
    DataInput in=new DataInputStream(byteInStream);
    return Node.read(in);
  }
  @Test public void testReadLeaf() throws Exception {
    Node leaf=new Leaf(rng.nextDouble());
    leaf.write(out);
    assertEquals(leaf,readNode());
  }
  @Test public void testParseNumerical() throws Exception {
    Node node=new NumericalNode(rng.nextInt(),rng.nextDouble(),new Leaf(rng.nextInt()),new Leaf(rng.nextDouble()));
    node.write(out);
    assertEquals(node,readNode());
  }
  @Test public void testCategoricalNode() throws Exception {
    Node node=new CategoricalNode(rng.nextInt(),new double[]{rng.nextDouble(),rng.nextDouble(),rng.nextDouble()},new Node[]{new Leaf(rng.nextDouble()),new Leaf(rng.nextDouble()),new Leaf(rng.nextDouble())});
    node.write(out);
    assertEquals(node,readNode());
  }
}
