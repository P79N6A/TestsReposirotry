public final class PathDirectoryTest extends MahoutTestCase {
  private final Path output=new Path("output");
  @Test public void shouldReturnTopLevelClusterPath(){
    Path expectedPath=new Path(output,PathDirectory.TOP_LEVEL_CLUSTER_DIRECTORY);
    assertEquals(expectedPath,PathDirectory.getTopLevelClusterPath(output));
  }
  @Test public void shouldReturnClusterPostProcessorOutputDirectory(){
    Path expectedPath=new Path(output,PathDirectory.POST_PROCESS_DIRECTORY);
    assertEquals(expectedPath,PathDirectory.getClusterPostProcessorOutputDirectory(output));
  }
  @Test public void shouldReturnClusterOutputClusteredPoints(){
    Path expectedPath=new Path(output,PathDirectory.CLUSTERED_POINTS_DIRECTORY + File.separator + '*');
    assertEquals(expectedPath,PathDirectory.getClusterOutputClusteredPoints(output));
  }
  @Test public void shouldReturnBottomLevelClusterPath(){
    Path expectedPath=new Path(output + File.separator + PathDirectory.BOTTOM_LEVEL_CLUSTER_DIRECTORY+ File.separator+ '1');
    assertEquals(expectedPath,PathDirectory.getBottomLevelClusterPath(output,"1"));
  }
  @Test public void shouldReturnClusterPathForClusterId(){
    Path expectedPath=new Path(PathDirectory.getClusterPostProcessorOutputDirectory(output),new Path("1"));
    assertEquals(expectedPath,PathDirectory.getClusterPathForClusterId(PathDirectory.getClusterPostProcessorOutputDirectory(output),"1"));
  }
}
