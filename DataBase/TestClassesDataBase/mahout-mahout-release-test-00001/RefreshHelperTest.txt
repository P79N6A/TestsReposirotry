/** 
 * Tests  {@link RefreshHelper} 
 */
public final class RefreshHelperTest extends TasteTestCase {
  @Test public void testCallable(){
    MockRefreshable mock=new MockRefreshable();
    Refreshable helper=new RefreshHelper(mock);
    helper.refresh(null);
    assertEquals(1,mock.getCallCount());
  }
  @Test public void testNoCallable(){
    Refreshable helper=new RefreshHelper(null);
    helper.refresh(null);
  }
  @Test public void testDependencies(){
    RefreshHelper helper=new RefreshHelper(null);
    MockRefreshable mock1=new MockRefreshable();
    MockRefreshable mock2=new MockRefreshable();
    helper.addDependency(mock1);
    helper.addDependency(mock2);
    helper.refresh(null);
    assertEquals(1,mock1.getCallCount());
    assertEquals(1,mock2.getCallCount());
  }
  @Test public void testAlreadyRefreshed(){
    RefreshHelper helper=new RefreshHelper(null);
    MockRefreshable mock1=new MockRefreshable();
    MockRefreshable mock2=new MockRefreshable();
    helper.addDependency(mock1);
    helper.addDependency(mock2);
    Collection<Refreshable> alreadyRefreshed=Sets.newHashSetWithExpectedSize(1);
    alreadyRefreshed.add(mock1);
    helper.refresh(alreadyRefreshed);
    assertEquals(0,mock1.getCallCount());
    assertEquals(1,mock2.getCallCount());
  }
}
