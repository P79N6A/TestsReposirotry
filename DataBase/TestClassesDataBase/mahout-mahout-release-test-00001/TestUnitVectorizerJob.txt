public class TestUnitVectorizerJob extends MahoutTestCase {
  private static final double[][] RAW={{1,2,3},{4,5,6},{7,8,9}};
  @Test public void testUnitVectorizerMapper() throws Exception {
    UnitVectorizerMapper mapper=new UnitVectorizerMapper();
    Configuration conf=getConfiguration();
    DummyRecordWriter<IntWritable,VectorWritable> writer=new DummyRecordWriter<>();
    Mapper<IntWritable,VectorWritable,IntWritable,VectorWritable>.Context context=DummyRecordWriter.build(mapper,conf,writer);
    for (int i=0; i < RAW.length; i++) {
      Vector vector=new RandomAccessSparseVector(RAW[i].length);
      vector.assign(RAW[i]);
      mapper.map(new IntWritable(i),new VectorWritable(vector),context);
    }
    assertEquals("Number of map results",RAW.length,writer.getData().size());
    for (int i=0; i < RAW.length; i++) {
      IntWritable key=new IntWritable(i);
      List<VectorWritable> list=writer.getValue(key);
      assertEquals("Only one element per row",1,list.size());
      Vector v=list.get(0).get();
      assertTrue("Unit vector sum is 1 or differs by 0.0001",Math.abs(v.norm(2) - 1) < 0.000001);
    }
  }
}
