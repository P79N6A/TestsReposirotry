/** 
 * Tests  {@link FileIDMigrator}
 */
public final class FileIDMigratorTest extends TasteTestCase {
  private static final String[] STRING_IDS={"dog","cow"};
  private static final String[] UPDATED_STRING_IDS={"dog","cow","donkey"};
  private File testFile;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    testFile=getTestTempFile("test.txt");
    writeLines(testFile,STRING_IDS);
  }
  @Test public void testLoadFromFile() throws Exception {
    IDMigrator migrator=new FileIDMigrator(testFile);
    long dogAsLong=migrator.toLongID("dog");
    long cowAsLong=migrator.toLongID("cow");
    long donkeyAsLong=migrator.toLongID("donkey");
    assertEquals("dog",migrator.toStringID(dogAsLong));
    assertEquals("cow",migrator.toStringID(cowAsLong));
    assertNull(migrator.toStringID(donkeyAsLong));
  }
  @Test public void testNoRefreshAfterFileUpdate() throws Exception {
    IDMigrator migrator=new FileIDMigrator(testFile,0L);
    long dogAsLong=migrator.toLongID("dog");
    migrator.toStringID(dogAsLong);
    Thread.sleep(2000L);
    writeLines(testFile,UPDATED_STRING_IDS);
    long cowAsLong=migrator.toLongID("cow");
    long donkeyAsLong=migrator.toLongID("donkey");
    assertEquals("dog",migrator.toStringID(dogAsLong));
    assertEquals("cow",migrator.toStringID(cowAsLong));
    assertNull(migrator.toStringID(donkeyAsLong));
  }
  @Test public void testRefreshAfterFileUpdate() throws Exception {
    IDMigrator migrator=new FileIDMigrator(testFile,0L);
    long dogAsLong=migrator.toLongID("dog");
    migrator.toStringID(dogAsLong);
    Thread.sleep(2000L);
    writeLines(testFile,UPDATED_STRING_IDS);
    migrator.refresh(null);
    long cowAsLong=migrator.toLongID("cow");
    long donkeyAsLong=migrator.toLongID("donkey");
    assertEquals("dog",migrator.toStringID(dogAsLong));
    assertEquals("cow",migrator.toStringID(cowAsLong));
    assertEquals("donkey",migrator.toStringID(donkeyAsLong));
  }
}
