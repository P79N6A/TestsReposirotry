public class HMMEvaluatorTest extends HMMTestBase {
  /** 
 * Test to make sure the computed model likelihood ist valid. Included tests are: a) forwad == backward likelihood b) model likelihood for test seqeunce is the expected one from R reference
 */
  @Test public void testModelLikelihood(){
    Matrix alpha=HmmAlgorithms.forwardAlgorithm(getModel(),getSequence(),false);
    Matrix beta=HmmAlgorithms.backwardAlgorithm(getModel(),getSequence(),false);
    double forwardLikelihood=HmmEvaluator.modelLikelihood(alpha,false);
    double backwardLikelihood=HmmEvaluator.modelLikelihood(getModel(),getSequence(),beta,false);
    assertEquals(forwardLikelihood,backwardLikelihood,EPSILON);
    assertEquals(1.8425e-4,forwardLikelihood,EPSILON);
  }
  /** 
 * Test to make sure the computed model likelihood ist valid. Included tests are: a) forwad == backward likelihood b) model likelihood for test seqeunce is the expected one from R reference
 */
  @Test public void testScaledModelLikelihood(){
    Matrix alpha=HmmAlgorithms.forwardAlgorithm(getModel(),getSequence(),true);
    Matrix beta=HmmAlgorithms.backwardAlgorithm(getModel(),getSequence(),true);
    double forwardLikelihood=HmmEvaluator.modelLikelihood(alpha,true);
    double backwardLikelihood=HmmEvaluator.modelLikelihood(getModel(),getSequence(),beta,true);
    assertEquals(forwardLikelihood,backwardLikelihood,EPSILON);
    assertEquals(1.8425e-4,forwardLikelihood,EPSILON);
  }
}
