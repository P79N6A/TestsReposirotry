public class StopReplicaResponseTest {
  @Test public void testErrorCountsFromGetErrorResponse(){
    StopReplicaRequest request=new StopReplicaRequest.Builder(15,20,false,Utils.mkSet(new TopicPartition("foo",0),new TopicPartition("foo",1))).build();
    StopReplicaResponse response=request.getErrorResponse(0,Errors.CLUSTER_AUTHORIZATION_FAILED.exception());
    assertEquals(Collections.singletonMap(Errors.CLUSTER_AUTHORIZATION_FAILED,2),response.errorCounts());
  }
  @Test public void testErrorCountsWithTopLevelError(){
    Map<TopicPartition,Errors> errors=new HashMap<>();
    errors.put(new TopicPartition("foo",0),Errors.NONE);
    errors.put(new TopicPartition("foo",1),Errors.NOT_LEADER_FOR_PARTITION);
    StopReplicaResponse response=new StopReplicaResponse(Errors.UNKNOWN_SERVER_ERROR,errors);
    assertEquals(Collections.singletonMap(Errors.UNKNOWN_SERVER_ERROR,2),response.errorCounts());
  }
  @Test public void testErrorCountsNoTopLevelError(){
    Map<TopicPartition,Errors> errors=new HashMap<>();
    errors.put(new TopicPartition("foo",0),Errors.NONE);
    errors.put(new TopicPartition("foo",1),Errors.CLUSTER_AUTHORIZATION_FAILED);
    StopReplicaResponse response=new StopReplicaResponse(Errors.NONE,errors);
    Map<Errors,Integer> errorCounts=response.errorCounts();
    assertEquals(2,errorCounts.size());
    assertEquals(1,errorCounts.get(Errors.NONE).intValue());
    assertEquals(1,errorCounts.get(Errors.CLUSTER_AUTHORIZATION_FAILED).intValue());
  }
  @Test public void testToString(){
    Map<TopicPartition,Errors> errors=new HashMap<>();
    errors.put(new TopicPartition("foo",0),Errors.NONE);
    errors.put(new TopicPartition("foo",1),Errors.CLUSTER_AUTHORIZATION_FAILED);
    StopReplicaResponse response=new StopReplicaResponse(Errors.NONE,errors);
    String responseStr=response.toString();
    assertTrue(responseStr.contains(StopReplicaResponse.class.getSimpleName()));
    assertTrue(responseStr.contains(errors.toString()));
    assertTrue(responseStr.contains(Errors.NONE.name()));
  }
}
