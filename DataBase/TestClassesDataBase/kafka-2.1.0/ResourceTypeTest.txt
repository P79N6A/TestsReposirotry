public class ResourceTypeTest {
private static class AclResourceTypeTestInfo {
    private final ResourceType resourceType;
    private final int code;
    private final String name;
    private final boolean unknown;
    AclResourceTypeTestInfo(    ResourceType resourceType,    int code,    String name,    boolean unknown){
      this.resourceType=resourceType;
      this.code=code;
      this.name=name;
      this.unknown=unknown;
    }
  }
  private static final AclResourceTypeTestInfo[] INFOS={new AclResourceTypeTestInfo(ResourceType.UNKNOWN,0,"unknown",true),new AclResourceTypeTestInfo(ResourceType.ANY,1,"any",false),new AclResourceTypeTestInfo(ResourceType.TOPIC,2,"topic",false),new AclResourceTypeTestInfo(ResourceType.GROUP,3,"group",false),new AclResourceTypeTestInfo(ResourceType.CLUSTER,4,"cluster",false),new AclResourceTypeTestInfo(ResourceType.TRANSACTIONAL_ID,5,"transactional_id",false),new AclResourceTypeTestInfo(ResourceType.DELEGATION_TOKEN,6,"delegation_token",false)};
  @Test public void testIsUnknown(){
    for (    AclResourceTypeTestInfo info : INFOS) {
      assertEquals(info.resourceType + " was supposed to have unknown == " + info.unknown,info.unknown,info.resourceType.isUnknown());
    }
  }
  @Test public void testCode(){
    assertEquals(ResourceType.values().length,INFOS.length);
    for (    AclResourceTypeTestInfo info : INFOS) {
      assertEquals(info.resourceType + " was supposed to have code == " + info.code,info.code,info.resourceType.code());
      assertEquals("AclResourceType.fromCode(" + info.code + ") was supposed to be "+ info.resourceType,info.resourceType,ResourceType.fromCode((byte)info.code));
    }
    assertEquals(ResourceType.UNKNOWN,ResourceType.fromCode((byte)120));
  }
  @Test public void testName(){
    for (    AclResourceTypeTestInfo info : INFOS) {
      assertEquals("ResourceType.fromString(" + info.name + ") was supposed to be "+ info.resourceType,info.resourceType,ResourceType.fromString(info.name));
    }
    assertEquals(ResourceType.UNKNOWN,ResourceType.fromString("something"));
  }
  @Test public void testExhaustive(){
    assertEquals(INFOS.length,ResourceType.values().length);
    for (int i=0; i < INFOS.length; i++) {
      assertEquals(INFOS[i].resourceType,ResourceType.values()[i]);
    }
  }
}
