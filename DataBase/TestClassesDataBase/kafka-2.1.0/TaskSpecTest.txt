public class TaskSpecTest {
  @Rule final public Timeout globalTimeout=Timeout.millis(120000);
  @Test public void testTaskSpecSerialization() throws Exception {
    try {
      JsonUtil.JSON_SERDE.readValue("{\"startMs\":123,\"durationMs\":456,\"exitMs\":1000,\"error\":\"foo\"}",SampleTaskSpec.class);
      fail("Expected InvalidTypeIdException because type id is missing.");
    }
 catch (    InvalidTypeIdException e) {
    }
    String inputJson="{\"class\":\"org.apache.kafka.trogdor.task.SampleTaskSpec\"," + "\"startMs\":123,\"durationMs\":456,\"nodeToExitMs\":{\"node01\":1000},\"error\":\"foo\"}";
    SampleTaskSpec spec=JsonUtil.JSON_SERDE.readValue(inputJson,SampleTaskSpec.class);
    assertEquals(123,spec.startMs());
    assertEquals(456,spec.durationMs());
    assertEquals(Long.valueOf(1000),spec.nodeToExitMs().get("node01"));
    assertEquals("foo",spec.error());
    String outputJson=JsonUtil.toJsonString(spec);
    assertEquals(inputJson,outputJson);
  }
}
