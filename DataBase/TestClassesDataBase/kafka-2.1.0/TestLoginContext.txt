private static class TestLoginContext extends LoginContext {
  private final TestExpiringCredentialRefreshingLogin testExpiringCredentialRefreshingLogin;
  private final LoginContext mockLoginContext;
  public TestLoginContext(  TestExpiringCredentialRefreshingLogin testExpiringCredentialRefreshingLogin,  LoginContext mockLoginContext) throws LoginException {
    super("contextName",null,null,EMPTY_WILDCARD_CONFIGURATION);
    this.testExpiringCredentialRefreshingLogin=Objects.requireNonNull(testExpiringCredentialRefreshingLogin);
    if (Objects.requireNonNull(mockLoginContext).getClass().equals(LoginContext.class) || mockLoginContext.getClass().equals(getClass()))     throw new IllegalArgumentException();
    this.mockLoginContext=mockLoginContext;
  }
  @Override public void login() throws LoginException {
    mockLoginContext.login();
    testExpiringCredentialRefreshingLogin.createNewExpiringCredential();
  }
  @Override public void logout() throws LoginException {
    mockLoginContext.logout();
    testExpiringCredentialRefreshingLogin.clearExpiringCredential();
  }
  @Override public Subject getSubject(){
    return mockLoginContext.getSubject();
  }
}
