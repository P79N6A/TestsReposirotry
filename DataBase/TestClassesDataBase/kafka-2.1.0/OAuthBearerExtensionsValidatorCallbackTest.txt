public class OAuthBearerExtensionsValidatorCallbackTest {
  private static final OAuthBearerToken TOKEN=new OAuthBearerTokenMock();
  @Test public void testValidatedExtensionsAreReturned(){
    Map<String,String> extensions=new HashMap<>();
    extensions.put("hello","bye");
    OAuthBearerExtensionsValidatorCallback callback=new OAuthBearerExtensionsValidatorCallback(TOKEN,new SaslExtensions(extensions));
    assertTrue(callback.validatedExtensions().isEmpty());
    assertTrue(callback.invalidExtensions().isEmpty());
    callback.valid("hello");
    assertFalse(callback.validatedExtensions().isEmpty());
    assertEquals("bye",callback.validatedExtensions().get("hello"));
    assertTrue(callback.invalidExtensions().isEmpty());
  }
  @Test public void testInvalidExtensionsAndErrorMessagesAreReturned(){
    Map<String,String> extensions=new HashMap<>();
    extensions.put("hello","bye");
    OAuthBearerExtensionsValidatorCallback callback=new OAuthBearerExtensionsValidatorCallback(TOKEN,new SaslExtensions(extensions));
    assertTrue(callback.validatedExtensions().isEmpty());
    assertTrue(callback.invalidExtensions().isEmpty());
    callback.error("hello","error");
    assertFalse(callback.invalidExtensions().isEmpty());
    assertEquals("error",callback.invalidExtensions().get("hello"));
    assertTrue(callback.validatedExtensions().isEmpty());
  }
  /** 
 * Extensions that are neither validated or invalidated must not be present in either maps
 */
  @Test public void testUnvalidatedExtensionsAreIgnored(){
    Map<String,String> extensions=new HashMap<>();
    extensions.put("valid","valid");
    extensions.put("error","error");
    extensions.put("nothing","nothing");
    OAuthBearerExtensionsValidatorCallback callback=new OAuthBearerExtensionsValidatorCallback(TOKEN,new SaslExtensions(extensions));
    callback.error("error","error");
    callback.valid("valid");
    assertFalse(callback.validatedExtensions().containsKey("nothing"));
    assertFalse(callback.invalidExtensions().containsKey("nothing"));
    assertEquals("nothing",callback.ignoredExtensions().get("nothing"));
  }
  @Test(expected=IllegalArgumentException.class) public void testCannotValidateExtensionWhichWasNotGiven(){
    Map<String,String> extensions=new HashMap<>();
    extensions.put("hello","bye");
    OAuthBearerExtensionsValidatorCallback callback=new OAuthBearerExtensionsValidatorCallback(TOKEN,new SaslExtensions(extensions));
    callback.valid("???");
  }
}
