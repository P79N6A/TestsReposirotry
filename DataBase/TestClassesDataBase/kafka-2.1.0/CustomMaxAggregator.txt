private class CustomMaxAggregator implements Processor<String,Long> {
  ProcessorContext context;
  private KeyValueStore<String,Long> store;
  @SuppressWarnings("unchecked") @Override public void init(  final ProcessorContext context){
    this.context=context;
    context.schedule(Duration.ofMinutes(1),PunctuationType.WALL_CLOCK_TIME,timestamp -> flushStore());
    context.schedule(Duration.ofSeconds(10),PunctuationType.STREAM_TIME,timestamp -> flushStore());
    store=(KeyValueStore<String,Long>)context.getStateStore("aggStore");
  }
  @Override public void process(  final String key,  final Long value){
    final Long oldValue=store.get(key);
    if (oldValue == null || value > oldValue) {
      store.put(key,value);
    }
  }
  private void flushStore(){
    final KeyValueIterator<String,Long> it=store.all();
    while (it.hasNext()) {
      final KeyValue<String,Long> next=it.next();
      context.forward(next.key,next.value);
    }
  }
  @Override public void close(){
  }
}
