private static class StateMaintainerStub implements GlobalStateMaintainer {
  private final Map<TopicPartition,Long> partitionOffsets;
  private final Map<TopicPartition,Integer> updatedPartitions=new HashMap<>();
  private boolean flushed;
  private boolean closed;
  StateMaintainerStub(  final Map<TopicPartition,Long> partitionOffsets){
    this.partitionOffsets=partitionOffsets;
  }
  @Override public Map<TopicPartition,Long> initialize(){
    return partitionOffsets;
  }
  public void flushState(){
    flushed=true;
  }
  @Override public void close(){
    closed=true;
  }
  @Override public void update(  final ConsumerRecord<byte[],byte[]> record){
    final TopicPartition tp=new TopicPartition(record.topic(),record.partition());
    if (!updatedPartitions.containsKey(tp)) {
      updatedPartitions.put(tp,0);
    }
    updatedPartitions.put(tp,updatedPartitions.get(tp) + 1);
  }
}
