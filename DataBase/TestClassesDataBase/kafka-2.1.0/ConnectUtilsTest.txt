public class ConnectUtilsTest {
  @Test public void testLookupKafkaClusterId(){
    final Node broker1=new Node(0,"dummyHost-1",1234);
    final Node broker2=new Node(1,"dummyHost-2",1234);
    List<Node> cluster=Arrays.asList(broker1,broker2);
    MockAdminClient adminClient=new MockAdminClient(cluster,broker1);
    assertEquals(MockAdminClient.DEFAULT_CLUSTER_ID,ConnectUtils.lookupKafkaClusterId(adminClient));
  }
  @Test public void testLookupNullKafkaClusterId(){
    final Node broker1=new Node(0,"dummyHost-1",1234);
    final Node broker2=new Node(1,"dummyHost-2",1234);
    List<Node> cluster=Arrays.asList(broker1,broker2);
    MockAdminClient adminClient=new MockAdminClient(cluster,broker1,null);
    assertNull(ConnectUtils.lookupKafkaClusterId(adminClient));
  }
  @Test(expected=ConnectException.class) public void testLookupKafkaClusterIdTimeout(){
    final Node broker1=new Node(0,"dummyHost-1",1234);
    final Node broker2=new Node(1,"dummyHost-2",1234);
    List<Node> cluster=Arrays.asList(broker1,broker2);
    MockAdminClient adminClient=new MockAdminClient(cluster,broker1);
    adminClient.timeoutNextRequest(1);
    ConnectUtils.lookupKafkaClusterId(adminClient);
  }
}
