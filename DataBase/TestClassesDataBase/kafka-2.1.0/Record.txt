private final static class Record {
  private final Object key;
  private final Object value;
  private final long timestamp;
  private final long offset;
  private final String topic;
  private final Headers headers;
  Record(  final ConsumerRecord consumerRecord,  final long newOffset){
    key=consumerRecord.key();
    value=consumerRecord.value();
    timestamp=consumerRecord.timestamp();
    offset=newOffset;
    topic=consumerRecord.topic();
    headers=consumerRecord.headers();
  }
  Record(  final Object key,  final Object value,  final Headers headers,  final long timestamp,  final long offset,  final String topic){
    this.key=key;
    this.value=value;
    this.headers=headers;
    this.timestamp=timestamp;
    this.offset=offset;
    this.topic=topic;
  }
  @Override public String toString(){
    return "key: " + key + ", value: "+ value+ ", timestamp: "+ timestamp+ ", offset: "+ offset+ ", topic: "+ topic;
  }
  @Override public boolean equals(  final Object o){
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final Record record=(Record)o;
    return timestamp == record.timestamp && offset == record.offset && Objects.equals(key,record.key) && Objects.equals(value,record.value) && Objects.equals(topic,record.topic) && Objects.equals(headers,record.headers);
  }
  @Override public int hashCode(){
    return Objects.hash(key,value,headers,timestamp,offset,topic);
  }
}
