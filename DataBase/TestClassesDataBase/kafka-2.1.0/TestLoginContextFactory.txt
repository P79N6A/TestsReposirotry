private static class TestLoginContextFactory extends LoginContextFactory {
  private final KafkaFutureImpl<Object> refresherThreadStartedFuture=new KafkaFutureImpl<>();
  private final KafkaFutureImpl<Object> refresherThreadDoneFuture=new KafkaFutureImpl<>();
  private TestLoginContext testLoginContext;
  public void configure(  LoginContext mockLoginContext,  TestExpiringCredentialRefreshingLogin testExpiringCredentialRefreshingLogin) throws LoginException {
    if (Objects.requireNonNull(mockLoginContext).getClass().equals(LoginContext.class) || mockLoginContext.getClass().equals(TestLoginContext.class))     throw new IllegalArgumentException();
    this.testLoginContext=new TestLoginContext(Objects.requireNonNull(testExpiringCredentialRefreshingLogin),mockLoginContext);
  }
  @Override public LoginContext createLoginContext(  ExpiringCredentialRefreshingLogin expiringCredentialRefreshingLogin){
    return testLoginContext;
  }
  @Override public void refresherThreadStarted(){
    refresherThreadStartedFuture.complete(null);
  }
  @Override public void refresherThreadDone(){
    refresherThreadDoneFuture.complete(null);
  }
  public Future<?> refresherThreadStartedFuture(){
    return refresherThreadStartedFuture;
  }
  public Future<?> refresherThreadDoneFuture(){
    return refresherThreadDoneFuture;
  }
}
