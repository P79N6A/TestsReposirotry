public class OAuthBearerValidatorCallbackTest {
  private static final OAuthBearerToken TOKEN=new OAuthBearerToken(){
    @Override public String value(){
      return "value";
    }
    @Override public Long startTimeMs(){
      return null;
    }
    @Override public Set<String> scope(){
      return Collections.emptySet();
    }
    @Override public String principalName(){
      return "principalName";
    }
    @Override public long lifetimeMs(){
      return 0;
    }
  }
;
  @Test public void testError(){
    String errorStatus="errorStatus";
    String errorScope="errorScope";
    String errorOpenIDConfiguration="errorOpenIDConfiguration";
    OAuthBearerValidatorCallback callback=new OAuthBearerValidatorCallback(TOKEN.value());
    callback.error(errorStatus,errorScope,errorOpenIDConfiguration);
    assertEquals(errorStatus,callback.errorStatus());
    assertEquals(errorScope,callback.errorScope());
    assertEquals(errorOpenIDConfiguration,callback.errorOpenIDConfiguration());
    assertNull(callback.token());
  }
  @Test public void testToken(){
    OAuthBearerValidatorCallback callback=new OAuthBearerValidatorCallback(TOKEN.value());
    callback.token(TOKEN);
    assertSame(TOKEN,callback.token());
    assertNull(callback.errorStatus());
    assertNull(callback.errorScope());
    assertNull(callback.errorOpenIDConfiguration());
  }
}
