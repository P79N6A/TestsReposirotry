public class OffsetCheckpointTest {
  private final String topic="topic";
  @Test public void testReadWrite() throws IOException {
    final File f=TestUtils.tempFile();
    final OffsetCheckpoint checkpoint=new OffsetCheckpoint(f);
    try {
      final Map<TopicPartition,Long> offsets=new HashMap<>();
      offsets.put(new TopicPartition(topic,0),0L);
      offsets.put(new TopicPartition(topic,1),1L);
      offsets.put(new TopicPartition(topic,2),2L);
      checkpoint.write(offsets);
      assertEquals(offsets,checkpoint.read());
      checkpoint.delete();
      assertFalse(f.exists());
      offsets.put(new TopicPartition(topic,3),3L);
      checkpoint.write(offsets);
      assertEquals(offsets,checkpoint.read());
    }
  finally {
      checkpoint.delete();
    }
  }
  @Test public void shouldNotWriteCheckpointWhenNoOffsets() throws IOException {
    final File f=new File(TestUtils.tempDirectory().getAbsolutePath(),"kafka.tmp");
    final OffsetCheckpoint checkpoint=new OffsetCheckpoint(f);
    checkpoint.write(Collections.<TopicPartition,Long>emptyMap());
    assertFalse(f.exists());
    assertEquals(Collections.<TopicPartition,Long>emptyMap(),checkpoint.read());
    checkpoint.delete();
  }
}
