public class WindowedSerdesTest {
  private final String topic="sample";
  @Test public void shouldWrapForTimeWindowedSerde(){
    final Serde<Windowed<String>> serde=WindowedSerdes.timeWindowedSerdeFrom(String.class);
    assertTrue(serde.serializer() instanceof TimeWindowedSerializer);
    assertTrue(serde.deserializer() instanceof TimeWindowedDeserializer);
    assertTrue(((TimeWindowedSerializer)serde.serializer()).innerSerializer() instanceof StringSerializer);
    assertTrue(((TimeWindowedDeserializer)serde.deserializer()).innerDeserializer() instanceof StringDeserializer);
  }
  @Test public void shouldWrapForSessionWindowedSerde(){
    final Serde<Windowed<String>> serde=WindowedSerdes.sessionWindowedSerdeFrom(String.class);
    assertTrue(serde.serializer() instanceof SessionWindowedSerializer);
    assertTrue(serde.deserializer() instanceof SessionWindowedDeserializer);
    assertTrue(((SessionWindowedSerializer)serde.serializer()).innerSerializer() instanceof StringSerializer);
    assertTrue(((SessionWindowedDeserializer)serde.deserializer()).innerDeserializer() instanceof StringDeserializer);
  }
  @Test public void testTimeWindowSerdeFrom(){
    final Windowed<Integer> timeWindowed=new Windowed<>(10,new TimeWindow(0,Long.MAX_VALUE));
    final Serde<Windowed<Integer>> timeWindowedSerde=WindowedSerdes.timeWindowedSerdeFrom(Integer.class);
    final byte[] bytes=timeWindowedSerde.serializer().serialize(topic,timeWindowed);
    final Windowed<Integer> windowed=timeWindowedSerde.deserializer().deserialize(topic,bytes);
    Assert.assertEquals(timeWindowed,windowed);
  }
  @Test public void testSessionWindowedSerdeFrom(){
    final Windowed<Integer> sessionWindowed=new Windowed<>(10,new SessionWindow(0,1));
    final Serde<Windowed<Integer>> sessionWindowedSerde=WindowedSerdes.sessionWindowedSerdeFrom(Integer.class);
    final byte[] bytes=sessionWindowedSerde.serializer().serialize(topic,sessionWindowed);
    final Windowed<Integer> windowed=sessionWindowedSerde.deserializer().deserialize(topic,bytes);
    Assert.assertEquals(sessionWindowed,windowed);
  }
}
