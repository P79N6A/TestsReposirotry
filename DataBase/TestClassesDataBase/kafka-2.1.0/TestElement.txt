private final static class TestElement implements ImplicitLinkedHashSet.Element {
  private int prev=ImplicitLinkedHashSet.INVALID_INDEX;
  private int next=ImplicitLinkedHashSet.INVALID_INDEX;
  private final int val;
  TestElement(  int val){
    this.val=val;
  }
  @Override public int prev(){
    return prev;
  }
  @Override public void setPrev(  int prev){
    this.prev=prev;
  }
  @Override public int next(){
    return next;
  }
  @Override public void setNext(  int next){
    this.next=next;
  }
  @Override public boolean equals(  Object o){
    if (this == o)     return true;
    if ((o == null) || (o.getClass() != TestElement.class))     return false;
    TestElement that=(TestElement)o;
    return val == that.val;
  }
  @Override public String toString(){
    return "TestElement(" + val + ")";
  }
  @Override public int hashCode(){
    return val;
  }
}
