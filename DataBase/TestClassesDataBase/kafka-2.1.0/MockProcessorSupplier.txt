public class MockProcessorSupplier<K,V> implements ProcessorSupplier<K,V> {
  private final long scheduleInterval;
  private final PunctuationType punctuationType;
  private final List<MockProcessor<K,V>> processors=new ArrayList<>();
  public MockProcessorSupplier(){
    this(-1L);
  }
  public MockProcessorSupplier(  final long scheduleInterval){
    this(scheduleInterval,PunctuationType.STREAM_TIME);
  }
  public MockProcessorSupplier(  final long scheduleInterval,  final PunctuationType punctuationType){
    this.scheduleInterval=scheduleInterval;
    this.punctuationType=punctuationType;
  }
  @Override public Processor<K,V> get(){
    final MockProcessor<K,V> processor=new MockProcessor<>(punctuationType,scheduleInterval);
    processors.add(processor);
    return processor;
  }
  public MockProcessor<K,V> theCapturedProcessor(){
    return capturedProcessors(1).get(0);
  }
  public List<MockProcessor<K,V>> capturedProcessors(  final int expectedNumberOfProcessors){
    assertEquals(expectedNumberOfProcessors,processors.size());
    return processors;
  }
}
