/** 
 * Demonstrate the use of  {@link MockProcessorContext} for testing the {@link Processor} in the {@link WordCountProcessorDemo}.
 */
public class WordCountProcessorTest {
  @Test public void test(){
    final MockProcessorContext context=new MockProcessorContext();
    final KeyValueStore<String,Integer> store=Stores.keyValueStoreBuilder(Stores.inMemoryKeyValueStore("Counts"),Serdes.String(),Serdes.Integer()).withLoggingDisabled().build();
    store.init(context,store);
    context.register(store,null);
    final Processor<String,String> processor=new WordCountProcessorDemo.MyProcessorSupplier().get();
    processor.init(context);
    processor.process("key","alpha beta gamma alpha");
    assertTrue(context.committed());
    assertTrue(context.forwarded().isEmpty());
    context.scheduledPunctuators().get(0).getPunctuator().punctuate(0L);
    final Iterator<MockProcessorContext.CapturedForward> capturedForwards=context.forwarded().iterator();
    assertEquals(new KeyValue<>("alpha","2"),capturedForwards.next().keyValue());
    assertEquals(new KeyValue<>("beta","1"),capturedForwards.next().keyValue());
    assertEquals(new KeyValue<>("gamma","1"),capturedForwards.next().keyValue());
    assertFalse(capturedForwards.hasNext());
  }
}
