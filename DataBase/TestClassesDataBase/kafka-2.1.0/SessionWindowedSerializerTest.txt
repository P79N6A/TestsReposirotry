public class SessionWindowedSerializerTest {
  private final SessionWindowedSerializer<?> sessionWindowedSerializer=new SessionWindowedSerializer<>();
  private final Map<String,String> props=new HashMap<>();
  @Before public void setUp(){
    props.put(StreamsConfig.DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS,Serdes.StringSerde.class.getName());
    props.put(StreamsConfig.DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS,Serdes.ByteArraySerde.class.getName());
  }
  @Test public void testWindowedKeySerializerNoArgConstructors(){
    sessionWindowedSerializer.configure(props,true);
    final Serializer<?> inner=sessionWindowedSerializer.innerSerializer();
    assertNotNull("Inner serializer should be not null",inner);
    assertTrue("Inner serializer type should be StringSerializer",inner instanceof StringSerializer);
  }
  @Test public void testWindowedValueSerializerNoArgConstructors(){
    sessionWindowedSerializer.configure(props,false);
    final Serializer<?> inner=sessionWindowedSerializer.innerSerializer();
    assertNotNull("Inner serializer should be not null",inner);
    assertTrue("Inner serializer type should be ByteArraySerializer",inner instanceof ByteArraySerializer);
  }
}
