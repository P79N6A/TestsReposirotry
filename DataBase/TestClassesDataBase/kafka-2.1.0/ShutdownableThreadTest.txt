public class ShutdownableThreadTest {
  @Test public void testGracefulShutdown() throws InterruptedException {
    ShutdownableThread thread=new ShutdownableThread("graceful"){
      @Override public void execute(){
        while (getRunning()) {
          try {
            Thread.sleep(1);
          }
 catch (          InterruptedException e) {
          }
        }
      }
    }
;
    thread.start();
    Thread.sleep(10);
    assertTrue(thread.gracefulShutdown(1000,TimeUnit.MILLISECONDS));
  }
  @Test public void testForcibleShutdown() throws InterruptedException {
    final CountDownLatch startedLatch=new CountDownLatch(1);
    ShutdownableThread thread=new ShutdownableThread("forcible"){
      @Override public void execute(){
        try {
          startedLatch.countDown();
          Thread.sleep(100000);
        }
 catch (        InterruptedException e) {
        }
      }
    }
;
    thread.start();
    startedLatch.await();
    thread.forceShutdown();
    thread.join(1000);
    assertFalse(thread.isAlive());
  }
}
