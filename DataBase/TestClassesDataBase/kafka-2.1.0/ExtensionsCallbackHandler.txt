public class ExtensionsCallbackHandler implements AuthenticateCallbackHandler {
  private boolean configured=false;
  private boolean toThrow;
  ExtensionsCallbackHandler(  boolean toThrow){
    this.toThrow=toThrow;
  }
  public boolean configured(){
    return configured;
  }
  @Override public void configure(  Map<String,?> configs,  String saslMechanism,  List<AppConfigurationEntry> jaasConfigEntries){
    configured=true;
  }
  @Override public void handle(  Callback[] callbacks) throws UnsupportedCallbackException {
    for (    Callback callback : callbacks) {
      if (callback instanceof OAuthBearerTokenCallback)       ((OAuthBearerTokenCallback)callback).token(new OAuthBearerToken(){
        @Override public String value(){
          return "";
        }
        @Override public Set<String> scope(){
          return Collections.emptySet();
        }
        @Override public long lifetimeMs(){
          return 100;
        }
        @Override public String principalName(){
          return "principalName";
        }
        @Override public Long startTimeMs(){
          return null;
        }
      }
);
 else       if (callback instanceof SaslExtensionsCallback) {
        if (toThrow)         throw new ConfigException(errorMessage);
 else         ((SaslExtensionsCallback)callback).extensions(testExtensions);
      }
 else       throw new UnsupportedCallbackException(callback);
    }
  }
  @Override public void close(){
  }
}
