private class GlobalStoreProcessor extends AbstractProcessor<String,Long> {
  private KeyValueStore<String,Long> store;
  private final String storeName;
  GlobalStoreProcessor(  final String storeName){
    this.storeName=storeName;
  }
  @Override @SuppressWarnings("unchecked") public void init(  final ProcessorContext context){
    super.init(context);
    store=(KeyValueStore<String,Long>)context.getStateStore(storeName);
  }
  @Override public void process(  final String key,  final Long value){
    firstRecordProcessed=true;
  }
  @Override public void close(){
    final List<String> keys=Arrays.asList("A","B","C","D");
    for (    final String key : keys) {
      Utils.sleep(1000);
      retrievedValuesList.add(store.get(key));
    }
  }
}
