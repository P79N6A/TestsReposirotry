private static class TestProcessorContext extends AbstractProcessorContext {
  static Properties config;
static {
    config=getStreamsConfig();
    config.put(StreamsConfig.ROCKSDB_CONFIG_SETTER_CLASS_CONFIG,RocksDBConfigSetter.class.getName());
    config.put("user.supplied.config","user-suppplied-value");
  }
  TestProcessorContext(  final MockStreamsMetrics metrics){
    super(new TaskId(0,0),new StreamsConfig(config),metrics,new StateManagerStub(),new ThreadCache(new LogContext("name "),0,metrics));
  }
  @Override public StateStore getStateStore(  final String name){
    return null;
  }
  @Override public Cancellable schedule(  final long interval,  final PunctuationType type,  final Punctuator callback){
    return null;
  }
  @Override public Cancellable schedule(  final Duration interval,  final PunctuationType type,  final Punctuator callback) throws IllegalArgumentException {
    return null;
  }
  @Override public <K,V>void forward(  final K key,  final V value){
  }
  @Override public <K,V>void forward(  final K key,  final V value,  final To to){
  }
  @Override public <K,V>void forward(  final K key,  final V value,  final int childIndex){
  }
  @Override public <K,V>void forward(  final K key,  final V value,  final String childName){
  }
  @Override public void commit(){
  }
  @Override public long streamTime(){
    throw new RuntimeException("not implemented");
  }
}
