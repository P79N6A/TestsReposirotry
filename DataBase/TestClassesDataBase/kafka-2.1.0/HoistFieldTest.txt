public class HoistFieldTest {
  private final HoistField<SinkRecord> xform=new HoistField.Key<>();
  @After public void teardown(){
    xform.close();
  }
  @Test public void schemaless(){
    xform.configure(Collections.singletonMap("field","magic"));
    final SinkRecord record=new SinkRecord("test",0,null,42,null,null,0);
    final SinkRecord transformedRecord=xform.apply(record);
    assertNull(transformedRecord.keySchema());
    assertEquals(Collections.singletonMap("magic",42),transformedRecord.key());
  }
  @Test public void withSchema(){
    xform.configure(Collections.singletonMap("field","magic"));
    final SinkRecord record=new SinkRecord("test",0,Schema.INT32_SCHEMA,42,null,null,0);
    final SinkRecord transformedRecord=xform.apply(record);
    assertEquals(Schema.Type.STRUCT,transformedRecord.keySchema().type());
    assertEquals(record.keySchema(),transformedRecord.keySchema().field("magic").schema());
    assertEquals(42,((Struct)transformedRecord.key()).get("magic"));
  }
}
