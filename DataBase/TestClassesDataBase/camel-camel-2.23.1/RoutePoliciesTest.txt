/** 
 * @version 
 */
public class RoutePoliciesTest extends ContextTestSupport {
  private final MyCustomRoutePolicy policyA=new MyCustomRoutePolicy("A");
  private final MyCustomRoutePolicy policyB=new MyCustomRoutePolicy("B");
private static final class MyCustomRoutePolicy extends RoutePolicySupport {
    private final String name;
    private MyCustomRoutePolicy(    String name){
      this.name=name;
    }
    @Override public void onExchangeBegin(    Route route,    Exchange exchange){
      exchange.getIn().setHeader(name,name);
    }
  }
  @Test public void testCustomPolicies() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    mock.expectedHeaderReceived("A","A");
    mock.expectedHeaderReceived("B","B");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routePolicy(policyA,policyB).to("mock:result");
      }
    }
;
  }
}
