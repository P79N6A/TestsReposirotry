public class CxfRawMessageRouterTest extends CxfSimpleRouterTest {
  private String routerEndpointURI="cxf://" + getRouterAddress() + "?"+ SERVICE_CLASS+ "&dataFormat=MESSAGE";
  private String serviceEndpointURI="cxf://" + getServiceAddress() + "?"+ SERVICE_CLASS+ "&dataFormat=MESSAGE";
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from(routerEndpointURI).to("log:org.apache.camel?level=DEBUG").to(serviceEndpointURI).to("mock:result");
      }
    }
;
  }
  @Override public boolean isCreateCamelContextPerClass(){
    return true;
  }
  @Test public void testTheContentType() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.reset();
    result.expectedMessageCount(1);
    HelloService client=getCXFClient();
    client.echo("hello world");
    assertMockEndpointsSatisfied();
    Map<?,?> context=CastUtils.cast((Map<?,?>)result.assertExchangeReceived(0).getIn().getHeaders().get("ResponseContext"));
    Map<?,?> protocalHeaders=CastUtils.cast((Map<?,?>)context.get("org.apache.cxf.message.Message.PROTOCOL_HEADERS"));
    assertTrue("Should get a right content type",protocalHeaders.get("content-type").toString().startsWith("[text/xml;"));
    assertTrue("Should get a right context type with a charset",protocalHeaders.get("content-type").toString().indexOf("charset=") > 0);
    assertEquals("Should get the response code ",context.get("org.apache.cxf.message.Message.RESPONSE_CODE"),200);
    assertTrue("Should get the content type",result.assertExchangeReceived(0).getIn().getHeaders().get("content-type").toString().startsWith("text/xml;"));
    assertTrue("Should get the content type",result.assertExchangeReceived(0).getIn().getHeaders().get("content-type").toString().indexOf("charset=") > 0);
  }
  @Test public void testTheContentTypeOnTheWire() throws Exception {
    Exchange exchange=template.send(getRouterAddress(),new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">" + "<soap:Body><ns1:echo xmlns:ns1=\"http://cxf.component.camel.apache.org/\">" + "<arg0 xmlns=\"http://cxf.component.camel.apache.org/\">hello world</arg0>"+ "</ns1:echo></soap:Body></soap:Envelope>");
      }
    }
);
    assertNotNull("We should get the Content-Type here",MessageHelper.getContentType(exchange.getOut()));
    assertTrue("Get wrong content type",MessageHelper.getContentType(exchange.getOut()).startsWith("text/xml"));
    assertNotNull("We should get the content-type here",exchange.getOut().getHeader("content-type"));
    String response=exchange.getOut().getBody(String.class);
    assertNotNull("Response should not be null",response);
    assertTrue("We should get right return result",response.indexOf("echo hello world") > 0);
  }
}
