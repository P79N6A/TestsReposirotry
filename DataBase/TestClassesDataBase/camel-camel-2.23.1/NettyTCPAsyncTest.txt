public class NettyTCPAsyncTest extends BaseNettyTest {
  @EndpointInject(uri="mock:result") protected MockEndpoint resultEndpoint;
  private void sendFile(  String uri) throws Exception {
    template.send(uri,new Processor(){
      public void process(      Exchange exchange) throws Exception {
        InputStream is=IOHelper.buffered(new FileInputStream("src/test/resources/test.txt"));
        byte buffer[]=IOConverter.toBytes(is);
        is.close();
        exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
        Message in=exchange.getIn();
        in.setBody(buffer);
      }
    }
);
  }
  @Test public void testTCPInOnlyWithNettyConsumer() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    sendFile("netty4:tcp://localhost:{{port}}?sync=false");
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4:tcp://localhost:{{port}}?sync=false").to("log:result").to("mock:result");
      }
    }
;
  }
}
