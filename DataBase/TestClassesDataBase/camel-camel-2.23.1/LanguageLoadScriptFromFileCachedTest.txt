/** 
 * @version 
 */
public class LanguageLoadScriptFromFileCachedTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/script");
    super.setUp();
  }
  @Override public boolean useJmx(){
    return true;
  }
  @Test public void testLanguage() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World","Hello World");
    template.sendBody("direct:start","World");
    template.sendBodyAndHeader("file:target/script","Bye ${body}",Exchange.FILE_NAME,"myscript.txt");
    template.sendBody("direct:start","World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testClearCachedScriptViaJmx() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World","Hello World","Bye World");
    template.sendBody("direct:start","World");
    template.sendBodyAndHeader("file:target/script","Bye ${body}",Exchange.FILE_NAME,"myscript.txt");
    template.sendBody("direct:start","World");
    MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
    Set<ObjectName> objNameSet=mbeanServer.queryNames(new ObjectName("org.apache.camel:type=endpoints,name=\"language://simple:*contentCache=true*\",*"),null);
    ObjectName managedObjName=new ArrayList<>(objNameSet).get(0);
    mbeanServer.invoke(managedObjName,"clearContentCache",null,null);
    template.sendBody("direct:start","World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        template.sendBodyAndHeader("file:target/script","Hello ${body}",Exchange.FILE_NAME,"myscript.txt");
        from("direct:start").to("language:simple:file:target/script/myscript.txt?contentCache=true&cacheScript=true").to("mock:result");
      }
    }
;
  }
}
