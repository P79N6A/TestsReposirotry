/** 
 * Unit test for SchematronEndpoint.
 */
public class SchematronEndpointTest extends CamelTestSupport {
  @Test public void testSchematronFileReadFromClassPath() throws Exception {
    String payload=IOUtils.toString(ClassLoader.getSystemResourceAsStream("xml/article-1.xml"));
    Endpoint endpoint=context().getEndpoint("schematron://sch/schematron-1.sch");
    Producer producer=endpoint.createProducer();
    Exchange exchange=new DefaultExchange(context,ExchangePattern.InOut);
    exchange.getIn().setBody(payload);
    producer.process(exchange);
    String report=exchange.getOut().getHeader(Constants.VALIDATION_REPORT,String.class);
    assertNotNull(report);
  }
  @Test public void testSchematronFileReadFromFileSystem() throws Exception {
    String payload=IOUtils.toString(ClassLoader.getSystemResourceAsStream("xml/article-2.xml"));
    String path=ClassLoader.getSystemResource("sch/schematron-1.sch").getPath();
    Endpoint endpoint=context().getEndpoint("schematron://" + path);
    Producer producer=endpoint.createProducer();
    Exchange exchange=new DefaultExchange(context,ExchangePattern.InOut);
    exchange.getIn().setBody(payload);
    producer.process(exchange);
    String report=exchange.getOut().getHeader(Constants.VALIDATION_REPORT,String.class);
    assertNotNull(report);
  }
  @Test(expected=SchematronValidationException.class) public void testThrowSchematronValidationException() throws Exception {
    String payload=IOUtils.toString(ClassLoader.getSystemResourceAsStream("xml/article-2.xml"));
    Endpoint endpoint=context().getEndpoint("schematron://sch/schematron-1.sch?abort=true");
    Producer producer=endpoint.createProducer();
    Exchange exchange=new DefaultExchange(context,ExchangePattern.OutIn);
    exchange.getIn().setBody(payload);
    producer.process(exchange);
  }
}
