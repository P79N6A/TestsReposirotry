/** 
 * @version 
 */
public class MockAssertionClauseTest extends ContextTestSupport {
  @Test public void testAssertionClauseAll() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.allMessages().xpath("/person[@name='James']",Boolean.class);
    template.sendBody("direct:start","<person name='James' last='Hanson'/>");
    template.sendBody("direct:start","<person name='James' last='Jackson'/>");
    assertMockEndpointsSatisfied();
  }
  @Test public void testAssertionClausePer() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.message(0).xpath("/person[@last='Hanson']",Boolean.class);
    mock.message(0).body().contains("Hanson");
    mock.message(1).xpath("/person[@last='Jackson']",Boolean.class);
    mock.message(1).body().contains("Jackson");
    template.sendBody("direct:start","<person name='James' last='Hanson'/>");
    template.sendBody("direct:start","<person name='James' last='Jackson'/>");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:result");
      }
    }
;
  }
}
