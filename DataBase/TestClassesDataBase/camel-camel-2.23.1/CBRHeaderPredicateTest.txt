/** 
 * @version 
 */
public class CBRHeaderPredicateTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("cbrBean",new MyCBRBean());
    return jndi;
  }
  @Test public void testCBR() throws Exception {
    MockEndpoint foo=getMockEndpoint("mock:foo");
    foo.expectedBodiesReceived("Hello Foo");
    MockEndpoint bar=getMockEndpoint("mock:bar");
    bar.expectedBodiesReceived("Hello Bar");
    template.sendBodyAndHeader("direct:start","Hello Foo","foo","bar");
    template.sendBodyAndHeader("direct:start","Hello Bar","foo","other");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").choice().when().method("cbrBean","checkHeader").to("mock:foo").otherwise().to("mock:bar").end();
      }
    }
;
  }
public static class MyCBRBean {
    public boolean checkHeader(    Exchange exchange){
      Message inMsg=exchange.getIn();
      String foo=(String)inMsg.getHeader("foo");
      return foo.equals("bar");
    }
  }
}
