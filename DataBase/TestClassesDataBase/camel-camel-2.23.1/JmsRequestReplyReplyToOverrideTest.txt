public class JmsRequestReplyReplyToOverrideTest extends CamelTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(JmsRequestReplyReplyToOverrideTest.class);
  private static final String REQUEST_BODY="Something";
  private static final String EXPECTED_REPLY_BODY="Re: " + REQUEST_BODY;
  private static final String EXPECTED_REPLY_HEADER="queue://bar";
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testJmsRequestReplyReplyToAndReplyToHeader() throws Exception {
    context.start();
    Thread sender=new Thread(new Responder());
    sender.start();
    Exchange reply=template.request("jms:queue:foo",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody(REQUEST_BODY);
      }
    }
);
    assertEquals(EXPECTED_REPLY_BODY,reply.getOut().getBody());
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    JmsComponent jmsComponent=jmsComponentAutoAcknowledge(connectionFactory);
    jmsComponent.getConfiguration().setReplyTo("baz");
    jmsComponent.getConfiguration().setReplyToOverride("bar");
    camelContext.addComponent("jms",jmsComponent);
    return camelContext;
  }
private class Responder implements Runnable {
    public void run(){
      try {
        LOG.debug("Waiting for request");
        Exchange request=consumer.receive("jms:queue:foo",5000);
        LOG.debug("Got request, sending reply");
        final String body=request.getIn().getBody(String.class);
        final String cid=request.getIn().getHeader("JMSCorrelationID",String.class);
        final Destination replyTo=request.getIn().getHeader("JMSReplyTo",Destination.class);
        assertEquals(EXPECTED_REPLY_HEADER,replyTo.toString());
        template.send("jms:dummy",ExchangePattern.InOnly,new Processor(){
          public void process(          Exchange exchange) throws Exception {
            Message in=exchange.getIn();
            in.setBody("Re: " + body);
            in.setHeader(JmsConstants.JMS_DESTINATION_NAME,"baz");
            in.setHeader("JMSCorrelationID",cid);
          }
        }
);
      }
 catch (      Exception e) {
      }
    }
  }
}
