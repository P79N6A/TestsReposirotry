/** 
 * @version 
 */
public class PendingExchangesShutdownGracefulTest extends ContextTestSupport {
  private static String foo="";
  private static CountDownLatch latch=new CountDownLatch(1);
  @Test public void testShutdownGraceful() throws Exception {
    getMockEndpoint("mock:foo").expectedMinimumMessageCount(1);
    template.sendBody("seda:foo","A");
    template.sendBody("seda:foo","B");
    template.sendBody("seda:foo","C");
    template.sendBody("seda:foo","D");
    template.sendBody("seda:foo","E");
    assertMockEndpointsSatisfied();
    assertTrue(latch.await(10,TimeUnit.SECONDS));
    context.stop();
    assertEquals("Should graceful shutdown","ABCDE",foo);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:foo").to("mock:foo").delay(500).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            foo=foo + exchange.getIn().getBody(String.class);
            latch.countDown();
          }
        }
);
      }
    }
;
  }
}
