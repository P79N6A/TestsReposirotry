@Ignore public class ExcludeCipherSuitesTest extends BaseJettyTest {
  protected String pwd="changeit";
  private SSLContextParameters createSslContextParameters() throws Exception {
    KeyStoreParameters ksp=new KeyStoreParameters();
    ksp.setResource(this.getClass().getClassLoader().getResource("jsse/localhost.ks").toString());
    ksp.setPassword(pwd);
    KeyManagersParameters kmp=new KeyManagersParameters();
    kmp.setKeyPassword(pwd);
    kmp.setKeyStore(ksp);
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    sslContextParameters.setKeyManagers(kmp);
    FilterParameters filter=new FilterParameters();
    filter.getExclude().add("^.*_(MD5|SHA|SHA1)$");
    sslContextParameters.setCipherSuitesFilter(filter);
    return sslContextParameters;
  }
  @Test public void testExclude() throws Exception {
    getMockEndpoint("mock:a").expectedBodiesReceived(1);
    template.sendBody("jetty:https://localhost:" + getPort() + "/test","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        JettyHttpComponent jetty=getContext().getComponent("jetty",JettyHttpComponent.class);
        jetty.setSslContextParameters(createSslContextParameters());
        from("jetty:https://localhost:" + getPort() + "/test").to("mock:a");
      }
    }
;
  }
}
