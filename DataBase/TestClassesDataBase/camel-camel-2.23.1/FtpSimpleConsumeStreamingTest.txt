/** 
 * @version 
 */
public class FtpSimpleConsumeStreamingTest extends FtpServerTestSupport {
  @Test public void testFtpSimpleConsumeAbsolute() throws Exception {
    if (!canTest()) {
      return;
    }
    String expected="Hello World";
    String path=FTP_ROOT_DIR + "/tmp/mytemp";
    template.sendBodyAndHeader("file:" + path,expected,Exchange.FILE_NAME,"hello.txt");
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedHeaderReceived(Exchange.FILE_NAME,"hello.txt");
    context.startRoute("foo");
    assertMockEndpointsSatisfied();
    GenericFile<?> remoteFile=(GenericFile<?>)mock.getExchanges().get(0).getIn().getBody();
    assertTrue(remoteFile.getBody() instanceof InputStream);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("ftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&streamDownload=true").routeId("foo").noAutoStartup().to("mock:result");
      }
    }
;
  }
}
