public class BaseBigQueryTest extends CamelTestSupport {
  protected GoogleBigQueryEndpoint endpoint=mock(GoogleBigQueryEndpoint.class);
  protected Bigquery.Tabledata.InsertAll mockInsertall=mock(Bigquery.Tabledata.InsertAll.class);
  protected GoogleBigQueryProducer producer;
  protected Bigquery.Tabledata tabledataMock;
  protected String tableId="testTableId";
  protected String datasetId="testDatasetId";
  protected String projectId="testProjectId";
  protected GoogleBigQueryConfiguration configuration=new GoogleBigQueryConfiguration();
  protected Bigquery bigquery;
  @Before public void init() throws Exception {
    setupBigqueryMock();
    producer=createProducer();
  }
  protected GoogleBigQueryProducer createProducer() throws Exception {
    configuration.setProjectId(projectId);
    configuration.setTableId(tableId);
    configuration.setDatasetId(datasetId);
    configuration.setTableId("testTableId");
    return new GoogleBigQueryProducer(bigquery,endpoint,configuration);
  }
  protected void setupBigqueryMock() throws Exception {
    bigquery=mock(Bigquery.class);
    tabledataMock=mock(Bigquery.Tabledata.class);
    when(bigquery.tabledata()).thenReturn(tabledataMock);
    when(tabledataMock.insertAll(anyString(),anyString(),anyString(),any())).thenReturn(mockInsertall);
    TableDataInsertAllResponse mockResponse=new TableDataInsertAllResponse();
    when(mockInsertall.execute()).thenReturn(mockResponse);
  }
}
