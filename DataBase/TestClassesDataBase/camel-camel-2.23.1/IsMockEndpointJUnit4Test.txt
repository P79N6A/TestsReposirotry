public class IsMockEndpointJUnit4Test extends CamelBlueprintTestSupport {
  @EndpointInject(uri="mock:seda:result",context="IsMockEndpoints") private MockEndpoint mockSeda;
  @EndpointInject(uri="mock:bar",context="IsMockEndpoints") private MockEndpoint mockBar;
  @EndpointInject(uri="mock:baz",context="IsMockEndpoints") private MockEndpoint mockBaz;
  @Override protected String getBlueprintDescriptor(){
    return "org/apache/camel/test/blueprint/IsMockEndpoints.xml";
  }
  @Override public String isMockEndpoints(){
    return "*";
  }
  @Test public void testMockAllEndpoints() throws Exception {
    mockSeda.expectedBodiesReceived("bar");
    mockBar.expectedBodiesReceived("bar");
    template.sendBody("direct:foo","Hello World");
    assertNotNull(context.hasEndpoint("mock:seda:result"));
    assertNotNull(context.hasEndpoint("mock:baz"));
    assertMockEndpointsSatisfied();
  }
  @Test public void testMockBar() throws Exception {
    mockBar.expectedBodiesReceived("bar");
    template.sendBody("direct:foo","Hello World");
    assertNotNull(context.hasEndpoint("mock:bar"));
    assertMockEndpointsSatisfied();
  }
  @Test public void testMockBaz() throws Exception {
    mockBaz.expectedBodiesReceived("baz");
    template.sendBody("direct:foo","Hello World");
    assertNotNull(context.hasEndpoint("mock:baz"));
    assertMockEndpointsSatisfied();
  }
}
