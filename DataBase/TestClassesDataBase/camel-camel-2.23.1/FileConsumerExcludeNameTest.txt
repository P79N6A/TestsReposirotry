/** 
 * Unit test that file consumer will exclude pre and postfixes
 */
public class FileConsumerExcludeNameTest extends ContextTestSupport {
  @Test public void testExludePreAndPostfixes() throws Exception {
    deleteDirectory("target/exclude");
    prepareFiles();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceivedInAnyOrder("Reports1","Reports2","Reports3");
    mock.expectedMessageCount(3);
    mock.assertIsSatisfied();
  }
  private void prepareFiles() throws Exception {
    String url="file://target/exclude";
    template.sendBodyAndHeader(url,"Hello World",Exchange.FILE_NAME,"hello.xml");
    template.sendBodyAndHeader(url,"Reports1",Exchange.FILE_NAME,"report1.txt");
    template.sendBodyAndHeader(url,"Bye World",Exchange.FILE_NAME,"secret.txt");
    template.sendBodyAndHeader(url,"Reports2",Exchange.FILE_NAME,"report2.txt");
    template.sendBodyAndHeader(url,"Reports3",Exchange.FILE_NAME,"Report3.txt");
    template.sendBodyAndHeader(url,"Secret2",Exchange.FILE_NAME,"Secret2.txt");
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("file://target/exclude/?initialDelay=0&delay=10&exclude=^secret.*|.*xml$").convertBodyTo(String.class).to("mock:result");
      }
    }
;
  }
}
