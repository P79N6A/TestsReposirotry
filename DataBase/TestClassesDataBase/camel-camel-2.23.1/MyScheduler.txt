private static final class MyScheduler implements ScheduledPollConsumerScheduler {
  private CamelContext camelContext;
  private Timer timer;
  private TimerTask timerTask;
  private volatile int counter;
  private String foo;
  @Override public void onInit(  Consumer consumer){
  }
  @Override public void scheduleTask(  final Runnable task){
    this.timerTask=new TimerTask(){
      @Override public void run(){
        counter++;
        task.run();
      }
    }
;
  }
  @Override public void unscheduleTask(){
  }
  public int getCounter(){
    return counter;
  }
  public String getFoo(){
    return foo;
  }
  public void setFoo(  String foo){
    this.foo=foo;
  }
  @Override public void startScheduler(){
    timer=new Timer();
    timer.schedule(timerTask,10);
  }
  @Override public boolean isSchedulerStarted(){
    return true;
  }
  @Override public void setCamelContext(  CamelContext camelContext){
    this.camelContext=camelContext;
  }
  @Override public CamelContext getCamelContext(){
    return camelContext;
  }
  @Override public void shutdown() throws Exception {
    timerTask.cancel();
  }
  @Override public void start() throws Exception {
  }
  @Override public void stop() throws Exception {
  }
}
