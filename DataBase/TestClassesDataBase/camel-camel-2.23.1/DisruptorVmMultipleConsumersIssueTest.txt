/** 
 */
public class DisruptorVmMultipleConsumersIssueTest extends ContextTestSupport {
  @Test public void testDisruptorVmMultipleConsumersIssue() throws Exception {
    getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:b").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:c").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:d").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:e").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:done").expectedBodiesReceived("Hello World");
    template.sendBody("direct:inbox","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:inbox").to(ExchangePattern.InOut,"disruptor-vm:foo?timeout=5000").to("mock:done");
        from("disruptor-vm:foo?multipleConsumers=true").to("log:a").to("mock:a");
        from("disruptor-vm:foo?multipleConsumers=true").to("log:b").to("mock:b");
        from("disruptor-vm:foo?multipleConsumers=true").to("log:c").to("mock:c");
        from("disruptor-vm:foo?multipleConsumers=true").to("log:d").to("mock:d");
        from("disruptor-vm:foo?multipleConsumers=true").to("log:e").to("mock:e");
      }
    }
;
  }
}
