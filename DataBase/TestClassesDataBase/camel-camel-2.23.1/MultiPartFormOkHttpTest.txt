public class MultiPartFormOkHttpTest extends BaseJettyTest {
  private Request createMultipartRequest() throws Exception {
    MediaType mediaType=MediaType.parse("multipart/form-data; boundary=---011000010111000001101001");
    RequestBody body=RequestBody.create(mediaType,"-----011000010111000001101001\r\nContent-Disposition: form-data; name=\"test\"\r\n\r\nsome data here\r\n-----011000010111000001101001--");
    Request request=new Request.Builder().url("http://localhost:" + getPort() + "/test").post(body).addHeader("content-type","multipart/form-data; boundary=---011000010111000001101001").addHeader("cache-control","no-cache").addHeader("postman-token","a9fd95b6-04b9-ea7a-687e-ff828ea00774").build();
    return request;
  }
  @Test public void testSendMultiPartFormFromOkHttpClient() throws Exception {
    OkHttpClient client=new OkHttpClient();
    Request request=createMultipartRequest();
    Response response=client.newCall(request).execute();
    assertEquals(200,response.code());
    assertEquals("Thanks",response.body().string());
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("jetty://http://localhost:{{port}}/test").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertTrue("Should have attachment",exchange.getIn().hasAttachments());
            InputStream is=exchange.getIn().getAttachment("test").getInputStream();
            assertNotNull(is);
            assertEquals("form-data; name=\"test\"",exchange.getIn().getAttachmentObject("test").getHeader("content-disposition"));
            String data=exchange.getContext().getTypeConverter().convertTo(String.class,exchange,is);
            assertNotNull("Should have data",data);
            assertEquals("some data here",data);
            exchange.getOut().setBody("Thanks");
          }
        }
);
      }
    }
;
  }
}
