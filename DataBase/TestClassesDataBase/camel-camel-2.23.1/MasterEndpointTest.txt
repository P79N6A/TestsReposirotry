@ContextConfiguration public class MasterEndpointTest extends AbstractJUnit4SpringContextTests {
  protected static ZKServerFactoryBean lastServerBean;
  protected static CuratorFactoryBean lastClientBean;
  @Autowired protected CamelContext camelContext;
  @EndpointInject(uri="mock:results") protected MockEndpoint resultEndpoint;
  @Produce(uri="seda:bar") protected ProducerTemplate template;
  @Autowired protected ZKServerFactoryBean zkServerBean;
  @Autowired protected CuratorFactoryBean zkClientBean;
  @Before public void startService() throws Exception {
    ServiceHelper.startService(camelContext);
    ServiceHelper.startService(template);
  }
  @After public void afterRun() throws Exception {
    lastServerBean=zkServerBean;
    lastClientBean=zkClientBean;
    ServiceHelper.stopServices(camelContext);
  }
  @AfterClass public static void shutDownZK() throws Exception {
    lastClientBean.destroy();
    lastServerBean.destroy();
  }
  @Test public void testEndpoint() throws Exception {
    List<Route> registeredRoutes=camelContext.getRoutes();
    assertEquals("number of routes",1,registeredRoutes.size());
    MasterEndpoint endpoint=(MasterEndpoint)registeredRoutes.get(0).getEndpoint();
    assertEquals("wrong endpoint uri","seda:bar",endpoint.getConsumerEndpointUri());
    String expectedBody="<matched/>";
    resultEndpoint.expectedBodiesReceived(expectedBody);
    Thread.sleep(5000);
    template.sendBodyAndHeader(expectedBody,"foo","bar");
    MockEndpoint.assertIsSatisfied(camelContext);
  }
  @Test public void testRawPropertiesOnChild() throws Exception {
    final String uri="zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&_AFTER_AMPERSAND_)&username=jdoe";
    DefaultCamelContext ctx=new DefaultCamelContext();
    MasterEndpoint master=(MasterEndpoint)ctx.getEndpoint(uri);
    SftpEndpoint sftp=(SftpEndpoint)master.getEndpoint();
    assertEquals("_BEFORE_AMPERSAND_&_AFTER_AMPERSAND_",sftp.getConfiguration().getPassword());
  }
}
