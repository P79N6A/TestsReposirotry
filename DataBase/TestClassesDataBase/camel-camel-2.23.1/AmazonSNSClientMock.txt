public class AmazonSNSClientMock extends AbstractAmazonSNS {
  private static final String DEFAULT_TOPIC_ARN="arn:aws:sns:us-east-1:541925086079:MyTopic";
  private String endpoint;
  public AmazonSNSClientMock(){
    super();
  }
  @Override public void setEndpoint(  String endpoint){
    this.endpoint=endpoint;
  }
  public String getEndpoint(){
    return endpoint;
  }
  @Override public ConfirmSubscriptionResult confirmSubscription(  ConfirmSubscriptionRequest confirmSubscriptionRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public GetTopicAttributesResult getTopicAttributes(  GetTopicAttributesRequest getTopicAttributesRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public SubscribeResult subscribe(  SubscribeRequest subscribeRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public SetTopicAttributesResult setTopicAttributes(  SetTopicAttributesRequest setTopicAttributesRequest) throws AmazonServiceException, AmazonClientException {
    Assert.assertEquals(DEFAULT_TOPIC_ARN,setTopicAttributesRequest.getTopicArn());
    Assert.assertEquals("Policy",setTopicAttributesRequest.getAttributeName());
    Assert.assertEquals("XXX",setTopicAttributesRequest.getAttributeValue());
    return new SetTopicAttributesResult();
  }
  @Override public DeleteTopicResult deleteTopic(  DeleteTopicRequest deleteTopicRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public RemovePermissionResult removePermission(  RemovePermissionRequest removePermissionRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public ListSubscriptionsResult listSubscriptions(  ListSubscriptionsRequest listSubscriptionsRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public AddPermissionResult addPermission(  AddPermissionRequest addPermissionRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public CreateTopicResult createTopic(  CreateTopicRequest createTopicRequest) throws AmazonServiceException, AmazonClientException {
    CreateTopicResult createTopicResult=new CreateTopicResult();
    createTopicResult.setTopicArn(DEFAULT_TOPIC_ARN);
    return createTopicResult;
  }
  @Override public ListTopicsResult listTopics(  ListTopicsRequest listTopicsRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public UnsubscribeResult unsubscribe(  UnsubscribeRequest unsubscribeRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public ListSubscriptionsByTopicResult listSubscriptionsByTopic(  ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest) throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public PublishResult publish(  PublishRequest publishRequest) throws AmazonServiceException, AmazonClientException {
    PublishResult publishResult=new PublishResult();
    publishResult.setMessageId("dcc8ce7a-7f18-4385-bedd-b97984b4363c");
    return publishResult;
  }
  @Override public ListSubscriptionsResult listSubscriptions() throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public ListTopicsResult listTopics() throws AmazonServiceException, AmazonClientException {
    throw new UnsupportedOperationException();
  }
  @Override public ListTopicsResult listTopics(  String nextToken){
    ListTopicsResult res=new ListTopicsResult();
    Topic topic=new Topic();
    topic.setTopicArn(DEFAULT_TOPIC_ARN);
    List<Topic> list=new ArrayList<>();
    list.add(topic);
    res.setTopics(list);
    return res;
  }
  @Override public ResponseMetadata getCachedResponseMetadata(  AmazonWebServiceRequest request){
    throw new UnsupportedOperationException();
  }
}
