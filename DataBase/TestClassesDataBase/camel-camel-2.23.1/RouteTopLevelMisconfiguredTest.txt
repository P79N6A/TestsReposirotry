public class RouteTopLevelMisconfiguredTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testInvalidOnException() throws Exception {
    try {
      context.addRoutes(new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:start").split(body()).onException(IllegalArgumentException.class).to("mock:illegal").end().to("mock:split").end();
        }
      }
);
      fail("Should fail");
    }
 catch (    IllegalArgumentException e) {
      assertTrue(e.getMessage().startsWith("The output must be added as top-level on the route."));
    }
  }
  @Test public void testInvalidOnCompletion() throws Exception {
    try {
      context.addRoutes(new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:start").split(body()).onCompletion().to("mock:done").end().to("mock:split").end();
        }
      }
);
      fail("Should fail");
    }
 catch (    IllegalArgumentException e) {
      assertTrue(e.getMessage().startsWith("The output must be added as top-level on the route."));
    }
  }
  @Test public void testInvalidTransacted() throws Exception {
    try {
      context.addRoutes(new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:start").split(body()).transacted().to("mock:split").end();
        }
      }
);
      fail("Should fail");
    }
 catch (    IllegalArgumentException e) {
      assertTrue(e.getMessage().startsWith("The output must be added as top-level on the route."));
    }
  }
}
