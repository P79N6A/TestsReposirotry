/** 
 * Test class for  {@link com.google.api.services.gmail.Gmail$Users$Labels} APIs.
 */
public class GmailUsersLabelsIntegrationTest extends AbstractGoogleMailTestSupport {
  private static final String CAMEL_TEST_LABEL="CamelTestLabel";
  private static final Logger LOG=LoggerFactory.getLogger(GmailUsersLabelsIntegrationTest.class);
  private static final String PATH_PREFIX=GoogleMailApiCollection.getCollection().getApiName(GmailUsersLabelsApiMethod.class).getName();
  @Test public void testLabels() throws Exception {
    com.google.api.services.gmail.model.ListLabelsResponse labels=requestBody("direct://LIST",CURRENT_USERID);
    String labelId=null;
    if (getTestLabel(labels) == null) {
      Map<String,Object> headers=new HashMap<>();
      headers.put("CamelGoogleMail.userId",CURRENT_USERID);
      Label label=new Label().setName(CAMEL_TEST_LABEL).setMessageListVisibility("show").setLabelListVisibility("labelShow");
      headers.put("CamelGoogleMail.content",label);
      com.google.api.services.gmail.model.Label result=requestBodyAndHeaders("direct://CREATE",null,headers);
      assertNotNull("create result",result);
      labelId=result.getId();
    }
 else {
      labelId=getTestLabel(labels).getId();
    }
    labels=requestBody("direct://LIST",CURRENT_USERID);
    assertTrue(getTestLabel(labels) != null);
    Map<String,Object> headers=new HashMap<>();
    headers.put("CamelGoogleMail.userId",CURRENT_USERID);
    headers.put("CamelGoogleMail.id",labelId);
    requestBodyAndHeaders("direct://DELETE",null,headers);
    labels=requestBody("direct://LIST",CURRENT_USERID);
    assertTrue(getTestLabel(labels) == null);
  }
  private Label getTestLabel(  com.google.api.services.gmail.model.ListLabelsResponse labels){
    for (    Label label : labels.getLabels()) {
      if (CAMEL_TEST_LABEL.equals(label.getName())) {
        return label;
      }
    }
    return null;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure(){
        from("direct://CREATE").to("google-mail://" + PATH_PREFIX + "/create");
        from("direct://DELETE").to("google-mail://" + PATH_PREFIX + "/delete");
        from("direct://GET").to("google-mail://" + PATH_PREFIX + "/get");
        from("direct://LIST").to("google-mail://" + PATH_PREFIX + "/list?inBody=userId");
        from("direct://PATCH").to("google-mail://" + PATH_PREFIX + "/patch");
        from("direct://UPDATE").to("google-mail://" + PATH_PREFIX + "/update");
      }
    }
;
  }
}
