/** 
 * @version 
 */
public class ExtendedStartupListenerComponentTest extends ContextTestSupport {
  private MyComponent my;
  @Test public void testExtendedStartupListenerComponent() throws Exception {
    assertTrue(context.getRouteStatus("foo").isStarted());
    assertTrue(context.getRouteStatus("bar").isStarted());
    assertTrue(context.getRouteStatus("late").isStarted());
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:late").expectedMessageCount(1);
    template.sendBody("direct:foo","Hello World");
    template.sendBody("direct:late","Bye World");
    assertMockEndpointsSatisfied();
    assertEquals(2 + 1,my.getInvoked());
  }
private static class MyComponent extends DirectComponent implements ExtendedStartupListener {
    private int invoked;
    public void onCamelContextStarted(    CamelContext context,    boolean alreadyStarted) throws Exception {
      invoked++;
      if (!alreadyStarted) {
        assertTrue(context.getRouteStatus("foo").isStopped());
        assertTrue(context.getRouteStatus("bar").isStopped());
      }
    }
    public int getInvoked(){
      return invoked;
    }
    @Override public void onCamelContextFullyStarted(    CamelContext context,    boolean alreadyStarted) throws Exception {
      invoked++;
      assertTrue(context.getRouteStatus("foo").isStarted());
      assertTrue(context.getRouteStatus("bar").isStarted());
      context.addRoutes(new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:late").routeId("late").to("mock:late");
        }
      }
);
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        my=new MyComponent();
        context.addComponent("my",my);
        from("direct:foo").routeId("foo").to("my:bar");
        from("my:bar").routeId("bar").to("mock:result");
      }
    }
;
  }
}
