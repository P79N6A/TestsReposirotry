public class FastHeadersMapFactoryTest extends Assert {
  @Test public void testLookupCaseAgnostic(){
    Map<String,Object> map=new FastHeadersMapFactory().newMap();
    assertNull(map.get("foo"));
    map.put("foo","cheese");
    assertEquals("cheese",map.get("foo"));
    assertEquals("cheese",map.get("Foo"));
    assertEquals("cheese",map.get("FOO"));
  }
  @Test public void testConstructFromOther(){
    Map<String,Object> other=new FastHeadersMapFactory().newMap();
    other.put("Foo","cheese");
    other.put("bar",123);
    Map<String,Object> map=new FastHeadersMapFactory().newMap(other);
    assertEquals("cheese",map.get("FOO"));
    assertEquals("cheese",map.get("foo"));
    assertEquals("cheese",map.get("Foo"));
    assertEquals(123,map.get("BAR"));
    assertEquals(123,map.get("bar"));
    assertEquals(123,map.get("BaR"));
  }
  @Test public void testIsInstance(){
    Map<String,Object> map=new FastHeadersMapFactory().newMap();
    Map<String,Object> other=new FastHeadersMapFactory().newMap(map);
    other.put("Foo","cheese");
    other.put("bar",123);
    assertTrue(new FastHeadersMapFactory().isInstanceOf(map));
    assertTrue(new FastHeadersMapFactory().isInstanceOf(other));
    assertFalse(new FastHeadersMapFactory().isInstanceOf(new HashMap<>()));
  }
}
