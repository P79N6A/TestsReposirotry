/** 
 * Represents a task which has multiple steps so that it can move from stage to stage with the method annotated with  {@link @Consumed} being invoked when the Camel consumerhas processed the entity bean
 * @version 
 */
@Entity @NamedQuery(name="step1",query="select x from MultiSteps x where x.step = 1") public class MultiSteps {
  private static final Logger LOG=LoggerFactory.getLogger(MultiSteps.class);
  private Long id;
  private String address;
  private int step;
  public MultiSteps(){
  }
  public MultiSteps(  String address){
    setAddress(address);
    setStep(1);
  }
  @Id @GeneratedValue public Long getId(){
    return id;
  }
  public void setId(  Long id){
    this.id=id;
  }
  public String getAddress(){
    return address;
  }
  public void setAddress(  String address){
    this.address=address;
  }
  public int getStep(){
    return step;
  }
  public void setStep(  int step){
    this.step=step;
  }
  @PreConsumed public void beforeGoToNextStep(  Exchange exchange){
    Assert.assertNotNull(exchange);
    LOG.info("Calling beforeGoToNextStep");
  }
  /** 
 * This method is invoked after the entity bean is processed successfully by a Camel endpoint
 */
  @Consumed public void goToNextStep(){
    setStep(getStep() + 1);
    LOG.info("Invoked the completion complete method. Now updated the step to: {}",getStep());
  }
  @Override public String toString(){
    return "MultiSteps[id: " + getId() + ", address: "+ getAddress()+ ", step: "+ getStep()+ "]";
  }
}
