/** 
 * @version 
 */
public class BeanWithXPathInjectionTest extends ContextTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(BeanRouteTest.class);
  protected MyBean myBean=new MyBean();
  @Test public void testSendMessage() throws Exception {
    String expectedBody="<env:Envelope xmlns:env='http://www.w3.org/2003/05/soap-envelope'><env:Body>" + "<foo>bar</foo></env:Body></env:Envelope>";
    template.sendBodyAndHeader("direct:in",expectedBody,"foo","bar");
    assertEquals("bean body: " + myBean,expectedBody,myBean.body);
    assertEquals("bean foo: " + myBean,"bar",myBean.foo);
  }
  @Test public void testSendTwoMessages() throws Exception {
    String expectedBody="<env:Envelope xmlns:env='http://www.w3.org/2003/05/soap-envelope'><env:Body>" + "<foo>bar</foo></env:Body></env:Envelope>";
    template.sendBodyAndHeader("direct:in",expectedBody,"foo","bar");
    assertEquals("bean body: " + myBean,expectedBody,myBean.body);
    assertEquals("bean foo: " + myBean,"bar",myBean.foo);
    String expectedBody2="<env:Envelope xmlns:env='http://www.w3.org/2003/05/soap-envelope'><env:Body>" + "<foo>baz</foo></env:Body></env:Envelope>";
    template.sendBodyAndHeader("direct:in",expectedBody2,"foo","baz");
    assertEquals("bean body: " + myBean,expectedBody2,myBean.body);
    assertEquals("bean foo: " + myBean,"baz",myBean.foo);
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myBean",myBean);
    return answer;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:in").bean("myBean");
      }
    }
;
  }
public static class MyBean {
    public String body;
    public String foo;
    @Override public String toString(){
      return "MyBean[foo: " + foo + " body: "+ body+ "]";
    }
    public void read(    String body,    @XPath("/soap:Envelope/soap:Body/foo/text()") String foo){
      this.foo=foo;
      this.body=body;
      LOG.info("read() method called on " + this);
    }
  }
}
