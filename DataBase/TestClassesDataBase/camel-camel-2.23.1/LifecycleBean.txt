static class LifecycleBean implements SmartLifecycle, TestState {
  ApplicationContext context;
  boolean started;
  boolean stopped;
  @Autowired public LifecycleBean(  final ApplicationContext context){
    this.context=context;
  }
  @Override public void assertValid(){
    assertThat(started).as("Lifecycle should have been started").isTrue();
    assertThat(stopped).as("Lifecycle should be stopped").isTrue();
  }
  @Override public int getPhase(){
    return 0;
  }
  @Override public boolean isAutoStartup(){
    return true;
  }
  @Override public boolean isRunning(){
    return started;
  }
  @Override public void start(){
    assertThat(camelIsStopped(context)).as("lifecycle bean should be started before Camel").isTrue();
    started=true;
  }
  @Override public void stop(){
    assertThat(camelIsStopped(context)).as("lifecycle bean should be stopped after Camel").isTrue();
    stopped=true;
  }
  @Override public void stop(  final Runnable callback){
    stop();
    callback.run();
  }
}
