public class ZipkinMultiServerNoClientTest extends CamelTestSupport {
  private ZipkinTracer zipkin;
  protected void setSpanReporter(  ZipkinTracer zipkin){
    zipkin.setSpanReporter(Reporter.NOOP);
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    zipkin=new ZipkinTracer();
    zipkin.addServerServiceMapping("seda:abc","abc");
    zipkin.addServerServiceMapping("seda:xyz","xyz");
    setSpanReporter(zipkin);
    zipkin.init(context);
    return context;
  }
  @Test public void testZipkinRoute() throws Exception {
    template.requestBody("direct:start","Hello abc");
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("seda:abc");
        from("seda:abc").routeId("abc").log("routing at ${routeId}").multicast().to("seda:xyz").end().log("End of routing");
        from("seda:xyz").routeId("xyz").log("routing at ${routeId}").delay(simple("${random(1000,2000)}"));
      }
    }
;
  }
}
