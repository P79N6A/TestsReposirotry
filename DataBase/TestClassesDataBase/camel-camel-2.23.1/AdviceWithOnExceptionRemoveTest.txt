/** 
 * @version 
 */
public class AdviceWithOnExceptionRemoveTest extends ContextTestSupport {
  @Test public void testAdviceWithOnException() throws Exception {
    RouteDefinition route=context.getRouteDefinitions().get(0);
    route.adviceWith(context,new AdviceWithRouteBuilder(){
      @Override public void configure() throws Exception {
        weaveById("removeMe").remove();
      }
    }
);
    context.start();
    getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:handled").expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(IllegalArgumentException.class).process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setBody("I changed this");
          }
        }
).id("removeMe").handled(true).to("mock:handled");
        from("direct:start").to("mock:a").id("a").throwException(new IllegalArgumentException("Forced")).to("mock:b").id("b");
      }
    }
;
  }
}
