public class JndiRegistryTest extends Assert {
  @Test public void testLookupByType() throws Exception {
    JndiRegistry jndi=new JndiRegistry(JndiTest.createInitialContext());
    jndi.bind("foo",new SimpleLanguage());
    jndi.bind("bar","Hello bar");
    assertEquals("Hello bar",jndi.lookup("bar"));
    assertEquals("Hello bar",jndi.lookupByName("bar"));
    assertEquals("Hello bar",jndi.lookupByNameAndType("bar",String.class));
    assertNull(jndi.lookup("unknown"));
    assertNull(jndi.lookupByName("unknown"));
    try {
      assertNull(jndi.lookupByNameAndType("bar",Language.class));
      fail("Should throw exception");
    }
 catch (    NoSuchBeanException e) {
    }
    assertNotNull(jndi.lookupByNameAndType("foo",Language.class));
    assertNotNull(jndi.lookupByNameAndType("foo",SimpleLanguage.class));
    assertSame(jndi.lookupByNameAndType("foo",Language.class),jndi.lookupByNameAndType("foo",SimpleLanguage.class));
    Map<String,?> set=jndi.lookupByType(Language.class);
    assertNotNull(set);
    assertEquals(1,set.size());
    String key=set.keySet().iterator().next();
    assertEquals("foo",key);
    assertSame(jndi.lookupByName("foo"),set.values().iterator().next());
  }
  @Test public void testStandalone() throws Exception {
    JndiRegistry jndi=new JndiRegistry(true);
    jndi.bind("bar","Hello bar");
    assertEquals("Hello bar",jndi.lookup("bar"));
  }
  @Test public void testCamelContextFactory() throws Exception {
    Map<Object,Object> env=new HashMap<>();
    env.put("java.naming.factory.initial","org.apache.camel.util.jndi.CamelInitialContextFactory");
    JndiRegistry jndi=new JndiRegistry(env);
    jndi.bind("bar","Hello bar");
    assertEquals("Hello bar",jndi.lookup("bar"));
  }
}
