/** 
 * @version 
 */
public class SedaInOutChainedWithOnCompletionTest extends ContextTestSupport {
  @Test public void testInOutSedaChainedWithCustomOnCompletion() throws Exception {
    getMockEndpoint("mock:a").expectedBodiesReceived("start");
    getMockEndpoint("mock:b").expectedBodiesReceived("start-a");
    getMockEndpoint("mock:c").expectedBodiesReceived("start-a-b","onCustomCompletion");
    String reply=template.requestBody("seda:a","start",String.class);
    assertEquals("start-a-b-c",reply);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:a").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.addOnCompletion(new SynchronizationAdapter(){
              @Override public void onDone(              Exchange exchange){
                template.sendBody("mock:c","onCustomCompletion");
              }
            }
);
          }
        }
).to("mock:a").transform(simple("${body}-a")).to("seda:b");
        from("seda:b").to("mock:b").transform(simple("${body}-b")).to("seda:c");
        from("seda:c").to("mock:c").transform(simple("${body}-c"));
      }
    }
;
  }
}
