public class NettySingleCodecTest extends BaseNettyTest {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    StringEncoder stringEncoder=new StringEncoder();
    StringDecoder stringDecoder=new StringDecoder();
    registry.bind("encoder",stringEncoder);
    registry.bind("decoder",stringDecoder);
    return registry;
  }
  @Test public void canSupplySingleCodecToEndpointPipeline() throws Exception {
    String poem=new Poetry().getPoem();
    MockEndpoint mock=getMockEndpoint("mock:single-codec");
    mock.expectedBodiesReceived(poem);
    sendBody("direct:single-codec",poem);
    mock.await(1,TimeUnit.SECONDS);
    mock.assertIsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:single-codec").to("netty4:tcp://localhost:{{port}}?encoder=#encoder&sync=false");
        from("netty4:tcp://localhost:{{port}}?decoder=#decoder&sync=false").to("mock:single-codec");
      }
    }
;
  }
}
