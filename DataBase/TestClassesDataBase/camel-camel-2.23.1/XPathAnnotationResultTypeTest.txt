/** 
 * @version 
 */
public class XPathAnnotationResultTypeTest extends CamelTestSupport {
  protected MyBean myBean=new MyBean();
  @Test public void testSendMessage() throws Exception {
    String response=(String)template.requestBody("direct:in1","<a><b>hello</b></a>");
    assertEquals("HELLO",response);
    response=(String)template.requestBody("direct:in2","<a><b>hello</b></a>");
    assertEquals("HELLO",response);
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myBean",myBean);
    return answer;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        System.setProperty(XPathFactory.DEFAULT_PROPERTY_NAME + ":" + NamespaceConstant.OBJECT_MODEL_SAXON,"net.sf.saxon.xpath.XPathFactoryImpl");
        from("direct:in1").bean("myBean","readImplicit");
        from("direct:in2").bean("myBean","readExplicit");
      }
    }
;
  }
public static class MyBean {
    public String abText;
    public String readImplicit(    @XPath("upper-case(//a/b/text())") String abText){
      return abText;
    }
    public String readExplicit(    @XPath(value="upper-case(//a/b/text())",resultType=String.class) String abText){
      return abText;
    }
  }
}
