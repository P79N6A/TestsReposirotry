@RunWith(MockitoJUnitRunner.class) public class PgEventHelperTest {
  @Rule public ExpectedException expectedException=ExpectedException.none();
  @Test public void testToPGConnectionWithNullConnection() throws Exception {
    expectedException.expect(IllegalArgumentException.class);
    PgEventHelper.toPGConnection(null);
  }
  @Test public void testToPGConnectionWithNonWrappedConnection() throws Exception {
    Connection originalConnection=mock(PGConnection.class);
    PGConnection actualConnection=PgEventHelper.toPGConnection(originalConnection);
    assertSame(originalConnection,actualConnection);
  }
  @Test public void testToPGConnectionWithWrappedConnection() throws Exception {
    Connection wrapperConnection=mock(Connection.class);
    PGConnection unwrappedConnection=mock(PGConnection.class);
    when(wrapperConnection.isWrapperFor(PGConnection.class)).thenReturn(true);
    when(wrapperConnection.unwrap(PGConnection.class)).thenReturn(unwrappedConnection);
    PGConnection actualConnection=PgEventHelper.toPGConnection(wrapperConnection);
    assertSame(unwrappedConnection,actualConnection);
  }
  @Test public void testToPGConnectionWithInvalidWrappedConnection() throws Exception {
    expectedException.expect(IllegalStateException.class);
    Connection wrapperConnection=mock(Connection.class);
    when(wrapperConnection.isWrapperFor(PGConnection.class)).thenReturn(false);
    PgEventHelper.toPGConnection(wrapperConnection);
  }
}
