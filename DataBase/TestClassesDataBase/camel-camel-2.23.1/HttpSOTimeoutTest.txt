/** 
 * @version 
 */
public class HttpSOTimeoutTest extends BaseHttpTest {
  private HttpServer localServer;
  @Before @Override public void setUp() throws Exception {
    localServer=ServerBootstrap.bootstrap().setHttpProcessor(getBasicHttpProcessor()).setConnectionReuseStrategy(getConnectionReuseStrategy()).setResponseFactory(getHttpResponseFactory()).setExpectationVerifier(getHttpExpectationVerifier()).setSslContext(getSSLContext()).registerHandler("/",new DelayValidationHandler("GET",null,null,getExpectedContent(),2000)).create();
    localServer.start();
    super.setUp();
  }
  @After @Override public void tearDown() throws Exception {
    super.tearDown();
    if (localServer != null) {
      localServer.stop();
    }
  }
  @Test public void httpGet() throws Exception {
    Exchange exchange=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "?httpClient.SocketTimeout=5000",new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    assertExchange(exchange);
  }
  @Test public void httpGetShouldThrowASocketTimeoutException() throws Exception {
    Exchange reply=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "?httpClient.SocketTimeout=1000",new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    Exception e=reply.getException();
    assertNotNull("Should have thrown an exception",e);
  }
  @Test public void httpGetUriOption() throws Exception {
    Exchange exchange=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "?socketTimeout=5000",new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    assertExchange(exchange);
  }
  @Test public void httpGetUriOptionShouldThrowASocketTimeoutException() throws Exception {
    Exchange reply=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "?socketTimeout=1000",new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    Exception e=reply.getException();
    assertNotNull("Should have thrown an exception",e);
  }
}
