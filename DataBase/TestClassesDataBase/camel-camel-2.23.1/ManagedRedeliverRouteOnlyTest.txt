/** 
 */
public class ManagedRedeliverRouteOnlyTest extends ManagementTestSupport {
  @Test public void testRedeliver() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    MBeanServer mbeanServer=getMBeanServer();
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    Object out=template.requestBody("direct:start","Hello World");
    assertEquals("Error",out);
    assertMockEndpointsSatisfied();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"route1\"");
    Long num=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
    assertEquals(1,num.longValue());
    num=(Long)mbeanServer.getAttribute(on,"ExchangesFailed");
    assertEquals(0,num.longValue());
    num=(Long)mbeanServer.getAttribute(on,"FailuresHandled");
    assertEquals(1,num.longValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.getManagementStrategy().getManagementAgent().setStatisticsLevel(ManagementStatisticsLevel.RoutesOnly);
        onException(Exception.class).handled(true).redeliveryDelay(0).maximumRedeliveries(4).logStackTrace(false).setBody().constant("Error");
        from("direct:start").to("mock:foo").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            log.info("Invoking me");
            throw new IllegalArgumentException("Damn");
          }
        }
).id("myprocessor");
      }
    }
;
  }
}
