/** 
 * @version 
 */
public class JmsInOutRoutingSlipTest extends CamelTestSupport {
  @Test public void testJmsInOutRoutingSlip() throws Exception {
    getMockEndpoint("mock:foo").expectedBodiesReceived("World");
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:end").expectedBodiesReceived("Bye World");
    template.sendBodyAndHeader("activemq:queue:start","World","slip","activemq:queue:foo,activemq:queue:result");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:start").setExchangePattern(ExchangePattern.InOut).routingSlip(header("slip")).to("log:end").to("mock:end");
        from("activemq:queue:foo").to("mock:foo").to("log:foo").transform(body().prepend("Bye "));
        from("activemq:queue:result").to("log:result").to("mock:result");
      }
    }
;
  }
}
