/** 
 * Unit test to verify that we can pool an ASCII file from the FTP Server and store it on a local file path
 */
public class FromFtpToAsciiFileTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/tmp3/camel?password=admin&binary=false&fileExist=Override";
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    prepareFtpServer();
  }
  @Test public void testFtpRoute() throws Exception {
    MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
    resultEndpoint.expectedMinimumMessageCount(1);
    resultEndpoint.expectedBodiesReceived("Hello World from FTPServer");
    resultEndpoint.assertIsSatisfied();
    File file=new File("target/ftptest/deleteme.txt");
    assertTrue("The ASCII file should exists",file.exists());
    assertTrue("File size wrong",file.length() > 10);
  }
  private void prepareFtpServer() throws Exception {
    Endpoint endpoint=context.getEndpoint(getFtpUrl());
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setBody("Hello World from FTPServer");
    exchange.getIn().setHeader(Exchange.FILE_NAME,"hello.txt");
    Producer producer=endpoint.createProducer();
    producer.start();
    producer.process(exchange);
    producer.stop();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        String fileUrl="file:target/ftptest/?fileExist=Override&noop=true";
        from(getFtpUrl()).setHeader(Exchange.FILE_NAME,constant("deleteme.txt")).convertBodyTo(String.class).to(fileUrl).to("mock:result");
      }
    }
;
  }
}
