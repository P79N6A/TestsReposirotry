public class IBatisShutdownCurrentTaskOnlyTest extends IBatisTestSupport {
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    Account account=new Account();
    account.setId(881);
    account.setFirstName("A");
    account.setLastName("A");
    account.setEmailAddress("a@gmail.com");
    template.sendBody("ibatis:insertAccount?statementType=Insert",account);
    account=new Account();
    account.setId(882);
    account.setFirstName("B");
    account.setLastName("B");
    account.setEmailAddress("b@gmail.com");
    template.sendBody("ibatis:insertAccount?statementType=Insert",account);
    account=new Account();
    account.setId(883);
    account.setFirstName("C");
    account.setLastName("C");
    account.setEmailAddress("c@gmail.com");
    template.sendBody("ibatis:insertAccount?statementType=Insert",account);
    account=new Account();
    account.setId(884);
    account.setFirstName("D");
    account.setLastName("D");
    account.setEmailAddress("d@gmail.com");
    template.sendBody("ibatis:insertAccount?statementType=Insert",account);
    account=new Account();
    account.setId(885);
    account.setFirstName("E");
    account.setLastName("E");
    account.setEmailAddress("e@gmail.com");
    template.sendBody("ibatis:insertAccount?statementType=Insert",account);
    account=new Account();
    account.setId(886);
    account.setFirstName("F");
    account.setLastName("F");
    account.setEmailAddress("f@gmail.com");
    template.sendBody("ibatis:insertAccount?statementType=Insert",account);
  }
  @Test public void testShutdownCompleteCurrentTaskOnly() throws Exception {
    MockEndpoint bar=getMockEndpoint("mock:bar");
    bar.expectedMinimumMessageCount(1);
    bar.setResultWaitTime(3000);
    assertMockEndpointsSatisfied();
    context.stop();
    assertTrue("Should NOT complete all messages, was: " + bar.getReceivedCounter(),bar.getReceivedCounter() < 8);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("ibatis:selectAllAccounts").routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo");
        from("seda:foo").routeId("route2").to("mock:bar");
      }
    }
;
  }
}
