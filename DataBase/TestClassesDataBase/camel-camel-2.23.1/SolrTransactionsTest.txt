public class SolrTransactionsTest extends SolrComponentTestSupport {
  @Rule public ExpectedException thrown=ExpectedException.none();
  private SolrFixtures.TestServerType solrServerType;
  public SolrTransactionsTest(  SolrFixtures.TestServerType solrServerType){
    super(solrServerType);
    this.solrServerType=solrServerType;
  }
  @Test public void testCommit() throws Exception {
    solrInsertTestEntry();
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
    template.sendBodyAndHeader("direct:start",null,SolrConstants.OPERATION,SolrConstants.OPERATION_COMMIT);
    assertEquals("wrong number of entries found",1,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
  }
  @Test public void testRollback() throws Exception {
    if (SolrFixtures.TestServerType.USE_CLOUD == this.solrServerType) {
      thrown.expect(CamelExecutionException.class);
      final String expectedMessagePart="Rollback is currently not supported in SolrCloud mode. (SOLR-4895)";
      thrown.expectCause(allOf(isA(HttpSolrClient.RemoteSolrException.class),hasMessage(containsString(expectedMessagePart))));
    }
    solrInsertTestEntry();
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
    template.sendBodyAndHeader("direct:start",null,SolrConstants.OPERATION,SolrConstants.OPERATION_ROLLBACK);
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
    template.sendBodyAndHeader("direct:start",null,SolrConstants.OPERATION,SolrConstants.OPERATION_COMMIT);
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
  }
  @Test public void testOptimize() throws Exception {
    solrInsertTestEntry();
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
    template.sendBodyAndHeader("direct:start",null,SolrConstants.OPERATION,SolrConstants.OPERATION_OPTIMIZE);
    assertEquals("wrong number of entries found",1,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
  }
}
