public class AggregationStrategyBeanAdapterRefMethodNameTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myAppender",new AggregationStrategyBeanAdapterRefMethodNameTest.MyBodyAppender());
    return jndi;
  }
  @Test public void testAggregate() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("ABC");
    template.sendBody("direct:start","A");
    template.sendBody("direct:start","B");
    template.sendBody("direct:start","C");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(constant(true)).aggregationStrategyRef("myAppender").aggregationStrategyMethodName("append").completionSize(3).to("mock:result");
      }
    }
;
  }
public static final class MyBodyAppender {
    public String append(    String existing,    String next){
      if (next != null) {
        return existing + next;
      }
 else {
        return existing;
      }
    }
    public String foo(    String foo,    String bar){
      return "foobar";
    }
  }
}
