/** 
 * This class tests the marshalling of  {@link org.apache.camel.dataformat.univocity.UniVocityCsvDataFormat} using theSpring DSL.
 */
public final class UniVocityCsvDataFormatMarshalSpringTest extends CamelSpringTestSupport {
  @EndpointInject(uri="mock:result") MockEndpoint result;
  /** 
 * Tests that we can marshal CSV with the default configuration.
 */
  @Test public void shouldMarshalWithDefaultConfiguration() throws Exception {
    template.sendBody("direct:default",Arrays.asList(asMap("A","1","B","2","C","3"),asMap("A","one","B","two","C","three")));
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
    String body=assertIsInstanceOf(String.class,result.getExchanges().get(0).getIn().getBody());
    assertEquals(join("1,2,3","one,two,three"),body);
  }
  /** 
 * Tests that we can marshal a single line with CSV.
 */
  @Test public void shouldMarshalSingleLine() throws Exception {
    template.sendBody("direct:default",asMap("A","1","B","2","C","3"));
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
    String body=assertIsInstanceOf(String.class,result.getExchanges().get(0).getIn().getBody());
    assertEquals(join("1,2,3"),body);
  }
  /** 
 * Tests that the marshalling adds new columns on the fly and keep its order
 */
  @Test public void shouldMarshalAndAddNewColumns() throws Exception {
    template.sendBody("direct:default",Arrays.asList(asMap("A","1","B","2"),asMap("C","three","A","one","B","two")));
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
    String body=assertIsInstanceOf(String.class,result.getExchanges().get(0).getIn().getBody());
    assertEquals(join("1,2","one,two,three"),body);
  }
  /** 
 * Tests that we can marshal CSV with specific headers
 */
  @Test public void shouldMarshalWithSpecificHeaders() throws Exception {
    template.sendBody("direct:header",Arrays.asList(asMap("A","1","B","2","C","3"),asMap("A","one","B","two","C","three")));
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
    String body=assertIsInstanceOf(String.class,result.getExchanges().get(0).getIn().getBody());
    assertEquals(join("1,3","one,three"),body);
  }
  /** 
 * Tests that we can marshal CSV using and advanced configuration
 */
  @Test public void shouldMarshalUsingAdvancedConfiguration() throws Exception {
    template.sendBody("direct:advanced",Arrays.asList(asMap("A",null,"B","","C","_"),asMap("A","one","B","two","C","three")));
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
    String body=assertIsInstanceOf(String.class,result.getExchanges().get(0).getIn().getBody());
    assertEquals(join("_N/A_;_empty_;_-__","_one_;_two_;_three_"),body);
  }
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/univocity/UniVocityCsvDataFormatMarshalSpringTest.xml");
  }
}
