/** 
 */
public class ContextScopedOnExceptionNotHandledErrorHandlerRefIssueTest extends ContextTestSupport {
  @Test public void testOnExceptionErrorHandlerRef() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:handled").expectedMessageCount(1);
    getMockEndpoint("mock:dead").expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Damn",cause.getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myDLC",new DeadLetterChannelBuilder("mock:dead"));
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(IllegalArgumentException.class).handled(false).to("mock:handled").end();
        errorHandler(new ErrorHandlerBuilderRef("myDLC"));
        from("direct:start").to("mock:a").throwException(new IllegalArgumentException("Damn"));
      }
    }
;
  }
}
