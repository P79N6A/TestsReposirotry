/** 
 * Test defining a context component using the Spring XML DSL
 */
@ContextConfiguration public class SpringDslContextComponentTest extends AbstractJUnit4SpringContextTests {
  @EndpointInject(uri="mock:results",context="tester") private MockEndpoint resultEndpoint;
  @Produce(uri="tester:start",context="tester") private ProducerTemplate template;
  @Test public void testUsingContextComponent() throws Exception {
    Object accounts=applicationContext.getBean("accounts");
    logger.info("Found accounts: " + accounts);
    resultEndpoint.expectedHeaderReceived("received","true");
    resultEndpoint.expectedMessageCount(2);
    template.sendBody("<purchaseOrder>one</purchaseOrder>");
    template.sendBody("<purchaseOrder>two</purchaseOrder>");
    resultEndpoint.assertIsSatisfied();
    List<Exchange> receivedExchanges=resultEndpoint.getReceivedExchanges();
    for (    Exchange exchange : receivedExchanges) {
      Message in=exchange.getIn();
      logger.info("Received from: " + exchange.getFromEndpoint() + " headers: "+ in.getHeaders()+ " body: "+ in.getBody());
    }
  }
}
