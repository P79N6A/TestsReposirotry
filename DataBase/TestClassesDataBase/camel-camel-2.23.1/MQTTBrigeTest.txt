/** 
 * Tests bridging between two mqtt topic using Camel
 * @version
 */
public class MQTTBrigeTest extends MQTTBaseTest {
  @EndpointInject(uri="mock:result") protected MockEndpoint resultEndpoint;
  @Produce(uri="direct:start") protected ProducerTemplate template;
  @Produce(uri="direct:startWorkaround") protected ProducerTemplate workaroundTemplate;
  @Test public void testMqttBridge() throws Exception {
    String expectedBody="Dummy!";
    resultEndpoint.expectedBodiesReceived(expectedBody);
    template.sendBody(expectedBody);
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testMqttBridgeWorkAround() throws Exception {
    String expectedBody="Dummy!";
    resultEndpoint.expectedBodiesReceived(expectedBody);
    workaroundTemplate.sendBody(expectedBody);
    resultEndpoint.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("mqtt:foo?publishTopicName=test/topic1&lazySessionCreation=false&host=" + MQTTTestSupport.getHostForMQTTEndpoint());
        from("mqtt:foo?subscribeTopicName=test/topic1&host=" + MQTTTestSupport.getHostForMQTTEndpoint()).to("log:testlogger?showAll=true").to("mqtt:foo?publishTopicName=test/resulttopic&lazySessionCreation=false&host=" + MQTTTestSupport.getHostForMQTTEndpoint()).log(LoggingLevel.ERROR,"Message processed");
        from("direct:startWorkaround").to("mqtt:foo?publishTopicName=test/topic2&host=" + MQTTTestSupport.getHostForMQTTEndpoint());
        from("mqtt:foo?subscribeTopicName=test/topic2&host=" + MQTTTestSupport.getHostForMQTTEndpoint()).to("log:testlogger?showAll=true").to("seda:a");
        from("seda:a").to("mqtt:foo?publishTopicName=test/resulttopic&host=" + MQTTTestSupport.getHostForMQTTEndpoint()).log(LoggingLevel.ERROR,"Message processed");
        from("mqtt:foo?subscribeTopicName=test/resulttopic&host=" + MQTTTestSupport.getHostForMQTTEndpoint()).to("mock:result");
      }
    }
;
  }
}
