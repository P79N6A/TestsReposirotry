public class JpaProducerWithQueryParametersHeaderTest extends Assert {
  protected static final Logger LOG=LoggerFactory.getLogger(JpaProducerWithQueryParametersHeaderTest.class);
  protected DefaultCamelContext camelContext;
  protected ProducerTemplate template;
  @Test @SuppressWarnings("rawtypes") public void testProducerWithNamedQuery() throws Exception {
    template.sendBody("direct:deleteCustomers","");
    Customer c1=new Customer();
    c1.setName("Willem");
    template.sendBody("direct:addCustomer",c1);
    Customer c2=new Customer();
    c2.setName("Dummy");
    template.sendBody("direct:addCustomer",c2);
    Map<String,Object> params=new HashMap<>();
    params.put("custName","${body}");
    List list=template.requestBodyAndHeader("direct:namedQuery","Willem",JpaConstants.JPA_PARAMETERS_HEADER,params,List.class);
    assertEquals(1,list.size());
    assertEquals("Willem",((Customer)list.get(0)).getName());
    int integer=template.requestBody("direct:deleteCustomers",null,int.class);
    assertEquals(2,integer);
  }
  @Before public void setUp() throws Exception {
    camelContext=new DefaultCamelContext();
    camelContext.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:namedQuery").to("jpa://" + Customer.class.getName() + "?namedQuery=findAllCustomersWithName");
        from("direct:addCustomer").to("jpa://" + Customer.class.getName());
        from("direct:deleteCustomers").to("jpa://" + Customer.class.getName() + "?query=delete from "+ Customer.class.getName());
      }
    }
);
    template=camelContext.createProducerTemplate();
    ServiceHelper.startServices(template,camelContext);
  }
  @After public void tearDown() throws Exception {
    ServiceHelper.stopServices(template,camelContext);
  }
}
