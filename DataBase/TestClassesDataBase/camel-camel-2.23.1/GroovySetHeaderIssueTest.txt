public class GroovySetHeaderIssueTest extends CamelTestSupport {
public static final class MySubOrder {
    private String name;
    public MySubOrder(    String name){
      this.name=name;
    }
    public String getSubOrderName(){
      return name;
    }
  }
  @Test public void testGroovySetHeader() throws Exception {
    getMockEndpoint("mock:0Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:1Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:2Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:3Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:4Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:5Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:6Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:7Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:8Endpoint").expectedMessageCount(1);
    getMockEndpoint("mock:9Endpoint").expectedMessageCount(1);
    for (int i=0; i < 10; i++) {
      template.sendBody("direct:start",new MySubOrder("mock:" + i));
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").setHeader("mySlip").groovy("return \"${request.body.subOrderName}Endpoint\"").routingSlip(header("mySlip"));
      }
    }
;
  }
}
