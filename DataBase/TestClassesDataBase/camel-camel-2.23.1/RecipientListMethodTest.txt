@RunWith(Arquillian.class) public class RecipientListMethodTest {
  @Inject @Uri("direct:inbound") private ProducerTemplate inbound;
  @Inject @Uri("mock:outbound1") private MockEndpoint outbound1;
  @Inject @Uri("mock:outbound2") private MockEndpoint outbound2;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(RecipientListMethodBean.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void consumeAnnotation() throws InterruptedException {
    outbound1.expectedMessageCount(1);
    outbound1.expectedBodiesReceived("test");
    outbound2.expectedMessageCount(1);
    outbound2.expectedBodiesReceived("test");
    inbound.sendBody("test");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound1);
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound2);
  }
}
