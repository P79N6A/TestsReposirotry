public class JmsMessageAsOriginalMessageInDefaultUnitOfWorkTest extends CamelTestSupport {
  @EndpointInject(uri="mock:result") private MockEndpoint mockResult;
  @Test public void testUseOriginalMessage() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Exception.class).useOriginalMessage().to(mockResult);
        from("jms:queue:foo").throwException(new Exception("forced exception for test"));
      }
    }
);
    context.start();
    mockResult.expectedBodiesReceived("Hello World");
    mockResult.expectedHeaderReceived("header-key","header-value");
    template.sendBodyAndHeader("jms:queue:foo","Hello World","header-key","header-value");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("jms",JmsComponent.jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
}
