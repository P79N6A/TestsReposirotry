/** 
 * Validates Pull Image Request headers are applied properly
 */
public class PullImageCmdHeaderTest extends BaseDockerHeaderTest<PullImageCmd> {
  @Mock private PullImageCmd mockObject;
  @Mock private PullImageResultCallback callback;
  @Test public void pullImageHeaderTest(){
    String repository="docker/empty";
    String tag="1.0";
    String registry="registry";
    Map<String,Object> headers=getDefaultParameters();
    headers.put(DockerConstants.DOCKER_REPOSITORY,repository);
    headers.put(DockerConstants.DOCKER_TAG,tag);
    headers.put(DockerConstants.DOCKER_REGISTRY,registry);
    template.sendBodyAndHeaders("direct:in","",headers);
    Mockito.verify(dockerClient,Mockito.times(1)).pullImageCmd(repository);
    Mockito.verify(mockObject,Mockito.times(1)).withTag(eq(tag));
    Mockito.verify(mockObject,Mockito.times(1)).withRegistry(eq(registry));
  }
  @Override protected void setupMocks(){
    Mockito.when(dockerClient.pullImageCmd(anyString())).thenReturn(mockObject);
    Mockito.when(mockObject.exec(any())).thenReturn(callback);
    try {
      Mockito.when(callback.awaitCompletion()).thenReturn(callback);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
  @Override protected DockerOperation getOperation(){
    return DockerOperation.PULL_IMAGE;
  }
}
