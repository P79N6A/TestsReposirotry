/** 
 * @version
 */
public class RestletExceptionResponseTest extends RestletTestSupport {
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("restlet:http://localhost:" + portNum + "/users/{username}?restletMethod=POST").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.setException(new IllegalArgumentException("Damn something went wrong"));
          }
        }
);
        from("direct:start").to("restlet:http://localhost:" + portNum + "/users/tester?restletMethod=POST");
      }
    }
;
  }
  @Test public void testExceptionResponse() throws Exception {
    HttpResponse response=doExecute(new HttpPost("http://localhost:" + portNum + "/users/homer"));
    String body=EntityUtils.toString(response.getEntity());
    assertHttpResponse(response,500,"text/plain");
    assertTrue(body.contains("IllegalArgumentException"));
    assertTrue(body.contains("Damn something went wrong"));
  }
  @Test public void testRestletProducerGetExceptionResponse() throws Exception {
    sendRequest("restlet:http://localhost:" + portNum + "/users/tester?restletMethod=POST");
  }
  @Test public void testSendRequestDirectEndpoint() throws Exception {
    sendRequest("direct:start");
  }
  protected void sendRequest(  String endpointUri) throws Exception {
    Exchange exchange=template.request(endpointUri,new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("<order foo='1'/>");
      }
    }
);
    RestletOperationException exception=(RestletOperationException)exchange.getException();
    String body=exception.getResponseBody();
    assertEquals("http://localhost:" + portNum + "/users/tester",exception.getUri());
    assertTrue(body.contains("IllegalArgumentException"));
    assertTrue(body.contains("Damn something went wrong"));
  }
}
