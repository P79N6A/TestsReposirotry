public class SplitTokenizerGroupDynamicTest extends ContextTestSupport {
  @Test public void testSplitTokenizerA() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:split");
    mock.expectedBodiesReceived("Claus,James","Willem");
    template.sendBodyAndHeader("direct:a","Claus,James,Willem","groups",2);
    assertMockEndpointsSatisfied();
  }
  @Test public void testSplitTokenizerB() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:split");
    mock.expectedBodiesReceived("James,Willem");
    template.sendBodyAndHeader("direct:b","Claus,James,Willem".getBytes(),"groups",2);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:a").split().tokenize(",",false,"${header.groups}").to("mock:split");
        from("direct:b").split(bodyAs(String.class).tokenize(",","${header.groups}",true)).to("mock:split");
      }
    }
;
  }
}
