private class MyRoutPolicy implements RoutePolicy {
  private AtomicInteger removeCounter=new AtomicInteger();
  private AtomicInteger startCounter=new AtomicInteger();
  private AtomicInteger stopCounter=new AtomicInteger();
  private AtomicInteger suspendCounter=new AtomicInteger();
  private AtomicInteger resumeCounter=new AtomicInteger();
  @Override public void onRemove(  Route route){
    removeCounter.incrementAndGet();
  }
  @Override public void onStart(  Route route){
    startCounter.incrementAndGet();
  }
  @Override public void onStop(  Route route){
    stopCounter.incrementAndGet();
  }
  @Override public void onSuspend(  Route route){
    suspendCounter.incrementAndGet();
  }
  @Override public void onResume(  Route route){
    resumeCounter.incrementAndGet();
  }
  @Override public void onInit(  Route route){
  }
  @Override public void onExchangeBegin(  Route route,  Exchange exchange){
  }
  @Override public void onExchangeDone(  Route route,  Exchange exchange){
  }
  private int getRemoveCount(){
    return removeCounter.get();
  }
  private int getStartCount(){
    return startCounter.get();
  }
  private int getStopCount(){
    return stopCounter.get();
  }
  private int getSuspendCount(){
    return suspendCounter.get();
  }
  private int getResumeCount(){
    return resumeCounter.get();
  }
}
