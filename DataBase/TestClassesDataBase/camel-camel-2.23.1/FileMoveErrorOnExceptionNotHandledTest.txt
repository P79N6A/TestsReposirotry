/** 
 */
public class FileMoveErrorOnExceptionNotHandledTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/move");
    super.setUp();
  }
  @Test public void testMoveError() throws Exception {
    getMockEndpoint("mock:before").expectedMessageCount(1);
    getMockEndpoint("mock:after").expectedMessageCount(0);
    getMockEndpoint("mock:damn").expectedMessageCount(1);
    getMockEndpoint("mock:damn").expectedFileExists("target/move/error/hello.txt");
    template.sendBodyAndHeader("file:target/move","Hello World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/move?moveFailed=error&initialDelay=0&delay=10").onException(IllegalArgumentException.class).to("mock:damn").end().to("mock:before").throwException(new IllegalArgumentException("Damn")).to("mock:after");
      }
    }
;
  }
}
