public class CamelRootHandlerTest {
  private static final HttpHandler DEFAULT_HANDLER=new NotFoundHandler();
  @Test public void httpAndWsUnssupportedForTheSamePath(){
    final CamelRootHandler root=new CamelRootHandler(DEFAULT_HANDLER);
    final RedirectHandler httpHandler=new RedirectHandler("http://whereever");
    Assert.assertTrue(root.isEmpty());
    root.add("/app1",null,false,httpHandler);
    Assert.assertFalse(root.isEmpty());
    try {
      root.add("/app1",null,false,new CamelWebSocketHandler());
      Assert.fail(IllegalArgumentException.class.getName() + " expected");
    }
 catch (    IllegalArgumentException expected) {
    }
    root.remove("/app1",null,false);
    Assert.assertTrue(root.isEmpty());
    root.add("/app2",null,false,new CamelWebSocketHandler());
    try {
      root.add("/app2",null,false,httpHandler);
      Assert.fail(IllegalArgumentException.class.getName() + " expected");
    }
 catch (    IllegalArgumentException expected) {
    }
  }
  @Test public void countWsHandlerInstances(){
    final CamelRootHandler root=new CamelRootHandler(DEFAULT_HANDLER);
    Assert.assertTrue(root.isEmpty());
    root.add("/app1",null,false,new CamelWebSocketHandler());
    Assert.assertFalse(root.isEmpty());
    root.add("/app1",null,false,new CamelWebSocketHandler());
    Assert.assertFalse(root.isEmpty());
    root.remove("/app1",null,false);
    Assert.assertFalse(root.isEmpty());
    root.remove("/app1",null,false);
    Assert.assertTrue(root.isEmpty());
  }
}
