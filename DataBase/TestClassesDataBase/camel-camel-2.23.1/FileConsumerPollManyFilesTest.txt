/** 
 * @version 
 */
@Ignore("Manual test") public class FileConsumerPollManyFilesTest extends ContextTestSupport {
  private static final int FILES=200;
  @Override @Before public void setUp() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    deleteDirectory("target/manyfiles");
    super.setUp();
    for (int i=0; i < FILES; i++) {
      template.sendBodyAndHeader("file:target/manyfiles","Message " + i,Exchange.FILE_NAME,"file-" + i + ".txt");
    }
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testPollManyFiles() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/manyfiles?delete=true").convertBodyTo(String.class).to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(FILES);
    assertMockEndpointsSatisfied();
  }
}
