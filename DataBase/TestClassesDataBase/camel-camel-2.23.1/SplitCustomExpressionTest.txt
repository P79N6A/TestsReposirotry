/** 
 */
public class SplitCustomExpressionTest extends ContextTestSupport {
  @Test public void testSplitCustomExpression() throws Exception {
    getMockEndpoint("mock:split").expectedBodiesReceived("A","B","C");
    template.sendBody("direct:start","A,B,C");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").split(new MyCustomExpression()).to("mock:split");
      }
    }
;
  }
public static class MyCustomExpression implements Expression {
    @Override @SuppressWarnings("unchecked") public <T>T evaluate(    Exchange exchange,    Class<T> type){
      final String body=exchange.getIn().getBody(String.class);
      String[] parts=body.split(",");
      List<String> list=new ArrayList<>();
      for (      String part : parts) {
        list.add(part);
      }
      return (T)list.iterator();
    }
  }
}
