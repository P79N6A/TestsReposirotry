/** 
 * This test demonstrates how to convert a HL7V2 patient to a FHIR dtsu3 Patient and then insert it into a FHIR server.
 */
public class Hl7v2PatientToFhirPatientIntegrationTest extends AbstractFhirTestSupport {
  private static final String HL7_MESSAGE="MSH|^~\\&|Amalga HIS|BUM|New Tester|MS|20111121103141||ORU^R01|2847970-2" + "01111211031|P|2.4|||AL|NE|764|ASCII|||\r" + "PID||100005056|100005056||Freeman^Vincent^\"\"^^\"\"|\"\"|19810813000000|F||CA|Street 1^\"\"^\"\"^\"\"^34000^SGP^^"+ "\"\"~\"\"^\"\"^\"\"^\"\"^Danling Street 5th^THA^^\"\"||326-2275^PRN^PH^^66^675~476-5059^ORN^CP^^66^359~(123)"+ "456-7890^ORN^FX^^66^222~^NET^X.400^a@a.a~^NET^X.400^dummy@hotmail.com|(123)456-7890^WPN^PH^^66|UNK|S|BUD||BP000111899|"+ "D99999^\"\"||CA|Bangkok|||THA||THA|\"\"|N\r"+ "PV1||OPD   ||||\"\"^\"\"^\"\"||||CNSLT|||||C|VIP|||6262618|PB1||||||||||||||||||||||||20101208134638\r"+ "PV2|||^Unknown|\"\"^\"\"||||\"\"|\"\"|0||\"\"|||||||||||||||||||||||||||||HP1\r"+ "ORC|NW|\"\"|BMC1102771601|\"\"|CM||^^^^^\"\"|||||||||\"\"^\"\"^^^\"\"\r"+ "OBR|1|\"\"|BMC1102771601|\"\"^Brain (CT)||20111028124215||||||||||||||||||CTSCAN|F||^^^^^ROUTINE|||\"\"||||||\"\"|||||||||||^\"\"\r"+ "OBX|1|FT|\"\"^Brain (CT)||++++ text of report goes here +++|||REQAT|||FINAL|||20111121103040||75929^Gosselin^Angelina";
  @Test public void testUnmarshalWithExplicitUTF16Charset() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.setExpectedMessageCount(1);
    String charset="ASCII";
    byte[] body=HL7_MESSAGE.getBytes(Charset.forName(charset));
    template.sendBodyAndHeader("direct:input",new ByteArrayInputStream(body),Exchange.CHARSET_NAME,charset);
    mock.assertIsSatisfied();
    MethodOutcome result=mock.getExchanges().get(0).getIn().getBody(MethodOutcome.class);
    assertNotNull("resource result",result);
    assertTrue(result.getCreated());
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        Processor patientProcessor=new PatientProcessor();
        from("direct:input").unmarshal().hl7().process(patientProcessor).to("fhir://create/resource?inBody=resource").to("mock:result");
      }
    }
;
  }
}
