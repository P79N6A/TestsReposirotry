public class GuavaEventBusConsumingDeadEventsTest extends CamelTestSupport {
  EventBus eventBus=new EventBus();
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("guava-eventbus:eventBus?listenerInterface=org.apache.camel.component.guava.eventbus.CustomListener").to("mock:customListenerEvents");
        from("guava-eventbus:eventBus?listenerInterface=org.apache.camel.component.guava.eventbus.DeadEventListener").to("mock:deadEvents");
      }
    }
;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    registry.bind("eventBus",eventBus);
    return registry;
  }
  @Test public void shouldForwardMessageToCamel() throws InterruptedException {
    Date message=new Date();
    eventBus.post(message);
    getMockEndpoint("mock:customListenerEvents").setExpectedMessageCount(0);
    assertMockEndpointsSatisfied();
    getMockEndpoint("mock:deadEvents").setExpectedMessageCount(1);
    assertMockEndpointsSatisfied();
    assertEquals(message,getMockEndpoint("mock:deadEvents").getExchanges().get(0).getIn().getBody(DeadEvent.class).getEvent());
  }
}
