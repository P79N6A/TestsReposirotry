public class BeanReturnCallableTest extends ContextTestSupport {
  @Test public void testBeanReturnCallable() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("I was called");
    mock.expectedHeaderReceived("foo","bar");
    template.requestBody("direct:in","Start");
    mock.assertIsSatisfied();
  }
  protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myBean",new MyBean());
    return answer;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:in").setHeader("foo",constant("bar")).to("bean:myBean").to("mock:result");
      }
    }
;
  }
public static class MyBean {
    public Callable doSomething(){
      return new Callable(){
        @Override public Object call() throws Exception {
          return "I was called";
        }
      }
;
    }
  }
}
