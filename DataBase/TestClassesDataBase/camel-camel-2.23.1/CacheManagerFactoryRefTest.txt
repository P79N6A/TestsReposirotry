public class CacheManagerFactoryRefTest extends CamelTestSupport {
  private static final String CACHE_ENDPOINT_URI="cache://myname1?cacheManagerFactory=#testCacheManagerFactory";
  @EndpointInject(uri=CACHE_ENDPOINT_URI) protected CacheEndpoint cacheEndpoint;
  @Produce(uri="direct:start") protected ProducerTemplate producerTemplate;
  protected CacheManagerFactory testingCacheManagerFactory;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    testingCacheManagerFactory=new TestingCacheManagerFactory();
    jndi.bind("testCacheManagerFactory",testingCacheManagerFactory);
    return jndi;
  }
  @Override public RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to(CACHE_ENDPOINT_URI);
      }
    }
;
  }
  @Test public void testConfig() throws Exception {
    producerTemplate.send(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
        Message in=exchange.getIn();
        in.setHeader(CacheConstants.CACHE_OPERATION,CacheConstants.CACHE_OPERATION_ADD);
        in.setHeader(CacheConstants.CACHE_KEY,"greeting");
        in.setBody("Hello World");
      }
    }
);
    assertEquals("Is CacheManagerFactory set",testingCacheManagerFactory,cacheEndpoint.getCacheManagerFactory());
  }
public static class TestingCacheManagerFactory extends CacheManagerFactory {
    @Override protected CacheManager createCacheManagerInstance(){
      return CacheManager.create(getClass().getResourceAsStream("/test-ehcache.xml"));
    }
  }
}
