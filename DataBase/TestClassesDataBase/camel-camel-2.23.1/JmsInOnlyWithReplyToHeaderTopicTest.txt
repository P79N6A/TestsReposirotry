/** 
 * @version 
 */
public class JmsInOnlyWithReplyToHeaderTopicTest extends CamelTestSupport {
  @Test public void testJmsInOnlyWithReplyToHeader() throws Exception {
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    mock.expectedHeaderReceived("JMSReplyTo","topic://bar");
    template.send("activemq:queue:foo?preserveMessageQos=true",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("World");
        exchange.getIn().setHeader("JMSReplyTo","topic:bar");
      }
    }
);
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:foo").transform(body().prepend("Hello ")).to("log:result").to("mock:result");
        from("activemq:topic:bar?disableReplyTo=true").to("log:bar").to("mock:bar");
      }
    }
;
  }
}
