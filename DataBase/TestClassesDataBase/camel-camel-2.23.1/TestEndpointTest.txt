/** 
 */
public class TestEndpointTest extends ContextTestSupport {
  private String expectedBody="Hello World";
  @Test public void testMocksAreValid() throws Exception {
    template.sendBody("seda:foo",expectedBody);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        MyEndpoint my=new MyEndpoint("my:foo",context);
        context.addEndpoint("my:foo",my);
        from("seda:foo").to("test:my:foo?timeout=0");
      }
    }
;
  }
private final class MyEndpoint extends DefaultEndpoint {
    private MyEndpoint(    String endpointUri,    CamelContext camelContext){
      super(endpointUri);
    }
    @Override public Producer createProducer() throws Exception {
      return null;
    }
    @Override public Consumer createConsumer(    final Processor processor) throws Exception {
      return new Consumer(){
        @Override public Endpoint getEndpoint(){
          return MyEndpoint.this;
        }
        @Override public void start() throws Exception {
          Exchange exchange=new DefaultExchange(getEndpoint());
          exchange.getIn().setBody(expectedBody);
          processor.process(exchange);
        }
        @Override public void stop() throws Exception {
        }
      }
;
    }
    @Override public boolean isSingleton(){
      return true;
    }
  }
}
