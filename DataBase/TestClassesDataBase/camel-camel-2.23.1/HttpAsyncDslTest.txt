/** 
 * @version 
 */
public class HttpAsyncDslTest extends CamelTestSupport {
  private static volatile String order="";
  @Test public void testRequestOnly() throws Exception {
    getMockEndpoint("mock:validate").expectedMessageCount(1);
    getMockEndpoint("mock:order").expectedMessageCount(1);
    template.sendBody("jms:queue:order","Order: Camel in Action");
    order+="C";
    assertMockEndpointsSatisfied();
    assertEquals(3,order.length());
    assertTrue(order.endsWith("B"));
  }
  @Test public void testRequestReply() throws Exception {
    getMockEndpoint("mock:validate").expectedMessageCount(1);
    getMockEndpoint("mock:order").expectedMessageCount(1);
    String response=template.requestBody("jms:queue:order","Order: Camel in Action",String.class);
    order+="C";
    assertMockEndpointsSatisfied();
    assertEquals("ABC",order);
    assertEquals("Order OK",response);
  }
  @Override @Before public void setUp() throws Exception {
    order="";
    super.setUp();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("validateOrder",new MyValidateOrderBean());
    jndi.bind("handleOrder",new MyHandleOrderBean());
    return jndi;
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    JmsComponent amq=jmsComponentAutoAcknowledge(connectionFactory);
    amq.setCamelContext(context);
    answer.bind("jms",amq);
    return answer;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        DataFormat mySecureDataFormat=new StringDataFormat("iso-8859-1");
        from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(500).to("bean:handleOrder").to("mock:order");
      }
    }
;
  }
public static class MyValidateOrderBean {
    public void validateOrder(    byte[] payload){
      order+="A";
    }
  }
public static class MyHandleOrderBean {
    public String handleOrder(    String message){
      order+="B";
      return "Order OK";
    }
  }
}
