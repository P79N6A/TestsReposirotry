public class ProcessorDefinitionHelperTest extends ContextTestSupport {
  @Test public void testFilterTypeInOutputs() throws Exception {
    RouteDefinition route=context.getRouteDefinitions().get(0);
    Iterator<ProcessorDefinition> it=ProcessorDefinitionHelper.filterTypeInOutputs(route.getOutputs(),ProcessorDefinition.class);
    assertNotNull(it);
    assertEquals("choice1",it.next().getId());
    assertEquals("whenfoo",it.next().getId());
    assertEquals("foo",it.next().getId());
    assertEquals("whenbar",it.next().getId());
    assertEquals("bar",it.next().getId());
    assertEquals("baz",it.next().getId());
    assertFalse(it.hasNext());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").choice().when(header("foo")).id("whenfoo").to("mock:foo").id("foo").when(header("bar")).id("whenbar").to("mock:bar").id("bar").otherwise().to("mock:baz").id("baz");
      }
    }
;
  }
}
