/** 
 * @version
 */
public class ManagedProducerRecipientListRegisterAlwaysTest extends ManagementTestSupport {
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.getManagementStrategy().getManagementAgent().setRegisterAlways(true);
    return context;
  }
  @Test public void testProducer() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBodyAndHeader("direct:start","Hello World","foo","mock:result");
    assertMockEndpointsSatisfied();
    MBeanServer mbeanServer=getMBeanServer();
    Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=producers,*"),null);
    assertEquals(2,set.size());
    Iterator<ObjectName> it=set.iterator();
    for (int i=0; i < 2; i++) {
      ObjectName on=it.next();
      boolean registered=mbeanServer.isRegistered(on);
      assertEquals("Should be registered",true,registered);
      String uri=(String)mbeanServer.getAttribute(on,"EndpointUri");
      assertTrue(uri,uri.equals("direct://start") || uri.equals("mock://result"));
      String state=(String)mbeanServer.getAttribute(on,"State");
      assertEquals("Should be started",ServiceStatus.Started.name(),state);
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("foo").recipientList(header("foo"));
      }
    }
;
  }
}
