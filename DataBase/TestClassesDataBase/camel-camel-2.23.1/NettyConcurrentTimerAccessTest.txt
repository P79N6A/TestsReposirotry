public class NettyConcurrentTimerAccessTest extends BaseNettyTest {
  int secondPort=AvailablePortFinder.getNextAvailable(25000);
  @Test public void stoppingOneComponentShouldNotAffectTheOther() throws Exception {
    context.getComponent("netty1",NettyComponent.class).stop();
    template.sendBody("netty2:tcp://localhost:" + secondPort + "/pleaseCreateNewEndpoint","msg");
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    registry.bind("netty1",new NettyComponent());
    registry.bind("netty2",new NettyComponent());
    return registry;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("netty1:tcp://localhost:{{port}}").to("mock:test");
        from("netty2:tcp://localhost:" + secondPort).to("mock:test");
      }
    }
;
  }
}
