/** 
 * @version 
 */
public class JettySpringFailoverRoundRobinTest extends CamelSpringTestSupport {
  private static int port1=AvailablePortFinder.getNextAvailable(23051);
  private static int port2=AvailablePortFinder.getNextAvailable(23052);
  private static int port3=AvailablePortFinder.getNextAvailable(23053);
  private static int port4=AvailablePortFinder.getNextAvailable(23054);
static {
    System.setProperty("JettySpringFailoverRoundRobinTest.port1",Integer.toString(port1));
    System.setProperty("JettySpringFailoverRoundRobinTest.port2",Integer.toString(port2));
    System.setProperty("JettySpringFailoverRoundRobinTest.port3",Integer.toString(port3));
    System.setProperty("JettySpringFailoverRoundRobinTest.port4",Integer.toString(port4));
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/itest/jetty/JettySpringFailoverRoundRobinTest.xml");
  }
  @Test public void testJettySpringFailoverRoundRobin() throws Exception {
    getMockEndpoint("mock:bad").expectedMessageCount(1);
    getMockEndpoint("mock:bad2").expectedMessageCount(1);
    getMockEndpoint("mock:good").expectedMessageCount(1);
    getMockEndpoint("mock:good2").expectedMessageCount(0);
    String reply=template.requestBody("direct:start",null,String.class);
    assertEquals("Good",reply);
    assertMockEndpointsSatisfied();
    resetMocks();
    getMockEndpoint("mock:bad").expectedMessageCount(0);
    getMockEndpoint("mock:bad2").expectedMessageCount(0);
    getMockEndpoint("mock:good").expectedMessageCount(0);
    getMockEndpoint("mock:good2").expectedMessageCount(1);
    reply=template.requestBody("direct:start",null,String.class);
    assertEquals("Also good",reply);
  }
}
