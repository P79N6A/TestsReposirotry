/** 
 * @version 
 */
public class LifecycleStrategyServiceTest extends TestSupport {
  private MyLifecycleStrategy dummy1=new MyLifecycleStrategy();
  protected CamelContext createCamelContext() throws Exception {
    CamelContext context=new DefaultCamelContext(new JndiContext());
    context.addLifecycleStrategy(dummy1);
    return context;
  }
  @Test public void testLifecycleStrategyService() throws Exception {
    assertEquals(false,dummy1.isStarted());
    CamelContext context=createCamelContext();
    context.start();
    assertEquals(true,dummy1.isStarted());
    context.stop();
    assertEquals(false,dummy1.isStarted());
  }
private static class MyLifecycleStrategy extends DummyLifecycleStrategy implements Service {
    private volatile boolean started;
    @Override public void start() throws Exception {
      started=true;
    }
    @Override public void stop() throws Exception {
      started=false;
    }
    public boolean isStarted(){
      return started;
    }
  }
}
