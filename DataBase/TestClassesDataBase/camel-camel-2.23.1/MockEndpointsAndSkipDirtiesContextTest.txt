@RunWith(CamelSpringBootRunner.class) @MockEndpointsAndSkip("direct:b") @SpringBootApplication @SpringBootTest(classes=MockEndpointsAndSkipDirtiesContextTest.class) @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD) public class MockEndpointsAndSkipDirtiesContextTest {
  @Produce(uri="direct:a") private ProducerTemplate producer;
  @EndpointInject(uri="mock:end") private MockEndpoint end;
  @EndpointInject(uri="mock:direct:b") private MockEndpoint directB;
  @Autowired private CamelContext context;
@Configuration public static class Config extends SpringRouteBuilder {
    @Override public void configure() throws Exception {
      from("direct:a").to("direct:b");
      from("direct:b").to("mock:end");
    }
  }
  @Test public void testMock() throws InterruptedException {
    end.expectedMessageCount(0);
    directB.expectedBodiesReceived("hello");
    producer.sendBody("hello");
    MockEndpoint.assertIsSatisfied(context);
  }
  @Test public void testMock2() throws InterruptedException {
    end.expectedMessageCount(0);
    directB.expectedBodiesReceived("bye");
    producer.sendBody("bye");
    MockEndpoint.assertIsSatisfied(context);
  }
}
