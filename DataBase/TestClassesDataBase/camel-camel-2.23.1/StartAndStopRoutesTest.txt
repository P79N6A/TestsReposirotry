/** 
 * This test stops a route, mutates it then restarts it
 * @version 
 */
public class StartAndStopRoutesTest extends ContextTestSupport {
  protected Endpoint endpointA;
  protected Endpoint endpointB;
  protected Endpoint endpointC;
  protected Object expectedBody="<hello>world!</hello>";
  @Test public void testStartRouteThenStopMutateAndStartRouteAgain() throws Exception {
    List<RouteDefinition> routes=context.getRouteDefinitions();
    assertCollectionSize("Route",routes,1);
    RouteDefinition route=routes.get(0);
    endpointA=getMandatoryEndpoint("direct:test.a");
    endpointB=getMandatoryEndpoint("seda:test.b");
    endpointC=getMandatoryEndpoint("direct:test.C");
    MockEndpoint results=getMockEndpoint("mock:results");
    results.expectedBodiesReceived(expectedBody);
    template.sendBody(endpointA,expectedBody);
    assertMockEndpointsSatisfied();
    context.stopRoute(route);
    FromDefinition fromType=assertOneElement(route.getInputs());
    fromType.setUri("direct:test.C");
    context.startRoute(route);
    results.reset();
    results=getMockEndpoint("mock:results");
    results.expectedBodiesReceived(expectedBody);
    template.sendBody(endpointC,expectedBody);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:test.a").to("seda:test.b").to("mock:results");
      }
    }
;
  }
}
