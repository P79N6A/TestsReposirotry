/** 
 * @version 
 */
public class InstanceFallbackConverterTest extends ContextTestSupport {
  @Override protected boolean isLoadTypeConverters(){
    return true;
  }
  @Test public void testInstanceFallbackConverter() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    Currency cur=Currency.getInstance(Locale.US);
    String money=context.getTypeConverter().convertTo(String.class,exchange,cur);
    assertEquals("Money talks says " + context.getName(),money);
  }
  @Test public void testInstanceFallbackMandatoryConverter() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    Currency cur=Currency.getInstance(Locale.US);
    String money=context.getTypeConverter().mandatoryConvertTo(String.class,exchange,cur);
    assertEquals("Money talks says " + context.getName(),money);
  }
  @Test public void testInstanceFallbackMandatoryFailed() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    try {
      context.getTypeConverter().mandatoryConvertTo(Date.class,exchange,new Timestamp(0));
      fail("Should have thrown an exception");
    }
 catch (    NoTypeConversionAvailableException e) {
    }
  }
  @Test public void testInstanceFallbackFailed() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    Date out=context.getTypeConverter().convertTo(Date.class,exchange,new Timestamp(0));
    assertNull(out);
  }
}
