/** 
 */
public class ThreadsDoTryCatchInterceptSendToAllEndpointIssueTest extends ContextTestSupport {
  @Test public void testThreadsTryCatch() throws Exception {
    getMockEndpoint("mock:log:try").expectedMessageCount(1);
    getMockEndpoint("mock:log:catch").expectedMessageCount(1);
    getMockEndpoint("mock:log:world").expectedMessageCount(1);
    getMockEndpoint("mock:log:other").expectedMessageCount(0);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    context.addRegisterEndpointCallback(new InterceptSendToMockEndpointStrategy("*"));
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").threads().doTry().to("log:try").throwException(new IllegalArgumentException("Forced")).doCatch(Exception.class).to("log:catch").choice().when(body().contains("World")).to("log:world").stop().otherwise().to("log:other").stop().end().end();
      }
    }
;
  }
}
