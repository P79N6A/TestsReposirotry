@RunWith(Arquillian.class) @ImportResource("imported-context.xml") public class XmlProducerTemplateTest {
  @Named @Inject private ProducerTemplate inbound;
  @Inject @Uri("mock:outbound") private MockEndpoint outbound;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsResource(Paths.get("src/test/resources/camel-context-producer.xml").toFile(),"imported-context.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyProducerTemplate(){
    assertThat("Producer template Camel context is incorrect!",inbound.getCamelContext().getName(),is(equalTo("test")));
    assertThat("Producer template cache size is incorrect!",inbound.getMaximumCacheSize(),is(equalTo(100)));
    assertThat("Producer template default endpoint is incorrect!",inbound.getDefaultEndpoint().getEndpointUri(),is(equalTo("direct://inbound")));
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("message");
    inbound.sendBody("message");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
}
