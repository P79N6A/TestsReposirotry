@ContextConfiguration public class JmsConsumerShutdownTest extends AbstractJUnit4SpringContextTests {
  @Produce(uri="activemq:start") protected ProducerTemplate activemq;
  @Produce(uri="seda:start") protected ProducerTemplate seda;
  @EndpointInject(uri="mock:end") protected MockEndpoint end;
  @EndpointInject(uri="mock:exception") protected MockEndpoint exception;
  @Test @DirtiesContext public void testJmsConsumerShutdownWithMessageInFlight() throws InterruptedException {
    end.expectedMessageCount(0);
    end.setResultWaitTime(2000);
    exception.whenAnyExchangeReceived(new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        throw new Exception("Kaboom!");
      }
    }
);
    activemq.sendBody("activemq:start","Hello");
    end.assertIsSatisfied();
  }
  @Test @DirtiesContext public void testSedaConsumerShutdownWithMessageInFlight() throws InterruptedException {
    end.expectedMessageCount(0);
    end.setResultWaitTime(2000);
    exception.whenAnyExchangeReceived(new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        throw new Exception("Kaboom!");
      }
    }
);
    seda.sendBody("seda:start","Hello");
    end.assertIsSatisfied();
  }
public static class MyRouteBuilder extends RouteBuilder {
    @Override public void configure() throws Exception {
      from("activemq:start").to("direct:dir").to("mock:end");
      from("seda:start").to("direct:dir").to("mock:end");
      from("direct:dir").onException(Exception.class).redeliveryDelay(1000).maximumRedeliveries(-1).end().to("mock:exception");
    }
  }
}
