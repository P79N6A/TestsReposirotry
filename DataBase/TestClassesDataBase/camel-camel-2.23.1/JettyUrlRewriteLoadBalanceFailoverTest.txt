/** 
 */
public class JettyUrlRewriteLoadBalanceFailoverTest extends BaseUrlRewriteTest {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    HttpUrlRewrite myRewrite=new HttpUrlRewrite();
    myRewrite.setConfigFile("example/urlrewrite2.xml");
    jndi.bind("myRewrite",myRewrite);
    return jndi;
  }
  @Test public void testHttpUriRewrite() throws Exception {
    String out=template.requestBody("http4://localhost:{{port}}/myapp/products/1234",null,String.class);
    assertEquals("http://localhost:" + getPort2() + "/myapp3/products/index.jsp?product_id=1234",out);
    out=template.requestBody("http4://localhost:{{port}}/myapp/products/5678",null,String.class);
    assertEquals("http://localhost:" + getPort2() + "/myapp3/products/index.jsp?product_id=5678",out);
    out=template.requestBody("http4://localhost:{{port}}/myapp/products/3333",null,String.class);
    assertEquals("http://localhost:" + getPort2() + "/myapp3/products/index.jsp?product_id=3333",out);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(noErrorHandler());
        from("jetty:http://localhost:{{port}}/myapp?matchOnUriPrefix=true").loadBalance().failover(Exception.class).to("jetty:http://localhost:{{port2}}/myapp2?bridgeEndpoint=true&throwExceptionOnFailure=true&urlRewrite=#myRewrite").to("jetty:http://localhost:{{port2}}/myapp3?bridgeEndpoint=true&throwExceptionOnFailure=true&urlRewrite=#myRewrite");
        from("jetty:http://localhost:{{port2}}/myapp2?matchOnUriPrefix=true").log("I am going to fail").throwException(new IllegalArgumentException("Failed"));
        from("jetty:http://localhost:{{port2}}/myapp3?matchOnUriPrefix=true").transform().simple("${header.CamelHttpUrl}?${header.CamelHttpQuery}");
      }
    }
;
  }
}
