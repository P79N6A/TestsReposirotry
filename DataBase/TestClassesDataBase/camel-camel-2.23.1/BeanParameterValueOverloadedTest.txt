/** 
 */
public class BeanParameterValueOverloadedTest extends ContextTestSupport {
  @Test public void testBeanParameterValueBoolean() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanParameterValueBoolean2() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    template.sendBody("direct:start2","World");
    assertMockEndpointsSatisfied();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyBean());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("bean:foo?method=bar(*,true)").to("mock:result");
        from("direct:start2").to("bean:foo?method=bar(${body},false,true)").to("mock:result");
      }
    }
;
  }
public static class MyBean {
    public String bar(    String body,    boolean hello){
      if (hello) {
        return "Hello " + body;
      }
 else {
        return body;
      }
    }
    public String bar(    String body,    boolean hello,    boolean bye){
      if (hello) {
        return "Hi " + body;
      }
 else       if (bye) {
        return "Bye " + body;
      }
 else {
        return body;
      }
    }
  }
}
