public class ClientRecipientListRouteTest extends CamelOpenTracingTestSupport {
  private static SpanTestData[] testdata={new SpanTestData().setLabel("seda:a server").setUri("seda://a").setOperation("a").setKind(Tags.SPAN_KIND_SERVER).setParentId(1),new SpanTestData().setLabel("seda:a client").setUri("seda://a").setOperation("a").setKind(Tags.SPAN_KIND_CLIENT).setParentId(6),new SpanTestData().setLabel("seda:b server").setUri("seda://b").setOperation("b").setKind(Tags.SPAN_KIND_SERVER).setParentId(3),new SpanTestData().setLabel("seda:b client").setUri("seda://b").setOperation("b").setKind(Tags.SPAN_KIND_CLIENT).setParentId(6),new SpanTestData().setLabel("seda:c server").setUri("seda://c").setOperation("c").setKind(Tags.SPAN_KIND_SERVER).setParentId(5),new SpanTestData().setLabel("seda:c client").setUri("seda://c").setOperation("c").setKind(Tags.SPAN_KIND_CLIENT).setParentId(6),new SpanTestData().setLabel("direct:start server").setUri("direct://start").setOperation("start").setKind(Tags.SPAN_KIND_SERVER).setParentId(7),new SpanTestData().setLabel("direct:start client").setUri("direct://start").setOperation("start").setKind(Tags.SPAN_KIND_CLIENT)};
  public ClientRecipientListRouteTest(){
    super(testdata);
  }
  @Test public void testRoute() throws Exception {
    template.requestBody("direct:start","Hello");
    verify();
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").recipientList(constant("seda:a,seda:b,seda:c")).routeId("start");
        from("seda:a").routeId("a").log("routing at ${routeId}");
        from("seda:b").routeId("b").log("routing at ${routeId}").delay(simple("${random(1000,2000)}"));
        from("seda:c").routeId("c").log("routing at ${routeId}").delay(simple("${random(0,100)}"));
      }
    }
;
  }
}
