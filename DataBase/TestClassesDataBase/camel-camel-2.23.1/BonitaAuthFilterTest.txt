public class BonitaAuthFilterTest {
  @Mock private ClientRequestContext requestContext;
  @Before public void setup(){
    MockitoAnnotations.initMocks(this);
    Map<String,Cookie> resultCookies=new HashMap<>();
    Mockito.when(requestContext.getCookies()).thenReturn(resultCookies);
  }
  @Test(expected=IllegalArgumentException.class) public void testBonitaAuthFilterUsernameEmpty() throws IOException {
    BonitaAPIConfig bonitaApiConfig=new BonitaAPIConfig("localhost","port","","password");
    BonitaAuthFilter bonitaAuthFilter=new BonitaAuthFilter(bonitaApiConfig);
    bonitaAuthFilter.filter(requestContext);
  }
  @Test(expected=IllegalArgumentException.class) public void testBonitaAuthFilterPasswordEmpty() throws IOException {
    BonitaAPIConfig bonitaApiConfig=new BonitaAPIConfig("localhost","port","username","");
    BonitaAuthFilter bonitaAuthFilter=new BonitaAuthFilter(bonitaApiConfig);
    bonitaAuthFilter.filter(requestContext);
  }
}
