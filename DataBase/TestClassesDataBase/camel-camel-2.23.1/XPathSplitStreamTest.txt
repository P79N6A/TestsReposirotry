/** 
 * @version 
 */
public class XPathSplitStreamTest extends ContextTestSupport {
  private static int size=100;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/file/xpathsplit");
    super.setUp();
    StringBuilder sb=new StringBuilder();
    sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    sb.append("\n<persons>");
    for (int i=0; i < size; i++) {
      sb.append("\n<person><id>" + i + "</id><name>John Doe</name></person>");
    }
    sb.append("\n</persons>");
    template.sendBodyAndHeader("file://target/file/xpathsplit",sb.toString(),Exchange.FILE_NAME,"bigfile.xml");
  }
  @Test public void testXPathSplitStream() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:splitted");
    mock.expectedMessageCount(size);
    mock.expectsNoDuplicates().body();
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/file/xpathsplit?initialDelay=0&delay=10").split(xpath("/persons/person").documentType(InputSource.class)).streaming().to("mock:splitted");
      }
    }
;
  }
}
