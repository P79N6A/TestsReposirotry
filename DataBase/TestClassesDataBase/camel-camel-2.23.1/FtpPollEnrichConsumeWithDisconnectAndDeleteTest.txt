public class FtpPollEnrichConsumeWithDisconnectAndDeleteTest extends FtpServerTestSupport {
  @Test public void testFtpSimpleConsume() throws Exception {
    if (!canTest()) {
      return;
    }
    String expected="Hello World";
    template.sendBodyAndHeader("file://" + FTP_ROOT_DIR + "/poll",expected,Exchange.FILE_NAME,"hello.txt");
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedHeaderReceived(Exchange.FILE_NAME,"hello.txt");
    mock.expectedBodiesReceived(expected);
    ProducerTemplate triggerTemplate=context.createProducerTemplate();
    triggerTemplate.sendBody("vm:trigger","");
    assertMockEndpointsSatisfied();
    long startFileDeletionCheckTime=System.currentTimeMillis();
    boolean fileExists=true;
    while (System.currentTimeMillis() - startFileDeletionCheckTime < 3000) {
      File file=new File(FTP_ROOT_DIR + "/poll/hello.txt");
      fileExists=file.exists();
      if (fileExists) {
        log.info("Will check that file has been deleted again in 200ms");
        Thread.sleep(200);
      }
    }
    assertFalse("The file should have been deleted",fileExists);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("vm:trigger").pollEnrich("ftp://admin@localhost:" + getPort() + "/poll?password=admin&delete=true").routeId("foo").to("mock:result");
      }
    }
;
  }
}
