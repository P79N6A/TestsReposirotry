@ContextConfiguration @RunWith(SpringJUnit4ClassRunner.class) public class ConsumerMarshallingRouteTest extends CamelTestSupport {
  @Autowired private CamelEndpointMapping endpointMapping;
  @Autowired private WebServiceTemplate webServiceTemplate;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    context.setTracing(true);
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    registry.bind("endpointMapping",this.endpointMapping);
    registry.bind("webServiceTemplate",this.webServiceTemplate);
    return registry;
  }
  @Test public void consumeWebserviceWithPojoRequest() throws Exception {
    consumePojoRequestStringResponseWithEnpoint("direct:webservice-marshall");
  }
  @Test public void consumeWebserviceWithPojoRequestAndPojoResponse() throws Exception {
    QuoteRequest request=new QuoteRequest();
    request.setSymbol("GOOG");
    Object result=template.requestBody("direct:webservice-marshall-unmarshall",request);
    assertNotNull(result);
    assertTrue(result instanceof QuoteResponse);
    QuoteResponse quoteResponse=(QuoteResponse)result;
    assertEquals("Google Inc.",quoteResponse.getName());
  }
  @Test public void consumeWebserviceWithPojoRequestAsInOnly() throws Exception {
    QuoteRequest request=new QuoteRequest();
    request.setSymbol("GOOG");
    Object result=template.requestBody("direct:webservice-marshall-asinonly",request);
    assertNull(result);
  }
  @Test public void consumeWebserviceWithPojoRequestAsIn() throws Exception {
    consumePojoRequestStringResponseWithEnpoint("direct:webservice-marshall-asin");
  }
  private void consumePojoRequestStringResponseWithEnpoint(  String endpoint){
    QuoteRequest request=new QuoteRequest();
    request.setSymbol("GOOG");
    Object result=template.requestBody(endpoint,request);
    assertNotNull(result);
    assertTrue(result instanceof String);
    String resultMessage=(String)result;
    assertTrue(resultMessage.contains("Google Inc."));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        JaxbDataFormat jaxb=new JaxbDataFormat(false);
        jaxb.setContextPath("org.apache.camel.component.spring.ws.jaxb");
        from("direct:webservice-marshall").marshal(jaxb).to("spring-ws:http://localhost/?soapAction=http://www.stockquotes.edu/GetQuote&webServiceTemplate=#webServiceTemplate").convertBodyTo(String.class);
        from("direct:webservice-marshall-unmarshall").marshal(jaxb).to("spring-ws:http://localhost/?soapAction=http://www.stockquotes.edu/GetQuote&webServiceTemplate=#webServiceTemplate").unmarshal(jaxb);
        from("spring-ws:soapaction:http://www.stockquotes.edu/GetQuote?endpointMapping=#endpointMapping").process(new StockQuoteResponseProcessor());
        from("direct:webservice-marshall-asinonly").marshal(jaxb).to("spring-ws:http://localhost/?soapAction=http://www.stockquotes.edu/GetQuoteAsInOnly&webServiceTemplate=#webServiceTemplate").convertBodyTo(String.class);
        from("spring-ws:soapaction:http://www.stockquotes.edu/GetQuoteAsInOnly?endpointMapping=#endpointMapping").setExchangePattern(ExchangePattern.InOnly).process(new StockQuoteResponseProcessor());
        from("direct:webservice-marshall-asin").marshal(jaxb).to("spring-ws:http://localhost/?soapAction=http://www.stockquotes.edu/GetQuoteAsIn&webServiceTemplate=#webServiceTemplate").convertBodyTo(String.class);
        from("spring-ws:soapaction:http://www.stockquotes.edu/GetQuoteAsIn?endpointMapping=#endpointMapping").setHeader("setin",constant("true")).process(new StockQuoteResponseProcessor());
      }
    }
;
  }
}
