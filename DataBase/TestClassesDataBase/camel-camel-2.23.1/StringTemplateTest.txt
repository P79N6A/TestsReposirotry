public class StringTemplateTest extends CamelTestSupport {
  @Test public void test() throws Exception {
    final DataHandler dataHandler=new DataHandler("my attachment","text/plain");
    Exchange response=template.request("direct:a",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().addAttachment("item",dataHandler);
        exchange.getIn().setBody("Monday");
        exchange.getIn().setHeader("name","Christian");
        exchange.setProperty("item","7");
      }
    }
);
    assertEquals("Dear Christian. You ordered item 7 on Monday.",response.getOut().getBody());
    assertEquals("org/apache/camel/component/stringtemplate/template.tm",response.getOut().getHeader(StringTemplateConstants.STRINGTEMPLATE_RESOURCE_URI));
    assertEquals("Christian",response.getOut().getHeader("name"));
    assertSame(dataHandler,response.getOut().getAttachment("item"));
  }
  @Test public void testVelocityContext() throws Exception {
    Exchange exchange=template.request("direct:a",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("");
        exchange.getIn().setHeader("name","Christian");
        Map<String,Object> variableMap=new HashMap<>();
        Map<String,Object> headersMap=new HashMap<>();
        headersMap.put("name","Willem");
        variableMap.put("headers",headersMap);
        variableMap.put("body","Monday");
        variableMap.put("exchange",exchange);
        exchange.getIn().setHeader(StringTemplateConstants.STRINGTEMPLATE_VARIABLE_MAP,variableMap);
        exchange.setProperty("item","7");
      }
    }
);
    assertEquals("Dear Willem. You ordered item 7 on Monday.",exchange.getOut().getBody());
    assertEquals("Christian",exchange.getOut().getHeader("name"));
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:a").to("string-template:org/apache/camel/component/stringtemplate/template.tm");
      }
    }
;
  }
}
