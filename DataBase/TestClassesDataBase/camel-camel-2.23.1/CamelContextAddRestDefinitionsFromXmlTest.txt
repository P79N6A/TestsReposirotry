/** 
 * @version
 */
public class CamelContextAddRestDefinitionsFromXmlTest extends ContextTestSupport {
  protected JAXBContext jaxbContext;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    jndi.bind("dummy-rest-api",new DummyRestProcessorFactory());
    return jndi;
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    jaxbContext=context.getModelJAXBContextFactory().newJAXBContext();
  }
  protected Object parseUri(  String uri) throws JAXBException {
    Unmarshaller unmarshaller=jaxbContext.createUnmarshaller();
    URL resource=getClass().getResource(uri);
    assertNotNull("Cannot find resource on the classpath: " + uri,resource);
    Object value=unmarshaller.unmarshal(resource);
    return value;
  }
  protected RestDefinition loadRest(  String uri) throws Exception {
    Object rest=parseUri(uri);
    return assertIsInstanceOf(RestDefinition.class,rest);
  }
  @Test public void testAddRestDefinitionsFromXml() throws Exception {
    RestDefinition rest=loadRest("rest1.xml");
    assertNotNull(rest);
    assertEquals("foo",rest.getId());
    assertEquals(0,context.getRestDefinitions().size());
    context.getRestDefinitions().add(rest);
    assertEquals(1,context.getRestDefinitions().size());
    final List<RouteDefinition> routeDefinitions=rest.asRouteDefinition(context);
    for (    final RouteDefinition routeDefinition : routeDefinitions) {
      context.addRouteDefinition(routeDefinition);
    }
    assertEquals(2,context.getRoutes().size());
    assertTrue("Route should be started",context.getRouteStatus("route1").isStarted());
    getMockEndpoint("mock:bar").expectedBodiesReceived("Hello World");
    template.sendBody("seda:get-say-hello-bar","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().host("localhost").component("dummy-rest").apiContextPath("/api-docs");
      }
    }
;
  }
}
