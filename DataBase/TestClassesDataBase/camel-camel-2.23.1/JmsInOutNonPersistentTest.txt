/** 
 * @version 
 */
public class JmsInOutNonPersistentTest extends CamelTestSupport {
  @Test public void testInOutNonPersistent() throws Exception {
    getMockEndpoint("mock:foo").expectedBodiesReceived("World");
    getMockEndpoint("mock:foo").expectedHeaderReceived("JMSDeliveryMode",DeliveryMode.NON_PERSISTENT);
    getMockEndpoint("mock:done").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:done").expectedHeaderReceived("JMSDeliveryMode",DeliveryMode.NON_PERSISTENT);
    String reply=template.requestBody("direct:start","World",String.class);
    assertEquals("Bye World",reply);
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("activemq:queue:foo?replyTo=queue:bar&deliveryPersistent=false").to("log:done?showAll=true","mock:done");
        from("activemq:queue:foo?replyToDeliveryPersistent=false&preserveMessageQos=true").to("log:foo?showAll=true","mock:foo").transform(body().prepend("Bye "));
      }
    }
;
  }
}
