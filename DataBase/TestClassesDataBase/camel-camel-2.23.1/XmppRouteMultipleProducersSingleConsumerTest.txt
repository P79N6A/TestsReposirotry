/** 
 * @version 
 */
@Ignore("This test is flaky on CI server") public class XmppRouteMultipleProducersSingleConsumerTest extends CamelTestSupport {
  protected MockEndpoint goodEndpoint;
  protected MockEndpoint badEndpoint;
  private EmbeddedXmppTestServer embeddedXmppTestServer;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    embeddedXmppTestServer.bindSSLContextTo(registry);
    return registry;
  }
  @Test public void testProducerGetsEverything() throws Exception {
    goodEndpoint=context.getEndpoint("mock:good",MockEndpoint.class);
    badEndpoint=context.getEndpoint("mock:bad",MockEndpoint.class);
    goodEndpoint.expectedMessageCount(4);
    badEndpoint.expectedMessageCount(0);
    template.sendBody("direct:toProducer1","From producer");
    template.sendBody("direct:toProducer1","From producer");
    template.sendBody("direct:toProducer2","From producer1");
    template.sendBody("direct:toProducer2","From producer1");
    goodEndpoint.assertIsSatisfied();
    badEndpoint.assertIsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:toProducer1").to(getProducer1Uri());
        from("direct:toProducer2").to(getProducer2Uri());
        from(getConsumerUri()).removeHeader(XmppConstants.TO).to(getConsumerUri());
        from(getProducer1Uri()).to("mock:good");
        from(getProducer2Uri()).to("mock:bad");
      }
    }
;
  }
  protected String getProducer1Uri(){
    return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/camel_consumer@apache.camel?connectionConfig=#customConnectionConfig&room=camel-test-room@conference.apache.camel&user=camel_producer&password=secret&serviceName=apache.camel";
  }
  protected String getProducer2Uri(){
    return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/camel_consumer@apache.camel?connectionConfig=#customConnectionConfig&user=camel_producer1&password=secret&serviceName=apache.camel";
  }
  protected String getConsumerUri(){
    return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/camel_producer@apache.camel?connectionConfig=#customConnectionConfig&room=camel-test-room@conference.apache.camel&user=camel_consumer&password=secret&serviceName=apache.camel";
  }
  @Override public void doPreSetup() throws Exception {
    embeddedXmppTestServer=new EmbeddedXmppTestServer();
  }
  @Override @After public void tearDown() throws Exception {
    super.tearDown();
    embeddedXmppTestServer.stop();
  }
}
