public class JAXRSClientServerTest extends CamelSpringTestSupport {
  @BeforeClass public static void setupPorts(){
    System.setProperty("soapEndpointPort",String.valueOf(AvailablePortFinder.getNextAvailable()));
    System.setProperty("restEndpointPort",String.valueOf(AvailablePortFinder.getNextAvailable()));
  }
  @Test public void testJAXWSClient() throws BookNotFoundFault {
    JAXWSClient jaxwsClient=new JAXWSClient();
    BookStore bookStore=jaxwsClient.getBookStore();
    bookStore.addBook(new Book("Camel User Guide",123L));
    Book book=bookStore.getBook(123L);
    assertNotNull("We should find the book here",book);
    try {
      book=bookStore.getBook(124L);
      fail("We should not have this book");
    }
 catch (    Exception exception) {
      assertTrue("The exception should be BookNotFoundFault",exception instanceof BookNotFoundFault);
    }
  }
  @Test public void testJAXRSClient() throws BookNotFoundFault {
    JAXRSClient jaxrsClient=new JAXRSClient();
    BookStore bookStore=jaxrsClient.getBookStore();
    bookStore.addBook(new Book("Camel User Guide",124L));
    Book book=bookStore.getBook(124L);
    assertNotNull("We should find the book here",book);
    try {
      book=bookStore.getBook(126L);
      fail("We should not have this book");
    }
 catch (    Exception exception) {
      assertTrue("The exception should be BookNotFoundFault",exception instanceof BookNotFoundFault);
    }
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext(new String[]{"/META-INF/spring/JAXRSCamelContext.xml"});
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    BusFactory.setDefaultBus(null);
    BusFactory.setThreadDefaultBus(null);
  }
}
