/** 
 * @version 
 */
public class ManagedLoadBalancerTest extends ManagementTestSupport {
  @Test public void testLoadBalancer() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    getMockEndpoint("mock:a").expectedBodiesReceived("Hello World","Hi World");
    getMockEndpoint("mock:b").expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Hello World");
    template.sendBody("direct:start","Bye World");
    template.sendBody("direct:start","Hi World");
    assertMockEndpointsSatisfied();
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName name=ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"mock://a\"");
    Long queueSize=(Long)mbeanServer.invoke(name,"queueSize",null,null);
    assertEquals(2,queueSize.intValue());
    name=ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"mock://b\"");
    queueSize=(Long)mbeanServer.invoke(name,"queueSize",null,null);
    assertEquals(1,queueSize.intValue());
    name=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"myBalancer\"");
    mbeanServer.isRegistered(name);
    Long total=(Long)mbeanServer.getAttribute(name,"ExchangesTotal");
    assertEquals(3,total.intValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("foo").loadBalance().id("myBalancer").roundRobin().to("mock:a").to("mock:b");
      }
    }
;
  }
}
