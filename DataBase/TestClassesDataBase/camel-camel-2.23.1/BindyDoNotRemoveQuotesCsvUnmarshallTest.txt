@ContextConfiguration public class BindyDoNotRemoveQuotesCsvUnmarshallTest extends AbstractJUnit4SpringContextTests {
  private static final String URI_MOCK_RESULT="mock:result";
  private static final String URI_DIRECT_START="direct:start";
  @Produce(uri=URI_DIRECT_START) private ProducerTemplate template;
  @EndpointInject(uri=URI_MOCK_RESULT) private MockEndpoint result;
  private String expected;
  @Test @DirtiesContext public void testUnMarshallMessage() throws Exception {
    expected="apple,\"bright red\" apple,a fruit";
    template.sendBody(expected);
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
    BindyDoNotRemoveQuotesCsvUnmarshallTest.Product product=result.getReceivedExchanges().get(0).getIn().getBody(BindyDoNotRemoveQuotesCsvUnmarshallTest.Product.class);
    Assert.assertEquals("apple",product.getName());
    Assert.assertEquals("\"bright red\" apple",product.getDescription1());
    Assert.assertEquals("a fruit",product.getDescription2());
  }
public static class ContextConfig extends RouteBuilder {
    BindyCsvDataFormat camelDataFormat=new BindyCsvDataFormat(BindyDoNotRemoveQuotesCsvUnmarshallTest.Product.class);
    public void configure(){
      from(URI_DIRECT_START).unmarshal(camelDataFormat).to(URI_MOCK_RESULT);
    }
  }
@CsvRecord(separator=",",removeQuotes=false) public static class Product {
    @DataField(pos=1) private String name;
    @DataField(pos=2) private String description1;
    @DataField(pos=3) private String description2;
    public String getName(){
      return name;
    }
    public void setName(    String name){
      this.name=name;
    }
    public String getDescription1(){
      return description1;
    }
    public void setDescription1(    String description1){
      this.description1=description1;
    }
    public String getDescription2(){
      return description2;
    }
    public void setDescription2(    String description2){
      this.description2=description2;
    }
    @Override public String toString(){
      return "Product{" + "name='" + name + '\''+ ", description1='"+ description1+ '\''+ ", description2='"+ description2+ '\''+ '}';
    }
  }
}
