@Ignore("TODO: ActiveMQ 5.14.1 or better, due AMQ-6402") @ContextConfiguration public class CamelGreeterTest extends AbstractJUnit4SpringContextTests {
  private static final Logger LOG=LoggerFactory.getLogger(CamelGreeterTest.class);
  private static Endpoint endpoint;
  private static int port=AvailablePortFinder.getNextAvailable(20004);
static {
    System.setProperty("CamelGreeterTest.port",Integer.toString(port));
  }
  @Autowired protected CamelContext camelContext;
  @EndpointInject(uri="mock:resultEndpoint") protected MockEndpoint resultEndpoint;
  @BeforeClass public static void startServer() throws Exception {
    Object implementor=new GreeterImpl();
    String address="http://localhost:" + port + "/SoapContext/SoapPort";
    endpoint=Endpoint.publish(address,implementor);
    LOG.info("The WS endpoint is published! ");
  }
  @AfterClass public static void stopServer() throws Exception {
    if (endpoint != null) {
      endpoint.stop();
      endpoint=null;
    }
  }
  @Test public void testMocksAreValid() throws Exception {
    assertNotNull(camelContext);
    assertNotNull(resultEndpoint);
    ProducerTemplate template=camelContext.createProducerTemplate();
    template.sendBodyAndHeader("jms:requestQueue","Willem",CxfConstants.OPERATION_NAME,"greetMe");
    Thread.sleep(4000);
    template.stop();
    MockEndpoint.assertIsSatisfied(camelContext);
    List<Exchange> list=resultEndpoint.getReceivedExchanges();
    assertEquals("Should get one message",list.size(),1);
    for (    Exchange exchange : list) {
      String result=(String)exchange.getIn().getBody();
      assertEquals("Get the wrong result ",result,"Hello Willem");
    }
  }
}
