public class DockerCustomCmdExecFactoryTestIT extends DockerITTestSupport {
  @Test public void testNettyCmdExecFactoryConfig() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived(FakeDockerCmdExecFactory.FAKE_VERSION);
    template.sendBody("direct:in","");
    assertMockEndpointsSatisfied(60,TimeUnit.SECONDS);
    mock.getExchanges();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    FakeDockerCmdExecFactory.class.getDeclaredConstructors();
    return new RouteBuilder(){
      public void configure(){
        from("direct:in").to("docker://version?cmdExecFactory=" + FakeDockerCmdExecFactory.class.getName()).log("${body}").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            Version version=exchange.getIn().getBody(Version.class);
            exchange.getOut().setBody(version.getVersion());
          }
        }
).to("mock:result");
      }
    }
;
  }
}
