class DummyAmazonS3Client extends AmazonS3Client {
  private AtomicInteger requestCount=new AtomicInteger(0);
  DummyAmazonS3Client(){
    super(new BasicAWSCredentials("myAccessKey","mySecretKey"));
  }
  @Override public ObjectListing listObjects(  ListObjectsRequest request) throws AmazonClientException, AmazonServiceException {
    int currentRequestCount=requestCount.incrementAndGet();
    assertEquals("mycamelbucket",request.getBucketName());
    if (currentRequestCount == 2) {
      assertEquals("confidential",request.getPrefix());
    }
    ObjectListing response=new ObjectListing();
    response.setBucketName(request.getBucketName());
    response.setPrefix(request.getPrefix());
    S3ObjectSummary s3ObjectSummary=new S3ObjectSummary();
    s3ObjectSummary.setBucketName(request.getBucketName());
    s3ObjectSummary.setKey("key");
    response.getObjectSummaries().add(s3ObjectSummary);
    return response;
  }
  @Override public S3Object getObject(  String bucketName,  String key) throws AmazonClientException, AmazonServiceException {
    assertEquals("mycamelbucket",bucketName);
    assertEquals("key",key);
    S3Object s3Object=new S3Object();
    s3Object.setBucketName(bucketName);
    s3Object.setKey(key);
    try {
      s3Object.setObjectContent(new StringInputStream("Camel rocks!"));
    }
 catch (    UnsupportedEncodingException e) {
    }
    return s3Object;
  }
  @Override public void deleteObject(  String bucketName,  String key) throws AmazonClientException, AmazonServiceException {
  }
}
