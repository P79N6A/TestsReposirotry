/** 
 * Unit test for PredicateAggregatorCollection.
 */
public class PredicateAggregatorCollectionTest extends ContextTestSupport {
  @Test public void testPredicateAggregateCollection() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(2);
    result.expectedBodiesReceived("Message 1c","Message 3c");
    template.sendBodyAndHeader("direct:start","Message 1a","id","1");
    template.sendBodyAndHeader("direct:start","Message 2a","id","2");
    template.sendBodyAndHeader("direct:start","Message 3a","id","3");
    template.sendBodyAndHeader("direct:start","Message 1b","id","1");
    template.sendBodyAndHeader("direct:start","Message 3b","id","3");
    template.sendBodyAndHeader("direct:start","Message 1c","id","1");
    template.sendBodyAndHeader("direct:start","Message 3c","id","3");
    template.sendBodyAndHeader("direct:start","Message 2b","id","2");
    template.sendBodyAndHeader("direct:start","Message 1d","id","1");
    template.sendBodyAndHeader("direct:start","Message 4","id","4");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:start").aggregate(header("id"),new UseLatestAggregationStrategy()).completionSize(3).to("mock:result");
      }
    }
;
  }
}
