public class ProducerBodyArrayTest extends CamelTestSupport {
  EmbeddedDatabase db;
  @Before public void setUp() throws Exception {
    db=new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/storedProcedureTest.sql").build();
    super.setUp();
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    db.shutdown();
  }
  @Test public void shouldExecuteStoredProcedure() throws InterruptedException {
    MockEndpoint mock=getMockEndpoint("mock:query");
    mock.expectedMessageCount(1);
    Integer[] numbers=new Integer[]{1,2};
    template.requestBody("direct:query",numbers);
    assertMockEndpointsSatisfied();
    Exchange exchange=mock.getExchanges().get(0);
    assertEquals(Integer.valueOf(-1),exchange.getIn().getBody(Map.class).get("resultofsub"));
    assertNotNull(exchange.getIn().getHeader(SqlStoredConstants.SQL_STORED_UPDATE_COUNT));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        getContext().getComponent("sql-stored",SqlStoredComponent.class).setDataSource(db);
        from("direct:query").to("sql-stored:SUBNUMBERS(INTEGER ${body[0]},INTEGER ${body[1]},OUT INTEGER resultofsub)").to("mock:query");
      }
    }
;
  }
}
