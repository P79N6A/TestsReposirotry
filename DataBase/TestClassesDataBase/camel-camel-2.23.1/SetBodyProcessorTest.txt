/** 
 * @version 
 */
public class SetBodyProcessorTest extends ContextTestSupport {
  @Test public void testSetBody() throws Exception {
    MockEndpoint foo=getMockEndpoint("mock:foo");
    foo.expectedBodiesReceived("World");
    foo.expectedHeaderReceived("foo",123);
    foo.message(0).predicate(new Predicate(){
      public boolean matches(      Exchange exchange){
        return exchange.getIn() instanceof MyMessage;
      }
    }
);
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedBodiesReceived("Bye World");
    result.expectedHeaderReceived("foo",123);
    result.message(0).predicate(new Predicate(){
      public boolean matches(      Exchange exchange){
        return !(exchange.getIn() instanceof MyMessage);
      }
    }
);
    template.send("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        MyMessage my=new MyMessage(exchange.getContext());
        my.setBody("World");
        my.setHeader("foo",123);
        exchange.setIn(my);
      }
    }
);
    assertMockEndpointsSatisfied();
  }
  @Test public void testSetBodyWithHeader() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:test");
    result.expectedBodiesReceived("bbb");
    result.expectedHeaderReceived("text","aab");
    template.sendBodyAndHeader("direct:start2","aab","text","aab");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:foo").setBody(simple("Bye ${body}")).to("mock:result");
        from("direct:start2").setBody(simple("header.text.replace('a','b')")).to("mock:test");
      }
    }
;
  }
private static class MyMessage extends DefaultMessage {
    public MyMessage(    CamelContext camelContext){
      super(camelContext);
    }
    @Override public MyMessage newInstance(){
      return new MyMessage(getCamelContext());
    }
  }
}
