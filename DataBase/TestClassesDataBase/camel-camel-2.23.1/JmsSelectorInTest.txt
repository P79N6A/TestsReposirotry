/** 
 * @version 
 */
public class JmsSelectorInTest extends CamelTestSupport {
  @Test public void testJmsSelectorIn() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Carlsberg","Santa Rita");
    template.sendBodyAndHeader("activemq:queue:foo","Carlsberg","drink","beer");
    template.sendBodyAndHeader("activemq:queue:foo","Coca Cola","drink","soft");
    template.sendBodyAndHeader("activemq:queue:foo","Santa Rita","drink","wine");
    mock.assertIsSatisfied();
    JmsQueueEndpoint endpoint=context.getEndpoint("activemq:queue:foo",JmsQueueEndpoint.class);
    assertEquals(2,endpoint.getExchanges().size());
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    JmsComponent component=jmsComponentAutoAcknowledge(connectionFactory);
    camelContext.addComponent("activemq",component);
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        JmsEndpoint endpoint=context.getEndpoint("activemq:queue:foo",JmsEndpoint.class);
        endpoint.setSelector("drink IN ('beer', 'wine')");
        from(endpoint).to("log:drink").to("mock:result");
      }
    }
;
  }
}
