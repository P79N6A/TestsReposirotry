public class PutAttributesCommandTest {
  private PutAttributesCommand command;
  private AmazonSDBClientMock sdbClient;
  private SdbConfiguration configuration;
  private Exchange exchange;
  @Before public void setUp(){
    sdbClient=new AmazonSDBClientMock();
    configuration=new SdbConfiguration();
    configuration.setDomainName("DOMAIN1");
    exchange=new DefaultExchange(new DefaultCamelContext());
    command=new PutAttributesCommand(sdbClient,configuration,exchange);
  }
  @Test public void execute(){
    List<ReplaceableAttribute> replaceableAttributes=new ArrayList<>();
    replaceableAttributes.add(new ReplaceableAttribute("NAME1","VALUE1",true));
    exchange.getIn().setHeader(SdbConstants.REPLACEABLE_ATTRIBUTES,replaceableAttributes);
    exchange.getIn().setHeader(SdbConstants.ITEM_NAME,"ITEM1");
    UpdateCondition updateCondition=new UpdateCondition("NAME1","VALUE1",true);
    exchange.getIn().setHeader(SdbConstants.UPDATE_CONDITION,updateCondition);
    command.execute();
    assertEquals("DOMAIN1",sdbClient.putAttributesRequest.getDomainName());
    assertEquals("ITEM1",sdbClient.putAttributesRequest.getItemName());
    assertEquals(updateCondition,sdbClient.putAttributesRequest.getExpected());
    assertEquals(replaceableAttributes,sdbClient.putAttributesRequest.getAttributes());
  }
  @Test(expected=IllegalArgumentException.class) public void executeWithoutItemName(){
    List<ReplaceableAttribute> replaceableAttributes=new ArrayList<>();
    replaceableAttributes.add(new ReplaceableAttribute("NAME1","VALUE1",true));
    exchange.getIn().setHeader(SdbConstants.REPLACEABLE_ATTRIBUTES,replaceableAttributes);
    UpdateCondition updateCondition=new UpdateCondition("NAME1","VALUE1",true);
    exchange.getIn().setHeader(SdbConstants.UPDATE_CONDITION,updateCondition);
    command.execute();
  }
  @Test public void determineReplaceableAttributes(){
    assertNull(this.command.determineReplaceableAttributes());
    List<ReplaceableAttribute> replaceableAttributes=new ArrayList<>();
    replaceableAttributes.add(new ReplaceableAttribute("NAME1","VALUE1",true));
    exchange.getIn().setHeader(SdbConstants.REPLACEABLE_ATTRIBUTES,replaceableAttributes);
    assertEquals(replaceableAttributes,this.command.determineReplaceableAttributes());
  }
}
