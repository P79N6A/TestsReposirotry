/** 
 * @version 
 */
public class SpringFinallyNestedFailTest extends ContextTestSupport {
  protected CamelContext createCamelContext() throws Exception {
    return createSpringCamelContext(this,"org/apache/camel/spring/issues/SpringFinallyNestedFailTest.xml");
  }
  @Test public void testOk() throws Exception {
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    getMockEndpoint("mock:donkey").expectedMessageCount(0);
    getMockEndpoint("mock:catch").expectedMessageCount(0);
    getMockEndpoint("mock:kong").expectedMessageCount(0);
    getMockEndpoint("mock:finally").expectedMessageCount(1);
    getMockEndpoint("mock:finallyEnd").expectedMessageCount(1);
    getMockEndpoint("mock:end").expectedMessageCount(1);
    template.sendBody("direct:start","Hello Camel");
    assertMockEndpointsSatisfied();
  }
  @Test public void testFail() throws Exception {
    getMockEndpoint("mock:bar").expectedMessageCount(0);
    getMockEndpoint("mock:donkey").expectedMessageCount(1);
    getMockEndpoint("mock:catch").expectedMessageCount(1);
    getMockEndpoint("mock:kong").expectedMessageCount(0);
    getMockEndpoint("mock:finally").expectedMessageCount(1);
    getMockEndpoint("mock:finallyEnd").expectedMessageCount(1);
    getMockEndpoint("mock:end").expectedMessageCount(1);
    template.sendBody("direct:start","Hello Donkey");
    assertMockEndpointsSatisfied();
  }
  @Test public void testFailAgain() throws Exception {
    getMockEndpoint("mock:bar").expectedMessageCount(0);
    getMockEndpoint("mock:donkey").expectedMessageCount(1);
    getMockEndpoint("mock:catch").expectedMessageCount(1);
    getMockEndpoint("mock:kong").expectedMessageCount(1);
    getMockEndpoint("mock:finally").expectedMessageCount(1);
    getMockEndpoint("mock:finallyEnd").expectedMessageCount(0);
    getMockEndpoint("mock:end").expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Donkey Kong");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      assertIsInstanceOf(IllegalStateException.class,e.getCause());
      assertEquals("Damn Kong",e.getCause().getMessage());
    }
    assertMockEndpointsSatisfied();
  }
}
