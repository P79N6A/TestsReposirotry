public class RestUndertowHttpMultipleVerbsTest extends BaseUndertowTest {
  @Test public void testProducerGetPut() throws Exception {
    getMockEndpoint("mock:get").expectedMessageCount(1);
    getMockEndpoint("mock:put").expectedMessageCount(0);
    template.requestBodyAndHeader("undertow:http://localhost:{{port}}/example/123",null,Exchange.HTTP_METHOD,"GET");
    assertMockEndpointsSatisfied();
    resetMocks();
    getMockEndpoint("mock:get").expectedMessageCount(0);
    getMockEndpoint("mock:put").expectedMessageCount(1);
    template.requestBodyAndHeader("undertow:http://localhost:{{port}}/example/456","Hello World",Exchange.HTTP_METHOD,"PUT");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("undertow").host("localhost").port(getPort());
        rest("/example").get("{pathParamHere}").to("mock:get").put("{pathParamHere}").to("mock:put");
      }
    }
;
  }
}
