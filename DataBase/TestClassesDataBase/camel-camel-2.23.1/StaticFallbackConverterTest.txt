/** 
 * @version 
 */
public class StaticFallbackConverterTest extends ContextTestSupport {
  @Override protected boolean isLoadTypeConverters(){
    return true;
  }
  @Test public void testStaticFallbackConverter() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    TimeZone tz=TimeZone.getDefault();
    String money=context.getTypeConverter().convertTo(String.class,exchange,tz);
    assertEquals("Time talks",money);
  }
  @Test public void testStaticFallbackMandatoryConverter() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    TimeZone tz=TimeZone.getDefault();
    String money=context.getTypeConverter().mandatoryConvertTo(String.class,exchange,tz);
    assertEquals("Time talks",money);
  }
  @Test public void testStaticFallbackMandatoryFailed() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    try {
      context.getTypeConverter().mandatoryConvertTo(Date.class,exchange,new Timestamp(0));
      fail("Should have thrown an exception");
    }
 catch (    NoTypeConversionAvailableException e) {
    }
  }
  @Test public void testStaticFallbackFailed() throws Exception {
    Exchange exchange=new DefaultExchange(context);
    Date out=context.getTypeConverter().convertTo(Date.class,exchange,new Timestamp(0));
    assertNull(out);
  }
}
