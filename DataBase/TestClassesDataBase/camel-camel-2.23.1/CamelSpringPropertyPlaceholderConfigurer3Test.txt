/** 
 */
public class CamelSpringPropertyPlaceholderConfigurer3Test extends SpringTestSupport {
  @Override @Before public void setUp() throws Exception {
    System.setProperty("hi2","Gute Nacht");
    super.setUp();
  }
  @Override @After public void tearDown() throws Exception {
    System.clearProperty("hi2");
    super.tearDown();
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/properties/CamelSpringPropertyPlaceholderConfigurer3Test.xml");
  }
  @Test public void testCamelSpringPropertyPlaceholderConfigurerTest() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Gute Nacht Camel");
    template.sendBody("direct:bar","Camel");
    assertMockEndpointsSatisfied();
  }
@SuppressWarnings("unused") private static class MyBridgePropertyPlaceholderConfigurer extends BridgePropertyPlaceholderConfigurer {
    @Override public Properties resolveProperties(    CamelContext context,    boolean ignoreMissingLocation,    List<PropertiesLocation> locations) throws Exception {
      Properties answer=super.resolveProperties(context,ignoreMissingLocation,locations);
      answer.put("foo","bar");
      answer.put("scheme","mock");
      answer.put("separator",":");
      answer.put("context-path","result");
      return answer;
    }
  }
}
