public class RestJettyVerbTest extends BaseJettyTest {
  @Test public void testGetAll() throws Exception {
    String out=template.requestBodyAndHeader("http://localhost:" + getPort() + "/users",null,Exchange.HTTP_METHOD,"GET",String.class);
    assertEquals("[{ \"id\":\"1\", \"name\":\"Scott\" },{ \"id\":\"2\", \"name\":\"Claus\" }]",out);
  }
  @Test public void testGetOne() throws Exception {
    String out=template.requestBodyAndHeader("http://localhost:" + getPort() + "/users/1",null,Exchange.HTTP_METHOD,"GET",String.class);
    assertEquals("{ \"id\":\"1\", \"name\":\"Scott\" }",out);
  }
  @Test public void testPost() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:create");
    mock.expectedBodiesReceived("{ \"id\":\"1\", \"name\":\"Scott\" }");
    mock.expectedHeaderReceived(Exchange.HTTP_METHOD,"POST");
    template.requestBodyAndHeader("http://localhost:" + getPort() + "/users","{ \"id\":\"1\", \"name\":\"Scott\" }",Exchange.HTTP_METHOD,"POST",String.class);
    assertMockEndpointsSatisfied();
  }
  @Test public void testPut() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:update");
    mock.expectedBodiesReceived("{ \"id\":\"1\", \"name\":\"Scott\" }");
    mock.expectedHeaderReceived("id","1");
    mock.expectedHeaderReceived(Exchange.HTTP_METHOD,"PUT");
    template.requestBodyAndHeader("http://localhost:" + getPort() + "/users/1","{ \"id\":\"1\", \"name\":\"Scott\" }",Exchange.HTTP_METHOD,"PUT",String.class);
    assertMockEndpointsSatisfied();
  }
  @Test public void testDelete() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:delete");
    mock.expectedHeaderReceived("id","1");
    mock.expectedHeaderReceived(Exchange.HTTP_METHOD,"DELETE");
    template.requestBodyAndHeader("http://localhost:" + getPort() + "/users/1",null,Exchange.HTTP_METHOD,"DELETE",String.class);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("jetty").host("localhost").port(getPort());
        rest().get("/users").route().transform().constant("[{ \"id\":\"1\", \"name\":\"Scott\" },{ \"id\":\"2\", \"name\":\"Claus\" }]").endRest().get("/users/{id}").route().transform().simple("{ \"id\":\"${header.id}\", \"name\":\"Scott\" }").endRest().post("/users").to("mock:create").put("/users/{id}").to("mock:update").delete("/users/{id}").to("mock:delete");
      }
    }
;
  }
}
