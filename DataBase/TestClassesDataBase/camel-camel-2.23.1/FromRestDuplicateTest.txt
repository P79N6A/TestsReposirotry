public class FromRestDuplicateTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    return jndi;
  }
  @Test public void testDuplicateGet() throws Exception {
    try {
      context.addRoutes(new RouteBuilder(){
        @Override public void configure() throws Exception {
          restConfiguration().host("localhost");
          rest("/users").get("{id}").to("log:foo").post().to("log:foo").get("").to("log:foo").get("{id}").to("log:foo");
        }
      }
);
      fail("Should throw exception");
    }
 catch (    IllegalArgumentException e) {
      assertEquals("Duplicate verb detected in rest-dsl: get:{id}",e.getMessage());
    }
  }
  @Test public void testDuplicatePost() throws Exception {
    try {
      context.addRoutes(new RouteBuilder(){
        @Override public void configure() throws Exception {
          restConfiguration().host("localhost");
          rest("/users").get("{id}").to("log:foo").post().to("log:foo").get("").to("log:foo").put().to("log:foo").post().to("log:foo");
        }
      }
);
      fail("Should throw exception");
    }
 catch (    IllegalArgumentException e) {
      assertEquals("Duplicate verb detected in rest-dsl: post",e.getMessage());
    }
  }
}
