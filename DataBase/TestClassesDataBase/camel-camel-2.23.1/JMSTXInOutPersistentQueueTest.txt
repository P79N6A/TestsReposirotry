/** 
 * @version 
 */
public class JMSTXInOutPersistentQueueTest extends CamelSpringTestSupport {
  private static int counter;
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/jms/tx/JmsTransacted-context.xml");
  }
  @Test public void testJMSTXInOutPersistentQueueWithClientRedelivery() throws Exception {
    getMockEndpoint("mock:foo").expectedBodiesReceived("World","World","World");
    getMockEndpoint("mock:reply").expectedBodiesReceived("Bye World","Bye World","Bye World");
    try {
      template.sendBody("direct:start","World");
      fail("Should thrown an exception");
    }
 catch (    Exception e) {
    }
    try {
      template.sendBody("direct:start","World");
      fail("Should thrown an exception");
    }
 catch (    Exception e) {
    }
    template.sendBody("direct:start","World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").inOut("activemq:queue:foo?replyTo=myReplies").to("mock:reply").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            if (counter++ < 2) {
              throw new IllegalArgumentException("Damn");
            }
          }
        }
).to("mock:result");
        from("activemq:queue:foo").to("mock:foo").transform(body().prepend("Bye "));
      }
    }
;
  }
}
