/** 
 * @version 
 */
public class JpaBatchConsumerTest extends AbstractJpaTest {
  protected static final String SELECT_ALL_STRING="select x from " + SendEmail.class.getName() + " x";
  @Test public void testBatchConsumer() throws Exception {
    template.sendBody("jpa://" + SendEmail.class.getName(),new SendEmail("foo@beer.org"));
    template.sendBody("jpa://" + SendEmail.class.getName(),new SendEmail("bar@beer.org"));
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(2);
    mock.message(0).property(Exchange.BATCH_INDEX).isEqualTo(0);
    mock.message(0).property(Exchange.BATCH_COMPLETE).isEqualTo(false);
    mock.message(1).property(Exchange.BATCH_INDEX).isEqualTo(1);
    mock.message(1).property(Exchange.BATCH_COMPLETE).isEqualTo(true);
    mock.expectedPropertyReceived(Exchange.BATCH_SIZE,2);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jpa://" + SendEmail.class.getName() + "?delay=2000").to("mock:result");
      }
    }
;
  }
  @Override protected String routeXml(){
    return "org/apache/camel/processor/jpa/springJpaRouteTest.xml";
  }
  @Override protected String selectAllString(){
    return SELECT_ALL_STRING;
  }
}
