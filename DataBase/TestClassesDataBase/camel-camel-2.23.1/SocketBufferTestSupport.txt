public class SocketBufferTestSupport {
  static final String TEST_HL7_MESSAGE="MSH|^~\\&|JCAPS|CC|ADT|EPIC|20161206193919|RISTECH|ACK^A08|00001|D|2.3^^|||||||" + '\r' + "MSA|AA|00001|"+ '\r';
  MllpEndpoint endpoint;
  MllpSocketBuffer instance;
  @Before public void setUp() throws Exception {
    endpoint=new MllpEndpoint("mllp://dummy",new MllpComponent(),new MllpConfiguration());
    instance=new MllpSocketBuffer(endpoint);
  }
  byte[] buildTestBytes(  boolean includeStartOfBlock,  boolean includeEndOfBlock,  boolean includeEndOfData) throws IOException {
    return buildTestBytes(TEST_HL7_MESSAGE,includeStartOfBlock,includeEndOfBlock,includeEndOfData);
  }
  byte[] buildTestBytes(  String message,  boolean includeStartOfBlock,  boolean includeEndOfBlock,  boolean includeEndOfData) throws IOException {
    ByteArrayOutputStream payloadBuilder=new ByteArrayOutputStream();
    if (includeStartOfBlock) {
      payloadBuilder.write(MllpProtocolConstants.START_OF_BLOCK);
    }
    if (message != null && !message.isEmpty()) {
      payloadBuilder.write(message.getBytes());
    }
    if (includeEndOfBlock) {
      payloadBuilder.write(MllpProtocolConstants.END_OF_BLOCK);
    }
    if (includeEndOfData) {
      payloadBuilder.write(MllpProtocolConstants.END_OF_DATA);
    }
    return payloadBuilder.toByteArray();
  }
}
