/** 
 * Test cases for  {@link CollectionConverter}
 */
public class CollectionConverterTest extends Assert {
  private static final List<String> SMURFS=Arrays.asList("Papa smurf","Smurfette","Hefty smurf","Jokey smurf");
  @Test public void testIteratorToList() throws Exception {
    assertSmurfs(CollectionConverter.toArrayList(SMURFS.iterator()));
  }
  @Test public void testIterableToList() throws Exception {
    assertSmurfs(CollectionConverter.toList(new Iterable<String>(){
      public Iterator<String> iterator(){
        return SMURFS.iterator();
      }
    }
));
    assertSame(SMURFS,CollectionConverter.toList((Iterable<String>)SMURFS));
  }
  private void assertSmurfs(  Collection<String> result){
    assertEquals(SMURFS.size(),result.size());
    for (    String key : result) {
      assertTrue(SMURFS.contains(key));
    }
  }
  @Test public void testToArray(){
    Object[] data=CollectionConverter.toArray(SMURFS);
    assertEquals(4,data.length);
  }
  @Test public void testToList(){
    List<String> out=CollectionConverter.toList(SMURFS);
    assertEquals(4,out.size());
  }
  @Test public void testToSet(){
    Map<String,String> map=new HashMap<>();
    map.put("foo","bar");
    Set<Map.Entry<String,String>> out=CollectionConverter.toSet(map);
    assertEquals(1,out.size());
  }
  @Test public void testToHashMap(){
    Map<String,Object> map=new CaseInsensitiveMap();
    map.put("foo","bar");
    Map<String,Object> out=CollectionConverter.toHashMap(map);
    assertEquals(1,out.size());
  }
  @Test public void testToHashtable(){
    Map<String,Object> map=new CaseInsensitiveMap();
    map.put("foo","bar");
    Map<String,Object> out=CollectionConverter.toHashtable(map);
    assertEquals(1,out.size());
  }
  @Test public void testToProperties(){
    Map<Object,Object> map=new HashMap<>();
    map.put("foo","bar");
    Properties prop=CollectionConverter.toProperties(map);
    assertNotNull(prop);
    assertEquals(1,prop.size());
    assertEquals("bar",prop.get("foo"));
  }
}
