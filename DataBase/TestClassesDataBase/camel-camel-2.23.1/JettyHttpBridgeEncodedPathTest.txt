public class JettyHttpBridgeEncodedPathTest extends BaseJettyTest {
  private int port1;
  private int port2;
  @Test public void testJettyHttpClient() throws Exception {
    String response=template.requestBody("http://localhost:" + port2 + "/jettyTestRouteA?param1=%2B447777111222",null,String.class);
    assertEquals("Get a wrong response","param1=+447777111222",response);
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        port1=getPort();
        port2=getNextPort();
        errorHandler(noErrorHandler());
        Processor serviceProc=new Processor(){
          public void process(          Exchange exchange) throws Exception {
            Object s=exchange.getIn().getHeader("param1");
            assertTrue(s.equals(" 447777111222") || s.equals("+447777111222") || s.equals("%2B447777111222"));
            exchange.getOut().setBody(exchange.getIn().getHeader(Exchange.HTTP_QUERY));
          }
        }
;
        from("jetty://http://localhost:" + port2 + "/jettyTestRouteA?matchOnUriPrefix=true").log("Using JettyTestRouteA route: CamelHttpPath=[${header.CamelHttpPath}], CamelHttpUri=[${header.CamelHttpUri}]").to("jetty://http://localhost:" + port1 + "/jettyTestRouteB?throwExceptionOnFailure=false&bridgeEndpoint=true");
        from("jetty://http://localhost:" + port1 + "/jettyTestRouteB?matchOnUriPrefix=true").log("Using JettyTestRouteB route: CamelHttpPath=[${header.CamelHttpPath}], CamelHttpUri=[${header.CamelHttpUri}]").process(serviceProc);
      }
    }
;
  }
}
