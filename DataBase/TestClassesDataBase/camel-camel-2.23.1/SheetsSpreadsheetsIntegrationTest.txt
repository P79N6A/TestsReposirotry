/** 
 * Test class for  {@link com.google.api.services.sheets.v4.Sheets.Spreadsheets} APIs.
 */
public class SheetsSpreadsheetsIntegrationTest extends AbstractGoogleSheetsTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(SheetsSpreadsheetsIntegrationTest.class);
  private static final String PATH_PREFIX=GoogleSheetsApiCollection.getCollection().getApiName(SheetsSpreadsheetsApiMethod.class).getName();
  @Test public void testCreate() throws Exception {
    String title="camel-sheets-" + Math.abs(new Random().nextInt());
    Spreadsheet sheetToCreate=new Spreadsheet();
    SpreadsheetProperties sheetProperties=new SpreadsheetProperties();
    sheetProperties.setTitle(title);
    sheetToCreate.setProperties(sheetProperties);
    final Spreadsheet result=requestBody("direct://CREATE",sheetToCreate);
    assertNotNull("create result is null",result);
    assertEquals(title,result.getProperties().getTitle());
    LOG.debug("create: " + result);
  }
  @Test public void testGet() throws Exception {
    Spreadsheet testSheet=getSpreadsheet();
    final Spreadsheet result=requestBody("direct://GET",testSheet.getSpreadsheetId());
    assertNotNull("get result is null",result);
    assertEquals(testSheet.getSpreadsheetId(),result.getSpreadsheetId());
    LOG.debug("get: " + result);
  }
  @Test public void testBatchUpdate() throws Exception {
    Spreadsheet testSheet=getSpreadsheet();
    String updateTitle="updated-" + testSheet.getProperties().getTitle();
    final Map<String,Object> headers=new HashMap<>();
    headers.put("CamelGoogleSheets.spreadsheetId",testSheet.getSpreadsheetId());
    headers.put("CamelGoogleSheets.batchUpdateSpreadsheetRequest",new BatchUpdateSpreadsheetRequest().setIncludeSpreadsheetInResponse(true).setRequests(Collections.singletonList(new Request().setUpdateSpreadsheetProperties(new UpdateSpreadsheetPropertiesRequest().setProperties(new SpreadsheetProperties().setTitle(updateTitle)).setFields("title")))));
    final BatchUpdateSpreadsheetResponse result=requestBodyAndHeaders("direct://BATCHUPDATE",null,headers);
    assertNotNull("batchUpdate result in null",result);
    assertEquals(updateTitle,result.getUpdatedSpreadsheet().getProperties().getTitle());
    LOG.debug("batchUpdate: " + result);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure(){
        from("direct://BATCHUPDATE").to("google-sheets://" + PATH_PREFIX + "/batchUpdate");
        from("direct://CREATE").to("google-sheets://" + PATH_PREFIX + "/create?inBody=content");
        from("direct://GET").to("google-sheets://" + PATH_PREFIX + "/get?inBody=spreadsheetId");
      }
    }
;
  }
}
