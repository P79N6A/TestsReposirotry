/** 
 */
public class DumpModelAsXmlRouteExpressionTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myCoolBean",new MyBarSingleton());
    return jndi;
  }
  @Test public void testDumpModelAsXml() throws Exception {
    String xml=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("myRoute"));
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<simple>Hello ${body}</simple>"));
  }
  @Test public void testDumpModelAsXmlXPath() throws Exception {
    String xml=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("myOtherRoute"));
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<xpath>/foo</xpath>"));
  }
  @Test public void testDumpModelAsXmlHeader() throws Exception {
    String xml=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("myFooRoute"));
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<header>bar</header>"));
  }
  @Test public void testDumpModelAsXmlBean() throws Exception {
    String xml=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("myBeanRoute"));
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<setHeader headerName=\"foo\""));
    assertTrue(xml.contains("<method>myCoolBean</method>"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("myRoute").setBody(simple("Hello ${body}")).to("mock:result");
        from("direct:other").routeId("myOtherRoute").setBody(xpath("/foo")).to("mock:result");
        from("direct:foo").routeId("myFooRoute").setBody(header("bar")).to("mock:result");
        from("direct:bean").routeId("myBeanRoute").setHeader("foo",method("myCoolBean")).to("mock:result");
      }
    }
;
  }
}
