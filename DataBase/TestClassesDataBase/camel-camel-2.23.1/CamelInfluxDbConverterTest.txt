public class CamelInfluxDbConverterTest {
  private static final Logger LOG=LoggerFactory.getLogger(CamelInfluxDbConverterTest.class);
  @Test public void doesNotAddCamelHeaders(){
    Map<String,Object> pointInMapFormat=new HashMap<>();
    pointInMapFormat.put(InfluxDbConstants.MEASUREMENT_NAME,"testCPU");
    double value=99.999999d;
    pointInMapFormat.put("busy",value);
    Point p=CamelInfluxDbConverters.fromMapToPoint(pointInMapFormat);
    assertNotNull(p);
    String line=p.lineProtocol();
    assertNotNull(line);
    LOG.debug("doesNotAddCamelHeaders generated: \"{}\"",line);
    assertTrue(!line.contains(InfluxDbConstants.MEASUREMENT_NAME));
  }
  @Test public void canAddDouble(){
    Map<String,Object> pointInMapFormat=new HashMap<>();
    pointInMapFormat.put(InfluxDbConstants.MEASUREMENT_NAME,"testCPU");
    double value=99.999999d;
    pointInMapFormat.put("busy",value);
    Point p=CamelInfluxDbConverters.fromMapToPoint(pointInMapFormat);
    assertNotNull(p);
    String line=p.lineProtocol();
    assertNotNull(line);
    LOG.debug("Doublecommand generated: \"{}\"",line);
    assertTrue(line.contains("busy=99.999999"));
  }
  @Test public void canAddInt(){
    Map<String,Object> pointInMapFormat=new HashMap<>();
    pointInMapFormat.put(InfluxDbConstants.MEASUREMENT_NAME,"testCPU");
    int value=99999999;
    pointInMapFormat.put("busy",value);
    Point p=CamelInfluxDbConverters.fromMapToPoint(pointInMapFormat);
    assertNotNull(p);
    String line=p.lineProtocol();
    assertNotNull(line);
    LOG.debug("Int command generated: \"{}\"",line);
    assertTrue(line.contains("busy=99999999"));
  }
  @Test public void canAddByte(){
    Map<String,Object> pointInMapFormat=new HashMap<>();
    pointInMapFormat.put(InfluxDbConstants.MEASUREMENT_NAME,"testCPU");
    byte value=Byte.MAX_VALUE;
    pointInMapFormat.put("busy",value);
    Point p=CamelInfluxDbConverters.fromMapToPoint(pointInMapFormat);
    assertNotNull(p);
    String line=p.lineProtocol();
    assertNotNull(line);
    LOG.debug("Byte command generated: \"{}\"",line);
    assertTrue(line.contains("busy=127"));
  }
}
