/** 
 * @version 
 */
public class MixedStreamCachingInterceptorTest extends ContextTestSupport {
  @Test public void testStreamCaching() throws Exception {
    MockEndpoint a=getMockEndpoint("mock:a");
    a.expectedMessageCount(1);
    StreamSource message=new StreamSource(new StringReader("<hello>world!</hello>"));
    template.sendBody("direct:a",message);
    assertMockEndpointsSatisfied();
    Exchange exchange=a.getExchanges().get(0);
    StreamCache cache=assertIsInstanceOf(StreamCache.class,exchange.getIn().getBody());
    assertNotNull(cache);
    assertNotSame(message,cache);
  }
  @Test public void testNoStreamCaching() throws Exception {
    MockEndpoint b=getMockEndpoint("mock:b");
    b.expectedMessageCount(1);
    StreamSource message=new StreamSource(new StringReader("<hello>world!</hello>"));
    template.sendBody("direct:b",message);
    assertMockEndpointsSatisfied();
    Exchange exchange=b.getExchanges().get(0);
    StreamSource stream=assertIsInstanceOf(StreamSource.class,exchange.getIn().getBody());
    assertNotNull(stream);
  }
  protected CamelContext createCamelContext() throws Exception {
    return createSpringCamelContext(this,"org/apache/camel/spring/interceptor/mixedStreamCachingInterceptorTest.xml");
  }
}
