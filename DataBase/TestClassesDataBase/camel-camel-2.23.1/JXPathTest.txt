/** 
 * Test for  {@link JXPathExpression} and {@link JXPathLanguage}
 */
public class JXPathTest extends LanguageTestSupport {
  protected PersonBean body=new PersonBean("James","London");
  @Test public void testJXPathExpressions() throws Exception {
    assertExpression(".",exchange);
    assertExpression("./in/body","<hello id='m123'>world!</hello>");
    assertExpression("in/body","<hello id='m123'>world!</hello>");
    assertExpression("in/headers",exchange.getIn().getHeaders());
    assertExpression("in/headers/@foo","abc");
  }
  @Test public void testJXPathPredicates() throws Exception {
    assertPredicate("in/headers/@foo = 'abc'");
    assertInvalidPredicate("in/headders/@foo = 'abc'");
  }
  @Test public void testExceptions() throws Exception {
    assertInvalidExpression(".@.");
    assertInvalidExpression("ins/body");
  }
  private void assertInvalidExpression(  String expression){
    try {
      assertExpression(expression,null);
      fail("Expected an ExpressionEvaluationException");
    }
 catch (    ExpressionEvaluationException e) {
    }
  }
  private void assertInvalidPredicate(  String predicate){
    try {
      assertPredicate(predicate);
      fail("Expected an ExpressionEvaluationException");
    }
 catch (    AssertionError e) {
    }
  }
  @Override protected String getLanguageName(){
    return "jxpath";
  }
}
