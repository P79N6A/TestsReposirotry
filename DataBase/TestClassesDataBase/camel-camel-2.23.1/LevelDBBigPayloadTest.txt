/** 
 * Test issue with leveldb file store growing to large
 */
@Ignore("Run this test manually") public class LevelDBBigPayloadTest extends CamelTestSupport {
  private static final long TIME=60 * 1000;
  private static final AtomicLong NUMBER=new AtomicLong();
  private LevelDBAggregationRepository repo;
  @Before @Override public void setUp() throws Exception {
    deleteDirectory("target/data");
    repo=new LevelDBAggregationRepository("repo1","target/data/leveldb.dat");
    super.setUp();
  }
  @Test public void testBigPayload() throws Exception {
    log.info("Running test for " + TIME + " millis.");
    Thread.sleep(60 * 1000);
    File file=new File("target/data/leveldb.dat");
    assertTrue(file + " should exists",file.exists());
    long size=file.length();
    log.info(file + " size is " + size);
    assertTrue(file + " should not be so big in size, was: " + size,size < 34 * 1024 * 1024);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("timer:foo").bean(BigPayload.class).aggregate(method(LevelDBBigPayloadTest.class,"number"),new UseLatestAggregationStrategy()).aggregationRepository(repo).completionSize(2).completionTimeout(5000).log("Aggregated key ${header.CamelAggregatedCorrelationKey}");
      }
    }
;
  }
  public static long number(){
    return NUMBER.incrementAndGet();
  }
}
