/** 
 * Unit test to verify that we can have URI options for external system (endpoint is lenient)
 */
public class JettyHttpProducerConnectionFailureTest extends BaseJettyTest {
  private String serverUri="jetty://http://localhost:{{port}}/myservice";
  @Test public void testHttpGetWithParamsViaURI() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(0);
    Thread.sleep(1000);
    try {
      template.requestBody("jetty://http://localhost:9999/myservice",null,Object.class);
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
      CamelExchangeException cause=assertIsInstanceOf(CamelExchangeException.class,e.getCause());
      assertIsInstanceOf(IOException.class,cause.getCause());
    }
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(serverUri).to("mock:result");
      }
    }
;
  }
}
