/** 
 * @version 
 */
public class JettyAsyncContinuationTimeoutTest extends BaseJettyTest {
  @Test public void testJettyAsyncTimeout() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    StopWatch watch=new StopWatch();
    try {
      template.requestBody("http://localhost:{{port}}/myservice",null,String.class);
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      log.info("Timeout hit and client got reply with failure status code");
      long taken=watch.stop();
      HttpOperationFailedException cause=assertIsInstanceOf(HttpOperationFailedException.class,e.getCause());
      assertEquals(504,cause.getStatusCode());
      assertTrue("Timeout should occur faster than " + taken,taken < 4500);
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.addComponent("async",new MyAsyncComponent());
        from("jetty:http://localhost:{{port}}/myservice?continuationTimeout=3000").to("async:bye:world?delay=6000").to("mock:result");
      }
    }
;
  }
}
