public class AggregationStrategyBeanAdapterWithHeadersTest extends ContextTestSupport {
  private MyBodyAppender appender=new MyBodyAppender();
  @Test public void testAggregate() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("ABC");
    getMockEndpoint("mock:result").expectedHeaderReceived("count",6);
    template.sendBodyAndHeader("direct:start","A","count",1);
    template.sendBodyAndHeader("direct:start","B","count",2);
    template.sendBodyAndHeader("direct:start","C","count",3);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(constant(true),AggregationStrategies.bean(appender,"appendWithHeaders")).completionSize(3).to("mock:result");
      }
    }
;
  }
public static final class MyBodyAppender {
    public String appendWithHeaders(    String existing,    Map<String,Integer> oldHeaders,    String next,    Map<String,Integer> newHeaders){
      if (next != null) {
        Integer count=oldHeaders.get("count") + newHeaders.get("count");
        oldHeaders.put("count",count);
        return existing + next;
      }
 else {
        return existing;
      }
    }
  }
}
