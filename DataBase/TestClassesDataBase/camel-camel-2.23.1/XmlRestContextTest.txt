@RunWith(Arquillian.class) @ImportResource({"imported-context-restContext.xml","imported-context-restContextRef.xml"}) public class XmlRestContextTest {
  @Produces private static DummyRestConsumerFactory rest=new DummyRestConsumerFactory();
  @Inject @Uri("seda:get-inbound") private ProducerTemplate inbound;
  @Inject @Uri("mock:outbound") private MockEndpoint outbound;
  @Inject @Named("rest") private List<RestDefinition> rests;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsResource(Paths.get("src/test/resources/camel-context-restContext.xml").toFile(),"imported-context-restContext.xml").addAsResource(Paths.get("src/test/resources/camel-context-restContextRef.xml").toFile(),"imported-context-restContextRef.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyRestContext(){
    assertThat("Rest context is incorrect!",rests,hasSize(1));
    RestDefinition rest=rests.get(0);
    assertThat("Rest path is incorrect!",rest.getPath(),is(equalTo("/inbound")));
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("Response to request");
    inbound.sendBody("request");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
}
