/** 
 * Unit test to verify that using option setNames and having multi remote directories the files are stored locally in the same directory layout.
 */
public class FromFtpSetNamesWithMultiDirectoriesTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/incoming?password=admin&binary=true&recursive=true&initialDelay=0&delay=100";
  }
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/ftpsetnamestest");
    super.setUp();
  }
  @Test public void testFtpRoute() throws Exception {
    NotifyBuilder notify=new NotifyBuilder(context).whenDone(2).create();
    MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
    resultEndpoint.expectedMessageCount(2);
    prepareFtpServer();
    context.startRoute("foo");
    assertMockEndpointsSatisfied();
    assertTrue(notify.matchesMockWaitTime());
    Exchange ex=resultEndpoint.getExchanges().get(0);
    byte[] bytes=ex.getIn().getBody(byte[].class);
    assertTrue("Logo size wrong",bytes.length > 10000);
    File file=new File("target/ftpsetnamestest/data1/logo1.jpeg");
    assertTrue("The binary file should exists",file.exists());
    assertTrue("Logo size wrong",file.length() > 10000);
    file=new File("target/ftpsetnamestest/data2/logo2.png");
    assertTrue(" The binary file should exists",file.exists());
    assertTrue("Logo size wrong",file.length() > 50000);
  }
  private void prepareFtpServer() throws Exception {
    String ftpUrl="ftp://admin@localhost:" + getPort() + "/incoming/data1/?password=admin&binary=true";
    Endpoint endpoint=context.getEndpoint(ftpUrl);
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setBody(IOConverter.toFile("src/test/data/ftpbinarytest/logo1.jpeg"));
    exchange.getIn().setHeader(Exchange.FILE_NAME,"logo1.jpeg");
    Producer producer=endpoint.createProducer();
    producer.start();
    producer.process(exchange);
    producer.stop();
    ftpUrl="ftp://admin@localhost:" + getPort() + "/incoming/data2/?password=admin&binary=true";
    endpoint=context.getEndpoint(ftpUrl);
    exchange=endpoint.createExchange();
    exchange.getIn().setBody(IOConverter.toFile("src/test/data/ftpbinarytest/logo2.png"));
    exchange.getIn().setHeader(Exchange.FILE_NAME,"logo2.png");
    producer=endpoint.createProducer();
    producer.start();
    producer.process(exchange);
    producer.stop();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(getFtpUrl()).routeId("foo").noAutoStartup().to("file:target/ftpsetnamestest","mock:result");
      }
    }
;
  }
}
