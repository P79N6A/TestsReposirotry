public class YqlComponentTest extends CamelTestSupport {
  @Rule public final ExpectedException thrown=ExpectedException.none();
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("yql://query?format=json").to("mock:result");
      }
    }
;
  }
  @Test public void testCreateProducer() throws Exception {
    final Endpoint yqlEndpoint=context.getEndpoint("yql://query?format=json");
    final Producer producer=yqlEndpoint.createProducer();
    assertNotNull(producer);
    assertTrue(producer instanceof YqlProducer);
  }
  @Test public void testConfigurationSetup(){
    final YqlEndpoint yqlEndpoint=(YqlEndpoint)context.getEndpoint("yql://query?format=xml&callback=yqlCallback&diagnostics=true" + "&debug=true&https=false&throwExceptionOnFailure=false&jsonCompat=new");
    final YqlConfiguration yqlConfiguration=yqlEndpoint.getConfiguration();
    assertNotNull(yqlConfiguration);
    assertEquals("query",yqlConfiguration.getQuery());
    assertEquals("xml",yqlConfiguration.getFormat());
    assertEquals("yqlCallback",yqlConfiguration.getCallback());
    assertTrue(yqlConfiguration.isDebug());
    assertTrue(yqlConfiguration.isDiagnostics());
    assertFalse(yqlConfiguration.isHttps());
    assertFalse(yqlConfiguration.isThrowExceptionOnFailure());
  }
  @Test public void testConfigurationSetupDefault(){
    final YqlEndpoint yqlEndpoint=(YqlEndpoint)context.getEndpoint("yql://query");
    final YqlConfiguration yqlConfiguration=yqlEndpoint.getConfiguration();
    assertNotNull(yqlConfiguration);
    assertEquals("query",yqlConfiguration.getQuery());
    assertEquals("json",yqlConfiguration.getFormat());
    assertNull(yqlConfiguration.getCallback());
    assertNull(yqlConfiguration.getCrossProduct());
    assertFalse(yqlConfiguration.isDiagnostics());
    assertFalse(yqlConfiguration.isDebug());
    assertNull(yqlConfiguration.getEnv());
    assertNull(yqlConfiguration.getJsonCompat());
    assertTrue(yqlConfiguration.isThrowExceptionOnFailure());
    assertTrue(yqlConfiguration.isHttps());
  }
  @Test public void testCreateConsumer() throws Exception {
    thrown.expect(UnsupportedOperationException.class);
    final Endpoint yqlEndpoint=context.getEndpoint("yql://query?format=json");
    yqlEndpoint.createConsumer(null);
  }
}
