@RunWith(MockitoJUnitRunner.class) public class MetricsEndpointTest {
  private static final String METRICS_NAME="metrics.name";
  @Mock private MetricRegistry registry;
  @Mock private Processor processor;
  @Mock private Exchange exchange;
  @Mock private Message in;
  private MetricsEndpoint endpoint;
  private InOrder inOrder;
  @Before public void setUp() throws Exception {
    endpoint=new MetricsEndpoint(null,null,registry,MetricsType.METER,METRICS_NAME){
      @Override public Producer createProducer() throws Exception {
        return null;
      }
      @Override protected String createEndpointUri(){
        return "not real endpoint";
      }
    }
;
    inOrder=Mockito.inOrder(registry,processor,exchange,in);
  }
  @After public void tearDown() throws Exception {
    inOrder.verifyNoMoreInteractions();
  }
  @Test public void testAbstractMetricsEndpoint() throws Exception {
    assertThat(endpoint.getMetricsName(),is(METRICS_NAME));
    assertThat(endpoint.getRegistry(),is(registry));
  }
  @Test(expected=RuntimeCamelException.class) public void testCreateConsumer() throws Exception {
    endpoint.createConsumer(processor);
  }
  @Test public void testIsSingleton() throws Exception {
    assertThat(endpoint.isSingleton(),is(true));
  }
  @Test public void testGetRegistry() throws Exception {
    assertThat(endpoint.getRegistry(),is(registry));
  }
  @Test public void testGetMetricsName() throws Exception {
    assertThat(endpoint.getMetricsName(),is(METRICS_NAME));
  }
}
