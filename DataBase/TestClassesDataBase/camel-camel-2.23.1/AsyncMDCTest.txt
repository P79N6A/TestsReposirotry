/** 
 * @version 
 */
public class AsyncMDCTest extends ContextTestSupport {
  @Test public void testMDC() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye Camel");
    template.sendBody("direct:a","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testThreeMessagesMDC() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye Camel","Bye Camel","Bye Camel");
    log.info("#1 message");
    template.sendBody("direct:a","Hello World");
    log.info("#2 message");
    template.sendBody("direct:a","Hello Camel");
    log.info("#3 message");
    template.sendBody("direct:a","Hi Camel");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.setUseMDCLogging(true);
        context.addComponent("async",new MyAsyncComponent());
        from("direct:a").routeId("route-a").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("route-a",MDC.get(MDC_ROUTE_ID));
            assertEquals(exchange.getExchangeId(),MDC.get(MDC_EXCHANGE_ID));
            assertEquals(exchange.getContext().getName(),MDC.get(MDC_CAMEL_CONTEXT_ID));
            assertEquals(exchange.getIn().getHeader(Exchange.BREADCRUMB_ID),MDC.get(MDC_BREADCRUMB_ID));
          }
        }
).to("log:before").to("async:bye:camel").to("log:after").to("direct:b");
        from("direct:b").routeId("route-b").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("route-b",MDC.get(MDC_ROUTE_ID));
            assertEquals(exchange.getExchangeId(),MDC.get(MDC_EXCHANGE_ID));
          }
        }
).to("log:bar").to("mock:result");
      }
    }
;
  }
}
