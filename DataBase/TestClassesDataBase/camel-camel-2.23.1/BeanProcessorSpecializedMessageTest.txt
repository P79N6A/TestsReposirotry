/** 
 * @version 
 */
public class BeanProcessorSpecializedMessageTest extends ContextTestSupport {
  @Test public void testBeanSpecializedMessage() throws Exception {
    MockEndpoint foo=getMockEndpoint("mock:foo");
    foo.expectedBodiesReceived("Hello World");
    foo.expectedHeaderReceived("foo",123);
    foo.message(0).predicate(new Predicate(){
      public boolean matches(      Exchange exchange){
        return exchange.getIn() instanceof MyMessage;
      }
    }
);
    MockEndpoint result=getMockEndpoint("mock:result");
    result.message(0).body().isNull();
    result.expectedHeaderReceived("foo",123);
    result.message(0).predicate(new Predicate(){
      public boolean matches(      Exchange exchange){
        return !(exchange.getIn() instanceof MyMessage);
      }
    }
);
    template.send("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        MyMessage my=new MyMessage(exchange.getContext());
        my.setBody("Hello World");
        my.setHeader("foo",123);
        exchange.setIn(my);
      }
    }
);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:foo").bean(MyBean.class,"empty").to("mock:result");
      }
    }
;
  }
public static class MyMessage extends DefaultMessage {
    public MyMessage(    CamelContext camelContext){
      super(camelContext);
    }
    @Override public MyMessage newInstance(){
      return new MyMessage(getCamelContext());
    }
  }
public static class MyBean {
    public static String empty(    String body){
      return null;
    }
  }
}
