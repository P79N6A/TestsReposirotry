public class CoAPPingTest extends CoAPTestSupport {
  @Produce(uri="direct:start") protected ProducerTemplate sender;
  @Test public void testCoAP() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(1);
    mock.expectedBodiesReceived(true);
    sender.sendBodyAndHeader("Hello",CoAPConstants.COAP_METHOD,CoAPConstants.METHOD_PING);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        fromF("coap://localhost:%d/TestResource",PORT).to("log:exch").transform(body().convertTo(Boolean.class)).to("log:exch");
        from("direct:start").toF("coap://localhost:%d/TestResource",PORT).to("mock:result");
      }
    }
;
  }
}
