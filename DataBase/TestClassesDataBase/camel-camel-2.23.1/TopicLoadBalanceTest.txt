public class TopicLoadBalanceTest extends ContextTestSupport {
  protected MockEndpoint x;
  protected MockEndpoint y;
  protected MockEndpoint z;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    x=getMockEndpoint("mock:x");
    y=getMockEndpoint("mock:y");
    z=getMockEndpoint("mock:z");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").loadBalance().topic().to("mock:x","mock:y","mock:z");
      }
    }
;
  }
  @Test public void testTopicManyMessages() throws Exception {
    x.expectedMessageCount(10);
    y.expectedMessageCount(10);
    z.expectedMessageCount(10);
    for (int i=0; i < 10; i++) {
      template.sendBody("direct:start","Hello World");
    }
    assertMockEndpointsSatisfied();
  }
  @Test public void testTopic() throws Exception {
    x.expectedBodiesReceived("Hello World");
    y.expectedBodiesReceived("Hello World");
    z.expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
}
