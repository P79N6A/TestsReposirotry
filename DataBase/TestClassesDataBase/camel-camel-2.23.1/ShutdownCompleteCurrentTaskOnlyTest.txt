/** 
 * @version 
 */
public class ShutdownCompleteCurrentTaskOnlyTest extends ContextTestSupport {
  private static String url="file:target/pending?initialDelay=0&delay=10";
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    deleteDirectory("target/pending");
    template.sendBodyAndHeader(url,"A",Exchange.FILE_NAME,"a.txt");
    template.sendBodyAndHeader(url,"B",Exchange.FILE_NAME,"b.txt");
    template.sendBodyAndHeader(url,"C",Exchange.FILE_NAME,"c.txt");
    template.sendBodyAndHeader(url,"D",Exchange.FILE_NAME,"d.txt");
    template.sendBodyAndHeader(url,"E",Exchange.FILE_NAME,"e.txt");
  }
  @Test public void testShutdownCompleteCurrentTaskOnly() throws Exception {
    context.getShutdownStrategy().setTimeout(20);
    MockEndpoint bar=getMockEndpoint("mock:bar");
    bar.expectedMinimumMessageCount(1);
    assertMockEndpointsSatisfied();
    context.stop();
    assertTrue("Should NOT complete all messages, was: " + bar.getReceivedCounter(),bar.getReceivedCounter() < 5);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(url).shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo");
        from("seda:foo").routeId("route2").to("mock:bar");
      }
    }
;
  }
}
