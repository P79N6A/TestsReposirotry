@Ignore("Cannot run on CI servers so run manually") public class MavenArtifactProviderTest extends Assert {
  @Test public void testAddComponent(){
    CamelCatalog camelCatalog=new DefaultCamelCatalog();
    MavenArtifactProvider provider=new DefaultMavenArtifactProvider();
    provider.setCacheDirectory("target/cache");
    int before=camelCatalog.findComponentNames().size();
    Set<String> names=provider.addArtifactToCatalog(camelCatalog,null,"org.apache.camel","dummy-component",camelCatalog.getCatalogVersion());
    assertTrue(names.contains("dummy"));
    int after=camelCatalog.findComponentNames().size();
    assertTrue("Should find 1 new component",after - before == 1);
  }
  @Test public void testAddConnector(){
    CamelCatalog camelCatalog=new DefaultCamelCatalog();
    CamelConnectorCatalog camelConnectorCatalog=new DefaultCamelConnectorCatalog();
    MavenArtifactProvider provider=new DefaultMavenArtifactProvider();
    provider.setCacheDirectory("target/cache");
    int before=camelCatalog.findComponentNames().size();
    List<ConnectorDto> list=camelConnectorCatalog.findConnector("foo",false);
    assertEquals(0,list.size());
    Set<String> names=provider.addArtifactToCatalog(camelCatalog,camelConnectorCatalog,"org.apache.camel","myfoo-connector",camelCatalog.getCatalogVersion());
    assertTrue(names.contains("MyFoo"));
    int after=camelCatalog.findComponentNames().size();
    assertTrue("Should find 1 new component",after - before == 1);
    list=camelConnectorCatalog.findConnector("foo",false);
    assertEquals(1,list.size());
    assertEquals("MyFoo",list.get(0).getName());
    assertTrue(camelCatalog.findComponentNames().contains("my-foo"));
  }
}
