public class RestUndertowProducerPatchTest extends BaseUndertowTest {
  @Test public void testUndertowProducerPatch() throws Exception {
    String body="Donald Duck";
    String id="123";
    MockEndpoint mock=getMockEndpoint("mock:input");
    mock.message(0).body().isEqualTo(body);
    mock.message(0).header("id").isEqualTo(id);
    fluentTemplate.withBody(body).withHeader("id",id).to("direct:start").send();
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("undertow").host("localhost").port(getPort());
        from("direct:start").to("rest:patch:users/{id}");
        rest("/users/").patch("{id}").to("mock:input");
      }
    }
;
  }
}
