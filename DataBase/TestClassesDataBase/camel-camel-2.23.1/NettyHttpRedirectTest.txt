public class NettyHttpRedirectTest extends BaseNettyTest {
  @Test public void testHttpRedirect() throws Exception {
    try {
      template.requestBody("netty4-http:http://localhost:{{port}}/test","Hello World",String.class);
      fail("Should have thrown an exception");
    }
 catch (    RuntimeCamelException e) {
      NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());
      assertEquals(301,cause.getStatusCode());
      assertEquals(true,cause.isRedirectError());
      assertEquals(true,cause.hasRedirectLocation());
      assertEquals("http://localhost:" + getPort() + "/newtest",cause.getRedirectLocation());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4-http:http://localhost:{{port}}/test").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,301);
            exchange.getOut().setHeader("location","http://localhost:" + getPort() + "/newtest");
          }
        }
);
      }
    }
;
  }
}
