@Ignore public class ChronicleEngineTestSupport extends CamelTestSupport {
  @Rule public final TestName name=new TestName();
  private final List<VanillaAssetTree> clients;
  private VanillaAssetTree serverAssetTree;
  private ServerEndpoint serverEndpoint;
  private WireType wireType;
  private String address;
  protected ChronicleEngineTestSupport(){
    this.clients=new LinkedList<>();
  }
  public TestName getName(){
    return name;
  }
  public VanillaAssetTree getServerAssetTree(){
    return serverAssetTree;
  }
  public ServerEndpoint getServerEndpoint(){
    return serverEndpoint;
  }
  public WireType getWireType(){
    return wireType;
  }
  public String getAddress(){
    return address;
  }
  public String[] getAddresses(){
    return new String[]{getAddress()};
  }
  public VanillaAssetTree client(){
    VanillaAssetTree client=new VanillaAssetTree().forRemoteAccess(getAddresses(),getWireType());
    clients.add(client);
    return client;
  }
  @Override protected void doPreSetup() throws Exception {
    address="localhost:" + AvailablePortFinder.getNextAvailable();
    wireType=WireType.TEXT;
    serverAssetTree=new VanillaAssetTree().forTesting();
    serverEndpoint=new ServerEndpoint(address,serverAssetTree);
  }
  @Override public void tearDown() throws Exception {
    super.tearDown();
    clients.forEach(Closeable::closeQuietly);
    Closeable.closeQuietly(serverAssetTree);
    Closeable.closeQuietly(serverEndpoint);
    TcpChannelHub.closeAllHubs();
    TCPRegistry.reset();
  }
}
