/** 
 * @version 
 */
public class ManagedStatisticsWithSplitterTest extends ManagementTestSupport {
  @Test public void testManageStatistics() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"route-a\"");
    Long completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
    assertEquals(0,completed.longValue());
    template.sendBody("direct:start","A,B,C");
    template.sendBody("direct:start","D,E");
    completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
    assertEquals(2,completed.longValue());
    ObjectName foo=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"foo\"");
    completed=(Long)mbeanServer.getAttribute(foo,"ExchangesCompleted");
    assertEquals(2,completed.longValue());
    ObjectName bar=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"bar\"");
    completed=(Long)mbeanServer.getAttribute(bar,"ExchangesCompleted");
    assertEquals(5,completed.longValue());
    ObjectName mock=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"mock\"");
    completed=(Long)mbeanServer.getAttribute(mock,"ExchangesCompleted");
    assertEquals(2,completed.longValue());
    on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"route-b\"");
    completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
    assertEquals(5,completed.longValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("route-a").to("log:foo").id("foo").split(body().tokenize(",")).to("direct:split").end().to("mock:result").id("mock");
        from("direct:split").routeId("route-b").to("log:bar").id("bar");
      }
    }
;
  }
}
