public class PackageScanFiltersTest extends Assert {
  @Test public void testAssignableToPackageScanFilter(){
    AssignableToPackageScanFilter filter=new AssignableToPackageScanFilter();
    assertFalse(filter.matches(ScanTargetOne.class));
    filter=new AssignableToPackageScanFilter(ScanTargetOne.class);
    validateFilter(filter,ScanTargetOne.class);
    filter=new AssignableToPackageScanFilter(ScanTargetOne.class);
    validateFilter(filter,ScanTargetTwo.class);
    Set<Class<?>> classes=new LinkedHashSet<>();
    classes.add(ScanTargetOne.class);
    classes.add(ScanTargetThree.class);
    filter=new AssignableToPackageScanFilter(classes);
    validateFilter(filter,ScanTargetOne.class);
    validateFilter(filter,ScanTargetTwo.class);
    validateFilter(filter,ScanTargetThree.class);
    assertTrue(filter.toString().contains("ScanTargetOne"));
    assertTrue(filter.toString().contains("ScanTargetThree"));
  }
  @Test public void testAnnotatedWithAnyPackageScanFilter(){
    Set<Class<? extends Annotation>> annotations=new LinkedHashSet<>();
    annotations.add(org.apache.camel.spring.scan.ScannableOne.class);
    annotations.add(org.apache.camel.spring.scan.ScannableTwo.class);
    AnnotatedWithAnyPackageScanFilter filter=new AnnotatedWithAnyPackageScanFilter(annotations);
    Class<ScanTargetOne> type=ScanTargetOne.class;
    validateFilter(filter,type);
    validateFilter(filter,ScanTargetThree.class);
    assertEquals("annotated with any @[[interface org.apache.camel.spring.scan.ScannableOne, interface org.apache.camel.spring.scan.ScannableTwo]]",filter.toString());
  }
  @Test public void testAnnotatedWithPackageScanFilter(){
    AnnotatedWithPackageScanFilter filter=new AnnotatedWithPackageScanFilter(org.apache.camel.spring.scan.ScannableOne.class);
    validateFilter(filter,ScanTargetOne.class);
    validateFilter(filter,ScanTargetTwo.class);
    filter=new AnnotatedWithPackageScanFilter(ScannableTwo.class);
    validateFilter(filter,ScanTargetThree.class);
    assertEquals("annotated with @ScannableTwo",filter.toString());
  }
  @Test public void testCompositePackageScanFilter(){
    PackageScanFilter one=new AnnotatedWithPackageScanFilter(org.apache.camel.spring.scan.ScannableOne.class);
    PackageScanFilter two=new AssignableToPackageScanFilter(ScanTargetOne.class);
    Set<PackageScanFilter> filters=CollectionHelper.createSetContaining(one,two);
    CompositePackageScanFilter filter=new CompositePackageScanFilter(filters);
    validateFilter(filter,ScanTargetOne.class);
    validateFilter(filter,ScanTargetTwo.class);
    filter=new CompositePackageScanFilter();
    filter.addFilter(one);
    filter.addFilter(two);
    validateFilter(filter,ScanTargetOne.class);
    validateFilter(filter,ScanTargetTwo.class);
  }
  @Test public void testInvertingFilter(){
    InvertingPackageScanFilter filter=new InvertingPackageScanFilter(new AnnotatedWithPackageScanFilter(ScannableOne.class));
    validateFilter(filter,ScanTargetThree.class);
    assertEquals("![annotated with @ScannableOne]",filter.toString());
  }
  private void validateFilter(  PackageScanFilter filter,  Class<?> type){
    assertTrue(filter.matches(type));
    assertFalse(new InvertingPackageScanFilter(filter).matches(type));
  }
}
