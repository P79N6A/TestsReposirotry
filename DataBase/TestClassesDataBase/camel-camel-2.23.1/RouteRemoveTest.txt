/** 
 * @version 
 */
public class RouteRemoveTest extends ContextTestSupport {
  @Test public void testStopRouteOnContext() throws Exception {
    assertEquals(ServiceStatus.Started,((DefaultRoute)context.getRoute("foo")).getStatus());
    assertEquals(ServiceStatus.Started,context.getRouteStatus("foo"));
    context.stopRoute("foo");
    assertEquals(ServiceStatus.Stopped,((DefaultRoute)context.getRoute("foo")).getStatus());
    assertEquals(ServiceStatus.Stopped,context.getRouteStatus("foo"));
  }
  @Test public void testRemove() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("A");
    template.sendBody("seda:foo","A");
    assertMockEndpointsSatisfied();
    assertEquals("Started",context.getRouteStatus("foo").name());
    assertEquals(1,context.getRoutes().size());
    boolean removed=context.removeRoute("foo");
    assertFalse(removed);
    assertEquals(1,context.getRoutes().size());
    assertEquals("Started",context.getRouteStatus("foo").name());
    context.stopRoute("foo");
    removed=context.removeRoute("foo");
    assertTrue(removed);
    assertEquals(0,context.getRoutes().size());
    assertNull(context.getRouteStatus("foo"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:foo").routeId("foo").to("log:foo").to("mock:result");
      }
    }
;
  }
}
