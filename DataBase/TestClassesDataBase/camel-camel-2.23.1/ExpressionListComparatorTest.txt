/** 
 * @version 
 */
public class ExpressionListComparatorTest extends ContextTestSupport {
private static class MyFooExpression implements Expression {
    @SuppressWarnings("unchecked") public <T>T evaluate(    Exchange exchange,    Class<T> type){
      return (T)"foo";
    }
  }
private static class MyBarExpression implements Expression {
    @SuppressWarnings("unchecked") public <T>T evaluate(    Exchange exchange,    Class<T> type){
      return (T)"bar";
    }
  }
  @Test public void testExpressionListComparator(){
    List<Expression> list=new ArrayList<>();
    list.add(new MyFooExpression());
    list.add(new MyBarExpression());
    ExpressionListComparator comp=new ExpressionListComparator(list);
    Exchange e1=new DefaultExchange(context);
    Exchange e2=new DefaultExchange(context);
    int out=comp.compare(e1,e2);
    assertEquals(0,out);
  }
}
