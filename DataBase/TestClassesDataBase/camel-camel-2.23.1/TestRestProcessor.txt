static class TestRestProcessor extends AbstractRestProcessor {
  RestClient client;
  TestRestProcessor() throws SalesforceException {
    this(endpoint(),mock(RestClient.class));
  }
  TestRestProcessor(  final SalesforceEndpoint endpoint,  final RestClient client){
    super(endpoint,client,Collections.emptyMap());
    this.client=client;
  }
  static SalesforceComponent component(){
    return new SalesforceComponent();
  }
  static SalesforceEndpointConfig configuration(){
    return new SalesforceEndpointConfig();
  }
  static SalesforceEndpoint endpoint(){
    return new SalesforceEndpoint(notUsed(),component(),configuration(),notUsed(),notUsed());
  }
  @Override protected InputStream getRequestStream(  final Exchange exchange) throws SalesforceException {
    return null;
  }
  @Override protected InputStream getRequestStream(  final Message in,  final Object object) throws SalesforceException {
    return null;
  }
  @Override protected void processRequest(  final Exchange exchange) throws SalesforceException {
  }
  @Override protected void processResponse(  final Exchange exchange,  final InputStream responseEntity,  final Map<String,String> headers,  final SalesforceException ex,  final AsyncCallback callback){
  }
}
