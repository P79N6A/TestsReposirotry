/** 
 * @version 
 */
public class HttpCharsetTest extends BaseHttpTest {
  private String charset="ISO-8859-1";
  private HttpServer localServer;
  @Before @Override public void setUp() throws Exception {
    localServer=ServerBootstrap.bootstrap().setHttpProcessor(getBasicHttpProcessor()).setConnectionReuseStrategy(getConnectionReuseStrategy()).setResponseFactory(getHttpResponseFactory()).setExpectationVerifier(getHttpExpectationVerifier()).setSslContext(getSSLContext()).registerHandler("/",new BasicValidationHandler("POST",null,getBody(),getExpectedContent())).create();
    localServer.start();
    super.setUp();
  }
  @After @Override public void tearDown() throws Exception {
    super.tearDown();
    if (localServer != null) {
      localServer.stop();
    }
  }
  @Test public void sendCharsetInExchangeProperty() throws Exception {
    Exchange exchange=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.setProperty(Exchange.CHARSET_NAME,charset);
        exchange.getIn().setBody(getBody());
      }
    }
);
    assertExchange(exchange);
  }
  @Test public void sendByteArrayCharsetInExchangeProperty() throws Exception {
    Exchange exchange=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.setProperty(Exchange.CHARSET_NAME,charset);
        exchange.getIn().setBody(getBody().getBytes(charset));
      }
    }
);
    assertExchange(exchange);
  }
  @Test public void sendInputStreamCharsetInExchangeProperty() throws Exception {
    Exchange exchange=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.setProperty(Exchange.CHARSET_NAME,charset);
        exchange.getIn().setBody(new ByteArrayInputStream(getBody().getBytes(charset)));
      }
    }
);
    assertExchange(exchange);
  }
  protected String getBody(){
    char lattinSmallLetterAWithDiaeresis=0x00E4;
    char lattinSmallLetterOWithDiaeresis=0x00F6;
    char lattinSmallLetterUWithDiaeresis=0x00FC;
    char lattinSmallLetterSharpS=0x00DF;
    return "hl=de&q=camel+" + lattinSmallLetterAWithDiaeresis + lattinSmallLetterOWithDiaeresis+ lattinSmallLetterUWithDiaeresis+ lattinSmallLetterSharpS;
  }
}
