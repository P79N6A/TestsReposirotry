/** 
 * @version 
 */
public class CustomDataSetTest extends ContextTestSupport {
  protected DataSet dataSet=new DataSetSupport(){
    Expression expression=new XPathBuilder("/message/@index").resultType(Long.class);
    @Override public void assertMessageExpected(    DataSetEndpoint dataSetEndpoint,    Exchange expected,    Exchange actual,    long index) throws Exception {
      Predicate predicate=PredicateBuilder.isEqualTo(expression,ExpressionBuilder.constantExpression(index));
      log.debug("evaluating predicate: " + predicate);
      PredicateAssertHelper.assertMatches(predicate,"Actual: " + actual,actual);
    }
    protected Object createMessageBody(    long messageIndex){
      return "<message index='" + messageIndex + "'>someBody"+ messageIndex+ "</message>";
    }
  }
;
  @Test public void testUsingCustomDataSet() throws Exception {
    assertMockEndpointsSatisfied();
  }
  @Override protected Context createJndiContext() throws Exception {
    Context context=super.createJndiContext();
    context.bind("foo",dataSet);
    return context;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("dataset:foo?initialDelay=0").to("direct:foo");
        from("direct:foo").to("dataset:foo?initialDelay=0");
      }
    }
;
  }
}
