/** 
 * @version 
 */
public class FileConsumerAutoCreateDirectoryTest extends ContextTestSupport {
  @Test public void testCreateDirectory() throws Exception {
    deleteDirectory("target/file/foo");
    Endpoint endpoint=context.getEndpoint("file://target/file/foo");
    Consumer consumer=endpoint.createConsumer(new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    consumer.start();
    consumer.stop();
    File dir=new File("target/file/foo");
    assertTrue("Directory should be created",dir.exists());
    assertTrue("Directory should be a directory",dir.isDirectory());
  }
  @Test public void testCreateAbsoluteDirectory() throws Exception {
    deleteDirectory("target/file/foo");
    String base=new File("").getAbsolutePath() + "/target/file/foo";
    Endpoint endpoint=context.getEndpoint("file://" + base);
    Consumer consumer=endpoint.createConsumer(new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    consumer.start();
    consumer.stop();
    File dir=new File(base);
    assertTrue("Directory should be created",dir.exists());
    assertTrue("Directory should be a directory",dir.isDirectory());
  }
  @Test public void testDoNotCreateDirectory() throws Exception {
    deleteDirectory("target/file/foo");
    Endpoint endpoint=context.getEndpoint("file://target/file/foo?autoCreate=false");
    Consumer consumer=endpoint.createConsumer(new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    consumer.start();
    consumer.stop();
    File dir=new File("target/file/foo");
    assertFalse("Directory should NOT be created",dir.exists());
  }
  @Test public void testAutoCreateDirectoryWithDot() throws Exception {
    deleteDirectory("target/file/foo.bar");
    Endpoint endpoint=context.getEndpoint("file://target/file/foo.bar?autoCreate=true");
    Consumer consumer=endpoint.createConsumer(new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    consumer.start();
    consumer.stop();
    File dir=new File("target/file/foo.bar");
    assertTrue("Directory should be created",dir.exists());
    assertTrue("Directory should be a directory",dir.isDirectory());
  }
  @Test public void testStartingDirectoryMustExistDirectory() throws Exception {
    deleteDirectory("target/file/foo");
    Endpoint endpoint=context.getEndpoint("file://target/file/foo?autoCreate=false&startingDirectoryMustExist=true");
    try {
      endpoint.createConsumer(new Processor(){
        public void process(        Exchange exchange) throws Exception {
        }
      }
);
      fail("Should have thrown an exception");
    }
 catch (    FileNotFoundException e) {
      assertTrue(e.getMessage().startsWith("Starting directory does not exist"));
    }
    File dir=new File("target/file/foo");
    assertFalse("Directory should NOT be created",dir.exists());
  }
}
