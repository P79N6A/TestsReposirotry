public class HttpJettyUrlRewriteTest extends BaseJettyTest {
  private int port1;
  private int port2;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myRewrite",new MyUrlRewrite());
    return jndi;
  }
  @Test public void testUrlRewrite() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    String response=template.requestBody("jetty:http://localhost:" + port1 + "/foo?phrase=Bye","Camel",String.class);
    assertEquals("Get a wrong response","Bye Camel",response);
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        port1=getPort();
        port2=getNextPort();
        from("jetty:http://localhost:" + port1 + "?matchOnUriPrefix=true").to("jetty:http://localhost:" + port2 + "?throwExceptionOnFailure=false&bridgeEndpoint=true&urlRewrite=#myRewrite");
        from("jetty://http://localhost:" + port2 + "/bar").transform().simple("${header.phrase} ${body}").to("mock:result");
      }
    }
;
  }
}
