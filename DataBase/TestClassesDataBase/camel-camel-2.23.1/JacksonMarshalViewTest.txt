public class JacksonMarshalViewTest extends CamelTestSupport {
  @Test public void testMarshalAndUnmarshalPojoWithView() throws Exception {
    TestPojoView in=new TestPojoView();
    MockEndpoint mock=getMockEndpoint("mock:reversePojoAgeView");
    mock.expectedMessageCount(1);
    mock.message(0).body().isInstanceOf(TestPojoView.class);
    mock.message(0).body().isEqualTo(in);
    Object marshalled=template.requestBody("direct:inPojoAgeView",in);
    String marshalledAsString=context.getTypeConverter().convertTo(String.class,marshalled);
    assertEquals("{\"age\":30,\"height\":190}",marshalledAsString);
    template.sendBody("direct:backPojoAgeView",marshalled);
    mock.assertIsSatisfied();
  }
  @Test public void testMarshalAndUnmarshalPojoWithAnotherView() throws Exception {
    TestPojoView in=new TestPojoView();
    MockEndpoint mock=getMockEndpoint("mock:reversePojoWeightView");
    mock.expectedMessageCount(1);
    mock.message(0).body().isInstanceOf(TestPojoView.class);
    mock.message(0).body().isEqualTo(in);
    Object marshalled=template.requestBody("direct:inPojoWeightView",in);
    String marshalledAsString=context.getTypeConverter().convertTo(String.class,marshalled);
    assertEquals("{\"height\":190,\"weight\":70}",marshalledAsString);
    template.sendBody("direct:backPojoWeightView",marshalled);
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:inPojoAgeView").marshal().json(TestPojoView.class,Views.Age.class);
        from("direct:backPojoAgeView").unmarshal().json(JsonLibrary.Jackson,TestPojoView.class).to("mock:reversePojoAgeView");
        from("direct:inPojoWeightView").marshal().json(TestPojoView.class,Views.Weight.class);
        from("direct:backPojoWeightView").unmarshal().json(JsonLibrary.Jackson,TestPojoView.class).to("mock:reversePojoWeightView");
      }
    }
;
  }
}
