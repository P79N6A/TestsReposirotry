public class FromRestGetEndPathTest extends FromRestGetTest {
  @Test public void testFromRestModel() throws Exception {
    assertEquals(getExpectedNumberOfRoutes(),context.getRoutes().size());
    assertEquals(2,context.getRestDefinitions().size());
    RestDefinition rest=context.getRestDefinitions().get(0);
    assertNotNull(rest);
    assertEquals("/say/hello",rest.getPath());
    assertEquals(1,rest.getVerbs().size());
    ToDefinition to=assertIsInstanceOf(ToDefinition.class,rest.getVerbs().get(0).getTo());
    assertEquals("direct:hello",to.getUri());
    rest=context.getRestDefinitions().get(1);
    assertNotNull(rest);
    assertEquals("/say/bye",rest.getPath());
    assertEquals(2,rest.getVerbs().size());
    assertEquals("application/json",rest.getVerbs().get(0).getConsumes());
    to=assertIsInstanceOf(ToDefinition.class,rest.getVerbs().get(0).getRoute().getOutputs().get(0));
    assertEquals("direct:bye",to.getUri());
    getMockEndpoint("mock:update").expectedMessageCount(1);
    template.sendBody("seda:post-say-bye","I was here");
    assertMockEndpointsSatisfied();
    String out=template.requestBody("seda:get-say-hello","Me",String.class);
    assertEquals("Hello World",out);
    String out2=template.requestBody("seda:get-say-bye","Me",String.class);
    assertEquals("Bye World",out2);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().host("localhost");
        rest("/say/hello").get().to("direct:hello");
        rest("/say/bye").get().consumes("application/json").route().to("direct:bye").endRest().post().to("mock:update");
        from("direct:hello").transform().constant("Hello World");
        from("direct:bye").transform().constant("Bye World");
      }
    }
;
  }
}
