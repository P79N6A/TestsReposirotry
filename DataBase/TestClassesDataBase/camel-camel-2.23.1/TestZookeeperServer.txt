public static class TestZookeeperServer {
  private static int count;
  private NIOServerCnxnFactory connectionFactory;
  private ZooKeeperServer zkServer;
  private File zookeeperBaseDir;
  public TestZookeeperServer(  int clientPort,  boolean clearServerData) throws Exception {
    zookeeperBaseDir=new File("./target/zookeeper" + count++);
    if (clearServerData) {
      cleanZookeeperDir();
    }
    zkServer=new ZooKeeperServer();
    File dataDir=new File(zookeeperBaseDir,"log");
    File snapDir=new File(zookeeperBaseDir,"data");
    FileTxnSnapLog ftxn=new FileTxnSnapLog(dataDir,snapDir);
    zkServer.setTxnLogFactory(ftxn);
    zkServer.setTickTime(1000);
    connectionFactory=new NIOServerCnxnFactory();
    connectionFactory.configure(new InetSocketAddress("localhost",clientPort),0);
    connectionFactory.startup(zkServer);
  }
  private void cleanZookeeperDir() throws Exception {
    File working=zookeeperBaseDir;
    deleteDir(working);
  }
  public void shutdown() throws Exception {
    connectionFactory.shutdown();
    connectionFactory.join();
    zkServer.shutdown();
    while (zkServer.isRunning()) {
      zkServer.shutdown();
      Thread.sleep(100);
    }
    cleanZookeeperDir();
  }
}
