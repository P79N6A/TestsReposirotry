/** 
 * @version 
 */
public class UnitOfWorkProducerTest extends ContextTestSupport {
  private static List<EventObject> events=new ArrayList<>();
  @Override protected CamelContext createCamelContext() throws Exception {
    DefaultCamelContext context=new DefaultCamelContext(createRegistry());
    context.getManagementStrategy().addEventNotifier(new EventNotifierSupport(){
      public void notify(      EventObject event) throws Exception {
        events.add(event);
      }
      public boolean isEnabled(      EventObject event){
        return event instanceof ExchangeCompletedEvent;
      }
      @Override protected void doStart() throws Exception {
      }
      @Override protected void doStop() throws Exception {
      }
    }
);
    return context;
  }
  @Override @After public void tearDown() throws Exception {
    events.clear();
    super.tearDown();
  }
  @Test public void testSedaBasedUnitOfWorkProducer() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("seda:foo","Hello World");
    assertMockEndpointsSatisfied();
    oneExchangeDone.matchesMockWaitTime();
    assertEquals(2,events.size());
  }
  @Test public void testDirectBasedUnitOfWorkProducer() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:bar","Hello World");
    assertMockEndpointsSatisfied();
    oneExchangeDone.matchesMockWaitTime();
    assertEquals(1,events.size());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:foo").to("mock:result");
        from("direct:bar").to("mock:result");
      }
    }
;
  }
}
