/** 
 */
public class SameDisruptorVmQueueSizeAndNoSizeTest extends ContextTestSupport {
  @Test public void testSameQueue() throws Exception {
    for (int i=0; i < 128; i++) {
      template.sendBody("disruptor-vm:foo?blockWhenFull=false","" + i);
    }
    try {
      template.sendBody("disruptor-vm:foo?blockWhenFull=false","Should be full now");
      fail("Should fail");
    }
 catch (    CamelExecutionException e) {
      IllegalStateException ise=assertIsInstanceOf(IllegalStateException.class,e.getCause());
      assertEquals("Disruptors ringbuffer was full",ise.getMessage());
    }
  }
  @Test public void testSameQueueDifferentSize() throws Exception {
    try {
      template.sendBody("disruptor-vm:foo?size=256","Should fail");
      fail("Should fail");
    }
 catch (    ResolveEndpointFailedException e) {
      IllegalArgumentException ise=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Cannot use existing queue disruptor-vm://foo as the existing queue size 128 does not match given queue size 256",ise.getMessage());
    }
  }
  @Test public void testSameQueueDifferentSizeBar() throws Exception {
    try {
      template.sendBody("disruptor-vm:bar?size=256","Should fail");
      fail("Should fail");
    }
 catch (    ResolveEndpointFailedException e) {
      IllegalArgumentException ise=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Cannot use existing queue disruptor-vm://bar as the existing queue size " + 1024 + " does not match given queue size 256",ise.getMessage());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("disruptor-vm:foo?size=128&blockWhenFull=false").routeId("foo").noAutoStartup().to("mock:foo");
        from("disruptor-vm:bar").routeId("bar").noAutoStartup().to("mock:bar");
      }
    }
;
  }
}
