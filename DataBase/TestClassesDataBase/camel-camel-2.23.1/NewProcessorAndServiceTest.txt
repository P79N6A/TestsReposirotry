/** 
 * @version 
 */
public class NewProcessorAndServiceTest extends ContextTestSupport {
  private MyProcessor myProcessor;
  @Test public void testNewProcessorAndService() throws Exception {
    String out=template.requestBody("direct:start","Hello World",String.class);
    assertEquals("Bye World",out);
    assertTrue("MyProcessor should be started",myProcessor.isStarted());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").process(myProcessor=new MyProcessor());
      }
    }
;
  }
private static class MyProcessor implements Processor, Service {
    private boolean started;
    public void process(    Exchange exchange) throws Exception {
      exchange.getOut().setBody("Bye World");
    }
    public void start() throws Exception {
      started=true;
    }
    public void stop() throws Exception {
      started=false;
    }
    public boolean isStarted(){
      return started;
    }
  }
}
