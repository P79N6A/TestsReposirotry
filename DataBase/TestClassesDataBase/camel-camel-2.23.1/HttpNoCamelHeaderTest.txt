public class HttpNoCamelHeaderTest extends BaseHttpTest {
  private HttpServer localServer;
  @Before @Override public void setUp() throws Exception {
    localServer=ServerBootstrap.bootstrap().setHttpProcessor(getBasicHttpProcessor()).setConnectionReuseStrategy(getConnectionReuseStrategy()).setResponseFactory(getHttpResponseFactory()).setExpectationVerifier(getHttpExpectationVerifier()).setSslContext(getSSLContext()).registerHandler("/hello",new HttpRequestHandler(){
      @Override public void handle(      HttpRequest request,      HttpResponse response,      HttpContext context) throws HttpException, IOException {
        response.setStatusCode(HttpStatus.SC_OK);
        Object header=request.getFirstHeader(Exchange.FILE_NAME);
        assertNull("There should be no Camel header",header);
        for (        Header h : request.getAllHeaders()) {
          if (h.getName().startsWith("Camel") || h.getName().startsWith("org.apache.camel")) {
            assertNull("There should be no Camel header",h);
          }
        }
        response.setHeader("MyApp","dude");
        response.setHeader(Exchange.TO_ENDPOINT,"foo");
      }
    }
).create();
    localServer.start();
    super.setUp();
  }
  @After @Override public void tearDown() throws Exception {
    super.tearDown();
    if (localServer != null) {
      localServer.stop();
    }
  }
  @Test public void testNoCamelHeader() throws Exception {
    Exchange out=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/hello",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.CONTENT_TYPE,"text/plain");
        exchange.getIn().setHeader(Exchange.FILE_NAME,"hello.txt");
        exchange.getIn().setBody("This is content");
      }
    }
);
    assertNotNull(out);
    assertFalse("Should not fail",out.isFailed());
    assertEquals("dude",out.getOut().getHeader("MyApp"));
    assertNull(out.getOut().getHeader(Exchange.TO_ENDPOINT));
  }
}
