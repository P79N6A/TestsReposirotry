@RunWith(Parameterized.class) public class SnakeYAMLTest extends CamelTestSupport {
  private final SnakeYAMLDataFormat format;
  private final Object body;
  private final String expected;
  public SnakeYAMLTest(  SnakeYAMLDataFormat format,  Object body,  String expected){
    this.format=format;
    this.body=body;
    this.expected=expected;
  }
  @Parameterized.Parameters public static Collection yamlCases(){
    return Arrays.asList(new Object[][]{{createDataFormat(null),createTestMap(),"{name: Camel}"},{createDataFormat(TestPojo.class),createTestPojo(),"!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}"},{createPrettyFlowDataFormat(TestPojo.class,true),createTestPojo(),"!!org.apache.camel.component.snakeyaml.model.TestPojo {\n  name: Camel\n}"},{createClassTagDataFormat(TestPojo.class,new Tag("!tpojo")),createTestPojo(),"!tpojo {name: Camel}"}});
  }
  @Test public void testMarshalAndUnmarshal() throws Exception {
    SnakeYAMLTestHelper.marshalAndUnmarshal(context(),body,"mock:reverse","direct:in","direct:back",expected);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:in").marshal(format);
        from("direct:back").unmarshal(format).to("mock:reverse");
      }
    }
;
  }
}
