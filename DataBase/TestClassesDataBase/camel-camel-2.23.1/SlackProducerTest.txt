public class SlackProducerTest extends CamelTestSupport {
  @EndpointInject(uri="mock:errors") MockEndpoint errors;
  @EndpointInject(uri="direct:test") DirectEndpoint test;
  @EndpointInject(uri="direct:error") DirectEndpoint error;
  @Test public void testSlackMessage() throws Exception {
    errors.expectedMessageCount(0);
    template.sendBody(test,"Hello from Camel!");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSlackError() throws Exception {
    errors.expectedMessageCount(1);
    template.sendBody(error,"Error from Camel!");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure(){
        SlackComponent slack=new SlackComponent();
        slack.setWebhookUrl(System.getProperty("SLACK_HOOK","https://hooks.slack.com/services/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"));
        context.addComponent("slack",slack);
        onException(Exception.class).handled(true).to(errors);
        final String slacUser=System.getProperty("SLACK_USER","CamelTest");
        from(test).to(String.format("slack:#general?iconEmoji=:camel:&username=%s",slacUser));
        from(error).to(String.format("slack:#badchannel?iconEmoji=:camel:&username=%s",slack));
      }
    }
;
  }
}
