public class SqsEndpointUseExistingQueueTest extends CamelTestSupport {
  @EndpointInject(uri="mock:result") private MockEndpoint mock;
  @Test public void defaultsToDisabled() throws Exception {
    this.mock.expectedMessageCount(1);
    assertMockEndpointsSatisfied();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    AmazonSQSClientMock clientMock=new SqsEndpointUseExistingQueueTest.AmazonSQSClientMock();
    registry.bind("amazonSQSClient",clientMock);
    return registry;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient").to("mock:result");
      }
    }
;
  }
static class AmazonSQSClientMock extends AmazonSQSClient {
    AmazonSQSClientMock(){
      super(new BasicAWSCredentials("myAccessKey","mySecretKey"));
    }
    @Override public ListQueuesResult listQueues() throws AmazonServiceException, AmazonClientException {
      ListQueuesResult result=new ListQueuesResult();
      result.getQueueUrls().add("http://queue.amazonaws.com/0815/Foo");
      result.getQueueUrls().add("http://queue.amazonaws.com/0815/MyQueue");
      result.getQueueUrls().add("http://queue.amazonaws.com/0815/Bar");
      return result;
    }
    @Override public CreateQueueResult createQueue(    CreateQueueRequest createQueueRequest) throws AmazonServiceException, AmazonClientException {
      throw new AmazonServiceException("forced exception for test if this method is called");
    }
    @Override public SetQueueAttributesResult setQueueAttributes(    SetQueueAttributesRequest setQueueAttributesRequest) throws AmazonServiceException, AmazonClientException {
      return new SetQueueAttributesResult();
    }
    @Override public ReceiveMessageResult receiveMessage(    ReceiveMessageRequest receiveMessageRequest) throws AmazonServiceException, AmazonClientException {
      ReceiveMessageResult result=new ReceiveMessageResult();
      List<Message> resultMessages=result.getMessages();
      Message message=new Message();
      resultMessages.add(message);
      return result;
    }
  }
}
