public class OnCompletionShutdownProcessorTest extends ContextTestSupport {
  private MyProcessor processor=new MyProcessor();
  @Test public void testSynchronizeComplete() throws Exception {
    assertEquals("Started",processor.getStatus().name());
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    context.stop();
    assertEquals("Stopped",processor.getStatus().name());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onCompletion().process(processor);
        from("direct:start").to("mock:result");
      }
    }
;
  }
public static class MyProcessor extends ServiceSupport implements Processor {
    public MyProcessor(){
    }
    public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("Bye World");
    }
    protected void doStart() throws Exception {
    }
    protected void doStop() throws Exception {
    }
  }
}
