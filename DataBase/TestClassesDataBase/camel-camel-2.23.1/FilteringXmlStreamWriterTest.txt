@RunWith(MockitoJUnitRunner.class) public class FilteringXmlStreamWriterTest {
  private FilteringXmlStreamWriter filteringXmlStreamWriter;
  @Mock private NonXmlCharFilterer nonXmlCharFiltererMock;
  @Mock private XMLStreamWriter xmlStreamWriterMock;
  @Before public void setUp(){
    filteringXmlStreamWriter=new FilteringXmlStreamWriter(xmlStreamWriterMock);
    filteringXmlStreamWriter.nonXmlCharFilterer=nonXmlCharFiltererMock;
    when(nonXmlCharFiltererMock.filter("value")).thenReturn("filteredValue");
  }
  @Test public void testWriteAttribute2Args() throws XMLStreamException {
    filteringXmlStreamWriter.writeAttribute("localName","value");
    verify(xmlStreamWriterMock).writeAttribute("localName","filteredValue");
  }
  @Test public void testWriteAttribute3Args() throws XMLStreamException {
    filteringXmlStreamWriter.writeAttribute("namespaceURI","localName","value");
    verify(xmlStreamWriterMock).writeAttribute("namespaceURI","localName","filteredValue");
  }
  @Test public void testWriteAttribute4Args() throws XMLStreamException {
    filteringXmlStreamWriter.writeAttribute("prefix","namespaceURI","localName","value");
    verify(xmlStreamWriterMock).writeAttribute("prefix","namespaceURI","localName","filteredValue");
  }
  @Test public void testWriteCData() throws XMLStreamException {
    filteringXmlStreamWriter.writeCData("value");
    verify(xmlStreamWriterMock).writeCData("filteredValue");
  }
  @Test public void testWriteCharacters1Arg() throws XMLStreamException {
    filteringXmlStreamWriter.writeCharacters("value");
    verify(xmlStreamWriterMock).writeCharacters("filteredValue");
  }
  @Test public void testWriteComment() throws XMLStreamException {
    filteringXmlStreamWriter.writeComment("value");
    verify(xmlStreamWriterMock).writeComment("filteredValue");
  }
  @Test public void testWriteCharacters3Args() throws XMLStreamException {
    char[] buffer=new char[]{'a','b','c'};
    filteringXmlStreamWriter.writeCharacters(buffer,2,3);
    verify(nonXmlCharFiltererMock).filter(same(buffer),eq(2),eq(3));
    verify(xmlStreamWriterMock).writeCharacters(same(buffer),eq(2),eq(3));
  }
}
