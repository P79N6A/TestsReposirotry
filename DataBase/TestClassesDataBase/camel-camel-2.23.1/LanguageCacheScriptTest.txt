/** 
 * @version 
 */
public class LanguageCacheScriptTest extends ContextTestSupport {
  private LanguageEndpoint endpoint;
  @Test public void testCache() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("World","Camel");
    template.sendBody("direct:start","World");
    Expression first=endpoint.getExpression();
    template.sendBody("direct:start","Camel");
    Expression second=endpoint.getExpression();
    assertMockEndpointsSatisfied();
    assertSame(first,second);
    assertNotNull(first);
    assertNotNull(second);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        String script=URLEncoder.encode("Hello ${body}","UTF-8");
        endpoint=context.getEndpoint("language:simple:" + script + "?transform=false&cacheScript=true",LanguageEndpoint.class);
        from("direct:start").to(endpoint).to("mock:result");
      }
    }
;
  }
}
