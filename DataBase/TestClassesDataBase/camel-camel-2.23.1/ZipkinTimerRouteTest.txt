public class ZipkinTimerRouteTest extends CamelTestSupport {
  private ZipkinTracer zipkin;
  protected void setSpanReporter(  ZipkinTracer zipkin){
    zipkin.setSpanReporter(Reporter.NOOP);
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    zipkin=new ZipkinTracer();
    zipkin.addClientServiceMapping("seda:timer","timer");
    zipkin.addServerServiceMapping("seda:timer","timer");
    setSpanReporter(zipkin);
    zipkin.init(context);
    return context;
  }
  @Test public void testZipkinRoute() throws Exception {
    NotifyBuilder notify=new NotifyBuilder(context).from("seda:timer").whenDone(1).create();
    template.sendBody("direct:start","Hello Timer");
    assertTrue(notify.matches(30,TimeUnit.SECONDS));
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to(ExchangePattern.InOut,"seda:timer");
        from("seda:timer").routeId("timer").log("routing at ${routeId}").delay(simple("${random(1000,2000)}"));
      }
    }
;
  }
}
