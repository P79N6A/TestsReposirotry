/** 
 * @version 
 */
public class SqlProducerNullBodyTest extends CamelTestSupport {
  private EmbeddedDatabase db;
  @Before public void setUp() throws Exception {
    db=new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/createAndPopulateDatabase.sql").build();
    super.setUp();
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    db.shutdown();
  }
  @Test public void testNullBody() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start",null);
    mock.assertIsSatisfied();
    List<?> received=assertIsInstanceOf(List.class,mock.getReceivedExchanges().get(0).getIn().getBody());
    assertEquals(2,received.size());
    Map<?,?> row=assertIsInstanceOf(Map.class,received.get(0));
    assertEquals("Camel",row.get("PROJECT"));
    row=assertIsInstanceOf(Map.class,received.get(1));
    assertEquals("AMQ",row.get("PROJECT"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        getContext().getComponent("sql",SqlComponent.class).setDataSource(db);
        from("direct:start").to("sql:select * from projects where license = 'ASF' order by id").to("mock:result");
      }
    }
;
  }
}
