/** 
 * Default error handler test
 * @version 
 */
public class DefaultErrorHandlerOnExceptionTest extends ContextTestSupport {
  @Test public void testOk() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testWithError() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:boom");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Kabom");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(IllegalArgumentException.class).handled(true).to("log:boom").to("mock:boom");
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            if ("Kabom".equals(body)) {
              throw new IllegalArgumentException("Boom");
            }
            exchange.getIn().setBody("Bye World");
          }
        }
).to("mock:result");
      }
    }
;
  }
}
