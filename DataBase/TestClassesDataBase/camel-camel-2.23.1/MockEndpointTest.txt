@RunWith(Arquillian.class) public class MockEndpointTest {
  @Inject private DefaultCamelContextBean defaultCamelContext;
  @Inject @Uri("direct:start") private ProducerTemplate defaultInbound;
  @Inject @Mock("mock:result") private MockEndpoint defaultOutbound;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClasses(DefaultCamelContextBean.class,MockAnnotationRoute.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyCamelContext(){
    assertThat(defaultCamelContext.getName(),is(equalTo("camel-cdi")));
    assertThat(defaultOutbound.getCamelContext().getName(),is(equalTo(defaultCamelContext.getName())));
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    defaultOutbound.expectedMessageCount(1);
    defaultOutbound.expectedBodiesReceived("test");
    defaultOutbound.expectedHeaderReceived("foo","bar");
    defaultInbound.sendBodyAndHeader("test","foo","bar");
    assertIsSatisfied(2L,TimeUnit.SECONDS,defaultOutbound);
  }
}
