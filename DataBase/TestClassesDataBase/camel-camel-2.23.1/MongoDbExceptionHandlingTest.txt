public class MongoDbExceptionHandlingTest extends AbstractMongoDbTest {
  @Test public void testInduceParseException() throws Exception {
    assertEquals(0,testCollection.count());
    pumpDataIntoTestCollection();
    try {
      template.requestBody("direct:findOneByQuery","{\"scientist\": \"Einstein}");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
      extractAndAssertCamelMongoDbException(e,null);
    }
  }
  @Test public void testInduceParseAndThenOkException() throws Exception {
    assertEquals(0,testCollection.count());
    pumpDataIntoTestCollection();
    try {
      template.requestBody("direct:findOneByQuery","{\"scientist\": \"Einstein}");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
      extractAndAssertCamelMongoDbException(e,null);
    }
    DBObject out=template.requestBody("direct:findOneByQuery","{\"scientist\": \"Einstein\"}",DBObject.class);
    assertNotNull(out);
    assertEquals("Einstein",out.get("scientist"));
  }
  @Test public void testErroneousDynamicOperation() throws Exception {
    assertEquals(0,testCollection.count());
    pumpDataIntoTestCollection();
    try {
      template.requestBodyAndHeader("direct:findOneByQuery","{\"scientist\": \"Einstein\"}",MongoDbConstants.OPERATION_HEADER,"dummyOp");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
      extractAndAssertCamelMongoDbException(e,"Operation specified on header is not supported. Value: dummyOp");
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:findAll").to("mongodb:myDb?database={{mongodb.testDb}}&collection={{mongodb.testCollection}}&operation=findAll&dynamicity=true").to("mock:resultFindAll");
        from("direct:findOneByQuery").to("mongodb:myDb?database={{mongodb.testDb}}&collection={{mongodb.testCollection}}&operation=findOneByQuery&dynamicity=true").to("mock:resultFindOneByQuery");
        from("direct:findById").to("mongodb:myDb?database={{mongodb.testDb}}&collection={{mongodb.testCollection}}&operation=findById&dynamicity=true").to("mock:resultFindById");
      }
    }
;
  }
}
