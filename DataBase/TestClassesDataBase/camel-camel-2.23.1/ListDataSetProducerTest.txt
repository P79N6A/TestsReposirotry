/** 
 * @version 
 */
public class ListDataSetProducerTest extends ContextTestSupport {
  protected ListDataSet dataSet=new ListDataSet();
  final String sourceUri="direct://source";
  final String dataSetName="foo";
  final String dataSetUri="dataset://" + dataSetName;
  @Test public void testDefaultListDataSet() throws Exception {
    template.sendBodyAndHeader(dataSetUri,"<hello>world!</hello>",Exchange.DATASET_INDEX,0);
    assertMockEndpointsSatisfied();
  }
  @Test public void testDefaultListDataSetWithSizeGreaterThanListSize() throws Exception {
    int messageCount=10;
    getMockEndpoint(dataSetUri).expectedMessageCount(messageCount);
    dataSet.setSize(messageCount);
    long size=dataSet.getSize();
    for (long i=0; i < size; i++) {
      template.sendBodyAndHeader(sourceUri,"<hello>world!</hello>",Exchange.DATASET_INDEX,i);
    }
    assertMockEndpointsSatisfied();
  }
  @Override @Before public void setUp() throws Exception {
    List<Object> bodies=new LinkedList<>();
    bodies.add("<hello>world!</hello>");
    dataSet=new ListDataSet(bodies);
    super.setUp();
  }
  @Override protected Context createJndiContext() throws Exception {
    Context context=super.createJndiContext();
    context.bind(dataSetName,dataSet);
    return context;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(sourceUri).to(dataSetUri);
      }
    }
;
  }
}
