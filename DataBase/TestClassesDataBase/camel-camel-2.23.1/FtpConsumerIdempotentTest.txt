/** 
 * Unit test for the idempotent=true option.
 */
public class FtpConsumerIdempotentTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/idempotent?password=admin&binary=false&idempotent=true&delete=true&delay=1000";
  }
  @Test public void testIdempotent() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    mock.expectedMessageCount(1);
    sendFile(getFtpUrl(),"Hello World","report.txt");
    assertMockEndpointsSatisfied();
    Thread.sleep(100);
    mock.reset();
    mock.expectedMessageCount(0);
    sendFile(getFtpUrl(),"Hello World","report.txt");
    Thread.sleep(2000);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(getFtpUrl()).to("mock:result");
      }
    }
;
  }
}
