public class SendToUoWTest extends RxTestSupport {
  private MyOnCompletion onCompletion=new MyOnCompletion();
  @Test public void testSendObservableToEndpoint() throws Exception {
    Order[] expectedBodies={new Order("o1",1.10),new Order("o2",2.20),new Order("o3",3.30)};
    Observable<Order> someObservable=Observable.from(expectedBodies);
    final MockEndpoint mockEndpoint=camelContext.getEndpoint("mock:results",MockEndpoint.class);
    mockEndpoint.expectedBodiesReceived((Object[])expectedBodies);
    mockEndpoint.whenAnyExchangeReceived(exchange -> exchange.addOnCompletion(onCompletion));
    reactiveCamel.sendTo(someObservable,"mock:results");
    mockEndpoint.assertIsSatisfied();
    Assert.assertEquals(3,onCompletion.getDone());
  }
private static class MyOnCompletion extends SynchronizationAdapter {
    private int done;
    @Override public void onComplete(    Exchange exchange){
      done++;
    }
    public int getDone(){
      return done;
    }
  }
}
