private abstract static class AbstractTestProcessor implements Processor {
  public void processGetCustomer(  Exchange exchange) throws Exception {
    Message inMessage=exchange.getIn();
    String httpMethod=inMessage.getHeader(Exchange.HTTP_METHOD,String.class);
    assertEquals("Get a wrong http method","GET",httpMethod);
    String path=inMessage.getHeader(Exchange.HTTP_PATH,String.class);
    String id=inMessage.getBody(String.class);
    if ("/customerservice/customers/126".equals(path)) {
      Customer customer=new Customer();
      customer.setId(Long.parseLong(id));
      customer.setName("Willem");
      exchange.getOut().setBody(customer);
    }
 else {
      if ("/customerservice/customers/400".equals(path)) {
        org.apache.cxf.message.Message cxfMessage=inMessage.getHeader(CxfConstants.CAMEL_CXF_MESSAGE,org.apache.cxf.message.Message.class);
        ServletRequest request=(ServletRequest)cxfMessage.get("HTTP.REQUEST");
        assertNotNull("The request object should not be null",request);
        Response r=Response.status(200).entity("The remoteAddress is 127.0.0.1").build();
        exchange.getOut().setBody(r);
        return;
      }
      if ("/customerservice/customers/123".equals(path)) {
        Response r=Response.status(200).entity("customer response back!").build();
        exchange.getOut().setBody(r);
        return;
      }
      if ("/customerservice/customers/456".equals(path)) {
        Response r=Response.status(404).entity("Can't found the customer with uri " + path).header("Content-Type","text/plain").build();
        throw new WebApplicationException(r);
      }
 else       if ("/customerservice/customers/234".equals(path)) {
        Response r=Response.status(404).entity("Can't found the customer with uri " + path).header("Content-Type","text/plain").build();
        exchange.getOut().setBody(r);
        exchange.getOut().setFault(true);
      }
 else       if ("/customerservice/customers/789".equals(path)) {
        exchange.getOut().setBody("Can't found the customer with uri " + path);
        exchange.getOut().setHeader(Exchange.CONTENT_TYPE,"text/plain");
        exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,"404");
        exchange.getOut().setFault(true);
      }
 else {
        throw new RuntimeCamelException("Can't found the customer with uri " + path);
      }
    }
  }
}
