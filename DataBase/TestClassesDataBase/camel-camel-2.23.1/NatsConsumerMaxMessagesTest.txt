public class NatsConsumerMaxMessagesTest extends NatsTestSupport {
  @EndpointInject(uri="mock:result") protected MockEndpoint mockResultEndpoint;
  @Test public void testMaxConsumer() throws InterruptedException, IOException {
    mockResultEndpoint.setExpectedMessageCount(5);
    template.sendBody("direct:send","test");
    template.sendBody("direct:send","test1");
    template.sendBody("direct:send","test2");
    template.sendBody("direct:send","test3");
    template.sendBody("direct:send","test4");
    template.sendBody("direct:send","test5");
    template.sendBody("direct:send","test6");
    template.sendBody("direct:send","test7");
    template.sendBody("direct:send","test8");
    template.sendBody("direct:send","test9");
    template.sendBody("direct:send","test10");
    mockResultEndpoint.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:send").to("nats://" + getNatsUrl() + "?topic=test");
        from("nats://" + getNatsUrl() + "?topic=test&maxMessages=5").to(mockResultEndpoint);
      }
    }
;
  }
}
