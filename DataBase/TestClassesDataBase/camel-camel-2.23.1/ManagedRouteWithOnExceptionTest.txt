/** 
 * @version 
 */
public class ManagedRouteWithOnExceptionTest extends ManagementTestSupport {
  @Override @Before public void setUp() throws Exception {
    System.setProperty(JmxSystemPropertyKeys.CREATE_CONNECTOR,"true");
    super.setUp();
  }
  @Override @After public void tearDown() throws Exception {
    System.clearProperty(JmxSystemPropertyKeys.CREATE_CONNECTOR);
    super.tearDown();
  }
  @Test public void testShouldBeInstrumentedOk() throws Exception {
    getMockEndpoint("mock:error").expectedMessageCount(0);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testShouldBeInstrumentedKabom() throws Exception {
    getMockEndpoint("mock:error").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Kabom");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
    }
    assertMockEndpointsSatisfied();
  }
  @Test public void testShouldBeInstrumentedOkAndKabom() throws Exception {
    getMockEndpoint("mock:error").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    try {
      template.sendBody("direct:start","Kabom");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").onException(Exception.class).to("mock:error").end().delay(100).choice().when(body().isEqualTo("Kabom")).throwException(new IllegalArgumentException("Kabom")).otherwise().to("mock:result").end();
      }
    }
;
  }
}
