@DirtiesContext @RunWith(SpringRunner.class) @EnableAutoConfiguration @SpringBootTest public class CamelEventNotifierTest extends Assert {
@Configuration static class Config {
    @Bean RouteBuilder routeBuilder(){
      return new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:start").to("mock:result");
        }
      }
;
    }
    @Bean public EventNotifier myEventNotifier(){
      return new MyEventNotifier();
    }
  }
  @Autowired CamelContext camelContext;
  @Autowired ProducerTemplate producerTemplate;
  @Test public void testEventNotifier() throws InterruptedException {
    MockEndpoint mockEndpoint=camelContext.getEndpoint("mock:result",MockEndpoint.class);
    mockEndpoint.expectedMessageCount(1);
    producerTemplate.sendBody("direct:start","Hello World");
    mockEndpoint.assertIsSatisfied();
    MyEventNotifier notifier=(MyEventNotifier)camelContext.getManagementStrategy().getEventNotifiers().get(0);
    assertNotNull(notifier);
    assertTrue(notifier.getCount() > 0);
  }
public static class MyEventNotifier extends EventNotifierSupport {
    private final AtomicInteger counter=new AtomicInteger();
    @Override public void notify(    EventObject event) throws Exception {
      counter.incrementAndGet();
    }
    @Override public boolean isEnabled(    EventObject event){
      return true;
    }
    public int getCount(){
      return counter.get();
    }
  }
}
