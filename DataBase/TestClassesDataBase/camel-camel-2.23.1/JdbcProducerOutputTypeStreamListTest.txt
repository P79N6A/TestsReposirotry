public class JdbcProducerOutputTypeStreamListTest extends AbstractJdbcTestSupport {
  private static final String QUERY="select * from customer";
  @EndpointInject(uri="mock:result") private MockEndpoint result;
  @Test public void shouldReturnAnIterator() throws Exception {
    result.expectedMessageCount(1);
    template.sendBody("direct:start",QUERY);
    result.assertIsSatisfied();
    assertThat(resultBodyAt(0),instanceOf(Iterator.class));
  }
  @Test public void shouldStreamResultRows() throws Exception {
    result.expectedMessageCount(3);
    template.sendBody("direct:withSplit",QUERY);
    result.assertIsSatisfied();
    assertThat(resultBodyAt(0),instanceOf(Map.class));
    assertThat(resultBodyAt(1),instanceOf(Map.class));
    assertThat(resultBodyAt(2),instanceOf(Map.class));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:start").to("jdbc:testdb?outputType=StreamList").to("mock:result");
        from("direct:withSplit").to("jdbc:testdb?outputType=StreamList").split(body()).to("mock:result");
      }
    }
;
  }
  private Object resultBodyAt(  int index){
    return result.assertExchangeReceived(index).getIn().getBody();
  }
}
