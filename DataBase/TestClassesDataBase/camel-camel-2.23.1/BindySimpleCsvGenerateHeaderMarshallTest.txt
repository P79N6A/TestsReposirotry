@ContextConfiguration public class BindySimpleCsvGenerateHeaderMarshallTest extends AbstractJUnit4SpringContextTests {
  private List<Map<String,Object>> models=new ArrayList<>();
  private String result="Order Nr,Client Nr,First Name,Last Name,Instrument Code,Instrument Nr,Order Type,Instrument Type,amount,currency,Order Date\r\n" + "1,B2,Keira,Knightley,ISIN,XX23456789,BUY,Share,400.25,EUR,14-01-2009\r\n";
  @Produce(uri="direct:start") private ProducerTemplate template;
  @EndpointInject(uri="mock:result") private MockEndpoint resultEndpoint;
  @Test public void testMarshallMessage() throws Exception {
    resultEndpoint.expectedBodiesReceived(result);
    template.sendBody(generateModel());
    resultEndpoint.assertIsSatisfied();
  }
  public List<Map<String,Object>> generateModel(){
    Map<String,Object> modelObjects=new HashMap<>();
    Order order=new Order();
    order.setOrderNr(1);
    order.setOrderType("BUY");
    order.setClientNr("B2");
    order.setFirstName("Keira");
    order.setLastName("Knightley");
    order.setAmount(new BigDecimal("400.25"));
    order.setInstrumentCode("ISIN");
    order.setInstrumentNumber("XX23456789");
    order.setInstrumentType("Share");
    order.setCurrency("EUR");
    Calendar calendar=new GregorianCalendar();
    calendar.set(2009,0,14);
    order.setOrderDate(calendar.getTime());
    modelObjects.put(order.getClass().getName(),order);
    models.add(modelObjects);
    return models;
  }
public static class ContextConfig extends RouteBuilder {
    public void configure(){
      BindyCsvDataFormat camelDataFormat=new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.model.simple.oneclassgenerateheader.Order.class);
      camelDataFormat.setLocale("en");
      from("direct:start").marshal(camelDataFormat).to("mock:result");
    }
  }
}
