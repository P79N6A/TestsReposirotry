public class HibernateValidationProviderResolverTest extends CamelTestSupport {
  @EndpointInject(uri="mock:test") MockEndpoint mockEndpoint;
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(BeanValidationException.class).to(mockEndpoint);
        from("direct:test").to("bean-validator://ValidationProviderResolverTest?validationProviderResolver=#myValidationProviderResolver");
      }
    }
;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    registry.bind("myValidationProviderResolver",new HibernateValidationProviderResolver());
    return registry;
  }
  @Test public void shouldResolveHibernateValidationProviderResolver() throws InterruptedException {
    mockEndpoint.expectedMessageCount(1);
    mockEndpoint.message(0).body().isInstanceOf(CarWithAnnotations.class);
    CarWithAnnotations carWithNullFields=new CarWithAnnotations(null,null);
    sendBody("direct:test",carWithNullFields);
    assertMockEndpointsSatisfied();
  }
}
