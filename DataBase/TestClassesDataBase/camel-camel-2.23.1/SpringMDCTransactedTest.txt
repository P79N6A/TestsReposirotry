public class SpringMDCTransactedTest extends ContextTestSupport {
  protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry result=super.createRegistry();
    result.bind("NOOP-TX",new NoopPlatformTransactionManager());
    return result;
  }
  @Test public void testMDCTransacted() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("direct:a","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.setUseMDCLogging(true);
        from("direct:a").routeId("route-a").transacted().process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("route-a",MDC.get("camel.routeId"));
            assertEquals(exchange.getExchangeId(),MDC.get("camel.exchangeId"));
            assertEquals(exchange.getIn().getMessageId(),MDC.get("camel.messageId"));
          }
        }
).to("log:foo-before").to("direct:b").to("log:foo-after").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("route-a",MDC.get("camel.routeId"));
            assertEquals(exchange.getExchangeId(),MDC.get("camel.exchangeId"));
            assertEquals(exchange.getIn().getMessageId(),MDC.get("camel.messageId"));
          }
        }
);
        from("direct:b").routeId("route-b").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("route-b",MDC.get("camel.routeId"));
            assertEquals(exchange.getExchangeId(),MDC.get("camel.exchangeId"));
            assertEquals(exchange.getIn().getMessageId(),MDC.get("camel.messageId"));
          }
        }
).to("log:bar").to("mock:result");
      }
    }
;
  }
}
