/** 
 * @version 
 */
public class RestletContentTypeTest extends RestletTestSupport {
  private static final String REQUEST_MESSAGE="<mail><body>HelloWorld!</body><subject>test</subject><to>x@y.net</to></mail>";
  private static final String REQUEST_MESSAGE_WITH_XML_TAG="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>" + REQUEST_MESSAGE;
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("restlet:http://localhost:" + portNum + "/users/?restletMethods=post").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String type=ExchangeHelper.getContentType(exchange);
            assertEquals("text/xml",type);
            exchange.getOut().setBody("<status>OK</status>");
            exchange.getOut().setHeader(Exchange.CONTENT_TYPE,"text/xml");
          }
        }
);
      }
    }
;
  }
  @Test public void testPostXml() throws Exception {
    postRequestMessage(REQUEST_MESSAGE);
  }
  @Test public void testPostXmlWithXmlTag() throws Exception {
    postRequestMessage(REQUEST_MESSAGE_WITH_XML_TAG);
  }
  private void postRequestMessage(  String message) throws Exception {
    HttpPost post=new HttpPost("http://localhost:" + portNum + "/users/");
    post.addHeader(Exchange.CONTENT_TYPE,"text/xml");
    post.setEntity(new StringEntity(message));
    HttpResponse response=doExecute(post);
    assertHttpResponse(response,200,"text/xml");
    String s=context.getTypeConverter().convertTo(String.class,response.getEntity().getContent());
    assertEquals("<status>OK</status>",s);
  }
}
