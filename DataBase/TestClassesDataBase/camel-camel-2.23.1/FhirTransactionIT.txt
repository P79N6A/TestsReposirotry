/** 
 * Test class for  {@link org.apache.camel.component.fhir.api.FhirTransaction} APIs.The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class FhirTransactionIT extends AbstractFhirTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(FhirTransactionIT.class);
  private static final String PATH_PREFIX=FhirApiCollection.getCollection().getApiName(FhirTransactionApiMethod.class).getName();
  @Test public void testWithBundle() throws Exception {
    Bundle result=requestBody("direct://WITH_BUNDLE",createTransactionBundle());
    assertNotNull("withBundle result",result);
    assertTrue(result.getEntry().get(0).getResponse().getStatus().contains("Created"));
    LOG.debug("withBundle: " + result);
  }
  @Test public void testWithStringBundle() throws Exception {
    Bundle transactionBundle=createTransactionBundle();
    String stringBundle=fhirContext.newJsonParser().encodeResourceToString(transactionBundle);
    final String result=requestBody("direct://WITH_STRING_BUNDLE",stringBundle);
    assertNotNull("withBundle result",result);
    assertTrue(result.contains("Bundle"));
    LOG.debug("withBundle: " + result);
  }
  @Test public void testWithResources() throws Exception {
    Patient oscar=new Patient().addName(new HumanName().addGiven("Oscar").setFamily("Peterson"));
    Patient bobbyHebb=new Patient().addName(new HumanName().addGiven("Bobby").setFamily("Hebb"));
    List<IBaseResource> patients=new ArrayList<>(2);
    patients.add(oscar);
    patients.add(bobbyHebb);
    List<IBaseResource> result=requestBody("direct://WITH_RESOURCES",patients);
    assertNotNull("withResources result",result);
    LOG.debug("withResources: " + result);
    assertTrue(result.size() == 2);
  }
  @Test public void testWithResourcesSummaryEnum() throws Exception {
    Patient oscar=new Patient().addName(new HumanName().addGiven("Oscar").setFamily("Peterson"));
    Patient bobbyHebb=new Patient().addName(new HumanName().addGiven("Bobby").setFamily("Hebb"));
    List<IBaseResource> patients=new ArrayList<>(2);
    patients.add(oscar);
    patients.add(bobbyHebb);
    final Map<String,Object> headers=new HashMap<>();
    headers.put(ExtraParameters.SUMMARY_ENUM.getHeaderName(),SummaryEnum.DATA);
    List<IBaseResource> result=requestBodyAndHeaders("direct://WITH_RESOURCES",patients,headers);
    assertNotNull("withResources result",result);
    LOG.debug("withResources: " + result);
    assertTrue(result.size() == 2);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://WITH_BUNDLE").to("fhir://" + PATH_PREFIX + "/withBundle?inBody=bundle");
        from("direct://WITH_STRING_BUNDLE").to("fhir://" + PATH_PREFIX + "/withBundle?inBody=stringBundle");
        from("direct://WITH_RESOURCES").to("fhir://" + PATH_PREFIX + "/withResources?inBody=resources");
      }
    }
;
  }
  private Bundle createTransactionBundle(){
    Bundle input=new Bundle();
    input.setType(Bundle.BundleType.TRANSACTION);
    input.addEntry().setResource(new Patient().addName(new HumanName().addGiven("Art").setFamily("Tatum"))).getRequest().setMethod(Bundle.HTTPVerb.POST);
    return input;
  }
}
