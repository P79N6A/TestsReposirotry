/** 
 * Is used as base class for testing the jdbc component. <p><b>Don't</b> add new test methods; it's likely to break the sub-classes. <p>Sub-classes should override  {@link #testJdbcRoutes()} unless they create routes thatare semantically equivalent to what this class creates.
 * @version 
 */
public class JdbcRouteTest extends AbstractJdbcTestSupport {
  @SuppressWarnings("unchecked") @Test public void testJdbcRoutes() throws Exception {
    Endpoint endpoint=context.getEndpoint("direct:hello");
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setBody("select * from customer order by ID");
    Exchange out=template.send(endpoint,exchange);
    assertNotNull(out);
    assertNotNull(out.getOut());
    List<Map<String,Object>> data=out.getOut().getBody(List.class);
    assertNotNull(data);
    assertEquals(3,data.size());
    Map<String,Object> row=data.get(0);
    assertEquals("cust1",row.get("ID"));
    assertEquals("jstrachan",row.get("NAME"));
    row=data.get(1);
    assertEquals("cust2",row.get("ID"));
    assertEquals("nsandhu",row.get("NAME"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:hello").to("jdbc:testdb?readSize=100");
      }
    }
;
  }
}
