/** 
 * @version 
 */
public class FilterBeanRegistryTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyBean());
    return jndi;
  }
  @Test public void testMethodCallExp() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").filter().method("foo","isGoldCustomer").to("mock:result");
      }
    }
);
    context.start();
    getMockEndpoint("mock:result").expectedBodiesReceived("Camel");
    template.sendBody("direct:start","Hello World");
    template.sendBody("direct:start","Camel");
    template.sendBody("direct:start","Bye World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanLanguageExp() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").filter().method("foo","isGoldCustomer").to("mock:result");
      }
    }
);
    context.start();
    getMockEndpoint("mock:result").expectedBodiesReceived("Camel");
    template.sendBody("direct:start","Hello World");
    template.sendBody("direct:start","Camel");
    template.sendBody("direct:start","Bye World");
    assertMockEndpointsSatisfied();
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
public class MyBean {
    public boolean isGoldCustomer(    String name){
      return "Camel".equals(name);
    }
  }
}
