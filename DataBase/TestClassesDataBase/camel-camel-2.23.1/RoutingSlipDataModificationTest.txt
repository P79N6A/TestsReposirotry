public class RoutingSlipDataModificationTest extends ContextTestSupport {
  protected static final String ANSWER="answer";
  protected static final String ROUTING_SLIP_HEADER="routingSlipHeader";
  protected MyBean myBean=new MyBean();
  @Test public void testModificationOfDataAlongRoute() throws Exception {
    MockEndpoint x=getMockEndpoint("mock:x");
    MockEndpoint y=getMockEndpoint("mock:y");
    x.expectedBodiesReceived(ANSWER);
    y.expectedBodiesReceived(ANSWER + ANSWER);
    sendBody();
    assertMockEndpointsSatisfied();
  }
  protected void sendBody(){
    template.sendBodyAndHeader("direct:a",ANSWER,ROUTING_SLIP_HEADER,"mock:x , bean:myBean?method=modifyData");
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    Object lookedUpBean=context.getRegistry().lookupByName("myBean");
    assertSame("Lookup of 'myBean' should return same object!",myBean,lookedUpBean);
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myBean",myBean);
    return answer;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:a").routingSlip(header(ROUTING_SLIP_HEADER)).to("mock:y");
      }
    }
;
  }
public static class MyBean {
    public MyBean(){
    }
    public String modifyData(    @Body String body){
      return body + body;
    }
  }
}
