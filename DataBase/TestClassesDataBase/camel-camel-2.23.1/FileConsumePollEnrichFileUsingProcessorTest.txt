/** 
 * @version 
 */
public class FileConsumePollEnrichFileUsingProcessorTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/enrich");
    deleteDirectory("target/enrichdata");
    super.setUp();
  }
  @Test public void testPollEnrich() throws Exception {
    getMockEndpoint("mock:start").expectedBodiesReceived("Start");
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Big file");
    mock.expectedFileExists("target/enrich/.done/AAA.fin");
    mock.expectedFileExists("target/enrichdata/.done/AAA.dat");
    mock.expectedFileExists("target/enrichdata/BBB.dat");
    template.sendBodyAndHeader("file://target/enrichdata","Big file",Exchange.FILE_NAME,"AAA.dat");
    template.sendBodyAndHeader("file://target/enrichdata","Other Big file",Exchange.FILE_NAME,"BBB.dat");
    template.sendBodyAndHeader("file://target/enrich","Start",Exchange.FILE_NAME,"AAA.fin");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/enrich?initialDelay=0&delay=10&move=.done").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String name=exchange.getIn().getHeader(Exchange.FILE_NAME_ONLY,String.class);
            name=FileUtil.stripExt(name) + ".dat";
            Exchange data=null;
            ConsumerTemplate con=exchange.getContext().createConsumerTemplate();
            try {
              data=con.receive("file://target/enrichdata?initialDelay=0&delay=10&move=.done&fileName=" + name,5000);
            }
  finally {
              con.stop();
            }
            if (data != null) {
              template.send("direct:data",data);
            }
 else {
              throw new CamelExchangeException("Cannot find the data file " + name,exchange);
            }
          }
        }
).to("mock:start");
        from("direct:data").to("mock:result");
      }
    }
;
  }
}
