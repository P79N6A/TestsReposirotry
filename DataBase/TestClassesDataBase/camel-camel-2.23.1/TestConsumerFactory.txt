private static final class TestConsumerFactory implements RestConsumerFactory, RestApiConsumerFactory {
  private Object dummy;
  public Object getDummy(){
    return dummy;
  }
  public void setDummy(  Object dummy){
    this.dummy=dummy;
  }
  @Override public Consumer createConsumer(  CamelContext camelContext,  Processor processor,  String verb,  String basePath,  String uriTemplate,  String consumes,  String produces,  RestConfiguration configuration,  Map<String,Object> parameters) throws Exception {
    String id;
    if (uriTemplate != null) {
      id=DefaultUuidGenerator.generateSanitizedId(basePath + uriTemplate);
    }
 else {
      id=DefaultUuidGenerator.generateSanitizedId(basePath);
    }
    if (id.startsWith("-")) {
      id=id.substring(1);
    }
    if (configuration.getConsumerProperties() != null) {
      String ref=(String)configuration.getConsumerProperties().get("dummy");
      if (ref != null) {
        dummy=CamelContextHelper.mandatoryLookup(camelContext,ref.substring(1));
      }
    }
    SedaEndpoint seda=camelContext.getEndpoint("seda:" + verb + "-"+ id,SedaEndpoint.class);
    return seda.createConsumer(processor);
  }
  @Override public Consumer createApiConsumer(  CamelContext camelContext,  Processor processor,  String contextPath,  RestConfiguration configuration,  Map<String,Object> parameters) throws Exception {
    String id=DefaultUuidGenerator.generateSanitizedId(contextPath);
    if (id.startsWith("-")) {
      id=id.substring(1);
    }
    SedaEndpoint seda=camelContext.getEndpoint("seda:api:" + "-" + id,SedaEndpoint.class);
    return seda.createConsumer(processor);
  }
}
