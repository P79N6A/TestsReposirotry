public class SolrDeleteTest extends SolrComponentTestSupport {
  public SolrDeleteTest(  SolrFixtures.TestServerType serverToTest){
    super(serverToTest);
  }
  @Test public void testDeleteById() throws Exception {
    solrInsertTestEntry();
    solrCommit();
    assertEquals("wrong number of entries found",1,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
    template.sendBodyAndHeader("direct:start",TEST_ID,SolrConstants.OPERATION,SolrConstants.OPERATION_DELETE_BY_ID);
    solrCommit();
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:" + TEST_ID).getResults().getNumFound());
  }
  @Test public void testDeleteListOfIDs() throws Exception {
    solrInsertTestEntry(TEST_ID);
    solrInsertTestEntry(TEST_ID2);
    solrCommit();
    assertEquals("wrong number of entries found",2,executeSolrQuery("id:test*").getResults().getNumFound());
    template.sendBodyAndHeader("direct:splitThenCommit",Arrays.asList(TEST_ID,TEST_ID2),SolrConstants.OPERATION,SolrConstants.OPERATION_DELETE_BY_ID);
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:test*").getResults().getNumFound());
  }
  @Test public void testDeleteByQuery() throws Exception {
    solrInsertTestEntry(TEST_ID);
    solrInsertTestEntry(TEST_ID2);
    solrCommit();
    assertEquals("wrong number of entries found",2,executeSolrQuery("id:test*").getResults().getNumFound());
    template.sendBodyAndHeader("direct:start","id:test*",SolrConstants.OPERATION,SolrConstants.OPERATION_DELETE_BY_QUERY);
    solrCommit();
    assertEquals("wrong number of entries found",0,executeSolrQuery("id:test*").getResults().getNumFound());
  }
}
