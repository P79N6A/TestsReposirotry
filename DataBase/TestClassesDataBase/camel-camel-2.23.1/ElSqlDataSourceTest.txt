public class ElSqlDataSourceTest extends CamelTestSupport {
  private EmbeddedDatabase db;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    db=new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/createAndPopulateDatabase.sql").build();
    jndi.bind("dataSource",db);
    return jndi;
  }
  @Test public void testSimpleBody() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:simple","XXX");
    mock.assertIsSatisfied();
    List<?> received=assertIsInstanceOf(List.class,mock.getReceivedExchanges().get(0).getIn().getBody());
    Map<?,?> row=assertIsInstanceOf(Map.class,received.get(0));
    assertEquals("Linux",row.get("PROJECT"));
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    db.shutdown();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:simple").to("elsql:projectsById:elsql/projects.elsql?dataSource=#dataSource").to("mock:result");
      }
    }
;
  }
}
