@RunWith(MockitoJUnitRunner.class) public class BonitaAPIUtilPrepareInputsTest {
  @Mock ProcessDefinitionResponse processDefinition;
  private BonitaAPIUtil bonitaApiUtil;
  @Before public void setup(){
    bonitaApiUtil=BonitaAPIUtil.getInstance(new BonitaAPIConfig("hostname","port","username","password"));
  }
  @Test public void testPrepareInputsEmpty() throws Exception {
    Map<String,Serializable> rawInputs=new HashMap<>();
    Map<String,Serializable> inputs=bonitaApiUtil.prepareInputs(processDefinition,rawInputs);
    assertEquals(inputs.size(),rawInputs.size());
  }
  @Test public void testPrepareInputsNoFiles() throws Exception {
    Map<String,Serializable> rawInputs=new HashMap<>();
    rawInputs.put("myVariable",1);
    Map<String,Serializable> inputs=bonitaApiUtil.prepareInputs(processDefinition,rawInputs);
    assertEquals(rawInputs.size(),inputs.size());
  }
  @Test public void testPrepareInputsOneFile() throws Exception {
    Map<String,Serializable> rawInputs=new HashMap<>();
    FileInput file=new FileInput("filename","String".getBytes());
    rawInputs.put("myVariable",1);
    rawInputs.put("filename",file);
    BonitaAPIUtil bonitaApiUtilMod=spy(bonitaApiUtil);
    UploadFileResponse uploadFileResponse=new UploadFileResponse();
    uploadFileResponse.setTempPath("temp");
    doReturn(uploadFileResponse).when(bonitaApiUtilMod).uploadFile(any(),any());
    Map<String,Serializable> inputs=bonitaApiUtilMod.prepareInputs(processDefinition,rawInputs);
    assertEquals(rawInputs.size(),inputs.size());
  }
  @Test public void testPrepareInputsFileType() throws Exception {
    Map<String,Serializable> rawInputs=new HashMap<>();
    FileInput file=new FileInput("filename","String".getBytes());
    rawInputs.put("filename",file);
    BonitaAPIUtil bonitaApiUtilMod=spy(bonitaApiUtil);
    UploadFileResponse uploadFileResponse=new UploadFileResponse();
    uploadFileResponse.setTempPath("temp");
    doReturn(uploadFileResponse).when(bonitaApiUtilMod).uploadFile(any(),any());
    Map<String,Serializable> inputs=bonitaApiUtilMod.prepareInputs(processDefinition,rawInputs);
    assertTrue(Map.class.isInstance(inputs.get("filename")));
  }
  @Test public void testPrepareInputsTempFilePath() throws Exception {
    Map<String,Serializable> rawInputs=new HashMap<>();
    FileInput file=new FileInput("filename","String".getBytes());
    rawInputs.put("filename",file);
    BonitaAPIUtil bonitaApiUtilMod=spy(bonitaApiUtil);
    UploadFileResponse uploadFileResponse=new UploadFileResponse();
    uploadFileResponse.setTempPath("temp");
    doReturn(uploadFileResponse).when(bonitaApiUtilMod).uploadFile(any(),any());
    Map<String,Serializable> inputs=bonitaApiUtilMod.prepareInputs(processDefinition,rawInputs);
    Map<String,Serializable> fileMap=(Map<String,Serializable>)inputs.get("filename");
    assertEquals("temp",fileMap.get("tempPath"));
  }
}
