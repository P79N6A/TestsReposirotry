/** 
 * @version 
 */
public class JavaSpaceRequestReplyTest extends CamelTestSupport {
  private ClassPathXmlApplicationContext spring;
  @Test public void testJavaSpaceRequestReply() throws Exception {
    Endpoint endpoint=context.getEndpoint("direct:input");
    ITestPojo proxy=ProxyHelper.createProxy(endpoint,ITestPojo.class);
    Request req=new Request();
    long start=System.currentTimeMillis();
    for (int i=0; i < 100; ++i) {
      req.setPayload("REQUEST " + i);
      Reply reply=proxy.method(req);
      assertTrue(reply.getPayload().equals("REPLY for REQUEST " + i));
    }
    long stop=System.currentTimeMillis();
    log.info("{} took {} milliseconds",getTestMethodName(),stop - start);
  }
  @Test public void testJavaSpaceConcurrentRequestReply() throws Exception {
    Vector<FutureTask<Reply>> tasks=new Vector<>();
    Endpoint endpoint=context.getEndpoint("direct:input");
    ExecutorService es=Executors.newFixedThreadPool(10);
    long start=System.currentTimeMillis();
    for (int i=0; i < 100; ++i) {
      Request req=new Request();
      req.setPayload("REQUEST " + i);
      ITestPojo proxy=ProxyHelper.createProxy(endpoint,ITestPojo.class);
      FutureTask<Reply> task=new FutureTask<>(new PojoCallable(req,proxy));
      tasks.add(task);
      es.submit(task);
    }
    int i=0;
    for (    FutureTask<Reply> futureTask : tasks) {
      assertTrue(futureTask.get().getPayload().equals("REPLY for REQUEST " + i++));
    }
    long stop=System.currentTimeMillis();
    log.info("{} took {} milliseconds",getTestMethodName(),stop - start);
    es.shutdownNow();
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    spring=new ClassPathXmlApplicationContext("org/apache/camel/component/javaspace/spring.xml");
    SpringCamelContext ctx=SpringCamelContext.springCamelContext(spring);
    return ctx;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:input").to("javaspace:jini://localhost?spaceName=mySpace");
        from("javaspace:jini://localhost?concurrentConsumers=10&spaceName=mySpace").to("bean:pojo");
        from("javaspace:jini://localhost?concurrentConsumers=10&spaceName=mySpace").to("bean:pojo");
        from("javaspace:jini://localhost?concurrentConsumers=10&spaceName=mySpace").to("bean:pojo");
      }
    }
;
  }
}
