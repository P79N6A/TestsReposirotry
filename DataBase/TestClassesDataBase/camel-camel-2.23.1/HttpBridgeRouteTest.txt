public class HttpBridgeRouteTest extends BaseJettyTest {
  protected int port1;
  protected int port2;
  @Test public void testHttpClient() throws Exception {
    String response=template.requestBodyAndHeader("http://localhost:" + port2 + "/test/hello",new ByteArrayInputStream("This is a test".getBytes()),"Content-Type","application/xml",String.class);
    assertEquals("Get a wrong response","/",response);
    response=template.requestBody("http://localhost:" + port1 + "/hello/world","hello",String.class);
    assertEquals("Get a wrong response","/hello/world",response);
    try {
      template.requestBody("http://localhost:" + port2 + "/hello/world","hello",String.class);
      fail("Expect exception here!");
    }
 catch (    Exception ex) {
      assertTrue("We should get a RuntimeCamelException",ex instanceof RuntimeCamelException);
    }
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        port1=getPort();
        port2=getNextPort();
        errorHandler(noErrorHandler());
        Processor serviceProc=new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String uri=exchange.getIn().getHeader(Exchange.HTTP_URI,String.class);
            exchange.getOut().setBody(uri);
          }
        }
;
        from("jetty:http://localhost:" + port2 + "/test/hello").to("http://localhost:" + port1 + "?throwExceptionOnFailure=false&bridgeEndpoint=true");
        from("jetty://http://localhost:" + port1 + "?matchOnUriPrefix=true").process(serviceProc);
      }
    }
;
  }
}
