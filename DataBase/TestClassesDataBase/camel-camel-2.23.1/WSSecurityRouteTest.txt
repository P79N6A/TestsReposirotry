public class WSSecurityRouteTest extends CamelTestSupport {
  static final int PORT=CXFTestSupport.getPort1();
  static CxfServer cxfServer;
  private static AbstractXmlApplicationContext applicationContext;
  @BeforeClass public static void setupContext() throws Exception {
    cxfServer=new CxfServer();
    applicationContext=createApplicationContext();
  }
  @AfterClass public static void shutdownService(){
    if (applicationContext != null) {
      applicationContext.stop();
    }
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    return SpringCamelContext.springCamelContext(applicationContext);
  }
  private static ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/wssecurity/camel/camel-context.xml");
  }
  @Test public void testSignature() throws Exception {
    SpringBusFactory bf=new SpringBusFactory();
    URL busFile=WSSecurityRouteTest.class.getResource("../client/wssec.xml");
    Bus bus=bf.createBus(busFile.toString());
    BusFactory.setDefaultBus(bus);
    BusFactory.setThreadDefaultBus(bus);
    GreeterService gs=new GreeterService();
    Greeter greeter=gs.getGreeterSignaturePort();
    ((BindingProvider)greeter).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,"http://localhost:" + CXFTestSupport.getPort2() + "/WSSecurityRouteTest/GreeterSignaturePort");
    assertEquals("Get a wrong response","Hello Security",greeter.greetMe("Security"));
  }
  @Test public void testUsernameToken() throws Exception {
    SpringBusFactory bf=new SpringBusFactory();
    URL busFile=WSSecurityRouteTest.class.getResource("../client/wssec.xml");
    Bus bus=bf.createBus(busFile.toString());
    BusFactory.setDefaultBus(bus);
    BusFactory.setThreadDefaultBus(bus);
    GreeterService gs=new GreeterService();
    Greeter greeter=gs.getGreeterUsernameTokenPort();
    ((BindingProvider)greeter).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,"http://localhost:" + CXFTestSupport.getPort2() + "/WSSecurityRouteTest/GreeterUsernameTokenPort");
    assertEquals("Get a wrong response","Hello Security",greeter.greetMe("Security"));
  }
  @Test public void testEncryption() throws Exception {
    SpringBusFactory bf=new SpringBusFactory();
    URL busFile=WSSecurityRouteTest.class.getResource("../client/wssec.xml");
    Bus bus=bf.createBus(busFile.toString());
    BusFactory.setDefaultBus(bus);
    BusFactory.setThreadDefaultBus(bus);
    GreeterService gs=new GreeterService();
    Greeter greeter=gs.getGreeterEncryptionPort();
    ((BindingProvider)greeter).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,"http://localhost:" + CXFTestSupport.getPort2() + "/WSSecurityRouteTest/GreeterEncryptionPort");
    assertEquals("Get a wrong response","Hello Security",greeter.greetMe("Security"));
  }
  @Test public void testSecurityPolicy() throws Exception {
    SpringBusFactory bf=new SpringBusFactory();
    URL busFile=WSSecurityRouteTest.class.getResource("../client/wssec.xml");
    Bus bus=bf.createBus(busFile.toString());
    BusFactory.setDefaultBus(bus);
    BusFactory.setThreadDefaultBus(bus);
    GreeterService gs=new GreeterService();
    Greeter greeter=gs.getGreeterSecurityPolicyPort();
    ((BindingProvider)greeter).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,"http://localhost:" + CXFTestSupport.getPort2() + "/WSSecurityRouteTest/GreeterSecurityPolicyPort");
    assertEquals("Get a wrong response","Hello Security",greeter.greetMe("Security"));
  }
}
