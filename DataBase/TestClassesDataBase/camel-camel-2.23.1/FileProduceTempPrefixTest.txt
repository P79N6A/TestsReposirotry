/** 
 * Unit test for file producer option tempPrefix
 */
public class FileProduceTempPrefixTest extends ContextTestSupport {
  private String fileUrl="file://target/tempandrename/?tempPrefix=inprogress.";
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/tempandrename");
    super.setUp();
  }
  @Test public void testCreateTempFileName() throws Exception {
    Endpoint endpoint=context.getEndpoint(fileUrl);
    GenericFileProducer<?> producer=(GenericFileProducer<?>)endpoint.createProducer();
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setHeader(Exchange.FILE_NAME,"claus.txt");
    String tempFileName=producer.createTempFileName(exchange,"target/tempandrename/claus.txt");
    assertDirectoryEquals("target/tempandrename/inprogress.claus.txt",tempFileName);
  }
  @Test public void testCreateTempFileNameUsingComplexName() throws Exception {
    Endpoint endpoint=context.getEndpoint(fileUrl);
    GenericFileProducer<?> producer=(GenericFileProducer<?>)endpoint.createProducer();
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setHeader(Exchange.FILE_NAME,"foo/claus.txt");
    String tempFileName=producer.createTempFileName(exchange,"target/tempandrename/foo/claus.txt");
    assertDirectoryEquals("target/tempandrename/foo/inprogress.claus.txt",tempFileName);
  }
  @Test public void testNoPathCreateTempFileName() throws Exception {
    Endpoint endpoint=context.getEndpoint(fileUrl);
    GenericFileProducer<?> producer=(GenericFileProducer<?>)endpoint.createProducer();
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setHeader(Exchange.FILE_NAME,"claus.txt");
    String tempFileName=producer.createTempFileName(exchange,".");
    assertDirectoryEquals("inprogress.claus.txt",tempFileName);
  }
  @Test public void testTempPrefix() throws Exception {
    template.sendBodyAndHeader("direct:a","Hello World",Exchange.FILE_NAME,"hello.txt");
    File file=new File("target/tempandrename/hello.txt");
    assertEquals("The generated file should exists: " + file,true,file.exists());
  }
  @Test public void testTempPrefixUUIDFilename() throws Exception {
    template.sendBody("direct:a","Bye World");
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:a").to(fileUrl);
      }
    }
;
  }
}
