/** 
 * @version 
 */
public class UnmarshalThenMarshalTest extends CamelTestSupport {
  @Test public void testSendXmlAndUnmarshal() throws Exception {
    MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    resultEndpoint.expectedMessageCount(1);
    PurchaseOrder expectedBody=new PurchaseOrder();
    expectedBody.setAmount(20.0);
    expectedBody.setName("Wine");
    expectedBody.setPrice(5.0);
    template.sendBody("direct:start",expectedBody);
    resultEndpoint.assertIsSatisfied();
    List<Exchange> list=resultEndpoint.getReceivedExchanges();
    Exchange exchange=list.get(0);
    Object actualBody=exchange.getIn().getBody();
    log.debug("Received: " + actualBody);
    assertEquals("Received body",expectedBody,actualBody);
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").marshal().xstream(PurchaseOrder.class).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            log.debug("marshalled: " + exchange.getIn().getBody(String.class));
          }
        }
).unmarshal().xstream(PurchaseOrder.class).to("mock:result");
      }
    }
;
  }
}
