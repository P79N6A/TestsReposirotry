public class DefaultMethodCalledFromSimpleExpressionTest extends ContextTestSupport {
  private static final String DEFAULT_METHOD_CONTENT="A.defaultMethod() has been called";
  @Test public void testDefaultMethodFromSimpleExpression() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived(DEFAULT_METHOD_CONTENT);
    template.sendBodyAndProperty("direct:defaultMethod","","myObject",new B(){
    }
);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:defaultMethod").setBody(simple("${exchangeProperty.myObject.defaultMethod}")).to("mock:result");
      }
    }
;
  }
public interface A {
    default String defaultMethod(){
      return DEFAULT_METHOD_CONTENT;
    }
  }
public interface B extends A {
  }
}
