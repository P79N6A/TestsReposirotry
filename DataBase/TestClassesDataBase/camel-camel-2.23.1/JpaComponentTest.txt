/** 
 * @version
 */
public class JpaComponentTest extends CamelTestSupport {
  @Test public void testJpaComponentConsumerHasLockModeType() throws Exception {
    JpaComponent comp=new JpaComponent();
    comp.setCamelContext(context);
    assertNull(comp.getEntityManagerFactory());
    assertNull(comp.getTransactionManager());
    JpaEndpoint jpa=(JpaEndpoint)comp.createEndpoint("jpa://" + SendEmail.class.getName() + "?consumer.lockModeType=PESSIMISTIC_WRITE");
    JpaConsumer consumer=(JpaConsumer)jpa.createConsumer(null);
    assertEquals(consumer.getLockModeType(),LockModeType.PESSIMISTIC_WRITE);
  }
  @Test public void testJpaComponentCtr() throws Exception {
    JpaComponent comp=new JpaComponent();
    comp.setCamelContext(context);
    assertNull(comp.getEntityManagerFactory());
    assertNull(comp.getTransactionManager());
    JpaEndpoint jpa=(JpaEndpoint)comp.createEndpoint("jpa://" + SendEmail.class.getName());
    assertNotNull(jpa);
    assertNotNull(jpa.getEntityType());
  }
  @Test public void testJpaComponentEMFandTM() throws Exception {
    JpaComponent comp=new JpaComponent();
    comp.setCamelContext(context);
    assertNull(comp.getEntityManagerFactory());
    assertNull(comp.getTransactionManager());
    EntityManagerFactory fac=Persistence.createEntityManagerFactory("camel");
    JpaTransactionManager tm=new JpaTransactionManager(fac);
    tm.afterPropertiesSet();
    comp.setEntityManagerFactory(fac);
    comp.setTransactionManager(tm);
    assertSame(fac,comp.getEntityManagerFactory());
    assertSame(tm,comp.getTransactionManager());
    JpaEndpoint jpa=(JpaEndpoint)comp.createEndpoint("jpa://" + SendEmail.class.getName());
    assertNotNull(jpa);
    assertNotNull(jpa.getEntityType());
  }
  @Test public void testJpaComponentWithPath() throws Exception {
    JpaComponent comp=new JpaComponent();
    comp.setCamelContext(context);
    assertNull(comp.getEntityManagerFactory());
    assertNull(comp.getTransactionManager());
    JpaEndpoint jpa=(JpaEndpoint)comp.createEndpoint("jpa://" + SendEmail.class.getName() + "?persistenceUnit=journalPersistenceUnit&usePersist=true");
    assertNotNull(jpa);
    assertNotNull(jpa.getEntityType());
  }
  @Test public void testJpaComponentEmptyPath() throws Exception {
    JpaComponent comp=new JpaComponent();
    comp.setCamelContext(context);
    assertNull(comp.getEntityManagerFactory());
    assertNull(comp.getTransactionManager());
    JpaEndpoint jpa=(JpaEndpoint)comp.createEndpoint("jpa:?persistenceUnit=journalPersistenceUnit&usePersist=true");
    assertNotNull(jpa);
    assertNull(jpa.getEntityType());
  }
}
