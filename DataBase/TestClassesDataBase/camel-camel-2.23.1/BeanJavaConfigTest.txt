@RunWith(CamelSpringJUnit4ClassRunner.class) @ContextConfiguration(classes={BeanJavaConfigTest.ContextConfig.class},loader=CamelSpringDelegatingTestContextLoader.class) public class BeanJavaConfigTest extends AbstractJUnit4SpringContextTests {
  @EndpointInject(uri="mock:end") protected MockEndpoint endpoint;
  @EndpointInject(uri="mock:error") protected MockEndpoint errorEndpoint;
  @Produce(uri="direct:start") protected ProducerTemplate producer;
  @Test @DirtiesContext public void testRouteUsingBean() throws Exception {
    endpoint.expectedMessageCount(1);
    endpoint.message(0).body().isEqualTo("Hello World");
    producer.sendBody("World");
    endpoint.assertIsSatisfied();
  }
public static class SomeBean {
    @Handler public String someMethod(    String body){
      return "Hello " + body;
    }
  }
@Configuration public static class ContextConfig extends SingleRouteCamelConfiguration {
    @Bean @Override public RouteBuilder route(){
      return new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:start").errorHandler(deadLetterChannel("mock:end")).bean(new SomeBean()).to("mock:end");
        }
      }
;
    }
  }
}
