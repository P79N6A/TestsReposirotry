/** 
 * @version 
 */
public class DataFormatTest extends CamelTestSupport {
  private MockEndpoint resultEndpoint;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
  }
  @Test public void testMarshalThenUnmarshalBean() throws Exception {
    PurchaseOrder bean=new PurchaseOrder();
    bean.setName("Beer");
    bean.setAmount(23);
    bean.setPrice(2.5);
    resultEndpoint.expectedBodiesReceived(bean);
    template.sendBody("direct:start",bean);
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testMarshalPrettyPrint() throws Exception {
    PersonType person=new PersonType();
    person.setFirstName("Willem");
    person.setLastName("Jiang");
    resultEndpoint.expectedMessageCount(1);
    template.sendBody("direct:prettyPrint",person);
    resultEndpoint.assertIsSatisfied();
    Exchange exchange=resultEndpoint.getExchanges().get(0);
    String result=exchange.getIn().getBody(String.class);
    assertNotNull("The result should not be null",result);
    int indexPerson=result.indexOf("<Person>");
    int indexFirstName=result.indexOf("<firstName>");
    assertTrue("we should find the <Person>",indexPerson > 0);
    assertTrue("we should find the <firstName>",indexFirstName > 0);
    assertTrue("There should some sapce between <Person> and <firstName>",indexFirstName - indexPerson > 8);
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        JaxbDataFormat example=new JaxbDataFormat("org.apache.camel.example");
        JaxbDataFormat person=new JaxbDataFormat("org.apache.camel.foo.bar");
        person.setPrettyPrint(true);
        from("direct:start").marshal(example).to("direct:marshalled");
        from("direct:marshalled").unmarshal().jaxb("org.apache.camel.example").to("mock:result");
        from("direct:prettyPrint").marshal(person).to("mock:result");
      }
    }
;
  }
}
