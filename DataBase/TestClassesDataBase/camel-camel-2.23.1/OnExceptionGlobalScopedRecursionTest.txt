/** 
 * Test that exceptions in an onException handler route do not go into recursion
 */
public class OnExceptionGlobalScopedRecursionTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testRecursion() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Throwable.class).to("mock:c").log("onException").throwException(new NullPointerException("A NPE error here")).end();
        from("direct:test").to("mock:a").log("test").throwException(new IllegalStateException("Bad state")).to("log:test").to("mock:b");
      }
    }
);
    context.start();
    try {
      template.sendBody("direct:test","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
      assertEquals("A NPE error here",npe.getMessage());
      IllegalStateException ise=assertIsInstanceOf(IllegalStateException.class,npe.getSuppressed()[0]);
      assertEquals("Bad state",ise.getMessage());
    }
  }
  @Test public void testRecursionHandled() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Throwable.class).handled(true).to("mock:c").log("onException").throwException(new NullPointerException("A NPE error here")).end();
        from("direct:test").to("mock:a").log("test").throwException(new IllegalStateException("Bad state")).to("log:test").to("mock:b");
      }
    }
);
    context.start();
    try {
      template.sendBody("direct:test","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
      assertEquals("A NPE error here",npe.getMessage());
      IllegalStateException ise=assertIsInstanceOf(IllegalStateException.class,npe.getSuppressed()[0]);
      assertEquals("Bad state",ise.getMessage());
    }
  }
  @Test public void testRecursionDirectNoErrorHandler() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    getMockEndpoint("mock:d").expectedMessageCount(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Throwable.class).to("mock:c").log("onException").to("direct:error").end();
        from("direct:test").to("mock:a").log("test").throwException(new IllegalStateException("Bad state")).to("log:test").to("mock:b");
        from("direct:error").errorHandler(noErrorHandler()).to("mock:d").log("error").throwException(new NullPointerException("A NPE error here"));
      }
    }
);
    context.start();
    try {
      template.sendBody("direct:test","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
      assertEquals("A NPE error here",npe.getMessage());
      IllegalStateException ise=assertIsInstanceOf(IllegalStateException.class,npe.getSuppressed()[0]);
      assertEquals("Bad state",ise.getMessage());
    }
  }
  @Test public void testRecursionHandledDirectNoErrorHandler() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    getMockEndpoint("mock:d").expectedMessageCount(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Throwable.class).handled(true).to("mock:c").log("onException").to("direct:error").end();
        from("direct:test").to("mock:a").log("test").throwException(new IllegalStateException("Bad state")).to("log:test").to("mock:b");
        from("direct:error").errorHandler(noErrorHandler()).to("mock:d").log("error").throwException(new NullPointerException("A NPE error here"));
      }
    }
);
    context.start();
    try {
      template.sendBody("direct:test","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
      assertEquals("A NPE error here",npe.getMessage());
      IllegalStateException ise=assertIsInstanceOf(IllegalStateException.class,npe.getSuppressed()[0]);
      assertEquals("Bad state",ise.getMessage());
    }
  }
  @Test public void testRecursionDirect() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    getMockEndpoint("mock:d").expectedMessageCount(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Throwable.class).to("mock:c").log("onException").to("direct:error").end();
        from("direct:test").to("mock:a").log("test").throwException(new IllegalStateException("Bad state")).to("log:test").to("mock:b");
        from("direct:error").to("mock:d").log("error").throwException(new NullPointerException("A NPE error here"));
      }
    }
);
    context.start();
    try {
      template.sendBody("direct:test","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
      assertEquals("A NPE error here",npe.getMessage());
    }
  }
  @Test public void testRecursionHandledDirect() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    getMockEndpoint("mock:d").expectedMessageCount(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Throwable.class).handled(true).to("mock:c").log("onException").to("direct:error").end();
        from("direct:test").to("mock:a").log("test").throwException(new IllegalStateException("Bad state")).to("log:test").to("mock:b");
        from("direct:error").to("mock:d").log("error").throwException(new NullPointerException("A NPE error here"));
      }
    }
);
    context.start();
    try {
      template.sendBody("direct:test","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      NullPointerException npe=assertIsInstanceOf(NullPointerException.class,e.getCause());
      assertEquals("A NPE error here",npe.getMessage());
    }
  }
}
