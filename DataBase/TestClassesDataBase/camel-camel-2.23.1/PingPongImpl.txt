/** 
 * Test gRPC PingPong server implementation
 */
static class PingPongImpl extends PingPongGrpc.PingPongImplBase {
  @Override public void pingSyncSync(  PingRequest request,  StreamObserver<PongResponse> responseObserver){
    LOG.info("gRPC server received data from PingPong service PingId={} PingName={}",request.getPingId(),request.getPingName());
    PongResponse response=PongResponse.newBuilder().setPongName(request.getPingName() + GRPC_TEST_PONG_VALUE).setPongId(request.getPingId()).build();
    responseObserver.onNext(response);
    responseObserver.onCompleted();
  }
  @Override public void pingSyncAsync(  PingRequest request,  StreamObserver<PongResponse> responseObserver){
    LOG.info("gRPC server received data from PingAsyncResponse service PingId={} PingName={}",request.getPingId(),request.getPingName());
    PongResponse response01=PongResponse.newBuilder().setPongName(request.getPingName() + GRPC_TEST_PONG_VALUE).setPongId(GRPC_TEST_PONG_ID01).build();
    PongResponse response02=PongResponse.newBuilder().setPongName(request.getPingName() + GRPC_TEST_PONG_VALUE).setPongId(GRPC_TEST_PONG_ID02).build();
    responseObserver.onNext(response01);
    responseObserver.onNext(response02);
    responseObserver.onCompleted();
  }
  @Override public StreamObserver<PingRequest> pingAsyncSync(  StreamObserver<PongResponse> responseObserver){
    StreamObserver<PingRequest> requestObserver=new StreamObserver<PingRequest>(){
      @Override public void onNext(      PingRequest request){
        PongResponse response=PongResponse.newBuilder().setPongName(request.getPingName() + GRPC_TEST_PONG_VALUE).setPongId(request.getPingId()).build();
        responseObserver.onNext(response);
      }
      @Override public void onError(      Throwable t){
        LOG.info("Error in pingAsyncSync() " + t.getMessage());
      }
      @Override public void onCompleted(){
        responseObserver.onCompleted();
      }
    }
;
    return requestObserver;
  }
  @Override public StreamObserver<PingRequest> pingAsyncAsync(  StreamObserver<PongResponse> responseObserver){
    StreamObserver<PingRequest> requestObserver=new StreamObserver<PingRequest>(){
      @Override public void onNext(      PingRequest request){
        PongResponse response=PongResponse.newBuilder().setPongName(request.getPingName() + GRPC_TEST_PONG_VALUE).setPongId(request.getPingId()).build();
        responseObserver.onNext(response);
      }
      @Override public void onError(      Throwable t){
        LOG.info("Error in pingAsyncAsync() " + t.getMessage());
      }
      @Override public void onCompleted(){
        responseObserver.onCompleted();
      }
    }
;
    return requestObserver;
  }
}
