/** 
 * @version 
 */
public class JavaSpaceSendReceiveTest extends CamelTestSupport {
  private ClassPathXmlApplicationContext spring;
  @Test public void testJavaSpaceSendReceive() throws Exception {
    Endpoint directEndpoint=context.getEndpoint("direct:input");
    Exchange exchange=directEndpoint.createExchange(ExchangePattern.InOnly);
    Message message=exchange.getIn();
    org.apache.camel.component.javaspace.TestEntry entry=new org.apache.camel.component.javaspace.TestEntry();
    entry.id=1;
    entry.content="DAVID";
    message.setBody(entry);
    Producer producer=directEndpoint.createProducer();
    int nummsg=1000;
    MockEndpoint resultEndpoint=context.getEndpoint("mock:mymock",MockEndpoint.class);
    resultEndpoint.expectedMessageCount(nummsg);
    long start=System.currentTimeMillis();
    producer.start();
    for (int i=0; i < nummsg; ++i) {
      producer.process(exchange);
    }
    resultEndpoint.assertIsSatisfied();
    long stop=System.currentTimeMillis();
    log.info("{} took {} milliseconds",getTestMethodName(),stop - start);
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    spring=new ClassPathXmlApplicationContext("org/apache/camel/component/javaspace/spring.xml");
    SpringCamelContext ctx=SpringCamelContext.springCamelContext(spring);
    return ctx;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:input").to("javaspace:jini://localhost?spaceName=mySpace");
        from("javaspace:jini://localhost?spaceName=mySpace&templateId=template&verb=take&concurrentConsumers=1").process(new Processor(){
          public void process(          Exchange exc) throws Exception {
            TestEntry msg=exc.getIn().getBody(TestEntry.class);
            assertTrue(msg.id == 1);
          }
        }
).to("mock:mymock");
      }
    }
;
  }
}
