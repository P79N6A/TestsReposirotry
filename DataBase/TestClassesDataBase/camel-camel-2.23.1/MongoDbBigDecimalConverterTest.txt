public class MongoDbBigDecimalConverterTest extends AbstractMongoDbTest {
private class NumberClass {
    public String _id="testBigDecimalConvert";
    public BigDecimal aNumber=new BigDecimal(0);
    public BigDecimal bNumber=new BigDecimal(12345L);
  }
  @Test public void testBigDecimalAutoConversion(){
    assertEquals(0,testCollection.count());
    NumberClass testClass=new NumberClass();
    Object result=template.requestBody("direct:insert",testClass);
    assertTrue(result instanceof BasicDBObject);
    DBObject b=testCollection.find(new BasicDBObject("_id",testClass._id)).first();
    assertNotNull("No record with 'testInsertString' _id",b);
    assertTrue(testClass.aNumber.equals(new BigDecimal((double)b.get("aNumber"))));
    assertEquals(testClass.bNumber,new BigDecimal((double)b.get("bNumber")));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:insert").to("mongodb:myDb?database={{mongodb.testDb}}&collection={{mongodb.testCollection}}&operation=insert&writeConcern=SAFE");
      }
    }
;
  }
}
