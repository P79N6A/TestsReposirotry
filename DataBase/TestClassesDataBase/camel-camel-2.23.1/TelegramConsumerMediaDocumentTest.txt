/** 
 * Tests the reception of messages without text having media content.
 */
public class TelegramConsumerMediaDocumentTest extends TelegramTestSupport {
  @EndpointInject(uri="mock:telegram") private MockEndpoint endpoint;
  @Before public void mockAPIs(){
    TelegramService api=mockTelegramService();
    UpdateResult res=getJSONResource("messages/updates-media-document.json",UpdateResult.class);
    UpdateResult defaultRes=getJSONResource("messages/updates-empty.json",UpdateResult.class);
    when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes);
  }
  @Test public void testReceptionOfMessageWithADocument() throws Exception {
    endpoint.expectedMinimumMessageCount(1);
    endpoint.assertIsSatisfied();
    Exchange mediaExchange=endpoint.getExchanges().get(0);
    IncomingMessage msg=mediaExchange.getIn().getBody(IncomingMessage.class);
    IncomingDocument document=msg.getDocument();
    assertNotNull(document);
    assertEquals("AgADBAADq6cxG0bQcwnUb4Cga-eXxnodQxkABLXiiSI1vzZK8XXXXXXX",document.getFileId());
    assertEquals(Long.valueOf(12530),document.getFileSize());
    assertEquals("file.png",document.getFileName());
    assertEquals("image/png",document.getMimeType());
    assertNotNull(document.getThumb());
    assertEquals(Integer.valueOf(90),document.getThumb().getWidth());
    assertEquals(Integer.valueOf(80),document.getThumb().getHeight());
    assertEquals(Long.valueOf(1253),document.getThumb().getFileSize());
    assertEquals("AgADBAADq6cxG0bQcwnUb4Cga-eXxnodQxkABLXiiSI1vzZK9XXXXXXX",document.getThumb().getFileId());
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("telegram:bots/mock-token").to("mock:telegram");
      }
    }
;
  }
}
