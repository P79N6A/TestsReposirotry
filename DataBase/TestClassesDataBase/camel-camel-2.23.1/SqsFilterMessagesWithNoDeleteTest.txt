@Ignore("Test fails occationally on CI servers") public class SqsFilterMessagesWithNoDeleteTest extends TestSupport {
  private void populateMessages(  AmazonSQSClientMock clientMock){
    Message message=new Message();
    message.setBody("Message: hello, world!");
    message.setMD5OfBody("6a1559560f67c5e7a7d5d838bf0272ee");
    message.setMessageId("f6fb6f99-5eb2-4be4-9b15-144774141458");
    message.setReceiptHandle("0NNAq8PwvXsyZkR6yu4nQ07FGxNmOBWi5");
    clientMock.messages.add(message);
  }
  @Test public void testDoesNotGetThroughFilter() throws Exception {
    final String sqsURI=String.format("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient" + "&deleteIfFiltered=false" + "&defaultVisibilityTimeout=1");
    AmazonSQSClientMock clientMock=new AmazonSQSClientMock();
    populateMessages(clientMock);
    SimpleRegistry registry=new SimpleRegistry();
    DefaultCamelContext ctx=new DefaultCamelContext(registry);
    ctx.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(sqsURI).filter(simple("${header.login} == true")).to("mock:result");
      }
    }
);
    MockEndpoint result=MockEndpoint.resolve(ctx,"mock:result");
    clientMock.setScheduler(ctx.getExecutorServiceManager().newScheduledThreadPool(clientMock,"ClientMock Scheduler",1));
    registry.put("amazonSQSClient",clientMock);
    result.expectedMessageCount(0);
    ctx.start();
    assertIsSatisfied(2000,TimeUnit.MILLISECONDS);
    String response=ctx.createConsumerTemplate().receiveBody(sqsURI,5000,String.class);
    assertEquals(response,"Message: hello, world!");
    ctx.stop();
    clientMock.shutdown();
  }
  @Test public void testGetThroughFilter() throws Exception {
    final String sqsURI=String.format("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient" + "&deleteIfFiltered=false" + "&defaultVisibilityTimeout=1");
    AmazonSQSClientMock clientMock=new AmazonSQSClientMock();
    populateMessages(clientMock);
    SimpleRegistry registry=new SimpleRegistry();
    DefaultCamelContext ctx=new DefaultCamelContext(registry);
    ctx.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(sqsURI).setHeader("login",constant(true)).filter(simple("${header.login} == true")).to("mock:result");
      }
    }
);
    MockEndpoint result=MockEndpoint.resolve(ctx,"mock:result");
    registry.put("amazonSQSClient",clientMock);
    clientMock.setScheduler(ctx.getExecutorServiceManager().newScheduledThreadPool(clientMock,"ClientMock Scheduler",1));
    result.expectedMessageCount(1);
    ctx.start();
    assertIsSatisfied(2000,TimeUnit.MILLISECONDS);
    String response=ctx.createConsumerTemplate().receiveBody(sqsURI,5000,String.class);
    assertNull(response);
    ctx.stop();
    clientMock.shutdown();
  }
}
