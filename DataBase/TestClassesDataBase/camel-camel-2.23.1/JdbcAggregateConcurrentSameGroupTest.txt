public class JdbcAggregateConcurrentSameGroupTest extends AbstractJdbcAggregationTestSupport {
  @Test public void testNoConcurrentProducers() throws Exception {
    doSendMessages(1,1);
  }
  @Test public void testConcurrentProducers() throws Exception {
    doSendMessages(10,5);
  }
  @Test public void testMoreConcurrentProducers() throws Exception {
    doSendMessages(50,10);
  }
  private void doSendMessages(  int files,  int poolSize) throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:aggregated");
    mock.setResultWaitTime(30 * 1000L);
    mock.expectedMessageCount(1);
    ExecutorService executor=Executors.newFixedThreadPool(poolSize);
    for (int i=0; i < files; i++) {
      final int index=i;
      executor.submit(new Callable<Object>(){
        public Object call() throws Exception {
          template.sendBodyAndHeader("direct:start",index,"id",123);
          Thread.sleep(3);
          return null;
        }
      }
);
    }
    assertMockEndpointsSatisfied();
    executor.shutdownNow();
  }
  @Override long getCompletionInterval(){
    return 1000;
  }
}
