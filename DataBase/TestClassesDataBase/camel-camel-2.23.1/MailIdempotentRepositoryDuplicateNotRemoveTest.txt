/** 
 * Unit test for idempotent repository.
 */
public class MailIdempotentRepositoryDuplicateNotRemoveTest extends MailIdempotentRepositoryDuplicateTest {
  @Test public void testIdempotent() throws Exception {
    assertEquals(1,myRepo.getCacheSize());
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Message 0","Message 1","Message 2","Message 4");
    context.startRoute("foo");
    assertMockEndpointsSatisfied();
    Thread.sleep(500);
    assertEquals(0,Mailbox.get("jones@localhost").getNewMessageCount());
    assertEquals(5,myRepo.getCacheSize());
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("imap://jones@localhost?password=secret&idempotentRepository=#myRepo&idempotentRepositoryRemoveOnCommit=false&consumer.initialDelay=100&consumer.delay=100").routeId("foo").noAutoStartup().to("mock:result");
      }
    }
;
  }
}
