/** 
 * Test class for component configuration validation.
 */
public class ComponentConfigurationIntegrationTest extends AbstractLinkedInTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(ComponentConfigurationIntegrationTest.class);
  private static final String PATH_PREFIX="comments";
  @Override protected CamelContext createCamelContext() throws Exception {
    final CamelContext camelContext=super.createCamelContext();
    camelContext.getComponent("linkedin",LinkedInComponent.class).getConfiguration().setClientId("bad_client_id");
    return camelContext;
  }
  @Test public void testGetComment() throws Exception {
    final Map<String,Object> headers=new HashMap<>();
    headers.put("CamelLinkedIn.comment_id","123");
    headers.put("CamelLinkedIn.fields","");
    try {
      requestBodyAndHeaders("direct://GETCOMMENT",null,headers);
      fail("Bad client Id must cause an exception on first message");
    }
 catch (    CamelExecutionException e) {
      Throwable t=e;
      while (t.getCause() != null && t.getCause() != t) {
        t=t.getCause();
      }
      if (!(t instanceof IllegalArgumentException)) {
        throw e;
      }
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://GETCOMMENT").to("linkedin://" + PATH_PREFIX + "/getComment");
      }
    }
;
  }
}
