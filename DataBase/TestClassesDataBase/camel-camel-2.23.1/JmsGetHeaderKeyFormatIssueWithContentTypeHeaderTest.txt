/** 
 * Unit test to verify that we can route a JMS message and do header lookup by name without mutating it and that it can handle the default keyFormatStrategy with _HYPHEN_ in the key name 
 * @version 
 */
public class JmsGetHeaderKeyFormatIssueWithContentTypeHeaderTest extends CamelTestSupport {
  private String uri="activemq:queue:hello?jmsKeyFormatStrategy=default";
  @Test public void testSendWithHeaders() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isEqualTo("Hello World");
    mock.message(0).header("Content-Type").isEqualTo("text/plain");
    MockEndpoint copy=getMockEndpoint("mock:copy");
    copy.expectedMessageCount(1);
    copy.message(0).body().isEqualTo("Hello World");
    copy.message(0).header("Content-Type").isEqualTo("text/plain");
    template.sendBodyAndHeader(uri,"Hello World","Content-Type","text/plain");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(uri).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("text/plain",exchange.getIn().getHeader("Content-Type"));
            JmsMessage msg=assertIsInstanceOf(JmsMessage.class,exchange.getIn());
            assertNotNull("javax.jms.Message should not be null",msg.getJmsMessage());
          }
        }
).to("activemq:queue:copy","mock:result");
        from("activemq:queue:copy").to("mock:copy");
      }
    }
;
  }
}
