public class RssEntryPollingConsumerWithFilterTest extends CamelTestSupport {
  @Test public void testListOfEntriesIsSplitIntoPieces() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(2);
    mock.assertIsSatisfied();
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    Calendar cal=Calendar.getInstance(TimeZone.getTimeZone("GMT-5:00"));
    cal.set(2008,Calendar.OCTOBER,31,12,02,21);
    answer.bind("myBean",new MyBean(cal.getTime()));
    return answer;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("rss:file:src/test/data/rss20.xml?splitEntries=true&consumer.delay=100").filter().method("myBean","isAfterDate").to("mock:result");
      }
    }
;
  }
public static class MyBean {
    private final Date time;
    public MyBean(    Date time){
      this.time=time;
    }
    public boolean isAfterDate(    Exchange ex){
      SyndFeed feed=ex.getIn().getBody(SyndFeed.class);
      assertTrue(feed.getEntries().size() == 1);
      SyndEntry entry=(SyndEntry)feed.getEntries().get(0);
      return entry.getPublishedDate().after(time);
    }
  }
}
