public class TrustManagersParametersTest extends AbstractJsseParametersTest {
  protected KeyStoreParameters createMinimalKeyStoreParameters(){
    KeyStoreParameters ksp=new KeyStoreParameters();
    ksp.setResource("org/apache/camel/util/jsse/localhost.ks");
    ksp.setPassword("changeit");
    return ksp;
  }
  protected TrustManagersParameters createMinimalTrustManagersParameters(){
    TrustManagersParameters tmp=new TrustManagersParameters();
    tmp.setKeyStore(this.createMinimalKeyStoreParameters());
    return tmp;
  }
  @Test public void testPropertyPlaceholders() throws Exception {
    CamelContext context=this.createPropertiesPlaceholderAwareContext();
    KeyStoreParameters ksp=new KeyStoreParameters();
    ksp.setCamelContext(context);
    ksp.setType("{{keyStoreParameters.type}}");
    ksp.setProvider("{{keyStoreParameters.provider}}");
    ksp.setResource("{{keyStoreParameters.resource}}");
    ksp.setPassword("{{keyStoreParamerers.password}}");
    TrustManagersParameters tmp=new TrustManagersParameters();
    tmp.setCamelContext(context);
    tmp.setKeyStore(ksp);
    tmp.setAlgorithm("{{trustManagersParameters.algorithm}}");
    tmp.setProvider("{{trustManagersParameters.provider}}");
    TrustManager[] tms=tmp.createTrustManagers();
    validateTrustManagers(tms);
  }
  @Test public void testCustomTrustManager() throws Exception {
    TrustManager myTm=new TrustManager(){
    }
;
    TrustManagersParameters tmp=new TrustManagersParameters();
    tmp.setTrustManager(myTm);
    TrustManager[] tms=tmp.createTrustManagers();
    assertSame(myTm,tms[0]);
  }
  @Test public void testCreateTrustManagers() throws Exception {
    TrustManagersParameters tmp=this.createMinimalTrustManagersParameters();
    TrustManager[] tms=tmp.createTrustManagers();
    validateTrustManagers(tms);
  }
  @Test public void testExplicitAlgorithm() throws Exception {
    TrustManagersParameters tmp=this.createMinimalTrustManagersParameters();
    tmp.setAlgorithm(KeyManagerFactory.getDefaultAlgorithm());
    TrustManager[] tms=tmp.createTrustManagers();
    validateTrustManagers(tms);
  }
  @Test public void testExplicitProvider() throws Exception {
    TrustManagersParameters tmp=this.createMinimalTrustManagersParameters();
    tmp.setProvider(KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm()).getProvider().getName());
    TrustManager[] tms=tmp.createTrustManagers();
    validateTrustManagers(tms);
  }
  @Test public void testInvalidExplicitAlgorithm() throws Exception {
    TrustManagersParameters tmp=this.createMinimalTrustManagersParameters();
    tmp.setAlgorithm("dsfsdfsdfdsfdsF");
    try {
      tmp.createTrustManagers();
      fail();
    }
 catch (    NoSuchAlgorithmException e) {
    }
  }
  @Test public void testInvalidExplicitProvider() throws Exception {
    TrustManagersParameters tmp=this.createMinimalTrustManagersParameters();
    tmp.setProvider("dsfsdfsdfdsfdsF");
    try {
      tmp.createTrustManagers();
      fail();
    }
 catch (    NoSuchProviderException e) {
    }
  }
  protected void validateTrustManagers(  TrustManager[] tms){
    assertEquals(1,tms.length);
    assertTrue(tms[0] instanceof X509TrustManager);
    X509TrustManager tm=(X509TrustManager)tms[0];
    assertNotNull(tm.getAcceptedIssuers());
  }
}
