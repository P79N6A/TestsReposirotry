@Ignore("Manual test as you need to start a Kestrel broker") public class KestrelProduceAndConsumeTest extends CamelTestSupport {
  @EndpointInject(uri="kestrel://cameltest2") private ProducerTemplate producerTemplate;
  @Test public void testProduceAndConsume() throws Exception {
    List<String> bodies=new ArrayList<>();
    for (int k=0; k < 10; ++k) {
      bodies.add("this is body #" + k);
    }
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(bodies.size());
    mock.expectedBodiesReceivedInAnyOrder(bodies);
    for (    String body : bodies) {
      producerTemplate.sendBody(body);
    }
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("kestrel://cameltest2?concurrentConsumers=3").to("log:incoming").to("mock:result");
      }
    }
;
  }
}
