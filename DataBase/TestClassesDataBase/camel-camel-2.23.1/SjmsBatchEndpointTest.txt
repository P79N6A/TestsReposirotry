public class SjmsBatchEndpointTest extends CamelTestSupport {
  public static EmbeddedActiveMQBroker broker;
  @BeforeClass public static void setupBroker(){
    broker=new EmbeddedActiveMQBroker("localhost");
    try {
      broker.before();
    }
 catch (    Throwable t) {
      throw new RuntimeException(t);
    }
  }
  @AfterClass public static void shutDownBroker(){
    broker.after();
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    SimpleRegistry registry=new SimpleRegistry();
    registry.put("aggStrategy",AggregationStrategies.groupedExchange());
    ActiveMQConnectionFactory connectionFactory=new ActiveMQConnectionFactory();
    connectionFactory.setBrokerURL(broker.getTcpConnectorUri());
    SjmsComponent sjmsComponent=new SjmsComponent();
    sjmsComponent.setConnectionFactory(connectionFactory);
    SjmsBatchComponent sjmsBatchComponent=new SjmsBatchComponent();
    sjmsBatchComponent.setConnectionFactory(connectionFactory);
    CamelContext context=new DefaultCamelContext(registry);
    context.addComponent("sjms-batch",sjmsBatchComponent);
    context.addComponent("sjms",sjmsComponent);
    return context;
  }
  @Override public boolean isUseAdviceWith(){
    return true;
  }
  @Test(expected=FailedToCreateRouteException.class) public void testProducerFailure() throws Exception {
    context.addRoutes(new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:in").to("sjms-batch:testQueue?aggregationStrategy=#unknown");
      }
    }
);
    context.start();
  }
  @Test(expected=FailedToCreateRouteException.class) public void testConsumerNegativePollDuration() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("sjms-batch:in?aggregationStrategy=#aggStrategy&pollDuration=-1").to("mock:out");
      }
    }
);
    context.start();
  }
  @Test(expected=FailedToCreateRouteException.class) public void testConsumerNegativeConsumerCount() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("sjms-batch:in?aggregationStrategy=#aggStrategy&consumerCount=-1").to("mock:out");
      }
    }
);
    context.start();
  }
  @Test(expected=FailedToCreateRouteException.class) public void testConsumerTopic() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("sjms-batch:topic:in?aggregationStrategy=#aggStrategy").to("mock:out");
      }
    }
);
    context.start();
  }
}
