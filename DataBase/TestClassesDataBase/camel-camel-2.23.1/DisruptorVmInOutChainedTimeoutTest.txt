/** 
 * @version
 */
public class DisruptorVmInOutChainedTimeoutTest extends AbstractVmTestSupport {
  @Test public void testDisruptorVmInOutChainedTimeout() throws Exception {
    StopWatch watch=new StopWatch();
    try {
      template2.requestBody("disruptor-vm:a?timeout=1000","Hello World");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      ExchangeTimedOutException cause=assertIsInstanceOf(ExchangeTimedOutException.class,e.getCause());
      assertEquals(200,cause.getTimeout());
    }
    long delta=watch.stop();
    assertTrue("Should be faster than 1 sec, was: " + delta,delta < 1100);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("disruptor-vm:b").to("mock:b").delay(500).transform().constant("Bye World");
      }
    }
;
  }
  @Override protected RouteBuilder createRouteBuilderForSecondContext() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(noErrorHandler());
        from("disruptor-vm:a").to("mock:a").to("disruptor-vm:b?timeout=200").to("mock:a2");
      }
    }
;
  }
}
