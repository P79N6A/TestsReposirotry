/** 
 * @version 
 */
public class BeanRegistryBeanTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyFooBean());
    jndi.bind("static",MyFooBean.class);
    return jndi;
  }
  @Test public void testNoBean(){
    RegistryBean rb=new RegistryBean(context,"bar");
    try {
      rb.getBean();
      fail("Should have thrown exception");
    }
 catch (    NoSuchBeanException e) {
      assertEquals("bar",e.getName());
    }
  }
  @Test public void testBean(){
    RegistryBean rb=new RegistryBean(context,"foo");
    Object bean=rb.getBean();
    assertIsInstanceOf(MyFooBean.class,bean);
    assertNotNull(rb.getContext());
    assertEquals("foo",rb.getName());
    assertNotNull(rb.getParameterMappingStrategy());
    assertNotNull(rb.getRegistry());
  }
  @Test public void testParameterMappingStrategy(){
    RegistryBean rb=new RegistryBean(context,"foo");
    ParameterMappingStrategy myStrategy=new ParameterMappingStrategy(){
      public Expression getDefaultParameterTypeExpression(      Class<?> parameterType){
        return null;
      }
    }
;
    rb.setParameterMappingStrategy(myStrategy);
    Object bean=rb.getBean();
    assertIsInstanceOf(MyFooBean.class,bean);
    assertNotNull(rb.getContext());
    assertEquals("foo",rb.getName());
    assertEquals(myStrategy,rb.getParameterMappingStrategy());
    assertNotNull(rb.getRegistry());
  }
  @Test public void testLookupClass() throws Exception {
    RegistryBean rb=new RegistryBean(context,"static");
    Object bean=rb.getBean();
    MyFooBean foo=assertIsInstanceOf(MyFooBean.class,bean);
    assertEquals("foofoo",foo.echo("foo"));
  }
  @Test public void testLookupFQNClass() throws Exception {
    RegistryBean rb=new RegistryBean(context,"org.apache.camel.component.bean.MyDummyBean");
    Object bean=rb.getBean();
    MyDummyBean dummy=assertIsInstanceOf(MyDummyBean.class,bean);
    assertEquals("Hello World",dummy.hello("World"));
  }
public static class MyFooBean {
    public String echo(    String s){
      return s + s;
    }
  }
}
