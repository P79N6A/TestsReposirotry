/** 
 * @version 
 */
public class XsltOutputFileTest extends ContextTestSupport {
  @Test public void testXsltOutputFile() throws Exception {
    createDirectory("target/xslt");
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("<?xml version=\"1.0\" encoding=\"UTF-8\"?><goodbye>world!</goodbye>");
    mock.expectedFileExists("target/xslt/xsltme.xml");
    mock.message(0).body().isInstanceOf(File.class);
    template.sendBodyAndHeader("direct:start","<hello>world!</hello>",Exchange.XSLT_FILE_NAME,"target/xslt/xsltme.xml");
    mock.assertIsSatisfied();
  }
  @Test public void testXsltOutputFileMissingHeader() throws Exception {
    try {
      template.sendBody("direct:start","<hello>world!</hello>");
      fail("Should thrown exception");
    }
 catch (    CamelExecutionException e) {
      NoSuchHeaderException nshe=assertIsInstanceOf(NoSuchHeaderException.class,e.getCause());
      assertEquals(Exchange.XSLT_FILE_NAME,nshe.getHeaderName());
    }
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure() throws Exception {
        URL styleSheet=getClass().getResource("example.xsl");
        from("direct:start").process(xslt(styleSheet).outputFile()).to("mock:result");
      }
    }
;
  }
}
