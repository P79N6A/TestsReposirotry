@Deprecated public class SearchEventTest extends CamelTwitterTestSupport {
  @EndpointInject(uri="mock:result") protected MockEndpoint resultEndpoint;
  private TwitterStream twitterStream;
  private StatusListener listener;
  @Test public void testSearchTimeline() throws Exception {
    resultEndpoint.expectedMinimumMessageCount(1);
    Status status=(Status)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{Status.class},new TwitterHandler());
    listener.onStatus(status);
    resultEndpoint.assertIsSatisfied();
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("twitter://streaming/filter?type=event&twitterStream=#twitterStream&keywords=#cameltest").transform(body().convertToString()).to("mock:result");
      }
    }
;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    twitterStream=(TwitterStream)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{TwitterStream.class},new TwitterHandler());
    JndiRegistry registry=super.createRegistry();
    registry.bind("twitterStream",twitterStream);
    return registry;
  }
public class TwitterHandler implements InvocationHandler {
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if ("addListener".equals(method.getName())) {
        listener=(StatusListener)args[0];
      }
 else       if ("toString".equals(method.getName())) {
        return this.toString();
      }
 else       if ("getText".equals(method.getName())) {
        return "#cameltest tweet";
      }
 else       if ("getUser".equals(method.getName())) {
        return Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{twitter4j.User.class},new TwitterHandler());
      }
      return null;
    }
  }
}
