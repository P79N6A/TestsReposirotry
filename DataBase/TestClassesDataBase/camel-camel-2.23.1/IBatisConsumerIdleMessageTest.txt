/** 
 * Test to verify that the polling consumer delivers an empty Exchange when the sendEmptyMessageWhenIdle property is set and a polling event yields no results.
 */
public class IBatisConsumerIdleMessageTest extends IBatisTestSupport {
  @Override protected boolean createTestData(){
    return false;
  }
  @Test public void testConsumeIdleMessages() throws Exception {
    Thread.sleep(110);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(2);
    assertMockEndpointsSatisfied();
    assertTrue(mock.getExchanges().get(0).getIn().getBody() == null);
    assertTrue(mock.getExchanges().get(1).getIn().getBody() == null);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("ibatis:selectAllAccounts?delay=50&consumer.useIterator=false&consumer.routeEmptyResultSet=false" + "&sendEmptyMessageWhenIdle=true").to("mock:result");
      }
    }
;
  }
}
