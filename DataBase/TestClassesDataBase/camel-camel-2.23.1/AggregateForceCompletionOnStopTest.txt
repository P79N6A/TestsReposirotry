/** 
 * @version 
 */
public class AggregateForceCompletionOnStopTest extends ContextTestSupport {
  @Test public void testForceCompletionTrue() throws Exception {
    MyCompletionProcessor myCompletionProcessor=context.getRegistry().lookupByNameAndType("myCompletionProcessor",MyCompletionProcessor.class);
    myCompletionProcessor.reset();
    context.getShutdownStrategy().setShutdownNowOnTimeout(true);
    context.getShutdownStrategy().setTimeout(5);
    template.sendBodyAndHeader("direct:forceCompletionTrue","test1","id","1");
    template.sendBodyAndHeader("direct:forceCompletionTrue","test2","id","2");
    template.sendBodyAndHeader("direct:forceCompletionTrue","test3","id","1");
    template.sendBodyAndHeader("direct:forceCompletionTrue","test4","id","2");
    assertEquals("aggregation should not have completed yet",0,myCompletionProcessor.getAggregationCount());
    context.stop();
    assertEquals("aggregation should have completed",2,myCompletionProcessor.getAggregationCount());
  }
  @Test public void testForceCompletionFalse() throws Exception {
    MyCompletionProcessor myCompletionProcessor=context.getRegistry().lookupByNameAndType("myCompletionProcessor",MyCompletionProcessor.class);
    myCompletionProcessor.reset();
    context.getShutdownStrategy().setShutdownNowOnTimeout(true);
    context.getShutdownStrategy().setTimeout(5);
    template.sendBodyAndHeader("direct:forceCompletionFalse","test1","id","1");
    template.sendBodyAndHeader("direct:forceCompletionFalse","test2","id","2");
    template.sendBodyAndHeader("direct:forceCompletionFalse","test3","id","1");
    template.sendBodyAndHeader("direct:forceCompletionFalse","test4","id","2");
    assertEquals("aggregation should not have completed yet",0,myCompletionProcessor.getAggregationCount());
    context.stop();
    assertEquals("aggregation should not have completed yet",0,myCompletionProcessor.getAggregationCount());
  }
  @Test public void testStopRouteForceCompletionTrue() throws Exception {
    MyCompletionProcessor myCompletionProcessor=context.getRegistry().lookupByNameAndType("myCompletionProcessor",MyCompletionProcessor.class);
    myCompletionProcessor.reset();
    context.getShutdownStrategy().setShutdownNowOnTimeout(true);
    context.getShutdownStrategy().setTimeout(5);
    template.sendBodyAndHeader("direct:forceCompletionTrue","test1","id","1");
    template.sendBodyAndHeader("direct:forceCompletionTrue","test2","id","2");
    template.sendBodyAndHeader("direct:forceCompletionTrue","test3","id","1");
    template.sendBodyAndHeader("direct:forceCompletionTrue","test4","id","2");
    assertEquals("aggregation should not have completed yet",0,myCompletionProcessor.getAggregationCount());
    context.stopRoute("foo");
    assertEquals("aggregation should have completed",2,myCompletionProcessor.getAggregationCount());
  }
  @Test public void testStopRouteForceCompletionFalse() throws Exception {
    MyCompletionProcessor myCompletionProcessor=context.getRegistry().lookupByNameAndType("myCompletionProcessor",MyCompletionProcessor.class);
    myCompletionProcessor.reset();
    context.getShutdownStrategy().setShutdownNowOnTimeout(true);
    context.getShutdownStrategy().setTimeout(5);
    template.sendBodyAndHeader("direct:forceCompletionFalse","test1","id","1");
    template.sendBodyAndHeader("direct:forceCompletionFalse","test2","id","2");
    template.sendBodyAndHeader("direct:forceCompletionFalse","test3","id","1");
    template.sendBodyAndHeader("direct:forceCompletionFalse","test4","id","2");
    assertEquals("aggregation should not have completed yet",0,myCompletionProcessor.getAggregationCount());
    context.stopRoute("bar");
    assertEquals("aggregation should not have completed yet",0,myCompletionProcessor.getAggregationCount());
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myCompletionProcessor",new MyCompletionProcessor());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:forceCompletionTrue").routeId("foo").aggregate(header("id"),new BodyInAggregatingStrategy()).forceCompletionOnStop().completionSize(10).delay(100).process("myCompletionProcessor");
        from("direct:forceCompletionFalse").routeId("bar").aggregate(header("id"),new BodyInAggregatingStrategy()).completionSize(10).delay(100).process("myCompletionProcessor");
      }
    }
;
  }
}
