/** 
 * @version 
 */
public class NagiosXorEncryptionTest extends CamelTestSupport {
  protected boolean canRun;
  @Mock private PassiveCheckSender nagiosPassiveCheckSender=Mockito.mock(NagiosPassiveCheckSender.class);
  @Before @Override public void setUp() throws Exception {
    canRun=true;
    super.setUp();
  }
  @Test public void testSendToNagios() throws Exception {
    if (!canRun) {
      return;
    }
    MessagePayload expectedPayload=new MessagePayload("localhost",Level.OK,context.getName(),"Hello Nagios");
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.allMessages().body().isInstanceOf(String.class);
    template.sendBody("direct:start","Hello Nagios");
    assertMockEndpointsSatisfied();
    verify(nagiosPassiveCheckSender,times(1)).send(expectedPayload);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        String uri="nagios:127.0.0.1:25664?password=secret&encryption=Xor";
        NagiosComponent nagiosComponent=new NagiosComponent();
        nagiosComponent.setCamelContext(context);
        NagiosEndpoint nagiosEndpoint=(NagiosEndpoint)nagiosComponent.createEndpoint(uri);
        nagiosEndpoint.setSender(nagiosPassiveCheckSender);
        nagiosEndpoint.createProducer();
        from("direct:start").to(nagiosEndpoint).to("mock:result");
      }
    }
;
  }
}
