/** 
 * @version 
 */
public class JmsMutateRemoveHeaderMessageTest extends CamelTestSupport {
  private String uri="activemq:queue:hello";
  @Test public void testMutateMessage() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isEqualTo("Hello World");
    mock.message(0).header("HEADER_1").isNull();
    template.sendBodyAndHeader(uri,"Hello World","HEADER_1","VALUE_1");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(uri).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            JmsMessage msg=assertIsInstanceOf(JmsMessage.class,exchange.getIn());
            assertNotNull("javax.jms.Message should not be null",msg.getJmsMessage());
            assertEquals("VALUE_1",exchange.getIn().getHeader("HEADER_1"));
          }
        }
).removeHeader("HEADER_1").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            JmsMessage msg=assertIsInstanceOf(JmsMessage.class,exchange.getIn());
            assertNotNull("javax.jms.Message should not be null",msg.getJmsMessage());
            assertNull("Header should have been removed",exchange.getIn().getHeader("HEADER_1"));
          }
        }
).to("mock:result");
      }
    }
;
  }
}
