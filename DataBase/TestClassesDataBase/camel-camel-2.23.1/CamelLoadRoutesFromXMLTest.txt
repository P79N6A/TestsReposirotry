public class CamelLoadRoutesFromXMLTest extends SpringTestSupport {
  protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/spring/camelLoadRoutesFromXMLTest.xml");
  }
  @Test public void testLoadRoutes() throws Exception {
    SpringCamelContext camel=applicationContext.getBean(SpringCamelContext.class);
    assertEquals(0,camel.getRoutes().size());
    assertTrue(camel.getStatus().isStarted());
    InputStream is=this.getClass().getResourceAsStream("myRoutes.xml");
    RoutesDefinition routes=camel.loadRoutesDefinition(is);
    camel.addRouteDefinitions(routes.getRoutes());
    assertEquals(2,camel.getRoutes().size());
    assertTrue(camel.getRouteStatus("foo").isStarted());
    assertTrue(camel.getRouteStatus("bar").isStarted());
    MockEndpoint foo=camel.getEndpoint("mock:foo",MockEndpoint.class);
    foo.expectedBodiesReceived("Hello World");
    MockEndpoint bar=camel.getEndpoint("mock:bar",MockEndpoint.class);
    bar.expectedBodiesReceived("Bye World");
    ProducerTemplate producer=camel.createProducerTemplate();
    producer.sendBody("direct:foo","Hello World");
    producer.sendBody("direct:bar","Bye World");
    MockEndpoint.assertIsSatisfied(foo,bar);
    camel.removeRouteDefinitions(routes.getRoutes());
    assertNull(camel.getRouteStatus("foo"));
    assertNull(camel.getRouteStatus("bar"));
    is=this.getClass().getResourceAsStream("myUpdatedRoutes.xml");
    routes=camel.loadRoutesDefinition(is);
    camel.addRouteDefinitions(routes.getRoutes());
    assertEquals(2,camel.getRoutes().size());
    assertTrue(camel.getRouteStatus("foo").isStarted());
    assertTrue(camel.getRouteStatus("bar").isStarted());
    foo=camel.getEndpoint("mock:foo",MockEndpoint.class);
    foo.expectedBodiesReceived("Updated: Hello World");
    bar=camel.getEndpoint("mock:bar",MockEndpoint.class);
    bar.expectedBodiesReceived("Updated: Bye World");
    producer.sendBody("direct:foo","Hello World");
    producer.sendBody("direct:bar","Bye World");
    MockEndpoint.assertIsSatisfied(foo,bar);
  }
}
