public class PgEventPubSubIntegrationTest extends AbstractPgEventIntegrationTest {
  @EndpointInject(uri="pgevent://{{host}}:{{port}}/{{database}}/testchannel?user={{userName}}&pass={{password}}") private Endpoint subscribeEndpoint;
  @EndpointInject(uri="pgevent://{{host}}:{{port}}/{{database}}/testchannel?user={{userName}}&pass={{password}}") private Endpoint notifyEndpoint;
  @EndpointInject(uri="timer://test?repeatCount=1&period=1") private Endpoint timerEndpoint;
  @EndpointInject(uri="mock:result") private MockEndpoint mockEndpoint;
  @Test public void testPgEventPublishSubscribe() throws Exception {
    mockEndpoint.expectedBodiesReceived(TEST_MESSAGE_BODY);
    mockEndpoint.assertIsSatisfied(5000);
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(timerEndpoint).setBody(constant(TEST_MESSAGE_BODY)).to(notifyEndpoint);
        from(subscribeEndpoint).to(mockEndpoint);
      }
    }
;
  }
}
