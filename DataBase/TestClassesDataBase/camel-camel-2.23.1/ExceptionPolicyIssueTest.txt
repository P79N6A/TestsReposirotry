/** 
 * @version 
 */
public class ExceptionPolicyIssueTest extends ContextTestSupport {
  @Test public void testOnExceptionWithGenericException() throws Exception {
    getMockEndpoint("mock:exception").expectedMessageCount(0);
    getMockEndpoint("mock:ue").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(MyUnmarshalException.class).handled(true).to("mock:ue");
        onException(Exception.class).handled(true).to("mock:exception");
        from("direct:start").throwException(new MyUnmarshalException("Could not unmarshal",new IllegalArgumentException("Damn")));
      }
    }
;
  }
private static final class MyUnmarshalException extends Exception {
    private static final long serialVersionUID=1L;
    private MyUnmarshalException(    String message,    Throwable cause){
      super(message,cause);
    }
  }
}
