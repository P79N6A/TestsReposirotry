public class IBatisQueryForUpdateTest extends IBatisTestSupport {
  @Test public void testUpdate() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    Account account=new Account();
    account.setId(456);
    account.setFirstName("Claus");
    account.setLastName("Jensen");
    account.setEmailAddress("Other@gmail.com");
    template.sendBody("direct:start",account);
    assertMockEndpointsSatisfied();
    Integer rows=template.requestBody("ibatis:count?statementType=QueryForObject",null,Integer.class);
    assertEquals("There should be 2 rows",2,rows.intValue());
    Account claus=template.requestBody("ibatis:selectAccountById?statementType=QueryForObject",456,Account.class);
    assertEquals("Claus",claus.getFirstName());
    assertEquals("Jensen",claus.getLastName());
    assertEquals("Other@gmail.com",claus.getEmailAddress());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("ibatis:updateAccount?statementType=Update").to("mock:result");
      }
    }
;
  }
}
