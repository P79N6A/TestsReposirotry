@ContextConfiguration public class BindySimpleCsvMarshallPositionModifiedTest extends CommonBindyTest {
  private List<Map<String,Object>> models=new ArrayList<>();
  private String expected;
  @Test @DirtiesContext public void testReverseMessage() throws Exception {
    expected="08-01-2009,EUR,400.25,Share,BUY,BE12345678,ISIN,Knightley,Keira,B2,1\r\n";
    result.expectedBodiesReceived(expected);
    template.sendBody(generateModel());
    result.assertIsSatisfied();
  }
  public List<Map<String,Object>> generateModel(){
    Map<String,Object> model=new HashMap<>();
    Order order=new Order();
    order.setOrderNr(1);
    order.setOrderType("BUY");
    order.setClientNr("B2");
    order.setFirstName("Keira");
    order.setLastName("Knightley");
    order.setAmount(new BigDecimal("400.25"));
    order.setInstrumentCode("ISIN");
    order.setInstrumentNumber("BE12345678");
    order.setInstrumentType("Share");
    order.setCurrency("EUR");
    Calendar calendar=new GregorianCalendar();
    calendar.set(2009,0,8);
    order.setOrderDate(calendar.getTime());
    model.put(order.getClass().getName(),order);
    models.add(model);
    return models;
  }
public static class ContextConfig extends RouteBuilder {
    public void configure(){
      Tracer tracer=new Tracer();
      tracer.setLogLevel(LoggingLevel.ERROR);
      tracer.setLogName("org.apache.camel.bindy");
      getContext().addInterceptStrategy(tracer);
      BindyCsvDataFormat csvBindyDataFormat=new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.model.simple.oneclassdifferentposition.Order.class);
      csvBindyDataFormat.setLocale("en");
      errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0));
      onException(Exception.class).maximumRedeliveries(0).handled(true);
      from(URI_DIRECT_START).marshal(csvBindyDataFormat).to(URI_MOCK_RESULT);
    }
  }
}
