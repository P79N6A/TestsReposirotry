/** 
 * To demonstrate transacted with minimal configuration.
 */
public class TransactionMinimalConfigurationTest extends CamelSpringTestSupport {
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("/org/apache/camel/component/jms/tx/TransactionMinimalConfigurationTest.xml");
  }
  @Test public void testTransactionSuccess() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("Bye World");
    mock.message(0).header("count").isEqualTo(3);
    mock.message(0).header("JMSRedelivered").isEqualTo(true);
    mock.message(0).header(Exchange.REDELIVERED).isNull();
    mock.message(0).header(Exchange.REDELIVERY_COUNTER).isNull();
    template.sendBody("activemq:queue:okay","Hello World");
    mock.assertIsSatisfied();
  }
public static class MyProcessor implements Processor {
    private int count;
    public void process(    Exchange exchange) throws Exception {
      if (++count <= 2) {
        throw new IllegalArgumentException("Forced Exception number " + count + ", please retry");
      }
      exchange.getIn().setBody("Bye World");
      exchange.getIn().setHeader("count",count);
    }
  }
}
