/** 
 * @version 
 */
public class SplitterMethodCallTest extends ContextTestSupport {
  @Test public void testSplitUsingMethodCall() throws Exception {
    MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
    resultEndpoint.expectedBodiesReceived("Claus","James","Willem");
    template.sendBody("direct:start","Claus@James@Willem");
    assertMockEndpointsSatisfied();
  }
  protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("splitterBean",new SplitWordsBean());
    return jndi;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").split().method("splitterBean","splitWords").to("mock:result");
      }
    }
;
  }
public static final class SplitWordsBean {
    private SplitWordsBean(){
    }
    public static List<String> splitWords(    String body){
      return Arrays.asList(body.split("@"));
    }
  }
}
