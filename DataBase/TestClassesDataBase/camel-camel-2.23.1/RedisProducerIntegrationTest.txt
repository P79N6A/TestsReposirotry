@Ignore public class RedisProducerIntegrationTest extends RedisTestSupport {
  private static final JedisConnectionFactory CONNECTION_FACTORY=new JedisConnectionFactory();
static {
    CONNECTION_FACTORY.afterPropertiesSet();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    redisTemplate=new RedisTemplate<>();
    redisTemplate.setConnectionFactory(CONNECTION_FACTORY);
    redisTemplate.afterPropertiesSet();
    registry.bind("redisTemplate",redisTemplate);
    return registry;
  }
  @Test public void shouldSetAString() throws Exception {
    sendHeaders(RedisConstants.COMMAND,"SET",RedisConstants.KEY,"key1",RedisConstants.VALUE,"value");
    assertEquals("value",redisTemplate.opsForValue().get("key1"));
  }
  @Test public void shouldGetAString() throws Exception {
    redisTemplate.opsForValue().set("key2","value");
    Object result=sendHeaders(RedisConstants.KEY,"key2",RedisConstants.COMMAND,"GET");
    assertEquals("value",result);
  }
}
