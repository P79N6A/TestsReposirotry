public class CombinedServiceDiscoveryTest extends ContextTestSupport {
  @Test public void testCombinedServiceDiscovery() throws Exception {
    StaticServiceDiscovery discovery1=new StaticServiceDiscovery();
    discovery1.addServer(new DefaultServiceDefinition("discovery1","localhost",1111));
    discovery1.addServer(new DefaultServiceDefinition("discovery1","localhost",1112));
    StaticServiceDiscovery discovery2=new StaticServiceDiscovery();
    discovery2.addServer(new DefaultServiceDefinition("discovery1","localhost",1113));
    discovery2.addServer(new DefaultServiceDefinition("discovery2","localhost",1114));
    CombinedServiceDiscovery discovery=CombinedServiceDiscovery.wrap(discovery1,discovery2);
    Assert.assertEquals(3,discovery.getServices("discovery1").size());
    Assert.assertEquals(1,discovery.getServices("discovery2").size());
  }
  @Test public void testCombinedServiceDiscoveryConfiguration() throws Exception {
    StaticServiceCallServiceDiscoveryConfiguration staticConf1=new StaticServiceCallServiceDiscoveryConfiguration();
    staticConf1.setServers(Arrays.asList("discovery1@localhost:1111","discovery1@localhost:1112"));
    StaticServiceCallServiceDiscoveryConfiguration staticConf2=new StaticServiceCallServiceDiscoveryConfiguration();
    staticConf2.setServers(Arrays.asList("discovery1@localhost:1113","discovery2@localhost:1114"));
    CombinedServiceCallServiceDiscoveryConfiguration multiConf=new CombinedServiceCallServiceDiscoveryConfiguration();
    multiConf.setServiceDiscoveryConfigurations(Arrays.asList(staticConf1,staticConf2));
    CombinedServiceDiscovery discovery=(CombinedServiceDiscovery)multiConf.newInstance(context);
    Assert.assertEquals(2,discovery.getDelegates().size());
    Assert.assertEquals(3,discovery.getServices("discovery1").size());
    Assert.assertEquals(1,discovery.getServices("discovery2").size());
  }
  @Test public void testCombinedServiceDiscoveryConfigurationDsl() throws Exception {
    CombinedServiceCallServiceDiscoveryConfiguration multiConf=new CombinedServiceCallServiceDiscoveryConfiguration();
    multiConf.staticServiceDiscovery().setServers(Arrays.asList("discovery1@localhost:1111","discovery1@localhost:1112"));
    multiConf.staticServiceDiscovery().setServers(Arrays.asList("discovery1@localhost:1113","discovery2@localhost:1114"));
    CombinedServiceDiscovery discovery=(CombinedServiceDiscovery)multiConf.newInstance(context);
    Assert.assertEquals(2,discovery.getDelegates().size());
    Assert.assertEquals(3,discovery.getServices("discovery1").size());
    Assert.assertEquals(1,discovery.getServices("discovery2").size());
  }
  @Test public void testCombinedServiceDiscoveryConfigurationWithPlaceholders() throws Exception {
    System.setProperty("svc-list-1","discovery1@localhost:1111,discovery1@localhost:1112");
    System.setProperty("svc-list-2","discovery1@localhost:1113,discovery2@localhost:1114");
    CombinedServiceCallServiceDiscoveryConfiguration multiConf=new CombinedServiceCallServiceDiscoveryConfiguration();
    multiConf.staticServiceDiscovery().servers("{{svc-list-1}}");
    multiConf.staticServiceDiscovery().servers("{{svc-list-2}}");
    CombinedServiceDiscovery discovery=(CombinedServiceDiscovery)multiConf.newInstance(context);
    Assert.assertEquals(2,discovery.getDelegates().size());
    Assert.assertEquals(3,discovery.getServices("discovery1").size());
    Assert.assertEquals(1,discovery.getServices("discovery2").size());
  }
}
