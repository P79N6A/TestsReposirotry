/** 
 * @version 
 */
public class JmsRequestReplyManualWithJMSReplyToTest extends CamelTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Consume(uri="activemq:queue:foo") public void doSomething(  @Header("JMSReplyTo") Destination jmsReplyTo,  @Body String body) throws Exception {
    assertEquals("Hello World",body);
    String endpointName="activemq:" + jmsReplyTo.toString();
    template.sendBody(endpointName,"Bye World");
  }
  @Test public void testManualRequestReply() throws Exception {
    context.start();
    template.send("activemq:queue:foo?preserveMessageQos=true",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
        exchange.getIn().setHeader("JMSReplyTo","bar");
      }
    }
);
    String reply=consumer.receiveBody("activemq:queue:bar",5000,String.class);
    assertEquals("Bye World",reply);
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
}
