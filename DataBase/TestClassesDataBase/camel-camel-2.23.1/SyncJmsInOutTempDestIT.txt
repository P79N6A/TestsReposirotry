/** 
 * Integration test that verifies the ability of SJMS to correctly process synchronous InOut exchanges from both the Producer and Consumer perspective using a temporary destination.
 */
public class SyncJmsInOutTempDestIT extends JmsTestSupport {
  @Test public void testSynchronous() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(100);
    mock.expectsNoDuplicates(body());
    StopWatch watch=new StopWatch();
    for (int i=0; i < 100; i++) {
      template.sendBody("seda:start","" + i);
    }
    assertMockEndpointsSatisfied(20,TimeUnit.SECONDS);
    log.info("Took " + watch.stop() + " ms. to process 100 messages request/reply over JMS");
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:start").to("sjms:in.foo.tempQ?exchangePattern=InOut").to("mock:result");
        from("sjms:in.foo.tempQ?exchangePattern=InOut").log("Using ${threadName} to process ${body}").transform(body().prepend("Bye "));
      }
    }
;
  }
}
