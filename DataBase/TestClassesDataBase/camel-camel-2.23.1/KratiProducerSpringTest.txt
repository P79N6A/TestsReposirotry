public class KratiProducerSpringTest extends CamelSpringTestSupport {
  @Test public void testPut() throws Exception {
    MockEndpoint endpoint=context.getEndpoint("mock:results",MockEndpoint.class);
    endpoint.expectedMessageCount(3);
    template.sendBodyAndHeader("direct:put","TEST1",KratiConstants.KEY,"1");
    template.sendBodyAndHeader("direct:put","TEST2",KratiConstants.KEY,"2");
    template.sendBodyAndHeader("direct:put","TEST3",KratiConstants.KEY,"3");
    endpoint.assertIsSatisfied();
  }
  @Test public void testPutAndGet() throws Exception {
    MockEndpoint endpoint=context.getEndpoint("mock:results",MockEndpoint.class);
    endpoint.expectedMessageCount(3);
    template.sendBodyAndHeader("direct:put","TEST1",KratiConstants.KEY,"1");
    template.sendBodyAndHeader("direct:put","TEST2",KratiConstants.KEY,"2");
    template.sendBodyAndHeader("direct:put","TEST3",KratiConstants.KEY,"3");
    endpoint.assertIsSatisfied();
    Object result=template.requestBodyAndHeader("direct:get",null,KratiConstants.KEY,"3");
    assertEquals("TEST3",result);
  }
  @Test public void testPutDeleteAndGet() throws Exception {
    template.sendBodyAndHeader("direct:put","TEST1",KratiConstants.KEY,"1");
    template.sendBodyAndHeader("direct:put","TEST2",KratiConstants.KEY,"2");
    template.sendBodyAndHeader("direct:put","TEST3",KratiConstants.KEY,"3");
    template.requestBodyAndHeader("direct:delete",null,KratiConstants.KEY,"3");
    Object result=template.requestBodyAndHeader("direct:get",null,KratiConstants.KEY,"3");
    assertEquals(null,result);
  }
  @Test public void testPutDeleteAllAndGet() throws Exception {
    template.sendBodyAndHeader("direct:put","TEST1",KratiConstants.KEY,"1");
    template.sendBodyAndHeader("direct:put","TEST2",KratiConstants.KEY,"2");
    template.sendBodyAndHeader("direct:put","TEST3",KratiConstants.KEY,"3");
    template.requestBodyAndHeader("direct:deleteall",null,KratiConstants.KEY,"3");
    Object result=template.requestBodyAndHeader("direct:get",null,KratiConstants.KEY,"1");
    assertEquals(null,result);
    result=template.requestBodyAndHeader("direct:get",null,KratiConstants.KEY,"2");
    assertEquals(null,result);
    result=template.requestBodyAndHeader("direct:get",null,KratiConstants.KEY,"3");
    assertEquals(null,result);
  }
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("classpath:producer-test.xml");
  }
}
