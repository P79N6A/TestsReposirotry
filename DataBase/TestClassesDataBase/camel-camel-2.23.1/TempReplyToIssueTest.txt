/** 
 * @version 
 */
public class TempReplyToIssueTest extends CamelTestSupport {
  @Test public void testReplyToIssue() throws Exception {
    String out=template.requestBody("activemq:queue:test.queue","World",String.class);
    assertEquals("Hello Moon",out);
  }
  public String handleMessage(  @Header("JMSReplyTo") final Destination jmsReplyTo,  @Header("JMSCorrelationID") final String id,  @Body String body,  Exchange exchange) throws Exception {
    assertNotNull(jmsReplyTo);
    assertTrue("Should be a temp queue",jmsReplyTo.toString().startsWith("temp-queue"));
    ProducerTemplate producer=exchange.getContext().createProducerTemplate();
    producer.send("activemq:queue:xxx",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello Moon");
        exchange.getIn().setHeader("JMSCorrelationID",id);
        exchange.getIn().setHeader(JmsConstants.JMS_DESTINATION,jmsReplyTo);
      }
    }
);
    producer.stop();
    Thread.sleep(1000);
    return "Hello " + body;
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:test.queue").bean(TempReplyToIssueTest.class,"handleMessage");
      }
    }
;
  }
}
