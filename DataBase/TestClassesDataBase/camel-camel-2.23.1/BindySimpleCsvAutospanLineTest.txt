public class BindySimpleCsvAutospanLineTest extends CamelTestSupport {
  @Test public void testUnmarshalNoNeedToSpanLine() throws Exception {
    final MockEndpoint mock=getMockEndpoint("mock:unmarshal");
    mock.expectedMessageCount(1);
    template.sendBody("direct:unmarshal","1,hei,kommentar");
    assertMockEndpointsSatisfied();
    final SpanLastRecord order=mock.getReceivedExchanges().get(0).getIn().getBody(SpanLastRecord.class);
    assertEquals(1,order.getRecordId());
    assertEquals("hei",order.getName());
    assertEquals("kommentar",order.getComment());
  }
  @Test public void testUnmarshalSpanningLine() throws Exception {
    final MockEndpoint mock=getMockEndpoint("mock:unmarshal");
    mock.expectedMessageCount(1);
    template.sendBody("direct:unmarshal","1,hei,kommentar,test,noe,hei");
    assertMockEndpointsSatisfied();
    final SpanLastRecord order=mock.getReceivedExchanges().get(0).getIn().getBody(SpanLastRecord.class);
    assertEquals(1,order.getRecordId());
    assertEquals("hei",order.getName());
    assertEquals("kommentar,test,noe,hei",order.getComment());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        final BindyCsvDataFormat bindy=new BindyCsvDataFormat(SpanLastRecord.class);
        from("direct:unmarshal").unmarshal(bindy).to("mock:unmarshal");
      }
    }
;
  }
}
