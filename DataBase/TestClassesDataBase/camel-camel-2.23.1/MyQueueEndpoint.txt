private final class MyQueueEndpoint extends DefaultEndpoint {
  private EventDrivenPollingConsumer consumer;
  private MyQueueEndpoint(  String endpointUri,  Component component){
    super(endpointUri,component);
  }
  @Override public Producer createProducer() throws Exception {
    return new DefaultProducer(this){
      @Override public void process(      Exchange exchange) throws Exception {
        consumer.process(exchange);
      }
    }
;
  }
  @Override public Consumer createConsumer(  Processor processor) throws Exception {
    return consumer;
  }
  @Override public PollingConsumer createPollingConsumer() throws Exception {
    return consumer;
  }
  @Override public boolean isSingleton(){
    return true;
  }
  @Override protected void doStart() throws Exception {
    consumer=(EventDrivenPollingConsumer)super.createPollingConsumer();
    super.doStart();
  }
}
