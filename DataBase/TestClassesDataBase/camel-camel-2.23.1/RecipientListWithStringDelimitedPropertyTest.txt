/** 
 * @version 
 */
public class RecipientListWithStringDelimitedPropertyTest extends ContextTestSupport {
  private static final String BODY="answer";
  private static final String PROPERTY_VALUE="mock:x, mock:y, mock:z";
  @Test public void testSendingAMessageUsingMulticastReceivesItsOwnExchange() throws Exception {
    MockEndpoint x=getMockEndpoint("mock:x");
    MockEndpoint y=getMockEndpoint("mock:y");
    MockEndpoint z=getMockEndpoint("mock:z");
    x.expectedBodiesReceived(BODY);
    y.expectedBodiesReceived(BODY);
    z.expectedBodiesReceived(BODY);
    x.message(0).exchangeProperty("myProperty").isEqualTo(PROPERTY_VALUE);
    y.message(0).exchangeProperty("myProperty").isEqualTo(PROPERTY_VALUE);
    z.message(0).exchangeProperty("myProperty").isEqualTo(PROPERTY_VALUE);
    sendBody();
    assertMockEndpointsSatisfied();
  }
  protected void sendBody(){
    template.sendBodyAndProperty("direct:a",BODY,"myProperty",PROPERTY_VALUE);
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:a").recipientList(property("myProperty"));
      }
    }
;
  }
}
