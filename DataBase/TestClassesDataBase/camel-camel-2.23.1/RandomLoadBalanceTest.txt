public class RandomLoadBalanceTest extends ContextTestSupport {
  protected MockEndpoint x;
  protected MockEndpoint y;
  protected MockEndpoint z;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    x=getMockEndpoint("mock://x");
    y=getMockEndpoint("mock://y");
    z=getMockEndpoint("mock://z");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct://start").loadBalance().random().to("mock://x","mock://y","mock://z");
      }
    }
;
  }
  @Test public void testRandom() throws Exception {
    x.expectedMinimumMessageCount(5);
    y.expectedMinimumMessageCount(5);
    z.expectedMinimumMessageCount(5);
    for (int i=0; i < 100; i++) {
      template.sendBody("direct:start","Hello World");
    }
    assertMockEndpointsSatisfied();
  }
}
