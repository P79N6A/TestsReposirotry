/** 
 * A unit test which verifies disabling of JMX instrumentation.
 * @version 
 */
public class JmxInstrumentationDisableTest extends JmxInstrumentationUsingPropertiesTest {
  @Override protected boolean useJmx(){
    return false;
  }
  @Override @Test public void testMBeansRegistered() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    assertDefaultDomain();
    resolveMandatoryEndpoint("mock:end",MockEndpoint.class);
    Set<ObjectName> s=mbsc.queryNames(new ObjectName(domainName + ":type=endpoints,*"),null);
    assertEquals("Could not find 0 endpoints: " + s,0,s.size());
    s=mbsc.queryNames(new ObjectName(domainName + ":type=contexts,*"),null);
    assertEquals("Could not find 0 context: " + s,0,s.size());
    s=mbsc.queryNames(new ObjectName(domainName + ":type=processors,*"),null);
    assertEquals("Could not find 0 processor: " + s,0,s.size());
    s=mbsc.queryNames(new ObjectName(domainName + ":type=routes,*"),null);
    assertEquals("Could not find 0 route: " + s,0,s.size());
  }
  @Override protected void verifyCounter(  MBeanServerConnection beanServer,  ObjectName name) throws Exception {
    Set<ObjectName> s=beanServer.queryNames(name,null);
    assertEquals("Found mbeans: " + s,0,s.size());
  }
}
