/** 
 * JUnit test class for <code>org.apache.camel.component.smpp.SmppConsumer</code>
 * @version 
 */
public class SmppConsumerTest {
  private SmppConsumer consumer;
  private SmppEndpoint endpoint;
  private SmppConfiguration configuration;
  private Processor processor;
  private SMPPSession session;
  @Before public void setUp(){
    configuration=new SmppConfiguration();
    endpoint=mock(SmppEndpoint.class);
    processor=mock(Processor.class);
    session=mock(SMPPSession.class);
    consumer=new SmppConsumer(endpoint,configuration,processor){
      SMPPSession createSMPPSession(){
        return session;
      }
    }
;
  }
  @Test public void doStartShouldStartANewSmppSession() throws Exception {
    when(endpoint.getConnectionString()).thenReturn("smpp://smppclient@localhost:2775");
    BindParameter expectedBindParameter=new BindParameter(BindType.BIND_RX,"smppclient","password","cp",TypeOfNumber.UNKNOWN,NumberingPlanIndicator.UNKNOWN,"");
    when(session.connectAndBind("localhost",new Integer(2775),expectedBindParameter)).thenReturn("1");
    consumer.doStart();
    verify(session).setEnquireLinkTimer(5000);
    verify(session).setTransactionTimer(10000);
    verify(session).addSessionStateListener(isA(SessionStateListener.class));
    verify(session).setMessageReceiverListener(isA(MessageReceiverListener.class));
    verify(session).connectAndBind("localhost",new Integer(2775),expectedBindParameter);
  }
  @Test public void doStopShouldNotCloseTheSMPPSessionIfItIsNull() throws Exception {
    when(endpoint.getConnectionString()).thenReturn("smpp://smppclient@localhost:2775");
    consumer.doStop();
  }
  @Test public void doStopShouldCloseTheSMPPSession() throws Exception {
    doStartShouldStartANewSmppSession();
    reset(endpoint,processor,session);
    when(endpoint.getConnectionString()).thenReturn("smpp://smppclient@localhost:2775");
    consumer.doStop();
    verify(session).removeSessionStateListener(isA(SessionStateListener.class));
    verify(session).unbindAndClose();
  }
  @Test public void addressRangeFromConfigurationIsUsed() throws Exception {
    configuration.setAddressRange("(111*|222*|333*)");
    BindParameter expectedBindParameter=new BindParameter(BindType.BIND_RX,"smppclient","password","cp",TypeOfNumber.UNKNOWN,NumberingPlanIndicator.UNKNOWN,"(111*|222*|333*)");
    when(session.connectAndBind("localhost",new Integer(2775),expectedBindParameter)).thenReturn("1");
    consumer.doStart();
    verify(session).connectAndBind("localhost",new Integer(2775),expectedBindParameter);
  }
  @Test public void getterShouldReturnTheSetValues(){
    assertSame(endpoint,consumer.getEndpoint());
    assertSame(configuration,consumer.getConfiguration());
  }
}
