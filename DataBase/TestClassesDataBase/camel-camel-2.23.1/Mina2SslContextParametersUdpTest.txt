/** 
 * @version 
 */
public class Mina2SslContextParametersUdpTest extends BaseMina2Test {
  protected int messageCount=3;
  public Mina2SslContextParametersUdpTest(){
  }
  @Test public void testMinaRoute() throws Exception {
    MockEndpoint endpoint=getMockEndpoint("mock:result");
    endpoint.expectedBodiesReceived("Hello Message: 0","Hello Message: 1","Hello Message: 2");
    sendUdpMessages();
    assertMockEndpointsSatisfied();
  }
  protected void sendUdpMessages() throws Exception {
    DatagramSocket socket=new DatagramSocket();
    try {
      InetAddress address=InetAddress.getByName("127.0.0.1");
      for (int i=0; i < messageCount; i++) {
        String text="Hello Message: " + Integer.toString(i);
        byte[] data=text.getBytes();
        DatagramPacket packet=new DatagramPacket(data,data.length,address,getPort());
        socket.send(packet);
      }
      Thread.sleep(2000);
    }
  finally {
      socket.close();
    }
  }
  @Override protected boolean isUseSslContext(){
    return true;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&sslContextParameters=#sslContextParameters").to("mock:result");
      }
    }
;
  }
}
