/** 
 * Unit test to verify continuing using same thread on the consumer side.
 */
public class DirectShouldUseSameThreadTest extends ContextTestSupport {
  private static long id;
  @Test public void testUseSameThread() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        final ThreadLocal<String> local=new ThreadLocal<>();
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            local.set("Hello");
            id=Thread.currentThread().getId();
          }
        }
).to("direct:foo");
        from("direct:foo").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertEquals("Hello",local.get());
            assertEquals(id,Thread.currentThread().getId());
          }
        }
).to("mock:result");
      }
    }
;
  }
}
