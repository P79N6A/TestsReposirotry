/** 
 * Test class for  {@link BoxEventsManager}APIs. TODO Move the file to src/test/java, populate parameter values, and remove @Ignore annotations. The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class BoxEventsManagerIntegrationTest extends AbstractBoxTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(BoxEventsManagerIntegrationTest.class);
  private static final String PATH_PREFIX=BoxApiCollection.getCollection().getApiName(BoxEventsManagerApiMethod.class).getName();
  private static final String CAMEL_TEST_FILE="/CamelTestFile.txt";
  private static final String CAMEL_TEST_FILE_NAME="CamelTestFile.txt";
  @Test public void testListen() throws Exception {
    try {
      createTestFile();
    }
  finally {
      deleteTestFile();
    }
    MockEndpoint mockEndpoint=getMockEndpoint("mock:boxEvents");
    mockEndpoint.expectedMinimumMessageCount(2);
    mockEndpoint.setResultWaitTime(TimeUnit.MILLISECONDS.convert(30,TimeUnit.SECONDS));
    mockEndpoint.assertIsSatisfied();
    final List<Exchange> exchanges=mockEndpoint.getExchanges();
    assertNotNull("poll result",exchanges);
    assertFalse("poll result",exchanges.isEmpty());
    LOG.debug("poll result: " + exchanges);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("box://" + PATH_PREFIX + "/listen?startingPosition=0").to("mock:boxEvents");
      }
    }
;
  }
  public BoxAPIConnection getConnection(){
    BoxEndpoint endpoint=(BoxEndpoint)context().getEndpoint("box://" + PATH_PREFIX + "/listen?startingPosition=0");
    return endpoint.getBoxConnection();
  }
  private void createTestFile() throws FileNotFoundException {
    BoxFolder rootFolder=BoxFolder.getRootFolder(getConnection());
    InputStream stream=getClass().getResourceAsStream(CAMEL_TEST_FILE);
    testFile=rootFolder.uploadFile(stream,CAMEL_TEST_FILE_NAME).getResource();
  }
}
