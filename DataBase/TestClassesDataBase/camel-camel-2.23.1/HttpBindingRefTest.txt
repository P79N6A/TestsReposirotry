/** 
 * Unit test for http binding ref option.
 */
public class HttpBindingRefTest extends BaseJettyTest {
  @Test public void testDefaultHttpBinding() throws Exception {
    Object out=template.requestBody("http://localhost:{{port}}/myapp/myservice","Hello World");
    assertEquals("Bye World",context.getTypeConverter().convertTo(String.class,out));
  }
  @Test public void testCustomHttpBinding() throws Exception {
    Object out=template.requestBody("http://localhost:{{port}}/myapp/myotherservice","Hello World");
    assertEquals("Something went wrong but we dont care",context.getTypeConverter().convertTo(String.class,out));
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("default",new DefaultHttpBinding());
    jndi.bind("myownbinder",new MyHttpBinding());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(noErrorHandler());
        from("jetty:http://localhost:{{port}}/myapp/myservice?httpBindingRef=default").transform().constant("Bye World");
        from("jetty:http://localhost:{{port}}/myapp/myotherservice?httpBindingRef=myownbinder").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            throw new IllegalStateException("Not implemented");
          }
        }
);
      }
    }
;
  }
public class MyHttpBinding extends DefaultHttpBinding {
    @Override public void doWriteExceptionResponse(    Throwable exception,    HttpServletResponse response) throws IOException {
      response.setStatus(200);
      response.getWriter().write("Something went wrong but we dont care");
    }
  }
}
