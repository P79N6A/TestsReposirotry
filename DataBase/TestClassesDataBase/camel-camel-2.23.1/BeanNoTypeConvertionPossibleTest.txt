/** 
 * @version 
 */
public class BeanNoTypeConvertionPossibleTest extends ContextTestSupport {
  @Test public void testBeanNoTypeConvertionPossibleFail() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(0);
    try {
      template.requestBody("direct:start",new Date());
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      NoTypeConversionAvailableException ntae=assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause().getCause());
      assertEquals(Date.class,ntae.getFromType());
      assertEquals(Document.class,ntae.getToType());
      assertNotNull(ntae.getValue());
      assertNotNull(ntae.getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanNoTypeConvertionPossibleOK() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("77889,667,457");
    template.requestBody("direct:start","<foo>bar</foo>");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanNoTypeConvertionPossibleOKNullBody() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isNull();
    String body=null;
    template.requestBody("direct:start",body);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        OrderServiceBean bean=new OrderServiceBean();
        bean.setConverter(context.getTypeConverter());
        from("direct:start").bean(bean,"handleXML").to("mock:result");
      }
    }
;
  }
}
