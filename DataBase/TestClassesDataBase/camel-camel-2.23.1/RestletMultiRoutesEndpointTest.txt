/** 
 * This unit test verifies a single route can service multiple methods.
 * @version 
 */
public class RestletMultiRoutesEndpointTest extends RestletTestSupport {
  @Test public void testPostMethod() throws Exception {
    HttpResponse response=doExecute(new HttpPost("http://localhost:" + portNum + "/users/homer"));
    assertHttpResponse(response,200,"text/plain","POST");
  }
  @Test public void testPutMethod() throws Exception {
    HttpResponse response=doExecute(new HttpPut("http://localhost:" + portNum + "/users/homer"));
    assertHttpResponse(response,200,"text/plain","result PUT");
  }
  @Test public void testGetMethod() throws Exception {
    HttpResponse response=doExecute(new HttpGet("http://localhost:" + portNum + "/users/homer"));
    assertHttpResponse(response,200,"text/plain","GET");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("restlet:http://localhost:" + portNum + "/users/{username}?restletMethods=post,get").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody(exchange.getIn().getHeader(Exchange.HTTP_METHOD,String.class));
          }
        }
);
        from("restlet:http://localhost:" + portNum + "/users/{username}?restletMethods=put").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("result " + exchange.getIn().getHeader(Exchange.HTTP_METHOD,String.class));
          }
        }
);
      }
    }
;
  }
}
