/** 
 * @version 
 */
public class AggregateEagerCheckCompletionTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testAggregateEagerCheckCompletion() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(header("id"),new BodyInAggregatingStrategy()).completionPredicate(body().isEqualTo("END")).eagerCheckCompletion().to("mock:result");
      }
    }
);
    context.start();
    getMockEndpoint("mock:result").expectedBodiesReceived("A+B+END");
    template.sendBodyAndHeader("direct:start","A","id",1);
    template.sendBodyAndHeader("direct:start","B","id",1);
    template.sendBodyAndHeader("direct:start","END","id",1);
    assertMockEndpointsSatisfied();
  }
  @Test public void testAggregateNotEagerCheckCompletion() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(header("id"),new BodyInAggregatingStrategy()).completionPredicate(body().isEqualTo("A+B+END")).to("mock:result");
      }
    }
);
    context.start();
    getMockEndpoint("mock:result").expectedBodiesReceived("A+B+END");
    template.sendBodyAndHeader("direct:start","A","id",1);
    template.sendBodyAndHeader("direct:start","B","id",1);
    template.sendBodyAndHeader("direct:start","END","id",1);
    assertMockEndpointsSatisfied();
  }
}
