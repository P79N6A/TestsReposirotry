public class LoadTripletTest extends Assert {
  @Test public void testConstantUpdate(){
    LoadTriplet t=new LoadTriplet();
    t.update(1);
    assertEquals(1.0,t.getLoad1(),Math.ulp(1.0) * 5);
    assertEquals(1.0,t.getLoad5(),Math.ulp(1.0) * 5);
    assertEquals(1.0,t.getLoad15(),Math.ulp(1.0) * 5);
    for (int i=0; i < 100; i++) {
      t.update(1);
    }
    assertEquals(1.0,t.getLoad1(),Math.ulp(1.0) * 5);
    assertEquals(1.0,t.getLoad5(),Math.ulp(1.0) * 5);
    assertEquals(1.0,t.getLoad15(),Math.ulp(1.0) * 5);
  }
  @Test public void testChargeDischarge(){
    LoadTriplet t=new LoadTriplet();
    t.update(0);
    double last=t.getLoad15();
    double lastDiff=Double.MAX_VALUE;
    double diff;
    for (int i=0; i < 1000; i++) {
      t.update(5);
      diff=t.getLoad15() - last;
      assertTrue(diff > 0.0);
      assertTrue(diff < lastDiff);
      lastDiff=diff;
      last=t.getLoad15();
    }
    lastDiff=-Double.MAX_VALUE;
    for (int i=0; i < 1000; i++) {
      t.update(0);
      diff=t.getLoad15() - last;
      assertTrue(diff < 0.0);
      assertTrue(String.format("%f is smaller than %f",diff,lastDiff),diff > lastDiff);
      lastDiff=diff;
      last=t.getLoad15();
    }
  }
}
