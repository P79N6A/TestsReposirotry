public abstract class HazelcastSedaRecoverableConsumerTest extends HazelcastCamelTestSupport {
  @Mock protected IQueue<Object> queue;
  @Mock protected TransactionalQueue<Object> tqueue;
  @EndpointInject(uri="mock:result") protected MockEndpoint mock;
  @Test public void testRecovery() throws InterruptedException {
    when(queue.poll(any(Long.class),any(TimeUnit.class))).thenReturn("bar").thenReturn(null);
    when(tqueue.poll(any(Long.class),any(TimeUnit.class))).thenReturn("bar").thenReturn(null);
    mock.expectedMessageCount(1);
    assertMockEndpointsSatisfied(5000,TimeUnit.MILLISECONDS);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("hazelcast-seda:foo?transacted=true&onErrorDelay=5").to("mock:result");
      }
    }
;
  }
  @After public final void stopContext() throws Exception {
    context.stop();
  }
}
