public class SpringEtcdServiceCallDefaultRouteTest extends CamelSpringTestSupport {
  private static final ObjectMapper MAPPER=EtcdHelper.createObjectMapper();
  private static final EtcdConfiguration CONFIGURATION=new EtcdConfiguration();
  private static final EtcdClient CLIENT=new EtcdClient(URI.create("http://localhost:2379"));
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/etcd/cloud/SpringEtcdServiceCallDefaultRouteTest.xml");
  }
  @Override public void doPreSetup() throws Exception {
    JsonNode service1=MAPPER.createObjectNode().put("name","http-service").put("address","127.0.0.1").put("port","9091");
    JsonNode service2=MAPPER.createObjectNode().put("name","http-service").put("address","127.0.0.1").put("port","9092");
    CLIENT.put(CONFIGURATION.getServicePath() + "service-1",MAPPER.writeValueAsString(service1)).send().get();
    CLIENT.put(CONFIGURATION.getServicePath() + "service-2",MAPPER.writeValueAsString(service2)).send().get();
    super.doPreSetup();
  }
  @Override @After public void tearDown() throws Exception {
    super.tearDown();
    CLIENT.deleteDir(CONFIGURATION.getServicePath()).recursive().send().get();
  }
  @Test public void testServiceCall() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(2);
    getMockEndpoint("mock:result").expectedBodiesReceivedInAnyOrder("9091","9092");
    template.sendBody("direct:start",null);
    template.sendBody("direct:start",null);
    assertMockEndpointsSatisfied();
  }
}
