/** 
 */
public class XsltIncludeClasspathDotInDirectoryTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/classes/com.mycompany");
    createDirectory("target/classes/com.mycompany");
    FileUtil.copyFile(new File("src/test/resources/org/apache/camel/component/xslt/staff_include_classpath2.xsl"),new File("target/classes/com.mycompany/staff_include_classpath2.xsl"));
    FileUtil.copyFile(new File("src/test/resources/org/apache/camel/component/xslt/staff_template.xsl"),new File("target/classes/com.mycompany/staff_template.xsl"));
    super.setUp();
  }
  @Override @After public void tearDown() throws Exception {
    deleteDirectory("target/classes/com.mycompany");
    super.tearDown();
  }
  @Test public void testXsltIncludeClasspath() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:src/test/data/?fileName=staff.xml&noop=true&initialDelay=0&delay=10").to("xslt:com.mycompany/staff_include_classpath2.xsl").to("log:foo").to("mock:result");
      }
    }
;
  }
}
