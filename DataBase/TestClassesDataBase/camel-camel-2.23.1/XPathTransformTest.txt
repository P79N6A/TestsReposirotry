/** 
 * @version
 */
public class XPathTransformTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testXPathTransform() throws Exception {
    Document doc=context.getTypeConverter().convertTo(Document.class,"<root><firstname>Apache</firstname><lastname>Camel</lastname></root>");
    NodeList list=XPathBuilder.xpath("/root/firstname",NodeList.class).evaluate(context,doc,NodeList.class);
    assertNotNull(list);
    list.item(0).setTextContent("Servicemix");
    String out=context.getTypeConverter().convertTo(String.class,doc);
    assertEquals("<root><firstname>Servicemix</firstname><lastname>Camel</lastname></root>",out);
  }
  @Test public void testXPathNamespaceLoggingEnabledJavaDSL() throws Exception {
    Logger l=mock(Logger.class);
    when(l.isInfoEnabled()).thenReturn(true);
    String body="<aRoot xmlns:nsa=\"http://namespacec.net\"><nsa:a xmlns:nsa=\"http://namespacea.net\">Hello|there|Camel</nsa:a>" + "<nsb:a xmlns:nsb=\"http://namespaceb.net\">Hello|there|Camel</nsb:a><nsb:a xmlns:nsb=\"http://namespaceb.net\">Hello|there|Camel</nsb:a>" + "<a xmlns=\"http://defaultNamespace.net\">Hello|there|Camel</a><a>Hello|there|Camel</a></aRoot>";
    Document doc=context.getTypeConverter().convertTo(Document.class,body);
    Field logField=XPathBuilder.class.getDeclaredField("LOG");
    logField.setAccessible(true);
    Field modifiers=Field.class.getDeclaredField("modifiers");
    modifiers.setAccessible(true);
    modifiers.setInt(logField,logField.getModifiers() & ~Modifier.FINAL);
    logField.set(null,l);
    NodeList list=XPathBuilder.xpath("//*",NodeList.class).logNamespaces().evaluate(context,doc,NodeList.class);
    assertNotNull(list);
    verify(l).info(argThat(containsString("Namespaces discovered in message")),any(Object.class));
  }
  @Test public void testXPathNamespaceLoggingDisabledJavaDSL() throws Exception {
    Logger l=mock(Logger.class);
    when(l.isInfoEnabled()).thenReturn(true);
    String body="<aRoot xmlns:nsa=\"http://namespacec.net\"><nsa:a xmlns:nsa=\"http://namespacea.net\">Hello|there|Camel</nsa:a>" + "<nsb:a xmlns:nsb=\"http://namespaceb.net\">Hello|there|Camel</nsb:a><nsb:a xmlns:nsb=\"http://namespaceb.net\">Hello|there|Camel</nsb:a>" + "<a xmlns=\"http://defaultNamespace.net\">Hello|there|Camel</a><a>Hello|there|Camel</a></aRoot>";
    Document doc=context.getTypeConverter().convertTo(Document.class,body);
    Field logField=XPathBuilder.class.getDeclaredField("LOG");
    logField.setAccessible(true);
    Field modifiers=Field.class.getDeclaredField("modifiers");
    modifiers.setAccessible(true);
    modifiers.setInt(logField,logField.getModifiers() & ~Modifier.FINAL);
    logField.set(null,l);
    NodeList list=XPathBuilder.xpath("//*",NodeList.class).evaluate(context,doc,NodeList.class);
    assertNotNull(list);
    verify(l,never()).info(argThat(containsString("Namespaces discovered in message")),any(Object.class));
  }
}
