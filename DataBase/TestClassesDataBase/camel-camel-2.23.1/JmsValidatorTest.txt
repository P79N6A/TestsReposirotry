/** 
 * @version 
 */
public class JmsValidatorTest extends CamelTestSupport {
  @Test public void testJmsValidator() throws Exception {
    getMockEndpoint("mock:valid").expectedMessageCount(1);
    getMockEndpoint("mock:invalid").expectedMessageCount(0);
    getMockEndpoint("mock:finally").expectedMessageCount(1);
    String body="<?xml version=\"1.0\"?>\n<p>Hello world!</p>";
    template.sendBody("jms:queue:inbox",body);
    assertMockEndpointsSatisfied();
  }
  @Test public void testJmsValidatorInvalid() throws Exception {
    getMockEndpoint("mock:valid").expectedMessageCount(0);
    getMockEndpoint("mock:invalid").expectedMessageCount(1);
    getMockEndpoint("mock:finally").expectedMessageCount(1);
    String body="<?xml version=\"1.0\"?>\n<foo>Kaboom</foo>";
    template.sendBody("jms:queue:inbox",body);
    assertMockEndpointsSatisfied();
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    JmsComponent amq=jmsComponentAutoAcknowledge(connectionFactory);
    amq.setCamelContext(context);
    answer.bind("jms",amq);
    return answer;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jms:queue:inbox").convertBodyTo(String.class).doTry().to("validator:file:src/test/resources/myschema.xsd").to("jms:queue:valid").doCatch(ValidationException.class).to("jms:queue:invalid").doFinally().to("jms:queue:finally").end();
        from("jms:queue:valid").to("mock:valid");
        from("jms:queue:invalid").to("mock:invalid");
        from("jms:queue:finally").to("mock:finally");
      }
    }
;
  }
}
