public class FileProducerRenameUsingCopyTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/file");
    super.setUp();
  }
  @Test public void testMove() throws Exception {
    final String body="Hello Camel";
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedFileExists("target/file/done/hello.txt",body);
    template.sendBodyAndHeader("file://target/file",body,Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
    assertTrue("File not copied",new File("target/file/done/hello.txt").exists());
    assertFalse("File not deleted",new File("target/file/hello.txt").exists());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/file?renameUsingCopy=true&move=done").convertBodyTo(String.class).to("mock:result");
      }
    }
;
  }
}
