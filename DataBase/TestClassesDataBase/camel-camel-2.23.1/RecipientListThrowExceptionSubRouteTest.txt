/** 
 */
public class RecipientListThrowExceptionSubRouteTest extends ContextTestSupport {
public static class Router {
    public String findEndpoint(){
      throw new IllegalArgumentException("Damn");
    }
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testRecipientList() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").onException(Exception.class).to("mock:error").end().recipientList(method(Router.class));
      }
    }
);
    context.start();
    MockEndpoint endpoint=getMockEndpoint("mock:error");
    endpoint.expectedMessageCount(1);
    sendBody("direct:start","Hello World!");
    assertMockEndpointsSatisfied();
  }
  @Test public void testRecipientListChild() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").onException(Exception.class).to("mock:error").end().to("direct:child");
        from("direct:child").errorHandler(noErrorHandler()).recipientList(method(Router.class));
      }
    }
);
    context.start();
    MockEndpoint endpoint=getMockEndpoint("mock:error");
    endpoint.expectedMessageCount(1);
    sendBody("direct:start","Hello World!");
    assertMockEndpointsSatisfied();
  }
}
