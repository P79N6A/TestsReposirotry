/** 
 */
public class RecipientListBeanOnPrepareTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myPrepare",new AnimalDeepClonePrepare());
    return jndi;
  }
  @Test public void testRecipientListBeanOnPrepare() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:a").message(0).body(String.class).isEqualTo("1 Tony the Tiger");
    getMockEndpoint("mock:b").expectedMessageCount(1);
    getMockEndpoint("mock:b").message(0).body(String.class).isEqualTo("1 Tiger");
    template.sendBodyAndHeader("direct:start",new Animal(1,"Tiger"),"foo","direct:a,direct:b");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").bean(RecipientListBeanOnPrepareTest.class,"doSomething");
        from("direct:a").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            Animal body=exchange.getIn().getBody(Animal.class);
            assertEquals(1,body.getId());
            assertEquals("Tiger",body.getName());
            body.setName("Tony the Tiger");
          }
        }
).to("mock:a");
        from("direct:b").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            Animal body=exchange.getIn().getBody(Animal.class);
            assertEquals(1,body.getId());
            assertEquals("Tiger",body.getName());
          }
        }
).to("mock:b");
      }
    }
;
  }
  @org.apache.camel.RecipientList(onPrepareRef="myPrepare") public static String doSomething(){
    return "direct:a,direct:b";
  }
}
