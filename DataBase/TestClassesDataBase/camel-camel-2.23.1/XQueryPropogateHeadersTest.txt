/** 
 * Unit test to verify that headers can be propogated through this component.
 */
public class XQueryPropogateHeadersTest extends CamelTestSupport {
  @Test public void testPropogateHeadersTest() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("<transformed sender=\"bar\" subject=\"Hey\"><mail><subject>Hey</subject>" + "<body>Hello world!</body></mail></transformed>");
    mock.expectedHeaderReceived("foo","bar");
    template.sendBodyAndHeader("direct:one","<mail><subject>Hey</subject><body>Hello world!</body></mail>","foo","bar");
    assertMockEndpointsSatisfied();
  }
  @Test public void testPropogateHeadersUsingTransform() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("London");
    mock.expectedHeaderReceived("foo","bar");
    template.sendBodyAndHeader("direct:two","<person name='James' city='London'/>","foo","bar");
    assertMockEndpointsSatisfied();
  }
  @Test public void testPropogateHeadersUsingSetBody() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("London");
    mock.expectedHeaderReceived("foo","bar");
    template.sendBodyAndHeader("direct:three","<person name='James' city='London'/>","foo","bar");
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:one").to("xquery:org/apache/camel/component/xquery/transform_with_headers.xquery").to("mock:result");
        from("direct:two").transform().xquery("/person/@city",String.class).to("mock:result");
        from("direct:three").setBody().xquery("/person/@city",String.class).to("mock:result");
      }
    }
;
  }
}
