/** 
 * @version 
 */
public class InheritErrorHandlerFalseTest extends ContextTestSupport {
  private static int counter;
  @Test public void testInheritErrorHandlerFalse() throws Exception {
    counter=0;
    getMockEndpoint("mock:result").expectedMessageCount(0);
    getMockEndpoint("mock:dead").expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Hello World");
      fail("Should throw exception");
    }
 catch (    Exception e) {
      IllegalArgumentException iae=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Damn",iae.getMessage());
    }
    assertMockEndpointsSatisfied();
    assertEquals(1,counter);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2));
        from("direct:start").process(new MyProcessor()).inheritErrorHandler(false).to("mock:result");
      }
    }
;
  }
public static class MyProcessor implements Processor {
    public void process(    Exchange exchange) throws Exception {
      counter++;
      exchange.setException(new IllegalArgumentException("Damn"));
    }
  }
}
