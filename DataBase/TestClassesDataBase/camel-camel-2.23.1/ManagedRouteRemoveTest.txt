/** 
 * @version 
 */
public class ManagedRouteRemoveTest extends ManagementTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/managed");
    super.setUp();
  }
  @Test public void testRemove() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName on=getRouteObjectName(mbeanServer);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBodyAndHeader("file://target/managed","Hello World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
    String state=(String)mbeanServer.getAttribute(on,"State");
    assertEquals("Should be started",ServiceStatus.Started.name(),state);
    mbeanServer.invoke(on,"stop",null,null);
    state=(String)mbeanServer.getAttribute(on,"State");
    assertEquals("Should be stopped",ServiceStatus.Stopped.name(),state);
    mbeanServer.invoke(on,"remove",null,null);
    boolean registered=mbeanServer.isRegistered(on);
    assertFalse("Route mbean should have been unregistered",registered);
    Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
    assertEquals(0,set.size());
  }
  static ObjectName getRouteObjectName(  MBeanServer mbeanServer) throws Exception {
    Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
    assertEquals(1,set.size());
    return set.iterator().next();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/managed?initialDelay=0&delay=10").to("mock:result");
      }
    }
;
  }
}
