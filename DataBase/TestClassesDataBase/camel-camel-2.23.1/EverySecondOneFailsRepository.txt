private static final class EverySecondOneFailsRepository extends MemoryAggregationRepository {
  private AtomicInteger counter=new AtomicInteger();
  private EverySecondOneFailsRepository(){
    super(true);
  }
  @Override public Exchange add(  CamelContext camelContext,  String key,  Exchange oldExchange,  Exchange newExchange){
    int count=counter.incrementAndGet();
    if (count % 2 == 0) {
      throw new OptimisticLockingException();
    }
 else {
      return super.add(camelContext,key,oldExchange,newExchange);
    }
  }
}
