public class RssFilterTest extends CamelTestSupport {
  @Test public void testFilterOutNonCamelPosts() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(6);
    mock.assertIsSatisfied();
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext jndi=new JndiContext();
    jndi.bind("myFilterBean",new FilterBean());
    return jndi;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("rss:file:src/test/data/rss20.xml?splitEntries=true&consumer.delay=100").filter().method("myFilterBean","titleContainsCamel").to("mock:result");
      }
    }
;
  }
public static class FilterBean {
    public boolean titleContainsCamel(    @Body SyndFeed feed){
      SyndEntry firstEntry=(SyndEntry)feed.getEntries().get(0);
      return firstEntry.getTitle().contains("Camel");
    }
  }
}
