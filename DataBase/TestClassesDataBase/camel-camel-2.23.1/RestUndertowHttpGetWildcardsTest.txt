public class RestUndertowHttpGetWildcardsTest extends BaseUndertowTest {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    UndertowHttpBinding binding=new DefaultUndertowHttpBinding();
    jndi.bind("mybinding",binding);
    return jndi;
  }
  @Test public void testProducerGet() throws Exception {
    String out=template.requestBody("undertow:http://localhost:{{port}}/users/123/basic",null,String.class);
    assertEquals("123;Donald Duck",out);
  }
  @Test public void testServletProducerGetWildcards() throws Exception {
    String out=template.requestBody("undertow:http://localhost:{{port}}/users/456/name=g*",null,String.class);
    assertEquals("456;Goofy",out);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("undertow").host("localhost").port(getPort()).endpointProperty("undertowHttpBinding","#mybinding");
        rest("/users/").get("{id}/{query}").route().to("log:query").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String id=exchange.getIn().getHeader("id",String.class);
            exchange.getOut().setBody(id + ";Goofy");
          }
        }
).endRest().get("{id}/basic").route().to("log:input").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String id=exchange.getIn().getHeader("id",String.class);
            exchange.getOut().setBody(id + ";Donald Duck");
          }
        }
).endRest();
      }
    }
;
  }
}
