/** 
 */
public class BeanParameterMethodCallThreeBodyOgnlTest extends ContextTestSupport {
  @Test public void testBeanParameterValue() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("3");
    List<String> body=new ArrayList<>();
    body.add("A");
    body.add("B");
    body.add("C");
    template.sendBody("direct:start",body);
    assertMockEndpointsSatisfied();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("router",new MyRouter());
    jndi.bind("foo",new MyBean());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").dynamicRouter().method("router").to("mock:result");
      }
    }
;
  }
public static class MyRouter {
    public String route(    Object body){
      if (body instanceof List) {
        return "bean:foo?method=bar('A','B','C')";
      }
 else {
        return null;
      }
    }
  }
public static class MyBean {
    public String bar(    String order1,    String order2,    String order3){
      assertEquals("A",order1);
      assertEquals("B",order2);
      assertEquals("C",order3);
      return "3";
    }
    public String bar(    String order1,    String order2){
      assertEquals("A",order1);
      assertEquals("B",order2);
      return "2";
    }
    public String bar(    String order1){
      assertEquals("A",order1);
      return "1";
    }
  }
}
