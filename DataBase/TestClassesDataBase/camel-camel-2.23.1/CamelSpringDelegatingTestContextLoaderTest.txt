/** 
 * Test for CamelSpringDelegatingTestContextLoader.
 */
@RunWith(CamelSpringJUnit4ClassRunner.class) @ContextConfiguration(classes={CamelSpringDelegatingTestContextLoaderTest.TestConfig.class},loader=CamelSpringDelegatingTestContextLoader.class) @MockEndpoints public class CamelSpringDelegatingTestContextLoaderTest {
  @EndpointInject(uri="mock:direct:end") protected MockEndpoint endEndpoint;
  @EndpointInject(uri="mock:direct:error") protected MockEndpoint errorEndpoint;
  @Produce(uri="direct:test") protected ProducerTemplate testProducer;
@Configuration public static class TestConfig extends SingleRouteCamelConfiguration {
    @Bean @Override public RouteBuilder route(){
      return new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:test").errorHandler(deadLetterChannel("direct:error")).to("direct:end");
          from("direct:error").log("Received message on direct:error endpoint.");
          from("direct:end").log("Received message on direct:end endpoint.");
        }
      }
;
    }
  }
  @Test public void testRoute() throws InterruptedException {
    endEndpoint.expectedMessageCount(1);
    errorEndpoint.expectedMessageCount(0);
    testProducer.sendBody("<name>test</name>");
    endEndpoint.assertIsSatisfied();
    errorEndpoint.assertIsSatisfied();
  }
}
