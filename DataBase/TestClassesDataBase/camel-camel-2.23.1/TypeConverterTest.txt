/** 
 * Tests  {@link org.apache.camel.TypeConverter}
 */
public class TypeConverterTest {
  @Test public void launchBenchmark() throws Exception {
    Options opt=new OptionsBuilder().include(this.getClass().getName() + ".*").mode(Mode.SampleTime).timeUnit(TimeUnit.MILLISECONDS).warmupTime(TimeValue.seconds(1)).warmupIterations(2).measurementTime(TimeValue.seconds(5)).measurementIterations(3).threads(1).forks(1).shouldFailOnError(true).shouldDoGC(true).measurementBatchSize(100000).build();
    new Runner(opt).run();
  }
@State(Scope.Thread) public static class BenchmarkCamelContextState {
    Integer someInteger=12345;
    String someIntegerString=String.valueOf(someInteger);
    String xmlAsString;
    byte[] xmlAsBytes;
    CamelContext camel;
    @Setup(Level.Trial) public void initialize() throws IOException {
      camel=new DefaultCamelContext();
      try {
        camel.start();
      }
 catch (      Exception e) {
      }
      xmlAsString=IOHelper.loadText(getClass().getClassLoader().getResourceAsStream("sample_soap.xml"));
      xmlAsBytes=xmlAsString.getBytes(StandardCharsets.UTF_8);
    }
    @TearDown(Level.Trial) public void close(){
      try {
        camel.stop();
      }
 catch (      Exception e) {
      }
    }
  }
  @Benchmark public void typeConvertIntegerToString(  BenchmarkCamelContextState state,  Blackhole bh){
    String string=state.camel.getTypeConverter().convertTo(String.class,state.someInteger);
    bh.consume(string);
  }
  @Benchmark public void typeConvertStringToInteger(  BenchmarkCamelContextState state,  Blackhole bh){
    Integer integer=state.camel.getTypeConverter().convertTo(Integer.class,state.someIntegerString);
    bh.consume(integer);
  }
  @Benchmark public void typeConvertTheSameTypes(  BenchmarkCamelContextState state,  Blackhole bh){
    String string=state.camel.getTypeConverter().convertTo(String.class,state.someIntegerString);
    bh.consume(string);
  }
  @Benchmark public void typeConvertInputStreamToString(  BenchmarkCamelContextState state,  Blackhole bh){
    String string=state.camel.getTypeConverter().convertTo(String.class,new ByteArrayInputStream(state.xmlAsBytes));
    bh.consume(string);
  }
  @Benchmark public void typeConvertStringToInputStream(  BenchmarkCamelContextState state,  Blackhole bh){
    InputStream inputStream=state.camel.getTypeConverter().convertTo(InputStream.class,state.xmlAsString);
    bh.consume(inputStream);
  }
  @Benchmark public void typeConvertStringToDocument(  BenchmarkCamelContextState state,  Blackhole bh){
    Document document=state.camel.getTypeConverter().convertTo(Document.class,state.xmlAsString);
    bh.consume(document);
  }
  @Benchmark public void typeConvertStringToByteArray(  BenchmarkCamelContextState state,  Blackhole bh){
    byte[] bytes=state.camel.getTypeConverter().convertTo(byte[].class,state.xmlAsString);
    bh.consume(bytes);
  }
  @Benchmark public void typeConvertByteArrayToString(  BenchmarkCamelContextState state,  Blackhole bh){
    String string=state.camel.getTypeConverter().convertTo(String.class,state.xmlAsBytes);
    bh.consume(string);
  }
}
