/** 
 * Testing that end users can use the  {@link Response} API from Restlet directly to have fine grainedcontrol of the response they want to use.
 * @version 
 */
public class RestletRequestAndResponseAPITest extends RestletTestSupport {
  @Test public void testRestletProducer() throws Exception {
    Map<String,Object> headers=new HashMap<>();
    headers.put("id",123);
    headers.put("beverage.beer","Carlsberg");
    String out=template.requestBodyAndHeaders("direct:start",null,headers,String.class);
    assertEquals("<response>Beer is Good</response>",out);
  }
  @Test public void testRestletProducer2() throws Exception {
    final Map<String,Object> headers=new HashMap<>();
    headers.put("id",123);
    headers.put("beverage.beer","Carlsberg");
    Exchange out=template.request("direct:start",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeaders(headers);
      }
    }
);
    assertNotNull(out);
    assertEquals("text/xml",out.getOut().getHeader(Exchange.CONTENT_TYPE));
    assertEquals(200,out.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));
    assertEquals("<response>Beer is Good</response>",out.getOut().getBody(String.class));
    Response response=out.getOut().getHeader(RestletConstants.RESTLET_RESPONSE,Response.class);
    assertNotNull(response);
    assertEquals(200,response.getStatus().getCode());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("restlet:http://localhost:" + portNum + "/users/{id}/like/{beverage.beer}");
        from("restlet:http://localhost:" + portNum + "/users/{id}/like/{beer}").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            Request request=exchange.getIn().getHeader(RestletConstants.RESTLET_REQUEST,Request.class);
            assertNotNull("Restlet Request",request);
            Response response=exchange.getIn().getHeader(RestletConstants.RESTLET_RESPONSE,Response.class);
            assertNotNull("Restlet Response",response);
            response.setStatus(Status.SUCCESS_OK);
            response.setEntity("<response>Beer is Good</response>",MediaType.TEXT_XML);
            exchange.getOut().setBody(response);
          }
        }
);
      }
    }
;
  }
}
