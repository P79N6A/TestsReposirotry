/** 
 */
public class FileConsumerSharedThreadPollTest extends ContextTestSupport {
  private ScheduledExecutorService pool;
  private SimpleRegistry registry=new SimpleRegistry();
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/a");
    deleteDirectory("target/b");
    super.setUp();
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    return new DefaultCamelContext(registry);
  }
  @Test public void testSharedThreadPool() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(2);
    mock.message(0).header("threadName").isEqualTo(mock.message(1).header("threadName"));
    template.sendBodyAndHeader("file:target/a","Hello World",Exchange.FILE_NAME,"hello.txt");
    template.sendBodyAndHeader("file:target/b","Bye World",Exchange.FILE_NAME,"bye.txt");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        pool=new ThreadPoolBuilder(context).poolSize(1).buildScheduled(this,"MySharedPool");
        registry.put("myPool",pool);
        from("file:target/a?initialDelay=0&delay=10&scheduledExecutorService=#myPool").routeId("a").to("direct:shared");
        from("file:target/b?initialDelay=0&delay=10&scheduledExecutorService=#myPool").routeId("b").to("direct:shared");
        from("direct:shared").routeId("shared").convertBodyTo(String.class).log("Get ${file:name} using ${threadName}").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setHeader("threadName",Thread.currentThread().getName());
          }
        }
).to("mock:result");
      }
    }
;
  }
}
