public class GatherAllStaticEndpointUrisTest extends ContextTestSupport {
  @Test public void testGatherAllStaticEndpointUris() throws Exception {
    RouteDefinition route=context.getRouteDefinition("foo");
    Set<String> uris=RouteDefinitionHelper.gatherAllStaticEndpointUris(context,route,true,true);
    assertNotNull(uris);
    assertEquals(3,uris.size());
    RouteDefinition route2=context.getRouteDefinition("bar");
    Set<String> uris2=RouteDefinitionHelper.gatherAllStaticEndpointUris(context,route2,true,true);
    assertNotNull(uris2);
    assertEquals(2,uris2.size());
    Set<String> uris2out=RouteDefinitionHelper.gatherAllStaticEndpointUris(context,route2,false,true);
    assertNotNull(uris2out);
    assertEquals(1,uris2out.size());
    String json=context.createRouteStaticEndpointJson(null);
    assertNotNull(json);
    assertTrue(json.contains("{ \"uri\": \"direct://foo\" }"));
    assertTrue(json.contains("{ \"uri\": \"seda://bar\" }"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").routeId("foo").to("seda:bar").log("Hello World").wireTap("mock:tap").to("mock:foo").enrich("seda:stuff");
        from("seda:bar").routeId("bar").log("Bye World").to("mock:bar");
      }
    }
;
  }
}
