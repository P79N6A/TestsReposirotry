public class DeadLetterChannelExceptionCausePropagatedTest extends ContextTestSupport {
  protected static final RuntimeException RUNTIME_EXCEPTION=new RuntimeException("Expected exception.");
  protected String body="<hello>world!</hello>";
  @Test public void testFirstFewAttemptsFail() throws Exception {
    MockEndpoint failedEndpoint=getMockEndpoint("mock:failed");
    MockEndpoint successEndpoint=getMockEndpoint("mock:success");
    failedEndpoint.expectedBodiesReceived(body);
    failedEndpoint.message(0).exchangeProperty(Exchange.EXCEPTION_CAUGHT).isEqualTo(RUNTIME_EXCEPTION);
    failedEndpoint.expectedMessageCount(1);
    successEndpoint.expectedMessageCount(0);
    sendBody("direct:start",body);
    assertMockEndpointsSatisfied();
    assertNull(failedEndpoint.getExchanges().get(0).getException());
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        errorHandler(deadLetterChannel("mock:error").redeliveryDelay(0).maximumRedeliveries(3));
        onException(RuntimeException.class).handled(true).to("mock:failed");
        from("direct:start").process(ProcessorBuilder.throwException(RUNTIME_EXCEPTION)).to("mock:success");
      }
    }
;
  }
}
