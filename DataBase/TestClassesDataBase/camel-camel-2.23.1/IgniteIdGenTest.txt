public class IgniteIdGenTest extends AbstractIgniteTest {
  @Override protected String getScheme(){
    return "ignite-idgen";
  }
  @Override protected AbstractIgniteComponent createComponent(){
    return IgniteIdGenComponent.fromConfiguration(createConfiguration());
  }
  @Test public void testOperations(){
    assert_().that(template.requestBody("ignite-idgen:abc?initialValue=0&operation=GET",null,Long.class)).isEqualTo(0);
    assert_().that(template.requestBody("ignite-idgen:abc?initialValue=0&operation=GET_AND_INCREMENT",null,Long.class)).isEqualTo(0);
    assert_().that(template.requestBody("ignite-idgen:abc?initialValue=0&operation=INCREMENT_AND_GET",null,Long.class)).isEqualTo(2);
    assert_().that(template.requestBody("ignite-idgen:abc?initialValue=0&operation=ADD_AND_GET",5,Long.class)).isEqualTo(7);
    assert_().that(template.requestBody("ignite-idgen:abc?initialValue=0&operation=GET_AND_ADD",5,Long.class)).isEqualTo(7);
    assert_().that(template.requestBody("ignite-idgen:abc?initialValue=0&operation=GET",5,Long.class)).isEqualTo(12);
  }
  @Test public void testInitialValue(){
    assert_().that(template.requestBody("ignite-idgen:abc?operation=GET&initialValue=100",null,Long.class)).isEqualTo(100);
    assert_().that(template.requestBody("ignite-idgen:abc?operation=GET_AND_INCREMENT&initialValue=100",null,Long.class)).isEqualTo(100);
    assert_().that(template.requestBody("ignite-idgen:abc?operation=INCREMENT_AND_GET&initialValue=100",null,Long.class)).isEqualTo(102);
    assert_().that(template.requestBody("ignite-idgen:abc?operation=ADD_AND_GET&initialValue=100",5,Long.class)).isEqualTo(107);
    assert_().that(template.requestBody("ignite-idgen:abc?operation=GET_AND_ADD&initialValue=100",5,Long.class)).isEqualTo(107);
    assert_().that(template.requestBody("ignite-idgen:abc?operation=GET&initialValue=100",5,Long.class)).isEqualTo(112);
  }
  @Test public void testDifferentOperation(){
    assert_().that(template.requestBody("ignite-idgen:abc?operation=GET&initialValue=100",null,Long.class)).isEqualTo(100);
    assert_().that(template.requestBodyAndHeader("ignite-idgen:abc?operation=GET_AND_INCREMENT&initialValue=100",null,IgniteConstants.IGNITE_IDGEN_OPERATION,IgniteIdGenOperation.INCREMENT_AND_GET,Long.class)).isEqualTo(101);
  }
  @Test public void testBatchSize(){
    IgniteIdGenEndpoint endpoint=context.getEndpoint("ignite-idgen:abc?operation=GET&initialValue=100&batchSize=100",IgniteIdGenEndpoint.class);
    assert_().that(template.requestBody(endpoint,null,Long.class)).isEqualTo(100);
    assert_().that(endpoint.getBatchSize());
  }
  @Override public boolean isCreateCamelContextPerClass(){
    return true;
  }
  @After public void deleteSets(){
    for (    String name : ImmutableSet.<String>of("abc")) {
      IgniteAtomicSequence seq=ignite().atomicSequence(name,0,false);
      if (seq == null) {
        continue;
      }
      seq.close();
    }
  }
}
