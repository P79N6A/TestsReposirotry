@RunWith(Arquillian.class) public class UnstoppedCamelContextProducerFieldTest {
  @ClassRule public static Verifier verifier=new Verifier(){
    @Override protected void verify(){
      assertThat("Camel CDI hasn't stopped Camel context!",context.getStatus(),is(equalTo(ServiceStatus.Stopped)));
    }
  }
;
  @Produces @ApplicationScoped private static CamelContext context=new DefaultCamelContext();
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(SimpleCamelRoute.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void sendMessageToInbound(  @Uri("direct:start") ProducerTemplate inbound,  @Uri("mock:result") MockEndpoint outbound) throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("test");
    inbound.sendBody("test");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
}
