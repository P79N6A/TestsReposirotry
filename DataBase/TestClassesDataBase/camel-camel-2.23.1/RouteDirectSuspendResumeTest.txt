/** 
 * @version 
 */
public class RouteDirectSuspendResumeTest extends ContextTestSupport {
  @Test public void testSuspendResume() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("A");
    template.sendBody("direct:foo","A");
    assertMockEndpointsSatisfied();
    log.info("Suspending");
    resetMocks();
    mock.expectedMessageCount(0);
    context.suspendRoute("foo");
    assertEquals("Suspended",context.getRouteStatus("foo").name());
    try {
      template.sendBody("direct:foo","B");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
    }
    log.info("Resuming");
    resetMocks();
    mock.expectedBodiesReceived("B");
    context.resumeRoute("foo");
    template.sendBody("direct:foo","B");
    assertMockEndpointsSatisfied();
    assertEquals("Started",context.getRouteStatus("foo").name());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.getComponent("direct",DirectComponent.class).setBlock(false);
        from("direct:foo").routeId("foo").to("log:foo").to("mock:result");
      }
    }
;
  }
}
