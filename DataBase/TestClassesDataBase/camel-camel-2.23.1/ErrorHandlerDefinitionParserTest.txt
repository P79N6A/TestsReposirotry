public class ErrorHandlerDefinitionParserTest extends Assert {
  protected ClassPathXmlApplicationContext ctx;
  @Before public void setUp() throws Exception {
    ctx=new ClassPathXmlApplicationContext("org/apache/camel/spring/handler/ErrorHandlerDefinitionParser.xml");
  }
  @After public void tearDown() throws Exception {
    IOHelper.close(ctx);
  }
  @Test public void testLoggingErrorHandler(){
    LoggingErrorHandlerBuilder errorHandler=ctx.getBean("loggingErrorHandler",LoggingErrorHandlerBuilder.class);
    assertNotNull(errorHandler);
    assertEquals("The log level should be INFO",LoggingLevel.INFO,errorHandler.getLevel());
    assertEquals("The log name should be foo","foo",errorHandler.getLogName());
  }
  @Test public void testDefaultErrorHandler(){
    DefaultErrorHandlerBuilder errorHandler=ctx.getBean("defaultErrorHandler",DefaultErrorHandlerBuilder.class);
    assertNotNull(errorHandler);
    RedeliveryPolicy policy=errorHandler.getRedeliveryPolicy();
    assertNotNull(policy);
    assertEquals("Wrong maximumRedeliveries",2,policy.getMaximumRedeliveries());
    assertEquals("Wrong redeliveryDelay",0,policy.getRedeliveryDelay());
    assertEquals("Wrong logStackTrace",false,policy.isLogStackTrace());
    errorHandler=ctx.getBean("errorHandler",DefaultErrorHandlerBuilder.class);
    assertNotNull(errorHandler);
  }
  @Test public void testTransactionErrorHandler(){
    TransactionErrorHandlerBuilder errorHandler=ctx.getBean("transactionErrorHandler",TransactionErrorHandlerBuilder.class);
    assertNotNull(errorHandler);
    assertNotNull(errorHandler.getTransactionTemplate());
    Processor processor=errorHandler.getOnRedelivery();
    assertTrue("It should be MyErrorProcessor",processor instanceof MyErrorProcessor);
  }
  @Test public void testTXErrorHandler(){
    TransactionErrorHandlerBuilder errorHandler=ctx.getBean("txEH",TransactionErrorHandlerBuilder.class);
    assertNotNull(errorHandler);
    assertNotNull(errorHandler.getTransactionTemplate());
  }
  @Test public void testDeadLetterErrorHandler(){
    DeadLetterChannelBuilder errorHandler=ctx.getBean("deadLetterErrorHandler",DeadLetterChannelBuilder.class);
    assertNotNull(errorHandler);
    assertEquals("Get wrong deadletteruri","log:dead",errorHandler.getDeadLetterUri());
    RedeliveryPolicy policy=errorHandler.getRedeliveryPolicy();
    assertNotNull(policy);
    assertEquals("Wrong maximumRedeliveries",2,policy.getMaximumRedeliveries());
    assertEquals("Wrong redeliveryDelay",1000,policy.getRedeliveryDelay());
    assertEquals("Wrong logStackTrace",true,policy.isLogHandled());
    assertEquals("Wrong asyncRedeliveryDelayed",true,policy.isAsyncDelayedRedelivery());
  }
}
