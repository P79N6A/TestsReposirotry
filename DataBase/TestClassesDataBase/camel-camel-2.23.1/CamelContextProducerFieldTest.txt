@RunWith(Arquillian.class) public class CamelContextProducerFieldTest {
  @Named @Produces @ApplicationScoped private static CamelContext context=new DefaultCamelContext();
  @Inject @Uri("direct:inbound") private ProducerTemplate inbound;
  @Inject @Uri("mock:outbound") private MockEndpoint outbound;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(NamedCamelBean.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyProducedCamelContext(  CamelContext context){
    assertThat("The producer field sets the context name!",context.getName(),is(equalTo("context")));
    assertThat("The producer field starts the Camel context!",context.getStatus(),is(equalTo(ServiceStatus.Started)));
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("test-processed");
    inbound.sendBody("test");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
private static class NamedBeanRoute extends RouteBuilder {
    @Override public void configure(){
      from("direct:inbound").bean("beanName").to("mock:outbound");
    }
  }
}
