public class MulticastCxfTest extends CamelSpringTestSupport {
  private static int port=AvailablePortFinder.getNextAvailable(20006);
static {
    System.setProperty("MulticastCxfTest.port",Integer.toString(port));
  }
  @EndpointInject(uri="mock:reply") protected MockEndpoint replyEndpoint;
  @EndpointInject(uri="mock:reply2") protected MockEndpoint reply2Endpoint;
  @EndpointInject(uri="mock:output") protected MockEndpoint outputEndpoint;
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/itest/greeter/MulticastCxfTest-context.xml");
  }
  @Test public void testMulticastCXF() throws Exception {
    replyEndpoint.expectedBodiesReceived("Hello Willem","Hello Claus","Hello Jonathan");
    reply2Endpoint.expectedBodiesReceived("Bye Willem","Bye Claus","Bye Jonathan");
    outputEndpoint.expectedBodiesReceived("Bye Willem","Bye Claus","Bye Jonathan");
    String out=template.requestBodyAndHeader("direct:start","Willem",CxfConstants.OPERATION_NAME,"greetMe",String.class);
    assertEquals("Bye Willem",out);
    String out2=template.requestBodyAndHeader("direct:start","Claus",CxfConstants.OPERATION_NAME,"greetMe",String.class);
    assertEquals("Bye Claus",out2);
    String out3=template.requestBodyAndHeader("direct:start","Jonathan",CxfConstants.OPERATION_NAME,"greetMe",String.class);
    assertEquals("Bye Jonathan",out3);
    replyEndpoint.assertIsSatisfied();
    reply2Endpoint.assertIsSatisfied();
    outputEndpoint.assertIsSatisfied();
  }
}
