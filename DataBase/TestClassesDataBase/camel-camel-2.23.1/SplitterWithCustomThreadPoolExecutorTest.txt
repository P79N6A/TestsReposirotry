public class SplitterWithCustomThreadPoolExecutorTest extends ContextTestSupport {
  protected ThreadPoolExecutor customThreadPoolExecutor=new ThreadPoolExecutor(8,16,0L,TimeUnit.MILLISECONDS,new LinkedBlockingQueue<Runnable>());
  @Test public void testSplitterWithCustomThreadPoolExecutor() throws Exception {
    ThreadPoolExecutor threadPoolExecutor=(ThreadPoolExecutor)getSplitter().getExecutorService();
    if (threadPoolExecutor == null) {
      threadPoolExecutor=context.getRegistry().lookupByNameAndType(getSplitter().getExecutorServiceRef(),ThreadPoolExecutor.class);
    }
    assertTrue(threadPoolExecutor.getCorePoolSize() == getThreadPoolExecutor().getCorePoolSize());
    assertTrue(threadPoolExecutor.getMaximumPoolSize() == getThreadPoolExecutor().getMaximumPoolSize());
  }
  protected ThreadPoolExecutor getThreadPoolExecutor(){
    return customThreadPoolExecutor;
  }
  protected SplitDefinition getSplitter(){
    SplitDefinition result=null;
    List<RouteDefinition> routeDefinitions=context.getRouteDefinitions();
    for (    RouteDefinition routeType : routeDefinitions) {
      result=firstSplitterType(routeType.getOutputs());
      if (result != null) {
        break;
      }
    }
    return result;
  }
  protected SplitDefinition firstSplitterType(  List<ProcessorDefinition<?>> outputs){
    SplitDefinition result=null;
    for (    ProcessorDefinition<?> processorType : outputs) {
      if (processorType instanceof SplitDefinition) {
        result=(SplitDefinition)processorType;
      }
 else {
        result=firstSplitterType(processorType.getOutputs());
      }
      if (result != null) {
        break;
      }
    }
    return result;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:parallel-custom-pool").split(body().tokenize(",")).parallelProcessing().executorService(customThreadPoolExecutor).to("mock:result");
      }
    }
;
  }
}
