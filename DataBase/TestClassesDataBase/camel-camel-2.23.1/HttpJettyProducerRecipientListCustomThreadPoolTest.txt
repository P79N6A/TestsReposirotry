/** 
 * @version 
 */
public class HttpJettyProducerRecipientListCustomThreadPoolTest extends BaseJettyTest {
  @Test public void testRecipientList() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    Thread.sleep(1000);
    Exchange a=template.request("direct:a",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader("slip","jetty://http://localhost:" + getPort() + "/myapp?foo=123&bar=cheese&httpClientMinThreads=4&httpClientMaxThreads=8");
      }
    }
);
    assertNotNull(a);
    assertEquals("Bye cheese",a.getOut().getBody(String.class));
    assertEquals(246,a.getOut().getHeader("foo",Integer.class).intValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:a").recipientList(header("slip"));
        from("jetty://http://localhost:{{port}}/myapp").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            int foo=exchange.getIn().getHeader("foo",Integer.class);
            String bar=exchange.getIn().getHeader("bar",String.class);
            exchange.getOut().setHeader("foo",foo * 2);
            exchange.getOut().setBody("Bye " + bar);
          }
        }
);
      }
    }
;
  }
}
