/** 
 * Tests for the  class.
 */
public class MllpSocketBufferReadFromTest extends SocketBufferTestSupport {
  SocketStub socketStub;
  SocketInputStreamStub inputStreamStub;
  @Before public void setUp() throws Exception {
    super.setUp();
    socketStub=new SocketStub();
    inputStreamStub=socketStub.inputStreamStub;
  }
  /** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
  @Test public void testReadFromWithTimeoutExceptionOnInitialRead() throws Exception {
    inputStreamStub.addPacket(new SocketTimeoutException("Fake Timeout Exception"));
    try {
      endpoint.setReceiveTimeout(500);
      endpoint.setReadTimeout(100);
      instance.readFrom(socketStub);
      fail("Should have thrown and exception");
    }
 catch (    SocketTimeoutException expectedEx) {
      assertNull(instance.toByteArray());
    }
  }
  /** 
 * Description of test.
 * @throws Exception in the event of a test error.
 */
  @Test public void testReadFromWithTimeoutException() throws Exception {
    inputStreamStub.addPacket("FOO".getBytes()).addPacket("BAR".getBytes()).addPacket(new SocketTimeoutException("Fake Timeout Exception"));
    try {
      endpoint.setReceiveTimeout(500);
      endpoint.setReadTimeout(100);
      instance.readFrom(socketStub);
      fail("Should have thrown and exception");
    }
 catch (    SocketTimeoutException expectedEx) {
      assertNull(instance.toByteArray());
    }
  }
}
