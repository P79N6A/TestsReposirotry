public class InfinispanIdempotentRepositoryIT extends CamelTestSupport {
  @Test public void producerQueryOperationWithoutQueryBuilder() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    final String messageId=UUID.randomUUID().toString();
    IntStream.range(0,10).forEach(i -> template().sendBodyAndHeader("direct:start","message-" + i,"MessageID",messageId));
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure(){
        from("direct:start").idempotentConsumer(header("MessageID"),new InfinispanIdempotentRepository(new RemoteCacheManager(new ConfigurationBuilder().addServers("localhost").build(),true),"idempotent")).skipDuplicate(true).to("log:org.apache.camel.component.infinispan.processor.idempotent?level=INFO&showAll=true&multiline=true").to("mock:result");
      }
    }
;
  }
}
