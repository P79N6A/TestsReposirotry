/** 
 */
public class RegistryLookupTypeClassCastExceptionTest extends Assert {
  @Test public void testLookupOk() throws Exception {
    SimpleRegistry simple=new SimpleRegistry();
    MyClass my=new MyClass();
    simple.put("my",my);
    assertEquals(my,simple.lookupByName("my"));
    assertEquals(my,simple.lookupByNameAndType("my",MyClass.class));
    assertNull(simple.lookupByName("foo"));
    assertNull(simple.lookupByNameAndType("foo",MyClass.class));
  }
  @Test public void testCamelContextLookupOk() throws Exception {
    SimpleRegistry simple=new SimpleRegistry();
    CamelContext context=new DefaultCamelContext(simple);
    MyClass my=new MyClass();
    simple.put("my",my);
    assertEquals(my,context.getRegistry().lookupByName("my"));
    assertEquals(my,context.getRegistry().lookupByNameAndType("my",MyClass.class));
    assertNull(context.getRegistry().lookupByName("foo"));
    assertNull(context.getRegistry().lookupByNameAndType("foo",MyClass.class));
  }
  @Test public void testLookupClassCast() throws Exception {
    SimpleRegistry simple=new SimpleRegistry();
    MyClass my=new MyClass();
    simple.put("my",my);
    try {
      simple.lookupByNameAndType("my",String.class);
      fail("Should have thrown exception");
    }
 catch (    NoSuchBeanException e) {
      assertEquals("my",e.getName());
      assertTrue(e.getMessage().endsWith("expected type was: class java.lang.String"));
    }
  }
  @Test public void testCamelContextLookupClassCast() throws Exception {
    SimpleRegistry simple=new SimpleRegistry();
    CamelContext context=new DefaultCamelContext(simple);
    MyClass my=new MyClass();
    simple.put("my",my);
    try {
      context.getRegistry().lookupByNameAndType("my",String.class);
      fail("Should have thrown exception");
    }
 catch (    NoSuchBeanException e) {
      assertEquals("my",e.getName());
      assertTrue(e.getMessage().endsWith("expected type was: class java.lang.String"));
    }
  }
public static class MyClass {
  }
}
