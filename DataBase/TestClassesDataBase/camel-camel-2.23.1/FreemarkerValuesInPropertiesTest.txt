public class FreemarkerValuesInPropertiesTest extends CamelTestSupport {
  @EndpointInject(uri="mock:result") private MockEndpoint mock;
  @Test public void testVelocityLetter() throws Exception {
    mock.expectedBodiesReceived("Dear Christian. You ordered item 7.");
    template.send("direct:a",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(FreemarkerConstants.FREEMARKER_TEMPLATE,"Dear ${exchange.properties.name}. You ordered item ${exchange.properties.item}.");
        exchange.setProperty("name","Christian");
        exchange.setProperty("item","7");
      }
    }
);
    mock.assertIsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:a").to("freemarker:dummy").to("mock:result");
      }
    }
;
  }
}
