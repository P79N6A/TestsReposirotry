/** 
 * @version 
 */
public class JmsInOutIssueTest extends CamelTestSupport {
  @Test public void testInOutWithRequestBody() throws Exception {
    String reply=template.requestBody("activemq:queue:in","Hello World",String.class);
    assertEquals("Bye World",reply);
  }
  @Test public void testInOutTwoTimes() throws Exception {
    String reply=template.requestBody("activemq:queue:in","Hello World",String.class);
    assertEquals("Bye World",reply);
    reply=template.requestBody("activemq:queue:in","Hello Camel",String.class);
    assertEquals("Bye World",reply);
  }
  @Test public void testInOutWithAsyncRequestBody() throws Exception {
    Future<String> reply=template.asyncRequestBody("activemq:queue:in","Hello World",String.class);
    assertEquals("Bye World",reply.get());
  }
  @Test public void testInOutWithSendExchange() throws Exception {
    Exchange out=template.send("activemq:queue:in",ExchangePattern.InOut,new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
      }
    }
);
    assertEquals("Bye World",out.getOut().getBody());
  }
  @Test public void testInOutWithAsyncSendExchange() throws Exception {
    Future<Exchange> out=template.asyncSend("activemq:queue:in",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.setPattern(ExchangePattern.InOut);
        exchange.getIn().setBody("Hello World");
      }
    }
);
    assertEquals("Bye World",out.get().getOut().getBody());
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:queue:in").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("Bye World");
          }
        }
);
      }
    }
;
  }
}
