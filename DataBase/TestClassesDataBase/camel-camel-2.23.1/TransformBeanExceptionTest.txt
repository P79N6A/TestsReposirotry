public class TransformBeanExceptionTest extends ContextTestSupport {
  @Test public void testTransformBeanException() throws Exception {
    getMockEndpoint("mock:dead").expectedBodiesReceived("Hello World","Bye World","Hi World","Hi Camel","Bye Camel");
    template.sendBody("direct:transform","Hello World");
    template.sendBody("direct:bean","Bye World");
    template.sendBody("direct:setBody","Hi World");
    template.sendBody("direct:setHeader","Hi Camel");
    template.sendBody("direct:setProperty","Bye Camel");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:dead"));
        from("direct:transform").transform().method(TransformBeanExceptionTest.class,"throwUp");
        from("direct:bean").bean(TransformBeanExceptionTest.class,"throwUp");
        from("direct:setBody").setBody().method(TransformBeanExceptionTest.class,"throwUp");
        from("direct:setHeader").setHeader("hello").method(TransformBeanExceptionTest.class,"throwUp");
        from("direct:setProperty").setProperty("bye").method(TransformBeanExceptionTest.class,"throwUp");
      }
    }
;
  }
  public static String throwUp(  String body){
    throw new IllegalArgumentException("Forced");
  }
}
