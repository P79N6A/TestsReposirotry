/** 
 * Based on CAMEL-1546
 * @version 
 */
public class AggregatorExceptionHandleTest extends ContextTestSupport {
  @Test public void testOk() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:handled").expectedMessageCount(0);
    template.sendBodyAndHeader("direct:start","Hello World","id",1);
    template.sendBodyAndHeader("direct:start","Hi World","id",1);
    assertMockEndpointsSatisfied();
  }
  @Test public void testHandled() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:handled");
    mock.expectedBodiesReceived("Damn");
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBodyAndHeader("direct:start","Hi World","id",1);
    template.sendBodyAndHeader("direct:start","Damn","id",1);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(IllegalArgumentException.class).handled(true).to("mock:handled");
        from("direct:start").aggregate(header("id"),new UseLatestAggregationStrategy()).completionTimeout(100).completionTimeoutCheckerInterval(10).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            if ("Damn".equals(body)) {
              throw new IllegalArgumentException("Damn");
            }
            exchange.getOut().setBody("Bye World");
          }
        }
).to("mock:result");
      }
    }
;
  }
}
