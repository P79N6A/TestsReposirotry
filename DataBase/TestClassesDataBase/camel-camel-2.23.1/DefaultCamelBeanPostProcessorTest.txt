/** 
 * @version 
 */
public class DefaultCamelBeanPostProcessorTest extends ContextTestSupport {
  private DefaultCamelBeanPostProcessor postProcessor;
  @Test public void testPostProcessor() throws Exception {
    FooService foo=new FooService();
    foo.setFooEndpoint("seda:input");
    foo.setBarEndpoint("mock:result");
    postProcessor.postProcessBeforeInitialization(foo,"foo");
    postProcessor.postProcessAfterInitialization(foo,"foo");
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("seda:input","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    postProcessor=new DefaultCamelBeanPostProcessor(context);
  }
public class FooService {
    private String fooEndpoint;
    private String barEndpoint;
    @Produce private ProducerTemplate bar;
    public String getFooEndpoint(){
      return fooEndpoint;
    }
    public void setFooEndpoint(    String fooEndpoint){
      this.fooEndpoint=fooEndpoint;
    }
    public String getBarEndpoint(){
      return barEndpoint;
    }
    public void setBarEndpoint(    String barEndpoint){
      this.barEndpoint=barEndpoint;
    }
    @Consume public void onFoo(    String input){
      bar.sendBody(input);
    }
  }
}
