/** 
 * @version 
 */
public class JmsCustomJMSReplyToIssueTest extends CamelTestSupport {
  private JmsComponent amq;
  @Test public void testCustomJMSReplyTo() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Hello World");
    Thread.sleep(1000);
    JmsTemplate jms=new JmsTemplate(amq.getConfiguration().getConnectionFactory());
    TextMessage msg=(TextMessage)jms.receive("in");
    assertEquals("Hello World",msg.getText());
    Destination replyTo=msg.getJMSReplyTo();
    assertEquals("queue://myReplyQueue",replyTo.toString());
    template.sendBody("activemq:" + replyTo.toString(),"Bye World");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    amq=camelContext.getComponent("activemq",JmsComponent.class);
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("Hello World");
            exchange.getOut().setHeader("JMSReplyTo","myReplyQueue");
          }
        }
).to("activemq:queue:in?preserveMessageQos=true");
        from("activemq:queue:myReplyQueue").to("mock:result");
      }
    }
;
  }
}
