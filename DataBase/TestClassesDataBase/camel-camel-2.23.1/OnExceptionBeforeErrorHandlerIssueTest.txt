/** 
 * @version 
 */
public class OnExceptionBeforeErrorHandlerIssueTest extends ContextTestSupport {
  @Test public void testOk() throws Exception {
    context.startRoute("foo");
    getMockEndpoint("mock:error").expectedMessageCount(0);
    getMockEndpoint("mock:dead").expectedMessageCount(0);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testKabom() throws Exception {
    context.startRoute("foo");
    getMockEndpoint("mock:error").expectedMessageCount(0);
    getMockEndpoint("mock:dead").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBody("direct:start","kabom");
    assertMockEndpointsSatisfied();
  }
  @Test public void testIllegal() throws Exception {
    context.startRoute("foo");
    getMockEndpoint("mock:error").expectedMessageCount(1);
    getMockEndpoint("mock:dead").expectedMessageCount(0);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBody("direct:start","illegal");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(IllegalArgumentException.class).handled(true).setBody().constant("Handled").to("mock:error").end();
        errorHandler(deadLetterChannel("mock:dead").useOriginalMessage());
        from("direct:start").routeId("foo").noAutoStartup().process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            if ("illegal".equals(body)) {
              throw new IllegalArgumentException("I cannot do this");
            }
 else             if ("kabom".equals(body)) {
              throw new RuntimeException("Kabom");
            }
          }
        }
).to("mock:result");
      }
    }
;
  }
}
