public class FastjsonJsonDataFormatTest extends FastjsonMarshalTest {
  @Test public void testUnmarshalMap() throws Exception {
    Map<?,?> unmarshalled=template.requestBody("direct:json","{\"pointsOfSale\":{\"pointOfSale\":{\"prodcut\":\"newpad\"}}}",Map.class);
    Map<?,?> map1=(Map<?,?>)unmarshalled.get("pointsOfSale");
    Map<?,?> map2=(Map<?,?>)map1.get("pointOfSale");
    assertEquals("Don't get the right value","newpad",map2.get("prodcut"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:in").marshal().json(JsonLibrary.Fastjson);
        from("direct:back").unmarshal().json(JsonLibrary.Fastjson).to("mock:reverse");
        from("direct:inPojo").marshal().json(JsonLibrary.Fastjson);
        from("direct:backPojo").unmarshal().json(JsonLibrary.Fastjson,TestPojo.class).to("mock:reversePojo");
        from("direct:json").unmarshal().json(JsonLibrary.Fastjson,Map.class);
      }
    }
;
  }
}
