public class ContainerTest extends Assert {
private final class MyContainer implements Container {
    private List<String> names=new ArrayList<>();
    @Override public void manage(    CamelContext camelContext){
      names.add(camelContext.getName());
    }
  }
  @After public void tearDown() throws Exception {
    Container.Instance.set(null);
  }
  @Test public void testContainerSet() throws Exception {
    MyContainer myContainer=new MyContainer();
    CamelContext camel1=new DefaultCamelContext();
    CamelContext camel2=new DefaultCamelContext();
    camel1.start();
    camel2.start();
    assertEquals(0,myContainer.names.size());
    Container.Instance.set(myContainer);
    assertEquals(2,myContainer.names.size());
    CamelContext camel3=new DefaultCamelContext();
    camel3.start();
    assertEquals(3,myContainer.names.size());
    assertEquals(camel1.getName(),myContainer.names.get(0));
    assertEquals(camel2.getName(),myContainer.names.get(1));
    assertEquals(camel3.getName(),myContainer.names.get(2));
    camel1.stop();
    camel2.stop();
    camel3.stop();
  }
  @Test public void testNoContainerSet() throws Exception {
    MyContainer myContainer=new MyContainer();
    CamelContext camel1=new DefaultCamelContext();
    CamelContext camel2=new DefaultCamelContext();
    camel1.start();
    camel2.start();
    assertEquals(0,myContainer.names.size());
    camel1.stop();
    camel2.stop();
  }
}
