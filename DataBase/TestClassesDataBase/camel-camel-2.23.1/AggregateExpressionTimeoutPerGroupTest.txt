/** 
 * @version 
 */
public class AggregateExpressionTimeoutPerGroupTest extends ContextTestSupport {
  @Test public void testAggregateExpressionPerGroupTimeout() throws Exception {
    getMockEndpoint("mock:aggregated").expectedBodiesReceived("G+H+I","D+E+F","A+B+C");
    template.sendBodyAndHeader("direct:start","A","id",789);
    template.sendBodyAndHeader("direct:start","B","id",789);
    template.sendBodyAndHeader("direct:start","C","id",789);
    Map<String,Object> headers=new HashMap<>();
    headers.put("id",123);
    headers.put("timeout",500);
    template.sendBodyAndHeaders("direct:start","D",headers);
    template.sendBodyAndHeaders("direct:start","E",headers);
    template.sendBodyAndHeaders("direct:start","F",headers);
    Map<String,Object> headers2=new HashMap<>();
    headers2.put("id",456);
    headers2.put("timeout",100);
    template.sendBodyAndHeaders("direct:start","G",headers2);
    template.sendBodyAndHeaders("direct:start","H",headers2);
    template.sendBodyAndHeaders("direct:start","I",headers2);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(header("id"),new BodyInAggregatingStrategy()).completionTimeout(header("timeout")).completionTimeout(1000).completionTimeoutCheckerInterval(10).to("mock:aggregated");
      }
    }
;
  }
}
