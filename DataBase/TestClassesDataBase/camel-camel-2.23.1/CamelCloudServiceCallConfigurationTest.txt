public class CamelCloudServiceCallConfigurationTest {
  @Test public void testConfiguration(){
    new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class)).withPropertyValues("camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false").run((context) -> {
      Environment env=context.getEnvironment();
      assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
      assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
      assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
      assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
      assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
      assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
      assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
      assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
      assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
    }
);
  }
}
