public class AsyncEndpointDoWhileLoopTest extends ContextTestSupport {
  @Test public void testAsyncEndpoint() throws Exception {
    getMockEndpoint("mock:line").expectedBodiesReceived("Bye Camel","Bye Camel","Bye Camel","Bye Camel");
    getMockEndpoint("mock:result").expectedBodiesReceived("done");
    template.requestBody("direct:start","World",String.class);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.addComponent("async",new MyAsyncComponent());
        from("direct:start").loopDoWhile(body().isNotEqualTo("done")).to("async:bye:camel").to("mock:line").filter(exchangeProperty(Exchange.LOOP_INDEX).isEqualTo(3)).setBody().constant("done").end().end().to("mock:result");
      }
    }
;
  }
}
