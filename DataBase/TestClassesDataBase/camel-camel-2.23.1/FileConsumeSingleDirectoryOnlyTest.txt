/** 
 * Unit test for consuming the single directory only.
 */
public class FileConsumeSingleDirectoryOnlyTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/singledirectoryonly");
    super.setUp();
  }
  @Test public void testConsumeFileOnly() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceivedInAnyOrder("Hello World","Bye World");
    template.sendBodyAndHeader("file://target/singledirectoryonly/2008","2008 Report",Exchange.FILE_NAME,"report2008.txt");
    template.sendBodyAndHeader("file://target/singledirectoryonly","Hello World",Exchange.FILE_NAME,"report.txt");
    template.sendBodyAndHeader("file://target/singledirectoryonly","Bye World",Exchange.FILE_NAME,"report2.txt");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("file://target/singledirectoryonly/?recursive=false&delete=true&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:result");
      }
    }
;
  }
}
