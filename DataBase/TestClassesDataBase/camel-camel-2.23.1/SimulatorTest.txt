/** 
 * @version 
 */
public class SimulatorTest extends CamelTestSupport {
  protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("foo",new MyBean("foo"));
    answer.bind("bar",new MyBean("bar"));
    return answer;
  }
  @Test public void testReceivesFooResponse() throws Exception {
    assertRespondsWith("foo","Bye said foo");
  }
  @Test public void testReceivesBarResponse() throws Exception {
    assertRespondsWith("bar","Bye said bar");
  }
  protected void assertRespondsWith(  final String value,  String containedText) throws InvalidPayloadException {
    Exchange response=template.request("direct:a",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        Message in=exchange.getIn();
        in.setBody("answer");
        in.setHeader("cheese",value);
      }
    }
);
    assertNotNull("Should receive a response!",response);
    String text=response.getOut().getMandatoryBody(String.class);
    assertStringContains(text,containedText);
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:a").recipientList(el("bean:${in.headers.cheese}"));
      }
    }
;
  }
public static class MyBean {
    private String value;
    public MyBean(    String value){
      this.value=value;
    }
    public String doSomething(    String in){
      return "Bye said " + value;
    }
  }
}
