/** 
 * @version 
 */
public class QuartzPropertiesTest extends BaseQuartzTest {
  private QuartzComponent quartz;
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Override @After public void tearDown() throws Exception {
    quartz.stop();
    super.tearDown();
  }
  @Test public void testQuartzPropertiesFile() throws Exception {
    quartz=context.getComponent("quartz",QuartzComponent.class);
    quartz.setPropertiesFile("org/apache/camel/component/quartz/myquartz.properties");
    quartz.start();
    assertEquals("MyScheduler-" + context.getName(),quartz.getScheduler().getSchedulerName());
    assertEquals("2",quartz.getScheduler().getSchedulerInstanceId());
  }
  @Test public void testQuartzPropertiesFileNotFound() throws Exception {
    quartz=context.getComponent("quartz",QuartzComponent.class);
    quartz.setPropertiesFile("doesnotexist.properties");
    try {
      quartz.start();
      fail("Should have thrown exception");
    }
 catch (    SchedulerException e) {
      assertEquals("Error loading Quartz properties file: doesnotexist.properties",e.getMessage());
    }
  }
  @Test public void testQuartzProperties() throws Exception {
    quartz=context.getComponent("quartz",QuartzComponent.class);
    Properties prop=new Properties();
    InputStream is=context.getClassResolver().loadResourceAsStream("org/apache/camel/component/quartz/myquartz.properties");
    prop.load(is);
    quartz.setProperties(prop);
    quartz.start();
    assertEquals("MyScheduler-" + context.getName(),quartz.getScheduler().getSchedulerName());
    assertEquals("2",quartz.getScheduler().getSchedulerInstanceId());
  }
}
