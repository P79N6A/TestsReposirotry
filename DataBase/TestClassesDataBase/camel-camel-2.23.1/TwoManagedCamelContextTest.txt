/** 
 * @version 
 */
public class TwoManagedCamelContextTest extends TestSupport {
  private CamelContext camel1;
  private CamelContext camel2;
  protected CamelContext createCamelContext(  String name) throws Exception {
    DefaultCamelContext context=new DefaultCamelContext();
    context.setName(name);
    return context;
  }
  @Test public void testTwoManagedCamelContext() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    camel1=createCamelContext("foo");
    camel2=createCamelContext("bar");
    camel1.start();
    camel2.start();
    MBeanServer mbeanServer=camel1.getManagementStrategy().getManagementAgent().getMBeanServer();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=foo,type=context,name=\"foo\"");
    assertTrue("Should be registered",mbeanServer.isRegistered(on));
    ObjectName on2=ObjectName.getInstance("org.apache.camel:context=bar,type=context,name=\"bar\"");
    assertTrue("Should be registered",mbeanServer.isRegistered(on2));
    camel1.stop();
    camel2.stop();
    assertFalse("Should be unregistered",mbeanServer.isRegistered(on));
    assertFalse("Should be unregistered",mbeanServer.isRegistered(on2));
  }
  @Override @After public void tearDown() throws Exception {
    if (camel1 != null) {
      camel1.stop();
    }
    if (camel2 != null) {
      camel2.stop();
    }
    super.tearDown();
  }
}
