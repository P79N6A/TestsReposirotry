/** 
 */
public class VetoCamelContextStartTest extends ContextTestSupport {
  private LifecycleStrategy veto=new MyVeto();
  @Test public void testVetoCamelContextStart() throws Exception {
    assertEquals(false,context.getStatus().isStarted());
    assertEquals(true,context.getStatus().isStopped());
    assertEquals(0,context.getRoutes().size());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:result");
      }
    }
;
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.addLifecycleStrategy(veto);
    return context;
  }
private class MyVeto extends LifecycleStrategySupport {
    @Override public void onContextStart(    CamelContext context) throws VetoCamelContextStartException {
      throw new VetoCamelContextStartException("Forced",context,false);
    }
  }
}
