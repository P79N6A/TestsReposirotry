@RunWith(Arquillian.class) @ImportResource("imported-context.xml") public class XmlRouteContextImportTest {
  @Inject @Uri("direct:inbound") private ProducerTemplate inbound;
  @Inject @Uri("mock:outbound") private MockEndpoint outbound;
  @Inject @Named("import") private List<RouteDefinition> routes;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsResource(Paths.get("src/test/resources/camel-context-routeContextRef-import.xml").toFile(),"imported-context.xml").addAsResource(Paths.get("src/test/resources/camel-context-routeContext.xml").toFile(),"imported-route-context.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyRouteContext(){
    assertThat("Route context is incorrect!",routes,hasSize(1));
    RouteDefinition route=routes.get(0);
    assertThat("Route input is incorrect!",route.getInputs(),hasSize(1));
    assertThat("Route is incorrect!",route.getInputs().get(0).getEndpointUri(),is(equalTo("direct:inbound")));
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("Response to message");
    inbound.sendBody("message");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
}
