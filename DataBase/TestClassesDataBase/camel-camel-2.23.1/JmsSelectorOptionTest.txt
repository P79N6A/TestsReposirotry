public class JmsSelectorOptionTest extends JmsTestSupport {
  @Test public void testJmsMessageWithSelector() throws Exception {
    MockEndpoint endpointA=getMockEndpoint("mock:a");
    MockEndpoint endpointB=getMockEndpoint("mock:b");
    MockEndpoint endpointC=getMockEndpoint("mock:c");
    endpointA.expectedBodiesReceivedInAnyOrder("A blue car!","A blue car, again!");
    endpointA.expectedHeaderReceived("color","blue");
    endpointB.expectedHeaderReceived("color","red");
    endpointB.expectedBodiesReceived("A red car!");
    endpointC.expectedBodiesReceived("Message1","Message2");
    endpointC.expectedMessageCount(2);
    template.sendBodyAndHeader("sjms:queue:hello","A blue car!","color","blue");
    template.sendBodyAndHeader("sjms:queue:hello","A red car!","color","red");
    template.sendBodyAndHeader("sjms:queue:hello","A blue car, again!","color","blue");
    template.sendBodyAndHeader("sjms:queue:hello","Message1","SIZE_NUMBER",1505);
    template.sendBodyAndHeader("sjms:queue:hello","Message3","SIZE_NUMBER",1300);
    template.sendBodyAndHeader("sjms:queue:hello","Message2","SIZE_NUMBER",1600);
    assertMockEndpointsSatisfied();
  }
  @Test public void testConsumerTemplate() throws Exception {
    template.sendBodyAndHeader("sjms:queue:consumer","Message1","SIZE_NUMBER",1505);
    template.sendBodyAndHeader("sjms:queue:consumer","Message3","SIZE_NUMBER",1300);
    template.sendBodyAndHeader("sjms:queue:consumer","Message2","SIZE_NUMBER",1600);
    while (true) {
      Exchange ex=consumer.receiveNoWait("sjms:queue:consumer?messageSelector=SIZE_NUMBER<1500");
      if (ex != null) {
        Message message=ex.getIn();
        int size=message.getHeader("SIZE_NUMBER",int.class);
        assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);
        assertEquals("The message body is wrong","Message3",message.getBody());
      }
 else {
        break;
      }
    }
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("sjms:queue:hello?messageSelector=color='blue'").to("mock:a");
        from("sjms:queue:hello?messageSelector=color='red'").to("mock:b");
        from("sjms:queue:hello?messageSelector=SIZE_NUMBER>1500").to("mock:c");
      }
    }
;
  }
}
