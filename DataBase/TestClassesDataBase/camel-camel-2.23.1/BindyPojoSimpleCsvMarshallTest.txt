@ContextConfiguration public class BindyPojoSimpleCsvMarshallTest extends AbstractJUnit4SpringContextTests {
  private static final String URI_MOCK_RESULT="mock:result";
  private static final String URI_MOCK_ERROR="mock:error";
  private static final String URI_DIRECT_START="direct:start";
  private String expected;
  @Produce(uri=URI_DIRECT_START) private ProducerTemplate template;
  @EndpointInject(uri=URI_MOCK_RESULT) private MockEndpoint result;
  @Test @DirtiesContext public void testMarshallMessage() throws Exception {
    expected="1,B2,Keira,Knightley,ISIN,XX23456789,BUY,Share,400.25,EUR,14-01-2009,17-02-2010 23:27:59\r\n";
    result.expectedBodiesReceived(expected);
    template.sendBody(generateModel());
    result.assertIsSatisfied();
  }
  public Object generateModel(){
    Order order=new Order();
    order.setOrderNr(1);
    order.setOrderType("BUY");
    order.setClientNr("B2");
    order.setFirstName("Keira");
    order.setLastName("Knightley");
    order.setAmount(new BigDecimal("400.25"));
    order.setInstrumentCode("ISIN");
    order.setInstrumentNumber("XX23456789");
    order.setInstrumentType("Share");
    order.setCurrency("EUR");
    Calendar calendar=new GregorianCalendar();
    calendar.set(2009,0,14);
    order.setOrderDate(calendar.getTime());
    calendar=Calendar.getInstance(TimeZone.getTimeZone("GMT"));
    calendar.set(2010,1,17,19,27,59);
    calendar.set(Calendar.MILLISECOND,0);
    order.setOrderDateTime(calendar.getTime());
    return order;
  }
public static class ContextConfig extends RouteBuilder {
    public void configure(){
      BindyCsvDataFormat camelDataFormat=new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.model.simple.oneclass.Order.class);
      camelDataFormat.setLocale("en");
      Tracer tracer=new Tracer();
      tracer.setLogLevel(LoggingLevel.ERROR);
      tracer.setLogName("org.apache.camel.bindy");
      getContext().addInterceptStrategy(tracer);
      errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0));
      onException(Exception.class).maximumRedeliveries(0).handled(true);
      from(URI_DIRECT_START).marshal(camelDataFormat).to(URI_MOCK_RESULT);
    }
  }
}
