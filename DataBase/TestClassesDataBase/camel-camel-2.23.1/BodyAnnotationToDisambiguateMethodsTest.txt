/** 
 * @version 
 */
public class BodyAnnotationToDisambiguateMethodsTest extends ContextTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(BeanRouteTest.class);
  protected MyBean myBean=new MyBean();
  @Test public void testSendMessage() throws Exception {
    String expectedBody="Wobble";
    template.sendBodyAndHeader("direct:in",expectedBody,"foo","bar");
    assertEquals("bean body: " + myBean,expectedBody,myBean.body);
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myBean",myBean);
    return answer;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:in").bean("myBean");
      }
    }
;
  }
public static class MyBean {
    public String body;
    public void bar(    String body){
      fail("bar() called with: " + body);
    }
    public void foo(    @Body String body){
      this.body=body;
      LOG.info("foo() method called on " + this);
    }
    public void wrongMethod(    String body){
      fail("wrongMethod() called with: " + body);
    }
  }
}
