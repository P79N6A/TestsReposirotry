public class WhitelistTest extends CamelTestSupport {
  @Test public void testDeny() throws Exception {
    final String stuff="<x xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:java=\"http://java.sun.com\"" + " xsi:type=\"java:org.springframework.beans.factory.config.PropertyPathFactoryBean\">" + "<target-bean-name>ldap://localhost:1389/obj</target-bean-name><property-path>foo</property-path>"+ "<bean-factory xsi:type=\"java:org.springframework.jndi.support.SimpleJndiBeanFactory\">"+ "<shareable-resource>ldap://localhost:1389/obj</shareable-resource></bean-factory></x>";
    try {
      template.sendBody("direct:unmarshal",stuff);
      fail("Should throw an error");
    }
 catch (    Exception e) {
      IllegalAccessException iae=assertIsInstanceOf(IllegalAccessException.class,e.getCause().getCause());
      assertNotNull(iae);
      assertTrue(iae.getMessage().startsWith("Not allowed to create class of type: class org.springframework.beans.factory.config.PropertyPathFactoryBean"));
    }
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    CastorDataFormat castor=new CastorDataFormat();
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:unmarshal").unmarshal(castor).to("mock:unmarshal");
      }
    }
;
  }
}
