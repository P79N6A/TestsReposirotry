/** 
 */
public class DefaultCacheManagerFactoryTest extends Assert {
  @Test public void testEHCacheCompatiblity() throws Exception {
    CacheManagerFactory factory=new DefaultCacheManagerFactory();
    CacheManager manager=factory.getInstance();
    assertEquals(Status.STATUS_ALIVE,manager.getStatus());
    Configuration conf=ConfigurationFactory.parseConfiguration(DefaultCacheManagerFactory.class.getResource("/test-ehcache.xml"));
    assertNotNull(conf);
    conf.setName("otherCache");
    CacheManager other=CacheManager.create(conf);
    assertEquals(Status.STATUS_ALIVE,other.getStatus());
    other.shutdown();
    assertEquals(Status.STATUS_SHUTDOWN,other.getStatus());
    assertEquals(Status.STATUS_ALIVE,manager.getStatus());
    factory.doStop();
    assertEquals(Status.STATUS_SHUTDOWN,manager.getStatus());
  }
  @Test public void testNoProvidedConfiguration() throws Exception {
    CacheManagerFactory factory=new DefaultCacheManagerFactory(getClass().getResourceAsStream("/ehcache.xml"),"/ehcache.xml");
    CacheManager manager=factory.getInstance();
    assertThat("There should be no peer providers configured",manager.getCacheManagerPeerProviders().size(),is(0));
    assertThat("There should be no /ehcache.xml resource by default",getClass().getResourceAsStream("/ehcache.xml"),nullValue());
  }
  @Test public void testFailSafeEHCacheManager() throws Exception {
    CacheManagerFactory factory1=new DefaultCacheManagerFactory(null,null);
    CacheManagerFactory factory2=new DefaultCacheManagerFactory();
    assertSame("The cache managers should be the same, loaded from fallback ehcache config",factory1.getInstance(),factory2.getInstance());
  }
}
