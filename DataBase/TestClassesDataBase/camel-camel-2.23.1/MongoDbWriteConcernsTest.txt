public class MongoDbWriteConcernsTest extends AbstractMongoDbTest {
  @Test @Ignore public void testDynamicWriteConcernSafe() throws Exception {
    assertEquals(0,testCollection.count());
    Object result=template.requestBody("direct:noWriteConcern","{\"scientist\":\"newton\"}");
    assertTrue("Result is not of type WriteResult",result instanceof WriteResult);
    WriteResult wr=(WriteResult)result;
    assertTrue(wr.wasAcknowledged());
    result=template.requestBody("direct:noWriteConcern","{\"scientist\":\"newton\"}");
    assertTrue("Result is not of type WriteResult",result instanceof WriteResult);
    wr=(WriteResult)result;
    assertTrue(wr.wasAcknowledged());
  }
  @Test @Ignore public void testDynamicWriteConcernUnknown() throws Exception {
    assertEquals(0,testCollection.count());
    try {
      template.requestBodyAndHeader("direct:noWriteConcern","{\"scientist\":\"newton\"}",MongoDbConstants.WRITECONCERN,"Random");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
      extractAndAssertCamelMongoDbException(e,"WriteConcern specified in the " + MongoDbConstants.WRITECONCERN + " header");
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:noWriteConcern").to("mongodb:myDb?database=test&collection=camelTest&operation=insert");
        from("direct:writeConcernParam").to("mongodb:myDb?database=test&collection=camelTest&operation=insert&writeConcern=SAFE");
        from("direct:noWriteConcernWithCallGetLastError").to("mongodb:myDb?database=test&collection=camelTest&operation=insert");
      }
    }
;
  }
}
