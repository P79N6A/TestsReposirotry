/** 
 * @version 
 */
public class JmsSimpleHeaderTest extends CamelTestSupport {
  protected String componentName="activemq";
  @Test public void testByteJMSHeaders() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).header("data").isEqualTo((byte)40);
    template.sendBodyAndHeader("activemq:queue:foo","Hello World","data",(byte)40);
    assertMockEndpointsSatisfied();
  }
  @Test public void testCharJMSHeaders() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).header("data").isEqualTo('A');
    template.sendBodyAndHeader("activemq:queue:foo","Hello World","data",'A');
    assertMockEndpointsSatisfied();
  }
  @Test public void testCharSequenceJMSHeaders() throws Exception {
    CharSequence cs=new StringBuilder("Bye World");
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).header("data").isEqualTo(cs);
    template.sendBodyAndHeader("activemq:queue:foo","Hello World","data",cs);
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent(componentName,jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:foo").to("mock:result");
      }
    }
;
  }
}
