public class RemoveHeaderTest extends ContextTestSupport {
  private MockEndpoint end;
  private MockEndpoint mid;
  private String headerName="foo";
  private String expectedHeaderValue="bar";
  @Test public void testSetHeaderMidRouteThenRemove() throws Exception {
    mid.expectedMessageCount(1);
    end.expectedMessageCount(1);
    template.sendBody("direct:start","<blah/>");
    assertMockEndpointsSatisfied();
    List<Exchange> midExchanges=mid.getExchanges();
    Exchange midExchange=midExchanges.get(0);
    String actualHeaderValue=midExchange.getIn().getHeader(headerName,String.class);
    assertEquals(expectedHeaderValue,actualHeaderValue);
    List<Exchange> endExchanges=end.getExchanges();
    Exchange endExchange=endExchanges.get(0);
    assertNull(endExchange.getIn().getHeader(headerName,String.class));
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    end=getMockEndpoint("mock:end");
    mid=getMockEndpoint("mock:mid");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").setHeader(headerName).constant(expectedHeaderValue).to("mock:mid").removeHeader(headerName).to("mock:end");
      }
    }
;
  }
}
