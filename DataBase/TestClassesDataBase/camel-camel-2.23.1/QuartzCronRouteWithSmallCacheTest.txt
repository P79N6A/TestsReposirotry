/** 
 * Endpoints are stored in a LRU list with a default capacity of 1000. If the list is full, then endpoints are removed and should be recreated. <p/> We simulate this behavior with a capacity of 1 element.
 */
public class QuartzCronRouteWithSmallCacheTest extends BaseQuartzTest {
  private final CountDownLatch latch=new CountDownLatch(3);
  @Test public void testQuartzCronRouteWithSmallCache() throws Exception {
    boolean wait=latch.await(10,TimeUnit.SECONDS);
    assertTrue(wait);
    assertTrue("Quartz should trigger at least 3 times",latch.getCount() <= 0);
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.getProperties().put(Exchange.MAXIMUM_ENDPOINT_CACHE_SIZE,"1");
    return context;
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:foo").to("log:foo");
        from("quartz://myGroup/myTimerName?cron=0/2+*+*+*+*+?").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            latch.countDown();
            template.sendBody("direct:foo","Quartz triggered");
          }
        }
);
      }
    }
;
  }
}
