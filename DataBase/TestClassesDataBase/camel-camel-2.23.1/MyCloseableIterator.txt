final class MyCloseableIterator implements Iterator<String>, Closeable {
  private static MyCloseableIterator singleton;
  private boolean closed;
  private MyCloseableIterator(){
  }
  public static MyCloseableIterator getInstance(){
    if (singleton == null) {
      singleton=new MyCloseableIterator();
    }
    return singleton;
  }
  @Override public void close() throws IOException {
    closed=true;
  }
  public boolean isClosed(){
    return closed;
  }
  @Override public boolean hasNext(){
    return true;
  }
  @Override public String next(){
    throw new RuntimeException("will be closed");
  }
  @Override public void remove(){
  }
}
