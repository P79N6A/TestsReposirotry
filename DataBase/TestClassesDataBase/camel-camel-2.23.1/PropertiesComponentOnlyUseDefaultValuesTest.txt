public class PropertiesComponentOnlyUseDefaultValuesTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testOnlyDefaults() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("{{foo:mock:foo}}").to("{{bar:mock:bar}}");
      }
    }
);
    context.start();
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testOneMissing() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("{{foo:mock:foo}}").to("{{bar}}");
      }
    }
);
    try {
      context.start();
      fail("Should have thrown exception");
    }
 catch (    FailedToCreateRouteException e) {
    }
  }
  @Test public void testAllMissing() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("{{foo:mock:foo}}").to("{{bar}}");
      }
    }
);
    try {
      context.start();
      fail("Should have thrown exception");
    }
 catch (    FailedToCreateRouteException e) {
    }
  }
}
