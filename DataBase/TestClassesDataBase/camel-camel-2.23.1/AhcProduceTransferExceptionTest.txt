public class AhcProduceTransferExceptionTest extends BaseAhcTest {
  @Test public void testAhcProduce() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    try {
      template.sendBody("direct:start",null);
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      MyOrderException cause=assertIsInstanceOf(MyOrderException.class,e.getCause());
      assertNotNull(cause);
      assertEquals("123",cause.getOrderId());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected String getTestServerEndpointUri(){
    return super.getTestServerEndpointUri() + "?transferException=true";
  }
  @Override protected String getAhcEndpointUri(){
    return super.getAhcEndpointUri() + "?transferException=true";
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to(getAhcEndpointUri()).to("mock:result");
        from(getTestServerEndpointUri()).throwException(new MyOrderException("123"));
      }
    }
;
  }
}
