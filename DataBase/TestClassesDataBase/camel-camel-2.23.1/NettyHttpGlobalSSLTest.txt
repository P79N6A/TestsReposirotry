public class NettyHttpGlobalSSLTest extends CamelTestSupport {
  @Produce private ProducerTemplate template;
  @EndpointInject(uri="mock:input") private MockEndpoint mockEndpoint;
  private Integer port;
  @BeforeClass public static void setUpJaas() throws Exception {
    URL trustStoreUrl=NettyHttpSSLTest.class.getClassLoader().getResource("jsse/localhost.ks");
    System.setProperty("javax.net.ssl.trustStore",trustStoreUrl.toURI().getPath());
  }
  @AfterClass public static void tearDownJaas() throws Exception {
    System.clearProperty("java.security.auth.login.config");
    System.clearProperty("javax.net.ssl.trustStore");
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    port=AvailablePortFinder.getNextAvailable(9000);
    CamelContext context=super.createCamelContext();
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    KeyManagersParameters keyManagers=new KeyManagersParameters();
    keyManagers.setKeyPassword("changeit");
    KeyStoreParameters keyStore=new KeyStoreParameters();
    keyStore.setResource("jsse/localhost.ks");
    keyStore.setPassword("changeit");
    keyManagers.setKeyStore(keyStore);
    sslContextParameters.setKeyManagers(keyManagers);
    TrustManagersParameters trustManagers=new TrustManagersParameters();
    trustManagers.setKeyStore(keyStore);
    sslContextParameters.setTrustManagers(trustManagers);
    context.setSSLContextParameters(sslContextParameters);
    ((SSLContextParametersAware)context.getComponent("netty-http")).setUseGlobalSslContextParameters(true);
    return context;
  }
  @Test public void testSSLInOutWithNettyConsumer() throws Exception {
    mockEndpoint.expectedBodiesReceived("Hello World");
    String out=template.requestBody("https://localhost:" + port,"Hello World",String.class);
    assertEquals("Bye World",out);
    mockEndpoint.assertIsSatisfied();
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty-http:https://localhost:" + port + "?ssl=true").to("mock:input").transform().simple("Bye World");
      }
    }
;
  }
}
