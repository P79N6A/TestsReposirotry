/** 
 * @version 
 */
public class BamRouteTest extends CamelSpringTestSupport {
  protected MockEndpoint overdueEndpoint;
  protected int errorTimeout=2;
  @Test public void testBam() throws Exception {
    overdueEndpoint.expectedMessageCount(1);
    template.sendBody("seda:a","<hello id='123'>world!</hello>");
    overdueEndpoint.assertIsSatisfied();
    ActivityState state=overdueEndpoint.getExchanges().get(0).getIn().getBody(ActivityState.class);
    assertNotNull(state);
    assertEquals("123",state.getCorrelationKey());
    assertEquals("b",state.getActivityDefinition().getName());
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("META-INF/spring/spring.xml");
  }
  @Before public void setUp() throws Exception {
    super.setUp();
    overdueEndpoint=getMockEndpoint("mock:overdue");
    overdueEndpoint.setResultWaitTime(20000);
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    EntityManagerFactory entityManagerFactory=getMandatoryBean(EntityManagerFactory.class,"entityManagerFactory");
    TransactionTemplate transactionTemplate=getMandatoryBean(TransactionTemplate.class,"transactionTemplate");
    return new ProcessBuilder(entityManagerFactory,transactionTemplate){
      public void configure() throws Exception {
        ActivityBuilder a=activity("seda:a").name("a").correlate(xpath("/hello/@id"));
        ActivityBuilder b=activity("seda:b").name("b").correlate(xpath("/hello/@id"));
        b.starts().after(a.completes()).expectWithin(seconds(1)).errorIfOver(seconds(errorTimeout)).to("mock:overdue");
      }
    }
;
  }
}
