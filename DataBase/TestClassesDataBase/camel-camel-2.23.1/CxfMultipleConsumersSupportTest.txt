/** 
 * @version 
 */
public class CxfMultipleConsumersSupportTest extends CamelTestSupport {
  protected static int port1=CXFTestSupport.getPort1();
  protected static int port2=CXFTestSupport.getPort2();
  protected static final String SIMPLE_ENDPOINT_ADDRESS="http://localhost:" + port1 + "/CxfMultipleConsumersSupportTest/test";
  protected static final String SIMPLE_ENDPOINT_URI="cxf://" + SIMPLE_ENDPOINT_ADDRESS + "?serviceClass=org.apache.camel.component.cxf.HelloService";
  protected static final String SIMPLE_OTHER_ADDRESS="http://localhost:" + port2 + "/CxfMultipleConsumersSupportTest/test";
  protected static final String SIMPLE_OTHER_URI="cxf://" + SIMPLE_OTHER_ADDRESS + "?serviceClass=org.apache.camel.component.cxf.HelloService";
  @Test public void testMultipleConsumersNotAllowed() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(SIMPLE_ENDPOINT_URI).to("mock:a");
        from("direct:start").to("mock:result");
        from(SIMPLE_ENDPOINT_URI).to("mock:b");
      }
    }
);
    try {
      context.start();
      fail("Should have thrown an exception");
    }
 catch (    FailedToStartRouteException e) {
      assertTrue(e.getMessage().endsWith("Multiple consumers for the same endpoint is not allowed: cxf://http://localhost:" + port1 + "/CxfMultipleConsumersSupportTest/test?serviceClass=org.apache.camel.component.cxf.HelloService"));
    }
  }
  @Test public void testNoMultipleConsumers() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(SIMPLE_ENDPOINT_URI).to("mock:a");
        from("direct:start").to("mock:result");
        from(SIMPLE_OTHER_URI).to("mock:b");
      }
    }
);
    context.start();
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
}
