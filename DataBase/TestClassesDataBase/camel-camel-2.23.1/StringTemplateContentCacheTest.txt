/** 
 * Unit test the cahce when reloading .tm files in the classpath
 */
public class StringTemplateContentCacheTest extends CamelTestSupport {
  @Before public void setUp() throws Exception {
    super.setUp();
    template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/stringtemplate","Hello <headers.name>",Exchange.FILE_NAME,"hello.tm");
  }
  @Override public boolean useJmx(){
    return true;
  }
  @Test public void testNotCached() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello London");
    template.sendBodyAndHeader("direct:a","Body","name","London");
    mock.assertIsSatisfied();
    template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/stringtemplate","Bye <headers.name>",Exchange.FILE_NAME,"hello.tm");
    mock.reset();
    mock.expectedBodiesReceived("Bye Paris");
    template.sendBodyAndHeader("direct:a","Body","name","Paris");
    mock.assertIsSatisfied();
  }
  @Test public void testCached() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello London");
    template.sendBodyAndHeader("direct:b","Body","name","London");
    mock.assertIsSatisfied();
    template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/stringtemplate","Bye <headers.name>",Exchange.FILE_NAME,"hello.tm");
    mock.reset();
    mock.expectedBodiesReceived("Hello Paris");
    template.sendBodyAndHeader("direct:b","Body","name","Paris");
    mock.assertIsSatisfied();
  }
  @Test public void testClearCacheViaJmx() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello London");
    template.sendBodyAndHeader("direct:b","Body","name","London");
    mock.assertIsSatisfied();
    template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/stringtemplate","Bye <headers.name>",Exchange.FILE_NAME,"hello.tm");
    mock.reset();
    mock.expectedBodiesReceived("Hello Paris");
    template.sendBodyAndHeader("direct:b","Body","name","Paris");
    mock.assertIsSatisfied();
    MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
    Set<ObjectName> objNameSet=mbeanServer.queryNames(new ObjectName("org.apache.camel:type=endpoints,name=\"string-template:*contentCache=true*\",*"),null);
    ObjectName managedObjName=new ArrayList<>(objNameSet).get(0);
    mbeanServer.invoke(managedObjName,"clearContentCache",null,null);
    mock.reset();
    mock.expectedBodiesReceived("Bye Paris");
    template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/stringtemplate","Bye <headers.name>",Exchange.FILE_NAME,"hello.tm");
    template.sendBodyAndHeader("direct:b","Body","name","Paris");
    mock.assertIsSatisfied();
    mock.reset();
    mock.expectedBodiesReceived("Bye Paris");
    template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/stringtemplate","Hello <headers.name>",Exchange.FILE_NAME,"hello.tm");
    template.sendBodyAndHeader("direct:b","Body","name","Paris");
    mock.assertIsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:a").to("string-template://org/apache/camel/component/stringtemplate/hello.tm?contentCache=false").to("mock:result");
        from("direct:b").to("string-template://org/apache/camel/component/stringtemplate/hello.tm?contentCache=true").to("mock:result");
      }
    }
;
  }
}
