/** 
 * Unit test to assert that timeouts don't trigger twice when JMS InOut endpoints are chained, and the second endpoint takes longer to respond than the timeout set for the first endpoint.
 */
public class JmsChainedEndpointDelayTimeout extends CamelTestSupport {
  @Test public void testTimeoutNotTriggeredTempQueue() throws Exception {
    getMockEndpoint("mock:exception").expectedMessageCount(0);
    getMockEndpoint("mock:ping").expectedMessageCount(1);
    template.requestBody("activemq:test","<hello />");
    assertMockEndpointsSatisfied();
  }
  @Test public void testTimeoutNotTriggeredFixedQueue() throws Exception {
    getMockEndpoint("mock:exception").expectedMessageCount(0);
    getMockEndpoint("mock:ping").expectedMessageCount(1);
    template.requestBody("activemq:testReplyFixedQueue","<hello />");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(ExchangeTimedOutException.class).handled(true).to("mock:exception");
        from("activemq:test").inOut("activemq:ping?requestTimeout=500").delay(constant(1000));
        from("activemq:testReplyFixedQueue").inOut("activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000));
        from("activemq:ping").to("mock:ping").log("pong");
      }
    }
;
  }
}
