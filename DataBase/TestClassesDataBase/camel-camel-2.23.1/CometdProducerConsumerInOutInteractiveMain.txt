@Ignore("Run this test manually") public class CometdProducerConsumerInOutInteractiveMain {
  private static final String URI="cometd://127.0.0.1:9091/service/test?baseResource=file:./src/test/resources/webapp&" + "timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2";
  private static final String URIS="cometds://127.0.0.1:9443/service/test?baseResource=file:./src/test/resources/webapp&" + "timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2";
  private CamelContext context;
  private String pwd="changeit";
  public static void main(  String[] args) throws Exception {
    CometdProducerConsumerInOutInteractiveMain me=new CometdProducerConsumerInOutInteractiveMain();
    me.testCometdProducerConsumerInteractive();
  }
  public void testCometdProducerConsumerInteractive() throws Exception {
    context=new DefaultCamelContext();
    context.addRoutes(createRouteBuilder());
    context.start();
  }
  private RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        CometdComponent component=(CometdComponent)context.getComponent("cometds");
        component.setSslPassword(pwd);
        component.setSslKeyPassword(pwd);
        File file=new File("./src/test/resources/jsse/localhost.ks");
        URI keyStoreUrl=file.toURI();
        component.setSslKeystore(keyStoreUrl.getPath());
        from(URI,URIS).setExchangePattern(ExchangePattern.InOut).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            Message out=new DefaultMessage(exchange.getContext());
            out.setBody("reply: " + exchange.getIn().getBody());
            exchange.setOut(out);
          }
        }
);
      }
    }
;
  }
}
