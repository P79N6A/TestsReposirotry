/** 
 * @version 
 */
public class JettySimulateInOnlyTest extends BaseJettyTest {
  private static String route="";
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testSimulateInOnlyUsingWireTap() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jetty://http://localhost:{{port}}/myserver").wireTap("direct:continue").transform(constant("OK"));
        from("direct:continue").delay(1500).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            route+="B";
          }
        }
).to("mock:result");
      }
    }
);
    context.start();
    route="";
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedHeaderReceived("foo","bar");
    String reply=template.requestBody("http://localhost:{{port}}/myserver?foo=bar",null,String.class);
    route+="A";
    assertEquals("OK",reply);
    assertMockEndpointsSatisfied();
    assertEquals("AB",route);
  }
  @Test public void testSimulateInOnly() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jetty://http://localhost:{{port}}/myserver").setExchangePattern(ExchangePattern.InOnly).to("seda:continue").transform(constant("OK"));
        from("seda:continue").delay(1000).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            route+="B";
          }
        }
).to("mock:result");
      }
    }
);
    context.start();
    route="";
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedHeaderReceived("foo","bar");
    String reply=template.requestBody("http://localhost:{{port}}/myserver?foo=bar",null,String.class);
    route+="A";
    assertEquals("OK",reply);
    assertMockEndpointsSatisfied();
    assertEquals("AB",route);
  }
}
