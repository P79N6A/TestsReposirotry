public class SpringEtcdServiceCallRouteTest extends CamelSpringTestSupport {
  private static final ObjectMapper MAPPER=EtcdHelper.createObjectMapper();
  private static final EtcdClient CLIENT=new EtcdClient(URI.create("http://localhost:2379"));
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/etcd/cloud/SpringEtcdServiceCallRouteTest.xml");
  }
  @Override public void doPreSetup() throws Exception {
    JsonNode service1=MAPPER.createObjectNode().put("name","http-service").put("address","127.0.0.1").put("port","9091");
    JsonNode service2=MAPPER.createObjectNode().put("name","http-service").put("address","127.0.0.1").put("port","9092");
    JsonNode service3=MAPPER.createObjectNode().put("name","http-service").put("address","127.0.0.1").put("port","9093");
    JsonNode service4=MAPPER.createObjectNode().put("name","http-service").put("address","127.0.0.1").put("port","9094");
    CLIENT.put("/etcd-services-1/" + "service-1",MAPPER.writeValueAsString(service1)).send().get();
    CLIENT.put("/etcd-services-1/" + "service-2",MAPPER.writeValueAsString(service2)).send().get();
    CLIENT.put("/etcd-services-2/" + "service-3",MAPPER.writeValueAsString(service3)).send().get();
    CLIENT.put("/etcd-services-2/" + "service-4",MAPPER.writeValueAsString(service4)).send().get();
    super.doPreSetup();
  }
  @Override @After public void tearDown() throws Exception {
    super.tearDown();
    CLIENT.deleteDir("/etcd-services-1/").recursive().send().get();
    CLIENT.deleteDir("/etcd-services-2/").recursive().send().get();
  }
  @Test public void testServiceCall() throws Exception {
    getMockEndpoint("mock:result-1").expectedMessageCount(2);
    getMockEndpoint("mock:result-1").expectedBodiesReceivedInAnyOrder("service-1 9091","service-1 9092");
    getMockEndpoint("mock:result-2").expectedMessageCount(2);
    getMockEndpoint("mock:result-2").expectedBodiesReceivedInAnyOrder("service-2 9093","service-2 9094");
    template.sendBody("direct:start","service-1");
    template.sendBody("direct:start","service-1");
    template.sendBody("direct:start","service-2");
    template.sendBody("direct:start","service-2");
    assertMockEndpointsSatisfied();
  }
}
