@RunWith(Arquillian.class) public class EventComponentTest {
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void createEventEndpointByUri(  NotStartedCamelContext context){
    try {
      context.start(true);
    }
 catch (    Exception exception) {
      Throwable cause=exception.getCause().getCause();
      assertThat("Exception cause is not an UnsupportedOperationException!",cause,is(instanceOf(UnsupportedOperationException.class)));
      assertThat("Incorrect exception message!",cause.getMessage(),is(equalTo("Creating CDI event endpoint isn't supported. Use @Inject CdiEventEndpoint instead")));
      return;
    }
    fail("CDI event endpoint creation by URI should throw an exception!");
  }
static class CdiEventComponentRoute extends RouteBuilder {
    @Override public void configure(){
      from("cdi-event://Object").log("Unsupported operation!");
    }
  }
@ApplicationScoped static class NotStartedCamelContext extends DefaultCamelContext {
    @Override public void start() throws Exception {
      start(false);
    }
    void start(    boolean start) throws Exception {
      if (start) {
        super.start();
      }
    }
  }
}
