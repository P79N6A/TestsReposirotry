/** 
 * Test how to add routes at runtime using a RouteBuilder
 * @version 
 */
public class AddRoutesAtRuntimeTest extends ContextTestSupport {
  @Test public void testAddRoutesAtRuntime() throws Exception {
    getMockEndpoint("mock:start").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    assertEquals(1,context.getRoutes().size());
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    context.addRoutes(new MyDynamcRouteBuilder(context,"direct:foo","mock:foo"));
    template.sendBody("direct:foo","Bye Camel");
    assertMockEndpointsSatisfied();
    assertEquals(2,context.getRoutes().size());
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    context.addRoutes(new MyDynamcRouteBuilder(context,"direct:bar","mock:bar"));
    template.sendBody("direct:bar","Hi Camel");
    assertMockEndpointsSatisfied();
    assertEquals(3,context.getRoutes().size());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:start");
      }
    }
;
  }
  /** 
 * This route builder is a skeleton to add new routes at runtime
 */
private static final class MyDynamcRouteBuilder extends RouteBuilder {
    private final String from;
    private final String to;
    private MyDynamcRouteBuilder(    CamelContext context,    String from,    String to){
      super(context);
      this.from=from;
      this.to=to;
    }
    @Override public void configure() throws Exception {
      from(from).to(to);
    }
  }
}
