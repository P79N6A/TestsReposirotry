public class RestDslSourceCodeGeneratorTest {
  @Test public void shouldCreatePackageNamesFromHostnames(){
    final Swagger swagger=new Swagger();
    swagger.setHost("api.example.org");
    assertThat(RestDslSourceCodeGenerator.generatePackageName(swagger)).isEqualTo("org.example.api");
  }
  @Test public void shouldCreatePackageNamesFromHostnamesWithPorts(){
    final Swagger swagger=new Swagger();
    swagger.setHost("api.example.org:8080");
    assertThat(RestDslSourceCodeGenerator.generatePackageName(swagger)).isEqualTo("org.example.api");
  }
  @Test public void shouldGenerateClassNameFromTitle(){
    final Swagger swagger=new Swagger();
    swagger.info(new Info().title("Example API"));
    assertThat(RestDslSourceCodeGenerator.generateClassName(swagger)).isEqualTo("ExampleAPI");
  }
  @Test public void shouldGenerateClassNameFromTitleWithNonValidJavaIdentifiers(){
    final Swagger swagger=new Swagger();
    swagger.info(new Info().title("Example-API 2.0"));
    assertThat(RestDslSourceCodeGenerator.generateClassName(swagger)).isEqualTo("ExampleAPI20");
  }
  @Test public void shouldUseDefaultClassNameIfInfoOrTitleIsNotPresent(){
    final Swagger swagger=new Swagger();
    assertThat(RestDslSourceCodeGenerator.generateClassName(swagger)).isEqualTo(RestDslSourceCodeGenerator.DEFAULT_CLASS_NAME);
    assertThat(RestDslSourceCodeGenerator.generateClassName(swagger.info(new Info()))).isEqualTo(RestDslSourceCodeGenerator.DEFAULT_CLASS_NAME);
  }
  @Test public void shouldUseDefaultClassNameIfTitleContainsOnlyNonValidJavaIdentifiers(){
    final Swagger swagger=new Swagger();
    swagger.info(new Info().title("\\%/4"));
    assertThat(RestDslSourceCodeGenerator.generateClassName(swagger)).isEqualTo(RestDslSourceCodeGenerator.DEFAULT_CLASS_NAME);
  }
  @Test public void shouldUseDefaultPackageNameForLocalhost(){
    final Swagger swagger=new Swagger();
    swagger.setHost("localhost");
    assertThat(RestDslSourceCodeGenerator.generatePackageName(swagger)).isEqualTo(RestDslSourceCodeGenerator.DEFAULT_PACKAGE_NAME);
  }
  @Test public void shouldUseDefaultPackageNameForLocalhostWithPort(){
    final Swagger swagger=new Swagger();
    swagger.setHost("localhost:8080");
    assertThat(RestDslSourceCodeGenerator.generatePackageName(swagger)).isEqualTo(RestDslSourceCodeGenerator.DEFAULT_PACKAGE_NAME);
  }
  @Test public void shouldUseDefaultPackageNameIfNoHostIsSpecified(){
    final Swagger swagger=new Swagger();
    assertThat(RestDslSourceCodeGenerator.generatePackageName(swagger)).isEqualTo(RestDslSourceCodeGenerator.DEFAULT_PACKAGE_NAME);
  }
}
