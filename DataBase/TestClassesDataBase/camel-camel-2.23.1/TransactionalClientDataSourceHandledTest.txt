/** 
 * Unit test to demonstrate the transactional client pattern.
 */
public class TransactionalClientDataSourceHandledTest extends TransactionalClientDataSourceWithOnExceptionTest {
  @Test public void testTransactionRollback() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:error");
    mock.expectedMessageCount(1);
    template.sendBody("direct:fail","Hello World");
    assertMockEndpointsSatisfied();
    int count=jdbc.queryForObject("select count(*) from books",Integer.class);
    assertEquals("Number of books",2,count);
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new SpringRouteBuilder(){
      public void configure() throws Exception {
        onException(IllegalArgumentException.class).handled(true).to("mock:error");
        from("direct:okay").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService");
        from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService");
      }
    }
;
  }
}
