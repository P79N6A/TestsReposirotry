public class SyslogSpringNettyTest extends CamelSpringTestSupport {
  private static int serverPort;
  private final int messageCount=1;
  private final String message="<165>Aug  4 05:34:00 mymachine myproc[10]: %% It's\n         time to make the do-nuts.  %%  Ingredients: Mix=OK, Jelly=OK #\n" + "         Devices: Mixer=OK, Jelly_Injector=OK, Frier=OK # Transport:\n" + "         Conveyer1=OK, Conveyer2=OK # %%";
  @BeforeClass public static void initPort(){
    serverPort=AvailablePortFinder.getNextAvailable(4000);
    System.setProperty("server-port",new Integer(serverPort).toString());
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/syslog/applicationContext-Netty.xml");
  }
  @Test public void testSendingRawUDP() throws IOException, InterruptedException {
    MockEndpoint mock=getMockEndpoint("mock:stop1");
    MockEndpoint mock2=getMockEndpoint("mock:stop2");
    mock.expectedMessageCount(1);
    mock2.expectedMessageCount(1);
    mock2.expectedBodiesReceived(message);
    DatagramSocket socket=new DatagramSocket();
    try {
      InetAddress address=InetAddress.getByName("localhost");
      for (int i=0; i < messageCount; i++) {
        byte[] data=message.getBytes();
        DatagramPacket packet=new DatagramPacket(data,data.length,address,serverPort);
        socket.send(packet);
        Thread.sleep(100);
      }
    }
  finally {
      socket.close();
    }
    assertMockEndpointsSatisfied();
  }
}
