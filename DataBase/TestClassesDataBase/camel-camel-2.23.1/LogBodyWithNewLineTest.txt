public class LogBodyWithNewLineTest extends ContextTestSupport {
  private StringWriter writer;
  @Before public void setUp() throws Exception {
    super.setUp();
    writer=new StringWriter();
    final LoggerContext ctx=(LoggerContext)LogManager.getContext(false);
    final Configuration config=ctx.getConfiguration();
    Appender appender=WriterAppender.newBuilder().setLayout(PatternLayout.newBuilder().withPattern(PatternLayout.SIMPLE_CONVERSION_PATTERN).build()).setTarget(writer).setName("Writer").build();
    appender.start();
    config.addAppender(appender);
    config.getRootLogger().removeAppender("Writer");
    config.getRootLogger().addAppender(appender,Level.INFO,null);
    ctx.updateLoggers();
  }
  @Test public void testNoSkip() throws Exception {
    String body="1" + LS + "2"+ LS+ "3";
    template.sendBody("direct:start",body);
    log.info("{}",writer);
    assertTrue(writer.toString().contains(body));
  }
  @Test public void testSkip() throws Exception {
    String body="1" + LS + "2"+ LS+ "3";
    template.sendBody("direct:skip",body);
    log.info("{}",writer);
    assertTrue(writer.toString().contains("123"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("log:logger_name?level=INFO&showAll=true&skipBodyLineSeparator=false");
        from("direct:skip").to("log:logger_name?level=INFO&showAll=true&skipBodyLineSeparator=true");
      }
    }
;
  }
}
