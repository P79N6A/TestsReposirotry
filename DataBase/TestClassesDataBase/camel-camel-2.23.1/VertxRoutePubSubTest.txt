/** 
 * @version
 */
public class VertxRoutePubSubTest extends VertxBaseTestSupport {
  protected String startUri="vertx:foo.start?pubSub=true";
  protected String middleUri="vertx:foo.middle?pubSub=true";
  protected String resultUri="mock:result";
  protected MockEndpoint resultEndpoint;
  protected String body1="{\"id\":1,\"description\":\"Message One\"}";
  protected String body2="{\"id\":2,\"description\":\"Message Two\"}";
  @Test public void testVertxMessages() throws Exception {
    resultEndpoint=context.getEndpoint(resultUri,MockEndpoint.class);
    resultEndpoint.expectedBodiesReceivedInAnyOrder(body1,body2);
    template.sendBody(startUri,body1);
    template.sendBody(startUri,body2);
    resultEndpoint.assertIsSatisfied();
    List<Exchange> list=resultEndpoint.getReceivedExchanges();
    for (    Exchange exchange : list) {
      log.info("Received exchange: " + exchange + " headers: "+ exchange.getIn().getHeaders());
    }
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(startUri).to(middleUri);
        from(middleUri).to(resultUri);
      }
    }
;
  }
}
