private static class MyGenericFileOperations implements GenericFileOperations<Object> {
  public void setEndpoint(  GenericFileEndpoint<Object> endpoint){
  }
  public boolean deleteFile(  String name) throws GenericFileOperationFailedException {
    deleteCounter++;
    return false;
  }
  public boolean existsFile(  String name) throws GenericFileOperationFailedException {
    existsCounter++;
    if (FileUtil.normalizePath("target/foo/boom.txt").equals(name)) {
      return true;
    }
    return existsCounter <= 1;
  }
  public boolean renameFile(  String from,  String to) throws GenericFileOperationFailedException {
    return false;
  }
  public boolean buildDirectory(  String directory,  boolean absolute) throws GenericFileOperationFailedException {
    return false;
  }
  public boolean retrieveFile(  String name,  Exchange exchange,  long size) throws GenericFileOperationFailedException {
    return false;
  }
  public void releaseRetrievedFileResources(  Exchange exchange) throws GenericFileOperationFailedException {
  }
  public boolean storeFile(  String name,  Exchange exchange,  long size) throws GenericFileOperationFailedException {
    return false;
  }
  public String getCurrentDirectory() throws GenericFileOperationFailedException {
    return null;
  }
  public void changeCurrentDirectory(  String path) throws GenericFileOperationFailedException {
  }
  public void changeToParentDirectory() throws GenericFileOperationFailedException {
  }
  public List<Object> listFiles() throws GenericFileOperationFailedException {
    return null;
  }
  public List<Object> listFiles(  String path) throws GenericFileOperationFailedException {
    return null;
  }
}
