/** 
 */
public class OnExceptionWhenSimpleOgnlTest extends ContextTestSupport {
  @Test public void testOnExceptionWhenSimpleOgnl() throws Exception {
    getMockEndpoint("mock:three").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(MyException.class).onWhen(simple("${exception.info.state} == 3")).handled(true).to("mock:three");
        from("direct:start").throwException(new MyException(3));
      }
    }
;
  }
public static final class MyException extends Exception {
    private static final long serialVersionUID=1L;
    private final MyExceptionInfo info;
    public MyException(    int state){
      this.info=new MyExceptionInfo(state);
    }
    public MyExceptionInfo getInfo(){
      return info;
    }
  }
public static final class MyExceptionInfo {
    private final int state;
    public MyExceptionInfo(    int state){
      this.state=state;
    }
    public int getState(){
      return state;
    }
  }
}
