public class NettyUDPLargeMessageInOnlyTest extends BaseNettyTest {
  private byte[] getMessageBytes(  int messageSize){
    byte[] msgBytes=new byte[messageSize];
    for (int i=0; i < messageSize; i++) {
      msgBytes[i]='A';
    }
    return msgBytes;
  }
  private void sendMessage(  int messageSize) throws Exception {
    byte[] msgBytes=getMessageBytes(messageSize);
    assertEquals(msgBytes.length,messageSize);
    String message=new String(msgBytes);
    getMockEndpoint("mock:result").expectedBodiesReceived(message);
    template.sendBody("netty4:udp://localhost:{{port}}?sync=false",message);
    assertMockEndpointsSatisfied();
  }
  @Test public void testSend512Message() throws Exception {
    sendMessage(512);
  }
  @Test public void testSend768Message() throws Exception {
    sendMessage(768);
  }
  @Test public void testSend1024Message() throws Exception {
    sendMessage(1024);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4:udp://localhost:{{port}}?receiveBufferSizePredictor=2048&sync=false").to("mock:result");
      }
    }
;
  }
}
