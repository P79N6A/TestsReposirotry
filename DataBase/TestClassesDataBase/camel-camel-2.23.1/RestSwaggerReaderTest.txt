public class RestSwaggerReaderTest extends CamelTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        rest("/hello").consumes("application/json").produces("application/json").get("/hi/{name}").description("Saying hi").param().name("name").type(RestParamType.path).dataType("string").description("Who is it").example("Donald Duck").endParam().to("log:hi").get("/bye/{name}").description("Saying bye").param().name("name").type(RestParamType.path).dataType("string").description("Who is it").example("Donald Duck").endParam().responseMessage().code(200).message("A reply number").responseModel(float.class).example("success","123").example("error","-1").endResponseMessage().to("log:bye").post("/bye").description("To update the greeting message").consumes("application/xml").produces("application/xml").param().name("greeting").type(RestParamType.body).dataType("string").description("Message to use as greeting").example("application/xml","<hello>Hi</hello>").endParam().to("log:bye");
      }
    }
;
  }
  @Test public void testReaderRead() throws Exception {
    BeanConfig config=new BeanConfig();
    config.setHost("localhost:8080");
    config.setSchemes(new String[]{"http"});
    config.setBasePath("/api");
    RestSwaggerReader reader=new RestSwaggerReader();
    Swagger swagger=reader.read(context.getRestDefinitions(),null,config,context.getName(),new DefaultClassResolver());
    assertNotNull(swagger);
    ObjectMapper mapper=new ObjectMapper();
    mapper.enable(SerializationFeature.INDENT_OUTPUT);
    mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
    String json=mapper.writeValueAsString(swagger);
    log.info(json);
    assertTrue(json.contains("\"host\" : \"localhost:8080\""));
    assertTrue(json.contains("\"basePath\" : \"/api\""));
    assertTrue(json.contains("\"/hello/bye\""));
    assertTrue(json.contains("\"summary\" : \"To update the greeting message\""));
    assertTrue(json.contains("\"/hello/bye/{name}\""));
    assertTrue(json.contains("\"/hello/hi/{name}\""));
    assertTrue(json.contains("\"type\" : \"number\""));
    assertTrue(json.contains("\"format\" : \"float\""));
    assertTrue(json.contains("\"application/xml\" : \"<hello>Hi</hello>\""));
    assertTrue(json.contains("\"x-example\" : \"Donald Duck\""));
    assertTrue(json.contains("\"success\" : \"123\""));
    assertTrue(json.contains("\"error\" : \"-1\""));
    assertTrue(json.contains("\"type\" : \"string\""));
    context.stop();
  }
}
