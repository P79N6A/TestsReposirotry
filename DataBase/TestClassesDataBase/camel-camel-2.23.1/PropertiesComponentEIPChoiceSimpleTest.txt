/** 
 * @version 
 */
public class PropertiesComponentEIPChoiceSimpleTest extends ContextTestSupport {
  @Test public void testChoice() throws Exception {
    getMockEndpoint("mock:camel").expectedBodiesReceived("Hello Camel");
    getMockEndpoint("mock:other").expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello Camel");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").choice().when(simple("${body} contains '${properties:cool.name}'")).to("mock:camel").otherwise().to("mock:other");
      }
    }
;
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    PropertiesComponent pc=new PropertiesComponent();
    pc.setLocations(new String[]{"classpath:org/apache/camel/component/properties/myproperties.properties"});
    context.addComponent("properties",pc);
    return context;
  }
}
