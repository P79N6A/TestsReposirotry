static class ResponseCompressingInterceptor implements HttpResponseInterceptor {
  public void process(  HttpResponse response,  HttpContext context) throws HttpException, IOException {
    response.setHeader("Content-Encoding","gzip");
    HttpEntity entity=response.getEntity();
    response.setEntity(new GzipCompressingEntity(entity));
  }
static class GzipCompressingEntity extends HttpEntityWrapper {
    GzipCompressingEntity(    final HttpEntity entity){
      super(entity);
    }
    @Override public Header getContentEncoding(){
      return new BasicHeader("Content-Encoding","gzip");
    }
    @Override public void writeTo(    OutputStream outstream) throws IOException {
      GZIPOutputStream gzip=new GZIPOutputStream(outstream);
      gzip.write(EntityUtils.toByteArray(wrappedEntity));
      gzip.close();
    }
    @Override public long getContentLength(){
      return -1;
    }
    @Override public boolean isStreaming(){
      return false;
    }
  }
}
