@RunWith(MockitoJUnitRunner.class) public class MeterProducerTest {
  private static final String METRICS_NAME="metrics.name";
  private static final Long MARK=9919120L;
  @Mock private MetricsEndpoint endpoint;
  @Mock private MetricRegistry registry;
  @Mock private Meter meter;
  @Mock private Exchange exchange;
  @Mock private Message in;
  private MeterProducer producer;
  private InOrder inOrder;
  @Before public void setUp() throws Exception {
    producer=new MeterProducer(endpoint);
    inOrder=Mockito.inOrder(endpoint,registry,meter,exchange,in);
    when(registry.meter(METRICS_NAME)).thenReturn(meter);
    when(exchange.getIn()).thenReturn(in);
  }
  @Test public void testMeterProducer() throws Exception {
    assertThat(producer,is(notNullValue()));
    assertThat(producer.getEndpoint(),is(equalTo(endpoint)));
  }
  @Test public void testProcessMarkSet() throws Exception {
    when(endpoint.getMark()).thenReturn(MARK);
    when(in.getHeader(HEADER_METER_MARK,MARK,Long.class)).thenReturn(MARK);
    producer.doProcess(exchange,endpoint,registry,METRICS_NAME);
    inOrder.verify(exchange,times(1)).getIn();
    inOrder.verify(registry,times(1)).meter(METRICS_NAME);
    inOrder.verify(endpoint,times(1)).getMark();
    inOrder.verify(in,times(1)).getHeader(HEADER_METER_MARK,MARK,Long.class);
    inOrder.verify(meter,times(1)).mark(MARK);
    inOrder.verifyNoMoreInteractions();
  }
  @Test public void testProcessMarkSetOverrideByHeaderValue() throws Exception {
    when(endpoint.getMark()).thenReturn(MARK);
    when(in.getHeader(HEADER_METER_MARK,MARK,Long.class)).thenReturn(MARK + 101);
    producer.doProcess(exchange,endpoint,registry,METRICS_NAME);
    inOrder.verify(exchange,times(1)).getIn();
    inOrder.verify(registry,times(1)).meter(METRICS_NAME);
    inOrder.verify(endpoint,times(1)).getMark();
    inOrder.verify(in,times(1)).getHeader(HEADER_METER_MARK,MARK,Long.class);
    inOrder.verify(meter,times(1)).mark(MARK + 101);
    inOrder.verifyNoMoreInteractions();
  }
  @Test public void testProcessMarkNotSet() throws Exception {
    Object action=null;
    when(endpoint.getMark()).thenReturn(null);
    producer.doProcess(exchange,endpoint,registry,METRICS_NAME);
    inOrder.verify(registry,times(1)).meter(METRICS_NAME);
    inOrder.verify(endpoint,times(1)).getMark();
    inOrder.verify(in,times(1)).getHeader(HEADER_METER_MARK,action,Long.class);
    inOrder.verify(meter,times(1)).mark();
    inOrder.verifyNoMoreInteractions();
  }
}
