/** 
 * @version 
 */
public class JettyAsyncTryCatchFinallyTest extends BaseJettyTest {
  @Test public void testJettyAsync() throws Exception {
    getMockEndpoint("mock:try").expectedBodiesReceived("Hello Camel");
    getMockEndpoint("mock:catch").expectedBodiesReceived("Hello Camel");
    getMockEndpoint("mock:finally").expectedBodiesReceived("Bye Camel");
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    String reply=template.requestBody("http://localhost:{{port}}/myservice","Hello Camel",String.class);
    assertEquals("Bye World",reply);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.addComponent("async",new MyAsyncComponent());
        from("jetty:http://localhost:{{port}}/myservice").convertBodyTo(String.class).doTry().to("mock:try").throwException(new IllegalArgumentException("Damn")).doCatch(IllegalArgumentException.class).to("mock:catch").to("async:bye:camel").doFinally().to("mock:finally").to("async:bye:world").end().to("mock:result");
      }
    }
;
  }
}
