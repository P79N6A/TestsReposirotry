public class SqlProducerWhereIssueTest extends CamelTestSupport {
  EmbeddedDatabase db;
  @Before public void setUp() throws Exception {
    db=new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/createAndPopulateDatabase.sql").build();
    super.setUp();
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    db.shutdown();
  }
  @Test public void testQueryWhereIssue() throws InterruptedException {
    MockEndpoint mock=getMockEndpoint("mock:query");
    mock.expectedMessageCount(1);
    template.requestBodyAndHeader("direct:query","Hi there!","lowId","1");
    assertMockEndpointsSatisfied();
    List list=mock.getReceivedExchanges().get(0).getIn().getBody(List.class);
    Map row=(Map)list.get(0);
    assertEquals("ASF",row.get("LICENSE"));
    assertEquals(2,row.get("ROWCOUNT"));
    row=(Map)list.get(1);
    assertEquals("XXX",row.get("LICENSE"));
    assertEquals(1,row.get("ROWCOUNT"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        getContext().getComponent("sql",SqlComponent.class).setDataSource(db);
        from("direct:query").to("sql:select count(*) rowcount, license from projects where id=:#lowId or id=2 or id=3 group by license").to("log:query").to("mock:query");
      }
    }
;
  }
}
