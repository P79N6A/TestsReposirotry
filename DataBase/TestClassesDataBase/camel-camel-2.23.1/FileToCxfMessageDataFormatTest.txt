/** 
 * @version 
 */
public class FileToCxfMessageDataFormatTest extends CamelSpringTestSupport {
  private static int port1=CXFTestSupport.getPort1();
  private Server server;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/filetocxf");
    ServerFactoryBean factory=new ServerFactoryBean();
    factory.setAddress("http://localhost:" + port1 + "/FileToCxfMessageDataFormatTest/router");
    factory.setServiceClass(HelloService.class);
    factory.setServiceBean(new HelloServiceImpl());
    server=factory.create();
    server.start();
    super.setUp();
  }
  @Override @After public void tearDown() throws Exception {
    super.tearDown();
    server.stop();
    server.destroy();
  }
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/spring/FileToCxfMessageDataFormatTest.xml");
  }
  @Test public void testFileToCxfMessageDataFormat() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBodyAndHeader("file:target/filetocxf",createBody(),Exchange.FILE_NAME,"payload.xml");
    assertMockEndpointsSatisfied();
    String out=mock.getReceivedExchanges().get(0).getIn().getBody(String.class);
    assertNotNull(out);
    log.info("Reply payload as a String:\n" + out);
    assertTrue("Should invoke the echo operation",out.contains("echo Camel"));
  }
  private String createBody() throws Exception {
    return "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cxf=\"http://cxf.component.camel.apache.org/\">\n" + "   <soapenv:Header/>\n" + "   <soapenv:Body>\n"+ "      <cxf:echo>\n"+ "          <cxf:arg0>Camel</cxf:arg0>\n"+ "      </cxf:echo>\n"+ "   </soapenv:Body>\n"+ "</soapenv:Envelope>";
  }
}
