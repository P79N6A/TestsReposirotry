public class RestServletOptionsTest extends ServletCamelRouterTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myBinding",new ServletRestHttpBinding());
    return jndi;
  }
  @Test public void testServletOptions() throws Exception {
    WebRequest req=new OptionsMethodWebRequest(CONTEXT_URL + "/services/users/v1/customers");
    ServletUnitClient client=newClient();
    client.setExceptionsThrownOnErrorStatus(false);
    WebResponse response=client.getResponse(req);
    assertEquals(200,response.getResponseCode());
    assertEquals("GET,OPTIONS",response.getHeaderField("ALLOW"));
    assertEquals("",response.getText());
    req=new OptionsMethodWebRequest(CONTEXT_URL + "/services/users/v1/id/123");
    response=client.getResponse(req);
    assertEquals(200,response.getResponseCode());
    assertEquals("PUT,OPTIONS",response.getHeaderField("ALLOW"));
    assertEquals("",response.getText());
  }
  @Test public void testMultipleServletOptions() throws Exception {
    WebRequest req=new OptionsMethodWebRequest(CONTEXT_URL + "/services/users/v2/options");
    ServletUnitClient client=newClient();
    client.setExceptionsThrownOnErrorStatus(false);
    WebResponse response=client.getResponse(req);
    assertEquals(200,response.getResponseCode());
    assertEquals("GET,POST,OPTIONS",response.getHeaderField("ALLOW"));
    assertEquals("",response.getText());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("servlet").host("localhost").endpointProperty("httpBinding","#myBinding");
        rest("/users/").get("v1/customers").to("mock:customers").put("v1/id/{id}").to("mock:id").get("v2/options").to("mock:options").post("v2/options").to("mock:options");
      }
    }
;
  }
}
