public class CxfEndpointUtilsWithSpringTest extends CxfEndpointUtilsTest {
  protected AbstractXmlApplicationContext applicationContext;
  @Before public void setUp() throws Exception {
    applicationContext=createApplicationContext();
    assertNotNull("Should have created a valid spring context",applicationContext);
  }
  @After public void tearDown() throws Exception {
    IOHelper.close(applicationContext);
  }
  @Override protected CamelContext getCamelContext() throws Exception {
    return SpringCamelContext.springCamelContext(applicationContext);
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/util/CxfEndpointBeans.xml");
  }
  protected String getEndpointURI(){
    return "cxf:bean:testEndpoint";
  }
  protected String getNoServiceClassURI(){
    return "cxf:bean:noServiceClassEndpoint";
  }
  @Test public void testGetServiceClass() throws Exception {
    CxfEndpoint endpoint=createEndpoint("cxf:bean:helloServiceEndpoint?serviceClass=#helloServiceImpl");
    assertEquals("org.apache.camel.component.cxf.HelloServiceImpl",endpoint.getServiceClass().getName());
  }
  public char sepChar(){
    return '?';
  }
  @Test public void testGetProperties() throws Exception {
    CxfSpringEndpoint endpoint=(CxfSpringEndpoint)createEndpoint(getEndpointURI());
    QName service=endpoint.getServiceName();
    assertEquals("We should get the right service name",SERVICE_NAME,service);
    assertEquals("The cxf endpoint's DataFromat should be RAW",DataFormat.RAW,endpoint.getDataFormat().dealias());
    endpoint=(CxfSpringEndpoint)createEndpoint("cxf:bean:testPropertiesEndpoint");
    service=CxfEndpointUtils.getServiceName(endpoint);
    assertEquals("We should get the right service name",SERVICE_NAME,service);
    QName port=CxfEndpointUtils.getPortName(endpoint);
    assertEquals("We should get the right endpoint name",PORT_NAME,port);
  }
  @Test public void testGetDataFormatFromCxfEndpontProperties() throws Exception {
    CxfEndpoint endpoint=createEndpoint(getEndpointURI() + "?dataFormat=PAYLOAD");
    assertEquals("We should get the PAYLOAD DataFormat",DataFormat.PAYLOAD,endpoint.getDataFormat());
  }
}
