/** 
 * @version 
 */
public class AdviceWithMockMultipleEndpointsWithSkipTest extends ContextTestSupport {
  @Test public void testAdvisedMockEndpointsWithSkip() throws Exception {
    context.getRouteDefinitions().get(0).adviceWith(context,new AdviceWithRouteBuilder(){
      @Override public void configure() throws Exception {
        mockEndpointsAndSkip("direct:foo","direct:bar");
      }
    }
);
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:direct:foo").expectedMessageCount(1);
    getMockEndpoint("mock:direct:bar").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    SedaEndpoint seda=context.getEndpoint("seda:foo",SedaEndpoint.class);
    assertEquals(0,seda.getCurrentQueueSize());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("direct:foo").to("direct:bar").to("mock:result");
        from("direct:foo").transform(constant("Bye World")).to("seda:foo");
        from("direct:bar").transform(constant("Hi World")).to("seda:foo");
      }
    }
;
  }
}
