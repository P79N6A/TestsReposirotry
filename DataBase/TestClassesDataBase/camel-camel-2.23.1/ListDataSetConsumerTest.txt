/** 
 * @version 
 */
public class ListDataSetConsumerTest extends ContextTestSupport {
  protected ListDataSet dataSet;
  final String resultUri="mock://result";
  final String dataSetName="foo";
  final String dataSetUri="dataset://" + dataSetName;
  @Test public void testDefaultListDataSet() throws Exception {
    MockEndpoint result=getMockEndpoint(resultUri);
    result.expectedMinimumMessageCount((int)dataSet.getSize());
    result.assertIsSatisfied();
  }
  @Test public void testDefaultListDataSetWithSizeGreaterThanListSize() throws Exception {
    MockEndpoint result=getMockEndpoint(resultUri);
    dataSet.setSize(10);
    result.expectedMinimumMessageCount((int)dataSet.getSize());
    result.assertIsSatisfied();
  }
  @Override @Before public void setUp() throws Exception {
    List<Object> bodies=new LinkedList<>();
    bodies.add("<hello>world!</hello>");
    dataSet=new ListDataSet(bodies);
    super.setUp();
  }
  @Override protected Context createJndiContext() throws Exception {
    Context context=super.createJndiContext();
    context.bind(dataSetName,dataSet);
    return context;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(dataSetUri).to("mock://result");
      }
    }
;
  }
}
