/** 
 * Test to verify that the polling consumer delivers an empty Exchange when the sendEmptyMessageWhenIdle property is set and a polling event yields no results.
 */
public class FtpPollingConsumerIdleMessageTest extends FtpServerTestSupport {
  @Test public void testConsumeIdleMessages() throws Exception {
    Thread.sleep(110);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(2);
    assertMockEndpointsSatisfied();
    assertTrue(mock.getExchanges().get(0).getIn().getBody() == null);
    assertTrue(mock.getExchanges().get(1).getIn().getBody() == null);
  }
  @Before public void setup() throws Exception {
    new File(FTP_ROOT_DIR + "/polling").mkdirs();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("ftp://admin@localhost:" + getPort() + "/polling?password=admin&delay=50"+ "&sendEmptyMessageWhenIdle=true").to("mock:result");
      }
    }
;
  }
}
