public class JGroupsConsumerTest extends CamelTestSupport {
  String clusterName="clusterName";
  String message="message";
  JChannel channel;
  @EndpointInject(uri="mock:test") MockEndpoint mockEndpoint;
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jgroups:" + clusterName).to(mockEndpoint);
      }
    }
;
  }
  @Override protected void doPreSetup() throws Exception {
    super.doPreSetup();
    channel=new JChannel();
    channel.connect(clusterName);
  }
  @Override @After public void tearDown() throws Exception {
    channel.close();
    super.tearDown();
  }
  @Test public void shouldConsumeMulticastedMessage() throws Exception {
    mockEndpoint.setExpectedMessageCount(1);
    mockEndpoint.expectedBodiesReceived(message);
    Message msg=new Message(null,message);
    msg.setSrc(null);
    channel.send(msg);
    assertMockEndpointsSatisfied();
  }
  @Test public void shouldKeepOriginalMessage() throws Exception {
    mockEndpoint.setExpectedMessageCount(1);
    mockEndpoint.message(0).header(HEADER_JGROUPS_ORIGINAL_MESSAGE).isInstanceOf(Message.class);
    Message msg=new Message(null,message);
    msg.setSrc(null);
    channel.send(msg);
    assertMockEndpointsSatisfied();
  }
}
