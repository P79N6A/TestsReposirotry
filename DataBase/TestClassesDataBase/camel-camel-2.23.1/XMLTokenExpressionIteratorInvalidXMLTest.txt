/** 
 */
public class XMLTokenExpressionIteratorInvalidXMLTest extends Assert {
  private static final String DATA_TEMPLATE="<?xml version=\"1.0\" encoding=\"utf-u\"?>" + "<Statements xmlns=\"http://www.apache.org/xml/test\">" + "    <statement>Hello World</statement>"+ "    <statement>{0}</statement>"+ "</Statements>";
  private static final Map<String,String> NSMAP=Collections.singletonMap("","http://www.apache.org/xml/test");
  @Test public void testExtractToken() throws Exception {
    String data=MessageFormat.format(DATA_TEMPLATE,"Have a nice day");
    XMLTokenExpressionIterator xtei=new XMLTokenExpressionIterator("//statement",'i');
    xtei.setNamespaces(NSMAP);
    invokeAndVerify(xtei.createIterator(new StringReader(data)),false);
    data=MessageFormat.format(DATA_TEMPLATE,"Have a nice< day");
    xtei=new XMLTokenExpressionIterator("//statement",'i');
    xtei.setNamespaces(NSMAP);
    invokeAndVerify(xtei.createIterator(new StringReader(data)),true);
  }
  private void invokeAndVerify(  Iterator<?> tokenizer,  boolean error) throws IOException, XMLStreamException {
    Exception exp=null;
    try {
      tokenizer.next();
      tokenizer.next();
    }
 catch (    Exception e) {
      exp=e;
    }
 finally {
      ((Closeable)tokenizer).close();
    }
    if (error) {
      assertNotNull("the error expected",exp);
    }
 else {
      assertNull("no error expected",exp);
    }
  }
}
