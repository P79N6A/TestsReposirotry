/** 
 * @version 
 */
public class JettySessionSupportTest extends BaseJettyTest {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testJettySessionSupportInvalid() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jetty:http://localhost:{{port}}/hello").to("mock:foo");
        from("jetty:http://localhost:{{port}}/bye?sessionSupport=true").to("mock:bar");
      }
    }
);
    try {
      context.start();
      fail("Should have thrown an exception");
    }
 catch (    IllegalStateException e) {
      assertEquals("Server has already been started. Cannot enabled sessionSupport on http:localhost:" + getPort(),e.getMessage());
    }
 finally {
      context.stop();
    }
  }
  @Test public void testJettySessionSupportOk() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jetty:http://localhost:{{port}}/hello?sessionSupport=true").transform(simple("Bye ${body}"));
      }
    }
);
    context.start();
    try {
      String reply=template.requestBody("http://localhost:{{port}}/hello","World",String.class);
      assertEquals("Bye World",reply);
      reply=template.requestBody("http://localhost:{{port}}/hello","Moon",String.class);
      assertEquals("Bye Moon",reply);
    }
  finally {
      context.stop();
    }
  }
}
