/** 
 * @version 
 */
public class AggregateDiscardOnTimeoutTest extends ContextTestSupport {
  @Test public void testAggregateDiscardOnTimeout() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:aggregated");
    mock.expectedMessageCount(0);
    template.sendBodyAndHeader("direct:start","A","id",123);
    template.sendBodyAndHeader("direct:start","B","id",123);
    Thread.sleep(250);
    mock.assertIsSatisfied();
    mock.reset();
    mock.expectedBodiesReceived("C+D+E");
    template.sendBodyAndHeader("direct:start","C","id",456);
    template.sendBodyAndHeader("direct:start","D","id",456);
    template.sendBodyAndHeader("direct:start","E","id",456);
    assertTrue(mock.await(1000,TimeUnit.MILLISECONDS));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(header("id"),new BodyInAggregatingStrategy()).completionSize(3).completionTimeout(200).completionTimeoutCheckerInterval(10).discardOnCompletionTimeout().to("mock:aggregated");
      }
    }
;
  }
}
