/** 
 * @version 
 */
public class DelayerTest extends ContextTestSupport {
  private MyDelayCalcBean bean=new MyDelayCalcBean();
  private ExchangeAwareDelayCalcBean exchangeAwareBean=new ExchangeAwareDelayCalcBean();
  @Test public void testSendingMessageGetsDelayed() throws Exception {
    MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    resultEndpoint.expectedMessageCount(0);
    resultEndpoint.setResultWaitTime(10);
    template.sendBodyAndHeader("seda:a","<hello>world!</hello>","MyDelay",100);
    resultEndpoint.assertIsSatisfied();
    resultEndpoint.reset();
    resultEndpoint.expectedMessageCount(1);
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testDelayConstant() throws Exception {
    MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    resultEndpoint.expectedMessageCount(1);
    resultEndpoint.setResultMinimumWaitTime(90);
    template.sendBody("seda:b","<hello>world!</hello>");
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testDelayBean() throws Exception {
    MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    resultEndpoint.expectedMessageCount(1);
    resultEndpoint.setResultMinimumWaitTime(90);
    template.sendBody("seda:c","<hello>world!</hello>");
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testExchangeAwareDelayBean() throws Exception {
    MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    resultEndpoint.expectedMessageCount(1);
    resultEndpoint.setResultMinimumWaitTime(90);
    template.sendBodyAndHeader("seda:d","<hello>world!</hello>",BEAN_DELAYER_HEADER,100);
    resultEndpoint.assertIsSatisfied();
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("seda:a").delay().header("MyDelay").to("mock:result");
        from("seda:b").delay(100).to("mock:result");
        from("seda:c").delay().method(bean,"delayMe").to("mock:result");
        from("seda:d").delay().method(exchangeAwareBean,"delayMe").to("mock:result");
      }
    }
;
  }
}
