/** 
 * @version 
 */
public class RestletQueryTest extends RestletTestSupport {
  private static final String QUERY_STRING="foo=bar&test=123";
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("restlet:http://localhost:" + portNum + "/users/{username}").process(new SetUserProcessor());
        from("direct:start").to("restlet:http://localhost:" + portNum + "/users/{username}");
      }
    }
;
  }
class SetUserProcessor implements Processor {
    public void process(    Exchange exchange) throws Exception {
      assertEquals(QUERY_STRING,exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class));
    }
  }
  @Test public void testPostBody() throws Exception {
    HttpResponse response=doExecute(new HttpGet("http://localhost:" + portNum + "/users/homer?"+ QUERY_STRING));
    assertHttpResponse(response,204,"text/plain");
  }
  @Test public void testGetBodyByRestletProducer() throws Exception {
    Exchange ex=template.request("direct:start",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.HTTP_QUERY,QUERY_STRING);
        exchange.getIn().setHeader("username","homer");
      }
    }
);
    assertEquals(204,ex.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));
  }
}
