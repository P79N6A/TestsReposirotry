@ContextConfiguration public class SoapResponseAttachmentTest extends AbstractJUnit4SpringContextTests {
  private final String xmlRequestForGoogleStockQuote="<GetQuote xmlns=\"http://www.webserviceX.NET/\"><symbol>GOOG</symbol></GetQuote>";
  private final String soapHeader="<h:Header xmlns:h=\"http://www.webserviceX.NET/\"><h:MessageID>1234567890</h:MessageID><h:Nested><h:NestedID>1111</h:NestedID></h:Nested></h:Header>";
  @Produce private ProducerTemplate template;
  /** 
 * This tests if attachments, returned by a spring-ws request, are populated into the exchange.  The SOAP attachments are populated by the SoapAttachmentResponseProcessor.  Which adds 2 response attachments. Note: 'allowResponseAttachmentOverride=true' must be set!
 * @throws Exception
 */
  @Test() public void consumeStockQuoteWebserviceWithSoapResponseAttachment() throws Exception {
    Exchange result=template.request("direct:stockQuoteWebservice",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody(xmlRequestForGoogleStockQuote);
        exchange.getIn().setHeader(SpringWebserviceConstants.SPRING_WS_SOAP_HEADER,soapHeader);
        exchange.getIn().addAttachment("requestAttachment1.txt",new DataHandler("hello attachment!","text/plain"));
      }
    }
);
    assertNotNull(result);
    assertNotNull(result.getOut().getAttachment("requestAttachment1.txt"));
    assertNotNull(result.getOut().getAttachment("responseAttachment1.txt"));
    assertNotNull(result.getOut().getAttachment("responseAttachment2.xml"));
  }
}
