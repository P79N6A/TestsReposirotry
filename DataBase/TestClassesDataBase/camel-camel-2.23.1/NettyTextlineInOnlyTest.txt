/** 
 * @version 
 */
public class NettyTextlineInOnlyTest extends BaseNettyTest {
  @Test public void testTextlineInOnlyDual() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World","how are you?");
    template.sendBody("netty4:tcp://localhost:{{port}}?textline=true&sync=false","Hello World\nhow are you?\n");
    assertMockEndpointsSatisfied();
  }
  @Test public void testTextlineInOnlyAutoAppend() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBody("netty4:tcp://localhost:{{port}}?textline=true&sync=false","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testTextlineInOnly() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBody("netty4:tcp://localhost:{{port}}?textline=true&sync=false","Hello World\n");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4:tcp://localhost:{{port}}?textline=true&sync=false").validate(body().isInstanceOf(String.class)).to("mock:result");
      }
    }
;
  }
}
