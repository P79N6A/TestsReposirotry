/** 
 */
public class JndiCamelSingletonInitialContextFactoryTest extends ContextTestSupport {
  private static final String FAKE="!!! Get DataSource fake !!!";
  private final Hashtable<String,String> env=new Hashtable<>();
  @Override @Before public void setUp() throws Exception {
    env.put(Context.INITIAL_CONTEXT_FACTORY,CamelSingletonInitialContextFactory.class.getName());
    super.setUp();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=new JndiRegistry(new InitialContext(env));
    jndi.bind("jdbc/myDataSource",FAKE);
    return jndi;
  }
  @Test public void testSingletonJndiContext() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived(FAKE);
    template.sendBody("direct:simple","Dummy");
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure(){
        from("direct:simple").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            Context context=new InitialContext(env);
            exchange.getIn().setBody(context.lookup("jdbc/myDataSource").toString());
          }
        }
).to("mock:result");
      }
    }
;
  }
}
