public class XQueryBasedRoutingPerformanceTest extends AbstractBasePerformanceTest {
  private final int count=30000;
  @Test public void testChoice() throws InterruptedException {
    template.setDefaultEndpointUri("direct:choice");
    execute(20000);
    resetMock(count);
    StopWatch watch=new StopWatch();
    execute(count);
    assertMockEndpointsSatisfied();
    log.warn("Ran {} tests in {}ms",count,watch.taken());
  }
  @Test public void testFilter() throws InterruptedException {
    template.setDefaultEndpointUri("direct:filter");
    execute(20000);
    resetMock(count);
    StopWatch watch=new StopWatch();
    execute(count);
    assertMockEndpointsSatisfied();
    log.warn("Ran {} tests in {}ms",count,watch.taken());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        Map<String,String> namespaces=new HashMap<>();
        namespaces.put("soapenv","http://schemas.xmlsoap.org/soap/envelope/");
        namespaces.put("m","http://services.samples/xsd");
        from("direct:filter").filter().xquery("/soapenv:Envelope/soapenv:Body/m:buyStocks/order[1]/symbol='IBM'",namespaces).to("mock:end");
        from("direct:choice").choice().when().xquery("/soapenv:Envelope/soapenv:Body/m:buyStocks/order[1]/symbol='IBM'",namespaces).to("mock:end");
      }
    }
;
  }
}
