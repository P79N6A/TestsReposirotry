/** 
 */
public class FileRouteJmsKeepLastModifiedTest extends CamelTestSupport {
  protected String componentName="activemq";
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/inbox");
    deleteDirectory("target/outbox");
    super.setUp();
  }
  @Test public void testKeepLastModified() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBodyAndHeader("file://target/inbox","Hello World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
    File inbox=new File("trarget/inbox/hello.txt");
    File outbox=new File("trarget/outbox/hello.txt");
    assertEquals("Should keep last modified",inbox.lastModified(),outbox.lastModified());
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent(componentName,jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("file://target/inbox?noop=true").to("activemq:queue:hello");
        from("activemq:queue:hello").delayer(100).to("file://target/outbox?keepLastModified=true").to("mock:result");
      }
    }
;
  }
}
