public class CreateModelFromXmlTest extends ContextTestSupport {
  public static final String NS_CAMEL="http://camel.apache.org/schema/spring";
  public static final String NS_FOO="http://foo";
  public static final String NS_BAR="http://bar";
  @Test public void testCreateModelFromXmlForInputStreamWithDefaultNamespace() throws Exception {
    RoutesDefinition routesDefinition=createModelFromXml("simpleRoute.xml",false);
    assertNotNull(routesDefinition);
    Map<String,String> expectedNamespaces=new LinkedHashMap<>();
    expectedNamespaces.put("xmlns",NS_CAMEL);
    assertNamespacesPresent(routesDefinition,expectedNamespaces);
  }
  @Test public void testCreateModelFromXmlForInputStreamWithAdditionalNamespaces() throws Exception {
    RoutesDefinition routesDefinition=createModelFromXml("simpleRouteWithNamespaces.xml",false);
    assertNotNull(routesDefinition);
    Map<String,String> expectedNamespaces=new LinkedHashMap<>();
    expectedNamespaces.put("xmlns",NS_CAMEL);
    expectedNamespaces.put("foo",NS_FOO);
    expectedNamespaces.put("bar",NS_BAR);
    assertNamespacesPresent(routesDefinition,expectedNamespaces);
  }
  @Test public void testCreateModelFromXmlForStringWithDefaultNamespace() throws Exception {
    RoutesDefinition routesDefinition=createModelFromXml("simpleRoute.xml",true);
    assertNotNull(routesDefinition);
    Map<String,String> expectedNamespaces=new LinkedHashMap<>();
    expectedNamespaces.put("xmlns",NS_CAMEL);
    assertNamespacesPresent(routesDefinition,expectedNamespaces);
  }
  @Test public void testCreateModelFromXmlForStringWithAdditionalNamespaces() throws Exception {
    RoutesDefinition routesDefinition=createModelFromXml("simpleRouteWithNamespaces.xml",true);
    assertNotNull(routesDefinition);
    Map<String,String> expectedNamespaces=new LinkedHashMap<>();
    expectedNamespaces.put("xmlns",NS_CAMEL);
    expectedNamespaces.put("foo",NS_FOO);
    expectedNamespaces.put("bar",NS_BAR);
    assertNamespacesPresent(routesDefinition,expectedNamespaces);
  }
  private RoutesDefinition createModelFromXml(  String camelContextResource,  boolean fromString) throws Exception {
    InputStream inputStream=getClass().getResourceAsStream(camelContextResource);
    if (fromString) {
      String xml=context.getTypeConverter().convertTo(String.class,inputStream);
      return ModelHelper.createModelFromXml(context,xml,RoutesDefinition.class);
    }
    return ModelHelper.createModelFromXml(context,inputStream,RoutesDefinition.class);
  }
  private void assertNamespacesPresent(  RoutesDefinition routesDefinition,  Map<String,String> expectedNamespaces){
    for (    RouteDefinition route : routesDefinition.getRoutes()) {
      Iterator<ExpressionNode> it=filterTypeInOutputs(route.getOutputs(),ExpressionNode.class);
      if (it.hasNext()) {
        ExpressionNode en=it.next();
        ExpressionDefinition ed=en.getExpression();
        NamespaceAware na=null;
        Expression exp=ed.getExpressionValue();
        if (exp instanceof NamespaceAware) {
          na=(NamespaceAware)exp;
        }
 else         if (ed instanceof NamespaceAware) {
          na=(NamespaceAware)ed;
        }
        assertNotNull(na);
        assertEquals(expectedNamespaces,na.getNamespaces());
      }
 else {
        fail("Expected to find at least one ExpressionNode in route");
      }
    }
  }
}
