public class RoutingSlipNotStopErrorHandlerTest extends ContextTestSupport {
  private static final String DIRECT_START="direct:start";
  private static final String THROWING_ROUTE="direct:throwingRoute";
public static class CustomRoutingSlip {
    public String router(){
      return THROWING_ROUTE;
    }
  }
  @Test public void testRoutingSlipNotStopErrorHandler() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(2);
    template.sendBody(DIRECT_START,"ABC");
    template.sendBody(THROWING_ROUTE,"123");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure(){
        errorHandler(deadLetterChannel("mock:result").maximumRedeliveries(1).redeliveryDelay(10).retriesExhaustedLogLevel(LoggingLevel.ERROR).retryAttemptedLogLevel(LoggingLevel.WARN).logStackTrace(true).logRetryStackTrace(true));
        from(DIRECT_START).routingSlip(method(CustomRoutingSlip.class,"router"));
        from(THROWING_ROUTE).process().exchange(o -> {
          throw new IllegalStateException();
        }
);
      }
    }
;
  }
}
