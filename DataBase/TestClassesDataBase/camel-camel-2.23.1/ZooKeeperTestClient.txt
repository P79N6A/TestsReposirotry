public static class ZooKeeperTestClient {
  private final CuratorFramework curator;
  private final ServiceDiscovery<ZooKeeperServiceRegistry.MetaData> discovery;
  public ZooKeeperTestClient(  String nodes){
    curator=CuratorFrameworkFactory.builder().connectString(nodes).retryPolicy(new ExponentialBackoffRetry(1000,3)).build();
    discovery=ServiceDiscoveryBuilder.builder(ZooKeeperServiceRegistry.MetaData.class).client(curator).basePath(SERVICE_PATH).serializer(new JsonInstanceSerializer<>(ZooKeeperServiceRegistry.MetaData.class)).build();
  }
  public CuratorFramework curator(){
    return curator;
  }
  public ServiceDiscovery<ZooKeeperServiceRegistry.MetaData> discovery(){
    return discovery;
  }
  public void start() throws Exception {
    curator.start();
    discovery.start();
  }
  public void stop() throws Exception {
    CloseableUtils.closeQuietly(discovery);
    CloseableUtils.closeQuietly(curator);
  }
}
