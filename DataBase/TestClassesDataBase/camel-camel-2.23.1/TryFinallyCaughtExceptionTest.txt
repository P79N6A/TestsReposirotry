/** 
 */
public class TryFinallyCaughtExceptionTest extends ContextTestSupport {
  @Test public void testTryFinallyCaughtException() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    MockEndpoint error=getMockEndpoint("mock:b");
    error.expectedMessageCount(1);
    try {
      template.sendBody("direct:start","Hello World");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
    }
    assertMockEndpointsSatisfied();
    Exception e=error.getReceivedExchanges().get(0).getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class);
    assertNotNull(e);
    assertEquals("Forced",e.getMessage());
    String to=error.getReceivedExchanges().get(0).getProperty(Exchange.FAILURE_ENDPOINT,String.class);
    assertEquals("bean://myBean?method=doSomething",to);
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myBean",this);
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").doTry().to("mock:a").to("bean:myBean?method=doSomething").doFinally().to("mock:b").end().to("mock:result");
      }
    }
;
  }
  public void doSomething(  String body) throws Exception {
    throw new IllegalArgumentException("Forced");
  }
}
