public class TypeConverterRegistryPerformanceTest extends ContextTestSupport {
  private int pool=100;
  private int inner=10;
  private int size=20000;
  private ExecutorService executorService;
  private CountDownLatch latch;
  @Test public void testManual() throws Exception {
  }
  public void disbledtestPerformance() throws Exception {
    Document dom=context.getTypeConverter().convertTo(Document.class,"<hello>World</hello>");
    assertNotNull(dom);
    StopWatch watch=new StopWatch();
    latch=new CountDownLatch(size);
    executorService=Executors.newFixedThreadPool(pool);
    for (int i=0; i < size; i++) {
      executorService.submit(new Runnable(){
        @Override public void run(){
          for (int j=0; j < inner; j++) {
            Document dom=context.getTypeConverter().convertTo(Document.class,"<hello>World</hello>");
            assertNotNull(dom);
          }
          latch.countDown();
        }
      }
);
    }
    assertTrue("Should all work",latch.await(2,TimeUnit.MINUTES));
    log.info("Took " + watch.taken());
    executorService.shutdownNow();
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
}
