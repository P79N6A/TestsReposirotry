/** 
 * @version 
 */
public class IrcOnReplyTest extends IrcIntegrationTestSupport {
  protected String command="WHO #camel-test";
  protected String resultEnd="End of /WHO list.";
  private boolean sentMessages;
  @Test public void testIrcMessages() throws Exception {
    resultEndpoint.expectedBodiesReceived(resultEnd);
    resultEndpoint.assertIsSatisfied();
    List<Exchange> list=resultEndpoint.getReceivedExchanges();
    for (    Exchange exchange : list) {
      log.info("Received exchange: " + exchange + " headers: "+ exchange.getIn().getHeaders());
    }
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(fromUri()).choice().when(header(IrcConstants.IRC_NUM).isEqualTo(315)).to("mock:result").when(header(IrcConstants.IRC_MESSAGE_TYPE).isEqualTo("JOIN")).to("seda:consumerJoined");
        from("seda:consumerJoined").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            sendMessages();
          }
        }
);
      }
    }
;
  }
  protected String fromUri(){
    StringBuilder sb=new StringBuilder(super.fromUri());
    return sb.append("&onReply=true").toString();
  }
  /** 
 * Lets send messages once the consumer has joined
 */
  protected void sendMessages(){
    if (!sentMessages) {
      sentMessages=true;
      template.sendBody(fromUri(),command);
    }
  }
}
