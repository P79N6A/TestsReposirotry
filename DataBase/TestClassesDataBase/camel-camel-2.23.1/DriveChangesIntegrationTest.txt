/** 
 * Test class for com.google.api.services.drive.Drive$Changes APIs.
 */
public class DriveChangesIntegrationTest extends AbstractGoogleDriveTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(DriveChangesIntegrationTest.class);
  private static final String PATH_PREFIX=GoogleDriveApiCollection.getCollection().getApiName(DriveChangesApiMethod.class).getName();
  @Test public void testGet() throws Exception {
    final com.google.api.services.drive.model.ChangeList list=requestBody("direct://LIST",null);
    List<Change> items=list.getItems();
    if (!items.isEmpty()) {
      Change change=items.get(0);
      Long id=change.getId();
      final com.google.api.services.drive.model.Change result=requestBody("direct://GET",id);
      assertNotNull("get result",result);
      LOG.debug("get: " + result);
    }
  }
  @Test public void testList() throws Exception {
    final com.google.api.services.drive.model.ChangeList result=requestBody("direct://LIST",null);
    assertNotNull("list result",result);
    LOG.debug("list: " + result);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://GET").to("google-drive://" + PATH_PREFIX + "/get?inBody=changeId");
        from("direct://LIST").to("google-drive://" + PATH_PREFIX + "/list");
        from("direct://WATCH").to("google-drive://" + PATH_PREFIX + "/watch?inBody=contentChannel");
      }
    }
;
  }
}
