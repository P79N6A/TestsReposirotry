public class ToDynamicSendDynamicAwareTest extends ContextTestSupport {
  @Test public void testToDynamic() throws Exception {
    getMockEndpoint("mock:bar").expectedBodiesReceived("Hello Camel ordered beer","Hello World ordered wine");
    getMockEndpoint("mock:bar").allMessages().header(BarConstants.DRINK).isNull();
    template.sendBodyAndHeader("direct:start","Hello Camel","drink","beer");
    template.sendBodyAndHeader("direct:start","Hello World","drink","wine");
    assertMockEndpointsSatisfied();
    boolean found=context.getEndpointMap().containsKey("bar://order");
    assertTrue("There should only be one bar endpoint",found);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.addComponent("bar",new BarComponent());
        from("direct:start").toD("bar:order?drink=${header.drink}").to("mock:bar");
      }
    }
;
  }
}
