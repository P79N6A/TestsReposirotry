@RunWith(Arquillian.class) public class ProgrammaticLookupTest {
  @Any @Inject Instance<CamelContext> contexts;
  @Any @Inject private Instance<ProducerTemplate> producers;
  @Any @Inject private Instance<Endpoint> endpoints;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(EndpointInjectRoute.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyCamelContext(){
    assertThat("Context instance status is incorrect!",contexts.get().getStatus(),is(equalTo(ServiceStatus.Started)));
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    ProducerTemplate inbound=producers.select(Uri.Literal.of("direct:inbound")).get();
    MockEndpoint outbound=endpoints.select(MockEndpoint.class,Uri.Literal.of("mock:outbound")).get();
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("test");
    inbound.sendBody("test");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
}
