public class RemoveRouteStopEndpointTest extends ContextTestSupport {
  @Test public void testEndpointRegistryStopRouteEndpoints() throws Exception {
    Endpoint seda=context.hasEndpoint("seda://foo");
    assertNotNull(seda);
    Endpoint log=context.hasEndpoint("log://bar");
    assertNotNull(log);
    assertTrue("Should be started",((ServiceSupport)seda).isStarted());
    assertTrue("Should be started",((ServiceSupport)log).isStarted());
    assertTrue(context.hasEndpoint("seda:foo") != null);
    assertTrue(context.hasEndpoint("seda:bar") != null);
    assertTrue(context.hasEndpoint("log://foo") != null);
    assertTrue(context.hasEndpoint("log://bar") != null);
    assertTrue(context.hasEndpoint("mock://result") != null);
    assertTrue(context.hasEndpoint("seda://stop") != null);
    assertTrue(context.hasEndpoint("mock://stop") != null);
    context.stopRoute("bar");
    context.removeRoute("bar");
    assertTrue(context.hasEndpoint("seda://foo") != null);
    assertTrue(context.hasEndpoint("log://foo") != null);
    assertFalse(context.hasEndpoint("seda://bar") != null);
    assertFalse(context.hasEndpoint("log://bar") != null);
    assertTrue(context.hasEndpoint("mock://result") != null);
    assertTrue(context.hasEndpoint("seda://stop") != null);
    assertTrue(context.hasEndpoint("mock://stop") != null);
    assertTrue("Should be started",((ServiceSupport)seda).isStarted());
    assertTrue("Should be stopped",((ServiceSupport)log).isStopped());
    context.stopRoute("baz");
    context.removeRoute("baz");
    assertTrue(context.hasEndpoint("seda://foo") != null);
    assertTrue(context.hasEndpoint("log://foo") != null);
    assertFalse(context.hasEndpoint("seda://bar") != null);
    assertFalse(context.hasEndpoint("log://bar") != null);
    assertTrue(context.hasEndpoint("mock://result") != null);
    assertFalse(context.hasEndpoint("seda://stop") != null);
    assertFalse(context.hasEndpoint("mock://stop") != null);
    context.stopRoute("foo");
    context.removeRoute("foo");
    assertFalse(context.hasEndpoint("seda://foo") != null);
    assertFalse(context.hasEndpoint("log://foo") != null);
    assertFalse(context.hasEndpoint("seda://bar") != null);
    assertFalse(context.hasEndpoint("log://bar") != null);
    assertFalse(context.hasEndpoint("mock://result") != null);
    assertFalse(context.hasEndpoint("seda://stop") != null);
    assertFalse(context.hasEndpoint("mock://stop") != null);
    assertFalse("Should not be started",((ServiceSupport)seda).isStarted());
    assertFalse("Should not be started",((ServiceSupport)log).isStarted());
  }
  @Test public void testEndpointRegistryStopRouteEndpointsContextStop() throws Exception {
    Endpoint seda=context.hasEndpoint("seda://foo");
    assertNotNull(seda);
    Endpoint log=context.hasEndpoint("log://bar");
    assertNotNull(log);
    assertTrue("Should be started",((ServiceSupport)seda).isStarted());
    assertTrue("Should be started",((ServiceSupport)log).isStarted());
    assertTrue(context.hasEndpoint("seda://foo") != null);
    assertTrue(context.hasEndpoint("log://foo") != null);
    assertTrue(context.hasEndpoint("seda://bar") != null);
    assertTrue(context.hasEndpoint("log://bar") != null);
    assertTrue(context.hasEndpoint("mock://result") != null);
    assertTrue(context.hasEndpoint("seda://stop") != null);
    assertTrue(context.hasEndpoint("mock://stop") != null);
    context.stopRoute("bar");
    context.removeRoute("bar");
    assertTrue("Should be started",((ServiceSupport)seda).isStarted());
    assertTrue("Should be stopped",((ServiceSupport)log).isStopped());
    assertTrue(context.hasEndpoint("seda:foo") != null);
    assertTrue(context.hasEndpoint("log://foo") != null);
    assertFalse(context.hasEndpoint("seda://bar") != null);
    assertFalse(context.hasEndpoint("log://bar") != null);
    assertTrue(context.hasEndpoint("mock://result") != null);
    assertTrue(context.hasEndpoint("seda://stop") != null);
    assertTrue(context.hasEndpoint("mock://stop") != null);
    context.stopRoute("baz");
    context.removeRoute("baz");
    assertTrue(context.hasEndpoint("seda://foo") != null);
    assertTrue(context.hasEndpoint("log://foo") != null);
    assertFalse(context.hasEndpoint("seda://bar") != null);
    assertFalse(context.hasEndpoint("log://bar") != null);
    assertTrue(context.hasEndpoint("mock://result") != null);
    assertFalse(context.hasEndpoint("seda://stop") != null);
    assertFalse(context.hasEndpoint("mock://stop") != null);
    context.stop();
    assertFalse("Should not be started",((ServiceSupport)seda).isStarted());
    assertFalse("Should not be started",((ServiceSupport)log).isStarted());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:foo").routeId("foo").to("log:foo").to("mock:result");
        from("seda:bar").routeId("bar").to("log:bar").to("log:bar").to("mock:result");
        from("seda:stop").routeId("baz").to("mock:stop");
      }
    }
;
  }
}
