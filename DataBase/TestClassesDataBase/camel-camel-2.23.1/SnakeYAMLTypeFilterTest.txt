public class SnakeYAMLTypeFilterTest extends CamelTestSupport {
  @Test public void testSafeConstructor() throws Exception {
    SnakeYAMLTypeFilterHelper.testSafeConstructor(template);
  }
  @Test public void testTypeConstructor() throws Exception {
    SnakeYAMLTypeFilterHelper.testTypeConstructor(template);
  }
  @Test public void testTypeConstructorFromDefinition() throws Exception {
    SnakeYAMLTypeFilterHelper.testTypeConstructorFromDefinition(template);
  }
  @Test public void testAllowAllConstructor() throws Exception {
    SnakeYAMLTypeFilterHelper.testAllowAllConstructor(template);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        SnakeYAMLDataFormat safeConstructorDf=new SnakeYAMLDataFormat();
        from("direct:safe-constructor").unmarshal(safeConstructorDf);
        SnakeYAMLDataFormat typeConstructorDf=new SnakeYAMLDataFormat();
        typeConstructorDf.addTypeFilters(TypeFilters.types(TestPojo.class));
        from("direct:type-constructor").unmarshal(typeConstructorDf);
        SnakeYAMLDataFormat typeConstructorStrDf=new SnakeYAMLDataFormat();
        typeConstructorStrDf.setTypeFilterDefinitions(Arrays.asList("type:org.apache.camel.component.snakeyaml.model.TestPojo","regexp:org.apache.camel.component.snakeyaml.model.R.*"));
        from("direct:type-constructor-strdef").unmarshal(typeConstructorStrDf);
        SnakeYAMLDataFormat allConstructorDf=new SnakeYAMLDataFormat();
        allConstructorDf.setAllowAnyType(true);
        from("direct:all-constructor").unmarshal(allConstructorDf).to("mock:all-constructor");
      }
    }
;
  }
}
