/** 
 * Lets test that a number of headers MQSeries doesn't like to be sent are excluded when forwarding a JMS message from one destination to another
 * @version 
 */
public class MQSeriesHeaderTest extends CamelTestSupport {
  @Test public void testForwardingJmsMessageIgnoresHeadersMQDoesntLike() throws Exception {
    MockEndpoint endpoint=getMockEndpoint("mock:result");
    endpoint.expectedMessageCount(1);
    Map<String,Object> headers=new HashMap<>();
    headers.put("JMSXAppID","ABC");
    template.sendBodyAndHeaders("activemq:test.a","Hello World!",headers);
    endpoint.assertIsSatisfied();
    Exchange exchange=endpoint.getReceivedExchanges().get(0);
    Message in=exchange.getIn();
    assertMessageHeader(in,"JMSXAppID",null);
    log.info("Received message: " + in);
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:test.a").to("activemq:test.b");
        from("activemq:test.b").to("mock:result");
      }
    }
;
  }
}
