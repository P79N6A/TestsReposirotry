/** 
 * @version 
 */
public class JmsMQSpecialHeaderTest extends CamelTestSupport {
  @Test public void testUsingSpecialIBMJMSHeader() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello IBM");
    mock.message(0).header("JMS_IBM_Character_Set").isEqualTo("ISO8859_1");
    template.sendBodyAndHeader("activemq:queue:ibm","Hello IBM","JMS_IBM_Character_Set","ISO8859_1");
    assertMockEndpointsSatisfied();
  }
  @Test public void testUsingSpecialIBMJMSHeaderAndStandardJMSHeader() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello IBM");
    mock.message(0).header("JMS_IBM_Character_Set").isEqualTo("ISO8859_1");
    Map<String,Object> headers=new HashMap<>();
    headers.put("JMSPriority",3);
    headers.put("JMS_IBM_Character_Set","ISO8859_1");
    template.sendBodyAndHeaders("activemq:queue:ibm","Hello IBM",headers);
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:queue:ibm").to("mock:result");
      }
    }
;
  }
}
