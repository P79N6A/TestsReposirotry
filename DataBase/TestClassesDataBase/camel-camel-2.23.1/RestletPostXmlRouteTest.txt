/** 
 * @version 
 */
public class RestletPostXmlRouteTest extends RestletTestSupport {
  private static final String REQUEST_MESSAGE="<mail><body>HelloWorld!</body><subject>test</subject><to>x@y.net</to></mail>";
  private static final String REQUEST_MESSAGE_WITH_XML_TAG="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>" + REQUEST_MESSAGE;
  private String url="restlet:http://localhost:" + portNum + "/users?restletMethod=POST";
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(url).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            assertNotNull(body);
            assertTrue("Get a wrong request message",body.indexOf(REQUEST_MESSAGE) >= 0);
            exchange.getOut().setBody("<status>OK</status>");
            exchange.getOut().setHeader(Exchange.CONTENT_TYPE,"application/xml");
          }
        }
);
        from("direct:start").to(url);
      }
    }
;
  }
  @Test public void testPostXml() throws Exception {
    postRequestMessage(REQUEST_MESSAGE);
  }
  @Test public void testPostXmlWithXmlTag() throws Exception {
    postRequestMessage(REQUEST_MESSAGE_WITH_XML_TAG);
  }
  private void postRequestMessage(  final String message) throws Exception {
    Exchange exchange=template.request("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody(message);
        exchange.getIn().setHeader(Exchange.CONTENT_TYPE,"application/xml");
      }
    }
);
    assertNotNull(exchange);
    assertTrue(exchange.hasOut());
    String s=exchange.getOut().getBody(String.class);
    assertEquals("<status>OK</status>",s);
  }
}
