/** 
 * Checks for interoperability between a CXF client that is attached using the Camel transport for CXF and the SOAP data format
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration public class SoapCxfClientTest extends RouteBuilder {
  private static CustomerServiceImpl serverBean;
  @Resource(name="customerServiceCxfProxy") protected CustomerService customerService;
  @BeforeClass public static void initServerBean(){
    serverBean=new CustomerServiceImpl();
  }
  @Test public void testSuccess() throws NoSuchCustomerException {
    GetCustomersByName request=new GetCustomersByName();
    request.setName("test");
    GetCustomersByNameResponse response=customerService.getCustomersByName(request);
    Assert.assertNotNull(response);
    List<Customer> customers=response.getReturn();
    Assert.assertEquals(1,customers.size());
    Assert.assertEquals("test",customers.get(0).getName());
  }
  @Test public void testRoundTripGetAllCustomers() throws Exception {
    GetAllCustomersResponse response=customerService.getAllCustomers();
    Assert.assertEquals(1,response.getReturn().size());
    Customer firstCustomer=response.getReturn().get(0);
    Assert.assertEquals(100000.0,firstCustomer.getRevenue(),0.00001);
  }
  @Test public void testRoundTripSaveCustomer() throws Exception {
    Customer testCustomer=new Customer();
    testCustomer.setName("testName");
    SaveCustomer request=new SaveCustomer();
    request.setCustomer(testCustomer);
    customerService.saveCustomer(request);
    Customer customer2=serverBean.getLastSavedCustomer();
    Assert.assertEquals("testName",customer2.getName());
  }
  @Test public void testFault(){
    GetCustomersByName request=new GetCustomersByName();
    request.setName("none");
    try {
      customerService.getCustomersByName(request);
      Assert.fail("NoSuchCustomerException expected");
    }
 catch (    NoSuchCustomerException e) {
      NoSuchCustomer info=e.getFaultInfo();
      Assert.assertEquals("none",info.getCustomerId());
    }
  }
  public void configure() throws Exception {
    String jaxbPackage=GetCustomersByName.class.getPackage().getName();
    ElementNameStrategy elNameStrat=new ServiceInterfaceStrategy(CustomerService.class,false);
    SoapJaxbDataFormat soapDataFormat=new SoapJaxbDataFormat(jaxbPackage,elNameStrat);
    getContext().setTracing(true);
    from("direct:cxfclient").onException(Exception.class).handled(true).marshal(soapDataFormat).end().unmarshal(soapDataFormat).bean(serverBean).marshal(soapDataFormat);
  }
}
