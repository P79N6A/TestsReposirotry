/** 
 * @version 
 */
public class RmiDamnExceptionTest extends RmiRouteTestSupport {
  protected int getStartPort(){
    return 37501;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    if (classPathHasSpaces()) {
      return null;
    }
    LocateRegistry.createRegistry(getPort());
    JndiRegistry context=super.createRegistry();
    context.bind("echo",new EchoService());
    return context;
  }
  @Test public void tesDamn() throws Exception {
    if (classPathHasSpaces()) {
      return;
    }
    getMockEndpoint("mock:result").expectedMessageCount(0);
    try {
      template.sendBody("direct:echo","Hello World");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      assertIsInstanceOf(DamnException.class,e.getCause());
      assertEquals("Damn this did not work",e.getCause().getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        RmiEndpoint echo=(RmiEndpoint)endpoint("rmi://localhost:" + getPort() + "/echo");
        echo.setRemoteInterfaces(IEcho.class);
        from(echo).to("bean:echo");
        from("direct:echo").toF("rmi://localhost:%s/echo?method=damn",getPort()).to("mock:result");
      }
    }
;
  }
}
