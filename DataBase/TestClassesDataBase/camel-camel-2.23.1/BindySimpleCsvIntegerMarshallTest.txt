@ContextConfiguration public class BindySimpleCsvIntegerMarshallTest extends AbstractJUnit4SpringContextTests {
  private static final String URI_MOCK_RESULT="mock:result";
  private static final String URI_DIRECT_START="direct:start";
  @Produce(uri=URI_DIRECT_START) private ProducerTemplate template;
  @EndpointInject(uri=URI_MOCK_RESULT) private MockEndpoint result;
  @Test @DirtiesContext public void testMarshallMessage() throws Exception {
    MyOrder order=new MyOrder();
    order.setInstrument("XX23456789");
    order.setQuantity(12345678);
    order.setPrice(new BigDecimal("400.25"));
    result.expectedBodiesReceived("XX23456789,12345678,400.25\r\n");
    template.sendBody(order);
    result.assertIsSatisfied();
  }
public static class ContextConfig extends RouteBuilder {
    public void configure(){
      BindyCsvDataFormat camelDataFormat=new BindyCsvDataFormat(MyOrder.class);
      camelDataFormat.setLocale("en_US");
      from(URI_DIRECT_START).marshal(camelDataFormat).to(URI_MOCK_RESULT);
    }
  }
@CsvRecord(separator=",") public static class MyOrder {
    @DataField(pos=1) private String instrument;
    @DataField(pos=2) private int quantity;
    @DataField(pos=9,precision=2) private BigDecimal price;
    public String getInstrument(){
      return instrument;
    }
    public void setInstrument(    String instrument){
      this.instrument=instrument;
    }
    public int getQuantity(){
      return quantity;
    }
    public void setQuantity(    int quantity){
      this.quantity=quantity;
    }
    public BigDecimal getPrice(){
      return price;
    }
    public void setPrice(    BigDecimal price){
      this.price=price;
    }
  }
}
