/** 
 * @version 
 */
public class JmsInOutParallelTest extends CamelTestSupport {
  @Test public void testInOutParallel() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:received");
    mock.setAssertPeriod(2000);
    mock.expectedMessageCount(5);
    String outPayload=template.requestBody("direct:test","test",String.class);
    assertEquals("Fully done",outPayload);
    mock.assertIsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:test").setBody(constant("1,2,3,4,5")).inOut("activemq:queue:test1?requestTimeout=2000").split().tokenize(",").parallelProcessing().inOut("activemq:queue:test2?requestTimeout=2000").to("mock:received").end().setBody(constant("Fully done")).log("Finished");
        from("activemq:queue:test1").log("Received on queue test1");
        from("activemq:queue:test2").log("Received on queue test2").setBody(constant("Some reply")).delay(constant(100));
      }
    }
;
  }
}
