/** 
 * @version 
 */
public class LoadRouteFromXmlTest extends ContextTestSupport {
  @Test public void testLoadRouteFromXml() throws Exception {
    assertNotNull("Existing foo route should be there",context.getRoute("foo"));
    assertEquals(1,context.getRoutes().size());
    MockEndpoint foo=getMockEndpoint("mock:foo");
    foo.expectedBodiesReceived("Hello World");
    template.sendBody("direct:foo","Hello World");
    foo.assertIsSatisfied();
    InputStream is=getClass().getResourceAsStream("barRoute.xml");
    RoutesDefinition routes=context.loadRoutesDefinition(is);
    context.addRouteDefinitions(routes.getRoutes());
    assertNotNull("Loaded bar route should be there",context.getRoute("bar"));
    assertEquals(2,context.getRoutes().size());
    MockEndpoint bar=getMockEndpoint("mock:bar");
    bar.expectedBodiesReceived("Bye World");
    template.sendBody("direct:bar","Bye World");
    bar.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").routeId("foo").to("mock:foo");
      }
    }
;
  }
}
