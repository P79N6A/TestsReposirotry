/** 
 * @version 
 */
public class CamelContextHelperTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyFooBean());
    return jndi;
  }
  @Test public void testGetMandatoryEndpoint(){
    MockEndpoint mock=CamelContextHelper.getMandatoryEndpoint(context,"mock:foo",MockEndpoint.class);
    assertNotNull(mock);
  }
  @Test public void testMandatoryConvertTo(){
    Integer num=CamelContextHelper.mandatoryConvertTo(context,Integer.class,"5");
    assertEquals(5,num.intValue());
  }
  @Test public void testMandatoryConvertToNotPossible(){
    try {
      CamelContextHelper.mandatoryConvertTo(context,CamelContext.class,"5");
      fail("Should have thrown an exception");
    }
 catch (    IllegalArgumentException e) {
    }
  }
  @Test public void testLookupBean(){
    Object foo=CamelContextHelper.lookup(context,"foo");
    assertNotNull(foo);
    assertIsInstanceOf(MyFooBean.class,foo);
  }
  @Test public void testLookupBeanAndType(){
    MyFooBean foo=CamelContextHelper.lookup(context,"foo",MyFooBean.class);
    assertNotNull(foo);
  }
  @Test public void testRouteStartupOrder() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").routeId("foo").startupOrder(222).to("mock:foo");
        from("direct:bar").routeId("bar").startupOrder(111).to("mock:bar");
      }
    }
);
    assertEquals(111,CamelContextHelper.getRouteStartupOrder(context,"bar"));
    assertEquals(222,CamelContextHelper.getRouteStartupOrder(context,"foo"));
    assertEquals(0,CamelContextHelper.getRouteStartupOrder(context,"zzz"));
  }
public static class MyFooBean {
  }
}
