private class CustomClientFactory implements IRestfulClientFactory {
  @Override public int getConnectionRequestTimeout(){
    return 0;
  }
  @Override public int getConnectTimeout(){
    return 0;
  }
  @Override public IHttpClient getHttpClient(  StringBuilder theUrl,  Map<String,List<String>> theIfNoneExistParams,  String theIfNoneExistString,  RequestTypeEnum theRequestType,  List<Header> theHeaders){
    return null;
  }
  @Override public ServerValidationModeEnum getServerValidationModeEnum(){
    return null;
  }
  @Override public ServerValidationModeEnum getServerValidationMode(){
    return null;
  }
  @Override public int getSocketTimeout(){
    return 0;
  }
  @Override public int getPoolMaxTotal(){
    return 0;
  }
  @Override public int getPoolMaxPerRoute(){
    return 0;
  }
  @Override public <T extends IRestfulClient>T newClient(  Class<T> theClientType,  String theServerBase){
    return null;
  }
  @Override public IGenericClient newGenericClient(  String theServerBase){
    return new CustomClient();
  }
  @Override public void setConnectionRequestTimeout(  int theConnectionRequestTimeout){
  }
  @Override public void setConnectTimeout(  int theConnectTimeout){
  }
  @Override public <T>void setHttpClient(  T theHttpClient){
  }
  @Override public void setProxy(  String theHost,  Integer thePort){
  }
  @Override public void setProxyCredentials(  String theUsername,  String thePassword){
  }
  @Override public void setServerValidationModeEnum(  ServerValidationModeEnum theServerValidationMode){
  }
  @Override public void setServerValidationMode(  ServerValidationModeEnum theServerValidationMode){
  }
  @Override public void setSocketTimeout(  int theSocketTimeout){
  }
  @Override public void setPoolMaxTotal(  int thePoolMaxTotal){
  }
  @Override public void setPoolMaxPerRoute(  int thePoolMaxPerRoute){
  }
  @Override public void validateServerBase(  String theServerBase,  IHttpClient theHttpClient,  IRestfulClient theClient){
  }
  @Override public void validateServerBaseIfConfiguredToDoSo(  String theServerBase,  IHttpClient theHttpClient,  IRestfulClient theClient){
  }
}
