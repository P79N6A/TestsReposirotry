/** 
 * @version 
 */
public class SetHeaderIssueTest extends ContextTestSupport {
  protected Endpoint startEndpoint;
  protected MockEndpoint resultEndpoint;
  protected String matchingBody="<person xmlns='urn:cheese' name='James' city='London'/>";
  protected String notMatchingBody="<person xmlns='urn:cheese' name='Hiram' city='Tampa'/>";
  @Test public void testSendMatchingMessage() throws Exception {
    resultEndpoint.expectedMessageCount(1);
    sendBody("direct:start",matchingBody);
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testSendNotMatchingMessage() throws Exception {
    resultEndpoint.expectedMessageCount(0);
    sendBody("direct:start",notMatchingBody);
    resultEndpoint.assertIsSatisfied();
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    startEndpoint=resolveMandatoryEndpoint("direct:start");
    resultEndpoint=getMockEndpoint("mock:result");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        Namespaces ns=new Namespaces("foo","urn:cheese");
        from("direct:start").unmarshal().string().setHeader("foo",ns.xpath("/foo:person[@name='James']")).filter(ns.xpath("/foo:person[@name='James']")).to("mock:result");
      }
    }
;
  }
}
