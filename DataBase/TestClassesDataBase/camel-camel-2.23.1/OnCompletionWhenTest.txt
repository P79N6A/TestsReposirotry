/** 
 * @version 
 */
public class OnCompletionWhenTest extends ContextTestSupport {
  @Test public void testSynchronizeCompleteWhen() throws Exception {
    getMockEndpoint("mock:sync").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:sync").expectedPropertyReceived(Exchange.ON_COMPLETION,true);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSynchronizeCompleteNoWhen() throws Exception {
    getMockEndpoint("mock:sync").expectedMessageCount(0);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Bye World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").onCompletion().onWhen(body().contains("Hello")).to("log:sync").to("mock:sync").end().to("log:original").to("mock:result");
      }
    }
;
  }
}
