public class DefaultCxfRsBindingTest extends Assert {
  private DefaultCamelContext context=new DefaultCamelContext();
  @Test public void testSetCharsetWithContentType(){
    DefaultCxfRsBinding cxfRsBinding=new DefaultCxfRsBinding();
    Exchange exchange=new DefaultExchange(context);
    exchange.getIn().setHeader(Exchange.CONTENT_TYPE,"text/xml;charset=ISO-8859-1");
    cxfRsBinding.setCharsetWithContentType(exchange);
    String charset=IOHelper.getCharsetName(exchange);
    assertEquals("Get a wrong charset","ISO-8859-1",charset);
    exchange.getIn().setHeader(Exchange.CONTENT_TYPE,"text/xml");
    cxfRsBinding.setCharsetWithContentType(exchange);
    charset=IOHelper.getCharsetName(exchange);
    assertEquals("Get a worng charset name","UTF-8",charset);
  }
  @Test public void testCopyProtocolHeader(){
    DefaultCxfRsBinding cxfRsBinding=new DefaultCxfRsBinding();
    cxfRsBinding.setHeaderFilterStrategy(new DefaultHeaderFilterStrategy());
    Exchange exchange=new DefaultExchange(context);
    Message camelMessage=new DefaultMessage(context);
    org.apache.cxf.message.Message cxfMessage=new MessageImpl();
    Map<String,List<String>> headers=new HashMap<>();
    headers.put("emptyList",Collections.<String>emptyList());
    headers.put("zeroSizeList",new ArrayList<String>(0));
    cxfMessage.put(org.apache.cxf.message.Message.PROTOCOL_HEADERS,headers);
    cxfRsBinding.copyProtocolHeader(cxfMessage,camelMessage,exchange);
    assertNull("We should get nothing here",camelMessage.getHeader("emptyList"));
    assertNull("We should get nothing here",camelMessage.getHeader("zeroSizeList"));
  }
}
