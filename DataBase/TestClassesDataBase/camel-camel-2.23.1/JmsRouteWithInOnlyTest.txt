/** 
 * Unit test inspired by user forum
 * @version 
 */
public class JmsRouteWithInOnlyTest extends CamelTestSupport {
  protected String componentName="activemq";
  @Test public void testSendOrder() throws Exception {
    MockEndpoint inbox=getMockEndpoint("mock:inbox");
    inbox.expectedBodiesReceived("Camel in Action");
    MockEndpoint order=getMockEndpoint("mock:topic");
    order.expectedBodiesReceived("Camel in Action");
    Object out=template.requestBody("activemq:queue:inbox","Camel in Action");
    assertEquals("OK: Camel in Action",out);
    assertMockEndpointsSatisfied();
    assertEquals(ExchangePattern.InOut,inbox.getReceivedExchanges().get(0).getPattern());
    assertEquals(ExchangePattern.InOnly,order.getReceivedExchanges().get(0).getPattern());
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("orderService",new MyOrderServiceBean());
    return jndi;
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent(componentName,jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:inbox").to("mock:inbox").inOnly("activemq:topic:order").bean("orderService","handleOrder");
        from("activemq:topic:order").to("mock:topic");
      }
    }
;
  }
public static class MyOrderServiceBean {
    public String handleOrder(    String body){
      return "OK: " + body;
    }
  }
}
