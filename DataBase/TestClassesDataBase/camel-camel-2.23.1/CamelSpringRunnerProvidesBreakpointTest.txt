public class CamelSpringRunnerProvidesBreakpointTest extends CamelSpringRunnerPlainTest {
  @ProvidesBreakpoint public static Breakpoint createBreakpoint(){
    return new TestBreakpoint();
  }
  @Test @Override public void testProvidesBreakpoint(){
    assertNotNull(camelContext.getDebugger());
    assertNotNull(camelContext2.getDebugger());
    start.sendBody("David");
    assertNotNull(camelContext.getDebugger());
    assertNotNull(camelContext.getDebugger().getBreakpoints());
    assertEquals(1,camelContext.getDebugger().getBreakpoints().size());
    assertTrue(camelContext.getDebugger().getBreakpoints().get(0) instanceof TestBreakpoint);
    assertTrue(((TestBreakpoint)camelContext.getDebugger().getBreakpoints().get(0)).isBreakpointHit());
  }
private static final class TestBreakpoint extends BreakpointSupport {
    private boolean breakpointHit;
    @Override public void beforeProcess(    Exchange exchange,    Processor processor,    ProcessorDefinition<?> definition){
      breakpointHit=true;
    }
    public boolean isBreakpointHit(){
      return breakpointHit;
    }
  }
}
