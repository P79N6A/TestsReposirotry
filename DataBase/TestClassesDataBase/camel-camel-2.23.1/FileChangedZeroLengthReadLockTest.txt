/** 
 * @version
 */
public class FileChangedZeroLengthReadLockTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/changed/");
    createDirectory("target/changed/in");
    super.setUp();
  }
  @Test public void testChangedReadLock() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedFileExists("target/changed/out/zerofile.dat");
    writeZeroLengthFile();
    assertMockEndpointsSatisfied();
  }
  private void writeZeroLengthFile() throws Exception {
    FileOutputStream fos=new FileOutputStream("target/changed/in/zerofile.dat");
    fos.flush();
    fos.close();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/changed/in?initialDelay=0&delay=10&readLock=changed&readLockCheckInterval=100&readLockMinLength=0").to("file:target/changed/out","mock:result");
      }
    }
;
  }
}
