/** 
 * @version 
 */
public class MultiplePoliciesOnRouteTest extends CamelTestSupport {
  private String url="seda:foo?concurrentConsumers=20";
  private int size=100;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=new JndiRegistry(createJndiContext());
    registry.bind("startPolicy",createRouteStartPolicy());
    registry.bind("throttlePolicy",createThrottlePolicy());
    return registry;
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  private RoutePolicy createRouteStartPolicy(){
    SimpleScheduledRoutePolicy policy=new SimpleScheduledRoutePolicy();
    long startTime=System.currentTimeMillis() + 3000L;
    policy.setRouteStartDate(new Date(startTime));
    policy.setRouteStartRepeatCount(1);
    policy.setRouteStartRepeatInterval(3000);
    return policy;
  }
  private RoutePolicy createThrottlePolicy(){
    ThrottlingInflightRoutePolicy policy=new ThrottlingInflightRoutePolicy();
    policy.setMaxInflightExchanges(10);
    return policy;
  }
  @Test public void testMultiplePoliciesOnRoute() throws Exception {
    MockEndpoint success=context.getEndpoint("mock:success",MockEndpoint.class);
    success.expectedMinimumMessageCount(size - 10);
    context.getComponent("direct",DirectComponent.class).setBlock(false);
    context.getComponent("quartz",QuartzComponent.class).setPropertiesFile("org/apache/camel/routepolicy/quartz/myquartz.properties");
    context.addRoutes(new RouteBuilder(){
      public void configure(){
        from(url).routeId("test").routePolicyRef("startPolicy, throttlePolicy").to("log:foo?groupSize=10").to("mock:success");
      }
    }
);
    context.start();
    assertTrue(context.getRouteStatus("test") == ServiceStatus.Started);
    for (int i=0; i < size; i++) {
      template.sendBody(url,"Message " + i);
      Thread.sleep(3);
    }
    context.getComponent("quartz",QuartzComponent.class).stop();
    success.assertIsSatisfied();
  }
}
