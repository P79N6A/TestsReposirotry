public class CXFMultiPartTest extends CamelTestSupport {
  public static final QName SERVICE_NAME=new QName("http://camel.apache.org/cxf/multipart","MultiPartInvokeService");
  public static final QName ROUTE_PORT_NAME=new QName("http://camel.apache.org/cxf/multipart","MultiPartInvokePort");
  protected static Endpoint endpoint;
  protected AbstractXmlApplicationContext applicationContext;
  @Before public void setUp() throws Exception {
    applicationContext=createApplicationContext();
    super.setUp();
  }
  @After public void tearDown() throws Exception {
    IOHelper.close(applicationContext);
    super.tearDown();
  }
  @BeforeClass public static void startService(){
    Object implementor=new MultiPartInvokeImpl();
    String address="http://localhost:" + CXFTestSupport.getPort1() + "/CXFMultiPartTest/SoapContext/SoapPort";
    endpoint=Endpoint.publish(address,implementor);
  }
  @AfterClass public static void stopService(){
    if (endpoint != null) {
      endpoint.stop();
    }
  }
  @Test public void testInvokingServiceFromCXFClient() throws Exception {
    String reply=invokeMultiPartService("http://localhost:" + CXFTestSupport.getPort3() + "/CXFMultiPartTest/CamelContext/RouterPort","in0","in1");
    assertNotNull("No response received from service",reply);
    assertTrue(reply.equals("in0 in1"));
    assertNotNull("No response received from service",reply);
    assertTrue(reply.equals("in0 in1"));
  }
  private String invokeMultiPartService(  String address,  String in0,  String in1){
    Service service=Service.create(SERVICE_NAME);
    service.addPort(ROUTE_PORT_NAME,"http://schemas.xmlsoap.org/soap/",address);
    MultiPartInvoke multiPartClient=service.getPort(ROUTE_PORT_NAME,MultiPartInvoke.class);
    InE e0=new ObjectFactory().createInE();
    InE e1=new ObjectFactory().createInE();
    e0.setV(in0);
    e1.setV(in1);
    javax.xml.ws.Holder<InE> h=new javax.xml.ws.Holder<>();
    javax.xml.ws.Holder<InE> h1=new javax.xml.ws.Holder<>();
    multiPartClient.foo(e0,e1,h,h1);
    return h.value.getV() + " " + h1.value.getV();
  }
  protected CamelContext createCamelContext() throws Exception {
    return SpringCamelContext.springCamelContext(applicationContext);
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/multipart/MultiPartTest.xml");
  }
}
