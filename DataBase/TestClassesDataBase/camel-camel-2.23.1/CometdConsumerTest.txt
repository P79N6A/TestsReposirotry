@RunWith(MockitoJUnitRunner.class) public class CometdConsumerTest {
  private static final String USER_NAME="userName";
  private CometdConsumer testObj;
  @Mock private CometdEndpoint endpoint;
  @Mock private Processor processor;
  @Mock private BayeuxServerImpl bayeuxServerImpl;
  @Mock private LocalSession localSession;
  @Mock private Logger logger;
  @Mock private ServerChannel serverChannel;
  @Mock private ServerSession remote;
  @Mock private MarkedReference<ServerChannel> markedReferenceServerChannel;
  @Before public void before(){
    when(bayeuxServerImpl.newLocalSession(ArgumentMatchers.isNull())).thenReturn(localSession);
    when(bayeuxServerImpl.createChannelIfAbsent(ArgumentMatchers.isNull())).thenReturn(markedReferenceServerChannel);
    when(markedReferenceServerChannel.getReference()).thenReturn(serverChannel);
    testObj=new CometdConsumer(endpoint,processor);
    testObj.setBayeux(bayeuxServerImpl);
    Set<String> attributeNames=new HashSet<>();
    String attributeKey=USER_NAME;
    attributeNames.add(attributeKey);
  }
  @Test public void testStartDoesntCreateMultipleServices() throws Exception {
    testObj.start();
    ConsumerService expectedService=testObj.getConsumerService();
    testObj.start();
    ConsumerService result=testObj.getConsumerService();
    assertEquals(expectedService,result);
  }
}
