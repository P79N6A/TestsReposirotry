public class AtmosProducerMoveTest extends AtmosTestSupport {
  public AtmosProducerMoveTest() throws Exception {
  }
  @Test public void testCamelAtmos() throws Exception {
    template.send("direct:start",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader("test","test");
      }
    }
);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(1);
    assertMockEndpointsSatisfied(100L,TimeUnit.SECONDS);
    List<Exchange> exchanges=mock.getReceivedExchanges();
    Exchange exchange=exchanges.get(0);
    Object header=exchange.getIn().getHeader(AtmosResultHeader.MOVED_PATH.name());
    Object body=exchange.getIn().getBody();
    assertNotNull(header);
    assertNotNull(body);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("atmos://move?remotePath=/dummy/&newRemotePath=/dummy2/").to("mock:result");
      }
    }
;
  }
}
