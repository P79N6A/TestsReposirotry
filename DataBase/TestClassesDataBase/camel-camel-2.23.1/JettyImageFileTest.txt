/** 
 * Unit test for exposing a http server that returns images
 */
public class JettyImageFileTest extends BaseJettyTest {
  private void sendImageContent(  boolean usingGZip) throws Exception {
    Endpoint endpoint=context.getEndpoint("http://localhost:{{port}}/myapp/myservice");
    Exchange exchange=endpoint.createExchange();
    if (usingGZip) {
      exchange.getIn().setHeader(Exchange.CONTENT_ENCODING,"gzip");
    }
    template.send(endpoint,exchange);
    assertNotNull(exchange.getOut().getBody());
    assertEquals("Get a wrong content-type ",MessageHelper.getContentType(exchange.getOut()),"image/jpeg");
  }
  @Test public void testImageContentType() throws Exception {
    sendImageContent(false);
  }
  @Test public void testImageContentWithGZip() throws Exception {
    sendImageContent(true);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("jetty:http://localhost:{{port}}/myapp/myservice").process(new MyImageService());
      }
    }
;
  }
public class MyImageService implements Processor {
    public void process(    Exchange exchange) throws Exception {
      exchange.getOut().setBody(new File("src/test/data/logo.jpeg"));
      exchange.getOut().setHeader("Content-Type","image/jpeg");
    }
  }
}
