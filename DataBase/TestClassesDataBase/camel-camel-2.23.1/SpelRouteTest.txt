public class SpelRouteTest extends ContextTestSupport {
  @Test public void testSpelRoute() throws Exception {
    MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
    resultEndpoint.expectedBodiesReceived("Hello World! What a beautiful day");
    template.sendBodyAndHeader("direct:test","World","dayOrNight","day");
    resultEndpoint.assertIsSatisfied();
  }
  @Test public void testSpelWithLoop() throws Exception {
    MockEndpoint resultEndpoint=getMockEndpoint("mock:loopResult");
    resultEndpoint.expectedBodiesReceived("A:0","A:0:1","A:0:1:2","A:0:1:2:3");
    template.sendBody("direct:loop","A");
    resultEndpoint.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure(){
        from("direct:test").setBody(spel("Hello #{request.body}! What a beautiful #{request.headers['dayOrNight']}")).to("mock:result");
        from("direct:loop").loop(4).setBody(spel("#{body + ':' + properties['CamelLoopIndex']}")).to("mock:loopResult");
      }
    }
;
  }
}
