/** 
 * @version 
 */
public class FtpProducerFileExistFailTest extends FtpServerTestSupport {
  protected String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/exist?password=admin&delay=2000&noop=true&fileExist=Fail";
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    deleteDirectory("target/exist");
    template.sendBodyAndHeader(getFtpUrl(),"Hello World",Exchange.FILE_NAME,"hello.txt");
  }
  @Test public void testFail() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    mock.expectedFileExists(FTP_ROOT_DIR + "/exist/hello.txt","Hello World");
    try {
      template.sendBodyAndHeader(getFtpUrl(),"Bye World",Exchange.FILE_NAME,"hello.txt");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      GenericFileOperationFailedException cause=assertIsInstanceOf(GenericFileOperationFailedException.class,e.getCause());
      assertEquals("File already exist: exist/hello.txt. Cannot write new file.",cause.getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(getFtpUrl()).to("mock:result");
      }
    }
;
  }
}
