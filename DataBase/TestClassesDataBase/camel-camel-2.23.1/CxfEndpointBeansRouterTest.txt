public class CxfEndpointBeansRouterTest extends AbstractSpringBeanTestSupport {
  protected String[] getApplicationContextFiles(){
    CXFTestSupport.getPort1();
    return new String[]{"org/apache/camel/component/cxf/spring/CxfEndpointBeansRouter.xml"};
  }
  @Test public void testCxfEndpointBeanDefinitionParser(){
    CxfEndpoint routerEndpoint=ctx.getBean("routerEndpoint",CxfEndpoint.class);
    assertEquals("Got the wrong endpoint address",routerEndpoint.getAddress(),"http://localhost:" + CXFTestSupport.getPort1() + "/CxfEndpointBeansRouterTest/router");
    assertEquals("Got the wrong endpont service class","org.apache.camel.component.cxf.HelloService",routerEndpoint.getServiceClass().getName());
  }
  @Test public void testCreateCxfEndpointFromURI() throws Exception {
    CamelContext camelContext=ctx.getBean("camel",CamelContext.class);
    CxfEndpoint endpoint1=camelContext.getEndpoint("cxf:bean:routerEndpoint?address=http://localhost:9000/test1",CxfEndpoint.class);
    CxfEndpoint endpoint2=camelContext.getEndpoint("cxf:bean:routerEndpoint?address=http://localhost:8000/test2",CxfEndpoint.class);
    assertEquals("Get a wrong endpoint address.","http://localhost:9000/test1",endpoint1.getAddress());
    assertEquals("Get a wrong endpoint address.","http://localhost:8000/test2",endpoint2.getAddress());
    String uri1=URISupport.normalizeUri("cxf://bean:routerEndpoint?address=http://localhost:9000/test1");
    String uri2=URISupport.normalizeUri("cxf://bean:routerEndpoint?address=http://localhost:8000/test2");
    assertEquals("Get a wrong endpoint key.",uri1,endpoint1.getEndpointKey());
    assertEquals("Get a wrong endpoint key.",uri2,endpoint2.getEndpointKey());
  }
  @Test public void testCxfBusConfiguration() throws Exception {
    CamelContext camelContext=ctx.getBean("camel",CamelContext.class);
    ProducerTemplate template=camelContext.createProducerTemplate();
    Exchange reply=template.request("cxf:bean:serviceEndpoint",new Processor(){
      public void process(      final Exchange exchange){
        final List<String> params=new ArrayList<>();
        params.add("hello");
        exchange.getIn().setBody(params);
        exchange.getIn().setHeader(CxfConstants.OPERATION_NAME,"echo");
      }
    }
);
    Exception ex=reply.getException();
    assertTrue("Should get the fault here",ex instanceof org.apache.cxf.interceptor.Fault || ex instanceof HTTPException);
  }
  @Test public void testCxfBeanWithCamelPropertiesHolder() throws Exception {
    CamelContext camelContext=ctx.getBean("camel",CamelContext.class);
    CxfEndpoint testEndpoint=camelContext.getEndpoint("cxf:bean:testEndpoint",CxfEndpoint.class);
    QName endpointName=QName.valueOf("{http://org.apache.camel.component.cxf}myEndpoint");
    QName serviceName=QName.valueOf("{http://org.apache.camel.component.cxf}myService");
    assertEquals("Got a wrong address","http://localhost:9000/testEndpoint",testEndpoint.getAddress());
    assertEquals("Got a wrong bindingId","http://schemas.xmlsoap.org/wsdl/soap12/",testEndpoint.getBindingId());
    assertEquals("Got a wrong transportId","http://cxf.apache.org/transports/http",testEndpoint.getTransportId());
    assertEquals("Got a wrong endpointName",endpointName,testEndpoint.getPortName());
    assertEquals("Got a wrong WsdlURL","wsdl/test.wsdl",testEndpoint.getWsdlURL());
    assertEquals("Got a wrong serviceName",serviceName,testEndpoint.getServiceName());
  }
}
