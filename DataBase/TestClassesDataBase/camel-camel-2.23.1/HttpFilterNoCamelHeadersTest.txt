/** 
 * @version 
 */
public class HttpFilterNoCamelHeadersTest extends BaseJettyTest {
  @Test public void testFilterCamelHeaders() throws Exception {
    getMockEndpoint("mock:input").expectedMessageCount(1);
    getMockEndpoint("mock:input").message(0).header("bar").isEqualTo(123);
    getMockEndpoint("mock:input").message(0).header(Exchange.FILE_NAME).isNull();
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:result").message(0).header("bar").isEqualTo(123);
    getMockEndpoint("mock:result").message(0).header(Exchange.FILE_NAME).isEqualTo("test.txt");
    getMockEndpoint("mock:result").message(0).header("CamelDummy").isNull();
    Exchange out=template.request("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("World");
        exchange.getIn().setHeader("bar",123);
      }
    }
);
    assertNotNull(out);
    assertEquals("Bye World",out.getOut().getBody(String.class));
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").setHeader(Exchange.FILE_NAME,constant("test.txt")).to("jetty:http://localhost:{{port}}/test/filter").to("mock:result");
        from("jetty:http://localhost:{{port}}/test/filter").to("mock:input").setHeader("CamelDummy",constant("dummy")).transform(simple("Bye ${body}"));
      }
    }
;
  }
}
