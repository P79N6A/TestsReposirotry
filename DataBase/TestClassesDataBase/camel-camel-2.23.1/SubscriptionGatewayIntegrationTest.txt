public class SubscriptionGatewayIntegrationTest extends AbstractBraintreeTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(SubscriptionGatewayIntegrationTest.class);
  private static final String PATH_PREFIX=BraintreeApiCollection.getCollection().getApiName(SubscriptionGatewayApiMethod.class).getName();
  @Ignore @Test public void testCancel() throws Exception {
    final com.braintreegateway.Result result=requestBody("direct://CANCEL",null);
    assertNotNull("cancel result",result);
    LOG.debug("cancel: " + result);
  }
  @Ignore @Test public void testCreate() throws Exception {
    final com.braintreegateway.Result result=requestBody("direct://CREATE",null);
    assertNotNull("create result",result);
    LOG.debug("create: " + result);
  }
  @Ignore @Test public void testDelete() throws Exception {
    final Map<String,Object> headers=new HashMap<>();
    headers.put("CamelBraintree.customerId",null);
    headers.put("CamelBraintree.id",null);
    final com.braintreegateway.Result result=requestBodyAndHeaders("direct://DELETE",null,headers);
    assertNotNull("delete result",result);
    LOG.debug("delete: " + result);
  }
  @Ignore @Test public void testFind() throws Exception {
    final com.braintreegateway.Subscription result=requestBody("direct://FIND",null);
    assertNotNull("find result",result);
    LOG.debug("find: " + result);
  }
  @Ignore @Test public void testRetryCharge() throws Exception {
    final com.braintreegateway.Result result=requestBody("direct://RETRYCHARGE",null);
    assertNotNull("retryCharge result",result);
    LOG.debug("retryCharge: " + result);
  }
  @Ignore @Test public void testRetryChargeWithAmount() throws Exception {
    final Map<String,Object> headers=new HashMap<>();
    headers.put("CamelBraintree.subscriptionId",null);
    headers.put("CamelBraintree.amount",null);
    final com.braintreegateway.Result result=requestBodyAndHeaders("direct://RETRYCHARGE_1",null,headers);
    assertNotNull("retryCharge result",result);
    LOG.debug("retryCharge: " + result);
  }
  @Ignore @Test public void testSearch() throws Exception {
    final com.braintreegateway.ResourceCollection result=requestBody("direct://SEARCH",null);
    assertNotNull("search result",result);
    LOG.debug("search: " + result);
  }
  @Ignore @Test public void testUpdate() throws Exception {
    final Map<String,Object> headers=new HashMap<>();
    headers.put("CamelBraintree.id",null);
    headers.put("CamelBraintree.request",null);
    final com.braintreegateway.Result result=requestBodyAndHeaders("direct://UPDATE",null,headers);
    assertNotNull("update result",result);
    LOG.debug("update: " + result);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://CANCEL").to("braintree://" + PATH_PREFIX + "/cancel?inBody=id");
        from("direct://CREATE").to("braintree://" + PATH_PREFIX + "/create?inBody=request");
        from("direct://DELETE").to("braintree://" + PATH_PREFIX + "/delete");
        from("direct://FIND").to("braintree://" + PATH_PREFIX + "/find?inBody=id");
        from("direct://RETRYCHARGE").to("braintree://" + PATH_PREFIX + "/retryCharge?inBody=subscriptionId");
        from("direct://RETRYCHARGE_1").to("braintree://" + PATH_PREFIX + "/retryCharge");
        from("direct://SEARCH").to("braintree://" + PATH_PREFIX + "/search?inBody=searchRequest");
        from("direct://UPDATE").to("braintree://" + PATH_PREFIX + "/update");
      }
    }
;
  }
}
