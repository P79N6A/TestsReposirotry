/** 
 */
public class FromFileToHdfsTest extends HdfsTestSupport {
  private static final Path TEMP_DIR=new Path(new File("target/outbox/").getAbsolutePath());
  @Before public void setUp() throws Exception {
    if (!canTest()) {
      return;
    }
    deleteDirectory("target/inbox");
    deleteDirectory("target/outbox");
    super.setUp();
  }
  @Override @After public void tearDown() throws Exception {
    if (!canTest()) {
      return;
    }
    super.tearDown();
    Configuration conf=new Configuration();
    Path dir=new Path("target/outbox");
    FileSystem fs=FileSystem.get(dir.toUri(),conf);
    fs.delete(dir,true);
  }
  @Test public void testFileToHdfs() throws Exception {
    if (!canTest()) {
      return;
    }
    NotifyBuilder notify=new NotifyBuilder(context).whenDone(1).create();
    template.sendBodyAndHeader("file:target/inbox","Hello World",Exchange.FILE_NAME,"hello.txt");
    notify.matchesMockWaitTime();
    File delete=new File("target/inbox/hello.txt");
    assertTrue("File should be deleted " + delete,!delete.exists());
    File create=new File(TEMP_DIR + "/output.txt");
    assertTrue("File should be created " + create,create.exists());
  }
  @Test public void testTwoFilesToHdfs() throws Exception {
    if (!canTest()) {
      return;
    }
    NotifyBuilder notify=new NotifyBuilder(context).whenDone(2).create();
    template.sendBodyAndHeader("file:target/inbox","Hello World",Exchange.FILE_NAME,"hello.txt");
    template.sendBodyAndHeader("file:target/inbox","Bye World",Exchange.FILE_NAME,"bye.txt");
    notify.matchesMockWaitTime();
    File delete=new File("target/inbox/hello.txt");
    assertTrue("File should be deleted " + delete,!delete.exists());
    delete=new File("target/inbox/bye.txt");
    assertTrue("File should be deleted " + delete,!delete.exists());
    File create=new File(TEMP_DIR + "/output.txt");
    assertTrue("File should be created " + create,create.exists());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/inbox?delete=true").to("hdfs:localhost/" + TEMP_DIR.toUri() + "/output.txt?fileSystemType=LOCAL");
      }
    }
;
  }
}
