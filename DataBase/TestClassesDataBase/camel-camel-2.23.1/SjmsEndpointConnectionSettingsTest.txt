public class SjmsEndpointConnectionSettingsTest extends CamelTestSupport {
  private final ActiveMQConnectionFactory connectionFactory=new ActiveMQConnectionFactory("vm://broker?broker.persistent=false&broker.useJmx=false");
  private final ConnectionResource connectionResource=new ConnectionFactoryResource(2,connectionFactory);
  @Test public void testConnectionFactory(){
    Endpoint endpoint=context.getEndpoint("sjms:queue:test?connectionFactory=activemq");
    assertNotNull(endpoint);
    assertTrue(endpoint instanceof SjmsEndpoint);
    SjmsEndpoint qe=(SjmsEndpoint)endpoint;
    assertEquals(connectionFactory,qe.getConnectionFactory());
  }
  @Test public void testConnectionResource(){
    Endpoint endpoint=context.getEndpoint("sjms:queue:test?connectionResource=connresource");
    assertNotNull(endpoint);
    assertTrue(endpoint instanceof SjmsEndpoint);
    SjmsEndpoint qe=(SjmsEndpoint)endpoint;
    assertEquals(connectionResource,qe.getConnectionResource());
  }
  @Test public void testConnectionCount(){
    Random random=new Random();
    int poolSize=random.nextInt(100);
    Endpoint endpoint=context.getEndpoint("sjms:queue:test?connectionCount=" + poolSize);
    assertNotNull(endpoint);
    assertTrue(endpoint instanceof SjmsEndpoint);
    SjmsEndpoint qe=(SjmsEndpoint)endpoint;
    assertEquals(poolSize,qe.getConnectionCount());
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    SimpleRegistry registry=new SimpleRegistry();
    registry.put("activemq",connectionFactory);
    registry.put("connresource",connectionResource);
    return new DefaultCamelContext(registry);
  }
}
