/** 
 * @version 
 */
public class AdviceWithRouteIdTest extends AdviceWithTest {
  @Test public void testAdvised() throws Exception {
    context.getRouteDefinition("myRoute").adviceWith(context,new RouteBuilder(){
      @Override public void configure() throws Exception {
        interceptSendToEndpoint("mock:foo").skipSendToOriginalEndpoint().to("log:foo").to("mock:advised");
      }
    }
);
    getMockEndpoint("mock:foo").expectedMessageCount(0);
    getMockEndpoint("mock:advised").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("myRoute").to("mock:foo").to("mock:result");
        from("direct:bar").to("mock:bar");
      }
    }
;
  }
}
