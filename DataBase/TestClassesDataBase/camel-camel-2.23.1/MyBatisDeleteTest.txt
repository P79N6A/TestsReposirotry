public class MyBatisDeleteTest extends MyBatisTestSupport {
  @Test public void testDelete() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start",456);
    assertMockEndpointsSatisfied();
    Integer rows=template.requestBody("mybatis:count?statementType=SelectOne",null,Integer.class);
    assertEquals("There should be 1 rows",1,rows.intValue());
    template.sendBody("direct:start",123);
    rows=template.requestBody("mybatis:count?statementType=SelectOne",null,Integer.class);
    assertEquals("There should be 0 rows",0,rows.intValue());
  }
  @Test public void testDeleteNotFound() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start",999);
    assertMockEndpointsSatisfied();
    Integer rows=template.requestBody("mybatis:count?statementType=SelectOne",null,Integer.class);
    assertEquals("There should be 2 rows",2,rows.intValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mybatis:deleteAccountById?statementType=Delete").to("mock:result");
      }
    }
;
  }
}
