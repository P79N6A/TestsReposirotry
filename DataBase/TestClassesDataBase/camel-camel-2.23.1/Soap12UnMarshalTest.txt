/** 
 * Checks that a static soap request is unmarshalled to the correct java objects
 */
public class Soap12UnMarshalTest extends CamelTestSupport {
  private static final String SERVICE_PACKAGE=GetCustomersByName.class.getPackage().getName();
  @EndpointInject(uri="mock:result") protected MockEndpoint resultEndpoint;
  @Produce(uri="direct:start") protected ProducerTemplate producer;
  @Test public void testUnMarshalSoap() throws IOException, InterruptedException {
    resultEndpoint.expectedMessageCount(1);
    InputStream in=this.getClass().getResourceAsStream("request.xml");
    producer.sendBody(in);
    resultEndpoint.assertIsSatisfied();
    Exchange exchange=resultEndpoint.getExchanges().get(0);
    Object body=exchange.getIn().getBody();
    assertEquals(GetCustomersByName.class,body.getClass());
    GetCustomersByName request=(GetCustomersByName)body;
    assertEquals("Smith",request.getName());
  }
  @Test public void testUnMarshalSoapFaultWithoutDetail() throws IOException, InterruptedException {
    try {
      InputStream in=this.getClass().getResourceAsStream("faultWithoutDetail.xml");
      producer.sendBody(in);
      fail("Should have thrown an Exception.");
    }
 catch (    Exception e) {
      assertEquals(SOAPFaultException.class,e.getCause().getClass());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").unmarshal().soapjaxb12(SERVICE_PACKAGE).to("mock:result");
      }
    }
;
  }
}
