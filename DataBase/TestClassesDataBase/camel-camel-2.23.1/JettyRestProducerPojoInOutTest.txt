public class JettyRestProducerPojoInOutTest extends BaseJettyTest {
  @Test public void testJettyEmptyBody() throws Exception {
    String out=fluentTemplate.to("rest:get:users/lives").withHeader(Exchange.CONTENT_TYPE,"application/json").request(String.class);
    assertNotNull(out);
    assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}",out);
  }
  @Test public void testJettyJSonBody() throws Exception {
    String body="{\"id\": 123, \"name\": \"Donald Duck\"}";
    String out=fluentTemplate.to("rest:post:users/lives").withHeader(Exchange.CONTENT_TYPE,"application/json").withBody(body).request(String.class);
    assertNotNull(out);
    assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}",out);
  }
  @Test public void testJettyPojoIn() throws Exception {
    UserPojo user=new UserPojo();
    user.setId(123);
    user.setName("Donald Duck");
    String out=fluentTemplate.to("rest:post:users/lives").withHeader(Exchange.CONTENT_TYPE,"application/json").withBody(user).request(String.class);
    assertNotNull(out);
    assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}",out);
  }
  @Test public void testJettyPojoInOut() throws Exception {
    UserPojo user=new UserPojo();
    user.setId(123);
    user.setName("Donald Duck");
    CountryPojo pojo=fluentTemplate.to("rest:post:users/lives?outType=org.apache.camel.component.jetty.rest.CountryPojo").withHeader(Exchange.CONTENT_TYPE,"application/json").withBody(user).request(CountryPojo.class);
    assertNotNull(pojo);
    assertEquals("EN",pojo.getIso());
    assertEquals("England",pojo.getCountry());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("jetty").host("localhost").port(getPort()).bindingMode(RestBindingMode.auto);
        rest("/users/").get("lives").to("direct:start").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(),"livesWhere");
        CountryPojo country=new CountryPojo();
        country.setIso("EN");
        country.setCountry("England");
        from("direct:start").transform().constant(country);
      }
    }
;
  }
}
