/** 
 * @version 
 */
public class NoErrorHandlerTest extends ContextTestSupport {
  private static int counter;
  private static boolean jmx=true;
  @Override @Before public void setUp() throws Exception {
    counter=0;
    if (jmx) {
      enableJMX();
      jmx=false;
    }
 else {
      disableJMX();
    }
    super.setUp();
  }
  @Test public void testNoErrorHandler() throws Exception {
    doTest();
  }
  @Test public void testNoErrorHandlerJMXDisabled() throws Exception {
    doTest();
  }
  private void doTest() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Goodday World");
    try {
      template.sendBody("direct:start","Hello World");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
    }
    try {
      template.sendBody("direct:start","Bye World");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
    }
    template.sendBody("direct:start","Goodday World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(noErrorHandler());
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            if (++counter < 3) {
              throw new IllegalArgumentException("Forced by unit test");
            }
          }
        }
).to("mock:result");
      }
    }
;
  }
}
