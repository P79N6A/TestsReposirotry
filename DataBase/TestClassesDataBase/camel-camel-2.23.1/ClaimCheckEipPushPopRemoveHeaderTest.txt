public class ClaimCheckEipPushPopRemoveHeaderTest extends ContextTestSupport {
  @Test public void testPushPopBodyRemoveHeader() throws Exception {
    getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:a").expectedHeaderReceived("foo",123);
    getMockEndpoint("mock:a").expectedHeaderReceived("bar","Moes");
    getMockEndpoint("mock:b").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:b").expectedHeaderReceived("foo",456);
    getMockEndpoint("mock:b").expectedHeaderReceived("bar","Jacks");
    getMockEndpoint("mock:c").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:c").expectedHeaderReceived("foo",123);
    getMockEndpoint("mock:c").message(0).header("bar").isNull();
    template.sendBodyAndHeader("direct:start","Hello World","foo",123);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").setHeader("bar",constant("Moes")).to("mock:a").claimCheck(ClaimCheckOperation.Push).transform().constant("Bye World").setHeader("foo",constant(456)).setHeader("bar",constant("Jacks")).to("mock:b").claimCheck(ClaimCheckOperation.Pop,null,"-body,--header:bar").to("mock:c");
      }
    }
;
  }
}
