public class FopComponentTest extends CamelTestSupport {
  @EndpointInject(uri="mock:result") protected MockEndpoint resultEndpoint;
  @Produce(uri="direct:start") protected ProducerTemplate template;
  private boolean canTest=true;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/data");
    try {
      super.setUp();
    }
 catch (    Throwable e) {
      canTest=false;
    }
  }
  @Test public void createPdfUsingXmlDataAndXsltTransformation() throws Exception {
    if (!canTest) {
      return;
    }
    resultEndpoint.expectedMessageCount(1);
    FileInputStream inputStream=new FileInputStream("src/test/data/xml/data.xml");
    template.sendBody(inputStream);
    resultEndpoint.assertIsSatisfied();
    PDDocument document=PDDocument.load(new File("target/data/result.pdf"));
    String pdfText=FopHelper.extractTextFrom(document);
    assertTrue(pdfText.contains("Project"));
    assertTrue(pdfText.contains("John Doe"));
    Exchange exchange=resultEndpoint.getReceivedExchanges().get(0);
    assertEquals("Header value is lost!","bar",exchange.getIn().getHeader("foo"));
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("xslt:xslt/template.xsl").setHeader("foo",constant("bar")).to("fop:pdf").setHeader(Exchange.FILE_NAME,constant("result.pdf")).to("file:target/data").to("mock:result");
      }
    }
;
  }
}
