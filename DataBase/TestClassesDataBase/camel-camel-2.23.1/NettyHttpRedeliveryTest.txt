public class NettyHttpRedeliveryTest extends BaseNettyTest {
  private final CountDownLatch latch=new CountDownLatch(5);
  @Test public void testHttpRedelivery() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    assertTrue(latch.await(5,TimeUnit.SECONDS));
    context.startRoute("bar");
    assertMockEndpointsSatisfied();
    context.stopRoute("foo");
    assertEquals(0,context.getInflightRepository().size());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Exception.class).maximumRedeliveries(50).redeliveryDelay(100).onExceptionOccurred(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            latch.countDown();
            assertEquals(1,context.getInflightRepository().size());
          }
        }
);
        from("timer:foo").routeId("foo").to("netty4-http:http://0.0.0.0:{{port}}/bar?keepAlive=false&disconnect=true").to("mock:result");
        from("netty4-http:http://0.0.0.0:{{port}}/bar").routeId("bar").autoStartup(false).setBody().constant("Bye World");
      }
    }
;
  }
}
