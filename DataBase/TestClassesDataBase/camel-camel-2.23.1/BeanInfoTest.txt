/** 
 * @version 
 */
public class BeanInfoTest extends Assert {
  protected DefaultCamelContext camelContext=new DefaultCamelContext();
  protected Exchange exchange=new DefaultExchange(camelContext);
  protected DefaultParameterMappingStrategy strategy=new DefaultParameterMappingStrategy();
  protected ExampleBean bean=new ExampleBean();
  protected BeanInfo info;
  @Test public void testFindsSingleMethodMatchingBody() throws Throwable {
    MethodInvocation invocation=info.createInvocation(bean,exchange);
    assertNotNull("Should have found a method invocation!",invocation);
    AtomicBoolean sync=new AtomicBoolean(true);
    invocation.proceed(new AsyncCallback(){
      public void done(      boolean doneSync){
      }
    }
);
    assertEquals(true,sync.get());
    assertEquals("Hello James!",exchange.getIn().getBody());
  }
  @Test public void testBeanProcessor() throws Exception {
    BeanProcessor processor=new BeanProcessor(bean,info);
    processor.process(exchange);
    assertEquals("Hello James!",exchange.getIn().getBody());
  }
  @Before public void setUp() throws Exception {
    exchange.getIn().setBody("James");
    info=new BeanInfo(camelContext,bean.getClass(),strategy);
  }
}
