public class Task implements Callable<Task> {
  private AtomicInteger counter;
  private String fromUri;
  private volatile boolean ok=true;
  private volatile String message="";
  public Task(  AtomicInteger counter,  String fromUri){
    this.counter=counter;
    this.fromUri=fromUri;
  }
  public Task call() throws Exception {
    for (int i=0; i < maxCalls; i++) {
      int callId=counter.incrementAndGet();
      Object reply="";
      try {
        reply=template.requestBody(fromUri,request + "-" + callId);
      }
 catch (      RuntimeCamelException e) {
      }
      if (!reply.equals(expectedReply + "-" + callId)) {
        ok=false;
        message="Unexpected reply. Expected: '" + expectedReply + "-"+ callId+ "'; Received: '"+ reply+ "'";
      }
    }
    return this;
  }
  public void assertSuccess(){
    assertTrue(message,ok);
  }
}
