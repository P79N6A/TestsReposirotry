public class NettyHttpMapHeadersFalseTest extends BaseNettyTest {
  @Test public void testHttpHeaderCase() throws Exception {
    HttpClient client=new HttpClient();
    HttpMethod method=new PostMethod("http://localhost:" + getPort() + "/myapp/mytest");
    method.setRequestHeader("clientHeader","fooBAR");
    method.setRequestHeader("OTHER","123");
    method.setRequestHeader("beer","Carlsberg");
    client.executeMethod(method);
    assertEquals("Bye World",method.getResponseBodyAsString());
    assertEquals("aBc123",method.getResponseHeader("MyCaseHeader").getValue());
    assertEquals("456DEf",method.getResponseHeader("otherCaseHeader").getValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("netty4-http:http://localhost:{{port}}/myapp/mytest?mapHeaders=false").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertNull(exchange.getIn().getHeader("clientHeader"));
            assertNull(exchange.getIn().getHeader("OTHER"));
            assertNull(exchange.getIn().getHeader("beer"));
            assertEquals("fooBAR",exchange.getIn(NettyHttpMessage.class).getHttpRequest().headers().get("clientHeader"));
            assertEquals("123",exchange.getIn(NettyHttpMessage.class).getHttpRequest().headers().get("OTHER"));
            assertEquals("Carlsberg",exchange.getIn(NettyHttpMessage.class).getHttpRequest().headers().get("beer"));
            exchange.getOut().setBody("Bye World");
            exchange.getOut().setHeader("MyCaseHeader","aBc123");
            exchange.getOut().setHeader("otherCaseHeader","456DEf");
          }
        }
);
      }
    }
;
  }
}
