/** 
 * CAMEL-4795, there should be no exceptions in the logs (before the fix there was a NPE)
 * @version
 */
public class JettyAsyncThrottleTest extends BaseJettyTest {
  @Test public void testJettyAsync() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(5);
    template.asyncRequestBody("jetty:http://localhost:{{port}}/myservice",null);
    template.asyncRequestBody("jetty:http://localhost:{{port}}/myservice",null);
    template.asyncRequestBody("jetty:http://localhost:{{port}}/myservice",null);
    template.asyncRequestBody("jetty:http://localhost:{{port}}/myservice",null);
    template.asyncRequestBody("jetty:http://localhost:{{port}}/myservice",null);
    assertMockEndpointsSatisfied();
    for (int i=0; i < 5; i++) {
      Exchange exchange=getMockEndpoint("mock:result").getReceivedExchanges().get(i);
      log.info("Reply " + exchange);
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        int port2=getNextPort();
        int port3=getNextPort();
        from("jetty:http://localhost:{{port}}/myservice").removeHeaders("*").throttle(2).asyncDelayed().loadBalance().failover().to("jetty:http://localhost:" + port2 + "/foo").to("jetty:http://localhost:" + port3 + "/bar").end().to("mock:result");
        from("jetty:http://localhost:" + port2 + "/foo").transform().constant("foo").to("mock:foo");
        from("jetty:http://localhost:" + port3 + "/bar").transform().constant("bar").to("mock:bar");
      }
    }
;
  }
}
