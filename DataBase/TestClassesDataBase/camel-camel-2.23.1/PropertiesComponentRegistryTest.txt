/** 
 * @version 
 */
public class PropertiesComponentRegistryTest extends ContextTestSupport {
  private MyFooBean foo;
  private MyDummyBean bar;
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    foo=new MyFooBean();
    bar=new MyDummyBean();
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",foo);
    jndi.bind("bar",bar);
    return jndi;
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    PropertiesComponent pc=new PropertiesComponent();
    pc.setLocation("classpath:org/apache/camel/component/properties/cheese.properties");
    context.addComponent("properties",pc);
    return context;
  }
  @Test public void testPropertiesComponentRegistryPlain() throws Exception {
    context.start();
    assertSame(foo,context.getRegistry().lookupByName("foo"));
    assertSame(bar,context.getRegistry().lookupByName("bar"));
    assertNull(context.getRegistry().lookupByName("unknown"));
  }
  @Test public void testPropertiesComponentRegistryLookupName() throws Exception {
    context.start();
    assertSame(foo,context.getRegistry().lookupByName("{{bean.foo}}"));
    assertSame(bar,context.getRegistry().lookupByName("{{bean.bar}}"));
    try {
      context.getRegistry().lookupByName("{{bean.unknown}}");
      fail("Should have thrown exception");
    }
 catch (    RuntimeCamelException e) {
      IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Property with key [bean.unknown] not found in properties from text: {{bean.unknown}}",cause.getMessage());
    }
  }
  @Test public void testPropertiesComponentRegistryLookupNameAndType() throws Exception {
    context.start();
    assertSame(foo,context.getRegistry().lookupByNameAndType("{{bean.foo}}",MyFooBean.class));
    assertSame(bar,context.getRegistry().lookupByNameAndType("{{bean.bar}}",MyDummyBean.class));
    try {
      context.getRegistry().lookupByNameAndType("{{bean.unknown}}",MyDummyBean.class);
      fail("Should have thrown exception");
    }
 catch (    RuntimeCamelException e) {
      IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Property with key [bean.unknown] not found in properties from text: {{bean.unknown}}",cause.getMessage());
    }
  }
}
