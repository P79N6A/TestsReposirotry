public class ClaimCheckTest extends ContextTestSupport {
  public static Map<String,Object> dataStore=new HashMap<>();
  @Test public void testClaimCheck() throws Exception {
    String body="<order custId=\"123\"><lotsOfContent/></order>";
    MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
    resultEndpoint.expectedMessageCount(1);
    resultEndpoint.message(0).body().isEqualTo(body);
    MockEndpoint testCheckpointEndpoint=getMockEndpoint("mock:testCheckpoint");
    testCheckpointEndpoint.expectedMessageCount(1);
    testCheckpointEndpoint.expectedHeaderReceived("claimCheck","123");
    testCheckpointEndpoint.message(0).body().isNull();
    template.sendBody("direct:start",body);
    assertMockEndpointsSatisfied();
  }
  protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("checkLuggage",new CheckLuggageBean());
    jndi.bind("dataEnricher",new DataEnricherBean());
    return jndi;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("bean:checkLuggage","mock:testCheckpoint","bean:dataEnricher","mock:result");
      }
    }
;
  }
public static final class CheckLuggageBean {
    public void checkLuggage(    Exchange exchange,    @Body String body,    @XPath("/order/@custId") String custId){
      dataStore.put(custId,body);
      exchange.getIn().setHeader("claimCheck",custId);
      exchange.getIn().setBody(null);
    }
  }
public static final class DataEnricherBean {
    public void addDataBackIn(    Exchange exchange,    @Header("claimCheck") String claimCheck){
      exchange.getIn().setBody(dataStore.get(claimCheck));
      dataStore.remove(claimCheck);
      exchange.getIn().removeHeader("claimCheck");
    }
  }
}
