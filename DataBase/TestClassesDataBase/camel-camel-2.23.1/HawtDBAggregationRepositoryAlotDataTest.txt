public class HawtDBAggregationRepositoryAlotDataTest extends CamelTestSupport {
  private HawtDBFile hawtDBFile;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    deleteDirectory("target/data");
    File file=new File("target/data/hawtdb.dat");
    hawtDBFile=new HawtDBFile();
    hawtDBFile.setFile(file);
    hawtDBFile.start();
  }
  @Override @After public void tearDown() throws Exception {
    hawtDBFile.stop();
    super.tearDown();
  }
  @Test public void testWithAlotOfDataSameKey(){
    HawtDBAggregationRepository repo=new HawtDBAggregationRepository();
    repo.setHawtDBFile(hawtDBFile);
    repo.setRepositoryName("repo1");
    for (int i=0; i < 100; i++) {
      Exchange exchange1=new DefaultExchange(context);
      exchange1.getIn().setBody("counter:" + i);
      repo.add(context,"foo",exchange1);
    }
    Exchange actual=repo.get(context,"foo");
    assertEquals("counter:99",actual.getIn().getBody());
  }
  @Test public void testWithAlotOfDataTwoKesy(){
    HawtDBAggregationRepository repo=new HawtDBAggregationRepository();
    repo.setHawtDBFile(hawtDBFile);
    repo.setRepositoryName("repo1");
    for (int i=0; i < 100; i++) {
      Exchange exchange1=new DefaultExchange(context);
      exchange1.getIn().setBody("counter:" + i);
      String key=i % 2 == 0 ? "foo" : "bar";
      repo.add(context,key,exchange1);
    }
    Exchange actual=repo.get(context,"foo");
    assertEquals("counter:98",actual.getIn().getBody());
    actual=repo.get(context,"bar");
    assertEquals("counter:99",actual.getIn().getBody());
  }
  @Test public void testWithAlotOfDataWithDifferentKesy(){
    HawtDBAggregationRepository repo=new HawtDBAggregationRepository();
    repo.setHawtDBFile(hawtDBFile);
    repo.setRepositoryName("repo1");
    for (int i=0; i < 100; i++) {
      Exchange exchange1=new DefaultExchange(context);
      exchange1.getIn().setBody("counter:" + i);
      String key="key" + i;
      repo.add(context,key,exchange1);
    }
    for (int i=0; i < 100; i++) {
      Exchange actual=repo.get(context,"key" + i);
      assertEquals("counter:" + i,actual.getIn().getBody());
    }
  }
}
