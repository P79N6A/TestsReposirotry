/** 
 * Test class for  {@link org.apache.camel.component.fhir.api.FhirValidate} APIs.The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class FhirValidateIT extends AbstractFhirTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(FhirValidateIT.class);
  private static final String PATH_PREFIX=FhirApiCollection.getCollection().getApiName(FhirValidateApiMethod.class).getName();
  @Test public void testResource() throws Exception {
    Patient bobbyHebb=new Patient().addName(new HumanName().addGiven("Bobby").setFamily("Hebb"));
    MethodOutcome result=requestBody("direct://RESOURCE",bobbyHebb);
    assertNotNull("resource result",result);
    LOG.debug("resource: " + result);
    assertNotNull(result.getOperationOutcome());
    assertTrue(((OperationOutcome)result.getOperationOutcome()).getText().getDivAsString().contains("No issues detected during validation"));
  }
  @Test public void testResourceAsString() throws Exception {
    Patient bobbyHebb=new Patient().addName(new HumanName().addGiven("Bobby").setFamily("Hebb"));
    MethodOutcome result=requestBody("direct://RESOURCE_AS_STRING",this.fhirContext.newXmlParser().encodeResourceToString(bobbyHebb));
    assertNotNull("resource result",result);
    LOG.debug("resource: " + result);
    assertNotNull(result.getOperationOutcome());
    assertTrue(((OperationOutcome)result.getOperationOutcome()).getText().getDivAsString().contains("No issues detected during validation"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://RESOURCE").to("fhir://" + PATH_PREFIX + "/resource?inBody=resource");
        from("direct://RESOURCE_AS_STRING").to("fhir://" + PATH_PREFIX + "/resource?inBody=resourceAsString");
      }
    }
;
  }
}
