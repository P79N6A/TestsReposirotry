/** 
 * Lets test that a number of headers MQSeries doesn't like to be sent are excluded when forwarding a JMS message from one destination to another
 * @version 
 */
public class LarsIssueTest extends CamelTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(LarsIssueTest.class);
  @Test public void testSendSomeMessages() throws Exception {
    MockEndpoint endpoint=getMockEndpoint("mock:results");
    String body1="Hello world!";
    String body2="Goodbye world!";
    endpoint.expectedBodiesReceived(body1,body2);
    template.sendBody("activemq:queue:foo.bar",body1);
    template.sendBody("activemq:queue:foo.bar",body2);
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        Processor myProcessor=new Processor(){
          public void process(          Exchange e) throws Exception {
            LOG.info(">>>> Received exchange: " + e);
          }
        }
;
        from("activemq:queue:foo.bar?cacheLevelName=CACHE_CONSUMER").process(myProcessor).to("mock:results");
      }
    }
;
  }
}
