/** 
 * Unit test to test that route id of the failed route is available to the end user.
 */
public class DefaultErrorHandlerFailureRouteIdTest extends ContextTestSupport {
  @Test public void testFailureRouteId() throws Exception {
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    Exchange out=template.send("direct:foo",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
      }
    }
);
    assertNotNull(out);
    assertMockEndpointsSatisfied();
    assertTrue(out.isFailed());
    assertNotNull(out.getException(IllegalArgumentException.class));
    assertEquals("bar",out.getProperty(Exchange.FAILURE_ROUTE_ID));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").routeId("foo").to("mock:foo").to("direct:bar").to("mock:result");
        from("direct:bar").routeId("bar").to("mock:bar").throwException(new IllegalArgumentException("Forced"));
      }
    }
;
  }
}
