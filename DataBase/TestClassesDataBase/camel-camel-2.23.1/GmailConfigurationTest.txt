/** 
 * Test class for  {@link GoogleMailConfiguration}.
 */
public class GmailConfigurationTest extends AbstractGoogleMailTestSupport {
  public static final String CURRENT_USERID="me";
  private static final Logger LOG=LoggerFactory.getLogger(GmailConfigurationTest.class);
  private static final String PATH_PREFIX=GoogleMailApiCollection.getCollection().getApiName(GmailUsersMessagesApiMethod.class).getName();
  private static final String TEST_URI="google-mail://" + PATH_PREFIX + "/send?clientId=a&clientSecret=b&applicationName=c&accessToken=d&refreshToken=e";
  @Override protected CamelContext createCamelContext() throws Exception {
    final CamelContext context=new DefaultCamelContext(createRegistry());
    final GoogleMailComponent component=new GoogleMailComponent(context);
    context.addComponent("google-mail",component);
    return context;
  }
  @Test public void testConfiguration() throws Exception {
    GoogleMailEndpoint endpoint=getMandatoryEndpoint(TEST_URI,GoogleMailEndpoint.class);
    GoogleMailConfiguration configuration=endpoint.getConfiguration();
    assertNotNull(configuration);
    assertEquals("a",configuration.getClientId());
    assertEquals("b",configuration.getClientSecret());
    assertEquals("c",configuration.getApplicationName());
    assertEquals("d",configuration.getAccessToken());
    assertEquals("e",configuration.getRefreshToken());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure(){
        from("direct://SEND").to(TEST_URI);
      }
    }
;
  }
}
