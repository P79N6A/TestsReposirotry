public class MyBatisSelectOneTest extends MyBatisTestSupport {
  @Test public void testSelectOne() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isInstanceOf(Account.class);
    template.sendBody("direct:start",456);
    assertMockEndpointsSatisfied();
    Account account=mock.getReceivedExchanges().get(0).getIn().getBody(Account.class);
    assertEquals("Claus",account.getFirstName());
  }
  @Test public void tesSelectOneNotFound() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isNull();
    template.sendBody("direct:start",999);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mybatis:selectAccountById?statementType=SelectOne").to("mock:result");
      }
    }
;
  }
}
