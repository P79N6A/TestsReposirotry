/** 
 * @version 
 */
public class ManagedDualCamelContextTest extends TestSupport {
  protected CamelContext createCamelContext() throws Exception {
    CamelContext context=new DefaultCamelContext();
    context.addRoutes(createRouteBuilder());
    return context;
  }
  @Test public void testDualCamelContext() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    CamelContext camel1=createCamelContext();
    camel1.start();
    CamelContext camel2=createCamelContext();
    camel2.start();
    assertIsInstanceOf(ManagedManagementStrategy.class,camel1.getManagementStrategy());
    assertIsInstanceOf(ManagedManagementStrategy.class,camel2.getManagementStrategy());
    MBeanServer mbeanServer1=camel1.getManagementStrategy().getManagementAgent().getMBeanServer();
    Set<ObjectName> set=mbeanServer1.queryNames(new ObjectName("*:context=camel-1,type=components,*"),null);
    assertEquals(2,set.size());
    ObjectName on=set.iterator().next();
    assertTrue("Should be registered",mbeanServer1.isRegistered(on));
    String state=(String)mbeanServer1.getAttribute(on,"State");
    assertEquals(ServiceStatus.Started.name(),state);
    String id=(String)mbeanServer1.getAttribute(on,"CamelId");
    assertEquals("camel-1",id);
    MBeanServer mbeanServer2=camel2.getManagementStrategy().getManagementAgent().getMBeanServer();
    set=mbeanServer1.queryNames(new ObjectName("*:context=camel-2,type=components,*"),null);
    assertEquals(2,set.size());
    on=set.iterator().next();
    assertTrue("Should be registered",mbeanServer2.isRegistered(on));
    state=(String)mbeanServer2.getAttribute(on,"State");
    assertEquals(ServiceStatus.Started.name(),state);
    id=(String)mbeanServer2.getAttribute(on,"CamelId");
    assertEquals("camel-2",id);
    camel1.stop();
    camel2.stop();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:result");
      }
    }
;
  }
}
