/** 
 * @version 
 */
public class QuartzTwoCamelContextTest extends Assert {
  private DefaultCamelContext camel1;
  private DefaultCamelContext camel2;
  @Before public void setUp() throws Exception {
    camel1=new DefaultCamelContext();
    camel1.setName("camel-1");
    camel1.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("quartz://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("mock:one");
      }
    }
);
    camel1.start();
    camel2=new DefaultCamelContext();
    camel2.setName("camel-2");
    camel2.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("quartz://myOtherGroup/myOtherTimerName?cron=0/1+*+*+*+*+?").to("mock:two");
      }
    }
);
    camel2.start();
  }
  @After public void tearDown() throws Exception {
    camel1.stop();
    camel2.stop();
  }
  @Test public void testTwoCamelContext() throws Exception {
    MockEndpoint mock1=camel1.getEndpoint("mock:one",MockEndpoint.class);
    mock1.expectedMinimumMessageCount(2);
    MockEndpoint mock2=camel2.getEndpoint("mock:two",MockEndpoint.class);
    mock2.expectedMinimumMessageCount(6);
    mock1.assertIsSatisfied();
    camel1.stop();
    mock2.assertIsSatisfied();
    camel2.stop();
  }
  @Test public void testThirdCamelContext() throws Exception {
    camel1.stop();
    camel2.stop();
    DefaultCamelContext camel3=new DefaultCamelContext();
    camel3.setName("camel-3");
    camel3.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("quartz://myThirdGroup/myThirdTimerName?cron=0/1+*+*+*+*+?").to("mock:three");
      }
    }
);
    camel3.start();
    MockEndpoint mock3=camel3.getEndpoint("mock:three",MockEndpoint.class);
    mock3.expectedMinimumMessageCount(2);
    mock3.assertIsSatisfied();
    camel3.stop();
  }
}
