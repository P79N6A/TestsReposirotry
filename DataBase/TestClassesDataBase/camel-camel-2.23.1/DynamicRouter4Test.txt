public class DynamicRouter4Test extends ContextTestSupport {
  @Test public void testDynamicRouter() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(1);
    getMockEndpoint("mock:c").expectedMessageCount(1);
    template.sendBody("direct:start-1","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start-1").dynamicRouter().exchange(DynamicRouter4Test::slip);
      }
    }
;
  }
  public static String slip(  Exchange exchange){
    String previous=ExchangeHelper.getHeaderOrProperty(exchange,Exchange.SLIP_ENDPOINT,String.class);
    if (previous == null) {
      return "mock:a,mock:b";
    }
 else     if ("mock://b".equals(previous)) {
      return "mock:c";
    }
    return null;
  }
}
