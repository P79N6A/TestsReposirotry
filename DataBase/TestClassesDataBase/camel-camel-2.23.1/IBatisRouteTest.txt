public class IBatisRouteTest extends IBatisTestSupport {
  @Override protected boolean createTestData(){
    return false;
  }
  @Test public void testSendAccountBean() throws Exception {
    MockEndpoint endpoint=getMockEndpoint("mock:results");
    endpoint.expectedMinimumMessageCount(1);
    Account account=new Account();
    account.setId(123);
    account.setFirstName("James");
    account.setLastName("Strachan");
    account.setEmailAddress("TryGuessing@gmail.com");
    template.sendBody("direct:start",account);
    assertMockEndpointsSatisfied();
    List<?> body=template.requestBody("ibatis:selectAllAccounts?statementType=QueryForList",null,List.class);
    assertEquals("Wrong size: " + body,1,body.size());
    Account actual=assertIsInstanceOf(Account.class,body.get(0));
    assertEquals("Account.getFirstName()","James",actual.getFirstName());
    assertEquals("Account.getLastName()","Strachan",actual.getLastName());
    log.info("Found: " + actual);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("timer://pollTheDatabase?delay=2000").to("ibatis:selectAllAccounts?statementType=QueryForList").to("mock:results");
        from("direct:start").to("ibatis:insertAccount?statementType=Insert");
      }
    }
;
  }
}
