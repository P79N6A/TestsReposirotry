/** 
 */
public class FailOverLoadBalancerSetFaultTest extends ContextTestSupport {
  @Test public void testFailOverSetFault() throws Exception {
    getMockEndpoint("mock:failover1").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:failover2").expectedBodiesReceived("Hello World");
    String out=template.requestBody("direct:start","Hello World",String.class);
    assertEquals("Bye Camel",out);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").loadBalance().failover(1,false,false,IOException.class).to("seda:failover1","seda:failover2").end();
        from("seda:failover1").to("mock:failover1").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("Hi Camel");
            exchange.getOut().setFault(true);
            exchange.setException(new IOException("Forced exception for test"));
          }
        }
);
        from("seda:failover2").to("mock:failover2").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("Bye Camel");
          }
        }
);
      }
    }
;
  }
}
