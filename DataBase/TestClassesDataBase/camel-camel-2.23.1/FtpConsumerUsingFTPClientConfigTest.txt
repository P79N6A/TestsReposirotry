/** 
 * Unit test for ftpClientConfig option.
 */
public class FtpConsumerUsingFTPClientConfigTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/clientconfig?password=admin&ftpClientConfig=#myConfig";
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    prepareFtpServer();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myConfig",createConfig());
    return jndi;
  }
  private FTPClientConfig createConfig(){
    FTPClientConfig config=new FTPClientConfig(FTPClientConfig.SYST_UNIX);
    config.setServerTimeZoneId("Europe/Paris");
    return config;
  }
  @Test public void testFTPClientConfig() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("Hello World");
    assertMockEndpointsSatisfied();
  }
  private void prepareFtpServer() throws Exception {
    sendFile(getFtpUrl(),"Hello World","hello.txt");
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(getFtpUrl()).to("mock:result");
      }
    }
;
  }
}
