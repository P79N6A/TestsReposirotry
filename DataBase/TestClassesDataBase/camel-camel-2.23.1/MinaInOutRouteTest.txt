/** 
 * Unit test to verify that MINA can be used with an InOut MEP but still use sync to send and receive data from a remote server.
 */
public class MinaInOutRouteTest extends BaseMinaTest {
  @Test public void testInOutUsingMina() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye Claus");
    mock.expectedHeaderReceived("city","Copenhagen");
    mock.setResultWaitTime(5000);
    Object out=template.requestBodyAndHeader("direct:in","Claus","city","Copenhagen");
    assertMockEndpointsSatisfied();
    assertEquals("Bye Claus",out);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("mina:tcp://localhost:{{port}}?sync=true").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            exchange.getOut().setBody("Bye " + body);
          }
        }
);
        from("direct:in").to("mina:tcp://localhost:{{port}}?sync=true&lazySessionCreation=true").to("mock:result");
      }
    }
;
  }
}
