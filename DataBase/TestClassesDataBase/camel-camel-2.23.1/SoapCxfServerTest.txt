/** 
 * Checks for interoperability between a CXF server that is attached using  the Camel transport for CXF and a dynamic proxy using the SOAP data format
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration public class SoapCxfServerTest extends RouteBuilder {
  @Produce(uri="direct:camelClient") CustomerService customerServiceProxy;
  @Test public void testSuccess() throws NoSuchCustomerException {
    GetCustomersByName request=new GetCustomersByName();
    request.setName("test");
    GetCustomersByNameResponse response=customerServiceProxy.getCustomersByName(request);
    Assert.assertNotNull(response);
    List<Customer> customers=response.getReturn();
    Assert.assertEquals(1,customers.size());
    Assert.assertEquals("test",customers.get(0).getName());
  }
  @Test public void testFault(){
    GetCustomersByName request=new GetCustomersByName();
    request.setName("none");
    try {
      customerServiceProxy.getCustomersByName(request);
      Assert.fail("NoSuchCustomerException expected");
    }
 catch (    NoSuchCustomerException e) {
      NoSuchCustomer info=e.getFaultInfo();
      Assert.assertEquals("none",info.getCustomerId());
    }
  }
  public void configure() throws Exception {
    String jaxbPackage=GetCustomersByName.class.getPackage().getName();
    ElementNameStrategy elNameStrat=new ServiceInterfaceStrategy(CustomerService.class,true);
    SoapJaxbDataFormat soapDataFormat=new SoapJaxbDataFormat(jaxbPackage,elNameStrat);
    from("direct:camelClient").marshal(soapDataFormat).to("direct:cxfEndpoint").unmarshal(soapDataFormat);
  }
}
