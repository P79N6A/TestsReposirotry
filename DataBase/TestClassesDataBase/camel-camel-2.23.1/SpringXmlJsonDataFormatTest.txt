/** 
 * Test the Spring DSL
 */
public class SpringXmlJsonDataFormatTest extends CamelSpringTestSupport {
  @BeforeClass public static void checkXomInClasspath(){
    AbstractJsonTestSupport.checkXomInClasspath();
  }
  @Test public void testMarshalAndUnmarshal() throws Exception {
    InputStream inStream=getClass().getResourceAsStream("testMessage1.xml");
    String in=context.getTypeConverter().convertTo(String.class,inStream);
    MockEndpoint mockJSON=getMockEndpoint("mock:json");
    mockJSON.expectedMessageCount(1);
    mockJSON.message(0).body().isInstanceOf(byte[].class);
    MockEndpoint mockXML=getMockEndpoint("mock:xml");
    mockXML.expectedMessageCount(1);
    mockXML.message(0).body().isInstanceOf(String.class);
    Object json=template.requestBody("direct:marshal",in);
    String jsonString=context.getTypeConverter().convertTo(String.class,json);
    JSONObject obj=(JSONObject)JSONSerializer.toJSON(jsonString);
    assertEquals("JSONObject doesn't contain 7 keys",7,obj.entrySet().size());
    template.sendBody("direct:unmarshal",jsonString);
    mockJSON.assertIsSatisfied();
    mockXML.assertIsSatisfied();
  }
  @Test public void testEmptyBodyToJson() throws Exception {
    MockEndpoint mockJSON=getMockEndpoint("mock:emptyBody2Xml");
    mockJSON.expectedMessageCount(1);
    mockJSON.message(0).body().isInstanceOf(StreamCache.class);
    StreamSource in=context.getTypeConverter().convertTo(StreamSource.class,new ByteArrayInputStream("".getBytes()));
    template.requestBody("direct:emptyBody2Unmarshal",in);
    mockJSON.assertIsSatisfied();
  }
  @Test public void testSomeOptionsToXML() throws Exception {
    InputStream inStream=getClass().getResourceAsStream("testMessage1.json");
    String in=context.getTypeConverter().convertTo(String.class,inStream);
    MockEndpoint mockXML=getMockEndpoint("mock:xmlWithOptions");
    mockXML.expectedMessageCount(1);
    mockXML.message(0).body().isInstanceOf(String.class);
    Object marshalled=template.requestBody("direct:unmarshalWithOptions",in);
    Document document=context.getTypeConverter().convertTo(Document.class,marshalled);
    assertEquals("The XML document doesn't carry newRoot as the root name","newRoot",document.getDocumentElement().getLocalName());
    assertEquals("The number of direct child elements of newRoot with tag d (expandable property) is not 3",3,document.getDocumentElement().getElementsByTagName("d").getLength());
    assertEquals("The number of direct child elements of newRoot with tag e (expandable property) is not 3",3,document.getDocumentElement().getElementsByTagName("e").getLength());
    mockXML.assertIsSatisfied();
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/xmljson/SpringXmlJsonDataFormatTest.xml");
  }
}
