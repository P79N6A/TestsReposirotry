public class MongoDBTailTrackingStrategyTest {
  private static final String INCREASING_FIELD_NAME="ts";
  @Test public void testExtractLastValForLiterals() throws Exception {
    int expected=1483701465;
    DBObject o=mock(DBObject.class);
    when(o.get(INCREASING_FIELD_NAME)).thenReturn(expected);
    Object lastVal=MongoDBTailTrackingEnum.LITERAL.extractLastVal(o,INCREASING_FIELD_NAME);
    assertThat(lastVal,is(expected));
  }
  @Test public void testCreateQueryForLiterals(){
    Integer lastVal=1483701465;
    BasicDBObject basicDBObject=MongoDBTailTrackingEnum.LITERAL.createQuery(lastVal,INCREASING_FIELD_NAME);
    final Object actual=basicDBObject.get(INCREASING_FIELD_NAME);
    assertThat(actual,is(notNullValue()));
    assertThat(actual instanceof BasicDBObject,is(true));
    assertThat(((BasicDBObject)actual).get("$gt"),is(lastVal));
  }
  @Test public void testExtractLastValForTimestamp() throws Exception {
    DBObject o=mock(DBObject.class);
    final int lastVal=1483701465;
    when(o.get(INCREASING_FIELD_NAME)).thenReturn(new BSONTimestamp(lastVal,1));
    Object res=MongoDBTailTrackingEnum.TIMESTAMP.extractLastVal(o,INCREASING_FIELD_NAME);
    assertThat(res,is(lastVal));
  }
  @Test public void testExtracCreateQueryForTimestamp() throws Exception {
    final int lastVal=1483701465;
    BasicDBObject basicDBObject=MongoDBTailTrackingEnum.TIMESTAMP.createQuery(lastVal,INCREASING_FIELD_NAME);
    final Object actual=basicDBObject.get(INCREASING_FIELD_NAME);
    assertThat(actual,is(notNullValue()));
    assertThat(actual instanceof BasicDBObject,is(true));
    assertThat(((BasicDBObject)actual).get("$gt") instanceof BSONTimestamp,is(true));
    BSONTimestamp bsonTimestamp=(BSONTimestamp)((BasicDBObject)actual).get("$gt");
    assertThat(bsonTimestamp.getTime(),is(lastVal));
  }
}
