/** 
 * @version 
 */
public class MinaConverterTest extends Assert {
  @Test public void testToByteArray(){
    byte[] in="Hello World".getBytes();
    ByteBuffer bb=ByteBuffer.wrap(in);
    byte[] out=MinaConverter.toByteArray(bb);
    for (int i=0; i < out.length; i++) {
      assertEquals(in[i],out[i]);
    }
  }
  @Test public void testToString() throws UnsupportedEncodingException {
    String in="Hello World \u4f60\u597d";
    ByteBuffer bb=ByteBuffer.wrap(in.getBytes("UTF-8"));
    Exchange exchange=new DefaultExchange(new DefaultCamelContext());
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    String out=MinaConverter.toString(bb,exchange);
    assertEquals("Hello World \u4f60\u597d",out);
  }
  @Test public void testToStringTwoTimes() throws UnsupportedEncodingException {
    String in="Hello World \u4f60\u597d";
    ByteBuffer bb=ByteBuffer.wrap(in.getBytes("UTF-8"));
    Exchange exchange=new DefaultExchange(new DefaultCamelContext());
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    String out=MinaConverter.toString(bb,exchange);
    assertEquals("Hello World \u4f60\u597d",out);
    out=MinaConverter.toString(bb,exchange);
    assertEquals("Hello World \u4f60\u597d",out);
  }
  @Test public void testToInputStream() throws Exception {
    byte[] in="Hello World".getBytes();
    ByteBuffer bb=ByteBuffer.wrap(in);
    InputStream is=MinaConverter.toInputStream(bb);
    for (    byte b : in) {
      int out=is.read();
      assertEquals(b,out);
    }
  }
  @Test public void testToByteBuffer(){
    byte[] in="Hello World".getBytes();
    ByteBuffer bb=MinaConverter.toByteBuffer(in);
    assertNotNull(bb);
    bb.flip();
    byte[] out=MinaConverter.toByteArray(bb);
    for (int i=0; i < out.length; i++) {
      assertEquals(in[i],out[i]);
    }
  }
}
