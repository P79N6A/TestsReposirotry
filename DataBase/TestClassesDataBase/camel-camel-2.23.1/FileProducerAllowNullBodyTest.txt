/** 
 * Unit tests to ensure that  When the allowNullBody option is set to true it will create an empty file and not throw an exception When the allowNullBody option is set to false it will throw an exception of "Cannot write null body to file."
 */
public class FileProducerAllowNullBodyTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/allow");
    super.setUp();
  }
  @Test public void testAllowNullBodyTrue() throws Exception {
    template.sendBody("file://target/allow?allowNullBody=true&fileName=allowNullBody.txt",null);
    assertFileExists("target/allow/allowNullBody.txt");
  }
  @Test public void testAllowNullBodyFalse() throws Exception {
    try {
      template.sendBody("file://target/allow?fileName=allowNullBody.txt",null);
      fail("Should have thrown a GenericFileOperationFailedException");
    }
 catch (    CamelExecutionException e) {
      GenericFileOperationFailedException cause=assertIsInstanceOf(GenericFileOperationFailedException.class,e.getCause());
      assertTrue(cause.getMessage().endsWith("allowNullBody.txt"));
    }
    assertFalse("allowNullBody set to false with null body should not create a new file",new File("target/allow/allowNullBody.txt").exists());
  }
}
