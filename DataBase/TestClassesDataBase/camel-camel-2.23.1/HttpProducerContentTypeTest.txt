public class HttpProducerContentTypeTest extends BaseHttpTest {
  private static final String CONTENT_TYPE="multipart/form-data boundary=---------------------------j2radvtrk";
  private HttpServer localServer;
  @Before @Override public void setUp() throws Exception {
    localServer=ServerBootstrap.bootstrap().setHttpProcessor(getBasicHttpProcessor()).setConnectionReuseStrategy(getConnectionReuseStrategy()).setResponseFactory(getHttpResponseFactory()).setExpectationVerifier(getHttpExpectationVerifier()).setSslContext(getSSLContext()).registerHandler("/content",new HttpRequestHandler(){
      @Override public void handle(      HttpRequest request,      HttpResponse response,      HttpContext context) throws HttpException, IOException {
        String contentType=request.getFirstHeader(Exchange.CONTENT_TYPE).getValue();
        assertEquals(CONTENT_TYPE,contentType);
        response.setEntity(new StringEntity(contentType,"ASCII"));
        response.setStatusCode(HttpStatus.SC_OK);
      }
    }
).create();
    localServer.start();
    super.setUp();
  }
  @After @Override public void tearDown() throws Exception {
    super.tearDown();
    if (localServer != null) {
      localServer.stop();
    }
  }
  @Test public void testContentTypeWithBoundary() throws Exception {
    Exchange out=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/content",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.CONTENT_TYPE,CONTENT_TYPE);
        exchange.getIn().setBody("This is content");
      }
    }
);
    assertNotNull(out);
    assertFalse("Should not fail",out.isFailed());
    assertEquals(CONTENT_TYPE,out.getOut().getBody(String.class));
  }
  @Test public void testContentTypeWithBoundaryWithIgnoreResponseBody() throws Exception {
    Exchange out=template.request("http4://" + localServer.getInetAddress().getHostName() + ":"+ localServer.getLocalPort()+ "/content?ignoreResponseBody=true",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.CONTENT_TYPE,CONTENT_TYPE);
        exchange.getIn().setBody("This is content");
      }
    }
);
    assertNotNull(out);
    assertFalse("Should not fail",out.isFailed());
    assertNull(out.getOut().getBody());
  }
}
