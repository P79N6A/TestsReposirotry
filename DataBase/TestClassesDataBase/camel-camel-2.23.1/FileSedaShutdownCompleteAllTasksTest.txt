/** 
 * @version 
 */
public class FileSedaShutdownCompleteAllTasksTest extends ContextTestSupport {
  private String url="file:target/seda?initialDelay=0&delay=10";
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/seda");
    super.setUp();
  }
  @Test public void testShutdownCompleteAllTasks() throws Exception {
    template.sendBodyAndHeader(url,"A",Exchange.FILE_NAME,"a.txt");
    template.sendBodyAndHeader(url,"B",Exchange.FILE_NAME,"b.txt");
    template.sendBodyAndHeader(url,"C",Exchange.FILE_NAME,"c.txt");
    template.sendBodyAndHeader(url,"D",Exchange.FILE_NAME,"d.txt");
    template.sendBodyAndHeader(url,"E",Exchange.FILE_NAME,"e.txt");
    final CountDownLatch latch=new CountDownLatch(1);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(url).routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteAllTasks).to("log:delay").to("seda:foo");
        from("seda:foo").routeId("route2").to("log:bar").to("mock:bar").process(new Processor(){
          boolean first=true;
          @Override public void process(          Exchange exchange) throws Exception {
            latch.countDown();
            if (first) {
              Thread.sleep(100);
            }
            first=false;
          }
        }
);
      }
    }
);
    context.start();
    MockEndpoint bar=getMockEndpoint("mock:bar");
    bar.expectedMinimumMessageCount(1);
    assertMockEndpointsSatisfied();
    latch.await(5,TimeUnit.SECONDS);
    context.stop();
    assertEquals("Should complete all messages",5,bar.getReceivedCounter());
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
}
