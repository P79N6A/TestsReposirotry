public class MyBatisInsertWithInputAndOutputHeaderTest extends MyBatisTestSupport {
  private static final String TEST_CASE_INPUT_HEADER_NAME="testCaseInputHeader";
  private static final String TEST_CASE_OUTPUT_HEADER_NAME="testCaseOutputHeader";
  private static final String RETAINED_BODY="not an account";
  @Test public void testInsert() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isEqualTo(RETAINED_BODY);
    mock.message(0).header(TEST_CASE_OUTPUT_HEADER_NAME).isEqualTo(1);
    Account account=new Account();
    account.setId(444);
    account.setFirstName("Willem");
    account.setLastName("Jiang");
    account.setEmailAddress("Faraway@gmail.com");
    template.sendBodyAndHeader("direct:start",RETAINED_BODY,TEST_CASE_INPUT_HEADER_NAME,account);
    assertMockEndpointsSatisfied();
    Integer rows=template.requestBody("mybatis:count?statementType=SelectOne",null,Integer.class);
    assertEquals("There should be 3 rows",3,rows.intValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mybatis:insertAccount?statementType=Insert&inputHeader=" + TEST_CASE_INPUT_HEADER_NAME + "&outputHeader="+ TEST_CASE_OUTPUT_HEADER_NAME).to("mock:result");
      }
    }
;
  }
}
