public class AdviceWithIssueTest extends CamelTestSupport {
  final String pub="activemq:topic:integrations?allowNullBody=false&asyncConsumer=true&concurrentConsumers=10&jmsMessageType=Map&preserveMessageQos=true";
  final String advicedPub="activemq:topic:integrations";
  @Override public boolean isUseAdviceWith(){
    return true;
  }
  @Test public void testAdviceWith() throws Exception {
    context.getRouteDefinition("starter").adviceWith(context,new AdviceWithRouteBuilder(){
      @Override public void configure() throws Exception {
        mockEndpointsAndSkip(advicedPub + "?*");
      }
    }
);
    context.start();
    MockEndpoint topicEndpointMock=getMockEndpoint("mock:" + advicedPub);
    topicEndpointMock.expectedMessageCount(1);
    template.sendBody("direct:start",Collections.singletonMap("foo","bar"));
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("starter").to(pub).to("mock:result");
      }
    }
;
  }
}
