/** 
 * @version 
 */
public class CBRWithLoadBalancerTest extends ContextTestSupport {
  @Test public void testFoo() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar").expectedMessageCount(0);
    template.sendBody("direct:start","Camel rules");
    assertMockEndpointsSatisfied();
  }
  @Test public void testFooBar() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    template.sendBody("direct:start","Camel rules");
    template.sendBody("direct:start","Camel rocks");
    assertMockEndpointsSatisfied();
  }
  @Test public void testResult() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:foo").expectedMessageCount(0);
    getMockEndpoint("mock:bar").expectedMessageCount(0);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").choice().when(body().contains("Camel")).loadBalance().roundRobin().to("mock:foo").to("mock:bar").endChoice().otherwise().to("mock:result");
      }
    }
;
  }
}
