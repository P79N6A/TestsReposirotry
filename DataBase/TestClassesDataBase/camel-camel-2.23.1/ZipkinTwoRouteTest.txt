public class ZipkinTwoRouteTest extends CamelTestSupport {
  private ZipkinTracer zipkin;
  protected void setSpanReporter(  ZipkinTracer zipkin){
    zipkin.setSpanReporter(Reporter.NOOP);
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    zipkin=new ZipkinTracer();
    zipkin.addClientServiceMapping("seda:cat","cat");
    zipkin.addServerServiceMapping("seda:cat","cat");
    zipkin.addClientServiceMapping("seda:dog","dog");
    zipkin.addServerServiceMapping("seda:dog","dog");
    zipkin.setIncludeMessageBody(true);
    setSpanReporter(zipkin);
    zipkin.init(context);
    return context;
  }
  @Test public void testZipkinRoute() throws Exception {
    template.requestBody("direct:start","Camel say hello Cat");
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("seda:cat");
        from("seda:cat").routeId("cat").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")).setBody().constant("Cat says hello Dog").to("seda:dog");
        from("seda:dog").routeId("dog").log("routing at ${routeId}").delay(simple("${random(0,500)}")).setBody().constant("Dog say hello Cat and Camel");
      }
    }
;
  }
}
