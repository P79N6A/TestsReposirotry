/** 
 * Advice with tests
 */
public class AdviceWithWeaveFirstLastTest extends CamelTestSupport {
  @Override public boolean isUseAdviceWith(){
    return true;
  }
  @Test public void testWeaveAddFirst() throws Exception {
    context.getRouteDefinitions().get(0).adviceWith(context,new AdviceWithRouteBuilder(){
      @Override public void configure() throws Exception {
        weaveAddFirst().to("mock:a").transform(constant("Bye World"));
      }
    }
);
    context.start();
    getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:foo").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:bar").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testWeaveAddLast() throws Exception {
    context.getRouteDefinitions().get(0).adviceWith(context,new AdviceWithRouteBuilder(){
      @Override public void configure() throws Exception {
        weaveAddLast().to("mock:a").transform(constant("Bye World"));
      }
    }
);
    context.start();
    getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:bar").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    Object out=template.requestBody("direct:start","Hello World");
    assertEquals("Bye World",out);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:foo").to("mock:bar").id("bar").to("mock:result");
      }
    }
;
  }
}
