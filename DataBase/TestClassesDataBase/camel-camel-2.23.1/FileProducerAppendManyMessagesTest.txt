/** 
 */
@Ignore("Manual test") public class FileProducerAppendManyMessagesTest extends ContextTestSupport {
  private boolean enabled;
  @Override @Before public void setUp() throws Exception {
    if (!enabled) {
      return;
    }
    deleteDirectory("target/big");
    createDirectory("target/big");
    File file=new File("target/big/data.txt");
    FileOutputStream fos=new FileOutputStream(file);
    for (int i=0; i < 100000; i++) {
      String s="Hello World this is a long line with number " + i + LS;
      fos.write(s.getBytes());
    }
    fos.close();
    super.setUp();
  }
  @Test public void testBigFile() throws Exception {
    if (!enabled) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:done");
    mock.expectedMessageCount(1);
    mock.setResultWaitTime(2 * 60000);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/big").split(body().tokenize(LS)).streaming().to("log:processing?groupSize=1000").to("file:target/out/also-big.txt?fileExist=Append").end().to("mock:done");
      }
    }
;
  }
}
