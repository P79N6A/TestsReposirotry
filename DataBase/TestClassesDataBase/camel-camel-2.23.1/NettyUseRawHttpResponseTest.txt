public class NettyUseRawHttpResponseTest extends BaseNettyTest {
  @Test public void testAccessHttpRequest() throws Exception {
    getMockEndpoint("mock:input").expectedBodiesReceived("Hello World");
    String out=template.requestBody("netty4-http:http://localhost:{{port}}/foo","Hello World",String.class);
    assertEquals("Bye World",out);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4-http:http://0.0.0.0:{{port}}/foo").to("mock:input").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            HttpResponse response=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.OK,NettyConverter.toByteBuffer("Bye World".getBytes()));
            response.headers().set(HttpHeaderNames.CONTENT_LENGTH.toString(),9);
            exchange.getOut().setBody(response);
          }
        }
);
      }
    }
;
  }
}
