public class EhcacheConfigurationTest extends CamelTestSupport {
  @EndpointInject(uri="ehcache:globalConfig") EhcacheEndpoint globalConfig;
  @EndpointInject(uri="ehcache:customConfig") EhcacheEndpoint customConfig;
  @Override protected JndiRegistry createRegistry() throws Exception {
    EhcacheComponent component=new EhcacheComponent();
    component.setCacheConfiguration(CacheConfigurationBuilder.newCacheConfigurationBuilder(String.class,String.class,ResourcePoolsBuilder.newResourcePoolsBuilder().heap(100,EntryUnit.ENTRIES).offheap(1,MemoryUnit.MB)).build());
    component.setCachesConfigurations(Collections.singletonMap("customConfig",CacheConfigurationBuilder.newCacheConfigurationBuilder(String.class,String.class,ResourcePoolsBuilder.newResourcePoolsBuilder().heap(200,EntryUnit.ENTRIES).offheap(2,MemoryUnit.MB)).build()));
    JndiRegistry registry=super.createRegistry();
    registry.bind("ehcache",component);
    return registry;
  }
  @Test public void testConfiguration() throws Exception {
    Cache<String,String> globalConfigCache=globalConfig.getManager().getCache("globalConfig",String.class,String.class);
    Cache<String,String> customConfigCache=customConfig.getManager().getCache("customConfig",String.class,String.class);
    assertTrue(globalConfigCache instanceof Ehcache);
    assertTrue(customConfigCache instanceof Ehcache);
    CacheRuntimeConfiguration<String,String> gc=globalConfigCache.getRuntimeConfiguration();
    assertEquals(100,gc.getResourcePools().getPoolForResource(ResourceType.Core.HEAP).getSize());
    assertEquals(EntryUnit.ENTRIES,gc.getResourcePools().getPoolForResource(ResourceType.Core.HEAP).getUnit());
    assertEquals(1,gc.getResourcePools().getPoolForResource(ResourceType.Core.OFFHEAP).getSize());
    assertEquals(MemoryUnit.MB,gc.getResourcePools().getPoolForResource(ResourceType.Core.OFFHEAP).getUnit());
    CacheRuntimeConfiguration<String,String> cc=customConfigCache.getRuntimeConfiguration();
    assertEquals(200,cc.getResourcePools().getPoolForResource(ResourceType.Core.HEAP).getSize());
    assertEquals(EntryUnit.ENTRIES,cc.getResourcePools().getPoolForResource(ResourceType.Core.HEAP).getUnit());
    assertEquals(2,cc.getResourcePools().getPoolForResource(ResourceType.Core.OFFHEAP).getSize());
    assertEquals(MemoryUnit.MB,cc.getResourcePools().getPoolForResource(ResourceType.Core.OFFHEAP).getUnit());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:ehcache").to(globalConfig).to(customConfig);
      }
    }
;
  }
}
