/** 
 * @version 
 */
public class OnCompletionShouldBeLastTest extends ContextTestSupport {
  @Test public void testOnCompletionShouldBeLast() throws Exception {
    getMockEndpoint("mock:sync").expectedBodiesReceived("C","B","A","Hello World");
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onCompletion().to("mock:sync");
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.addOnCompletion(new SynchronizationAdapter(){
              @Override public void onDone(              Exchange exchange){
                template.sendBody("mock:sync","A");
              }
              @Override public String toString(){
                return "A";
              }
            }
);
            exchange.addOnCompletion(new SynchronizationAdapter(){
              @Override public void onDone(              Exchange exchange){
                template.sendBody("mock:sync","B");
              }
              @Override public String toString(){
                return "B";
              }
            }
);
            exchange.addOnCompletion(new SynchronizationAdapter(){
              @Override public void onDone(              Exchange exchange){
                template.sendBody("mock:sync","C");
              }
              @Override public String toString(){
                return "C";
              }
            }
);
          }
        }
).to("mock:result");
      }
    }
;
  }
}
