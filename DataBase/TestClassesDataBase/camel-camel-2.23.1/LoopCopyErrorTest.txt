/** 
 * @version 
 */
public class LoopCopyErrorTest extends ContextTestSupport {
  @Test public void testLoopCopy() throws Exception {
    getMockEndpoint("mock:loop").expectedMessageCount(2);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    try {
      template.sendBody("direct:start","A");
      fail("Should have thrown exception");
    }
 catch (    Exception e) {
      assertEquals("Forced",e.getCause().getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").loop(3).copy().process(new Processor(){
          int invoked;
          @Override public void process(          Exchange exchange) throws Exception {
            if (invoked++ > 1) {
              throw new IllegalArgumentException("Forced");
            }
          }
        }
).to("mock:loop").end().to("mock:result");
      }
    }
;
  }
}
