/** 
 * Unit test to verify remotefile sorter option.
 */
public class FromFtpRemoteFileSorterTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/sorter?password=admin&sorter=#mySorter";
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("mySorter",new MyRemoteFileSorter());
    return jndi;
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    prepareFtpServer();
  }
  @Test public void testFtpSorter() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(3);
    mock.expectedBodiesReceived("Hello Copenhagen","Hello London","Hello Paris");
    mock.assertIsSatisfied();
  }
  private void prepareFtpServer() throws Exception {
    sendFile(getFtpUrl(),"Hello Paris","paris.txt");
    sendFile(getFtpUrl(),"Hello London","london.txt");
    sendFile(getFtpUrl(),"Hello Copenhagen","copenhagen.txt");
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(getFtpUrl()).to("mock:result");
      }
    }
;
  }
public class MyRemoteFileSorter implements Comparator<RemoteFile<?>> {
    public int compare(    RemoteFile<?> o1,    RemoteFile<?> o2){
      return o1.getFileNameOnly().compareToIgnoreCase(o2.getFileNameOnly());
    }
  }
}
