public class SqlProducerOutputHeaderWithQueryTest extends CamelTestSupport {
  private EmbeddedDatabase db;
  @Before public void setUp() throws Exception {
    db=new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/createAndPopulateDatabase.sql").build();
    super.setUp();
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    db.shutdown();
  }
  @Test public void testQueryOutputHeader() throws InterruptedException {
    MockEndpoint mock=getMockEndpoint("mock:query");
    mock.expectedMessageCount(1);
    mock.expectedHeaderReceived(SqlConstants.SQL_ROW_COUNT,1);
    mock.expectedHeaderReceived("TheProjectID",1);
    mock.message(0).body().isEqualTo("Hi there!");
    template.requestBodyAndHeader("direct:query","Hi there!","myProject","Camel");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        getContext().getComponent("sql",SqlComponent.class).setDataSource(db);
        from("direct:query").to("sql:select id from projects where project = :#myProject?outputType=SelectOne&outputHeader=TheProjectID").to("mock:query");
      }
    }
;
  }
}
