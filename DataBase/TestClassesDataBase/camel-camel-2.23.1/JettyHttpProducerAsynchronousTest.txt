/** 
 * @version 
 */
public class JettyHttpProducerAsynchronousTest extends BaseJettyTest {
  private static String thread1;
  private static String thread2;
  private String url="jetty://http://127.0.0.1:" + getPort() + "/foo";
  @Test public void testAsynchronous() throws Exception {
    Thread.sleep(1000);
    thread1="";
    thread2="";
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.message(0).body().isEqualTo("Bye World");
    Object body=null;
    template.sendBody("direct:start",body);
    assertMockEndpointsSatisfied();
    assertNotSame("Should not use same threads",thread1,thread2);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            thread1=Thread.currentThread().getName();
          }
        }
).to(url).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            thread2=Thread.currentThread().getName();
          }
        }
).to("mock:result");
        from(url).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setHeader("customer","gold");
            exchange.getIn().setBody("Bye World");
          }
        }
);
      }
    }
;
  }
}
