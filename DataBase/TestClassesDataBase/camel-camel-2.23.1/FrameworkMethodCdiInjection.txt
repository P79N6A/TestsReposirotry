final class FrameworkMethodCdiInjection extends Statement {
  private final FrameworkMethod method;
  private final Object test;
  private final CamelCdiContext context;
  FrameworkMethodCdiInjection(  FrameworkMethod method,  Object test,  CamelCdiContext context){
    this.method=method;
    this.test=test;
    this.context=context;
  }
  @Override public void evaluate() throws Throwable {
    BeanManager manager=context.getBeanManager();
    Type[] types=method.getMethod().getGenericParameterTypes();
    Object[] parameters=new Object[types.length];
    for (int i=0; i < types.length; i++) {
      parameters[i]=manager.getInjectableReference(new FrameworkMethodInjectionPoint(method.getMethod(),i,manager),manager.createCreationalContext(null));
    }
    method.invokeExplosively(test,parameters);
  }
}
