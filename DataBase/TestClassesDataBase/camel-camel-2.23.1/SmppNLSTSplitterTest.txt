public class SmppNLSTSplitterTest {
  @Test public void splitTurkishShortMessageWith155Character(){
    String message="12345678901234567890123456789012345678901234567890123456789012345678901234567890" + "123456789012345678901234567890123456789012345678901234567890123456789012345";
    byte turkishLanguageIdentifier=0x01;
    SmppSplitter splitter=new SmppNLSTSplitter(message.length(),turkishLanguageIdentifier);
    SmppSplitter.resetCurrentReferenceNumber();
    byte[][] result=splitter.split(message.getBytes());
    assertEquals(1,result.length);
    assertArrayEquals(new byte[]{SmppNLSTSplitter.UDHIE_NLI_SINGLE_MSG_HEADER_LENGTH,SmppNLSTSplitter.UDHIE_NLI_IDENTIFIER,SmppNLSTSplitter.UDHIE_NLI_HEADER_LENGTH,turkishLanguageIdentifier,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53},result[0]);
  }
  @Test public void splitShortMessageWith156Character(){
    String message="12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" + "0123456";
    byte turkishLanguageIdentifier=0x01;
    SmppSplitter splitter=new SmppNLSTSplitter(message.length(),turkishLanguageIdentifier);
    SmppSplitter.resetCurrentReferenceNumber();
    byte[][] result=splitter.split(message.getBytes());
    assertEquals(2,result.length);
    assertArrayEquals(new byte[]{SmppNLSTSplitter.UDHIE_NLI_MULTI_MSG_HEADER_LENGTH,SmppSplitter.UDHIE_IDENTIFIER_SAR,SmppSplitter.UDHIE_SAR_LENGTH,1,2,1,SmppNLSTSplitter.UDHIE_NLI_IDENTIFIER,SmppNLSTSplitter.UDHIE_NLI_HEADER_LENGTH,turkishLanguageIdentifier,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57,48,49,50,51,52,53,54,55,56,57},result[0]);
    assertArrayEquals(new byte[]{SmppNLSTSplitter.UDHIE_NLI_MULTI_MSG_HEADER_LENGTH,SmppSplitter.UDHIE_IDENTIFIER_SAR,SmppSplitter.UDHIE_SAR_LENGTH,1,2,2,SmppNLSTSplitter.UDHIE_NLI_IDENTIFIER,SmppNLSTSplitter.UDHIE_NLI_HEADER_LENGTH,turkishLanguageIdentifier,48,49,50,51,52,53,54},result[1]);
    String firstShortMessage=new String(result[0],SmppNLSTSplitter.UDHIE_NLI_MULTI_MSG_HEADER_REAL_LENGTH,result[0].length - SmppNLSTSplitter.UDHIE_NLI_MULTI_MSG_HEADER_REAL_LENGTH);
    String secondShortMessage=new String(result[1],SmppNLSTSplitter.UDHIE_NLI_MULTI_MSG_HEADER_REAL_LENGTH,result[1].length - SmppNLSTSplitter.UDHIE_NLI_MULTI_MSG_HEADER_REAL_LENGTH);
    assertEquals(message,firstShortMessage + secondShortMessage);
  }
}
