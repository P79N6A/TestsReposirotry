public class BeanReturnCallableReturnNullTest extends ContextTestSupport {
  @Test public void testBeanReturnCallable() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("StartMyBean");
    mock.expectedHeaderReceived("user","admin");
    mock.expectedHeaderReceived("foo","bar");
    template.requestBody("direct:in","Start");
    mock.assertIsSatisfied();
  }
  protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myBean",new MyBean());
    return answer;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:in").setHeader("foo",constant("bar")).to("bean:myBean").to("mock:result");
      }
    }
;
  }
public static class MyBean {
    public Callable doSomething(    final Exchange exchange){
      return new Callable(){
        @Override public Object call() throws Exception {
          String body=exchange.getIn().getBody(String.class);
          exchange.getIn().setHeader("user","admin");
          exchange.getIn().setBody(body + "MyBean");
          return null;
        }
      }
;
    }
  }
}
