/** 
 */
public class SimpleResultTypeRouteTest extends ContextTestSupport {
  @Test public void testSimpleResultTypeFoo() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:foo");
    mock.expectedMessageCount(1);
    mock.message(0).header("cool").isInstanceOf(Boolean.class);
    mock.message(0).header("cool").isEqualTo(true);
    mock.message(0).header("fail").isInstanceOf(String.class);
    mock.message(0).header("fail").isEqualTo("true");
    template.sendBody("direct:foo","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSimpleResultTypeBar() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:bar");
    mock.expectedMessageCount(1);
    mock.message(0).header("cool").isInstanceOf(Boolean.class);
    mock.message(0).header("cool").isEqualTo(true);
    mock.message(0).header("fail").isInstanceOf(String.class);
    mock.message(0).header("fail").isEqualTo("true");
    template.sendBody("direct:bar","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").setHeader("cool",simple("true",Boolean.class)).setHeader("fail",simple("true")).to("mock:foo");
        from("direct:bar").setHeader("cool").simple("true",Boolean.class).setHeader("fail",simple("true")).to("mock:bar");
      }
    }
;
  }
}
