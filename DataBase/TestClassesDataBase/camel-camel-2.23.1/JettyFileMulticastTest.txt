@ContextConfiguration public class JettyFileMulticastTest extends AbstractJUnit4SpringContextTests {
  private static int port=AvailablePortFinder.getNextAvailable(20033);
static {
    System.setProperty("JettyFileMulticastTest.port",Integer.toString(port));
  }
  @Autowired protected CamelContext camelContext;
  @EndpointInject(uri="mock:resultEndpoint") protected MockEndpoint resultEndpoint;
  @EndpointInject(uri="mock:fileEndpoint") protected MockEndpoint fileEndpoint;
  @Test public void testMulticastEndpoint() throws Exception {
    assertNotNull(resultEndpoint);
    assertNotNull(fileEndpoint);
    resultEndpoint.reset();
    fileEndpoint.reset();
    ProducerTemplate template=camelContext.createProducerTemplate();
    template.sendBodyAndHeader("direct:start","Hello form Willem","Operation","greetMe");
    Thread.sleep(2000);
    template.stop();
    MockEndpoint.assertIsSatisfied(camelContext);
    List<Exchange> resultExchanges=resultEndpoint.getReceivedExchanges();
    assertEquals("Should get one message for mock endpoint",resultExchanges.size(),1);
    String result=resultExchanges.get(0).getIn().getBody(String.class);
    assertEquals("Should get the request","<response>Hello form Willem</response>",result);
    assertEquals("Should get the responise code",200,resultExchanges.get(0).getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));
  }
}
