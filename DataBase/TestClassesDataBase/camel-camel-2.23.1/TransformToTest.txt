/** 
 * @version 
 */
public class TransformToTest extends ContextTestSupport {
  @Test public void testTransformTo() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Bye World");
    String out=template.requestBody("direct:start","Hello World",String.class);
    assertEquals("Bye World",out);
    assertMockEndpointsSatisfied();
  }
  @Test public void testTransformToInOnly() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("InOnly");
    template.sendBody("direct:start","Hello In");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").transform(sendTo("direct:foo")).to("mock:result");
        from("direct:foo").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            if ("Hello World".equals(body)) {
              exchange.getOut().setBody("Bye World");
            }
 else {
              exchange.getIn().setBody("InOnly");
            }
          }
        }
);
      }
    }
;
  }
}
