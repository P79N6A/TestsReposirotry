/** 
 * Test that placeholder DSL is working as expected.
 */
public class OptionalPropertiesDslTest extends ContextTestSupport {
  @Test public void testPlaceholderDslTest() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Hello World");
      fail("Should have thrown an exception");
    }
 catch (    Exception e) {
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").multicast().placeholder("stopOnException","stop").to("mock:a").throwException(new IllegalAccessException("Damn")).to("mock:b");
      }
    }
;
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.addComponent("properties",new PropertiesComponent("classpath:org/apache/camel/component/properties/myproperties.properties"));
    return context;
  }
}
