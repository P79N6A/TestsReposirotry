/** 
 * Unit test using a fixed replyTo specified on the JMS endpoint
 * @version 
 */
public class JmsJMSReplyToEndpointUsingInOutTest extends CamelTestSupport {
  private JmsComponent amq;
  @Test public void testCustomJMSReplyToInOut() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("My name is Arnio");
    ExecutorService executor=Executors.newFixedThreadPool(1);
    executor.submit(new Callable<Object>(){
      public Object call() throws Exception {
        JmsTemplate jms=new JmsTemplate(amq.getConfiguration().getConnectionFactory());
        final TextMessage msg=(TextMessage)jms.receive("nameRequestor");
        assertEquals("What's your name",msg.getText());
        final Destination replyTo=msg.getJMSReplyTo();
        jms.send(replyTo,new MessageCreator(){
          public Message createMessage(          Session session) throws JMSException {
            TextMessage replyMsg=session.createTextMessage();
            replyMsg.setText("My name is Arnio");
            replyMsg.setJMSCorrelationID(msg.getJMSCorrelationID());
            return replyMsg;
          }
        }
);
        return null;
      }
    }
);
    JmsTemplate jms=new JmsTemplate(amq.getConfiguration().getConnectionFactory());
    jms.send("hello",new MessageCreator(){
      public Message createMessage(      Session session) throws JMSException {
        TextMessage msg=session.createTextMessage();
        msg.setText("Hello, I'm here");
        return msg;
      }
    }
);
    assertMockEndpointsSatisfied();
    executor.shutdownNow();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:queue:hello").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("What's your name");
          }
        }
).to(ExchangePattern.InOut,"activemq:queue:nameRequestor?replyTo=queue:namedReplyQueue").to("mock:result");
      }
    }
;
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    amq=camelContext.getComponent("activemq",JmsComponent.class);
    return camelContext;
  }
}
