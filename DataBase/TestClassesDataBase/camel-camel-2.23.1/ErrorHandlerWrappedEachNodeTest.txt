/** 
 * Unit test for verifying that error handler is wrapped each individual node in a pipeline. Based on CAMEL-1548.
 * @version 
 */
public class ErrorHandlerWrappedEachNodeTest extends ContextTestSupport {
  private static int kabom;
  private static int hi;
  @Test public void testKabom() throws Exception {
    kabom=0;
    hi=0;
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedBodiesReceived("Hi Kabom");
    getMockEndpoint("mock:error").expectedMessageCount(0);
    template.sendBody("direct:start","Kabom");
    assertMockEndpointsSatisfied();
    assertEquals(3,kabom);
    assertEquals(1,hi);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(3).redeliveryDelay(0).logStackTrace(false));
        from("direct:start").pipeline("bean:foo?method=hi","bean:foo?method=kabom").to("mock:result");
      }
    }
;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyFooBean());
    return jndi;
  }
public static final class MyFooBean {
    public void kabom() throws Exception {
      if (kabom++ < 2) {
        throw new IllegalArgumentException("Kabom");
      }
    }
    public String hi(    String payload) throws Exception {
      hi++;
      return "Hi " + payload;
    }
  }
}
