public class RestRestletCorsTest extends RestletTestSupport {
  Splitter headerSplitter=Splitter.on(",").trimResults();
  @Test public void testCors() throws Exception {
    Exchange out=template.request("http://localhost:" + portNum + "/users/123/basic",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
      }
    }
);
    assertEquals("https://localhost:443",out.getOut().getHeader("Access-Control-Allow-Origin"));
    assertEquals("GET, POST, PUT, DELETE, OPTIONS",out.getOut().getHeader("Access-Control-Allow-Methods"));
    assertEquals("Origin, Accept, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers",out.getOut().getHeader("Access-Control-Allow-Headers"));
    assertEquals("1234",out.getOut().getHeader("Access-Control-Max-Age"));
  }
  @Test public void testRestletProducerGet() throws Exception {
    Exchange exchange=template.request("http://localhost:" + portNum + "/users/123/basic",null);
    assertFalse(exchange.isFailed());
    Message message=exchange.getOut();
    assertThat(message.getHeader(Exchange.HTTP_RESPONSE_CODE,Integer.class),is(200));
    assertThat(message.getHeader("Access-Control-Allow-Origin",String.class),is("https://localhost:443"));
    assertHeaderSet(message,"Access-Control-Allow-Methods","GET","POST","PUT","DELETE","OPTIONS");
    assertHeaderSet(message,"Access-Control-Allow-Headers","Origin","Accept","Content-Type","Access-Control-Request-Method","Access-Control-Request-Headers");
    assertThat(message.getHeader("Access-Control-Max-Age",Integer.class),is(1234));
  }
  private void assertHeaderSet(  Message message,  String headerName,  String... headerValues){
    String allowHeaders=message.getHeader(headerName,String.class);
    Set<String> actual=newHashSet(headerSplitter.split(allowHeaders));
    Set<String> expected=newHashSet(headerValues);
    assertThat(actual,is(expected));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().component("restlet").host("localhost").port(portNum).enableCORS(true).corsHeaderProperty("Access-Control-Allow-Origin","https://localhost:443").corsHeaderProperty("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS").corsHeaderProperty("Access-Control-Allow-Headers","Origin, Accept, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers").corsHeaderProperty("Access-Control-Max-Age","1234");
        rest("/users/").get("{id}/basic").route().to("mock:input").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String id=exchange.getIn().getHeader("id",String.class);
            exchange.getOut().setBody(id + ";Donald Duck");
          }
        }
);
      }
    }
;
  }
}
