@DirtiesContext public class ServiceCallFilterTest extends SpringTestSupport {
  @Test public void testServiceFilter() throws Exception {
    Exchange result;
    result=template.request("direct:start",emptyProcessor());
    assertHeader(result,ServiceCallConstants.SERVICE_HOST,"host1");
    assertHeader(result,ServiceCallConstants.SERVICE_PORT,9093);
    result=template.request("direct:start",emptyProcessor());
    assertHeader(result,ServiceCallConstants.SERVICE_HOST,"host4");
    assertHeader(result,ServiceCallConstants.SERVICE_PORT,9094);
  }
  private void assertHeader(  Exchange exchange,  String header,  Object expectedValue){
    Assert.assertNotNull(exchange);
    Assert.assertTrue(exchange.getIn().getHeaders().containsKey(header));
    Assert.assertEquals(expectedValue,exchange.getIn().getHeader(header));
  }
  private Processor emptyProcessor(){
    return e -> {
      return;
    }
;
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/spring/cloud/ServiceCallFilterTest.xml");
  }
}
