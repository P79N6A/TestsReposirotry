/** 
 * @version 
 */
public class CamelPostProcessorHelperConsumePredicateTest extends ContextTestSupport {
  @Test public void testConsumePredicate() throws Exception {
    CamelPostProcessorHelper helper=new CamelPostProcessorHelper(context);
    MyConsumeBean my=new MyConsumeBean();
    Method method=my.getClass().getMethod("low",String.class);
    helper.consumerInjection(method,my,"foo");
    method=my.getClass().getMethod("high",String.class);
    helper.consumerInjection(method,my,"foo");
    getMockEndpoint("mock:low").expectedBodiesReceived("17","89","39");
    getMockEndpoint("mock:high").expectedBodiesReceived("219","112");
    template.sendBody("direct:foo","17");
    template.sendBody("direct:foo","219");
    template.sendBody("direct:foo","89");
    template.sendBody("direct:foo","112");
    template.sendBody("direct:foo","39");
    assertMockEndpointsSatisfied();
  }
  @Test public void testConsumePredicateDrop() throws Exception {
    CamelPostProcessorHelper helper=new CamelPostProcessorHelper(context);
    MyConsumeBean my=new MyConsumeBean();
    Method method=my.getClass().getMethod("low",String.class);
    helper.consumerInjection(method,my,"foo");
    method=my.getClass().getMethod("high",String.class);
    helper.consumerInjection(method,my,"foo");
    getMockEndpoint("mock:low").expectedBodiesReceived("17");
    getMockEndpoint("mock:high").expectedBodiesReceived("112");
    template.sendBody("direct:foo","17");
    template.sendBody("direct:foo","-1");
    template.sendBody("direct:foo","112");
    assertMockEndpointsSatisfied();
  }
public class MyConsumeBean {
    @Consume(uri="direct:foo",predicate="${body} >= 0 && ${body} < 100") public void low(    String body){
      template.sendBody("mock:low",body);
    }
    @Consume(uri="direct:foo",predicate="${body} >= 100") public void high(    String body){
      template.sendBody("mock:high",body);
    }
  }
}
