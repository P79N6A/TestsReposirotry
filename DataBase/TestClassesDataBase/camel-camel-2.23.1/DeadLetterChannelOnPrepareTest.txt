public class DeadLetterChannelOnPrepareTest extends ContextTestSupport {
  @Test public void testDeadLetterChannelOnPrepare() throws Exception {
    getMockEndpoint("mock:dead").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:dead").expectedHeaderReceived("FailedBecause","Forced");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:dead").onPrepareFailure(new MyPrepareProcessor()));
        from("direct:start").log("Incoming ${body}").throwException(new IllegalArgumentException("Forced"));
      }
    }
;
  }
public static class MyPrepareProcessor implements Processor {
    @Override public void process(    Exchange exchange) throws Exception {
      Exception cause=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class);
      exchange.getIn().setHeader("FailedBecause",cause.getMessage());
    }
  }
}
