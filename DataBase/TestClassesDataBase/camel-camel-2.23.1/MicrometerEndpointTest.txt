@RunWith(MockitoJUnitRunner.class) public class MicrometerEndpointTest {
  private static final String METRICS_NAME="metrics.name";
  @Mock private MeterRegistry registry;
  @Mock private Processor processor;
  @Mock private Exchange exchange;
  @Mock private Message in;
  private MicrometerEndpoint endpoint;
  private InOrder inOrder;
  @Before public void setUp(){
    endpoint=new MicrometerEndpoint(null,null,registry,Meter.Type.COUNTER,METRICS_NAME,Tags.empty()){
      @Override public Producer createProducer(){
        return null;
      }
      @Override protected String createEndpointUri(){
        return "not real endpoint";
      }
    }
;
    inOrder=Mockito.inOrder(registry,processor,exchange,in);
  }
  @After public void tearDown(){
    inOrder.verifyNoMoreInteractions();
  }
  @Test public void testAbstractMetricsEndpoint(){
    assertThat(endpoint.getMetricsName(),is(METRICS_NAME));
    assertThat(endpoint.getRegistry(),is(registry));
  }
  @Test(expected=RuntimeCamelException.class) public void testCreateConsumer(){
    endpoint.createConsumer(processor);
  }
  @Test public void testIsSingleton(){
    assertThat(endpoint.isSingleton(),is(true));
  }
  @Test public void testGetRegistry(){
    assertThat(endpoint.getRegistry(),is(registry));
  }
  @Test public void testGetMetricsName(){
    assertThat(endpoint.getMetricsName(),is(METRICS_NAME));
  }
}
