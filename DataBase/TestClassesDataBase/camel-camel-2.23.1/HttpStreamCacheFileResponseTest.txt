/** 
 * @version 
 */
public class HttpStreamCacheFileResponseTest extends BaseJettyTest {
  private String body="12345678901234567890123456789012345678901234567890";
  private String body2="Bye " + body;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/cachedir");
    createDirectory("target/cachedir");
    super.setUp();
  }
  @Test public void testStreamCacheToFileShouldBeDeletedInCaseOfResponse() throws Exception {
    String out=template.requestBody("http://localhost:{{port}}/myserver",body,String.class);
    assertEquals(body2,out);
    Thread.sleep(500);
    File file=new File("target/cachedir");
    String[] files=file.list();
    assertEquals("There should be no files",0,files.length);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.getStreamCachingStrategy().setSpoolDirectory("target/cachedir");
        context.getStreamCachingStrategy().setSpoolThreshold(16);
        context.setStreamCaching(true);
        from("jetty://http://localhost:{{port}}/myserver").transform().constant(new BufferedInputStream(new ByteArrayInputStream(body2.getBytes()))).to("log:reply");
      }
    }
;
  }
}
