public class RestSwaggerReaderModelBookOrderTest extends CamelTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        rest("/books").tag("dude").description("Book order service").consumes("application/json").produces("application/json").get("/{id}").description("Find order by id").outType(BookOrder.class).responseMessage().message("The order returned").endResponseMessage().param().name("id").type(RestParamType.path).description("The id of the order to get").dataType("integer").endParam().to("bean:bookService?method=getOrder(${header.id})").get("/books/{id}/line/{lineNum}").outType(LineItem.class).to("bean:bookService?method=getOrder(${header.id})");
      }
    }
;
  }
  @Test public void testReaderRead() throws Exception {
    BeanConfig config=new BeanConfig();
    config.setHost("localhost:8080");
    config.setSchemes(new String[]{"http"});
    config.setBasePath("/api");
    config.setTitle("Camel User store");
    config.setLicense("Apache 2.0");
    config.setLicenseUrl("http://www.apache.org/licenses/LICENSE-2.0.html");
    RestSwaggerReader reader=new RestSwaggerReader();
    Swagger swagger=reader.read(context.getRestDefinitions(),null,config,context.getName(),new DefaultClassResolver());
    assertNotNull(swagger);
    ObjectMapper mapper=new ObjectMapper();
    mapper.enable(SerializationFeature.INDENT_OUTPUT);
    mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
    String json=mapper.writeValueAsString(swagger);
    log.info(json);
    assertTrue(json.contains("\"host\" : \"localhost:8080\""));
    assertTrue(json.contains("\"description\" : \"The order returned\""));
    assertTrue(json.contains("\"BookOrder\""));
    assertTrue(json.contains("\"LineItem\""));
    assertTrue(json.contains("\"$ref\" : \"#/definitions/BookOrder\""));
    assertTrue(json.contains("\"$ref\" : \"#/definitions/LineItem\""));
    assertTrue(json.contains("\"x-className\""));
    assertTrue(json.contains("\"format\" : \"org.apache.camel.swagger.BookOrder\""));
    assertTrue(json.contains("\"format\" : \"org.apache.camel.swagger.LineItem\""));
    context.stop();
  }
}
