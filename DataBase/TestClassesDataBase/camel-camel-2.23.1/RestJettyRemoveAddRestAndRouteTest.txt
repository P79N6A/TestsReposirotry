public class RestJettyRemoveAddRestAndRouteTest extends BaseJettyTest {
  @Test public void testCallRoute() throws Exception {
    InputStream stream=new URL("http://localhost:" + getPort() + "/issues/35").openStream();
    assertEquals("Here's your issue 35",IOUtils.toString(stream));
    stream=new URL("http://localhost:" + getPort() + "/listings").openStream();
    assertEquals("some listings",IOUtils.toString(stream));
  }
  @Test public void testRemoveAddRoute() throws Exception {
    context.stopRoute("issues");
    boolean removed=context.removeRoute("issues");
    assertTrue("Should have removed route",removed);
    try (InputStream stream=new URL("http://localhost:" + getPort() + "/issues/35").openStream()){
      fail();
    }
 catch (    Exception e) {
    }
    new RouteBuilder(context){
      @Override public void configure() throws Exception {
        rest("/").get("/issues/{isin}/{sedol}").route().id("issues").process(e -> e.getOut().setBody("Here's your issue " + e.getIn().getHeader("isin") + ":"+ e.getIn().getHeader("sedol"))).endRest();
      }
    }
.addRoutesToCamelContext(context);
    InputStream stream=new URL("http://localhost:" + getPort() + "/issues/35/65").openStream();
    assertEquals("Here's your issue 35:65",IOUtils.toString(stream));
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration("jetty").host("localhost").port(getPort());
        rest("/").get("/issues/{isin}").route().id("issues").process(e -> e.getOut().setBody("Here's your issue " + e.getIn().getHeader("isin"))).endRest().get("/listings").route().id("listings").process(e -> e.getOut().setBody("some listings"));
      }
    }
;
  }
}
