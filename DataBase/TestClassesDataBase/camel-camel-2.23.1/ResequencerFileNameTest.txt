/** 
 * @version 
 */
public class ResequencerFileNameTest extends ContextTestSupport {
  protected MockEndpoint resultEndpoint;
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    resultEndpoint=getMockEndpoint("mock:result");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").resequence(new MyFileNameExpression()).stream().timeout(100).to("mock:result");
      }
    }
;
  }
  @Test public void testStreamResequence() throws Exception {
    resultEndpoint.expectedBodiesReceived("20090612-D001","20090612-D003");
    template.requestBody("direct:start","20090612-D003");
    template.requestBody("direct:start","20090612-D001");
    resultEndpoint.assertIsSatisfied();
    resultEndpoint.reset();
    resultEndpoint.expectedBodiesReceived("20090612-D002","20090615-D001");
    template.requestBody("direct:start","20090615-D001");
    template.requestBody("direct:start","20090612-D002");
    resultEndpoint.assertIsSatisfied();
  }
}
