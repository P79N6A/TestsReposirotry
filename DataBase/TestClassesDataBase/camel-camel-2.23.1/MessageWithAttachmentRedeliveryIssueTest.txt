/** 
 */
public class MessageWithAttachmentRedeliveryIssueTest extends ContextTestSupport {
  @Test public void testMessageWithAttachmentRedeliveryIssue() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.send("direct:start",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
        exchange.getIn().addAttachment("message1.xml",new DataHandler(new FileDataSource(new File("src/test/data/message1.xml"))));
        exchange.getIn().addAttachmentObject("message2.xml",new DefaultAttachment(new FileDataSource(new File("src/test/data/message2.xml"))));
      }
    }
);
    assertMockEndpointsSatisfied();
    Message msg=getMockEndpoint("mock:result").getReceivedExchanges().get(0).getIn();
    assertNotNull(msg);
    assertEquals("Hello World",msg.getBody());
    assertTrue(msg.hasAttachments());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Exception.class).maximumRedeliveries(3).redeliveryDelay(0);
        from("direct:start").process(new Processor(){
          private int counter;
          @Override public void process(          Exchange exchange) throws Exception {
            if (counter++ < 2) {
              throw new IllegalArgumentException("Forced");
            }
          }
        }
).to("mock:result");
      }
    }
;
  }
}
