/** 
 * @version 
 */
public class JmsRouteTest extends CamelTestSupport {
  protected MockEndpoint resultEndpoint;
  protected String componentName="activemq";
  protected String startEndpointUri;
  @Test public void testSendAndReceiveMessage() throws Exception {
    assertSendAndReceiveBody("Hello there!");
  }
  @Test public void testSendEmptyMessage() throws Exception {
    resultEndpoint.expectedMessageCount(2);
    sendExchange("");
    sendExchange(null);
    resultEndpoint.assertIsSatisfied();
  }
  protected void assertSendAndReceiveBody(  Object expectedBody) throws InterruptedException {
    resultEndpoint.expectedBodiesReceived(expectedBody);
    resultEndpoint.message(0).header("cheese").isEqualTo(123);
    sendExchange(expectedBody);
    resultEndpoint.assertIsSatisfied();
  }
  protected void sendExchange(  final Object expectedBody){
    template.sendBodyAndHeader(startEndpointUri,expectedBody,"cheese",123);
  }
  @Override @Before public void setUp() throws Exception {
    startEndpointUri=componentName + ":queue:test.a";
    super.setUp();
    resultEndpoint=context.getEndpoint("mock:result",MockEndpoint.class);
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent(componentName,jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(startEndpointUri).to(componentName + ":queue:test.b");
        from(componentName + ":queue:test.b").to("mock:result");
      }
    }
;
  }
}
