/** 
 * @version 
 */
public class JmsSplitterParallelTest extends CamelTestSupport {
  protected String getUri(){
    return "activemq:queue:foo?useMessageIDAsCorrelationID=true";
  }
  @Test public void testSplitParallel() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("A,B,C,D,E");
    getMockEndpoint("mock:reply").expectedBodiesReceivedInAnyOrder("Bye A","Bye B","Bye C","Bye D","Bye E");
    getMockEndpoint("mock:split").expectedBodiesReceivedInAnyOrder("Bye A","Bye B","Bye C","Bye D","Bye E");
    template.sendBody("direct:start","A,B,C,D,E");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").split(body().tokenize(",")).parallelProcessing().to("log:before").to(ExchangePattern.InOut,getUri()).to("log:after").to("mock:split").end().to("mock:result");
        from(getUri()).transform(body().prepend("Bye ")).to("mock:reply");
      }
    }
;
  }
}
