protected static class ClusteredCacheSupport extends MultipleCacheManagersTest {
  protected ConfigurationBuilder builderUsed;
  protected final boolean tx;
  protected final CacheMode cacheMode;
  protected String cacheName;
  protected final int clusterSize;
  public ClusteredCacheSupport(  CacheMode cacheMode,  boolean tx,  int clusterSize){
    this.tx=tx;
    this.cacheMode=cacheMode;
    this.clusterSize=clusterSize;
  }
  public ClusteredCacheSupport(  CacheMode cacheMode,  String cacheName,  boolean tx,  int clusterSize){
    this.tx=tx;
    this.cacheMode=cacheMode;
    this.cacheName=cacheName;
    this.clusterSize=clusterSize;
  }
  @Override public void createCacheManagers() throws Throwable {
    builderUsed=new ConfigurationBuilder();
    builderUsed.clustering().cacheMode(cacheMode);
    if (tx) {
      builderUsed.transaction().transactionMode(TransactionMode.TRANSACTIONAL);
    }
    if (cacheMode.isDistributed()) {
      builderUsed.clustering().hash().numOwners(1);
    }
    if (cacheName != null) {
      createClusteredCaches(clusterSize,cacheName,builderUsed);
    }
 else {
      createClusteredCaches(clusterSize,builderUsed);
    }
  }
}
