/** 
 * @version 
 */
public class RouteStartupOrderSuspendResumeNoAutoStartupTest extends ContextTestSupport {
  @Test public void testRouteStartupOrderSuspendResumeNoAutoStartup() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    context.suspend();
    context.resume();
    assertEquals(true,context.getRouteStatus("C").isStopped());
    DefaultCamelContext dcc=(DefaultCamelContext)context;
    List<RouteStartupOrder> order=dcc.getRouteStartupOrder();
    assertEquals(3,order.size());
    assertEquals("direct://foo",order.get(0).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://start",order.get(1).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://bar",order.get(2).getRoute().getEndpoint().getEndpointUri());
  }
  @Test public void testRouteStartupOrderSuspendResumeStartC() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    context.startRoute("C");
    context.suspend();
    context.resume();
    assertEquals(true,context.getRouteStatus("C").isStarted());
    DefaultCamelContext dcc=(DefaultCamelContext)context;
    List<RouteStartupOrder> order=dcc.getRouteStartupOrder();
    assertEquals(4,order.size());
    assertEquals("direct://foo",order.get(0).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://start",order.get(1).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://bar",order.get(2).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://baz",order.get(3).getRoute().getEndpoint().getEndpointUri());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("B").startupOrder(2).to("direct:foo");
        from("direct:foo").routeId("A").startupOrder(1).to("mock:result");
        from("direct:bar").routeId("D").startupOrder(9).to("direct:baz");
        from("direct:baz").routeId("C").noAutoStartup().startupOrder(5).to("mock:other");
      }
    }
;
  }
}
