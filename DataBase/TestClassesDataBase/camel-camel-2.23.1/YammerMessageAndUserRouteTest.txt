public class YammerMessageAndUserRouteTest extends CamelTestSupport {
  private static final String YAMMER_CURRENT_USER_CONSUMER="yammer:current?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken";
  private static final String YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken";
  @Before public void setUp() throws Exception {
    super.setUp();
    YammerEndpoint messagesEndpoint=context.getEndpoint(YAMMER_MESSAGES_CONSUMER,YammerEndpoint.class);
    YammerEndpoint usersEndpoint=context.getEndpoint(YAMMER_CURRENT_USER_CONSUMER,YammerEndpoint.class);
    String messages=context.getTypeConverter().convertTo(String.class,getClass().getResourceAsStream("/messages.json"));
    messagesEndpoint.getConfig().setRequestor(new TestApiRequestor(messages));
    String users=context.getTypeConverter().convertTo(String.class,getClass().getResourceAsStream("/user.json"));
    usersEndpoint.getConfig().setRequestor(new TestApiRequestor(users));
  }
  @Test public void testConsumeAllMessages() throws Exception {
    MockEndpoint messagesMock=getMockEndpoint("mock:messages");
    messagesMock.expectedMinimumMessageCount(1);
    messagesMock.assertIsSatisfied();
    Exchange exchange=messagesMock.getExchanges().get(0);
    Messages messages=exchange.getIn().getBody(Messages.class);
    assertEquals(2,messages.getMessages().size());
    assertEquals("Testing yammer API...",messages.getMessages().get(0).getBody().getPlain());
    assertEquals("(Principal Software Engineer) has #joined the redhat.com network. Take a moment to welcome Jonathan.",messages.getMessages().get(1).getBody().getPlain());
    MockEndpoint userMock=getMockEndpoint("mock:user");
    userMock.expectedMinimumMessageCount(1);
    template.sendBody("direct:start","overwrite me");
    userMock.assertIsSatisfied();
    exchange=userMock.getExchanges().get(0);
    User user=exchange.getIn().getBody(User.class);
    assertEquals("Joe Camel",user.getFullName());
    assertEquals("jcamel@redhat.com",user.getContact().getEmailAddresses().get(0).getAddress());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from(YAMMER_MESSAGES_CONSUMER).to("mock:messages");
        from("direct:start").pollEnrich(YAMMER_CURRENT_USER_CONSUMER).to("mock:user");
      }
    }
;
  }
}
