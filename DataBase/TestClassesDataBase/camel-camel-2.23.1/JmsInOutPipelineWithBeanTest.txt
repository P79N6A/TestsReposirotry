/** 
 * Unit test from an user request on the forum.
 */
public class JmsInOutPipelineWithBeanTest extends CamelTestSupport {
  @Test public void testA() throws Exception {
    Object response=template.requestBody("activemq:testA","Hello World");
    assertEquals("Reply","Hello World,From Bean,From A,From B",response);
  }
  @Test public void testB() throws Exception {
    Object response=template.requestBody("activemq:testB","Hello World");
    assertEquals("Reply","Hello World,From A,From Bean,From B",response);
  }
  @Test public void testC() throws Exception {
    Object response=template.requestBody("activemq:testC","Hello World");
    assertEquals("Reply","Hello World,From A,From B,From Bean",response);
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry reg=super.createRegistry();
    reg.bind("dummyBean",new MyDummyBean());
    return reg;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:testA").to("bean:dummyBean").to("activemq:a").to("activemq:b");
        from("activemq:testB").to("activemq:a").to("bean:dummyBean").to("activemq:b");
        from("activemq:testC").to("activemq:a").to("activemq:b").to("bean:dummyBean");
        from("activemq:a").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            exchange.getOut().setBody(body + ",From A");
          }
        }
);
        from("activemq:b").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            exchange.getOut().setBody(body + ",From B");
          }
        }
);
      }
    }
;
  }
public static class MyDummyBean {
    public void doSomething(    Exchange exchange){
      String body=exchange.getIn().getBody(String.class);
      exchange.getOut().setBody(body + ",From Bean");
    }
  }
}
