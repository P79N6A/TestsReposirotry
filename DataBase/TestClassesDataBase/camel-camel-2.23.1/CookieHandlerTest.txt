@RunWith(Parameterized.class) public class CookieHandlerTest extends CamelTestSupport {
  private CookieHandler cookieHandler;
  private CookiePolicy cookiePolicy;
  private int expectedNumberOfCookieValues;
  private String uriStr;
  private Exchange exchange;
  public CookieHandlerTest(  CookieHandler cookieHandler,  CookiePolicy cookiePolicy,  String uri,  int expectedNumberOfCookieValues,  String description){
    this.cookieHandler=cookieHandler;
    this.cookiePolicy=cookiePolicy;
    this.uriStr=uri;
    this.expectedNumberOfCookieValues=expectedNumberOfCookieValues;
  }
  @Parameters(name="{index}: {4} policy for {2} returns {3} Cookie header lines") public static Iterable<Object[]> data(){
    return Arrays.asList(new Object[][]{{new InstanceCookieHandler(),CookiePolicy.ACCEPT_ORIGINAL_SERVER,"http://www.example.com/acme/foo",2,"InstanceCookieHandler with ACCEPT_ORIGINAL_SERVER"},{new InstanceCookieHandler(),CookiePolicy.ACCEPT_ORIGINAL_SERVER,"http://www.sub.example.com/acme/foo",0,"InstanceCookieHandler with ACCEPT_ORIGINAL_SERVER"},{new InstanceCookieHandler(),CookiePolicy.ACCEPT_ALL,"http://www.sub.example.com/acme/foo",2,"InstanceCookieHandler with ACCEPT_ALL"},{new ExchangeCookieHandler(),CookiePolicy.ACCEPT_ORIGINAL_SERVER,"http://www.example.com/acme/foo",2,"ExchangeCookieHandler with ACCEPT_ORIGINAL_SERVER"},{new ExchangeCookieHandler(),CookiePolicy.ACCEPT_ORIGINAL_SERVER,"http://www.sub.example.com/acme/foo",0,"ExchangeCookieHandler with ACCEPT_ORIGINAL_SERVER"},{new ExchangeCookieHandler(),CookiePolicy.ACCEPT_ALL,"http://www.sub.example.com/acme/foo",2,"ExchangeCookieHandler with ACCEPT_ALL"}});
  }
  @Before public void setUp() throws Exception {
    super.setUp();
    exchange=createExchangeWithBody(null);
  }
  @Test public void setReceiveAndTestCookie() throws IOException, URISyntaxException {
    URI uri=new URI(uriStr);
    cookieHandler.setCookiePolicy(cookiePolicy);
    Map<String,List<String>> headerMap=new HashMap<>();
    headerMap.put("Set-Cookie",Collections.singletonList("Customer=\"WILE_E_COYOTE\";Version=1;Path=\"/acme\";Domain=\".example.com\""));
    cookieHandler.storeCookies(exchange,uri,headerMap);
    Map<String,List<String>> cookieHeaders=cookieHandler.loadCookies(exchange,uri);
    assertNotNull(cookieHeaders);
    assertNotNull(cookieHeaders.get("Cookie"));
    assertEquals(expectedNumberOfCookieValues,cookieHeaders.get("Cookie").size());
  }
}
