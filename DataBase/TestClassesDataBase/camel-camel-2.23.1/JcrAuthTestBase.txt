/** 
 * Base class for tests that use authentication/authorization in the repository. Ensures that the transient repo is set up properly for each test.
 */
public abstract class JcrAuthTestBase extends CamelTestSupport {
  protected static final String BASE_REPO_PATH="/home/test";
  protected static final String REPO_PATH="target/repository";
  private Repository repository;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory(REPO_PATH);
    super.setUp();
  }
  @Override protected Context createJndiContext() throws Exception {
    Context context=super.createJndiContext();
    repository=new TransientRepository(new File(REPO_PATH));
    SessionImpl session=(SessionImpl)repository.login(new SimpleCredentials("admin","admin".toCharArray()));
    UserManager userManager=session.getUserManager();
    User user=(User)userManager.getAuthorizable("test");
    if (user == null) {
      user=userManager.createUser("test","quatloos");
    }
    String path=session.getRootNode().getPath();
    AccessControlManager accessControlManager=session.getAccessControlManager();
    AccessControlPolicyIterator acls=accessControlManager.getApplicablePolicies(path);
    AccessControlList acl=null;
    if (acls.hasNext()) {
      acl=(AccessControlList)acls.nextAccessControlPolicy();
    }
 else {
      acl=(AccessControlList)accessControlManager.getPolicies(path)[0];
    }
    acl.addAccessControlEntry(user.getPrincipal(),accessControlManager.getSupportedPrivileges(path));
    accessControlManager.setPolicy(path,acl);
    session.save();
    session.logout();
    context.bind("repository",repository);
    return context;
  }
  protected Repository getRepository(){
    return repository;
  }
}
