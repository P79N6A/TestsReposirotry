public class NettyHttpProducerThrowExceptionOnFailureTest extends BaseNettyTest {
  @Test public void testFailWithoutException() throws Exception {
    try {
      String out=template().requestBody("netty4-http:http://localhost:{{port}}/fail?throwExceptionOnFailure=false",null,String.class);
      assertEquals("Fail",out);
    }
 catch (    Throwable t) {
      t.printStackTrace();
      fail("Should not throw an exception");
    }
  }
  @Test public void testFailWithException() throws Exception {
    try {
      template().requestBody("netty4-http:http://localhost:{{port}}/fail?throwExceptionOnFailure=true",null,String.class);
      fail("Should throw an exception");
    }
 catch (    Throwable t) {
      NettyHttpOperationFailedException cause=(NettyHttpOperationFailedException)t.getCause();
      assertEquals(404,cause.getStatusCode());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4-http:http://localhost:{{port}}/fail").setHeader(Exchange.HTTP_RESPONSE_CODE).constant(404).transform(constant("Fail"));
      }
    }
;
  }
}
