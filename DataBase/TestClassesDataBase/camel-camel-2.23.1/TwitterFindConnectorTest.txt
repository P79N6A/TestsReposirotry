@RunWith(SpringRunner.class) @DirtiesContext @SpringBootApplication @SpringBootTest(properties={"spring.main.banner-mode=off"},classes={TwitterFindConnectorTest.TestConfiguration.class}) public class TwitterFindConnectorTest {
  @Autowired private CamelContext camelContext;
  @Test public void testConfiguration() throws Exception {
    List<TwitterSearchEndpoint> endpoints=camelContext.getEndpoints().stream().filter(TwitterSearchEndpoint.class::isInstance).map(TwitterSearchEndpoint.class::cast).collect(Collectors.toList());
    Assert.assertFalse(endpoints.isEmpty());
    endpoints.forEach(endpoint -> {
      if (endpoint.getEndpointUri().startsWith("twitter-search-twitter-find-component:")) {
        Assert.assertEquals("cameltest",endpoint.getKeywords());
        Assert.assertTrue(endpoint.isFilterOld());
      }
 else       if (endpoint.getEndpointUri().startsWith("twitter-search-tw-find1:")) {
        Assert.assertEquals("camelsearchtest1",endpoint.getKeywords());
        Assert.assertFalse(endpoint.isFilterOld());
      }
 else       if (endpoint.getEndpointUri().startsWith("twitter-search-tw-find2:")) {
        Assert.assertEquals("camelsearchtest2",endpoint.getKeywords());
        Assert.assertFalse(endpoint.isFilterOld());
      }
 else {
        Assert.fail("Unexpected endpoint " + endpoint.getEndpointUri());
      }
    }
);
    Assert.assertNotEquals(camelContext.getComponent("twitter-find-component"),camelContext.getComponent("twitter-search-tw-find1"));
    Assert.assertNotEquals(camelContext.getComponent("twitter-find-component"),camelContext.getComponent("twitter-search-tw-find2"));
    Assert.assertNotEquals(camelContext.getComponent("twitter-search-tw-find1"),camelContext.getComponent("twitter-search-tw-find2"));
  }
@Configuration public static class TestConfiguration {
    @Bean public RouteBuilder routeBuilder(){
      return new RouteBuilder(){
        @Override public void configure() throws Exception {
          from("twitter-find?filterOld=true").noAutoStartup().to("mock:result");
          from("tw-find1?keywords=camelsearchtest1&filterOld=false").noAutoStartup().to("mock:result");
          from("tw-find2?keywords=camelsearchtest2&filterOld=false").noAutoStartup().to("mock:result");
        }
      }
;
    }
  }
}
