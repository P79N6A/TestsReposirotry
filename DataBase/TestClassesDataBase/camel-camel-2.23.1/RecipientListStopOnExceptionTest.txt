/** 
 * @version 
 */
public class RecipientListStopOnExceptionTest extends ContextTestSupport {
  @Test public void testRecipientListStopOnException() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(1);
    getMockEndpoint("mock:c").expectedMessageCount(0);
    try {
      template.sendBodyAndHeader("direct:start","Hello World","foo","direct:a,direct:b,direct:c");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      assertIsInstanceOf(CamelExchangeException.class,e.getCause());
      assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause());
      assertEquals("Damn",e.getCause().getCause().getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").recipientList(header("foo")).stopOnException().to("mock:result");
        from("direct:a").to("mock:a");
        from("direct:b").to("mock:b").throwException(new IllegalArgumentException("Damn"));
        from("direct:c").to("mock:c");
      }
    }
;
  }
}
