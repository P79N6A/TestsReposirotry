public class HystrixRouteConfigTest extends CamelTestSupport {
  @Test public void testHystrix() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testGroupKeyAndThreadPoolKeyConfigFlagsDoNotScrapHystrixConfiguration() throws Exception {
    RouteBuilder rb=new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").hystrix().hystrixConfiguration().groupKey("test1").metricsHealthSnapshotIntervalInMilliseconds(99999).end().groupKey("test2").to("log:hello").end();
      }
    }
;
    rb.configure();
    RouteDefinition route=rb.getRouteCollection().getRoutes().get(0);
    assertEquals(HystrixDefinition.class,route.getOutputs().get(0).getClass());
    HystrixConfigurationDefinition config=((HystrixDefinition)route.getOutputs().get(0)).getHystrixConfiguration();
    assertEquals("test2",config.getGroupKey());
    assertEquals(99999,config.getMetricsHealthSnapshotIntervalInMilliseconds().intValue());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").hystrix().hystrixConfiguration().groupKey("myCamelApp").requestLogEnabled(false).corePoolSize(5).end().to("direct:foo").onFallback().transform().constant("Fallback message").end().to("mock:result");
        from("direct:foo").transform().constant("Bye World");
      }
    }
;
  }
}
