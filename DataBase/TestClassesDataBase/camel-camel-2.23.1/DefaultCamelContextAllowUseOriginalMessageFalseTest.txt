public class DefaultCamelContextAllowUseOriginalMessageFalseTest extends ContextTestSupport {
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.setAllowUseOriginalMessage(false);
    return context;
  }
  @Test public void testUseOriginalMessageFalse() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:result").expectedHeaderReceived("HasOriginal","false");
    template.sendBody("direct:start","World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").transform().simple("Bye ${body}").process(new OriginalMessageProcessor()).to("mock:result");
      }
    }
;
  }
}
