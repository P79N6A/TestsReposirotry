/** 
 * @version 
 */
public class DualManagedThreadPoolProfileTest extends ManagementTestSupport {
  @Test public void testManagedThreadPool() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=threadpools,name=\"threads1(threads)\"");
    Integer corePoolSize=(Integer)mbeanServer.getAttribute(on,"CorePoolSize");
    assertEquals(5,corePoolSize.intValue());
    Integer maxPoolSize=(Integer)mbeanServer.getAttribute(on,"MaximumPoolSize");
    assertEquals(15,maxPoolSize.intValue());
    String id=(String)mbeanServer.getAttribute(on,"Id");
    assertEquals("threads1",id);
    String source=(String)mbeanServer.getAttribute(on,"SourceId");
    assertEquals("threads",source);
    String route=(String)mbeanServer.getAttribute(on,"RouteId");
    assertEquals("route1",route);
    String profile=(String)mbeanServer.getAttribute(on,"ThreadPoolProfileId");
    assertEquals("custom",profile);
    on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=threadpools,name=\"threads2(threads)\"");
    corePoolSize=(Integer)mbeanServer.getAttribute(on,"CorePoolSize");
    assertEquals(5,corePoolSize.intValue());
    maxPoolSize=(Integer)mbeanServer.getAttribute(on,"MaximumPoolSize");
    assertEquals(15,maxPoolSize.intValue());
    id=(String)mbeanServer.getAttribute(on,"Id");
    assertEquals("threads2",id);
    source=(String)mbeanServer.getAttribute(on,"SourceId");
    assertEquals("threads",source);
    route=(String)mbeanServer.getAttribute(on,"RouteId");
    assertEquals("route2",route);
    profile=(String)mbeanServer.getAttribute(on,"ThreadPoolProfileId");
    assertEquals("custom",profile);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        ThreadPoolProfile profile=new ThreadPoolProfile("custom");
        profile.setPoolSize(5);
        profile.setMaxPoolSize(15);
        profile.setKeepAliveTime(25L);
        profile.setMaxQueueSize(250);
        profile.setRejectedPolicy(ThreadPoolRejectedPolicy.Abort);
        context.getExecutorServiceManager().registerThreadPoolProfile(profile);
        from("direct:start").threads().executorServiceRef("custom").to("mock:result");
        from("direct:foo").threads().executorServiceRef("custom").to("mock:foo");
      }
    }
;
  }
}
