/** 
 * Testing the ssl configuration
 */
@RunWith(SpringRunner.class) @SpringBootApplication @DirtiesContext @ContextConfiguration(classes={JettyHttpComponentAutoConfiguration9.class,CamelAutoConfiguration.class}) @SpringBootTest(properties={"camel.ssl.config.cert-alias=web","camel.ssl.config.key-managers.key-password=changeit","camel.ssl.config.key-managers.key-store.resource=/keystore.p12","camel.ssl.config.key-managers.key-store.password=changeit","camel.ssl.config.key-managers.key-store.type=PKCS12","camel.ssl.config.trust-managers.key-store.resource=/cacerts","camel.ssl.config.trust-managers.key-store.password=changeit","camel.ssl.config.trust-managers.key-store.type=jks","camel.component.jetty.use-global-ssl-context-parameters=true","camel.component.http4.use-global-ssl-context-parameters=true"}) @Ignore("Bug in https4 spring-boot configuration") public class Jetty9SSLTest {
  private static int port;
  @Autowired private ProducerTemplate producerTemplate;
  @BeforeClass public static void init(){
    port=AvailablePortFinder.getNextAvailable();
  }
  @Test public void testEndpoint() throws Exception {
    String result=producerTemplate.requestBody("https4://localhost:" + port,null,String.class);
    assertEquals("Hello",result);
  }
  @Test public void testEndpointWithJettyProducer() throws Exception {
    String result=producerTemplate.requestBody("jetty:https://localhost:" + port,null,String.class);
    assertEquals("Hello",result);
  }
@Component public static class TestRoutes extends RouteBuilder {
    @Override public void configure() throws Exception {
      from("jetty:https://localhost:" + port).transform().constant("Hello");
    }
  }
}
