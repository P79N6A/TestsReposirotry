/** 
 * @version 
 */
public class AsyncEndpointJmsTXWireTapTest extends CamelSpringTestSupport {
  private static String beforeThreadName;
  private static String afterThreadName;
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/jms/tx/JmsTransacted-context.xml");
  }
  @Test public void testAsyncEndpointOK() throws Exception {
    getMockEndpoint("mock:tap").expectedBodiesReceived("Hi Camel");
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye Camel");
    template.sendBody("activemq:queue:inbox","Hello Camel");
    assertMockEndpointsSatisfied();
    assertFalse("Should use different threads",beforeThreadName.equalsIgnoreCase(afterThreadName));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.addComponent("async",new MyAsyncComponent());
        from("activemq:queue:inbox").transacted().process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            assertTrue("Exchange should be transacted",exchange.isTransacted());
          }
        }
).to("async:bye:camel").wireTap("direct:tap").to("mock:result");
        from("direct:tap").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            beforeThreadName=Thread.currentThread().getName();
            assertFalse("Exchange should NOT be transacted",exchange.isTransacted());
          }
        }
).to("async:hi:camel").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            afterThreadName=Thread.currentThread().getName();
          }
        }
).to("mock:tap");
      }
    }
;
  }
}
