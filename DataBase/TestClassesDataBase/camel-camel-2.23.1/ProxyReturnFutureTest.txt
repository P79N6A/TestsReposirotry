/** 
 * @version 
 */
public class ProxyReturnFutureTest extends ContextTestSupport {
  @Test public void testFutureEcho() throws Exception {
    Echo service=ProxyHelper.createProxy(context.getEndpoint("direct:echo"),Echo.class);
    Future<String> future=service.asText(4);
    log.info("Got future");
    log.info("Waiting for future to be done ...");
    String reply=future.get(5,TimeUnit.SECONDS);
    assertEquals("Four",reply);
  }
  @Test public void testFutureEchoCallTwoTimes() throws Exception {
    Echo service=ProxyHelper.createProxy(context.getEndpoint("direct:echo"),Echo.class);
    Future<String> future=service.asText(4);
    log.info("Got future");
    log.info("Waiting for future to be done ...");
    assertEquals("Four",future.get(5,TimeUnit.SECONDS));
    future=service.asText(5);
    log.info("Got future");
    log.info("Waiting for future to be done ...");
    assertEquals("Four",future.get(5,TimeUnit.SECONDS));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:echo").delay(250).transform().constant("Four");
      }
    }
;
  }
public interface Echo {
    Future<String> asText(    int number);
  }
}
