/** 
 * @version 
 */
public class JmsInOutSynchronousFalseTest extends CamelTestSupport {
  private static String beforeThreadName;
  private static String afterThreadName;
  private String url="activemq:queue:in?synchronous=false";
  @Test public void testSynchronous() throws Exception {
    String reply=template.requestBody("direct:start","Hello World",String.class);
    assertEquals("Bye World",reply);
    assertFalse("Should use different threads",beforeThreadName.equalsIgnoreCase(afterThreadName));
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:start").to("log:before").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            beforeThreadName=Thread.currentThread().getName();
          }
        }
).to(url).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            afterThreadName=Thread.currentThread().getName();
          }
        }
).to("log:after").to("mock:result");
        from("activemq:queue:in").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("Bye World");
          }
        }
);
      }
    }
;
  }
}
