/** 
 * Test the ftps component over SSL (explicit) and without client authentication
 * @version 
 */
public class FileToFtpsWithFtpClientConfigRefTest extends FtpsServerExplicitSSLWithoutClientAuthTestSupport {
  private String getFtpUrl(  boolean in){
    return "ftps://admin@localhost:" + getPort() + "/tmp2/camel?password=admin&consumer.initialDelay=2000&ftpClient=#ftpsClient"+ (in ? "In" : "")+ "&disableSecureDataChannelDefaults=true&delete=true";
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("ftpsClient",new FTPSClient("SSL"));
    jndi.bind("ftpsClientIn",new FTPSClient("SSL"));
    return jndi;
  }
  @Test public void testFromFileToFtp() throws Exception {
    if (!canTest) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(2);
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("file:src/main/data?noop=true").log("Putting ${file:name}").to(getFtpUrl(false));
        from(getFtpUrl(true)).to("mock:result");
      }
    }
;
  }
}
