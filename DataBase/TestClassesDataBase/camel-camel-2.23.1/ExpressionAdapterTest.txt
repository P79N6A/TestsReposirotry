/** 
 * @version 
 */
public class ExpressionAdapterTest extends ContextTestSupport {
private static class MyExpression extends ExpressionAdapter {
    protected String assertionFailureMessage(    Exchange exchange){
      return "foo";
    }
    @SuppressWarnings("unchecked") public <T>T evaluate(    Exchange exchange,    Class<T> type){
      String in=exchange.getIn().getBody(String.class);
      if ("Kabom".equals(in)) {
        return null;
      }
      return (T)in;
    }
  }
  @Test public void testExpressionAdapter() throws Exception {
    MyExpression my=new MyExpression();
    Exchange e=new DefaultExchange(context);
    e.getIn().setBody("bar");
    my.assertMatches("bar",e);
  }
  @Test public void testExpressionAdapterFail() throws Exception {
    MyExpression my=new MyExpression();
    Exchange e=new DefaultExchange(context);
    e.getIn().setBody("Kabom");
    try {
      my.assertMatches("damn",e);
      fail("Should have thrown exception");
    }
 catch (    AssertionError ae) {
      assertTrue(ae.getMessage().contains("foo"));
    }
  }
}
