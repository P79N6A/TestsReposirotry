public class SplitterWithScannerIoExceptionTest extends ContextTestSupport {
  @Test public void testSplitterStreamingWithError() throws Exception {
    if (isPlatform("aix") || isJavaVendor("ibm")) {
      return;
    }
    getMockEndpoint("mock:a").expectedMinimumMessageCount(250);
    getMockEndpoint("mock:b").expectedMessageCount(0);
    getMockEndpoint("mock:b").setSleepForEmptyTest(3000);
    getMockEndpoint("mock:error").expectedMessageCount(1);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:error"));
        from("file://src/test/data?fileName=crm.sample.csv&noop=true&charset=UTF-8").split(body().tokenize("\n")).streaming().to("mock:a").end().to("mock:b");
      }
    }
;
  }
}
