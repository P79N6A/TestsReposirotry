public class MultiPartFormTest extends BaseUndertowTest {
  private RequestEntity createMultipartRequestEntity() throws Exception {
    File file=new File("src/main/resources/META-INF/NOTICE.txt");
    Part[] parts={new StringPart("comment","A binary file of some kind"),new FilePart(file.getName(),file)};
    return new MultipartRequestEntity(parts,new HttpMethodParams());
  }
  @Test public void testSendMultiPartForm() throws Exception {
    HttpClient httpclient=new HttpClient();
    PostMethod httppost=new PostMethod("http://localhost:" + getPort() + "/test");
    httppost.setRequestEntity(createMultipartRequestEntity());
    int status=httpclient.executeMethod(httppost);
    assertEquals("Get a wrong response status",200,status);
    String result=httppost.getResponseBodyAsString();
    assertEquals("Get a wrong result","A binary file of some kind",result);
  }
  @Test public void testSendMultiPartFormFromCamelHttpComponnent() throws Exception {
    String result=template.requestBody("http://localhost:" + getPort() + "/test",createMultipartRequestEntity(),String.class);
    assertEquals("Get a wrong result","A binary file of some kind",result);
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("undertow://http://localhost:{{port}}/test").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            Message in=exchange.getIn();
            assertEquals("Get a wrong attachement size",1,in.getAttachments().size());
            DataHandler data=in.getAttachment("NOTICE.txt");
            assertNotNull("Should get the DataHandler NOTICE.txt",data);
            assertEquals("Got the wrong name","NOTICE.txt",data.getName());
            assertTrue("We should get the data from the DataHandler",data.getDataSource().getInputStream().available() > 0);
            Map body=in.getBody(Map.class);
            assertEquals("A binary file of some kind",body.get("comment"));
            assertEquals(data,body.get("NOTICE.txt"));
            exchange.getOut().setBody(in.getHeader("comment"));
          }
        }
);
      }
    }
;
  }
}
