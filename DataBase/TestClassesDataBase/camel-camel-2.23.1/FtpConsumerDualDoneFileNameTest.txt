/** 
 * @version 
 */
public class FtpConsumerDualDoneFileNameTest extends FtpServerTestSupport {
  protected String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/done?password=admin&initialDelay=0&delay=100&stepwise=false";
  }
  @Test public void testTwoDoneFile() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceivedInAnyOrder("Hello World","Bye World");
    template.sendBodyAndHeader(getFtpUrl() + "&doneFileName=${file:name}.ready","Hello World",Exchange.FILE_NAME,"hello.txt");
    template.sendBodyAndHeader(getFtpUrl() + "&doneFileName=${file:name}.ready","Bye World",Exchange.FILE_NAME,"bye.txt");
    assertMockEndpointsSatisfied();
  }
  @Test public void testOneDoneFileMissing() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBodyAndHeader(getFtpUrl() + "&doneFileName=${file:name}.ready","Hello World",Exchange.FILE_NAME,"hello.txt");
    template.sendBodyAndHeader(getFtpUrl(),"Bye World",Exchange.FILE_NAME,"bye.txt");
    Thread.sleep(1000);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(getFtpUrl() + "&doneFileName=${file:name}.ready").convertBodyTo(String.class).to("mock:result");
      }
    }
;
  }
}
