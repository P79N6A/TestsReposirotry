public class OnExceptionLoadBalancerDoubleIssueTest extends ContextTestSupport {
  @Test public void testNotDouble() throws Exception {
    getMockEndpoint("mock:error").expectedBodiesReceived("A","D","G");
    getMockEndpoint("mock:error2").expectedBodiesReceived("B","E");
    getMockEndpoint("mock:error3").expectedBodiesReceived("C","F");
    template.sendBody("direct:foo","A");
    template.sendBody("direct:foo","B");
    template.sendBody("direct:bar","C");
    template.sendBody("direct:bar","D");
    template.sendBody("direct:foo","E");
    template.sendBody("direct:bar","F");
    template.sendBody("direct:foo","G");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Exception.class).handled(true).loadBalance().roundRobin().id("round").to("mock:error","mock:error2","mock:error3").end();
        from("direct:foo").throwException(new IllegalArgumentException("Forced"));
        from("direct:bar").throwException(new IllegalArgumentException("Also Forced"));
      }
    }
;
  }
}
