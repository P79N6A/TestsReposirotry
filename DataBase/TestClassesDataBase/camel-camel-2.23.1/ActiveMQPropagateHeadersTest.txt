/** 
 * @version 
 */
public class ActiveMQPropagateHeadersTest extends CamelTestSupport {
  protected Object expectedBody="<time>" + new Date() + "</time>";
  protected ActiveMQQueue replyQueue=new ActiveMQQueue("test.reply.queue");
  protected String correlationID="ABC-123";
  protected String messageType=getClass().getName();
  @Test public void testForwardingAMessageAcrossJMSKeepingCustomJMSHeaders() throws Exception {
    MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    resultEndpoint.expectedBodiesReceived(expectedBody);
    AssertionClause firstMessageExpectations=resultEndpoint.message(0);
    firstMessageExpectations.header("cheese").isEqualTo(123);
    firstMessageExpectations.header("JMSReplyTo").isEqualTo(replyQueue);
    firstMessageExpectations.header("JMSCorrelationID").isEqualTo(correlationID);
    firstMessageExpectations.header("JMSType").isEqualTo(messageType);
    template.sendBodyAndHeader("activemq:test.a",expectedBody,"cheese",123);
    resultEndpoint.assertIsSatisfied();
    List<Exchange> list=resultEndpoint.getReceivedExchanges();
    Exchange exchange=list.get(0);
    String replyTo=exchange.getIn().getHeader("JMSReplyTo",String.class);
    assertEquals("ReplyTo",replyQueue.toString(),replyTo);
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:test.a").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            Message in=exchange.getIn();
            in.setHeader("JMSReplyTo",replyQueue);
            in.setHeader("JMSCorrelationID",correlationID);
            in.setHeader("JMSType",messageType);
          }
        }
).to("activemq:test.b?preserveMessageQos=true");
        from("activemq:test.b").to("mock:result");
      }
    }
;
  }
}
