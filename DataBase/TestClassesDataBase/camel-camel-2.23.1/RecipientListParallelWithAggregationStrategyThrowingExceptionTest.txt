/** 
 * Tests the issue stated in <a href="https://issues.apache.org/jira/browse/CAMEL-10272">CAMEL-10272</a>.
 */
public class RecipientListParallelWithAggregationStrategyThrowingExceptionTest extends ContextTestSupport {
  @Test public void testAggregationTimeExceptionWithParallelProcessing() throws Exception {
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(1);
    getMockEndpoint("mock:end").expectedMessageCount(0);
    getMockEndpoint("mock:dead").expectedMessageCount(1);
    template.sendBodyAndHeader("direct:start","Hello World","recipients","mock:a,mock:b");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:dead"));
        from("direct:start").recipientList(header("recipients")).aggregationStrategy(new MyAggregateBean()).parallelProcessing().stopOnAggregateException().shareUnitOfWork().end().to("mock:end");
      }
    }
;
  }
public static class MyAggregateBean implements AggregationStrategy {
    public Exchange aggregate(    Exchange oldExchange,    Exchange newExchange){
      throw new RuntimeException("Simulating a runtime exception thrown from the aggregation strategy");
    }
  }
}
