@Ignore("Must be manually tested. Provide your own projectId and token!") public class Queue2QueueExample extends CamelTestSupport {
  private static final String PAYLOAD="{some:text, number:#}";
  private String projectId="myIronMQproject";
  private String token="myIronMQToken";
  private final String ironQueue1="ironmq:queue1?projectId=" + projectId + "&token="+ token+ "&ironMQCloud=https://mq-aws-eu-west-1-1.iron.io";
  private final String ironQueue2="ironmq:queue2?projectId=" + projectId + "&token="+ token+ "&ironMQCloud=https://mq-aws-eu-west-1-1.iron.io";
  @Before public void clean(){
    template.sendBodyAndHeader(ironQueue1,"fo",IronMQConstants.OPERATION,IronMQConstants.CLEARQUEUE);
    template.sendBodyAndHeader(ironQueue2,"fo",IronMQConstants.OPERATION,IronMQConstants.CLEARQUEUE);
  }
  @Test public void testSendMessagesBetweenQueues() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(100);
    for (int i=1; i <= 100; i++) {
      String payloadToSend=PAYLOAD.replace("#","" + i);
      template.sendBody("direct:start",payloadToSend);
    }
    assertMockEndpointsSatisfied(2,TimeUnit.MINUTES);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to(ironQueue1);
        from(ironQueue1).to(ironQueue2);
        from(ironQueue2).log("got message : ${body}").to("mock:result");
      }
    }
;
  }
}
