/** 
 * @version 
 */
public class SplitPropertiesFileIssueTest extends ContextTestSupport {
  private String body="foo=1" + LS + "bar=2"+ LS+ "bar=3"+ LS+ "foo=4";
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/file/splitprop");
    super.setUp();
  }
  @Test public void testSplitPropertiesFileAndRoute() throws Exception {
    MockEndpoint foo=getMockEndpoint("mock:foo");
    foo.expectedBodiesReceived("[foo=1, foo=4]");
    foo.expectedFileExists("target/file/splitprop/done/myprop.txt",body);
    MockEndpoint bar=getMockEndpoint("mock:bar");
    bar.expectedBodiesReceived("[bar=2, bar=3]");
    template.sendBodyAndHeader("file://target/file/splitprop",body,Exchange.FILE_NAME,"myprop.txt");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/file/splitprop?initialDelay=0&delay=10&move=done").convertBodyTo(String.class).split(new MyCustomExpression()).recipientList(header("myCustomDestination"));
      }
    }
;
  }
private static class MyCustomExpression implements Expression {
    @SuppressWarnings("unchecked") public <T>T evaluate(    Exchange exchange,    Class<T> type){
      Message msg1=exchange.getIn().copy();
      Message msg2=exchange.getIn().copy();
      List<Message> answer=new ArrayList<>();
      answer.add(msg1);
      answer.add(msg2);
      List<String> data1=new ArrayList<>();
      List<String> data2=new ArrayList<>();
      String body=exchange.getIn().getBody(String.class);
      String[] lines=body.split(LS);
      for (      String line : lines) {
        if (line.startsWith("foo")) {
          data1.add(line);
        }
 else {
          data2.add(line);
        }
      }
      msg1.setBody(data1.toString());
      msg1.setHeader("myCustomDestination","mock:foo");
      msg2.setBody(data2.toString());
      msg2.setHeader("myCustomDestination","mock:bar");
      return (T)answer;
    }
  }
}
