public class AggregationStrategyBeanAdapterAllowNullTest extends ContextTestSupport {
  private MyUserAppender appender=new MyUserAppender();
  @Test public void testAggregate() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start",new User("Claus"));
    template.sendBody("direct:start",new User("James"));
    template.sendBody("direct:start",new User("Jonathan"));
    assertMockEndpointsSatisfied();
    List<?> names=getMockEndpoint("mock:result").getReceivedExchanges().get(0).getIn().getBody(List.class);
    assertEquals("Claus",names.get(0));
    assertEquals("James",names.get(1));
    assertEquals("Jonathan",names.get(2));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(constant(true),AggregationStrategies.beanAllowNull(appender,"addUsers")).completionSize(3).to("mock:result");
      }
    }
;
  }
public static final class MyUserAppender {
    public List<String> addUsers(    List<String> names,    User user){
      if (names == null) {
        names=new ArrayList<>();
      }
      names.add(user.getName());
      return names;
    }
  }
  /** 
 * We support annotations on the types.
 */
@XmlRootElement(name="user") public static final class User {
    private String name;
    public User(    String name){
      this.name=name;
    }
    public String getName(){
      return name;
    }
  }
}
