/** 
 * @version 
 */
public class FtpConsumerLocalWorkDirectoryTest extends FtpServerTestSupport {
  protected String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/lwd/?password=admin&localWorkDirectory=target/lwd&noop=true";
  }
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/lwd");
    deleteDirectory("target/out");
    super.setUp();
    prepareFtpServer();
  }
  private void prepareFtpServer() throws Exception {
    Endpoint endpoint=context.getEndpoint(getFtpUrl());
    Exchange exchange=endpoint.createExchange();
    exchange.getIn().setBody("Hello World");
    exchange.getIn().setHeader(Exchange.FILE_NAME,"hello.txt");
    Producer producer=endpoint.createProducer();
    producer.start();
    producer.process(exchange);
    producer.stop();
  }
  @Test public void testLocalWorkDirectory() throws Exception {
    NotifyBuilder notify=new NotifyBuilder(context).whenDone(1).create();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    mock.expectedMessageCount(1);
    context.startRoute("myRoute");
    assertMockEndpointsSatisfied();
    assertMockEndpointsSatisfied();
    assertTrue(notify.matchesMockWaitTime());
    File out=new File("target/out/hello.txt");
    assertTrue("file should exists",out.exists());
    assertEquals("Hello World",IOConverter.toString(out,null));
    File local=new File("target/lwd/hello.txt");
    assertFalse("Local work file should have been deleted",local.exists());
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(getFtpUrl()).routeId("myRoute").noAutoStartup().process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            File body=exchange.getIn().getBody(File.class);
            assertNotNull(body);
            assertTrue("Local work file should exists",body.exists());
            assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath());
          }
        }
).to("mock:result","file://target/out");
      }
    }
;
  }
}
