@Ignore("As the refelection can't tell the paramenter name from SEI without annonation, " + "CXF cannot send a meaningful request for unwrapped message." + "We need to use the annontated SEI for testing") public class CxfSimpleRouterWithUnwrappedStyleTest extends CxfSimpleRouterTest {
  private String routerEndpointURI="cxf://" + getRouterAddress() + "?"+ SERVICE_CLASS+ "&wrappedStyle=false";
  private String serviceEndpointURI="cxf://" + getServiceAddress() + "?"+ SERVICE_CLASS+ "&wrappedStyle=false";
  protected void configureFactory(  ServerFactoryBean svrBean){
    svrBean.getServiceFactory().setWrapped(false);
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        errorHandler(noErrorHandler());
        from(routerEndpointURI).to("log:org.apache.camel?level=DEBUG").to(serviceEndpointURI);
      }
    }
;
  }
  protected HelloService getCXFClient() throws Exception {
    ClientProxyFactoryBean proxyFactory=new ClientProxyFactoryBean();
    ClientFactoryBean clientBean=proxyFactory.getClientFactoryBean();
    clientBean.setAddress(getRouterAddress());
    clientBean.setServiceClass(HelloService.class);
    clientBean.getServiceFactory().setWrapped(false);
    HelloService client=(HelloService)proxyFactory.create();
    return client;
  }
  @Test public void testOnwayInvocation() throws Exception {
  }
  @Test public void testInvokingServiceFromCXFClient() throws Exception {
    HelloService client=getCXFClient();
    Boolean result=client.echoBoolean(true);
    assertEquals("we should get the right answer from router",true,result);
    String str=client.echo("hello world");
    assertEquals("we should get the right answer from router","echo hello world",str);
  }
}
