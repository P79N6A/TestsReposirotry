/** 
 * Testing the Hystrix configuration hierarchy
 */
@RunWith(SpringRunner.class) @SpringBootApplication @DirtiesContext @ContextConfiguration(classes=HystrixHierarchicalConfiguration.class) @SpringBootTest(properties={"debug=false","camel.hystrix.enabled=true","camel.hystrix.group-key=global-group-key","camel.hystrix.thread-pool-key=global-thread-key","camel.hystrix.core-pool-size=10"}) public class HystrixHierarchicalConfigurationTest {
  @Autowired CamelContext camelContext;
  @Test public void testConfiguration() throws Exception {
    RouteDefinition routeDefinition=camelContext.getRouteDefinition("hystrix-route");
    HystrixDefinition hystrixDefinition=findHystrixDefinition(routeDefinition);
    Assert.assertNotNull(hystrixDefinition);
    HystrixProcessorFactory factory=new HystrixProcessorFactory();
    HystrixConfigurationDefinition config=factory.buildHystrixConfiguration(camelContext,hystrixDefinition);
    Assert.assertEquals("local-conf-group-key",config.getGroupKey());
    Assert.assertEquals("global-thread-key",config.getThreadPoolKey());
    Assert.assertEquals(new Integer(5),config.getCorePoolSize());
  }
  private HystrixDefinition findHystrixDefinition(  RouteDefinition routeDefinition) throws Exception {
    return routeDefinition.getOutputs().stream().filter(HystrixDefinition.class::isInstance).map(HystrixDefinition.class::cast).findFirst().orElseThrow(() -> new IllegalStateException("Unable to find a HystrixDefinition"));
  }
}
