public class JdbcAggregationRepositoryRecoverExistingTest extends AbstractJdbcAggregationTestSupport {
  @Override void configureJdbcAggregationRepository(){
    repo.setReturnOldExchange(true);
    repo.setUseRecovery(true);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
      }
    }
;
  }
  @Test public void testExisting() throws Exception {
    repo.start();
    Exchange exchange1=new DefaultExchange(context);
    exchange1.getIn().setBody("counter:1");
    Exchange actual=repo.add(context,"foo",exchange1);
    assertEquals(null,actual);
    repo.remove(context,"foo",exchange1);
    String id=exchange1.getExchangeId();
    repo.stop();
    Thread.sleep(1000);
    repo.start();
    actual=repo.get(context,"foo");
    assertNull(actual);
    actual=repo.recover(context,id);
    assertNotNull(actual);
    assertEquals("counter:1",actual.getIn().getBody());
    repo.stop();
  }
}
