/** 
 * @version 
 */
public class MethodFilterTest extends ContextTestSupport {
  @Test public void testSendMatchingMessage() throws Exception {
    String body="<person name='James' city='London'/>";
    getMockEndpoint("mock:result").expectedBodiesReceived(body);
    template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,body,"foo","London");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSendNotMatchingMessage() throws Exception {
    String body="<person name='Hiram' city='Tampa'/>";
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,body,"foo","Tampa");
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").filter().method("myBean","matches").to("mock:result");
      }
    }
;
  }
  @Override protected Context createJndiContext() throws Exception {
    Context context=super.createJndiContext();
    context.bind("myBean",new MyBean());
    return context;
  }
public static class MyBean {
    public boolean matches(    @Header("foo") String location){
      return "London".equals(location);
    }
  }
}
