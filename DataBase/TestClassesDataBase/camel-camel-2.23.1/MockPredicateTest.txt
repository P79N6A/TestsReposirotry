/** 
 * @version 
 */
public class MockPredicateTest extends ContextTestSupport {
  @Test public void testMockPredicate() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:foo");
    mock.message(0).predicate().header("foo");
    mock.expectedMessageCount(1);
    template.sendBodyAndHeader("direct:start","Hello World","foo","bar");
    assertMockEndpointsSatisfied();
  }
  @Test public void testMockPredicateAsParameter() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:foo");
    mock.message(0).predicate(PredicateBuilder.isNotNull(header("foo")));
    mock.expectedMessageCount(1);
    template.sendBodyAndHeader("direct:start","Hello World","foo","bar");
    assertMockEndpointsSatisfied();
  }
  @Test public void testOutBodyType() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:foo");
    mock.message(0).outBody(String.class).isEqualTo("Bye World");
    mock.expectedMessageCount(1);
    template.send("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
        exchange.getOut().setBody("Bye World");
      }
    }
);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("mock:foo");
      }
    }
;
  }
}
