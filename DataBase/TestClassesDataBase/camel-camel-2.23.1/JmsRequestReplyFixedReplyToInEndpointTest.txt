/** 
 * @version 
 */
public class JmsRequestReplyFixedReplyToInEndpointTest extends CamelTestSupport {
  @Test public void testJmsRequestReplyTempReplyTo() throws Exception {
    Exchange reply=template.request("activemq:queue:foo",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("World");
      }
    }
);
    assertEquals("Hello World",reply.getOut().getBody());
    assertTrue("Should have headers",reply.getOut().hasHeaders());
    String replyTo=reply.getOut().getHeader("JMSReplyTo",String.class);
    assertTrue("Should be a temp queue",replyTo.startsWith("temp-queue"));
  }
  @Test public void testJmsRequestReplyFixedReplyToInEndpoint() throws Exception {
    Exchange reply=template.request("activemq:queue:foo?replyTo=bar",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("World");
      }
    }
);
    assertEquals("Hello World",reply.getOut().getBody());
    assertTrue("Should have headers",reply.getOut().hasHeaders());
    assertEquals("queue://bar",reply.getOut().getHeader("JMSReplyTo",String.class));
  }
  @Test public void testJmsRequestReplyFixedReplyToInEndpointTwoMessages() throws Exception {
    Exchange reply=template.request("activemq:queue:foo?replyTo=bar",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("World");
      }
    }
);
    assertEquals("Hello World",reply.getOut().getBody());
    assertTrue("Should have headers",reply.getOut().hasHeaders());
    assertEquals("queue://bar",reply.getOut().getHeader("JMSReplyTo",String.class));
    reply=template.request("activemq:queue:foo?replyTo=bar",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Moon");
      }
    }
);
    assertEquals("Hello Moon",reply.getOut().getBody());
    assertTrue("Should have headers",reply.getOut().hasHeaders());
    assertEquals("queue://bar",reply.getOut().getHeader("JMSReplyTo",String.class));
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:foo").transform(body().prepend("Hello "));
      }
    }
;
  }
}
