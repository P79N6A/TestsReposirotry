@RunWith(Arquillian.class) public class RouteBuildersWithSameContextNameTest {
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClasses(FirstCamelContextEndpointInjectRoute.class,FirstCamelContextEventConsumingRoute.class,FirstCamelContextEventProducingRoute.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void verifyCamelContexts(  @Any Instance<CamelContext> contexts){
    assertThat("Context instances are incorrect!",contexts,contains(hasProperty("name",is(equalTo("first")))));
  }
  @Test public void verifyCamelContext(  @ContextName("first") CamelContext first){
    assertThat("Context name is incorrect!",first.getName(),is(equalTo("first")));
    assertThat("Number of routes is incorrect!",first.getRoutes().size(),is(equalTo(3)));
    assertThat("Context status is incorrect!",first.getStatus(),is(equalTo(ServiceStatus.Started)));
  }
  @Test public void sendMessageToInbound(  @Uri("direct:inbound") ProducerTemplate inbound,  @Uri("mock:outbound") MockEndpoint outbound) throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("test");
    outbound.expectedHeaderReceived("context","first");
    inbound.sendBody("test");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
}
