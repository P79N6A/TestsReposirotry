/** 
 * @version 
 */
public class HttpClientProxyTest extends BaseJettyTest {
  @Test public void testHttpClientNoProxyOk() throws Exception {
    String out=template.requestBody("direct:cool","World",String.class);
    assertEquals("Hello World",out);
  }
  @Test public void testHttpClientNoProxyException() throws Exception {
    try {
      template.requestBody("direct:cool","Kaboom",String.class);
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      HttpOperationFailedException cause=assertIsInstanceOf(HttpOperationFailedException.class,e.getCause());
      assertEquals(500,cause.getStatusCode());
      assertNotNull(cause.getResponseBody());
      assertTrue(cause.getResponseBody().contains("MyAppException"));
    }
  }
  @Test public void testHttpClientProxyOk() throws Exception {
    MyCoolService proxy=new ProxyBuilder(context).endpoint("direct:cool").build(MyCoolService.class);
    String out=proxy.hello("World");
    assertEquals("Hello World",out);
  }
  @Test public void testHttpClientProxyException() throws Exception {
    MyCoolService proxy=new ProxyBuilder(context).endpoint("direct:cool").build(MyCoolService.class);
    try {
      proxy.hello("Kaboom");
      fail("Should have thrown exception");
    }
 catch (    UndeclaredThrowableException e) {
      HttpOperationFailedException cause=assertIsInstanceOf(HttpOperationFailedException.class,e.getCause());
      assertEquals(500,cause.getStatusCode());
      assertNotNull(cause.getResponseBody());
      assertTrue(cause.getResponseBody().contains("MyAppException"));
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:cool").to("http://localhost:{{port}}/myapp/myservice");
        from("jetty:http://localhost:{{port}}/myapp/myservice").bean(MyCoolServiceBean.class);
      }
    }
;
  }
}
