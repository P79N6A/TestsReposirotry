public class RestErrorTest {
  RestError error=new RestError("errorCode","message",Arrays.asList("field1","field2"));
  @Test public void shouldDeserializeFromJson() throws Exception {
    final ObjectMapper objectMapper=JsonUtils.createObjectMapper();
    final ObjectReader reader=objectMapper.readerFor(RestError.class);
    final RestError gotWithErrorCode=reader.<RestError>readValue("{\"errorCode\":\"errorCode\",\"message\":\"message\",\"fields\":[ \"field1\",\"field2\" ]}");
    assertEquals(gotWithErrorCode,error);
    final RestError gotWithStatusCode=reader.<RestError>readValue("{\"statusCode\":\"errorCode\",\"message\":\"message\",\"fields\":[ \"field1\",\"field2\" ]}");
    assertEquals(gotWithStatusCode,error);
  }
  @Test public void shouldDeserializeFromXml(){
    final XStream xStream=XStreamUtils.createXStream(RestError.class);
    xStream.alias("errors",RestError.class);
    final RestError gotWithErrorCode=(RestError)xStream.fromXML("<errors><fields>field1</fields><fields>field2</fields><message>message</message><errorCode>errorCode</errorCode></errors>");
    assertEquals(gotWithErrorCode,error);
    final RestError gotWithStatusCode=(RestError)xStream.fromXML("<errors><fields>field1</fields><fields>field2</fields><message>message</message><statusCode>errorCode</statusCode></errors>");
    assertEquals(gotWithStatusCode,error);
  }
}
