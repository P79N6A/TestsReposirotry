/** 
 * @version 
 */
public class JmsRequestReplyManualReplyTest extends CamelTestSupport {
  private static volatile String tempName;
  private CountDownLatch latch=new CountDownLatch(1);
  private JmsTemplate jms;
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Consume(uri="activemq:queue:foo") public void doSomething(  @Header("JMSReplyTo") Destination jmsReplyTo,  @Body String body) throws Exception {
    assertEquals("Hello World",body);
    String endpointName="activemq:" + jmsReplyTo.toString();
    endpointName=endpointName.replaceAll("//",":");
    tempName=endpointName;
    latch.countDown();
    template.sendBody(tempName,"Bye World");
  }
  @Test public void testManualRequestReply() throws Exception {
    context.start();
    jms.send(new ActiveMQQueue("foo"),new MessageCreator(){
      public Message createMessage(      Session session) throws JMSException {
        TextMessage msg=session.createTextMessage("Hello World");
        msg.setJMSReplyTo(new ActiveMQQueue("bar"));
        return msg;
      }
    }
);
    assertTrue(latch.await(5,TimeUnit.SECONDS));
    String reply=consumer.receiveBody(tempName,5000,String.class);
    assertEquals("Bye World",reply);
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    jms=new JmsTemplate(connectionFactory);
    return camelContext;
  }
}
