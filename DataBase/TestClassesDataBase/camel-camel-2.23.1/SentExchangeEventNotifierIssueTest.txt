public class SentExchangeEventNotifierIssueTest extends ContextTestSupport {
  private MyNotifier notifier=new MyNotifier();
private class MyNotifier extends EventNotifierSupport {
    private int counter;
    @Override public void notify(    EventObject event) throws Exception {
      counter++;
    }
    @Override public boolean isEnabled(    EventObject event){
      return event instanceof ExchangeSentEvent;
    }
    public int getCounter(){
      return counter;
    }
    public void reset(){
      counter=0;
    }
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.getManagementStrategy().addEventNotifier(notifier);
    return context;
  }
  @Test public void testExchangeSentNotifier() throws Exception {
    notifier.reset();
    String out=template.requestBody("direct:start","Hello World",String.class);
    assertEquals("I was here",out);
    assertEquals(1,notifier.getCounter());
  }
  @Test public void testExchangeSentNotifierExchange() throws Exception {
    notifier.reset();
    Exchange out=template.request("direct:start",new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
      }
    }
);
    assertEquals("I was here",out.getIn().getBody());
    assertEquals(1,notifier.getCounter());
  }
  @Test public void testExchangeSentNotifierManualExchange() throws Exception {
    notifier.reset();
    Exchange exchange=new DefaultExchange(context);
    exchange.getIn().setBody("Hello World");
    template.send("direct:start",exchange);
    assertEquals("I was here",exchange.getIn().getBody());
    assertEquals(1,notifier.getCounter());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setBody("I was here");
          }
        }
);
      }
    }
;
  }
}
