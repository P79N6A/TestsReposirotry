public class BlueprintComponentResolverTest extends TestSupport {
  @Test public void testOsgiResolverFindComponentFallbackTest() throws Exception {
    SimpleRegistry registry=new SimpleRegistry();
    registry.put("allstar-component",new SampleComponent(true));
    CamelContext camelContext=new DefaultCamelContext(registry);
    BlueprintComponentResolver resolver=new BlueprintComponentResolver(null);
    Component component=resolver.resolveComponent("allstar",camelContext);
    assertNotNull("We should find the super component",component);
    assertTrue("We should get the super component here",component instanceof SampleComponent);
  }
  @Test public void testOsgiResolverFindLanguageDoubleFallbackTest() throws Exception {
    SimpleRegistry registry=new SimpleRegistry();
    registry.put("allstar",new SampleComponent(false));
    registry.put("allstar-component",new SampleComponent(true));
    CamelContext camelContext=new DefaultCamelContext(registry);
    BlueprintComponentResolver resolver=new BlueprintComponentResolver(null);
    Component component=resolver.resolveComponent("allstar",camelContext);
    assertNotNull("We should find the super component",component);
    assertTrue("We should get the super component here",component instanceof SampleComponent);
    assertFalse("We should NOT find the fallback component",((SampleComponent)component).isFallback());
  }
private static class SampleComponent implements Component {
    private boolean fallback;
    SampleComponent(    boolean fallback){
      this.fallback=fallback;
    }
    @Override public void setCamelContext(    CamelContext camelContext){
      throw new UnsupportedOperationException("Should not be called");
    }
    @Override public CamelContext getCamelContext(){
      throw new UnsupportedOperationException("Should not be called");
    }
    @Override public Endpoint createEndpoint(    String uri) throws Exception {
      throw new UnsupportedOperationException("Should not be called");
    }
    @Override public boolean useRawUri(){
      throw new UnsupportedOperationException("Should not be called");
    }
    @Override public EndpointConfiguration createConfiguration(    String uri) throws Exception {
      throw new UnsupportedOperationException("Should not be called");
    }
    @Override public ComponentConfiguration createComponentConfiguration(){
      throw new UnsupportedOperationException("Should not be called");
    }
    public boolean isFallback(){
      return fallback;
    }
    public void setFallback(    boolean fallback){
      this.fallback=fallback;
    }
  }
}
