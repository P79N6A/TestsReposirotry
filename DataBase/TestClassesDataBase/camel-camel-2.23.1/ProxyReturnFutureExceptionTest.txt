/** 
 * @version 
 */
public class ProxyReturnFutureExceptionTest extends ContextTestSupport {
  @Test public void testFutureEchoException() throws Exception {
    Echo service=ProxyHelper.createProxy(context.getEndpoint("direct:echo"),Echo.class);
    Future<String> future=service.asText(4);
    log.info("Got future");
    log.info("Waiting for future to be done ...");
    try {
      assertEquals("Four",future.get(5,TimeUnit.SECONDS));
      fail("Should have thrown exception");
    }
 catch (    ExecutionException e) {
      IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
      assertEquals("Forced",cause.getMessage());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:echo").delay(250).throwException(new IllegalArgumentException("Forced"));
      }
    }
;
  }
public interface Echo {
    Future<String> asText(    int number);
  }
}
