/** 
 * Unit testing FTP configured using spring bean
 */
@ContextConfiguration public class SpringFtpEndpointTest extends AbstractJUnit4SpringContextTests {
  private static int ftpPort=AvailablePortFinder.getNextAvailable(20125);
static {
    System.setProperty("SpringFtpEndpointTest.ftpPort",Integer.toString(ftpPort));
  }
  protected FtpServer ftpServer;
  @Autowired protected ProducerTemplate template;
  @EndpointInject(ref="myFTPEndpoint") protected Endpoint inputFTP;
  @EndpointInject(uri="mock:result") protected MockEndpoint result;
  @Test public void testFtpEndpointAsSpringBean() throws Exception {
    result.expectedBodiesReceived("Hello World");
    template.sendBodyAndHeader(inputFTP,"Hello World",Exchange.FILE_NAME,"hello.txt");
    result.assertIsSatisfied();
  }
  @Before public void setUp() throws Exception {
    initFtpServer();
    ftpServer.start();
  }
  @After public void tearDown() throws Exception {
    ftpServer.stop();
    ftpServer=null;
  }
  protected void initFtpServer() throws Exception {
    FtpServerFactory serverFactory=new FtpServerFactory();
    File file=new File("src/test/resources/users.properties");
    UserManager uman=new PropertiesUserManager(new ClearTextPasswordEncryptor(),file,"admin");
    serverFactory.setUserManager(uman);
    NativeFileSystemFactory fsf=new NativeFileSystemFactory();
    fsf.setCreateHome(true);
    serverFactory.setFileSystem(fsf);
    ListenerFactory factory=new ListenerFactory();
    factory.setPort(ftpPort);
    serverFactory.addListener("default",factory.createListener());
    ftpServer=serverFactory.createServer();
  }
}
