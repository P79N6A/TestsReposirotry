public class ASN1DataFormatWithStreamTest extends CamelTestSupport {
  private ASN1DataFormat asn1;
  private String fileName="src/test/resources/asn1_data/SMS_SINGLE.tt";
  private void baseASN1DataFormatWithStreamTest(  String mockEnpointName,  String directEndpointName) throws Exception {
    getMockEndpoint(mockEnpointName).expectedMessageCount(1);
    File testFile=new File(fileName);
    ByteArrayInputStream bais=ASN1DataFormatTestHelper.reteriveByteArrayInputStream(testFile);
    template.sendBody(directEndpointName,bais);
    List<Exchange> exchanges=getMockEndpoint(mockEnpointName).getExchanges();
    assertTrue(exchanges.size() == 1);
    for (    Exchange exchange : exchanges) {
      assertTrue(exchange.getIn().getBody() instanceof byte[]);
      assertTrue(Arrays.equals(FileUtils.readFileToByteArray(testFile),exchange.getIn().getBody(byte[].class)));
    }
    assertMockEndpointsSatisfied();
  }
  @Test public void testUnmarshalReturnOutputStream() throws Exception {
    baseASN1DataFormatWithStreamTest("mock:unmarshal","direct:unmarshal");
  }
  @Test public void testUnmarshalReturnOutputStreamDsl() throws Exception {
    baseASN1DataFormatWithStreamTest("mock:unmarshaldsl","direct:unmarshaldsl");
  }
  @Test public void testUnmarshalMarshalReturnOutputStream() throws Exception {
    baseASN1DataFormatWithStreamTest("mock:marshal","direct:unmarshalthenmarshal");
  }
  @Test public void testUnmarshalMarshalReturnOutputStreamDsl() throws Exception {
    baseASN1DataFormatWithStreamTest("mock:marshaldsl","direct:unmarshalthenmarshaldsl");
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        asn1=new ASN1DataFormat();
        from("direct:unmarshal").unmarshal(asn1).to("mock:unmarshal");
        from("direct:unmarshalthenmarshal").unmarshal(asn1).marshal(asn1).to("mock:marshal");
        from("direct:unmarshaldsl").unmarshal().asn1().to("mock:unmarshaldsl");
        from("direct:unmarshalthenmarshaldsl").unmarshal().asn1().marshal().asn1().to("mock:marshaldsl");
      }
    }
;
  }
}
