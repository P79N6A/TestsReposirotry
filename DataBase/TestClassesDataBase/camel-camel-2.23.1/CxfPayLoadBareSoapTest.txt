public class CxfPayLoadBareSoapTest extends CamelTestSupport {
  private static final int PORT=AvailablePortFinder.getNextAvailable();
  private static final String ORIGINAL_URL=String.format("http://localhost:%s/original/Service",PORT);
  private static final String PROXY_URL=String.format("http://localhost:%s/proxy/Service",PORT);
  private static final BareSoapServiceImpl IMPLEMENTATION=new BareSoapServiceImpl();
  @BeforeClass public static void startService(){
    Endpoint.publish(ORIGINAL_URL,IMPLEMENTATION);
  }
  protected String getRouterEndpointURI(){
    return String.format("cxf:%s?dataFormat=PAYLOAD&wsdlURL=classpath:bare.wsdl",PROXY_URL);
  }
  protected String getServiceEndpointURI(){
    return String.format("cxf:%s?dataFormat=PAYLOAD&wsdlURL=classpath:bare.wsdl",ORIGINAL_URL);
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from(getRouterEndpointURI()).to(getServiceEndpointURI());
      }
    }
;
  }
  @Test public void testInvokeProxyService(){
    JaxWsProxyFactoryBean factory=new JaxWsProxyFactoryBean();
    factory.setServiceClass(BareSoapService.class);
    factory.setAddress(PROXY_URL);
    factory.setBus(BusFactory.newInstance().createBus());
    BareSoapService client=(BareSoapService)factory.create();
    client.doSomething();
    assertEquals("Proxied service should have been invoked once",1,IMPLEMENTATION.invocations.get());
  }
@WebService @SOAPBinding(parameterStyle=SOAPBinding.ParameterStyle.BARE) public interface BareSoapService {
    void doSomething();
  }
public static class BareSoapServiceImpl implements BareSoapService {
    private AtomicInteger invocations=new AtomicInteger(0);
    public void doSomething(){
      invocations.incrementAndGet();
    }
  }
}
