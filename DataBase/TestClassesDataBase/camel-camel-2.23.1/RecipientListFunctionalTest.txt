public class RecipientListFunctionalTest extends ContextTestSupport {
  @Test public void testRecipientList() throws Exception {
    MockEndpoint x=getMockEndpoint("mock:x");
    x.expectedBodiesReceived("answer");
    x.expectedHeaderReceived("OnPrepare",true);
    MockEndpoint y=getMockEndpoint("mock:y");
    y.expectedBodiesReceived("answer");
    y.expectedHeaderReceived("OnPrepare",true);
    MockEndpoint z=getMockEndpoint("mock:z");
    z.expectedBodiesReceived("answer");
    z.expectedHeaderReceived("OnPrepare",true);
    template.sendBodyAndHeader("direct:a","answer","Endpoints","mock:x,mock:y,mock:z");
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:a").recipientList().message(m -> m.getHeader("Endpoints",String.class).split(",")).onPrepare().message(m -> m.setHeader("OnPrepare",true));
      }
    }
;
  }
}
