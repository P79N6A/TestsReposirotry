public class AhcProduce500Test extends BaseAhcTest {
  @Test public void testAhcProduce() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    try {
      template.sendBody("direct:start",null);
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      AhcOperationFailedException cause=assertIsInstanceOf(AhcOperationFailedException.class,e.getCause());
      assertNotNull(cause);
      assertEquals(500,cause.getStatusCode());
      assertEquals("Server Error",cause.getStatusText());
      assertEquals("Does not work",cause.getResponseBody());
      assertEquals(false,cause.isRedirectError());
      assertNotNull(cause.getResponseHeaders());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to(getAhcEndpointUri()).to("mock:result");
        from(getTestServerEndpointUri()).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,500);
            exchange.getOut().setBody("Does not work");
          }
        }
);
      }
    }
;
  }
}
