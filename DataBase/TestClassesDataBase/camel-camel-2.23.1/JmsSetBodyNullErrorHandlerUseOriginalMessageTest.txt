public class JmsSetBodyNullErrorHandlerUseOriginalMessageTest extends CamelTestSupport {
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createPersistentConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Test public void testSetNull() throws Exception {
    getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    getMockEndpoint("mock:bar").message(0).body().isNull();
    template.sendBody("activemq:queue:foo","Hello World");
    assertMockEndpointsSatisfied();
    String body=consumer.receiveBody("activemq:queue:dead",5000,String.class);
    assertEquals("Hello World",body);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("activemq:queue:dead").useOriginalMessage());
        from("activemq:queue:foo").to("mock:foo").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setBody(null);
          }
        }
).to("mock:bar").throwException(new IllegalArgumentException("Forced"));
      }
    }
;
  }
}
