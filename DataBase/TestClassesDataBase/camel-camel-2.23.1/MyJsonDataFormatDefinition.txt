public static class MyJsonDataFormatDefinition extends DataFormatDefinition {
  public static DataFormat getDataFormat(  RouteContext routeContext,  DataFormatDefinition type,  String ref){
    return new MyJsonDataFormatDefinition().createDataFormat();
  }
  public DataFormat getDataFormat(  RouteContext routeContext){
    return createDataFormat();
  }
  private DataFormat createDataFormat(){
    return new DataFormat(){
      @Override public void marshal(      Exchange exchange,      Object graph,      OutputStream stream) throws Exception {
        assertEquals(graph.toString(),XOrderResponse.class,graph.getClass());
        LOG.info("DataFormat: XOrderResponse -> JSON");
        stream.write("{name:XOrderResponse}".getBytes());
      }
      @Override public Object unmarshal(      Exchange exchange,      InputStream stream) throws Exception {
        BufferedReader reader=new BufferedReader(new InputStreamReader(stream));
        String line="";
        String input="";
        while ((line=reader.readLine()) != null) {
          input+=line;
        }
        reader.close();
        assertEquals("{name:XOrder}",input);
        LOG.info("DataFormat: JSON -> XOrder");
        return new XOrder();
      }
    }
;
  }
}
