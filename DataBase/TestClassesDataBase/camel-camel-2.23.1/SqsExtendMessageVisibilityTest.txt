public class SqsExtendMessageVisibilityTest extends CamelTestSupport {
  private static final int TIMEOUT=4;
  private static final String RECEIPT_HANDLE="0NNAq8PwvXsyZkR6yu4nQ07FGxNmOBWi5";
  @EndpointInject(uri="mock:result") private MockEndpoint mock;
  private AmazonSQSClientMock clientMock;
  @Test public void longReceiveExtendsMessageVisibility() throws Exception {
    this.mock.expectedMessageCount(1);
    this.mock.whenAnyExchangeReceived(new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        Thread.sleep(TIMEOUT * 1500L);
      }
    }
);
    Message message=new Message();
    message.setBody("Message 1");
    message.setMD5OfBody("6a1559560f67c5e7a7d5d838bf0272ee");
    message.setMessageId("f6fb6f99-5eb2-4be4-9b15-144774141458");
    message.setReceiptHandle(RECEIPT_HANDLE);
    this.clientMock.messages.add(message);
    assertMockEndpointsSatisfied();
    assertTrue("Expected at least one changeMessageVisibility request.",this.clientMock.changeMessageVisibilityRequests.size() >= 1);
    for (    ChangeMessageVisibilityRequest req : this.clientMock.changeMessageVisibilityRequests) {
      assertEquals("https://queue.amazonaws.com/541925086079/MyQueue",req.getQueueUrl());
      assertEquals(RECEIPT_HANDLE,req.getReceiptHandle());
      Integer expectedTimeout=new Integer(6);
      assertEquals(expectedTimeout,req.getVisibilityTimeout());
    }
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    this.clientMock=new AmazonSQSClientMock();
    registry.bind("amazonSQSClient",this.clientMock);
    return registry;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient&extendMessageVisibility=true&visibilityTimeout=" + TIMEOUT).to("mock:result");
      }
    }
;
  }
}
