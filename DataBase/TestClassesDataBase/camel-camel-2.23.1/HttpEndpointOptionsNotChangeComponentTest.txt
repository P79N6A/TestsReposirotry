/** 
 * Having custom endpoint options should not override or change any component configured options.
 * @version 
 */
public class HttpEndpointOptionsNotChangeComponentTest extends CamelTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    HttpComponent http=context.getComponent("http4",HttpComponent.class);
    http.setHttpBinding(new MyBinding());
    http.start();
    return context;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("other",new MyOtherBinding());
    jndi.bind("myStrategy",new MyHeaderFilterStrategy());
    return jndi;
  }
  @Test public void testDoNotMessWithComponent() throws Exception {
    HttpEndpoint end=context.getEndpoint("http4://www.google.com",HttpEndpoint.class);
    assertIsInstanceOf(MyBinding.class,end.getHttpBinding());
    HttpEndpoint end2=context.getEndpoint("http4://www.google.com?httpBinding=#other",HttpEndpoint.class);
    assertIsInstanceOf(MyOtherBinding.class,end2.getHttpBinding());
    HttpEndpoint end3=context.getEndpoint("http4://www.google.com",HttpEndpoint.class);
    assertIsInstanceOf(MyBinding.class,end3.getHttpBinding());
    HttpEndpoint end4=context.getEndpoint("http4://www.google.com?headerFilterStrategy=#myStrategy",HttpEndpoint.class);
    assertIsInstanceOf(MyHeaderFilterStrategy.class,end4.getHeaderFilterStrategy());
  }
private static class MyBinding extends DefaultHttpBinding {
  }
private static class MyOtherBinding extends DefaultHttpBinding {
  }
private static class MyHeaderFilterStrategy extends HttpHeaderFilterStrategy {
  }
}
