public class CxfPayLoadSoapHeaderViaCamelHeaderTest extends CxfPayLoadSoapHeaderTestAbstract {
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            CallerIDHeaderType callerId=new CallerIDHeaderType();
            callerId.setName("Willem");
            callerId.setPhoneNumber("108");
            SoapHeader soapHeader=new SoapHeader(new QName("http://camel.apache.org/pizza/types","CallerIDHeader"),callerId,new JAXBDataBinding(CallerIDHeaderType.class));
            List<SoapHeader> soapHeaders=new ArrayList<>(1);
            soapHeaders.add(soapHeader);
            exchange.getIn().setHeader(Header.HEADER_LIST,soapHeaders);
          }
        }
).to(getServiceEndpointURI()).to("mock:end");
      }
    }
;
  }
  @Test public void testCreateSoapHeaderViaCamelHeaderForSoapRequest() throws Exception {
    String body="<OrderRequest xmlns=\"http://camel.apache.org/pizza/types\"><Toppings><Topping>topping_value</Topping></Toppings></OrderRequest>";
    MockEndpoint mock=getMockEndpoint("mock:end");
    mock.expectedMessageCount(1);
    sendBody("direct:start",body);
    assertMockEndpointsSatisfied();
    Document message=mock.getExchanges().get(0).getIn().getMandatoryBody(Document.class);
    Element root=message.getDocumentElement();
    NodeList nodeList=root.getElementsByTagName("MinutesUntilReady");
    assertEquals(1,nodeList.getLength());
    Element elMinutesUntilReady=(Element)nodeList.item(0);
    assertEquals("208",elMinutesUntilReady.getTextContent());
  }
}
