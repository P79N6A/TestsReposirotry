/** 
 * @version 
 */
public class SetHeaderInDoCatchIssueTest extends ContextTestSupport {
  @Test public void testSuccess(){
    Exchange exchange=template.request("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
      }
    }
);
    assertEquals("CamsResponse",exchange.getOut().getHeader("Status"));
  }
  @Test public void testExchangeTimedOutException(){
    Exchange exchange=template.request("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("ExchangeTimedOutException");
      }
    }
);
    assertEquals("TimeOut",exchange.getOut().getHeader("Status"));
  }
  @Test public void testException(){
    Exchange exchange=template.request("direct:start",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Exception");
      }
    }
);
    assertEquals("ExceptionGeneral",exchange.getOut().getHeader("Status"));
  }
  protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=new JndiRegistry(createJndiContext());
    registry.bind("A",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        log.info("A headers " + exchange.getIn().getHeaders());
      }
    }
);
    registry.bind("B",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        log.info("B headers " + exchange.getIn().getHeaders());
        if ("ExchangeTimedOutException".equals(exchange.getIn().getBody(String.class))) {
          throw new ExchangeTimedOutException(exchange,1);
        }
 else         if ("Exception".equals(exchange.getIn().getBody(String.class))) {
          throw new Exception();
        }
      }
    }
);
    registry.bind("C",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        log.info("C headers " + exchange.getIn().getHeaders());
      }
    }
);
    return registry;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.setTracing(true);
        from("direct:start").doTry().to("A").setHeader("CamelJmsDestinationName",constant("queue:outQueue")).inOut("B").setHeader("Status",constant("CamsResponse")).doCatch(ExchangeTimedOutException.class).setHeader("Status",constant("TimeOut")).doCatch(Exception.class).setHeader("Status",constant("ExceptionGeneral")).end().to("C").transform(body());
      }
    }
;
  }
}
