/** 
 * @version 
 */
public class JmsMultipleConsumersTest extends CamelTestSupport {
  @Test public void testMultipleConsumersTopic() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jms:topic:foo").to("mock:foo");
        from("direct:start").to("mock:result");
        from("jms:topic:foo").to("mock:bar");
      }
    }
);
    context.start();
    Thread.sleep(2000);
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBody("jms:topic:foo","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testMultipleConsumersQueue() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jms:queue:foo").to("mock:result");
        from("direct:start").to("mock:result");
        from("jms:queue:foo").to("mock:result");
      }
    }
);
    context.start();
    getMockEndpoint("mock:result").expectedMessageCount(2);
    template.sendBody("jms:queue:foo","Hello World");
    template.sendBody("jms:queue:foo","Bye World");
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("jms",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
}
