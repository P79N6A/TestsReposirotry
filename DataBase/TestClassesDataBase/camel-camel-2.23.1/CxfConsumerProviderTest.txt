public class CxfConsumerProviderTest extends CamelTestSupport {
  protected static final String REQUEST_MESSAGE="<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"test/service\">" + "<soapenv:Header/><soapenv:Body><ser:ping/></soapenv:Body></soapenv:Envelope>";
  protected static final String RESPONSE_MESSAGE_BEGINE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">" + "<soap:Body><pong xmlns=\"test/service\"";
  protected static final String RESPONSE_MESSAGE_END="/></soap:Body></soap:Envelope>";
  protected static final String RESPONSE="<pong xmlns=\"test/service\"/>";
  protected final String simpleEndpointAddress="http://localhost:" + CXFTestSupport.getPort1() + "/"+ getClass().getSimpleName()+ "/test";
  protected final String simpleEndpointURI="cxf://" + simpleEndpointAddress + "?serviceClass=org.apache.camel.component.cxf.ServiceProvider";
  @Override public boolean isCreateCamelContextPerClass(){
    return true;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        errorHandler(noErrorHandler());
        from(getFromEndpointUri()).process(new Processor(){
          public void process(          final Exchange exchange){
            Message in=exchange.getIn();
            Node node=in.getBody(Node.class);
            assertNotNull(node);
            XmlConverter xmlConverter=new XmlConverter();
            exchange.getOut().setBody(xmlConverter.toSource(RESPONSE));
          }
        }
);
      }
    }
;
  }
  @Test public void testInvokingServiceFromHttpCompnent() throws Exception {
    String response=template.requestBody(simpleEndpointAddress,REQUEST_MESSAGE,String.class);
    assertTrue("Get a wrong response ",response.startsWith(RESPONSE_MESSAGE_BEGINE));
    assertTrue("Get a wrong response ",response.endsWith(RESPONSE_MESSAGE_END));
    try {
      template.requestBody(simpleEndpointAddress,null,String.class);
      fail("Excpetion to get exception here");
    }
 catch (    Exception ex) {
    }
    response=template.requestBody(simpleEndpointAddress,REQUEST_MESSAGE,String.class);
    assertTrue("Get a wrong response ",response.startsWith(RESPONSE_MESSAGE_BEGINE));
    assertTrue("Get a wrong response ",response.endsWith(RESPONSE_MESSAGE_END));
  }
  protected String getFromEndpointUri(){
    return simpleEndpointURI;
  }
}
