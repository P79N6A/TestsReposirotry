/** 
 * Base class of tests which allocates ports
 */
public class BaseUndertowTest extends CamelTestSupport {
  private static volatile int port;
  private static volatile int port2;
  private final AtomicInteger counter=new AtomicInteger(1);
  @BeforeClass public static void initPort() throws Exception {
    port=AvailablePortFinder.getNextAvailable(8000);
    port2=AvailablePortFinder.getNextAvailable(9000);
  }
  protected static int getPort(){
    return port;
  }
  protected static int getPort2(){
    return port2;
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.addComponent("properties",new PropertiesComponent("ref:prop"));
    return context;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    Properties prop=new Properties();
    prop.setProperty("port","" + getPort());
    prop.setProperty("port2","" + getPort2());
    jndi.bind("prop",prop);
    return jndi;
  }
  protected int getNextPort(){
    return AvailablePortFinder.getNextAvailable(port + counter.getAndIncrement());
  }
  protected int getNextPort(  int startWithPort){
    return AvailablePortFinder.getNextAvailable(startWithPort);
  }
}
