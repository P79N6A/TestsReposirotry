public class NettyHttpTwoRoutesBootstrapConfigurationTest extends BaseNettyTest {
  private NettyServerBootstrapConfiguration bootstrapConfiguration;
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    bootstrapConfiguration=new NettyServerBootstrapConfiguration();
    bootstrapConfiguration.setBacklog(200);
    bootstrapConfiguration.setConnectTimeout(5000);
    bootstrapConfiguration.setKeepAlive(true);
    bootstrapConfiguration.setWorkerCount(4);
    jndi.bind("myBootstrapOptions",bootstrapConfiguration);
    return jndi;
  }
  @Test public void testTwoRoutes() throws Exception {
    getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:bar").expectedBodiesReceived("Hello Camel");
    String out=template.requestBody("netty4-http:http://localhost:{{port}}/foo","Hello World",String.class);
    assertEquals("Bye World",out);
    out=template.requestBody("netty4-http:http://localhost:{{port}}/bar","Hello Camel",String.class);
    assertEquals("Bye Camel",out);
    assertMockEndpointsSatisfied();
    NettyHttpConsumer consumer=(NettyHttpConsumer)context.getRoute("foo").getConsumer();
    assertEquals(200,consumer.getConfiguration().getBacklog());
    assertEquals(4,consumer.getConfiguration().getWorkerCount());
    assertEquals(true,consumer.getConfiguration().isKeepAlive());
    assertEquals(5000,consumer.getConfiguration().getConnectTimeout());
    consumer=(NettyHttpConsumer)context.getRoute("bar").getConsumer();
    assertEquals(200,consumer.getConfiguration().getBacklog());
    assertEquals(4,consumer.getConfiguration().getWorkerCount());
    assertEquals(true,consumer.getConfiguration().isKeepAlive());
    assertEquals(5000,consumer.getConfiguration().getConnectTimeout());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("netty4-http:http://0.0.0.0:{{port}}/foo?bootstrapConfiguration=#myBootstrapOptions").routeId("foo").to("mock:foo").transform().constant("Bye World");
        from("netty4-http:http://0.0.0.0:{{port}}/bar?bootstrapConfiguration=#myBootstrapOptions").routeId("bar").to("mock:bar").transform().constant("Bye Camel");
      }
    }
;
  }
}
