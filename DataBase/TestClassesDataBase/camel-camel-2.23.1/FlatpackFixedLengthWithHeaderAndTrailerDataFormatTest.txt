/** 
 * Unit test for fixed length DataFormat.
 */
public class FlatpackFixedLengthWithHeaderAndTrailerDataFormatTest extends CamelTestSupport {
  @Test public void testUnmarshal() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:unmarshal");
    mock.expectedMessageCount(1);
    mock.message(0).body().isInstanceOf(DataSetList.class);
    mock.message(0).header("MyFirstHeader").isEqualTo("1");
    mock.message(0).header("MySecondHeader").isEqualTo("2");
    String data=IOConverter.toString(new File("src/test/data/headerandtrailer/PEOPLE-HeaderAndTrailer.txt"),null);
    template.sendBody("direct:unmarshal",data);
    assertMockEndpointsSatisfied();
    DataSetList list=mock.getExchanges().get(0).getIn().getBody(DataSetList.class);
    assertEquals(6,list.size());
    Map<?,?> header=list.get(0);
    assertEquals("HBT",header.get("INDICATOR"));
    assertEquals("20080817",header.get("DATE"));
    Map<?,?> row=list.get(1);
    assertEquals("JOHN",row.get("FIRSTNAME"));
    Map<?,?> trailer=list.get(5);
    assertEquals("FBT",trailer.get("INDICATOR"));
    assertEquals("SUCCESS",trailer.get("STATUS"));
  }
  public void testMarshalWithDefinition() throws Exception {
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        FlatpackDataFormat df=new FlatpackDataFormat();
        df.setDefinition("PEOPLE-HeaderAndTrailer.pzmap.xml");
        df.setFixed(true);
        from("direct:unmarshal").setHeader("MyFirstHeader",constant("1")).unmarshal(df).setHeader("MySecondHeader",constant("2")).to("mock:unmarshal");
        from("direct:marshal").marshal(df).convertBodyTo(String.class).to("mock:marshal");
      }
    }
;
  }
}
