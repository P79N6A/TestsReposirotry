/** 
 * @version 
 */
public class SpringManagedCustomProcessorTest extends SpringTestSupport {
  @Override protected boolean useJmx(){
    return true;
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/spring/management/SpringManagedCustomProcessorTest.xml");
  }
  protected MBeanServer getMBeanServer(){
    return context.getManagementStrategy().getManagementAgent().getMBeanServer();
  }
  @Test public void testManageCustomProcessor() throws Exception {
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"custom\"");
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedHeaderReceived("foo","hey");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    String foo=(String)mbeanServer.getAttribute(on,"Foo");
    assertEquals("hey",foo);
    mbeanServer.setAttribute(on,new Attribute("Foo","changed"));
    resetMocks();
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedHeaderReceived("foo","changed");
    template.sendBody("direct:start","Bye World");
    assertMockEndpointsSatisfied();
  }
@ManagedResource(description="My Managed Component") public static class MyCustomProcessor implements Processor {
    private String foo="hey";
    @ManagedAttribute(description="Foo is the foo") public String getFoo(){
      return foo;
    }
    @ManagedAttribute(description="Foo is the foo") public void setFoo(    String foo){
      this.foo=foo;
    }
    public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader("foo",getFoo());
    }
  }
}
