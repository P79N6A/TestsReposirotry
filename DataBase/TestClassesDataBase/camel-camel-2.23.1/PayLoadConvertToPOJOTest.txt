public class PayLoadConvertToPOJOTest extends CamelTestSupport {
  protected AbstractXmlApplicationContext applicationContext;
  @BeforeClass public static void setUpSystemProperty(){
    getPort1();
  }
  public static int getPort1(){
    return CXFTestSupport.getPort1();
  }
  @Before public void setUp() throws Exception {
    applicationContext=createApplicationContext();
    super.setUp();
    assertNotNull("Should have created a valid spring context",applicationContext);
  }
  @After public void tearDown() throws Exception {
    IOHelper.close(applicationContext);
    super.tearDown();
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    return SpringCamelContext.springCamelContext(applicationContext);
  }
  @Test public void testClient() throws Exception {
    JaxWsProxyFactoryBean factory=new JaxWsProxyFactoryBean();
    factory.setAddress("http://localhost:" + getPort1() + "/"+ getClass().getSimpleName()+ "/CamelContext/RouterPort");
    factory.setServiceClass(Person.class);
    Person person=factory.create(Person.class);
    GetPerson payload=new GetPerson();
    payload.setPersonId("1234");
    GetPersonResponse reply=person.getPerson(payload);
    assertEquals("Get the wrong person id.","1234",reply.getPersonId());
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("cxf:bean:routerEndpoint?dataFormat=PAYLOAD").streamCaching().process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            GetPerson request=exchange.getIn().getBody(GetPerson.class);
            GetPersonResponse reply=new GetPersonResponse();
            reply.setPersonId(request.getPersonId());
            exchange.getOut().setBody(reply);
          }
        }
);
      }
    }
;
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/converter/PayloadConverterBeans.xml");
  }
}
