/** 
 * Spring based test for the <code>CsvDataFormat</code> demonstrating the usage of the <tt>skipFirstLine</tt> option.
 */
public class CsvUnmarshalSkipFirstLineSpringTest extends CamelSpringTestSupport {
  @EndpointInject(uri="mock:result") private MockEndpoint result;
  @SuppressWarnings("unchecked") @Test public void testCsvUnMarshal() throws Exception {
    result.expectedMessageCount(1);
    template.sendBody("direct:start","OrderId|Item|Amount\n123|Camel in Action|1\n124|ActiveMQ in Action|2");
    assertMockEndpointsSatisfied();
    List<List<String>> body=result.getReceivedExchanges().get(0).getIn().getBody(List.class);
    assertEquals(2,body.size());
    assertEquals("123",body.get(0).get(0));
    assertEquals("Camel in Action",body.get(0).get(1));
    assertEquals("1",body.get(0).get(2));
    assertEquals("124",body.get(1).get(0));
    assertEquals("ActiveMQ in Action",body.get(1).get(1));
    assertEquals("2",body.get(1).get(2));
  }
  @SuppressWarnings("unchecked") @Test public void testCsvUnMarshalSingleLine() throws Exception {
    result.expectedMessageCount(1);
    template.sendBody("direct:start","124|ActiveMQ in Action|2\n123|Camel in Action|1");
    assertMockEndpointsSatisfied();
    List<List<String>> body=result.getReceivedExchanges().get(0).getIn().getBody(List.class);
    assertEquals(1,body.size());
    assertEquals("123",body.get(0).get(0));
    assertEquals("Camel in Action",body.get(0).get(1));
    assertEquals("1",body.get(0).get(2));
  }
  @Test public void testCsvUnMarshalNoLine() throws Exception {
    result.expectedMessageCount(1);
    template.sendBody("direct:start","123|Camel in Action|1\n");
    assertMockEndpointsSatisfied();
    List<?> body=result.getReceivedExchanges().get(0).getIn().getBody(List.class);
    assertEquals(0,body.size());
  }
  @Override protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/csv/CsvUnmarshalSkipFirstLineSpringTest-context.xml");
  }
}
