/** 
 * @version 
 */
public class HttpStreamCacheFileTest extends BaseJettyTest {
  private final String responseBody="12345678901234567890123456789012345678901234567890";
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/cachedir");
    createDirectory("target/cachedir");
    super.setUp();
  }
  @Test public void testStreamCacheToFileShouldBeDeletedInCaseOfResponse() throws Exception {
    String out=template.requestBody("direct:start","Hello World",String.class);
    assertEquals("Bye World",out);
    File file=new File("target/cachedir");
    String[] files=file.list();
    assertEquals("There should be no files",0,files.length);
  }
  @Test public void testStreamCacheToFileShouldBeDeletedInCaseOfException() throws Exception {
    try {
      template.requestBody("direct:start",null,String.class);
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      HttpOperationFailedException hofe=assertIsInstanceOf(HttpOperationFailedException.class,e.getCause());
      String s=context.getTypeConverter().convertTo(String.class,hofe.getResponseBody());
      assertEquals("Response body",responseBody,s);
    }
    File file=new File("target/cachedir");
    String[] files=file.list();
    assertEquals("There should be no files",0,files.length);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.getProperties().put(CachedOutputStream.TEMP_DIR,"target/cachedir");
        context.getProperties().put(CachedOutputStream.THRESHOLD,"16");
        context.setStreamCaching(true);
        from("direct:start").to("http://localhost:{{port}}/myserver");
        from("jetty://http://localhost:{{port}}/myserver").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            if (ObjectHelper.isEmpty(body)) {
              exchange.getOut().setBody(responseBody);
              exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,500);
            }
 else {
              exchange.getOut().setBody("Bye World");
            }
          }
        }
);
      }
    }
;
  }
}
