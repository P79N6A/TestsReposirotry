public class SObjectCompositeTest {
@JsonPropertyOrder({"account__c","contactId__c"}) public static class AccountContactJunction__c extends AbstractDescribedSObjectBase {
    private String account__c;
    private String contactId__c;
    @Override public SObjectDescription description(){
      return new SObjectDescription();
    }
    public String getAccount__c(){
      return account__c;
    }
    public String getContactId__c(){
      return contactId__c;
    }
    public void setAccount__c(    final String account__c){
      this.account__c=account__c;
    }
    public void setContactId__c(    final String contactId__c){
      this.contactId__c=contactId__c;
    }
  }
@JsonPropertyOrder({"Name","BillingStreet","BillingCity","BillingState","Industry"}) public static class TestAccount extends Account {
  }
@JsonPropertyOrder({"LastName","Phone"}) public static class TestContact extends Contact {
  }
  private final SObjectComposite composite;
  public SObjectCompositeTest(){
    composite=new SObjectComposite("38.0",true);
    final Account updateAccount=new TestAccount();
    updateAccount.setName("Salesforce");
    updateAccount.setBillingStreet("Landmark @ 1 Market Street");
    updateAccount.setBillingCity("San Francisco");
    updateAccount.setBillingState("California");
    updateAccount.setIndustry(Account_IndustryEnum.TECHNOLOGY);
    composite.addUpdate("Account","001xx000003DIpcAAG",updateAccount,"UpdatedAccount");
    final Contact newContact=new TestContact();
    newContact.setLastName("John Doe");
    newContact.setPhone("1234567890");
    composite.addCreate(newContact,"NewContact");
    final AccountContactJunction__c junction=new AccountContactJunction__c();
    junction.setAccount__c("001xx000003DIpcAAG");
    junction.setContactId__c("@{NewContact.id}");
    composite.addCreate(junction,"JunctionRecord");
  }
  @Test public void shouldSerializeToJson() throws IOException {
    final String expectedJson=IOUtils.toString(SObjectCompositeTest.class.getResourceAsStream("/org/apache/camel/component/salesforce/api/dto/composite_request_example.json"),StandardCharsets.UTF_8);
    final ObjectMapper mapper=JsonUtils.createObjectMapper().copy().configure(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS,true).configure(SerializationFeature.INDENT_OUTPUT,true);
    final String serialized=mapper.writerFor(SObjectComposite.class).writeValueAsString(composite);
    assertThat(serialized).as("Should serialize as expected by Salesforce").isEqualTo(expectedJson);
  }
}
