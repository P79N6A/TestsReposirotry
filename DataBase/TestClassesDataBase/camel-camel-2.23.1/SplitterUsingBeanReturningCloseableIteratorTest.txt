/** 
 * @version 
 */
public class SplitterUsingBeanReturningCloseableIteratorTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("mySplitter",new MyOtherSplitterBean());
    return jndi;
  }
public static class MyOtherSplitterBean {
    public Iterator<String> split(    Exchange exchange){
      return MyCloseableIterator.getInstance();
    }
  }
  @Test public void testCloseableIterator() throws Exception {
    try {
      template.sendBody("direct:start","Hello,World");
    }
 catch (    CamelExecutionException e) {
      assertTrue("MyCloseableIterator.close() was not invoked",MyCloseableIterator.getInstance().isClosed());
      return;
    }
    fail("Exception should have been thrown");
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").split().method("mySplitter").to("log:foo","mock:result");
      }
    }
;
  }
}
