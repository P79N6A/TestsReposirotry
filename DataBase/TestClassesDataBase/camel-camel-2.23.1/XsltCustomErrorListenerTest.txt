/** 
 */
public class XsltCustomErrorListenerTest extends TestSupport {
  private MyErrorListener listener=new MyErrorListener();
private class MyErrorListener implements ErrorListener {
    private boolean warning;
    private boolean error;
    private boolean fatalError;
    @Override public void warning(    TransformerException exception) throws TransformerException {
      warning=true;
    }
    @Override public void error(    TransformerException exception) throws TransformerException {
      error=true;
    }
    @Override public void fatalError(    TransformerException exception) throws TransformerException {
      fatalError=true;
    }
    public boolean isWarning(){
      return warning;
    }
    public boolean isError(){
      return error;
    }
    public boolean isFatalError(){
      return fatalError;
    }
  }
  @Test public void testErrorListener() throws Exception {
    try {
      SimpleRegistry registry=new SimpleRegistry();
      registry.put("myListener",listener);
      RouteBuilder builder=createRouteBuilder();
      CamelContext context=new DefaultCamelContext(registry);
      context.addRoutes(builder);
      context.start();
      fail("Should have thrown an exception due XSLT file not found");
    }
 catch (    FailedToCreateRouteException e) {
    }
    assertFalse(listener.isWarning());
    assertTrue("My error listener should been invoked",listener.isError());
    assertTrue("My error listener should been invoked",listener.isFatalError());
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("seda:a").to("xslt:org/apache/camel/builder/xml/example-with-errors.xsl?errorListener=#myListener");
      }
    }
;
  }
}
