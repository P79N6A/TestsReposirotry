/** 
 * Basic testing to ensure that the IAMOptimizedAWSS3ClientImplTest class is returning a standard client that is capable of encryption given certain parameters. This client is new to Camel as of 02-15-2018 and enables IAM temporary credentials to improve security.
 */
public class IAMOptimizedAWSS3ClientImplTest {
  private static final int MAX_CONNECTIONS=1;
  private EncryptionMaterials encryptionMaterials=mock(EncryptionMaterials.class);
  @Test public void iamOptimizedAWSS3ClientImplNoEncryption(){
    S3ClientIAMOptimizedImpl iamOptimizedAWSS3Client=new S3ClientIAMOptimizedImpl(getS3ConfigurationNoEncryption(),MAX_CONNECTIONS);
    AmazonS3 s3Client=iamOptimizedAWSS3Client.getS3Client();
    Assert.assertNotNull(s3Client);
    Assert.assertFalse(s3Client instanceof AmazonS3EncryptionClient);
  }
  @Test public void iamOptimizedAWSS3ClientImplUseEncryption(){
    S3ClientIAMOptimizedImpl iamOptimizedAWSS3Client=new S3ClientIAMOptimizedImpl(getS3ConfigurationUseEncryption(),MAX_CONNECTIONS);
    AmazonS3 s3Client=iamOptimizedAWSS3Client.getS3Client();
    Assert.assertNotNull(s3Client);
    Assert.assertTrue(s3Client instanceof AmazonS3EncryptionClient);
  }
  private S3Configuration getS3ConfigurationNoEncryption(){
    S3Configuration s3Configuration=mock(S3Configuration.class);
    when(s3Configuration.getRegion()).thenReturn("US_EAST_1");
    when(s3Configuration.isUseEncryption()).thenReturn(false);
    return s3Configuration;
  }
  private S3Configuration getS3ConfigurationUseEncryption(){
    S3Configuration s3Configuration=mock(S3Configuration.class);
    when(s3Configuration.getRegion()).thenReturn("US_EAST_1");
    when(s3Configuration.isUseEncryption()).thenReturn(true);
    return s3Configuration;
  }
}
