/** 
 * @version 
 */
public class RestletHttpsWithGlobalSSLContextParametersTest extends RestletTestSupport {
  private static final String REQUEST_MESSAGE="<mail><body>HelloWorld!</body><subject>test</subject><to>x@y.net</to></mail>";
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    KeyStoreParameters ksp=new KeyStoreParameters();
    ksp.setResource(this.getClass().getClassLoader().getResource("jsse/localhost.ks").getPath().toString());
    ksp.setPassword("changeit");
    KeyManagersParameters kmp=new KeyManagersParameters();
    kmp.setKeyPassword("changeit");
    kmp.setKeyStore(ksp);
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    sslContextParameters.setKeyManagers(kmp);
    context.setSSLContextParameters(sslContextParameters);
    ((SSLContextParametersAware)context.getComponent("restlet")).setUseGlobalSslContextParameters(true);
    return context;
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("restlet:https://localhost:" + portNum + "/users/?restletMethods=post").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            assertNotNull(body);
            assertTrue("Get a wrong request message",body.indexOf(REQUEST_MESSAGE) >= 0);
            exchange.getOut().setBody("<status>OK</status>");
            exchange.getOut().setHeader(Exchange.CONTENT_TYPE,"application/xml");
          }
        }
);
      }
    }
;
  }
  @Test public void testPostXml() throws Exception {
    postRequestMessage(REQUEST_MESSAGE);
  }
  private void postRequestMessage(  String message) throws Exception {
    URL trustStoreUrl=this.getClass().getClassLoader().getResource("jsse/localhost.ks");
    System.setProperty("javax.net.ssl.trustStore",trustStoreUrl.toURI().getPath());
    HttpPost post=new HttpPost("https://localhost:" + portNum + "/users/");
    post.addHeader(Exchange.CONTENT_TYPE,"application/xml");
    post.setEntity(new StringEntity(message));
    HttpResponse response=doExecute(post);
    assertHttpResponse(response,200,"application/xml");
    String s=context.getTypeConverter().convertTo(String.class,response.getEntity().getContent());
    assertEquals("<status>OK</status>",s);
  }
}
