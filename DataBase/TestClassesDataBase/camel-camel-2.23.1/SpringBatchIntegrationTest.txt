public class SpringBatchIntegrationTest extends CamelSpringTestSupport {
  @EndpointInject(uri="mock:header") MockEndpoint headerEndpoint;
  @EndpointInject(uri="mock:output") MockEndpoint outputEndpoint;
  @EndpointInject(uri="mock:jobExecutionEventsQueue") MockEndpoint jobExecutionEventsQueueEndpoint;
  String[] inputMessages=new String[]{"foo","bar","baz",null};
  @Before public void setUp() throws Exception {
    super.setUp();
    for (    String message : inputMessages) {
      template.sendBody("seda:inputQueue",message);
    }
  }
  @Test public void shouldEchoInBatch() throws InterruptedException {
    outputEndpoint.expectedBodiesReceived("Echo foo","Echo bar","Echo baz");
    template.sendBody("direct:start","Start batch!");
    outputEndpoint.assertIsSatisfied();
  }
  @Test public void shouldGenerateBatchExecutionEvents() throws InterruptedException {
    jobExecutionEventsQueueEndpoint.setExpectedMessageCount(2);
    template.sendBody("direct:start","Start batch!");
    jobExecutionEventsQueueEndpoint.assertIsSatisfied();
  }
  @Test public void testMessageHeader() throws Exception {
    headerEndpoint.expectedHeaderReceived("header",1);
    template.sendBodyAndHeader(null,"header","1");
    headerEndpoint.assertIsSatisfied();
  }
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/spring/batch/springBatchtestContext.xml");
  }
}
