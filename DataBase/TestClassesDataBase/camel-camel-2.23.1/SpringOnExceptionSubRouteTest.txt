/** 
 * Unit test for onException with the spring DSL.
 */
public class SpringOnExceptionSubRouteTest extends ContextTestSupport {
  @Test public void testOrderOk() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedBodiesReceived("Order OK");
    result.expectedHeaderReceived("orderid","123");
    MockEndpoint error=getMockEndpoint("mock:error");
    error.expectedMessageCount(0);
    MockEndpoint dead=getMockEndpoint("mock:dead");
    dead.expectedMessageCount(0);
    Object out=template.requestBodyAndHeader("direct:start","Order: MacBook Pro","customerid","444");
    assertEquals("Order OK",out);
    assertMockEndpointsSatisfied();
  }
  @Test public void testOrderError() throws Exception {
    MockEndpoint error=getMockEndpoint("mock:error");
    error.expectedBodiesReceived("Order ERROR");
    error.expectedHeaderReceived("orderid","failed");
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(0);
    MockEndpoint dead=getMockEndpoint("mock:dead");
    dead.expectedMessageCount(0);
    Object out=template.requestBodyAndHeader("direct:start","Order: kaboom","customerid","555");
    assertEquals("Order ERROR",out);
    assertMockEndpointsSatisfied();
  }
  @Test public void testOrderErrorWithNoExceptionClause() throws Exception {
    MockEndpoint error=getMockEndpoint("mock:error");
    error.expectedMessageCount(0);
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(0);
    MockEndpoint dead=getMockEndpoint("mock:dead");
    dead.expectedMessageCount(0);
    try {
      template.requestBodyAndHeader("direct:start_with_no_handler","Order: kaboom","customerid","555");
      fail("Should throw an Exception");
    }
 catch (    Exception e) {
      assertEquals("Cannot order: kaboom",e.getCause().getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  protected CamelContext createCamelContext() throws Exception {
    return createSpringCamelContext(this,"/org/apache/camel/spring/processor/onexception/onExceptionSubRouteTest.xml");
  }
}
