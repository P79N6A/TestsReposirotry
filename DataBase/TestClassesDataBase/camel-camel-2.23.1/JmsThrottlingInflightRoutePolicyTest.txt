/** 
 * @version 
 */
public class JmsThrottlingInflightRoutePolicyTest extends CamelTestSupport {
  private int size=200;
  @Test public void testJmsThrottlingInflightRoutePolicy() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(size);
    for (int i=0; i < size; i++) {
      template.sendBody("activemq-sender:queue:foo","Message " + i);
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        ThrottlingInflightRoutePolicy policy=new ThrottlingInflightRoutePolicy();
        policy.setMaxInflightExchanges(10);
        policy.setResumePercentOfMax(50);
        policy.setScope(ThrottlingInflightRoutePolicy.ThrottlingScope.Route);
        from("activemq:queue:foo?concurrentConsumers=20").routePolicy(policy).delay(100).to("log:foo?groupSize=10").to("mock:result");
      }
    }
;
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createPersistentConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentTransacted(connectionFactory));
    camelContext.addComponent("activemq-sender",jmsComponentTransacted(connectionFactory));
    return camelContext;
  }
}
