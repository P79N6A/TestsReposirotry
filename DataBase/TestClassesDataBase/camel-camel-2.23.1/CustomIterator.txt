static class CustomIterator implements Iterator<String>, Closeable {
  private int index;
  private InputStream request;
  private boolean errorInHasNext;
  CustomIterator(  Exchange exchange,  InputStream request,  boolean errorInHasNext){
    this.request=request;
    this.errorInHasNext=errorInHasNext;
  }
  @Override public boolean hasNext(){
    if (index < 7) {
      return true;
    }
    if (errorInHasNext) {
      throw new RuntimeException("Exception thrown");
    }
 else {
      return false;
    }
  }
  @Override public String next(){
    index++;
    if (index < 7) {
      return "<a>" + index + "</a>";
    }
    if (!errorInHasNext) {
      throw new RuntimeException("Exception thrown");
    }
 else {
      return "<a>" + index + "</a>";
    }
  }
  @Override public void remove(){
    throw new UnsupportedOperationException();
  }
  @Override public void close() throws IOException {
    request.close();
  }
}
