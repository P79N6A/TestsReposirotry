/** 
 * Wire tap unit test
 */
public class WireTapShutdownRouteTest extends ContextTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(WireTapShutdownRouteTest.class);
  private static final CountDownLatch LATCH=new CountDownLatch(1);
  @Test public void testWireTapShutdown() throws Exception {
    final MyTapBean tapBean=(MyTapBean)context.getRegistry().lookupByName("tap");
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    LATCH.countDown();
    context.stop();
    await().atMost(10,TimeUnit.SECONDS).untilAsserted(() -> {
      assertEquals("Hello World",tapBean.getTapped());
    }
);
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("tap",new MyTapBean());
    return jndi;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").routeId("foo").wireTap("direct:tap").to("mock:result");
        from("direct:tap").routeId("bar").to("bean:tap");
      }
    }
;
  }
public static class MyTapBean {
    private String tapped;
    public void tapSomething(    String body) throws Exception {
      try {
        LATCH.await(5,TimeUnit.SECONDS);
        Thread.sleep(100);
      }
 catch (      Exception e) {
        fail("Should not be interrupted");
      }
      LOG.info("Wire tapping: {}",body);
      tapped=body;
    }
    public String getTapped(){
      return tapped;
    }
  }
}
