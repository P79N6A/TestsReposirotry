@Ignore("Integration test that requires ironmq account.") public class IronMQFIFOTest extends CamelTestSupport {
  private String projectId="replace-this";
  private String token="replace-this";
  private final String ironMQEndpoint="ironmq:testqueue?projectId=" + projectId + "&token="+ token+ "&maxMessagesPerPoll=20&ironMQCloud=https://mq-v3-aws-us-east-1.iron.io";
  @EndpointInject(uri="direct:start") private ProducerTemplate template;
  @EndpointInject(uri="mock:result") private MockEndpoint result;
  @Before public void clearQueue(){
    template.sendBodyAndHeader(ironMQEndpoint,"fo",IronMQConstants.OPERATION,IronMQConstants.CLEARQUEUE);
    for (int i=1; i <= 50; i++) {
      template.sendBody(ironMQEndpoint,"<foo>" + i + "</foo>");
    }
  }
  @Test public void testIronMQFifo() throws Exception {
    result.setExpectedMessageCount(50);
    assertMockEndpointsSatisfied(30,TimeUnit.SECONDS);
    int i=1;
    List<Exchange> exchanges=result.getExchanges();
    for (    Exchange exchange : exchanges) {
      assertEquals("<foo>" + i + "</foo>",exchange.getIn().getBody(String.class));
      i++;
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from(ironMQEndpoint).log("got message ${body}").to("mock:result");
      }
    }
;
  }
}
