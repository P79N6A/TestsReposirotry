public class RoutePolicySupportTest extends ContextTestSupport {
  private MyRoutePolicy policy=new MyRoutePolicy();
public static class MyRoutePolicy extends RoutePolicySupport {
  }
  @Test public void testLifecycleCallbacks() throws Exception {
    Route route=context.getRoute("foo");
    assertEquals(ServiceStatus.Stopped,context.getRouteStatus("foo"));
    policy.startRoute(route);
    assertEquals(ServiceStatus.Started,context.getRouteStatus("foo"));
    policy.suspendRoute(route);
    assertEquals(ServiceStatus.Suspended,context.getRouteStatus("foo"));
    policy.resumeRoute(route);
    assertEquals(ServiceStatus.Started,context.getRouteStatus("foo"));
    policy.stopRoute(route);
    assertEquals(ServiceStatus.Stopped,context.getRouteStatus("foo"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("direct:start").routeId("foo").routePolicy(policy).autoStartup(false).to("mock:result");
      }
    }
;
  }
}
