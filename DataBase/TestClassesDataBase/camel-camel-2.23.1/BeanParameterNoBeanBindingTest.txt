/** 
 */
public class BeanParameterNoBeanBindingTest extends ContextTestSupport {
  @Test public void testBeanParameterInvalidValueA() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    try {
      template.sendBody("direct:a","World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      RuntimeExchangeException cause=assertIsInstanceOf(RuntimeExchangeException.class,e.getCause());
      assertTrue(cause.getMessage().contains("echo(java.lang.String,int)"));
      assertTrue(cause.getMessage().contains("[World, null]"));
      assertIsInstanceOf(IllegalArgumentException.class,cause.getCause());
    }
    assertMockEndpointsSatisfied();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyBean());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:a").to("bean:foo?method=echo").to("mock:result");
      }
    }
;
  }
public static class MyBean {
    public String echo(    String body,    int times){
      if (body == null) {
        return "";
      }
      if (times > 0) {
        StringBuilder sb=new StringBuilder();
        for (int i=0; i < times; i++) {
          sb.append(body);
        }
        return sb.toString();
      }
      return body;
    }
  }
}
