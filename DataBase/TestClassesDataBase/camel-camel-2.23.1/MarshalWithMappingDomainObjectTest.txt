/** 
 * Marhsal tests with domain objects.
 */
public class MarshalWithMappingDomainObjectTest extends CamelTestSupport {
  @Test public void testMarshalDomainObject() throws Exception {
    if (isJavaVendor("IBM")) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:marshal");
    mock.expectedMessageCount(1);
    Student student=new Student();
    student.setStuLastName("Dilshan");
    student.setStuAge(25);
    template.sendBody("direct:marshal",student);
    mock.assertIsSatisfied();
  }
  @Test public void testUnmarshalDomainObject() throws Exception {
    if (isJavaVendor("IBM")) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:unmarshal");
    mock.expectedMessageCount(1);
    String xml="<student><firstname>Sagara</firstname><lastname>Gunathunga</lastname><age>27</age></student>";
    template.sendBody("direct:unmarshal",xml);
    Student student=new Student();
    student.setStuLastName("Gunathunga");
    student.setStuFirstName("Sagara");
    student.setStuAge(27);
    mock.assertIsSatisfied();
    mock.message(0).body().isInstanceOf(Student.class);
    mock.message(0).body().isEqualTo(student);
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        CastorDataFormat myformat=new CastorDataFormat();
        myformat.setMappingFile("map.xml");
        myformat.setValidation(true);
        myformat.setAllowClasses(Student.class);
        from("direct:marshal").marshal(myformat).to("mock:marshal");
        from("direct:unmarshal").unmarshal(myformat).to("mock:unmarshal");
      }
    }
;
  }
}
