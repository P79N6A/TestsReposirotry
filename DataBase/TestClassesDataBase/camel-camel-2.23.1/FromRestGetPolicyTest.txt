public class FromRestGetPolicyTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    return jndi;
  }
  @Test public void testFromRestModel() throws Exception {
    assertEquals(1,context.getRoutes().size());
    assertEquals(1,context.getRestDefinitions().size());
    getMockEndpoint("mock:hello").expectedMessageCount(1);
    template.sendBody("seda:get-say-hello",null);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().host("localhost");
        rest("/say/hello").get().route().policy(new MyDummyPolicy()).to("mock:hello");
      }
    }
;
  }
private class MyDummyPolicy implements Policy {
    @Override public void beforeWrap(    RouteContext routeContext,    ProcessorDefinition<?> definition){
    }
    @Override public Processor wrap(    RouteContext routeContext,    Processor processor){
      return processor;
    }
  }
}
