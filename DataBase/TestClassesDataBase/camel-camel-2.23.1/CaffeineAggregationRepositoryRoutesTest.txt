public class CaffeineAggregationRepositoryRoutesTest extends CamelTestSupport {
  private static final String ENDPOINT_MOCK="mock:result";
  private static final String ENDPOINT_DIRECT="direct:one";
  private static final int[] VALUES=generateRandomArrayOfInt(10,0,30);
  private static final int SUM=IntStream.of(VALUES).reduce(0,(a,b) -> a + b);
  private static final String CORRELATOR="CORRELATOR";
  @EndpointInject(uri=ENDPOINT_MOCK) private MockEndpoint mock;
  @Produce(uri=ENDPOINT_DIRECT) private ProducerTemplate producer;
  @Test public void checkAggregationFromOneRoute() throws Exception {
    mock.expectedMessageCount(VALUES.length);
    mock.expectedBodiesReceived(SUM);
    IntStream.of(VALUES).forEach(i -> producer.sendBodyAndHeader(i,CORRELATOR,CORRELATOR));
    mock.assertIsSatisfied();
  }
  private Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
 else {
      Integer n=newExchange.getIn().getBody(Integer.class);
      Integer o=oldExchange.getIn().getBody(Integer.class);
      Integer v=(o == null ? 0 : o) + (n == null ? 0 : n);
      oldExchange.getIn().setBody(v,Integer.class);
      return oldExchange;
    }
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(CaffeineAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.caffeine.processor.aggregate?level=INFO&showAll=true&multiline=true").to(ENDPOINT_MOCK);
      }
    }
;
  }
  protected static int[] generateRandomArrayOfInt(  int size,  int lower,  int upper){
    Random random=new Random();
    int[] array=new int[size];
    Arrays.setAll(array,i -> random.nextInt(upper - lower) + lower);
    return array;
  }
  protected CaffeineAggregationRepository createAggregateRepository() throws Exception {
    CaffeineAggregationRepository repository=new CaffeineAggregationRepository();
    return repository;
  }
}
