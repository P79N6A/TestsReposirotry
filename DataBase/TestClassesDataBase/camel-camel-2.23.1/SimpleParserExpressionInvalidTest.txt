/** 
 */
public class SimpleParserExpressionInvalidTest extends ExchangeTestSupport {
  @Test public void testSimpleUnbalanceFunction() throws Exception {
    SimpleExpressionParser parser=new SimpleExpressionParser("${body is a nice day",true);
    try {
      parser.parseExpression();
      fail("Should thrown exception");
    }
 catch (    SimpleIllegalSyntaxException e) {
      assertEquals(19,e.getIndex());
    }
  }
  @Test public void testSimpleNestedUnbalanceFunction() throws Exception {
    SimpleExpressionParser parser=new SimpleExpressionParser("${body${foo}",true);
    try {
      parser.parseExpression();
      fail("Should thrown exception");
    }
 catch (    SimpleIllegalSyntaxException e) {
      assertEquals(11,e.getIndex());
    }
  }
  @Test public void testSimpleUnknownFunction() throws Exception {
    SimpleExpressionParser parser=new SimpleExpressionParser("Hello ${foo} how are you?",true);
    try {
      parser.parseExpression();
      fail("Should thrown exception");
    }
 catch (    SimpleIllegalSyntaxException e) {
      assertEquals(6,e.getIndex());
    }
  }
  @Test public void testSimpleNestedUnknownFunction() throws Exception {
    SimpleExpressionParser parser=new SimpleExpressionParser("Hello ${bodyAs(${foo})} how are you?",true);
    try {
      parser.parseExpression().evaluate(exchange,String.class);
      fail("Should thrown exception");
    }
 catch (    SimpleIllegalSyntaxException e) {
      assertEquals(0,e.getIndex());
    }
  }
  @Test public void testNoEndFunction() throws Exception {
    SimpleExpressionParser parser=new SimpleExpressionParser("Hello ${body",true);
    try {
      parser.parseExpression();
      fail("Should thrown exception");
    }
 catch (    SimpleIllegalSyntaxException e) {
      assertEquals(11,e.getIndex());
    }
  }
}
