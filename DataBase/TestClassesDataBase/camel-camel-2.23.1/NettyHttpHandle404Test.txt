public class NettyHttpHandle404Test extends BaseNettyTest {
  public String getProducerUrl(){
    return "netty4-http:http://localhost:{{port}}/myserver?user=Camel";
  }
  @Test public void testSimulate404() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Page not found");
    mock.expectedHeaderReceived(Exchange.HTTP_RESPONSE_CODE,404);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(noErrorHandler());
        from("direct:start").enrich("direct:tohttp",new AggregationStrategy(){
          public Exchange aggregate(          Exchange original,          Exchange resource){
            Integer code=resource.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE,Integer.class);
            assertEquals(404,code.intValue());
            return resource;
          }
        }
).to("mock:result");
        from("direct:tohttp").doTry().to(getProducerUrl()).doCatch(NettyHttpOperationFailedException.class).process(new Processor(){
          public void process(          Exchange exchange){
            NettyHttpOperationFailedException cause=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,NettyHttpOperationFailedException.class);
            exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,cause.getStatusCode());
            exchange.getOut().setBody(cause.getContentAsString());
          }
        }
).end();
        from("netty4-http:http://localhost:{{port}}/myserver").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            exchange.getOut().setBody("Page not found");
            exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,404);
          }
        }
);
      }
    }
;
  }
}
