public class UndertowSendDynamicAwareTest extends BaseUndertowTest {
  @Test public void testDynamicAware() throws Exception {
    String out=fluentTemplate.to("direct:moes").withHeader("drink","beer").request(String.class);
    assertEquals("Drinking beer",out);
    out=fluentTemplate.to("direct:joes").withHeader("drink","wine").request(String.class);
    assertEquals("Drinking wine",out);
    boolean found=context.getEndpointMap().containsKey("undertow://http://localhost:" + getPort() + "?throwExceptionOnFailure=false");
    assertTrue("Should find static uri",found);
    assertEquals(4,context.getEndpointMap().size());
  }
  @Override protected RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:moes").toD("undertow:http://localhost:{{port}}/moes?throwExceptionOnFailure=false&drink=${header.drink}");
        from("direct:joes").toD("undertow:http://localhost:{{port}}/joes?throwExceptionOnFailure=false&drink=${header.drink}");
        from("undertow:http://localhost:{{port}}/?matchOnUriPrefix=true").transform().simple("Drinking ${header.drink[0]}");
      }
    }
;
  }
}
