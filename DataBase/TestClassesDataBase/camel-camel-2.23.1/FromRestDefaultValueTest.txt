public class FromRestDefaultValueTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    return jndi;
  }
  @Test public void testDefaultValue() throws Exception {
    getMockEndpoint("mock:bye").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:bye").expectedHeaderReceived("kind","customer");
    template.sendBody("seda:get-say-bye","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testDefaultValueOverride() throws Exception {
    getMockEndpoint("mock:bye").expectedBodiesReceived("Bye World");
    getMockEndpoint("mock:bye").expectedHeaderReceived("kind","admin");
    template.sendBodyAndHeader("seda:get-say-bye","Bye World","kind","admin");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().host("localhost").enableCORS(true);
        rest("/say/bye").consumes("application/json").get().param().type(RestParamType.query).name("kind").defaultValue("customer").endParam().to("mock:bye");
      }
    }
;
  }
}
