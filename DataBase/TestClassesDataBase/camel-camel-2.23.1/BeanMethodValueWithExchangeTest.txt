/** 
 */
public class BeanMethodValueWithExchangeTest extends ContextTestSupport {
  @Test public void testExchangeFoo() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello World");
    template.sendBody("direct:foo","Hello");
    assertMockEndpointsSatisfied();
  }
  @Test public void testExchangeBar() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    template.sendBody("direct:bar","Bye");
    assertMockEndpointsSatisfied();
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("foo",new MyBean());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").to("bean:foo?method=bar(${exchange}, 'World')").to("mock:result");
        from("direct:bar").to("bean:foo?method=bar(*, 'World')").to("mock:result");
      }
    }
;
  }
public static class MyBean {
    public String bar(    Exchange exchange,    String extra){
      return exchange.getIn().getBody(String.class) + " " + extra;
    }
  }
}
