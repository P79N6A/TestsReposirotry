public class UndertowHttpEmptyQueryParameterTest extends BaseUndertowTest {
  @Test public void testEmpty() throws Exception {
    getMockEndpoint("mock:input").expectedHeaderReceived("id",123);
    String out=fluentTemplate.to("undertow:http://localhost:{{port}}/foo?id=123").request(String.class);
    assertEquals("Header: 123",out);
    assertMockEndpointsSatisfied();
    resetMocks();
    getMockEndpoint("mock:input").expectedHeaderReceived("id","");
    out=fluentTemplate.to("undertow:http://localhost:{{port}}/foo?id=").request(String.class);
    assertEquals("Header: ",out);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("undertow:http://0.0.0.0:{{port}}/foo").to("mock:input").transform().simple("Header: ${header.id}");
      }
    }
;
  }
}
