/** 
 * @version 
 */
public class FileAbsolutePathIssueTest extends ContextTestSupport {
  private String uri;
  private String start;
  private String done;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/issue");
    deleteDirectory("target/done");
    start=new File("target/issue").getAbsolutePath();
    done=new File("target/done").getAbsolutePath();
    uri="file:" + start + "?initialDelay=0&delay=10&move="+ done+ "/${file:name}";
    super.setUp();
  }
  @Test public void testMoveAbsolute() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedFileExists(done + "/hello.txt");
    template.sendBodyAndHeader("file:" + start,"Hello World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(uri).to("mock:result");
      }
    }
;
  }
}
