/** 
 * Unit test to verify that we can pool a BINARY file in a directory from the FTP Server and store it on a local file path. Based on CAMEL-834.
 */
public class FromFtpDirectoryToBinaryFilesTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/incoming/?password=admin"+ "&binary=true&useFixedDelay=false&recursive=false&delay=5000";
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    prepareFtpServer();
  }
  @Test public void testFtpRoute() throws Exception {
    MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
    resultEndpoint.expectedMessageCount(2);
    resultEndpoint.assertIsSatisfied();
    Exchange ex=resultEndpoint.getExchanges().get(0);
    byte[] bytes=ex.getIn().getBody(byte[].class);
    assertTrue("Logo size wrong",bytes.length > 10000);
    File file=new File("target/ftptest/logo1.jpeg");
    assertTrue("The binary file should exists",file.exists());
    assertTrue("Logo size wrong",file.length() > 10000);
    file=new File("target/ftptest/logo.jpeg");
    assertTrue(" The binary file should exists",file.exists());
    assertTrue("Logo size wrong",file.length() > 10000);
  }
  private void prepareFtpServer() throws Exception {
    template.sendBodyAndHeader(getFtpUrl(),IOConverter.toFile("src/test/data/ftpbinarytest/logo.jpeg"),Exchange.FILE_NAME,"logo.jpeg");
    template.sendBodyAndHeader(getFtpUrl(),IOConverter.toFile("src/test/data/ftpbinarytest/logo1.jpeg"),Exchange.FILE_NAME,"logo1.jpeg");
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        String fileUrl="file:target/ftptest/?noop=true";
        from(getFtpUrl()).to(fileUrl,"mock:result");
      }
    }
;
  }
}
