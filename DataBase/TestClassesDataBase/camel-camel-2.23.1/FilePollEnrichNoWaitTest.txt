/** 
 * @version 
 */
public class FilePollEnrichNoWaitTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/pollenrich");
    super.setUp();
  }
  @Test public void testFilePollEnrichNoWait() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    mock.expectedFileExists("target/pollenrich/done/hello.txt");
    template.sendBodyAndHeader("file:target/pollenrich","Hello World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
    oneExchangeDone.matchesMockWaitTime();
    File file=new File("target/pollenrich/hello.txt");
    assertFalse("File should have been moved",file.exists());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("timer:foo?delay=0&period=10").routeId("foo").log("Trigger timer foo").pollEnrich("file:target/pollenrich?initialDelay=0&delay=10&move=done",0).convertBodyTo(String.class).filter(body().isNull()).stop().end().log("Polled filed ${file:name}").to("mock:result");
      }
    }
;
  }
}
