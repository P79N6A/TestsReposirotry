/** 
 * Unit test for stop() DSL
 * @version 
 */
public class RouteStopTest extends ContextTestSupport {
  @Test public void testOtherwise() throws Exception {
    getMockEndpoint("mock:hello").expectedMessageCount(0);
    getMockEndpoint("mock:bye").expectedMessageCount(0);
    getMockEndpoint("mock:other").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Other");
    assertMockEndpointsSatisfied();
  }
  @Test public void testHello() throws Exception {
    getMockEndpoint("mock:hello").expectedMessageCount(1);
    getMockEndpoint("mock:bye").expectedMessageCount(0);
    getMockEndpoint("mock:other").expectedMessageCount(0);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testByeWithStop() throws Exception {
    getMockEndpoint("mock:hello").expectedMessageCount(0);
    getMockEndpoint("mock:bye").expectedMessageCount(1);
    getMockEndpoint("mock:other").expectedMessageCount(0);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBody("direct:start","Bye World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSetPropertyToStop() throws Exception {
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedMessageCount(0);
    template.sendBody("direct:foo","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").choice().when(body().contains("Hello")).to("mock:hello").when(body().contains("Bye")).to("mock:bye").stop().otherwise().to("mock:other").end().to("mock:result");
        from("direct:foo").to("mock:foo").setProperty(Exchange.ROUTE_STOP,constant("true")).to("mock:result");
      }
    }
;
  }
}
