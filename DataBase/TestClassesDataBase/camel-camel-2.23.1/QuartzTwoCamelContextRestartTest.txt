/** 
 * @version 
 */
public class QuartzTwoCamelContextRestartTest {
  private DefaultCamelContext camel1;
  private DefaultCamelContext camel2;
  @Before public void setUp() throws Exception {
    camel1=new DefaultCamelContext();
    camel1.setName("camel-1");
    camel1.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("quartz://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("log:one","mock:one");
      }
    }
);
    camel1.start();
    camel2=new DefaultCamelContext();
    camel2.setName("camel-2");
    camel2.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("quartz://myOtherGroup/myOtherTimerName?cron=0/1+*+*+*+*+?").to("log:two","mock:two");
      }
    }
);
    camel2.start();
  }
  @After public void tearDown() throws Exception {
    camel1.stop();
    camel2.stop();
  }
  @Test public void testTwoCamelContextRestart() throws Exception {
    MockEndpoint mock1=camel1.getEndpoint("mock:one",MockEndpoint.class);
    mock1.expectedMinimumMessageCount(2);
    MockEndpoint mock2=camel2.getEndpoint("mock:two",MockEndpoint.class);
    mock2.expectedMinimumMessageCount(6);
    mock1.assertIsSatisfied();
    camel1.stop();
    mock2.assertIsSatisfied();
    mock1=camel1.getEndpoint("mock:one",MockEndpoint.class);
    mock1.expectedMinimumMessageCount(3);
    camel1.start();
    mock1.assertIsSatisfied();
  }
}
