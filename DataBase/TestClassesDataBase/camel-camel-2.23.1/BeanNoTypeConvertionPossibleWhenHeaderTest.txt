/** 
 * @version 
 */
public class BeanNoTypeConvertionPossibleWhenHeaderTest extends ContextTestSupport {
  @Test public void testBeanHeaderNoTypeConvertionPossibleFail() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(0);
    try {
      template.requestBodyAndHeader("direct:start","Hello World","foo",555);
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      ParameterBindingException pbe=assertIsInstanceOf(ParameterBindingException.class,e.getCause());
      assertEquals(1,pbe.getIndex());
      assertTrue(pbe.getMethod().getName().contains("hello"));
      assertEquals(555,pbe.getParameterValue());
      NoTypeConversionAvailableException ntae=assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause().getCause());
      assertEquals(Integer.class,ntae.getFromType());
      assertEquals(Document.class,ntae.getToType());
      assertEquals(555,ntae.getValue());
      assertNotNull(ntae.getMessage());
    }
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanHeaderNoTypeConvertionPossibleOK() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.requestBodyAndHeader("direct:start","Hello World","foo","<?xml version=\"1.0\"?><foo>bar</foo>");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanHeaderNoTypeConvertionPossibleOKNullHeader() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("Hello World");
    mock.message(0).header("foo").isNull();
    template.requestBodyAndHeader("direct:start","Hello World","foo",(Object)null);
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanHeaderNoTypeConvertionPossibleOKNoHeader() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedBodiesReceived("Hello World");
    mock.message(0).header("foo").isNull();
    template.requestBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").bean(BeanWithHeaderAnnotation.class).to("mock:result");
      }
    }
;
  }
}
