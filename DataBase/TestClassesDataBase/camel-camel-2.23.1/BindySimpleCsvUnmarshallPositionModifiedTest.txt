@ContextConfiguration public class BindySimpleCsvUnmarshallPositionModifiedTest extends AbstractJUnit4SpringContextTests {
  private static final String URI_MOCK_RESULT="mock:result";
  private static final String URI_MOCK_ERROR="mock:error";
  private static final String URI_DIRECT_START="direct:start";
  @Produce(uri=URI_DIRECT_START) protected ProducerTemplate template;
  private String record;
  @EndpointInject(uri=URI_MOCK_RESULT) private MockEndpoint result;
  @EndpointInject(uri=URI_MOCK_ERROR) private MockEndpoint error;
  @Test @DirtiesContext public void testUnMarshallMessage() throws Exception {
    record="1,25,Albert,Cartier,ISIN,BE12345678,SELL,Share,1500,EUR,08-01-2009\r\n";
    template.sendBody(record);
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
  }
  @Test @DirtiesContext public void testUnmarshallErrorMessage() throws Exception {
    record="1,25,Albert,Cartier,ISIN,BE12345678,SELL,Share,1500,EUR,08-01-2009-01\r\n";
    template.sendBody(record);
    result.expectedMessageCount(0);
    error.expectedMessageCount(1);
    result.assertIsSatisfied();
    error.assertIsSatisfied();
    Exception cause=error.getReceivedExchanges().get(0).getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class);
    TestSupport.assertIsInstanceOf(FormatException.class,cause.getCause());
    assertEquals("Date provided does not fit the pattern defined, position: 11, line: 1",cause.getMessage());
  }
public static class ContextConfig extends RouteBuilder {
    BindyCsvDataFormat orderBindyDataFormat=new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.model.simple.oneclassdifferentposition.Order.class);
    public void configure(){
      Tracer tracer=new Tracer();
      tracer.setLogLevel(LoggingLevel.ERROR);
      tracer.setLogName("org.apache.camel.bindy");
      getContext().addInterceptStrategy(tracer);
      errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0));
      onException(Exception.class).maximumRedeliveries(0).handled(true);
      from(URI_DIRECT_START).unmarshal(orderBindyDataFormat).to(URI_MOCK_RESULT);
    }
  }
}
