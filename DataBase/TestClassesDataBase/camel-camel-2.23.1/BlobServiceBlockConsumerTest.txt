public class BlobServiceBlockConsumerTest extends CamelTestSupport {
  @EndpointInject(uri="direct:start") ProducerTemplate templateStart;
  @Test @Ignore public void testGetBlockBlob() throws Exception {
    templateStart.send("direct:start",ExchangePattern.InOnly,new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Block Blob");
      }
    }
);
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    assertMockEndpointsSatisfied();
    File f=mock.getExchanges().get(0).getIn().getBody(File.class);
    assertNotNull("File must be set",f);
    try {
      ByteArrayOutputStream bos=new ByteArrayOutputStream();
      IOHelper.copy(new FileInputStream(f),bos);
      assertEquals("Block Blob",bos.toString("UTF-8"));
    }
  finally {
      if (f != null) {
        f.delete();
      }
    }
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry registry=super.createRegistry();
    registry.bind("creds",new StorageCredentialsAccountAndKey("camelazure","base64EncodedValue"));
    return registry;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("azure-blob://camelazure/container1/blobBlock?credentials=#creds&operation=updateBlockBlob");
        from("azure-blob://camelazure/container1/blobBlock?credentials=#creds&fileDir=" + System.getProperty("java.io.tmpdir")).to("mock:result");
      }
    }
;
  }
}
