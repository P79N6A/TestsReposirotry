/** 
 * @version 
 */
public class ProduceMessageConverterTest extends CamelTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myMessageConverter",new MyMessageConverter());
    return jndi;
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Test public void testProduceCustomMessageConverter() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("activemq:queue:hello?messageConverter=#myMessageConverter","World");
    assertMockEndpointsSatisfied();
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("activemq:queue:hello").to("mock:result");
      }
    }
;
  }
private static class MyMessageConverter implements MessageConverter {
    public Message toMessage(    Object object,    Session session) throws JMSException, MessageConversionException {
      TextMessage txt=session.createTextMessage();
      txt.setText("Hello " + object);
      return txt;
    }
    public Object fromMessage(    Message message) throws JMSException, MessageConversionException {
      return null;
    }
  }
}
