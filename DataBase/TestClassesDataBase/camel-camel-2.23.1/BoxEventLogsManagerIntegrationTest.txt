/** 
 * Test class for {@link BoxEventLogsManager} APIs.
 */
public class BoxEventLogsManagerIntegrationTest extends AbstractBoxTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(BoxEventLogsManagerIntegrationTest.class);
  private static final String PATH_PREFIX=BoxApiCollection.getCollection().getApiName(BoxEventLogsManagerApiMethod.class).getName();
  private static final long ONE_MINUTE_OF_MILLISECONDS=1000 * 60;
  @Ignore @Test public void testGetEnterpriseEvents() throws Exception {
    Date before=new Date();
    Date after=new Date();
    after.setTime(before.getTime() - ONE_MINUTE_OF_MILLISECONDS);
    final Map<String,Object> headers=new HashMap<>();
    headers.put("CamelBox.position",null);
    headers.put("CamelBox.after",after);
    headers.put("CamelBox.before",before);
    headers.put("CamelBox.types",null);
    @SuppressWarnings("rawtypes") final java.util.List result=requestBodyAndHeaders("direct://GETENTERPRISEEVENTS",null,headers);
    assertNotNull("getEnterpriseEvents result",result);
    LOG.debug("getEnterpriseEvents: " + result);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://GETENTERPRISEEVENTS").to("box://" + PATH_PREFIX + "/getEnterpriseEvents");
      }
    }
;
  }
}
