public class AccountProducerTest extends CamelTestSupport {
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:balances").to("xchange:binance?service=account&method=balances");
        from("direct:wallets").to("xchange:binance?service=account&method=wallets");
        from("direct:fundingHistory").to("xchange:binance?service=account&method=fundingHistory");
      }
    }
;
  }
  @Test @SuppressWarnings("unchecked") public void testBalances() throws Exception {
    Assume.assumeTrue(hasAPICredentials());
    List<Balance> balances=template.requestBody("direct:balances",null,List.class);
    Assert.assertNotNull("Balances not null",balances);
  }
  @Test @SuppressWarnings("unchecked") public void testWallets() throws Exception {
    Assume.assumeTrue(hasAPICredentials());
    List<Wallet> wallets=template.requestBody("direct:wallets",null,List.class);
    Assert.assertNotNull("Wallets not null",wallets);
  }
  @Test @SuppressWarnings("unchecked") public void testFundingHistory() throws Exception {
    Assume.assumeTrue(hasAPICredentials());
    List<FundingRecord> records=template.requestBody("direct:fundingHistory",null,List.class);
    Assert.assertNotNull("Funding records not null",records);
  }
  private boolean hasAPICredentials(){
    XChangeComponent component=context().getComponent("xchange",XChangeComponent.class);
    return component.getXChange().getExchangeSpecification().getApiKey() != null;
  }
}
