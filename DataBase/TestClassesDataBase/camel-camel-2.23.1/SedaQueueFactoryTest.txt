/** 
 */
public class SedaQueueFactoryTest extends ContextTestSupport {
  private final ArrayBlockingQueueFactory<Exchange> arrayQueueFactory=new ArrayBlockingQueueFactory<>();
  @Override protected CamelContext createCamelContext() throws Exception {
    SimpleRegistry simpleRegistry=new SimpleRegistry();
    simpleRegistry.put("arrayQueueFactory",arrayQueueFactory);
    return new DefaultCamelContext(simpleRegistry);
  }
  @Test public void testArrayBlockingQueueFactory() throws Exception {
    SedaEndpoint endpoint=resolveMandatoryEndpoint("seda:arrayQueue?queueFactory=#arrayQueueFactory",SedaEndpoint.class);
    BlockingQueue<Exchange> queue=endpoint.getQueue();
    assertIsInstanceOf(ArrayBlockingQueue.class,queue);
  }
  @SuppressWarnings("unchecked") @Test public void testArrayBlockingQueueFactoryAndSize() throws Exception {
    SedaEndpoint endpoint=resolveMandatoryEndpoint("seda:arrayQueue50?queueFactory=#arrayQueueFactory&size=50",SedaEndpoint.class);
    BlockingQueue<Exchange> queue=endpoint.getQueue();
    ArrayBlockingQueue<Exchange> blockingQueue=assertIsInstanceOf(ArrayBlockingQueue.class,queue);
    assertEquals("remainingCapacity",50,blockingQueue.remainingCapacity());
  }
  @Test public void testDefaultBlockingQueueFactory() throws Exception {
    SedaEndpoint endpoint=resolveMandatoryEndpoint("seda:linkedQueue",SedaEndpoint.class);
    BlockingQueue<Exchange> queue=endpoint.getQueue();
    assertIsInstanceOf(LinkedBlockingQueue.class,queue);
  }
}
