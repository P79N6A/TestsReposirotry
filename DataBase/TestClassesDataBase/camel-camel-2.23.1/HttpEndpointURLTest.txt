public class HttpEndpointURLTest extends CamelTestSupport {
  @Test public void testHttpEndpointURLWithIPv6(){
    HttpEndpoint endpoint=(HttpEndpoint)context.getEndpoint("http4://[2a00:8a00:6000:40::1413]:30300/test?test=true");
    assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test?test=true",endpoint.getHttpUri().toString());
  }
  @Test public void testHttpEndpointHttpUri() throws Exception {
    HttpEndpoint http1=context.getEndpoint("http4://www.google.com",HttpEndpoint.class);
    HttpEndpoint http2=context.getEndpoint("https4://www.google.com?test=parameter&proxyAuthHost=myotherproxy&proxyAuthPort=2345",HttpEndpoint.class);
    HttpEndpoint http3=context.getEndpoint("https4://www.google.com?test=parameter",HttpEndpoint.class);
    assertEquals("Get a wrong HttpUri of http1","http://www.google.com",http1.getHttpUri().toString());
    assertEquals("Get a wrong HttpUri of http2","https://www.google.com?test=parameter",http2.getHttpUri().toString());
    assertEquals("Get a wrong HttpUri of http2 andhttp3",http2.getHttpUri(),http3.getHttpUri());
    try {
      context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class);
      fail("need to throw an exception here");
    }
 catch (    ResolveEndpointFailedException ex) {
      assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);
    }
  }
  @Test public void testConnectionManagerFromHttpUri() throws Exception {
    HttpEndpoint http1=context.getEndpoint("http4://www.google.com?maxTotalConnections=40&connectionsPerRoute=5",HttpEndpoint.class);
    HttpClientConnectionManager connectionManager=http1.getClientConnectionManager();
    assertTrue("Get a wrong type of connection manager",connectionManager instanceof PoolingHttpClientConnectionManager);
    @SuppressWarnings("resource") PoolingHttpClientConnectionManager poolManager=(PoolingHttpClientConnectionManager)connectionManager;
    assertEquals("Get a wrong setting of maxTotalConnections",40,poolManager.getMaxTotal());
    assertEquals("Get a wrong setting of connectionsPerRoute",5,poolManager.getDefaultMaxPerRoute());
  }
  @Test public void testRawWithUnsafeCharacters() throws Exception {
    HttpEndpoint http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class);
    assertTrue("The password is not loggged",URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0);
  }
}
