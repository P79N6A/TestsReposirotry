/** 
 * @version 
 */
public class RouteAutoStartupTest extends ContextTestSupport {
  @Test public void testRouteAutoStartedUsingBoolean() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").autoStartup(true).to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testRouteNotAutoStartedUsingBoolean() throws Exception {
    context.getComponent("direct",DirectComponent.class).setBlock(false);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").id("route1").autoStartup(false).to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Hello World");
      fail("route shouldn't be started yet");
    }
 catch (    Exception e) {
    }
    assertMockEndpointsSatisfied();
    mock.reset();
    mock.expectedMessageCount(1);
    context.startRoute("route1");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testRouteAutoStartedUsingString() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").autoStartup("true").to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testRouteNotAutoStartedUsingString() throws Exception {
    context.getComponent("direct",DirectComponent.class).setBlock(false);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").id("route1").autoStartup("false").to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Hello World");
      fail("route shouldn't be started yet");
    }
 catch (    Exception e) {
    }
    assertMockEndpointsSatisfied();
    mock.reset();
    mock.expectedMessageCount(1);
    context.startRoute("route1");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testRouteAutoStartedUsingProperties() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        PropertiesComponent properties=new PropertiesComponent();
        properties.setLocation("classpath:org/apache/camel/processor/routeAutoStartupTest.properties");
        context.addComponent("properties",properties);
        from("direct:start").autoStartup("{{autoStartupProp}}").to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testRouteNotAutoStartedUsingProperties() throws Exception {
    context.getComponent("direct",DirectComponent.class).setBlock(false);
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        PropertiesComponent properties=new PropertiesComponent();
        properties.setLocation("classpath:org/apache/camel/processor/routeAutoStartupTest.properties");
        context.addComponent("properties",properties);
        from("direct:start").id("route1").autoStartup("{{noAutoStartupProp}}").to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(0);
    try {
      template.sendBody("direct:start","Hello World");
      fail("route shouldn't be started yet");
    }
 catch (    Exception e) {
    }
    assertMockEndpointsSatisfied();
    mock.reset();
    mock.expectedMessageCount(1);
    context.startRoute("route1");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
}
