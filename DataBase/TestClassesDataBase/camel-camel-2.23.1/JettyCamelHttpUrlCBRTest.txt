public class JettyCamelHttpUrlCBRTest extends BaseJettyTest {
  @Test public void testCamelHttpUrl() throws Exception {
    getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:foo").expectedHeaderReceived("beer","yes");
    getMockEndpoint("mock:foo").expectedHeaderReceived(Exchange.HTTP_METHOD,"POST");
    getMockEndpoint("mock:foo").expectedHeaderReceived(Exchange.HTTP_URL,"http://localhost:" + getPort() + "/foo");
    getMockEndpoint("mock:foo").expectedHeaderReceived(Exchange.HTTP_URI,"/foo");
    getMockEndpoint("mock:foo").expectedHeaderReceived(Exchange.HTTP_QUERY,"beer=yes");
    getMockEndpoint("mock:foo").expectedHeaderReceived(Exchange.HTTP_PATH,"");
    String out=template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class);
    assertEquals("Bye World",out);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("jetty:http://0.0.0.0:{{port}}/foo").filter().simple("${header.CamelHttpUrl} contains 'foo'").to("mock:foo").end().transform().constant("Bye World");
      }
    }
;
  }
}
