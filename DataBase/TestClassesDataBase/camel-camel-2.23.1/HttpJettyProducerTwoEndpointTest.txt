/** 
 * @version 
 */
public class HttpJettyProducerTwoEndpointTest extends BaseJettyTest {
  @Test public void testTwoEndpoints() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    Thread.sleep(1000);
    Exchange a=template.request("direct:a",null);
    assertNotNull(a);
    Exchange b=template.request("direct:b",null);
    assertNotNull(b);
    assertEquals("Bye cheese",a.getOut().getBody(String.class));
    assertEquals(246,a.getOut().getHeader("foo",Integer.class).intValue());
    assertEquals("Bye cake",b.getOut().getBody(String.class));
    assertEquals(912,b.getOut().getHeader("foo",Integer.class).intValue());
    assertEquals(5,context.getEndpoints().size());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:a").to("jetty://http://localhost:{{port}}/myapp?foo=123&bar=cheese");
        from("direct:b").to("jetty://http://localhost:{{port}}/myapp?foo=456&bar=cake");
        from("jetty://http://localhost:{{port}}/myapp").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            int foo=exchange.getIn().getHeader("foo",Integer.class);
            String bar=exchange.getIn().getHeader("bar",String.class);
            exchange.getOut().setHeader("foo",foo * 2);
            exchange.getOut().setBody("Bye " + bar);
          }
        }
);
      }
    }
;
  }
}
