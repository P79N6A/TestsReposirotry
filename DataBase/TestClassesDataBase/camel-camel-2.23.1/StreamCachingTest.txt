public class StreamCachingTest extends CamelTestSupport {
  public static final String URI_END_OF_ROUTE="mock:end_of_route";
  @EndpointInject(uri=URI_END_OF_ROUTE) private MockEndpoint endOfRoute;
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.getTypeConverterRegistry().addFallbackTypeConverter(springTypeConverter(context,new ConversionService[]{new DefaultConversionService()}),true);
        from("direct:foo").streamCaching().bean(MyBean.class).to(URI_END_OF_ROUTE);
      }
    }
;
  }
  @Test public void streamCachingWithSpring() throws Exception {
    endOfRoute.expectedMessageCount(1);
    template.sendBody("direct:foo",new FileInputStream(new File("src/test/resources/logback.xml")));
    endOfRoute.assertIsSatisfied();
  }
public static class MyBean {
    public List<Integer> someNumbers(){
      return asList(1,2,3);
    }
  }
  /** 
 * Copied from org.apache.camel.spring.boot.TypeConversionConfiguration (they are package protected)
 */
  SpringTypeConverter springTypeConverter(  CamelContext camelContext,  ConversionService[] conversionServices){
    SpringTypeConverter springTypeConverter=new SpringTypeConverter(asList(conversionServices));
    camelContext.getTypeConverterRegistry().addFallbackTypeConverter(springTypeConverter,true);
    return springTypeConverter;
  }
}
