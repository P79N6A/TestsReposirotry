/** 
 */
public class BeanMethodWithStringParameterTest extends ContextTestSupport {
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myBean",new MyBean());
    return jndi;
  }
  @Test public void testBean() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Hello WorldHello World");
    template.sendBody("direct:start","Camel");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanOther() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye Camel");
    template.sendBody("direct:other","Camel");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("bean:myBean?method=doSomething('Hello World', 2)").to("mock:result");
        from("direct:other").to("bean:myBean?method=doSomethingWithExchange('Bye')").to("mock:result");
      }
    }
;
  }
public static final class MyBean {
    public static String doSomething(    String name,    int repeat){
      StringBuffer sb=new StringBuffer();
      for (int i=0; i < repeat; i++) {
        sb.append(name);
      }
      return sb.toString();
    }
    public static String doSomethingWithExchange(    String name,    Exchange exchange){
      return name + " " + exchange.getIn().getBody(String.class);
    }
  }
}
