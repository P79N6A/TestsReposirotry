/** 
 * Unit test for FTP using expression (file language)
 */
public class FtpConsumerMoveExpressionTest extends FtpServerTestSupport {
  private String getFtpUrl(){
    return "ftp://admin@localhost:" + getPort() + "/filelanguage?password=admin&consumer.delay=5000";
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    deleteDirectory("target/filelanguage");
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("myguidgenerator",new MyGuidGenerator());
    return jndi;
  }
  @Test public void testMoveUsingExpression() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Reports");
    sendFile(getFtpUrl(),"Reports","report2.txt");
    assertMockEndpointsSatisfied();
    Thread.sleep(1000);
    String now=new SimpleDateFormat("yyyyMMdd").format(new Date());
    File file=new File(FTP_ROOT_DIR + "/filelanguage/backup/" + now+ "/123-report2.bak");
    assertTrue("File should have been renamed",file.exists());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from(getFtpUrl() + "&move=backup/${date:now:yyyyMMdd}/${bean:myguidgenerator}" + "-${file:name.noext}.bak").to("mock:result");
      }
    }
;
  }
public class MyGuidGenerator {
    public String guid(){
      return "123";
    }
  }
}
