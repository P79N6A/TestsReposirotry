public class ManagedFromRestGetEmbeddedRouteTest extends ManagementTestSupport {
  @Override protected CamelContext createCamelContext() throws Exception {
    SimpleRegistry registry=new SimpleRegistry();
    registry.put("dummy-test",new DummyRestConsumerFactory());
    return new DefaultCamelContext(registry);
  }
  @Test public void testFromRestModel() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=context,name=\"camel-1\"");
    String xml=(String)mbeanServer.invoke(on,"dumpRestsAsXml",null,null);
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<rests"));
    assertTrue(xml.contains("<rest path=\"/say/hello\">"));
    assertTrue(xml.contains("<rest path=\"/say/bye\">"));
    assertTrue(xml.contains("</rest>"));
    assertTrue(xml.contains("<get"));
    assertTrue(xml.contains("<route"));
    assertTrue(xml.contains("<transform"));
    assertTrue(xml.contains("<post"));
    assertTrue(xml.contains("application/json"));
    assertTrue(xml.contains("</rests>"));
    String xml2=(String)mbeanServer.invoke(on,"dumpRoutesAsXml",null,null);
    log.info(xml2);
    assertTrue(xml2.contains("rest=\"true\""));
    assertEquals(2 + 1,context.getRouteDefinitions().size());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        restConfiguration().host("localhost");
        rest("/say/hello").get().route().to("mock:hello").transform(constant("Hello World"));
        rest("/say/bye").get().consumes("application/json").route().to("mock:bye").transform(constant("Bye World")).endRest().post().to("mock:update");
      }
    }
;
  }
}
