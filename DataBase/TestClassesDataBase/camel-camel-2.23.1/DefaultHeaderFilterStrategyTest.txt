/** 
 * @version 
 */
public class DefaultHeaderFilterStrategyTest extends ContextTestSupport {
  @Test public void testSimpleDefaultHeaderFilterStrategy(){
    DefaultHeaderFilterStrategy comp=new DefaultHeaderFilterStrategy();
    comp.setAllowNullValues(true);
    assertEquals(true,comp.isAllowNullValues());
    comp.setLowerCase(true);
    assertEquals(true,comp.isLowerCase());
    comp.setCaseInsensitive(true);
    assertEquals(true,comp.isCaseInsensitive());
  }
  @Test public void testInFilterDefaultHeaderFilterStrategy(){
    DefaultHeaderFilterStrategy comp=new DefaultHeaderFilterStrategy();
    Set<String> set=new HashSet<>();
    set.add("foo");
    comp.setInFilter(set);
    assertEquals(set,comp.getInFilter());
  }
  @Test public void testInFilterDoFilterDefaultHeaderFilterStrategy(){
    DefaultHeaderFilterStrategy comp=new DefaultHeaderFilterStrategy();
    Set<String> set=new HashSet<>();
    set.add("foo");
    comp.setInFilter(set);
    Exchange exchange=new DefaultExchange(context);
    exchange.getIn().setHeader("bar",123);
    exchange.getIn().setHeader("foo","cheese");
    assertFalse(comp.applyFilterToExternalHeaders("bar",123,exchange));
    assertTrue(comp.applyFilterToExternalHeaders("foo","cheese",exchange));
  }
  @Test public void testOutFilterDefaultHeaderFilterStrategy(){
    DefaultHeaderFilterStrategy comp=new DefaultHeaderFilterStrategy();
    Set<String> set=new HashSet<>();
    set.add("foo");
    comp.setOutFilter(set);
    assertEquals(set,comp.getOutFilter());
  }
  @Test public void testOutFilterDoFilterDefaultHeaderFilterStrategy(){
    DefaultHeaderFilterStrategy comp=new DefaultHeaderFilterStrategy();
    Set<String> set=new HashSet<>();
    set.add("foo");
    comp.setOutFilter(set);
    Exchange exchange=new DefaultExchange(context);
    exchange.getIn().setHeader("bar",123);
    exchange.getIn().setHeader("foo","cheese");
    assertFalse(comp.applyFilterToCamelHeaders("bar",123,exchange));
    assertTrue(comp.applyFilterToCamelHeaders("foo","cheese",exchange));
  }
  @Test public void testCaseInsensitiveHeaderNameDoFilterDefaultHeaderFilterStrategy(){
    DefaultHeaderFilterStrategy comp=new DefaultHeaderFilterStrategy();
    comp.setCaseInsensitive(true);
    Set<String> set=new HashSet<>();
    set.add("Content-Type");
    comp.setOutFilter(set);
    Exchange exchange=new DefaultExchange(context);
    exchange.getIn().setHeader("content-type","application/xml");
    exchange.getIn().setHeader("Content-Type","application/json");
    assertTrue(comp.applyFilterToCamelHeaders("content-type","application/xml",exchange));
    assertTrue(comp.applyFilterToCamelHeaders("Content-Type","application/json",exchange));
  }
}
