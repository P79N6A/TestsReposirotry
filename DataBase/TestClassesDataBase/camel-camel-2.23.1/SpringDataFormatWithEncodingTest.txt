/** 
 * @version 
 */
public class SpringDataFormatWithEncodingTest extends CamelSpringTestSupport {
  @Test public void testMarshalWithEncoding() throws Exception {
    PurchaseOrder bean=new PurchaseOrder();
    bean.setName("Beer");
    bean.setAmount(23);
    bean.setPrice(2.5);
    MockEndpoint mock=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    mock.message(0).body(String.class).startsWith("<?xml version=\"1.0\" encoding=\"iso-8859-1\" standalone=\"yes\"?>");
    mock.message(0).body(String.class).contains("purchaseOrder");
    mock.message(0).body(String.class).contains("amount=\"23.0\"");
    mock.message(0).body(String.class).contains("price=\"2.5\"");
    mock.message(0).body(String.class).contains("name=\"Beer\"");
    template.sendBody("direct:start",bean);
    mock.assertIsSatisfied();
  }
  @Test public void testMarshalWithEncodingPropertyInExchange() throws Exception {
    PurchaseOrder bean=new PurchaseOrder();
    bean.setName("Beer");
    bean.setAmount(23);
    bean.setPrice(2.5);
    MockEndpoint mock=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
    mock.message(0).body(String.class).startsWith("<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>");
    mock.message(0).body(String.class).contains("purchaseOrder");
    mock.message(0).body(String.class).contains("amount=\"23.0\"");
    mock.message(0).body(String.class).contains("price=\"2.5\"");
    mock.message(0).body(String.class).contains("name=\"Beer\"");
    template.sendBodyAndProperty("direct:start",bean,Exchange.CHARSET_NAME,"utf-8");
    mock.assertIsSatisfied();
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/example/springDataFormatWithEncoding.xml");
  }
}
