public class CxfSpringCustomizedExceptionTest extends CamelTestSupport {
  private static final String EXCEPTION_MESSAGE="This is an exception test message";
  private static final String DETAIL_TEXT="This is a detail text node";
  private static final SoapFault SOAP_FAULT;
  private AbstractXmlApplicationContext applicationContext;
static {
    SOAP_FAULT=new SoapFault(EXCEPTION_MESSAGE,Fault.FAULT_CODE_CLIENT);
    Element detail=SOAP_FAULT.getOrCreateDetail();
    Document doc=detail.getOwnerDocument();
    Text tn=doc.createTextNode(DETAIL_TEXT);
    detail.appendChild(tn);
  }
  @Override public boolean isCreateCamelContextPerClass(){
    return true;
  }
  @Before public void setUp() throws Exception {
    CXFTestSupport.getPort1();
    applicationContext=createApplicationContext();
    super.setUp();
    assertNotNull("Should have created a valid spring context",applicationContext);
  }
  @After public void tearDown() throws Exception {
    IOHelper.close(applicationContext);
    super.tearDown();
  }
  @Test public void testInvokingServiceFromCamel() throws Exception {
    try {
      template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,"hello world",CxfConstants.OPERATION_NAME,"echo");
      fail("Should have thrown an exception");
    }
 catch (    Exception ex) {
      Throwable result=ex.getCause();
      assertTrue("Exception is not instance of SoapFault",result instanceof SoapFault);
      assertEquals("Expect to get right detail message",DETAIL_TEXT,((SoapFault)result).getDetail().getTextContent());
      assertEquals("Expect to get right fault-code","{http://schemas.xmlsoap.org/soap/envelope/}Client",((SoapFault)result).getFaultCode().toString());
    }
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    return SpringCamelContext.springCamelContext(applicationContext);
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/CxfCustomizedExceptionContext.xml");
  }
public static class SOAPFaultFactory {
    public SoapFault getSoapFault(){
      return SOAP_FAULT;
    }
  }
}
