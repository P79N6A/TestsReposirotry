/** 
 * @version 
 */
@ContextConfiguration public class HeaderAndTrailerTest extends AbstractJUnit4SpringContextTests {
  private static final Logger LOG=LoggerFactory.getLogger(HeaderAndTrailerTest.class);
  @EndpointInject(uri="mock:results") protected MockEndpoint results;
  protected String[] expectedFirstName={"JOHN","JIMMY","JANE","FRED"};
  @Test public void testHeaderAndTrailer() throws Exception {
    results.expectedMessageCount(6);
    results.assertIsSatisfied();
    int counter=0;
    List<Exchange> list=results.getReceivedExchanges();
    Map<?,?> header=list.get(0).getIn().getBody(Map.class);
    assertEquals("HBT",header.get("INDICATOR"));
    assertEquals("20080817",header.get("DATE"));
    for (    Exchange exchange : list.subList(1,5)) {
      Message in=exchange.getIn();
      Map<?,?> body=in.getBody(Map.class);
      assertNotNull("Should have found body as a Map but was: " + ObjectHelper.className(in.getBody()),body);
      assertEquals("FIRSTNAME",expectedFirstName[counter],body.get("FIRSTNAME"));
      LOG.info("Result: " + counter + " = "+ body);
      counter++;
    }
    Map<?,?> trailer=list.get(5).getIn().getBody(Map.class);
    assertEquals("FBT",trailer.get("INDICATOR"));
    assertEquals("SUCCESS",trailer.get("STATUS"));
  }
}
