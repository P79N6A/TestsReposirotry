@Ignore("Fails on CI server") public class DefaultCamelSwaggerServletTest extends CamelTestSupport {
  @Override protected boolean useJmx(){
    return true;
  }
  @Override protected JndiRegistry createRegistry() throws Exception {
    JndiRegistry jndi=super.createRegistry();
    jndi.bind("dummy-rest",new DummyRestConsumerFactory());
    return jndi;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        rest("/hello").get("/hi").to("log:hi").get("/bye").to("log:bye").post("/bye").to("log:bye");
      }
    }
;
  }
  @Test public void testServlet() throws Exception {
    DefaultCamelSwaggerServlet servlet=new DefaultCamelSwaggerServlet();
    Buffer<RestDefinition> list=servlet.getRestDefinitions(null);
    assertEquals(1,list.size());
    RestDefinition rest=list.iterator().next();
    checkRestDefinition(rest);
    list=servlet.getRestDefinitions(context.getName());
    assertEquals(1,list.size());
    rest=list.iterator().next();
    checkRestDefinition(rest);
    RestDefinition rest2=context.getRestDefinitions().get(0);
    checkRestDefinition(rest2);
  }
  @Test public void testContexts() throws Exception {
    DefaultCamelSwaggerServlet servlet=new DefaultCamelSwaggerServlet();
    List<String> list=servlet.findCamelContexts();
    assertEquals(1,list.length());
    assertEquals(context.getName(),list.head());
  }
  private void checkRestDefinition(  RestDefinition rest){
    assertNotNull(rest);
    assertEquals("/hello",rest.getPath());
    assertEquals("/hi",rest.getVerbs().get(0).getUri());
    assertEquals("get",rest.getVerbs().get(0).asVerb());
    assertEquals("/bye",rest.getVerbs().get(1).getUri());
    assertEquals("get",rest.getVerbs().get(1).asVerb());
    assertEquals("/bye",rest.getVerbs().get(2).getUri());
    assertEquals("post",rest.getVerbs().get(2).asVerb());
  }
}
