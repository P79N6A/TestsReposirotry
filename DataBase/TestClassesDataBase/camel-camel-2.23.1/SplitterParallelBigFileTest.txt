/** 
 * @version 
 */
@Ignore("Manual test") public class SplitterParallelBigFileTest extends ContextTestSupport {
  private int lines=20000;
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/split");
    createDirectory("target/split");
    createBigFile();
    super.setUp();
  }
  private void createBigFile() throws Exception {
    File file=new File("target/split/bigfile.txt");
    FileOutputStream fos=new FileOutputStream(file);
    for (int i=0; i < lines; i++) {
      String line="line-" + i + LS;
      fos.write(line.getBytes());
    }
    IOHelper.close(fos);
  }
  @Test public void testSplitParallelBigFile() throws Exception {
    StopWatch watch=new StopWatch();
    NotifyBuilder builder=new NotifyBuilder(context).whenDone(lines + 1).create();
    boolean done=builder.matches(120,TimeUnit.SECONDS);
    log.info("Took " + TimeUtils.printDuration(watch.taken()));
    if (!done) {
      throw new CamelException("Could not split file in 2 minutes");
    }
    Thread.sleep(60 * 1000);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/split?initialDelay=0&delay=10").split(body().tokenize(LS)).streaming().parallelProcessing().to("log:split?groupSize=1000").end().log("Done splitting ${file:name}");
      }
    }
;
  }
}
