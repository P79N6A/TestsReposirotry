/** 
 * @version 
 */
public class SqlLanguageTest extends SqlTest {
  @Test public void testExpression() throws Exception {
    Language language=assertResolveLanguage(getLanguageName());
    Expression expression=language.createExpression("SELECT * FROM org.apache.camel.builder.sql.Person where city = 'London'");
    List<?> value=expression.evaluate(exchange,List.class);
    assertEquals("List size",2,value.size());
    for (    Object person : value) {
      log.info("Found: " + person);
    }
  }
  @Test public void testExpressionWithHeaderVariable() throws Exception {
    Language language=assertResolveLanguage(getLanguageName());
    Expression expression=language.createExpression("SELECT * FROM org.apache.camel.builder.sql.Person where name = :fooHeader");
    List<?> value=expression.evaluate(exchange,List.class);
    assertEquals("List size",1,value.size());
    for (    Object person : value) {
      log.info("Found: " + person);
      assertEquals("name","James",((Person)person).getName());
    }
  }
  @Test public void testPredicates() throws Exception {
    Language language=assertResolveLanguage(getLanguageName());
    assertPredicate(language.createPredicate("SELECT * FROM org.apache.camel.builder.sql.Person where city = 'London'"),exchange,true);
    assertPredicate(language.createPredicate("SELECT * FROM org.apache.camel.builder.sql.Person where city = 'Manchester'"),exchange,false);
  }
  @Test public void testPredicateWithHeaderVariable() throws Exception {
    Language language=assertResolveLanguage(getLanguageName());
    assertPredicate(language.createPredicate("SELECT * FROM org.apache.camel.builder.sql.Person where name = :fooHeader"),exchange,true);
  }
  protected String getLanguageName(){
    return "sql";
  }
}
