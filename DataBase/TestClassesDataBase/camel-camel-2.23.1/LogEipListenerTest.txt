public class LogEipListenerTest {
  private static boolean listenerFired;
  @Test public void testLogListener() throws Exception {
    listenerFired=false;
    CamelContext context=createCamelContext();
    MockEndpoint mock=context.getEndpoint("mock:foo",MockEndpoint.class);
    mock.expectedMessageCount(1);
    context.addLogListener((exchange,camelLogger,message) -> {
      Assert.assertEquals("Got hello",message);
      listenerFired=true;
      return message + " - modified by listener";
    }
);
    context.start();
    context.createProducerTemplate().sendBody("direct:foo","hello");
    mock.assertIsSatisfied();
    Assert.assertEquals(true,listenerFired);
    context.stop();
  }
  protected CamelContext createCamelContext() throws Exception {
    JndiRegistry registry=new JndiRegistry(JndiTest.createInitialContext());
    CamelContext context=new DefaultCamelContext(registry);
    context.addRoutes(createRouteBuilder());
    return context;
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").routeId("foo").log("Got ${body}").to("mock:foo");
      }
    }
;
  }
}
