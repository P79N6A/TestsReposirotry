@RunWith(MockitoJUnitRunner.class) public class TimerEndpointTest {
  private static final String METRICS_NAME="metrics.name";
  @Mock private MetricRegistry registry;
  private MetricsEndpoint endpoint;
  private InOrder inOrder;
  @Before public void setUp() throws Exception {
    endpoint=new MetricsEndpoint(null,null,registry,MetricsType.TIMER,METRICS_NAME);
    inOrder=Mockito.inOrder(registry);
  }
  @After public void tearDown() throws Exception {
    inOrder.verifyNoMoreInteractions();
  }
  @Test public void testTimerEndpoint() throws Exception {
    assertThat(endpoint,is(notNullValue()));
    assertThat(endpoint.getRegistry(),is(registry));
    assertThat(endpoint.getMetricsName(),is(METRICS_NAME));
  }
  @Test public void testCreateProducer() throws Exception {
    Producer producer=endpoint.createProducer();
    assertThat(producer,is(notNullValue()));
    assertThat(producer,is(instanceOf(TimerProducer.class)));
  }
  @Test public void testGetAction() throws Exception {
    assertThat(endpoint.getAction(),is(nullValue()));
  }
  @Test public void testSetAction() throws Exception {
    assertThat(endpoint.getAction(),is(nullValue()));
    endpoint.setAction(MetricsTimerAction.start);
    assertThat(endpoint.getAction(),is(MetricsTimerAction.start));
  }
}
