public class NettyHttpProducerQueryParamTest extends BaseNettyTest {
  private String url="netty4-http:http://localhost:" + getPort() + "/cheese?urlDecodeHeaders=true";
  @Test public void testQueryParameters() throws Exception {
    Exchange exchange=template.request(url + "&quote=Camel%20rocks",null);
    assertNotNull(exchange);
    String body=exchange.getOut().getBody(String.class);
    Map<?,?> headers=exchange.getOut().getHeaders();
    assertEquals("Bye World",body);
    assertEquals("Carlsberg",headers.get("beer"));
  }
  @Test public void testQueryParametersWithHeader() throws Exception {
    Exchange exchange=template.request(url,new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
      }
    }
);
    assertNotNull(exchange);
    String body=exchange.getOut().getBody(String.class);
    Map<?,?> headers=exchange.getOut().getHeaders();
    assertEquals("Bye World",body);
    assertEquals("Carlsberg",headers.get("beer"));
  }
  @Test public void testQueryParametersWithDynamicPath() throws Exception {
    Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
        exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
      }
    }
);
    assertNotNull(exchange);
    String body=exchange.getOut().getBody(String.class);
    Map<?,?> headers=exchange.getOut().getHeaders();
    assertEquals("Bye World",body);
    assertEquals("Carlsberg",headers.get("beer"));
  }
  @Test public void testQueryParametersInUriWithDynamicPath() throws Exception {
    Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
      }
    }
);
    assertNotNull(exchange);
    String body=exchange.getOut().getBody(String.class);
    Map<?,?> headers=exchange.getOut().getHeaders();
    assertEquals("Bye World",body);
    assertEquals("Carlsberg",headers.get("beer"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(url).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String quote=exchange.getIn().getHeader("quote",String.class);
            assertEquals("Camel rocks",quote);
            exchange.getOut().setBody("Bye World");
            exchange.getOut().setHeader("beer","Carlsberg");
          }
        }
);
      }
    }
;
  }
}
