/** 
 * @version 
 */
public class CamelContextFactoryBeanTest extends Assert {
  private CamelContextFactoryBean factory;
  @Before public void setUp() throws Exception {
    factory=new CamelContextFactoryBean();
    factory.setId("camelContext");
  }
  @Test public void testGetDefaultUuidGenerator() throws Exception {
    factory.setApplicationContext(new StaticApplicationContext());
    factory.afterPropertiesSet();
    UuidGenerator uuidGenerator=factory.getContext().getUuidGenerator();
    assertTrue(uuidGenerator instanceof DefaultUuidGenerator);
  }
  @Test public void testGetCustomUuidGenerator() throws Exception {
    StaticApplicationContext applicationContext=new StaticApplicationContext();
    applicationContext.registerSingleton("uuidGenerator",SimpleUuidGenerator.class);
    factory.setApplicationContext(applicationContext);
    factory.afterPropertiesSet();
    UuidGenerator uuidGenerator=factory.getContext().getUuidGenerator();
    assertTrue(uuidGenerator instanceof SimpleUuidGenerator);
  }
  @Test public void testSetEndpoints() throws Exception {
    CamelContextFactoryBean camelContext=new CamelContextFactoryBean();
    List<CamelEndpointFactoryBean> endpoints=new LinkedList<>();
    CamelEndpointFactoryBean endpoint=new CamelEndpointFactoryBean();
    endpoint.setId("endpoint1");
    endpoint.setUri("mock:end");
    endpoints.add(endpoint);
    camelContext.setEndpoints(endpoints);
    URL expectedContext=getClass().getResource("/org/apache/camel/spring/context-with-endpoint.xml");
    Diff diff=DiffBuilder.compare(expectedContext).withTest(Input.fromJaxb(camelContext)).ignoreWhitespace().ignoreComments().checkForSimilar().build();
    assertFalse("Expected context and actual context differ:\n" + diff.toString(),diff.hasDifferences());
  }
  @Test public void testCustomModelJAXBContextFactory() throws Exception {
    StaticApplicationContext applicationContext=new StaticApplicationContext();
    applicationContext.registerSingleton("customModelJAXBContextFactory",CustomModelJAXBContextFactory.class);
    factory.setApplicationContext(applicationContext);
    factory.afterPropertiesSet();
    ModelJAXBContextFactory modelJAXBContextFactory=factory.getContext().getModelJAXBContextFactory();
    assertTrue(modelJAXBContextFactory instanceof CustomModelJAXBContextFactory);
  }
private static class CustomModelJAXBContextFactory extends DefaultModelJAXBContextFactory {
  }
}
