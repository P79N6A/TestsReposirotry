public class SpringAwsXRaySimpleRouteTest extends CamelSpringTestSupport {
  @Rule public FakeAWSDaemon socketListener=new FakeAWSDaemon();
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/aws/xray/AwsXRaySimpleRouteTest.xml");
  }
  @Test public void testRoute() throws Exception {
    NotifyBuilder notify=new NotifyBuilder(context).whenDone(5).create();
    for (int i=0; i < 5; i++) {
      template.sendBody("seda:dude","Hello World");
    }
    assertThat("Not all exchanges were fully processed",notify.matches(30,TimeUnit.SECONDS),is(equalTo(true)));
    List<TestTrace> testData=Arrays.asList(TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude").withSubsegment(TestDataBuilder.createSubsegment("car"))),TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude").withSubsegment(TestDataBuilder.createSubsegment("car"))),TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude").withSubsegment(TestDataBuilder.createSubsegment("car"))),TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude").withSubsegment(TestDataBuilder.createSubsegment("car"))),TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude").withSubsegment(TestDataBuilder.createSubsegment("car"))));
    Thread.sleep(2000);
    TestUtils.checkData(socketListener.getReceivedData(),testData);
  }
}
