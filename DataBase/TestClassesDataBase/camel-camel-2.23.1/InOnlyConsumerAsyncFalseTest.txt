/** 
 */
public class InOnlyConsumerAsyncFalseTest extends JmsTestSupport {
  private static final String SJMS_QUEUE_NAME="sjms:queue:in.only.consumer.synch";
  private static final String MOCK_RESULT="mock:result";
  private static String beforeThreadName;
  private static String afterThreadName;
  @Test public void testInOnlyConsumerAsyncTrue() throws Exception {
    getMockEndpoint(MOCK_RESULT).expectedBodiesReceived("Hello Camel","Hello World");
    template.sendBody(SJMS_QUEUE_NAME,"Hello Camel");
    template.sendBody(SJMS_QUEUE_NAME,"Hello World");
    Thread.sleep(3000);
    assertMockEndpointsSatisfied();
    assertTrue(beforeThreadName.equals(afterThreadName));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(SJMS_QUEUE_NAME).to("log:before").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            beforeThreadName=Thread.currentThread().getName();
            if (exchange.getIn().getBody(String.class).equals("Hello Camel")) {
              Thread.sleep(2000);
            }
          }
        }
).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            afterThreadName=Thread.currentThread().getName();
          }
        }
).to("log:after").to(MOCK_RESULT);
      }
    }
;
  }
}
