/** 
 * @version 
 */
public class RouteServicesStartupOrderTest extends ContextTestSupport {
  private static String startOrder="";
  private MyServiceBean service1=new MyServiceBean("1");
  private MyServiceBean service2=new MyServiceBean("2");
  private MyServiceBean service3=new MyServiceBean("3");
  private MyServiceBean service4=new MyServiceBean("4");
  @Test public void testRouteServiceStartupOrder() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    DefaultCamelContext dcc=(DefaultCamelContext)context;
    List<RouteStartupOrder> order=dcc.getRouteStartupOrder();
    assertEquals(4,order.size());
    assertEquals("seda://foo",order.get(0).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://start",order.get(1).getRoute().getEndpoint().getEndpointUri());
    assertEquals("seda://bar",order.get(2).getRoute().getEndpoint().getEndpointUri());
    assertEquals("direct://bar",order.get(3).getRoute().getEndpoint().getEndpointUri());
    assertEquals("2143",startOrder);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").startupOrder(2).process(service1).to("seda:foo");
        from("seda:foo").startupOrder(1).process(service2).to("mock:result");
        from("direct:bar").startupOrder(9).process(service3).to("seda:bar");
        from("seda:bar").startupOrder(5).process(service4).to("mock:other");
      }
    }
;
  }
public class MyServiceBean extends ServiceSupport implements Processor {
    private String name;
    private boolean started;
    public MyServiceBean(    String name){
      this.name=name;
    }
    protected void doStart() throws Exception {
      startOrder+=name;
      started=true;
    }
    protected void doStop() throws Exception {
      started=false;
    }
    public boolean isStarted(){
      return started;
    }
    public String getName(){
      return name;
    }
    public void setStarted(    boolean started){
      this.started=started;
    }
    public void process(    Exchange exchange) throws Exception {
    }
  }
}
