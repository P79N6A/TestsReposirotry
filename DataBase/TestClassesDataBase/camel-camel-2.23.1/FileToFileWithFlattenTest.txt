/** 
 * @version 
 */
public class FileToFileWithFlattenTest extends ContextTestSupport {
  private String fileUrl="file://target/flatten-in";
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/flatten-in");
    deleteDirectory("target/flatten-out");
    super.setUp();
    template.sendBodyAndHeader(fileUrl,"Bye World",Exchange.FILE_NAME,"bye.txt");
    template.sendBodyAndHeader(fileUrl,"Hello World",Exchange.FILE_NAME,"sub/hello.txt");
    template.sendBodyAndHeader(fileUrl,"Goodday World",Exchange.FILE_NAME,"sub/sub2/goodday.txt");
  }
  @Override @After public void tearDown() throws Exception {
    context.stop();
    super.tearDown();
  }
  @Test public void testFlatternConsumer() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/flatten-in?initialDelay=0&delay=10&recursive=true&flatten=true").to("file://target/flatten-out","mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(3);
    mock.expectedFileExists("target/flatten-out/bye.txt");
    mock.expectedFileExists("target/flatten-out/hello.txt");
    mock.expectedFileExists("target/flatten-out/goodday.txt");
    mock.expectedFileExists("target/flatten-in/.camel/bye.txt");
    mock.expectedFileExists("target/flatten-in/sub/.camel/hello.txt");
    mock.expectedFileExists("target/flatten-in/sub/sub2/.camel/goodday.txt");
    assertMockEndpointsSatisfied();
  }
  @Test public void testFlatternProducer() throws Exception {
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/flatten-in?initialDelay=0&delay=10&recursive=true").to("file://target/flatten-out?flatten=true","mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(3);
    mock.expectedFileExists("target/flatten-out/bye.txt");
    mock.expectedFileExists("target/flatten-out/hello.txt");
    mock.expectedFileExists("target/flatten-out/goodday.txt");
    mock.expectedFileExists("target/flatten-in/.camel/bye.txt");
    mock.expectedFileExists("target/flatten-in/sub/.camel/hello.txt");
    mock.expectedFileExists("target/flatten-in/sub/sub2/.camel/goodday.txt");
    assertMockEndpointsSatisfied();
  }
}
