/** 
 * @version 
 */
public class FileMarkerFileRecursiveFilterDeleteOldLockFilesIncludeTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/oldlock");
    super.setUp();
  }
  @Test public void testDeleteOldLockOnStartup() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(2);
    mock.expectedBodiesReceived("Bye World","Hi World");
    mock.message(0).header(Exchange.FILE_NAME_ONLY).isEqualTo("bye.txt");
    mock.message(1).header(Exchange.FILE_NAME_ONLY).isEqualTo("gooday.txt");
    mock.expectedFileExists("target/oldlock/bar/davs.txt");
    mock.expectedFileExists("target/oldlock/bar/davs.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    template.sendBodyAndHeader("file:target/oldlock","locked",Exchange.FILE_NAME,"hello.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    template.sendBodyAndHeader("file:target/oldlock","Bye World",Exchange.FILE_NAME,"bye.txt");
    template.sendBodyAndHeader("file:target/oldlock/foo","locked",Exchange.FILE_NAME,"gooday.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    template.sendBodyAndHeader("file:target/oldlock/foo","Hi World",Exchange.FILE_NAME,"gooday.txt");
    template.sendBodyAndHeader("file:target/oldlock/bar","locked",Exchange.FILE_NAME,"davs.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    template.sendBodyAndHeader("file:target/oldlock/bar","Davs World",Exchange.FILE_NAME,"davs.txt");
    context.startRoute("foo");
    assertMockEndpointsSatisfied();
    assertFileNotExists("target/oldlock/hello.txt." + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    assertFileNotExists("target/oldlock/foo/hegooddayllo.txt." + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/oldlock?initialDelay=0&delay=10&recursive=true&sortBy=file:name&include=.*(hello.txt|bye.txt|gooday.txt)$").routeId("foo").noAutoStartup().convertBodyTo(String.class).to("mock:result");
      }
    }
;
  }
}
