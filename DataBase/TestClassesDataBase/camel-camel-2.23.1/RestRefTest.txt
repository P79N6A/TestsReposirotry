/** 
 * @version 
 */
public class RestRefTest extends SpringTestSupport {
  @Test public void testRestRefTest() throws Exception {
    assertEquals(2 + 3,context.getRoutes().size());
    assertEquals(2,context.getRestDefinitions().size());
    RestDefinition rest=context.getRestDefinitions().get(0);
    assertNotNull(rest);
    assertEquals("/say/hello",rest.getPath());
    assertEquals(1,rest.getVerbs().size());
    ToDefinition to=assertIsInstanceOf(ToDefinition.class,rest.getVerbs().get(0).getTo());
    assertEquals("direct:hello",to.getUri());
    rest=context.getRestDefinitions().get(1);
    assertNotNull(rest);
    assertEquals("/say/bye",rest.getPath());
    assertEquals(2,rest.getVerbs().size());
    assertEquals("application/json",rest.getVerbs().get(0).getConsumes());
    to=assertIsInstanceOf(ToDefinition.class,rest.getVerbs().get(0).getTo());
    assertEquals("direct:bye",to.getUri());
    getMockEndpoint("mock:update").expectedMessageCount(1);
    template.sendBody("seda:post-say-bye","I was here");
    assertMockEndpointsSatisfied();
    String out=template.requestBody("seda:get-say-hello","Me",String.class);
    assertEquals("Hello World",out);
    String out2=template.requestBody("seda:get-say-bye","Me",String.class);
    assertEquals("Bye World",out2);
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    System.setProperty("CamelSedaPollTimeout","10");
    return new ClassPathXmlApplicationContext("org/apache/camel/component/rest/RestRefTest.xml");
  }
}
