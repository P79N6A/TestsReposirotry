/** 
 * Tests that multicast functionality works correctly
 */
public class MulticastDisruptorComponentTest extends CamelTestSupport {
  private static final String MULTIPLE_CONSUMERS_ENDPOINT_URI="disruptor:test?multipleConsumers=true";
  private static final Integer VALUE=Integer.valueOf(42);
  @EndpointInject(uri="mock:result1") protected MockEndpoint resultEndpoint1;
  @EndpointInject(uri="mock:result2") protected MockEndpoint resultEndpoint2;
  @Produce(uri="disruptor:test") protected ProducerTemplate template;
  @Test public void testMulticastProduce() throws InterruptedException {
    resultEndpoint1.expectedBodiesReceived(VALUE);
    resultEndpoint1.setExpectedMessageCount(1);
    resultEndpoint2.expectedBodiesReceived(VALUE);
    resultEndpoint2.setExpectedMessageCount(1);
    template.asyncSendBody(MULTIPLE_CONSUMERS_ENDPOINT_URI,VALUE);
    resultEndpoint1.await(5,TimeUnit.SECONDS);
    resultEndpoint1.assertIsSatisfied(1);
    resultEndpoint2.await(5,TimeUnit.SECONDS);
    resultEndpoint2.assertIsSatisfied(1);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("disruptor:test?multipleConsumers=true").to("mock:result1").setShutdownRoute(ShutdownRoute.Defer);
        from("disruptor:test?multipleConsumers=true").to("mock:result2").setShutdownRoute(ShutdownRoute.Defer);
      }
    }
;
  }
}
