/** 
 * Lets use a custom CamelModule to perform explicit binding of route builders
 * @version
 */
public class GuiceRouteWithNamedKeysTest extends TestSupport {
public static class MyModule extends CamelModuleWithMatchingRoutes {
    @Provides @Named("foo") protected MyConfigurableRoute2 createRoute1(){
      return new MyConfigurableRoute2("direct:a","direct:b");
    }
  }
  @Test public void testGuice() throws Exception {
    Injector injector=Guice.createInjector(new MyModule());
    MyConfigurableRoute2 instance=injector.getInstance(Key.get(MyConfigurableRoute2.class,Names.named("foo")));
    assertNotNull("should have found a key for 'foo'",instance);
    log.info("Found instance: " + instance);
    Collection<RouteBuilder> list=Injectors.getInstancesOf(injector,RouteBuilder.class);
    log.info("RouteBuilder List: " + list);
    assertEquals("route builder list: " + list,1,list.size());
    list=Injectors.getInstancesOf(injector,Matchers.subclassesOf(RouteBuilder.class));
    log.info("RouteBuilder List: " + list);
    assertEquals("route builder list: " + list,1,list.size());
    GuiceTest.assertCamelContextRunningThenCloseInjector(injector);
  }
}
