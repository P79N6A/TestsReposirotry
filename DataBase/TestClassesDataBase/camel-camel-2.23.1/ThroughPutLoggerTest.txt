/** 
 * @version 
 */
public class ThroughputLoggerTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testSendMessageToLogUsingGroupSize() throws Exception {
    context.addRoutes(new RouteBuilder(){
      public void configure(){
        from("seda:in").to("log:hello?groupSize=2").delay(100).to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(4);
    template.sendBody("seda:in","Hello World");
    template.sendBody("seda:in","Hello World");
    template.sendBody("seda:in","Bye World");
    template.sendBody("seda:in","Bye World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSendMessageToLogUsingGroupInterval() throws Exception {
    context.addRoutes(new RouteBuilder(){
      public void configure(){
        from("seda:in").to("log:hello?groupInterval=200&groupDelay=400&groupActiveOnly=false").delay(50).to("mock:result");
      }
    }
);
    context.start();
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(20);
    for (int i=0; i < 20; i++) {
      template.sendBody("seda:in","Hello World");
    }
    assertMockEndpointsSatisfied();
  }
}
