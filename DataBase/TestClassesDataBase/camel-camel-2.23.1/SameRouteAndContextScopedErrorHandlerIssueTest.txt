/** 
 */
public class SameRouteAndContextScopedErrorHandlerIssueTest extends ContextTestSupport {
  private final AtomicInteger counter=new AtomicInteger();
  @Test public void testSame() throws Exception {
    getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    assertEquals(2,counter.get());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(defaultErrorHandler().maximumRedeliveries(2).redeliveryDelay(0));
        onException(IllegalArgumentException.class).onRedelivery(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            log.info("OnRedelivery invoked");
            counter.incrementAndGet();
          }
        }
);
        from("direct:start").errorHandler(defaultErrorHandler().maximumRedeliveries(2).redeliveryDelay(0)).process(new Processor(){
          private int counter;
          @Override public void process(          Exchange exchange) throws Exception {
            if (counter++ < 2) {
              throw new IllegalArgumentException("Damn");
            }
            exchange.getIn().setBody("Bye World");
          }
        }
).to("log:result").to("mock:result");
      }
    }
;
  }
}
