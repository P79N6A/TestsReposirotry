/** 
 * Unit test for wiki documentation
 */
public class MinaConsumerTest extends BaseMinaTest {
  int port1;
  int port2;
  @Test public void testSendTextlineText() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("mina:tcp://localhost:" + port1 + "?textline=true&sync=false","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testSendTextlineSyncText() throws Exception {
    String response=(String)template.requestBody("mina:tcp://localhost:" + port2 + "?textline=true&sync=true","World");
    assertEquals("Bye World",response);
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        port1=getPort();
        port2=getNextPort();
        from("mina:tcp://localhost:" + port1 + "?textline=true&sync=false").to("mock:result");
        from("mina:tcp://localhost:" + port2 + "?textline=true&sync=true").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            exchange.getOut().setBody("Bye " + body);
          }
        }
);
      }
    }
;
  }
}
