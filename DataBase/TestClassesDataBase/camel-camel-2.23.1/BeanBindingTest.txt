/** 
 * Bean binding unit test.
 */
public class BeanBindingTest extends SpringTestSupport {
  protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/bean/beanBindingTest.xml");
  }
  @Test public void testBeanBindingUsingBeanExpression() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(2);
    result.expectedBodiesReceived("Bye Claus","Bye James");
    result.message(0).header("count").isEqualTo(1);
    result.message(1).header("count").isEqualTo(2);
    template.sendBody("direct:startBeanExpression","Claus");
    template.sendBody("direct:startBeanExpression","James");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanBindingUsingConstantExpression() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(2);
    result.expectedBodiesReceived("Bye Claus","Bye James");
    result.message(0).header("count").isEqualTo(5);
    result.message(1).header("count").isEqualTo(5);
    template.sendBody("direct:startConstantExpression","Claus");
    template.sendBody("direct:startConstantExpression","James");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanBindingUsingHeaderExpression() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(2);
    result.expectedBodiesReceived("Bye Claus","Bye James");
    result.message(0).header("count").isEqualTo(1);
    result.message(1).header("count").isEqualTo(2);
    template.sendBodyAndHeader("direct:startHeaderExpression","Claus","number","1");
    template.sendBodyAndHeader("direct:startHeaderExpression","James","number","2");
    assertMockEndpointsSatisfied();
  }
  @Test public void testBeanBindingUsingManyExpression() throws Exception {
    MockEndpoint result=getMockEndpoint("mock:result");
    result.expectedMessageCount(2);
    result.expectedBodiesReceived("Bye Claus","Bye James");
    result.message(0).header("count").isEqualTo(5 * 3);
    result.message(1).header("count").isEqualTo(5 * 4);
    template.sendBodyAndHeader("direct:startMany","Claus","number","3");
    template.sendBodyAndHeader("direct:startMany","James","number","4");
    assertMockEndpointsSatisfied();
  }
}
