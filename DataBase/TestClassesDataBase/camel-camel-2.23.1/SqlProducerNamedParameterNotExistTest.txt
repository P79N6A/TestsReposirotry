/** 
 * @version 
 */
public class SqlProducerNamedParameterNotExistTest extends CamelTestSupport {
  private EmbeddedDatabase db;
  @Before public void setUp() throws Exception {
    db=new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/createAndPopulateDatabase.sql").build();
    super.setUp();
  }
  @After public void tearDown() throws Exception {
    super.tearDown();
    db.shutdown();
  }
  @Test public void testNamedParameterNotExistFromBody() throws Exception {
    Map<String,Object> map=new HashMap<>();
    map.put("foo","ASF");
    try {
      template.sendBody("direct:start",map);
      fail("Should have thrown exception");
    }
 catch (    Exception e) {
      assertTrue(e.getCause().getMessage().startsWith("Cannot find key [lic]"));
    }
  }
  @Test public void testNamedParameterNotExistFromHeader() throws Exception {
    try {
      template.sendBodyAndHeader("direct:start","This is a dummy body","foo","ASF");
      fail("Should have thrown exception");
    }
 catch (    Exception e) {
      assertTrue(e.getCause().getMessage().startsWith("Cannot find key [lic]"));
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        getContext().getComponent("sql",SqlComponent.class).setDataSource(db);
        from("direct:start").to("sql:select * from projects where license = :#lic order by id").to("mock:result");
      }
    }
;
  }
}
