public class ProducerParamsBasicTest extends CamelSpringTestSupport {
  private static URI anonymousUri;
  private final String xmlBody="<GetQuote xmlns=\"http://www.webserviceX.NET/\"><symbol>GOOG</symbol></GetQuote>";
  private OutputChannelReceiver sender;
  @Produce private ProducerTemplate template;
  @Before public void setUp() throws Exception {
    super.setUp();
    sender=getMandatoryBean(OutputChannelReceiver.class,"senderReceiver");
    sender.clear();
  }
  @BeforeClass public static void setUpConstants() throws Exception {
    anonymousUri=new URI("http://www.w3.org/2005/08/addressing/anonymous");
  }
  @Test public void testDefaultReplyTo() throws Exception {
    template.requestBody("direct:defaultOk",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri);
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(anonymousUri);
  }
  @Test public void testDefaulFaultTo() throws Exception {
    template.requestBody("direct:defaultFault",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri);
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(anonymousUri);
  }
  @Test public void testReplyTo() throws Exception {
    template.requestBody("direct:replyTo",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(new URI("mailto://replyTo@chocolatejar.eu"));
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://fault.to"));
  }
  @Test public void testFaultTo() throws Exception {
    template.requestBody("direct:faultTo",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri);
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://fault.to"));
  }
  @Test public void testFaultFollowsReply() throws Exception {
    template.requestBody("direct:omittedFaultTo",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(new URI("http://reply.to"));
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://reply.to"));
  }
  @Test public void testReplyDoesntFollowFault() throws Exception {
    template.requestBody("direct:omittedReplyTo",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri);
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://fault.to"));
  }
  @Test public void testEmptyReplyAndFaultAndActionMustBePresent() throws Exception {
    template.requestBody("direct:empty",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNotNull();
    Assertions.assertThat(wsaProperties.getAction()).isEqualTo(new URI("http://turnOnWSA.com"));
    Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri);
    Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(anonymousUri);
  }
  @Test public void testNoAction() throws Exception {
    template.requestBody("direct:noAction",xmlBody);
    assertNotNull(sender.getMessageContext());
    Assertions.assertThat(sender.getMessageContext()).isNotNull();
    MessageAddressingProperties wsaProperties=TestUtil.getWSAProperties((SoapMessage)sender.getMessageContext().getRequest());
    Assertions.assertThat(wsaProperties).isNull();
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext(new String[]{"org/apache/camel/component/spring/ws/addresing/ProducerParamsBasicTest-context.xml"});
  }
}
