/** 
 * @version 
 */
public class ManagedCustomBeanTest extends ManagementTestSupport {
  @Test public void testManageCustomBean() throws Exception {
    if (isPlatform("aix")) {
      return;
    }
    MBeanServer mbeanServer=getMBeanServer();
    ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"custom\"");
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedHeaderReceived("foo","hey");
    template.sendBody("direct:start","World");
    assertMockEndpointsSatisfied();
    String foo=(String)mbeanServer.getAttribute(on,"Foo");
    assertEquals("hey",foo);
    mbeanServer.setAttribute(on,new Attribute("Foo","changed"));
    resetMocks();
    getMockEndpoint("mock:result").expectedMessageCount(1);
    getMockEndpoint("mock:result").expectedHeaderReceived("foo","changed");
    template.sendBody("direct:start","Camel");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("foo").bean(new MyCustomBean()).id("custom").to("mock:result");
      }
    }
;
  }
@ManagedResource(description="My Managed Bean") public static class MyCustomBean {
    private String foo="hey";
    @ManagedAttribute public String getFoo(){
      return foo;
    }
    @ManagedAttribute public void setFoo(    String foo){
      this.foo=foo;
    }
    public String doSomething(    String body,    @Headers Map<Object,Object> headers) throws Exception {
      headers.put("foo",foo);
      return "Hello " + body;
    }
  }
}
