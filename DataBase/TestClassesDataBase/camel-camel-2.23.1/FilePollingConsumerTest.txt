/** 
 * To test that using polling consumer with file will not keep scheduled file consumer keep running in the background. It should suspend/resume the consumer on demand instead.
 */
public class FilePollingConsumerTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/enrich");
    super.setUp();
  }
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testPollingConsumer() throws Exception {
    template.sendBodyAndHeader("file:target/enrich","Hello World",Exchange.FILE_NAME,"hello.txt");
    PollingConsumer consumer=context.getEndpoint("file:target/enrich").createPollingConsumer();
    consumer.start();
    Exchange exchange=consumer.receive(5000);
    assertNotNull(exchange);
    assertEquals("Hello World",exchange.getIn().getBody(String.class));
    Thread.sleep(500);
    template.sendBodyAndHeader("file:target/enrich","Bye World",Exchange.FILE_NAME,"bye.txt");
    Thread.sleep(1000);
    File file=new File("target/enrich/bye.txt");
    assertTrue("File should exist " + file,file.exists());
    consumer.stop();
  }
}
