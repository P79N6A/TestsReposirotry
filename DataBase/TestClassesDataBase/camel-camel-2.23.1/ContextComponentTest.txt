@RunWith(Arquillian.class) public class ContextComponentTest {
  @Inject private CamelContext main;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClasses(DefaultCamelContextBean.class,FirstNamedCamelContextBean.class,FirstNamedCamelContextRoute.class,SecondNamedCamelContextBean.class,SecondNamedCamelContextRoute.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test @InSequence(1) public void addRouteToMainContext() throws Exception {
    main.addRoutes(new RouteBuilder(){
      @Override public void configure(){
        from("direct:inbound").to("first:in");
        from("first:out").to("second:in");
        from("second:out").to("mock:outbound");
      }
    }
);
  }
  @Test @InSequence(2) public void sendMessageToInbound(  @Uri("direct:inbound") ProducerTemplate inbound,  @Uri("mock:outbound") MockEndpoint outbound) throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("second-first-test");
    inbound.sendBody("test");
    MockEndpoint.assertIsSatisfied(1L,TimeUnit.SECONDS,outbound);
  }
}
