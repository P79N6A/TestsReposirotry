/** 
 */
public class DumpModelAsXmlChoiceFilterRouteTest extends ContextTestSupport {
  @Test public void testDumpModelAsXml() throws Exception {
    String xml=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("myRoute"));
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<header>gold</header>"));
    assertTrue(xml.contains("<header>extra-gold</header>"));
    assertTrue(xml.contains("<simple>${body} contains 'Camel'</simple>"));
  }
  @Test public void testDumpModelAsXmAl() throws Exception {
    String xml=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("a"));
    assertNotNull(xml);
    log.info(xml);
    assertTrue(xml.contains("<constant>bar</constant>"));
    assertTrue(xml.contains("<expressionDefinition>header{test} is not null</expressionDefinition>"));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").routeId("myRoute").to("log:input").choice().when().header("gold").to("mock:gold").filter().header("extra-gold").to("mock:extra-gold").endChoice().when().simple("${body} contains 'Camel'").to("mock:camel").otherwise().to("mock:other").end().to("mock:result");
        from("seda:a").routeId("a").setProperty("foo").constant("bar").choice().when(header("test").isNotNull()).log("not null").when(xpath("/foo/bar")).log("xpath").end().to("mock:a");
      }
    }
;
  }
}
