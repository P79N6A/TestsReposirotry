/** 
 * Using exclusive fixed replyTo queues should be faster as there is no need for JMSMessage selectors.
 * @version 
 */
public class JmsRequestReplyExclusiveReplyToTest extends CamelTestSupport {
  @Test public void testJmsRequestReplyExclusiveFixedReplyTo() throws Exception {
    StopWatch watch=new StopWatch();
    assertEquals("Hello A",template.requestBody("activemq:queue:foo?replyTo=bar&replyToType=Exclusive","A"));
    assertEquals("Hello B",template.requestBody("activemq:queue:foo?replyTo=bar&replyToType=Exclusive","B"));
    assertEquals("Hello C",template.requestBody("activemq:queue:foo?replyTo=bar&replyToType=Exclusive","C"));
    assertEquals("Hello D",template.requestBody("activemq:queue:foo?replyTo=bar&replyToType=Exclusive","D"));
    assertEquals("Hello E",template.requestBody("activemq:queue:foo?replyTo=bar&replyToType=Exclusive","E"));
    long delta=watch.stop();
    assertTrue("Should be faster than about 4 seconds, was: " + delta,delta < 4200);
  }
  @Test public void testInvalidConfiguration() throws Exception {
    try {
      template.requestBody("activemq:queue:foo?replyTo=bar&replyToType=Temporary","Hello World");
      fail("Should have thrown exception");
    }
 catch (    CamelExecutionException e) {
      assertIsInstanceOf(FailedToCreateProducerException.class,e.getCause());
      assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause());
      assertEquals("ReplyToType Temporary is not supported when replyTo bar is also configured.",e.getCause().getCause().getMessage());
    }
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("activemq:queue:foo").transform(body().prepend("Hello "));
      }
    }
;
  }
}
