/** 
 * Unit test that we can produce JMS message from files
 */
@ContextConfiguration public class SpringApnsConsumerTest extends AbstractJUnit4SpringContextTests {
  @Autowired protected CamelContext camelContext;
  @EndpointInject(uri="mock:result") protected MockEndpoint mock;
  private ApnsServerStub server;
  @Before public void startup() throws InterruptedException {
    server=ApnsUtils.prepareAndStartServer(TestConstants.TEST_GATEWAY_PORT,TestConstants.TEST_FEEDBACK_PORT);
  }
  @After public void stop(){
    server.stop();
  }
  @Test(timeout=5000) public void testConsumer() throws Exception {
    byte[] deviceTokenBytes=ApnsUtils.createRandomDeviceTokenBytes();
    String deviceToken=ApnsUtils.encodeHexToken(deviceTokenBytes);
    mock.expectedMessageCount(1);
    mock.message(0).body().isInstanceOf(InactiveDevice.class);
    byte[] feedBackBytes=ApnsUtils.generateFeedbackBytes(deviceTokenBytes);
    server.getToSend().write(feedBackBytes);
    Thread.sleep(1000);
    mock.assertIsSatisfied();
    InactiveDevice inactiveDevice=(InactiveDevice)mock.getExchanges().get(0).getIn().getBody();
    Assert.assertNotNull(inactiveDevice);
    Assert.assertNotNull(inactiveDevice.getDate());
    Assert.assertNotNull(inactiveDevice.getDeviceToken());
    Assert.assertEquals(deviceToken,inactiveDevice.getDeviceToken());
  }
}
