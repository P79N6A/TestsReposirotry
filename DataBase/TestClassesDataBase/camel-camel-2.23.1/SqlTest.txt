/** 
 * @version 
 */
public class SqlTest extends CamelTestSupport {
  protected Exchange exchange;
  @Test public void testExpression() throws Exception {
    Expression expression=sql("SELECT * FROM org.apache.camel.builder.sql.Person where city = 'London'");
    List<?> value=expression.evaluate(exchange,List.class);
    assertEquals("List size",2,value.size());
    for (    Object person : value) {
      log.info("Found: " + person);
    }
  }
  @Test public void testExpressionWithHeaderVariable() throws Exception {
    Expression expression=sql("SELECT * FROM org.apache.camel.builder.sql.Person where name = :fooHeader");
    List<?> value=expression.evaluate(exchange,List.class);
    assertEquals("List size",1,value.size());
    for (    Object person : value) {
      log.info("Found: " + person);
      assertEquals("name","James",((Person)person).getName());
    }
  }
  @Test public void testPredicates() throws Exception {
    assertPredicate(sql("SELECT * FROM org.apache.camel.builder.sql.Person where city = 'London'"),exchange,true);
    assertPredicate(sql("SELECT * FROM org.apache.camel.builder.sql.Person where city = 'Manchester'"),exchange,false);
  }
  @Test public void testPredicateWithHeaderVariable() throws Exception {
    assertPredicate(sql("SELECT * FROM org.apache.camel.builder.sql.Person where name = :fooHeader"),exchange,true);
  }
  @Before public void setUp() throws Exception {
    super.setUp();
    exchange=createExchange();
  }
  protected Exchange createExchange(){
    Exchange exchange=new DefaultExchange(context);
    Message message=exchange.getIn();
    message.setHeader("fooHeader","James");
    Person[] people={new Person("James","London"),new Person("Guillaume","Normandy"),new Person("Rob","London"),new Person("Hiram","Tampa")};
    message.setBody(people);
    return exchange;
  }
}
