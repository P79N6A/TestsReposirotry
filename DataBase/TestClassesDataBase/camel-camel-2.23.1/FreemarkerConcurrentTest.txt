/** 
 * @version 
 */
public class FreemarkerConcurrentTest extends CamelTestSupport {
  @Test public void testNoConcurrentProducers() throws Exception {
    doSendMessages(1,1);
  }
  @Test public void testConcurrentProducers() throws Exception {
    doSendMessages(10,5);
  }
  private void doSendMessages(  int files,  int poolSize) throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(files);
    getMockEndpoint("mock:result").assertNoDuplicates(body());
    getMockEndpoint("mock:result").message(0).body().contains("Bye");
    ExecutorService executor=Executors.newFixedThreadPool(poolSize);
    for (int i=0; i < files; i++) {
      final int index=i;
      executor.submit(new Callable<Object>(){
        public Object call() throws Exception {
          template.sendBody("direct:start","Hello " + index);
          return null;
        }
      }
);
    }
    assertMockEndpointsSatisfied();
    executor.shutdownNow();
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("freemarker:org/apache/camel/component/freemarker/Concurrent.ftl").to("mock:result");
      }
    }
;
  }
}
