public class ConsumerEndpointMappingResponseHandlingRouteTest extends CamelSpringTestSupport {
  private final String xmlRequestForGoogleStockQuote="<GetQuote xmlns=\"http://www.webserviceX.NET/\"><symbol>GOOG</symbol></GetQuote>";
  private final String xmlRequestForGoogleStockQuoteNoNamespace="<GetQuote><symbol>GOOG</symbol></GetQuote>";
  private final String xmlRequestForGoogleStockQuoteNoNamespaceDifferentBody="<GetQuote><symbol>GRABME</symbol></GetQuote>";
  private String expectedResponse;
  private WebServiceTemplate webServiceTemplate;
  @Before public void setUp() throws Exception {
    super.setUp();
    webServiceTemplate=applicationContext.getBean("webServiceTemplate",WebServiceTemplate.class);
    expectedResponse=context.getTypeConverter().convertTo(String.class,getClass().getResourceAsStream("/stockquote-response.xml"));
  }
  @Test public void testRootQName() throws Exception {
    StreamSource source=new StreamSource(new StringReader(xmlRequestForGoogleStockQuote));
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult(source,result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testSoapAction() throws Exception {
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult(getDefaultRequestSource(),new SoapActionCallback("http://www.webserviceX.NET/GetQuote"),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testUri() throws Exception {
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult("http://localhost/stockquote2",getDefaultRequestSource(),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testUriPath() throws Exception {
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult("http://localhost/stockquote3/service",getDefaultRequestSource(),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
    sw=new StringWriter();
    result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult("http://localhost:8080/stockquote3/service",getDefaultRequestSource(),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testUriPathWildcard() throws Exception {
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult("http://localhost/stockquote4/service/test",getDefaultRequestSource(),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
    sw=new StringWriter();
    result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult("http://localhost:8080/stockquote4/services/test",getDefaultRequestSource(),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testXPath() throws Exception {
    StreamSource source=new StreamSource(new StringReader(xmlRequestForGoogleStockQuoteNoNamespaceDifferentBody));
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult(source,result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testAction() throws Exception {
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult(getDefaultRequestSource(),new ActionCallback("http://www.webserviceX.NET/GetQuote"),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Test public void testTo() throws Exception {
    StringWriter sw=new StringWriter();
    StreamResult result=new StreamResult(sw);
    webServiceTemplate.sendSourceAndReceiveToResult(getDefaultRequestSource(),new ActionCallback(new URI("http://action-does-not-matter-here"),new Addressing10(),new URI("http://url.to")),result);
    assertNotNull(result);
    TestUtil.assertEqualsIgnoreNewLinesSymbol(expectedResponse,sw.toString());
  }
  @Override protected AbstractXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/component/spring/ws/ConsumerEndpointMappingResponseHandlingRouteTest-context.xml");
  }
  private Source getDefaultRequestSource(){
    return new StreamSource(new StringReader(xmlRequestForGoogleStockQuoteNoNamespace));
  }
}
