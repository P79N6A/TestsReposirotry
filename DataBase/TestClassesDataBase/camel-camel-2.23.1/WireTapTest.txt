/** 
 * Wire tap unit test
 * @version 
 */
public class WireTapTest extends ContextTestSupport {
  protected MockEndpoint tap;
  protected MockEndpoint result;
  @Test public void testSend() throws Exception {
    result.expectedBodiesReceived("Hello World","Tapped");
    tap.expectedBodiesReceived("Tapped");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Test public void testWireTapId() throws Exception {
    MockEndpoint a=getMockEndpoint("mock:a");
    MockEndpoint b=getMockEndpoint("mock:b");
    a.expectedBodiesReceived("Hello");
    b.expectedBodiesReceived("Hello");
    template.sendBody("direct:test","Hello");
    assertMockEndpointsSatisfied();
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    tap=getMockEndpoint("mock:tap");
    result=getMockEndpoint("mock:result");
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:start").to("log:foo").wireTap("direct:tap").to("mock:result");
        from("direct:tap").delay(1000).setBody().constant("Tapped").to("mock:result","mock:tap");
        from("direct:test").wireTap("direct:a").id("wiretap_1").to("mock:a");
        from("direct:a").to("mock:b");
      }
    }
;
  }
}
