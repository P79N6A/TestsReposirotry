/** 
 * CAMEL-9226 - check metrics are counted correctly in multicast sub-routes
 */
public class MetricsRoutePolicyMulticastSubRouteTest extends CamelTestSupport {
  private MetricRegistry registry=new MetricRegistry();
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    MetricsRoutePolicyFactory factory=new MetricsRoutePolicyFactory();
    factory.setUseJmx(false);
    factory.setMetricsRegistry(registry);
    context.addRoutePolicyFactory(factory);
    return context;
  }
  @Test public void testMetricsRoutePolicy() throws Exception {
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar1").expectedMessageCount(1);
    getMockEndpoint("mock:bar2").expectedMessageCount(1);
    template.sendBody("direct:multicast","Hello World");
    assertMockEndpointsSatisfied();
    assertEquals(3,registry.getNames().size());
    assertEquals(3,registry.getTimers().size());
    for (    Map.Entry<String,Timer> timerEntry : registry.getTimers().entrySet()) {
      String metricName=timerEntry.getKey();
      Timer timer=timerEntry.getValue();
      assertEquals("Count is wrong for " + metricName,1,timer.getCount());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:foo").routeId("foo").to("mock:foo");
        from("direct:bar").routeId("bar").multicast().to("mock:bar1","mock:bar2");
        from("direct:multicast").routeId("multicast").multicast().to("direct:foo","direct:bar");
      }
    }
;
  }
}
