public class JcrProducerTest extends JcrRouteTestSupport {
  @Test public void testJcrProducer() throws Exception {
    Exchange exchange=createExchangeWithBody("<hello>world!</hello>");
    exchange.getIn().setHeader(JcrConstants.JCR_NODE_NAME,"node");
    exchange.getIn().setHeader("my.contents.property",exchange.getIn().getBody());
    Exchange out=template.send("direct:a",exchange);
    assertNotNull(out);
    String uuid=out.getOut().getBody(String.class);
    Session session=openSession();
    try {
      Node node=session.getNodeByIdentifier(uuid);
      assertNotNull(node);
      assertEquals("/home/test/node",node.getPath());
      assertEquals("<hello>world!</hello>",node.getProperty("my.contents.property").getString());
    }
  finally {
      if (session != null && session.isLive()) {
        session.logout();
      }
    }
  }
  @Test public void testNodeTypeIsSpecified() throws Exception {
    Exchange exchange=createExchangeWithBody("Test");
    exchange.getIn().removeHeader("testClass");
    exchange.getIn().setHeader(JcrConstants.JCR_NODE_NAME,"typedNode");
    exchange.getIn().setHeader(JcrConstants.JCR_NODE_TYPE,"nt:folder");
    Exchange out=template.send("direct:a",exchange);
    assertNotNull(out);
    String uuid=out.getOut().getBody(String.class);
    Session session=openSession();
    try {
      Node node=session.getNodeByIdentifier(uuid);
      assertNotNull(node);
      assertEquals("/home/test/typedNode",node.getPath());
      assertEquals("nt:folder",node.getPrimaryNodeType().getName());
    }
  finally {
      if (session != null && session.isLive()) {
        session.logout();
      }
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.setUseBreadcrumb(false);
        from("direct:a").to("jcr://user:pass@repository/home/test");
      }
    }
;
  }
}
