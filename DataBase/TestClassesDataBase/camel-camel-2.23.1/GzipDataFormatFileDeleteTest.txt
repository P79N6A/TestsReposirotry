/** 
 * @version 
 */
public class GzipDataFormatFileDeleteTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/gzip");
    super.setUp();
  }
  @Test public void testGzipFileDelete() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBodyAndHeader("file:target/gzip","Hello World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
    oneExchangeDone.matchesMockWaitTime();
    File in=new File("target/gzip/hello.txt");
    assertFalse("Should have been deleted " + in,in.exists());
    File out=new File("target/gzip/out/hello.txt.gz");
    assertTrue("Should have been created " + out,out.exists());
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/gzip?initialDelay=0&delay=10&delete=true").marshal().gzip().to("file:target/gzip/out?fileName=${file:name}.gz").to("mock:result");
      }
    }
;
  }
}
