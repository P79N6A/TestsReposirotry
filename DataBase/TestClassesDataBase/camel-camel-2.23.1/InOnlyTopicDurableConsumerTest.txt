public class InOnlyTopicDurableConsumerTest extends CamelTestSupport {
  private static final String CONNECTION_ID="test-connection-1";
  private static final String BROKER_URI="vm://durable.broker?broker.persistent=false&broker.useJmx=false";
  @Override protected boolean useJmx(){
    return false;
  }
  @Test public void testDurableTopic() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    MockEndpoint mock2=getMockEndpoint("mock:result2");
    mock2.expectedBodiesReceived("Hello World");
    Thread.sleep(1000);
    template.sendBody("sjms:topic:foo","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    ActiveMQConnectionFactory connectionFactory=new ActiveMQConnectionFactory(BROKER_URI);
    ConnectionFactoryResource connectionResource=new ConnectionFactoryResource();
    connectionResource.setConnectionFactory(connectionFactory);
    connectionResource.setClientId(CONNECTION_ID);
    CamelContext camelContext=super.createCamelContext();
    SjmsComponent component=new SjmsComponent();
    component.setConnectionResource(connectionResource);
    component.setConnectionCount(1);
    camelContext.addComponent("sjms",component);
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("sjms:topic:foo?durableSubscriptionId=bar1").to("mock:result");
        from("sjms:topic:foo?durableSubscriptionId=bar2").to("mock:result2");
      }
    }
;
  }
}
