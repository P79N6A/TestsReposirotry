/** 
 */
public class StopRouteImpactsErrorHandlerTest extends ContextTestSupport {
  @Test public void testIssue() throws Exception {
    RouteDefinition testRoute=context.getRouteDefinition("TestRoute");
    testRoute.adviceWith(context,new RouteBuilder(){
      @Override public void configure() throws Exception {
        interceptSendToEndpoint("seda:*").skipSendToOriginalEndpoint().to("log:seda").throwException(new IllegalArgumentException("Forced"));
      }
    }
);
    RouteDefinition smtpRoute=context.getRouteDefinition("smtpRoute");
    smtpRoute.adviceWith(context,new RouteBuilder(){
      @Override public void configure() throws Exception {
        interceptSendToEndpoint("smtp*").to("log:smtp").skipSendToOriginalEndpoint().to("mock:smtp");
      }
    }
);
    getMockEndpoint("mock:smtp").expectedMessageCount(1);
    context.stopRoute("pollRoute");
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        context.addComponent("smtp",context.getComponent("mock"));
        errorHandler(deadLetterChannel("direct:emailSupport").maximumRedeliveries(2).redeliveryDelay(0));
        from("direct:emailSupport").routeId("smtpRoute").errorHandler(deadLetterChannel("log:dead?level=ERROR")).to("smtp://smtpServer");
        from("timer://someTimer?delay=15000&fixedRate=true&period=5000").routeId("pollRoute").to("log:level=INFO");
        from("direct:start").routeId("TestRoute").to("seda:foo");
      }
    }
;
  }
}
