/** 
 * @version 
 */
public class JmsTransferFaultTest extends CamelTestSupport {
  protected String getUri(){
    return "activemq:queue:foo?transferFault=true";
  }
  @Test public void testNoFault() throws Exception {
    Exchange out=template.request(getUri(),new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Hello World");
      }
    }
);
    assertNotNull(out);
    assertEquals("Bye World",out.getOut().getBody());
    assertFalse("Should not be a fault",out.getOut().isFault());
  }
  @Test public void testTransferFault() throws Exception {
    Exchange out=template.request(getUri(),new Processor(){
      @Override public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setBody("Kaboom");
      }
    }
);
    assertNotNull(out);
    assertEquals("Bye World",out.getOut().getBody());
    assertTrue("Should be a fault",out.getOut().isFault());
  }
  protected CamelContext createCamelContext() throws Exception {
    CamelContext camelContext=super.createCamelContext();
    ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory();
    camelContext.addComponent("activemq",jmsComponentAutoAcknowledge(connectionFactory));
    return camelContext;
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from(getUri()).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            String body=exchange.getIn().getBody(String.class);
            exchange.getOut().setBody("Bye World");
            if (body.equals("Kaboom")) {
              exchange.getOut().setFault(true);
            }
          }
        }
);
      }
    }
;
  }
}
