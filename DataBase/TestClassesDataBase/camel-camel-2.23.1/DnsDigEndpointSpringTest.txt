/** 
 * Tests for the dig endpoint.
 */
public class DnsDigEndpointSpringTest extends CamelSpringTestSupport {
  private static final String RESPONSE_MONKEY="\"A monkey is a nonhuman " + "primate mammal with the exception usually of the lemurs and tarsiers. More specifically, the term monkey refers to a subset " + "of monkeys: any of the smaller longer-tailed catarrhine or "+ "platyrrhine primates as contrasted with the apes.\" "+ "\" http://en.wikipedia.org/wiki/Monkey\"";
  @EndpointInject(uri="mock:result") protected MockEndpoint resultEndpoint;
  @Produce(uri="direct:start") protected ProducerTemplate template;
  @Override protected AbstractApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("DNSDig.xml");
  }
  @Test @Ignore("Testing behind nat produces timeouts") public void testDigForMonkey() throws Exception {
    resultEndpoint.expectedMessageCount(1);
    resultEndpoint.expectedMessagesMatches(new Predicate(){
      public boolean matches(      Exchange exchange){
        String str=((Message)exchange.getIn().getBody()).getSectionArray(Section.ANSWER)[0].rdataToString();
        return RESPONSE_MONKEY.equals(str);
      }
    }
);
    Map<String,Object> headers=new HashMap<>();
    headers.put("dns.name","monkey.wp.dg.cx");
    headers.put("dns.type","TXT");
    template.sendBodyAndHeaders(null,headers);
    resultEndpoint.assertIsSatisfied();
  }
}
