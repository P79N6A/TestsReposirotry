/** 
 */
public class ValidatorIncludeEncodingRouteTest extends ContextTestSupport {
  protected MockEndpoint validEndpoint;
  protected MockEndpoint finallyEndpoint;
  protected MockEndpoint invalidEndpoint;
  @Test public void testValidMessage() throws Exception {
    validEndpoint.expectedMessageCount(1);
    finallyEndpoint.expectedMessageCount(1);
    String body="<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les cam\u00E9lid\u00E9s</t:sentence>\n" + "</t:text>";
    template.sendBody("direct:start",body);
    MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint);
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    validEndpoint=resolveMandatoryEndpoint("mock:valid",MockEndpoint.class);
    invalidEndpoint=resolveMandatoryEndpoint("mock:invalid",MockEndpoint.class);
    finallyEndpoint=resolveMandatoryEndpoint("mock:finally",MockEndpoint.class);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").doTry().to("validator:org/apache/camel/component/validator/text.xsd").to("mock:valid").doCatch(NumberFormatException.class).process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            System.err.println("helo " + exchange.getException());
          }
        }
).to("mock:invalid").doFinally().to("mock:finally").end();
      }
    }
;
  }
}
