public class LumberjackComponentGlobalSSLTest extends CamelTestSupport {
  private static int port;
  @BeforeClass public static void beforeClass(){
    port=AvailablePortFinder.getNextAvailable();
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    CamelContext context=super.createCamelContext();
    context.setSSLContextParameters(createServerSSLContextParameters());
    LumberjackComponent component=(LumberjackComponent)context.getComponent("lumberjack");
    component.setUseGlobalSslContextParameters(true);
    return context;
  }
  @Override protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("lumberjack:0.0.0.0:" + port).to("mock:output");
      }
    }
;
  }
  @Test public void shouldListenToMessagesOverSSL() throws Exception {
    if (isJava19()) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:output");
    mock.expectedMessageCount(25);
    mock.allMessages().body().isInstanceOf(Map.class);
    List<Integer> responses=LumberjackUtil.sendMessages(port,createClientSSLContextParameters());
    mock.assertIsSatisfied();
    assertEquals(Arrays.asList(10,15),responses);
  }
  /** 
 * Creates the  {@link SSLContextParameters} Camel object for the Lumberjack component
 * @return The {@link SSLContextParameters} Camel object for the Lumberjack component
 */
  private SSLContextParameters createServerSSLContextParameters(){
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    KeyManagersParameters keyManagersParameters=new KeyManagersParameters();
    KeyStoreParameters keyStore=new KeyStoreParameters();
    keyStore.setPassword("changeit");
    keyStore.setResource("org/apache/camel/component/lumberjack/keystore.jks");
    keyManagersParameters.setKeyPassword("changeit");
    keyManagersParameters.setKeyStore(keyStore);
    sslContextParameters.setKeyManagers(keyManagersParameters);
    return sslContextParameters;
  }
  private SSLContextParameters createClientSSLContextParameters(){
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    TrustManagersParameters trustManagersParameters=new TrustManagersParameters();
    KeyStoreParameters trustStore=new KeyStoreParameters();
    trustStore.setPassword("changeit");
    trustStore.setResource("org/apache/camel/component/lumberjack/keystore.jks");
    trustManagersParameters.setKeyStore(trustStore);
    sslContextParameters.setTrustManagers(trustManagersParameters);
    return sslContextParameters;
  }
}
