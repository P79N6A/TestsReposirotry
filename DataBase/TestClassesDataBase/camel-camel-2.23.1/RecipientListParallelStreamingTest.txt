/** 
 * @version 
 */
public class RecipientListParallelStreamingTest extends ContextTestSupport {
  @Test public void testRecipientListParallel() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("c");
    template.sendBodyAndHeader("direct:start","Hello World","foo","direct:a,direct:b,direct:c");
    assertMockEndpointsSatisfied();
    mock.reset();
    mock.expectedBodiesReceived("b");
    template.sendBodyAndHeader("direct:streaming","Hello World","foo","direct:a,direct:b,direct:c");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").recipientList(header("foo")).parallelProcessing().to("mock:result");
        from("direct:streaming").recipientList(header("foo")).parallelProcessing().streaming().to("mock:result");
        from("direct:a").delay(100).transform(constant("a"));
        from("direct:b").delay(500).transform(constant("b"));
        from("direct:c").transform(constant("c"));
      }
    }
;
  }
}
