private static class ZookeeperPolicyEnforcedContext {
  private CamelContext controlledContext;
  private ProducerTemplate template;
  private MockEndpoint mock;
  private String routename;
  ZookeeperPolicyEnforcedContext(  String name) throws Exception {
    controlledContext=new DefaultCamelContext();
    routename=name;
    template=controlledContext.createProducerTemplate();
    mock=controlledContext.getEndpoint("mock:controlled",MockEndpoint.class);
    controlledContext.addRoutes(new FailoverRoute(name));
    controlledContext.start();
  }
  public void sendMessageToEnforcedRoute(  String message,  int expected) throws InterruptedException {
    mock.expectedMessageCount(expected);
    try {
      template.sendBody("vm:" + routename,ExchangePattern.InOut,message);
    }
 catch (    Exception e) {
      if (expected > 0) {
        LOG.error(e.getMessage(),e);
        fail("Expected messages...");
      }
    }
    mock.await(2,TimeUnit.SECONDS);
    mock.assertIsSatisfied(1000);
  }
  public void shutdown() throws Exception {
    LoggerFactory.getLogger(getClass()).debug("stopping");
    controlledContext.stop();
    LoggerFactory.getLogger(getClass()).debug("stopped");
  }
}
