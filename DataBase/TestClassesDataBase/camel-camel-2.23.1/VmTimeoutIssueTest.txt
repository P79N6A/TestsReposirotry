/** 
 * @version 
 */
public class VmTimeoutIssueTest extends AbstractVmTestSupport {
  @Test public void testVmTimeoutWithAnotherVm() throws Exception {
    try {
      template2.requestBody("vm:start1?timeout=1000","Hello");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      ExchangeTimedOutException cause=assertIsInstanceOf(ExchangeTimedOutException.class,e.getCause());
      assertEquals(500,cause.getTimeout());
    }
  }
  @Test public void testVmTimeoutWithProcessor() throws Exception {
    try {
      template2.requestBody("vm:start2?timeout=4000","Hello");
      fail("Should have thrown an exception");
    }
 catch (    CamelExecutionException e) {
      ExchangeTimedOutException cause=assertIsInstanceOf(ExchangeTimedOutException.class,e.getCause());
      assertEquals(2000,cause.getTimeout());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("vm:end").delay(1000).transform().constant("Bye World");
      }
    }
;
  }
  @Override protected RouteBuilder createRouteBuilderForSecondContext() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(noErrorHandler());
        from("vm:start1?timeout=1000").to("log:AFTER_START1").to("vm:end?timeout=500").to("log:AFTER_END");
        from("vm:start2?timeout=4000").to("log:AFTER_START2").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            throw new ExchangeTimedOutException(exchange,2000);
          }
        }
).to("log:AFTER_PROCESSOR");
      }
    }
;
  }
}
