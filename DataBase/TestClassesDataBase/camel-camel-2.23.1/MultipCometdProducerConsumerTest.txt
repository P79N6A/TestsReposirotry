/** 
 * Unit testing for using a CometdProducer and a CometdConsumer
 */
public class MultipCometdProducerConsumerTest extends CamelTestSupport {
  private int port1;
  private String uri1;
  private int port2;
  private String uri2;
  @Test public void testProducer() throws Exception {
    Person person=new Person("David","Greco");
    getMockEndpoint("mock:test1").expectedBodiesReceived(person);
    getMockEndpoint("mock:test1").expectedBodiesReceived(person);
    template.requestBodyAndHeader("direct:input1",person,"testHeading","value");
    template.requestBodyAndHeader("direct:input2",person,"testHeading","value");
    assertMockEndpointsSatisfied();
  }
  @Override @Before public void setUp() throws Exception {
    port1=AvailablePortFinder.getNextAvailable(23500);
    port2=AvailablePortFinder.getNextAvailable(23510);
    uri1="cometd://127.0.0.1:" + port1 + "/service/test?baseResource=file:./target/test-classes/webapp&"+ "timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2";
    uri2="cometd://127.0.0.1:" + port2 + "/service/test?baseResource=file:./target/test-classes/webapp&"+ "timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2";
    super.setUp();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:input1").to(uri1);
        from(uri1).to("mock:test1");
        from("direct:input2").to(uri2);
        from(uri2).to("mock:test2");
      }
    }
;
  }
public static class Person {
    private String name;
    private String surname;
    Person(    String name,    String surname){
      this.name=name;
      this.surname=surname;
    }
    public String getName(){
      return name;
    }
    public String getSurname(){
      return surname;
    }
    public void setName(    String name){
      this.name=name;
    }
    public void setSurname(    String surname){
      this.surname=surname;
    }
  }
}
