/** 
 * Create the answer for the socket factory that causes a SocketTimeoutException to occur in connect.
 */
private static class SocketAnswer implements Answer<Socket> {
  @Override public Socket answer(  InvocationOnMock invocation) throws Throwable {
    final Socket socket=spy(new Socket());
    final AtomicBoolean timeout=new AtomicBoolean();
    try {
      doAnswer(new Answer<InputStream>(){
        @Override public InputStream answer(        InvocationOnMock invocation) throws Throwable {
          final InputStream stream=(InputStream)invocation.callRealMethod();
          InputStream inputStream=new InputStream(){
            @Override public int read() throws IOException {
              if (timeout.get()) {
                throw new SocketTimeoutException();
              }
              return stream.read();
            }
          }
;
          return inputStream;
        }
      }
).when(socket).getInputStream();
    }
 catch (    IOException ignored) {
    }
    try {
      doAnswer(new Answer<Object>(){
        @Override public Object answer(        InvocationOnMock invocation) throws Throwable {
          if ((Integer)invocation.getArguments()[0] == CONNECT_TIMEOUT) {
            timeout.set(true);
          }
 else {
            timeout.set(false);
          }
          return invocation.callRealMethod();
        }
      }
).when(socket).setSoTimeout(anyInt());
    }
 catch (    SocketException e) {
      throw new RuntimeException(e);
    }
    return socket;
  }
}
