/** 
 * Partial operations test.
 */
public class SpringDataFormatPartialTest extends CamelSpringTestSupport {
  @Test public void testPartialMarshal() throws Exception {
    PurchaseOrder bean=new PurchaseOrder();
    bean.setName("Beer");
    bean.setAmount(23);
    bean.setPrice(2.5);
    MockEndpoint mock=resolveMandatoryEndpoint("mock:marshal",MockEndpoint.class);
    mock.expectedMessageCount(1);
    XPathExpression xpath=new XPathExpression("count(//*[namespace-uri() = 'http://example.camel.org/apache' and local-name() = 'po']) = 1");
    xpath.setResultType(Boolean.class);
    mock.allMessages().body().matches(xpath);
    template.sendBody("direct:marshal",bean);
    mock.assertIsSatisfied();
    assertFalse("There should have no XML declaration.",mock.getExchanges().get(0).getIn().getBody(String.class).startsWith("<?xml version="));
  }
  @Test public void testPartialUnmarshal() throws Exception {
    MockEndpoint mock=resolveMandatoryEndpoint("mock:unmarshal",MockEndpoint.class);
    mock.expectedMessageCount(1);
    Partial partial=new Partial();
    partial.setName("mock");
    partial.setLocation("org.apache.camel");
    mock.expectedBodyReceived().constant(partial);
    String xml="<Partial name=\"mock\"><location>org.apache.camel</location></Partial>";
    template.sendBody("direct:unmarshal",xml);
    mock.assertIsSatisfied();
  }
  protected ClassPathXmlApplicationContext createApplicationContext(){
    return new ClassPathXmlApplicationContext("org/apache/camel/example/springDataFormatPartial.xml");
  }
}
