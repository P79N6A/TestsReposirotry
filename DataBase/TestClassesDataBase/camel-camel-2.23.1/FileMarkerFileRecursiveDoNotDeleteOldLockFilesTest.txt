/** 
 * @version 
 */
public class FileMarkerFileRecursiveDoNotDeleteOldLockFilesTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/oldlock");
    super.setUp();
  }
  @Test public void testDeleteOldLockOnStartup() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("New World");
    template.sendBodyAndHeader("file:target/oldlock","locked",Exchange.FILE_NAME,"hello.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    template.sendBodyAndHeader("file:target/oldlock","Hello World",Exchange.FILE_NAME,"hello.txt");
    template.sendBodyAndHeader("file:target/oldlock/foo","locked",Exchange.FILE_NAME,"gooday.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX);
    template.sendBodyAndHeader("file:target/oldlock/foo","Goodday World",Exchange.FILE_NAME,"gooday.txt");
    template.sendBodyAndHeader("file:target/oldlock","New World",Exchange.FILE_NAME,"new.txt");
    context.startRoute("foo");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file:target/oldlock?initialDelay=0&delay=10&readLock=markerFile&readLockDeleteOrphanLockFiles=false&recursive=true").routeId("foo").noAutoStartup().convertBodyTo(String.class).to("log:result","mock:result");
      }
    }
;
  }
}
