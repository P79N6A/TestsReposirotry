@RunWith(CamelSpringRunner.class) @BootstrapWith(CamelTestContextBootstrapper.class) @ContextConfiguration() @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD) public class CamelSpringOverridePropertiesTest {
  @Produce(uri="direct:start") private ProducerTemplate start;
  @EndpointInject(uri="mock:a") private MockEndpoint mockA;
  @EndpointInject(uri="mock:test") private MockEndpoint mockTest;
  @EndpointInject(uri="mock:foo") private MockEndpoint mockFoo;
  @UseOverridePropertiesWithPropertiesComponent public static Properties override(){
    Properties answer=new Properties();
    answer.put("cool.end","mock:foo");
    return answer;
  }
  @Test public void testOverride() throws Exception {
    mockA.expectedBodiesReceived("Camel");
    mockTest.expectedMessageCount(0);
    mockFoo.expectedBodiesReceived("Hello Camel");
    start.sendBody("Camel");
    mockA.assertIsSatisfied();
    mockTest.assertIsSatisfied();
    mockFoo.assertIsSatisfied();
  }
}
