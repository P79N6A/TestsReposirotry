@ApplicationScoped static class EventObserver {
  private final List<Object> objectEvents=new ArrayList<>();
  private final List<Object> defaultQualifierEvents=new ArrayList<>();
  private final List<String> stringEvents=new ArrayList<>();
  private final List<EventPayload<String>> stringPayloadEvents=new ArrayList<>();
  private final List<EventPayload<Integer>> integerPayloadEvents=new ArrayList<>();
  private final List<Long> fooQualifierEvents=new ArrayList<>();
  private final List<Long> barQualifierEvents=new ArrayList<>();
  void collectObjectEvents(  @Observes Object event){
    objectEvents.add(event);
  }
  void collectStringEvents(  @Observes String event){
    stringEvents.add(event);
  }
  void collectStringPayloadEvents(  @Observes EventPayload<String> event){
    stringPayloadEvents.add(event);
  }
  void collectIntegerPayloadEvents(  @Observes EventPayload<Integer> event){
    integerPayloadEvents.add(event);
  }
  void collectDefaultQualifierEvents(  @Observes @Default Object event){
    defaultQualifierEvents.add(event);
  }
  void collectFooQualifierEvents(  @Observes @FooQualifier Long event){
    fooQualifierEvents.add(event);
  }
  void collectBarQualifierEvents(  @Observes @BarQualifier Long event){
    barQualifierEvents.add(event);
  }
  List<Object> getObjectEvents(){
    return objectEvents;
  }
  List<String> getStringEvents(){
    return stringEvents;
  }
  List<EventPayload<String>> getStringPayloadEvents(){
    return stringPayloadEvents;
  }
  List<EventPayload<Integer>> getIntegerPayloadEvents(){
    return integerPayloadEvents;
  }
  List<Object> getDefaultQualifierEvents(){
    return defaultQualifierEvents;
  }
  List<Long> getFooQualifierEvents(){
    return fooQualifierEvents;
  }
  List<Long> getBarQualifierEvents(){
    return barQualifierEvents;
  }
  void reset(){
    objectEvents.clear();
    stringEvents.clear();
    stringPayloadEvents.clear();
    integerPayloadEvents.clear();
    defaultQualifierEvents.clear();
    fooQualifierEvents.clear();
    barQualifierEvents.clear();
  }
}
