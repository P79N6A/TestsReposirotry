@RunWith(Arquillian.class) @ImportResource("imported-context.xml") public class XmlErrorHandlerTest {
  @Named @Produces private Processor processor=exchange -> exchange.getIn().setHeader("header",exchange.getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class).getMessage());
  @Named @Produces private Exception failure=new Exception("failure message!");
  @Inject @Uri("direct:inbound") private ProducerTemplate inbound;
  @Inject @Uri("mock:exception") private MockEndpoint exception;
  @Inject @Uri("mock:outbound") private MockEndpoint outbound;
  @Deployment public static Archive<?> deployment(){
    return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsResource(Paths.get("src/test/resources/camel-context-errorHandler.xml").toFile(),"imported-context.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  }
  @Test public void sendMessageToInbound() throws InterruptedException {
    outbound.expectedMessageCount(1);
    outbound.expectedBodiesReceived("Response to message");
    inbound.sendBody("message");
    assertIsSatisfied(2L,TimeUnit.SECONDS,outbound);
  }
  @Test public void sendExceptionToInbound() throws InterruptedException {
    exception.expectedMessageCount(1);
    exception.expectedBodiesReceived("exception");
    exception.expectedHeaderReceived("header","failure message!");
    inbound.sendBody("exception");
    assertIsSatisfied(2L,TimeUnit.SECONDS,exception);
  }
}
