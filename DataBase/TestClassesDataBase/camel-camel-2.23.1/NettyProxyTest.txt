/** 
 */
public class NettyProxyTest extends BaseNettyTest {
  private int port1;
  private int port2;
  @Test public void testNettyProxy() throws Exception {
    getMockEndpoint("mock:before").expectedBodiesReceived("Camel");
    getMockEndpoint("mock:proxy").expectedBodiesReceived("Camel");
    getMockEndpoint("mock:after").expectedBodiesReceived("Bye Camel");
    Object body=template.requestBody("netty4:tcp://localhost:" + port1 + "?sync=true&textline=true","Camel\n");
    assertEquals("Bye Camel",body);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        port1=getPort();
        port2=getNextPort();
        fromF("netty4:tcp://localhost:%s?sync=true&textline=true",port1).to("mock:before").toF("netty4:tcp://localhost:%s?sync=true&textline=true",port2).to("mock:after");
        fromF("netty4:tcp://localhost:%s?sync=true&textline=true",port2).to("mock:proxy").transform().simple("Bye ${body}\n");
      }
    }
;
  }
}
