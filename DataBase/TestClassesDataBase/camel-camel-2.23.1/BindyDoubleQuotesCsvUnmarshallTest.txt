@ContextConfiguration public class BindyDoubleQuotesCsvUnmarshallTest extends AbstractJUnit4SpringContextTests {
  private static final String URI_MOCK_RESULT="mock:result";
  private static final String URI_DIRECT_START="direct:start";
  @Produce(uri=URI_DIRECT_START) private ProducerTemplate template;
  @EndpointInject(uri=URI_MOCK_RESULT) private MockEndpoint result;
  private String expected;
  @Test @DirtiesContext public void testUnMarshallMessage() throws Exception {
    expected="\"10\",\"A9\",\"Pauline\",\"M\",\"ISIN\",\"XD12345678\",\"BUY\",\"Share\",\"2500.45\",\"USD\",\"08-01-2009\"";
    template.sendBody(expected);
    result.expectedMessageCount(1);
    result.assertIsSatisfied();
  }
public static class ContextConfig extends RouteBuilder {
    BindyCsvDataFormat camelDataFormat=new BindyCsvDataFormat(Order.class);
    public void configure(){
      from(URI_DIRECT_START).unmarshal(camelDataFormat).to(URI_MOCK_RESULT);
    }
  }
@CsvRecord(separator=",") public static class Order {
    @DataField(pos=1) private int orderNr;
    @DataField(pos=2) private String clientNr;
    @DataField(pos=3) private String firstName;
    @DataField(pos=4) private String lastName;
    @DataField(pos=5) private String instrumentCode;
    @DataField(pos=6) private String instrumentNumber;
    @DataField(pos=7) private String orderType;
    @DataField(name="Name",pos=8) private String instrumentType;
    @DataField(pos=9,precision=2) private BigDecimal amount;
    @DataField(pos=10) private String currency;
    @DataField(pos=11,pattern="dd-MM-yyyy") private Date orderDate;
    public int getOrderNr(){
      return orderNr;
    }
    public void setOrderNr(    int orderNr){
      this.orderNr=orderNr;
    }
    public String getClientNr(){
      return clientNr;
    }
    public void setClientNr(    String clientNr){
      this.clientNr=clientNr;
    }
    public String getFirstName(){
      return firstName;
    }
    public void setFirstName(    String firstName){
      this.firstName=firstName;
    }
    public String getLastName(){
      return lastName;
    }
    public void setLastName(    String lastName){
      this.lastName=lastName;
    }
    public String getInstrumentCode(){
      return instrumentCode;
    }
    public void setInstrumentCode(    String instrumentCode){
      this.instrumentCode=instrumentCode;
    }
    public String getInstrumentNumber(){
      return instrumentNumber;
    }
    public void setInstrumentNumber(    String instrumentNumber){
      this.instrumentNumber=instrumentNumber;
    }
    public String getOrderType(){
      return orderType;
    }
    public void setOrderType(    String orderType){
      this.orderType=orderType;
    }
    public String getInstrumentType(){
      return instrumentType;
    }
    public void setInstrumentType(    String instrumentType){
      this.instrumentType=instrumentType;
    }
    public BigDecimal getAmount(){
      return amount;
    }
    public void setAmount(    BigDecimal amount){
      this.amount=amount;
    }
    public String getCurrency(){
      return currency;
    }
    public void setCurrency(    String currency){
      this.currency=currency;
    }
    public Date getOrderDate(){
      return orderDate;
    }
    public void setOrderDate(    Date orderDate){
      this.orderDate=orderDate;
    }
    @Override public String toString(){
      return "Model : " + Order.class.getName() + " : "+ this.orderNr+ ", "+ this.orderType+ ", "+ String.valueOf(this.amount)+ ", "+ this.instrumentCode+ ", "+ this.instrumentNumber+ ", "+ this.instrumentType+ ", "+ this.currency+ ", "+ this.clientNr+ ", "+ this.firstName+ ", "+ this.lastName+ ", "+ String.valueOf(this.orderDate);
    }
  }
}
