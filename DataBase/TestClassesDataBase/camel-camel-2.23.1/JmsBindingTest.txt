@RunWith(MockitoJUnitRunner.class) public class JmsBindingTest {
  private final Instant instant=Instant.ofEpochMilli(1519672338000L);
  @Mock private JmsConfiguration mockJmsConfiguration;
  @Mock private JmsEndpoint mockJmsEndpoint;
  private JmsBinding jmsBindingUnderTest;
  @Before public void setup(){
    when(mockJmsConfiguration.isFormatDateHeadersToIso8601()).thenReturn(false);
    when(mockJmsConfiguration.isMapJmsMessage()).thenReturn(true);
    when(mockJmsEndpoint.getConfiguration()).thenReturn(mockJmsConfiguration);
    jmsBindingUnderTest=new JmsBinding(mockJmsEndpoint);
  }
  @Test public void testExtractNullBodyFromJmsShouldReturnNull() throws Exception {
    assertNull(jmsBindingUnderTest.extractBodyFromJms(null,new ActiveMQBlobMessage()));
  }
  @Test public void testGetValidJmsHeaderValueWithBigIntegerShouldSucceed(){
    Object value=jmsBindingUnderTest.getValidJMSHeaderValue("foo",new BigInteger("12345"));
    assertEquals("12345",value);
  }
  @Test public void testGetValidJmsHeaderValueWithBigDecimalShouldSucceed(){
    Object value=jmsBindingUnderTest.getValidJMSHeaderValue("foo",new BigDecimal("123.45"));
    assertEquals("123.45",value);
  }
  @Test public void testGetValidJmsHeaderValueWithDateShouldSucceed(){
    Object value=jmsBindingUnderTest.getValidJMSHeaderValue("foo",Date.from(instant));
    assertNotNull(value);
  }
  @Test public void testGetValidJmsHeaderValueWithIso8601DateShouldSucceed(){
    when(mockJmsConfiguration.isFormatDateHeadersToIso8601()).thenReturn(true);
    Object value=jmsBindingUnderTest.getValidJMSHeaderValue("foo",Date.from(instant));
    assertEquals("2018-02-26T19:12:18Z",value);
  }
}
