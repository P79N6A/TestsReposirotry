public class MailNameAndEmailInRecipientTest extends CamelTestSupport {
  @Test public void testSendWithNameAndEmailInRecipient() throws Exception {
    Mailbox.clearAll();
    Map<String,Object> headers=new HashMap<>();
    headers.put("to","Claus Ibsen <davsclaus@localhost>");
    headers.put("cc","James Strachan <jstrachan@localhost>");
    assertMailbox("davsclaus");
    assertMailbox("jstrachan");
    template.sendBodyAndHeaders("smtp://localhost","Hello World",headers);
    assertMockEndpointsSatisfied();
  }
  private void assertMailbox(  String name) throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:" + name);
    mock.expectedBodiesReceived("Hello World");
    mock.message(0).header("to").isEqualTo("Claus Ibsen <davsclaus@localhost>");
    mock.message(0).header("cc").isEqualTo("James Strachan <jstrachan@localhost>");
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure() throws Exception {
        from("pop3://davsclaus@localhost?consumer.initialDelay=100&consumer.delay=100").to("mock:davsclaus");
        from("pop3://jstrachan@localhost?consumer.initialDelay=100&consumer.delay=100").to("mock:jstrachan");
      }
    }
;
  }
}
