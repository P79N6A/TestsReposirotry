/** 
 */
@Ignore("Not yet migrated to work with Jetty 9") public class WssProducerTest extends WsProducerTestBase {
  protected static final String PW="changeit";
  @Override protected Connector getConnector() throws Exception {
    SslContextFactory sslContextFactory=new SslContextFactory();
    sslContextFactory.setSslContext(defineSSLContextServerParameters().createSSLContext(camelContext));
    ServerConnector https=new ServerConnector(server,new SslConnectionFactory(sslContextFactory,null));
    return https;
  }
  @Override protected String getTargetURL(){
    return "ahc-wss://localhost:" + PORT;
  }
  @Override protected void setUpComponent() throws Exception {
    WsComponent wsComponent=(WsComponent)camelContext.getComponent("ahc-wss");
    wsComponent.setSslContextParameters(defineSSLContextClientParameters());
  }
  private static SSLContextParameters defineSSLContextServerParameters(){
    KeyStoreParameters ksp=new KeyStoreParameters();
    ksp.setResource("jsse/localhost.ks");
    ksp.setPassword(PW);
    KeyManagersParameters kmp=new KeyManagersParameters();
    kmp.setKeyPassword(PW);
    kmp.setKeyStore(ksp);
    TrustManagersParameters tmp=new TrustManagersParameters();
    tmp.setKeyStore(ksp);
    SSLContextServerParameters scsp=new SSLContextServerParameters();
    scsp.setClientAuthentication(ClientAuthentication.WANT.name());
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    sslContextParameters.setKeyManagers(kmp);
    sslContextParameters.setTrustManagers(tmp);
    sslContextParameters.setServerParameters(scsp);
    return sslContextParameters;
  }
  private static SSLContextParameters defineSSLContextClientParameters(){
    KeyStoreParameters ksp=new KeyStoreParameters();
    ksp.setResource("jsse/localhost.ks");
    ksp.setPassword(PW);
    TrustManagersParameters tmp=new TrustManagersParameters();
    tmp.setKeyStore(ksp);
    SSLContextParameters sslContextParameters=new SSLContextParameters();
    sslContextParameters.setTrustManagers(tmp);
    return sslContextParameters;
  }
}
