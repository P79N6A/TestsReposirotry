/** 
 * @version 
 */
public class RouteAutoStartupPropertiesTest extends Assert {
  private AbstractXmlApplicationContext ac;
  @Test public void testAutoStartupFalse() throws Exception {
    ac=new ClassPathXmlApplicationContext("org/apache/camel/spring/config/RouteAutoStartupFalseTest.xml");
    SpringCamelContext camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next();
    assertEquals(false,camel.getRouteStatus("foo").isStarted());
    camel.startRoute("foo");
    assertEquals(true,camel.getRouteStatus("foo").isStarted());
    MockEndpoint mock=camel.getEndpoint("mock:result",MockEndpoint.class);
    mock.expectedMessageCount(1);
    ProducerTemplate template=camel.createProducerTemplate();
    template.start();
    template.sendBody("direct:start","Hello World");
    template.stop();
    mock.assertIsSatisfied();
  }
  @Test public void testAutoStartupTrue() throws Exception {
    ac=new ClassPathXmlApplicationContext("org/apache/camel/spring/config/RouteAutoStartupTrueTest.xml");
    SpringCamelContext camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next();
    assertEquals(true,camel.getRouteStatus("bar").isStarted());
    MockEndpoint mock=camel.getEndpoint("mock:result",MockEndpoint.class);
    mock.expectedMessageCount(1);
    ProducerTemplate template=camel.createProducerTemplate();
    template.start();
    template.sendBody("direct:start","Hello World");
    template.stop();
    mock.assertIsSatisfied();
  }
  @After public void tearDown() throws Exception {
    IOHelper.close(ac);
  }
}
