public class CustomerServicesTest extends Assert {
  @Test public void testCustomerService() throws Exception {
    ClassPathXmlApplicationContext serverContext=null;
    ClassPathXmlApplicationContext clientContext=null;
    try {
      serverContext=new ClassPathXmlApplicationContext(new String[]{"spring-config/server-applicationContext.xml"});
      Object server=serverContext.getBean("org.apache.camel.itest.customerrelations.CustomerServiceV1");
      assertNotNull("We should get server here",server);
      EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.READ));
      clientContext=new ClassPathXmlApplicationContext(new String[]{"spring-config/client-applicationContext.xml"});
      CustomerServiceV1 customerService=clientContext.getBean("org.apache.camel.itest.customerrelations.CustomerServiceV1",CustomerServiceV1.class);
      Customer customer=customerService.getCustomer("12345");
      assertNotNull("We should get Customer here",customer);
    }
  finally {
      IOHelper.close(clientContext,serverContext);
    }
  }
class HeaderChecker extends AbstractPhaseInterceptor<Message> {
    HeaderChecker(    String phase){
      super(phase);
    }
    public void handleMessage(    Message message) throws Fault {
      Map<String,List<String>> headers=CastUtils.cast((Map<?,?>)message.get(Message.PROTOCOL_HEADERS));
      assertNotNull(headers);
      assertEquals("\"getCustomer\"",headers.get("SOAPAction").get(0));
    }
  }
}
