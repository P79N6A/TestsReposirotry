/** 
 * @version 
 */
public class RecipientListStopOnExceptionWithOnExceptionTest extends ContextTestSupport {
  @Test public void testRecipientListStopOnException() throws Exception {
    getMockEndpoint("mock:result").expectedMessageCount(0);
    getMockEndpoint("mock:a").expectedMessageCount(1);
    getMockEndpoint("mock:b").expectedMessageCount(1);
    getMockEndpoint("mock:c").expectedMessageCount(0);
    String out=template.requestBodyAndHeader("direct:start","Hello World","foo","direct:a,direct:b,direct:c",String.class);
    assertEquals("Damn Forced",out);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Exception.class).handled(true).to("mock:handled").transform(simple("Damn ${exception.message}"));
        from("direct:start").recipientList(header("foo")).stopOnException().to("mock:result");
        from("direct:a").to("mock:a");
        from("direct:b").to("mock:b").throwException(new IllegalArgumentException("Forced"));
        from("direct:c").to("mock:c");
      }
    }
;
  }
}
