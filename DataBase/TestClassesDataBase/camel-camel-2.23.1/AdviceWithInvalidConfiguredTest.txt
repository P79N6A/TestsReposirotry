/** 
 */
public class AdviceWithInvalidConfiguredTest extends ContextTestSupport {
  @Test public void testNoErrorHandler() throws Exception {
    try {
      context.getRouteDefinition("route-a").adviceWith(context,new AdviceWithRouteBuilder(){
        @Override public void configure() throws Exception {
          errorHandler(loggingErrorHandler());
          interceptSendToEndpoint("direct:bar").skipSendToOriginalEndpoint().throwException(new IllegalArgumentException("Forced"));
        }
      }
);
      fail("Should have thrown an exception");
    }
 catch (    IllegalArgumentException e) {
      assertEquals("You can not advice with error handlers. Remove the error handlers from the route builder.",e.getMessage());
    }
  }
  @Test public void testNoExtraRoutes() throws Exception {
    try {
      context.getRouteDefinition("route-a").adviceWith(context,new AdviceWithRouteBuilder(){
        @Override public void configure() throws Exception {
          from("direct:foo").to("mock:foo");
        }
      }
);
      fail("Should have thrown an exception");
    }
 catch (    IllegalArgumentException e) {
      assertEquals("You can only advice from a RouteBuilder which has no existing routes. Remove all routes from the route builder.",e.getMessage());
    }
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        errorHandler(deadLetterChannel("mock:error"));
        from("direct:start").routeId("route-a").to("direct:bar");
        from("direct:bar").routeId("route-b").to("mock:bar");
      }
    }
;
  }
}
