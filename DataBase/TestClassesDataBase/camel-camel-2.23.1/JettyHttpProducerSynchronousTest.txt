/** 
 * @version 
 */
public class JettyHttpProducerSynchronousTest extends BaseJettyTest {
  private static String beforeThreadName;
  private static String afterThreadName;
  private String url="jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=true";
  @Test public void testSynchronous() throws Exception {
    Thread.sleep(1000);
    getMockEndpoint("mock:result").expectedMessageCount(1);
    template.sendBody("direct:start",null);
    assertMockEndpointsSatisfied();
    assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName));
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("log:before").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            beforeThreadName=Thread.currentThread().getName();
          }
        }
).to(url).process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            afterThreadName=Thread.currentThread().getName();
          }
        }
).to("log:after").to("mock:result");
        from(url).transform(constant("Bye World"));
      }
    }
;
  }
}
