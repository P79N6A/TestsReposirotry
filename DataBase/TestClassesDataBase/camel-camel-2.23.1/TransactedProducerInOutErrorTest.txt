/** 
 * A unit test to ensure the error is raised against incompatible configuration, InOut + transacted.
 */
public class TransactedProducerInOutErrorTest {
  private static final Logger LOG=LoggerFactory.getLogger(TransactedProducerInOutErrorTest.class);
  @Test(expected=IllegalArgumentException.class) public void test() throws Exception {
    CamelContext context=new DefaultCamelContext();
    context.addRoutes(createRouteBuilder());
    SjmsComponent component=context.getComponent("sjms",SjmsComponent.class);
    component.setConnectionFactory(CamelJmsTestHelper.createConnectionFactory());
    try {
      context.start();
    }
 catch (    Throwable t) {
      LOG.info("Exception was thrown as expected",t);
      throw t;
    }
  }
  protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("sjms:queue:test-in?namedReplyTo=test-out&exchangePattern=InOut&transacted=true").to("mock:result");
        from("sjms:queue:test-in?exchangePattern=InOut").log("Using ${threadName} to process ${body}").transform(body().prepend("Bye "));
      }
    }
;
  }
}
