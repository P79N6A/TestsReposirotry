/** 
 * @version 
 */
public class PredicateAsBeanTest extends ContextTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(BeanRouteTest.class);
  protected MyPredicate myPredicate=new MyPredicate();
  @Test public void testSendMessage() throws Exception {
    String expectedBody="Wobble";
    template.sendBodyAndHeader("direct:in",expectedBody,"foo","bar");
    assertEquals("bean body: " + myPredicate,expectedBody,myPredicate.body);
  }
  @Override protected Context createJndiContext() throws Exception {
    JndiContext answer=new JndiContext();
    answer.bind("myPredicate",myPredicate);
    return answer;
  }
  protected RouteBuilder createRouteBuilder(){
    return new RouteBuilder(){
      public void configure(){
        from("direct:in").to("bean:myPredicate");
      }
    }
;
  }
public static class MyPredicate implements Predicate {
    public String body;
    public boolean matches(    Exchange exchange){
      LOG.info("matches(exchange) called with: " + exchange);
      body=exchange.getIn().getBody(String.class);
      return (null != body) && (body.equals("Wobble"));
    }
  }
}
