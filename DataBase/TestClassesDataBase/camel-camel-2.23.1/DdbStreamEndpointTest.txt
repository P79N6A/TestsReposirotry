@RunWith(MockitoJUnitRunner.class) public class DdbStreamEndpointTest {
  @Rule public ExpectedException expectedException=ExpectedException.none();
  private CamelContext context;
  @Mock private SequenceNumberProvider sequenceNumberProvider;
  @Mock private AmazonDynamoDBStreams amazonDynamoDBStreams;
  @Before public void setup() throws Exception {
    SimpleRegistry registry=new SimpleRegistry();
    registry.put("someSeqNumProv",sequenceNumberProvider);
    registry.put("ddbStreamsClient",amazonDynamoDBStreams);
    context=new DefaultCamelContext(registry);
  }
  @Test public void itExtractsTheSequenceNumber() throws Exception {
    when(sequenceNumberProvider.getSequenceNumber()).thenReturn("seq");
    DdbStreamEndpoint undertest=(DdbStreamEndpoint)context.getEndpoint("aws-ddbstream://table" + "?amazonDynamoDbStreamsClient=#ddbStreamsClient" + "&iteratorType=AFTER_SEQUENCE_NUMBER"+ "&sequenceNumberProvider=#someSeqNumProv");
    assertThat(undertest.getSequenceNumber(),is("seq"));
  }
  @Test public void itExtractsTheSequenceNumberFromALiteralString() throws Exception {
    DdbStreamEndpoint undertest=(DdbStreamEndpoint)context.getEndpoint("aws-ddbstream://table" + "?amazonDynamoDbStreamsClient=#ddbStreamsClient" + "&iteratorType=AFTER_SEQUENCE_NUMBER"+ "&sequenceNumberProvider=seq");
    assertThat(undertest.getSequenceNumber(),is("seq"));
  }
  @Test public void onSequenceNumberAgnosticIteratorsTheProviderIsIgnored() throws Exception {
    DdbStreamEndpoint undertest=(DdbStreamEndpoint)context.getEndpoint("aws-ddbstream://table" + "?amazonDynamoDbStreamsClient=#ddbStreamsClient" + "&iteratorType=LATEST"+ "&sequenceNumberProvider=#someSeqNumProv");
    assertThat(undertest.getSequenceNumber(),is(""));
    verify(sequenceNumberProvider,never()).getSequenceNumber();
  }
  @Test public void sequenceNumberFetchingThrowsSomethingUsefulIfMisconfigurered() throws Exception {
    expectedException.expectMessage(containsString("sequenceNumberProvider"));
    DdbStreamEndpoint undertest=(DdbStreamEndpoint)context.getEndpoint("aws-ddbstream://table" + "?amazonDynamoDbStreamsClient=#ddbStreamsClient" + "&iteratorType=AT_SEQUENCE_NUMBER");
    undertest.getSequenceNumber();
  }
}
