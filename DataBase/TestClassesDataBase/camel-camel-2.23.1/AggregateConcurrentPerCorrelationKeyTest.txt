/** 
 * @version 
 */
public class AggregateConcurrentPerCorrelationKeyTest extends ContextTestSupport {
  private final int size=200;
  private final String uri="direct:start";
  @Test public void testAggregateConcurrentPerCorrelationKey() throws Exception {
    ExecutorService service=Executors.newFixedThreadPool(20);
    List<Callable<Object>> tasks=new ArrayList<>();
    for (int i=0; i < size; i++) {
      final int id=i % 5;
      final int count=i;
      tasks.add(new Callable<Object>(){
        public Object call() throws Exception {
          template.sendBodyAndHeader(uri,"" + count,"id",id);
          return null;
        }
      }
);
    }
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(5);
    service.invokeAll(tasks);
    assertMockEndpointsSatisfied();
    service.shutdownNow();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").aggregate(header("id"),new BodyInAggregatingStrategy()).completionSize(40).to("mock:result");
      }
    }
;
  }
}
