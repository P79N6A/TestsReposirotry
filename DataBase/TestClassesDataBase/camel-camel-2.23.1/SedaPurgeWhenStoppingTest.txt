/** 
 * @version 
 */
public class SedaPurgeWhenStoppingTest extends ContextTestSupport {
  private final CountDownLatch latch=new CountDownLatch(1);
  private final CountDownLatch latch2=new CountDownLatch(1);
  @Test public void testPurgeWhenStopping() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    for (int i=0; i < 100; i++) {
      template.sendBody("seda:foo","Message " + i);
    }
    context.startRoute("myRoute");
    latch.await(2,TimeUnit.SECONDS);
    context.stopRoute("myRoute");
    latch2.countDown();
    mock.setAssertPeriod(500);
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:foo?purgeWhenStopping=true").routeId("myRoute").noAutoStartup().process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            latch.countDown();
            latch2.await(2,TimeUnit.SECONDS);
          }
        }
).to("mock:result");
      }
    }
;
  }
}
