/** 
 * @version 
 */
public class SedaQueueTest extends ContextTestSupport {
  @Test public void testQueue() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceivedInAnyOrder("Hello World","Bye World","Goodday World","Bar");
    template.sendBody("seda:foo","Hello World");
    template.sendBody("seda:foo?size=20","Bye World");
    template.sendBody("seda:foo?concurrentConsumers=5","Goodday World");
    template.sendBody("seda:bar","Bar");
  }
  @Test public void testQueueRef() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedBodiesReceived("Hello World");
    template.sendBody("seda:array?queue=#arrayQueue","Hello World");
    SedaEndpoint sedaEndpoint=resolveMandatoryEndpoint("seda:array?queue=#arrayQueue",SedaEndpoint.class);
    assertTrue(sedaEndpoint.getQueue() instanceof ArrayBlockingQueue);
  }
  @Override protected CamelContext createCamelContext() throws Exception {
    SimpleRegistry simpleRegistry=new SimpleRegistry();
    simpleRegistry.put("arrayQueue",new ArrayBlockingQueue<Exchange>(10));
    return new DefaultCamelContext(simpleRegistry);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("seda:foo?size=20&concurrentConsumers=2").to("mock:result");
        from("seda:bar").to("mock:result");
        from("seda:array?queue=#arrayQueue").to("mock:result");
      }
    }
;
  }
}
