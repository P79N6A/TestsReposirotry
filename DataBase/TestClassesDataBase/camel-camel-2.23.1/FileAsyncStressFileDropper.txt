/** 
 * @version 
 */
@Ignore("Manual test") public class FileAsyncStressFileDropper extends ContextTestSupport {
  private static int counter;
  public static String getFilename(){
    return "" + counter++ + ".txt";
  }
  @Override public void setUp() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    super.setUp();
    deleteDirectory("target/filestress");
  }
  public void testDropInNewFiles() throws Exception {
    if (isPlatform("windows")) {
      return;
    }
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMinimumMessageCount(250);
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("timer:foo?period=50").setHeader(Exchange.FILE_NAME,method(FileAsyncStressFileDropper.class,"getFilename")).setBody(constant("Hello World")).to("file:target/filestress").to("mock:result");
      }
    }
;
  }
}
