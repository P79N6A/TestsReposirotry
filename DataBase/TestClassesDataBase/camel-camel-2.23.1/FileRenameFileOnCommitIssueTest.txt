/** 
 * @version 
 */
public class FileRenameFileOnCommitIssueTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/renameissue");
    super.setUp();
  }
  @Test public void testFileRenameFileOnCommitIssue() throws Exception {
    MockEndpoint mock=getMockEndpoint("mock:result");
    mock.expectedMessageCount(1);
    mock.expectedFileExists("target/renameissue/.camel/hello.txt");
    template.sendBodyAndHeader("file://target/renameissue","World",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("file://target/renameissue?noop=false&initialDelay=0&delay=10").setProperty("PartitionID").simple("${file:name}").convertBodyTo(String.class).inOut("direct:source").process(new Processor(){
          public void process(          Exchange exchange) throws Exception {
            log.info("The exchange's IN body as String is {}",exchange.getIn().getBody(String.class));
          }
        }
).to("mock:result");
        from("direct:source").transform(body().prepend("Hello "));
      }
    }
;
  }
}
