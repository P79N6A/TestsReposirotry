public class PropertiesComponentDefaultFunctionsTest extends ContextTestSupport {
  @Override public boolean isUseRouteBuilder(){
    return false;
  }
  @Test public void testFunction() throws Exception {
    System.setProperty("FOO","mock:foo");
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("{{sys:FOO}}").transform().constant("{{env:JAVA_HOME}}").to("mock:bar");
      }
    }
);
    context.start();
    String body=System.getenv("JAVA_HOME");
    getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World");
    getMockEndpoint("mock:bar").expectedBodiesReceived(body);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    System.clearProperty("FOO");
  }
  @Test public void testFunctionGetOrElse() throws Exception {
    System.setProperty("FOO2","mock:foo");
    context.addRoutes(new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").to("{{sys:FOO2}}").to("{{env:BAR2:mock:bar}}");
      }
    }
);
    context.start();
    getMockEndpoint("mock:foo").expectedMessageCount(1);
    getMockEndpoint("mock:bar").expectedMessageCount(1);
    template.sendBody("direct:start","Hello World");
    assertMockEndpointsSatisfied();
    System.clearProperty("FOO2");
  }
}
