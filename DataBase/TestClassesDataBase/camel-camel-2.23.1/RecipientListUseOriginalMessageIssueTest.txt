/** 
 */
public class RecipientListUseOriginalMessageIssueTest extends ContextTestSupport {
  @Override @Before public void setUp() throws Exception {
    deleteDirectory("target/inbox");
    deleteDirectory("target/outbox");
    super.setUp();
  }
  @Test public void testRecipientListUseOriginalMessageIssue() throws Exception {
    getMockEndpoint("mock:error").expectedMinimumMessageCount(1);
    template.sendBodyAndHeader("file:target/inbox","A",Exchange.FILE_NAME,"hello.txt");
    assertMockEndpointsSatisfied();
    File out=new File("target/outbox/hello.txt");
    String data=context.getTypeConverter().convertTo(String.class,out);
    assertEquals("A",data);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        onException(Exception.class).handled(true).useOriginalMessage().to("file://target/outbox").to("mock:error");
        from("file://target/inbox?initialDelay=0&delay=10").process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setBody("B");
          }
        }
).process(new Processor(){
          @Override public void process(          Exchange exchange) throws Exception {
            exchange.getIn().setHeader("path","xxx");
          }
        }
).recipientList(header("path"));
      }
    }
;
  }
}
