public class GsonFieldNamePolicyTest extends CamelTestSupport {
  @Test public void testUnmarshalPojo() throws Exception {
    String json="{\"id\":\"123\",\"first_name\":\"Donald\",\"last_name\":\"Duck\"}";
    PersonPojo pojo=template.requestBody("direct:backPojo",json,PersonPojo.class);
    assertNotNull(pojo);
    assertEquals(123,pojo.getId());
    assertEquals("Donald",pojo.getFirstName());
    assertEquals("Duck",pojo.getLastName());
  }
  @Test public void testMarshalPojo() throws Exception {
    PersonPojo pojo=new PersonPojo();
    pojo.setId(123);
    pojo.setFirstName("Donald");
    pojo.setLastName("Duck");
    String expected="{\"id\":123,\"first_name\":\"Donald\",\"last_name\":\"Duck\"}";
    String json=template.requestBody("direct:inPojo",pojo,String.class);
    assertEquals(expected,json);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        GsonDataFormat formatPojo=new GsonDataFormat();
        formatPojo.setUnmarshalType(PersonPojo.class);
        formatPojo.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES);
        from("direct:inPojo").marshal(formatPojo);
        from("direct:backPojo").unmarshal(formatPojo);
      }
    }
;
  }
}
