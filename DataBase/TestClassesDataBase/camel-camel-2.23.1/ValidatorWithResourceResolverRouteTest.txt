public class ValidatorWithResourceResolverRouteTest extends ContextTestSupport {
  protected MockEndpoint validEndpoint;
  protected MockEndpoint finallyEndpoint;
  protected MockEndpoint invalidEndpoint;
  @Test public void testValidMessage() throws Exception {
    validEndpoint.expectedMessageCount(1);
    finallyEndpoint.expectedMessageCount(1);
    invalidEndpoint.expectedMessageCount(0);
    template.sendBody("direct:start","<report xmlns='http://foo.com/report' xmlns:rb='http://foo.com/report-base'><author><rb:name>Knuth</rb:name></author><content><rb:chapter><rb:subject></rb:subject>" + "<rb:abstract></rb:abstract><rb:body></rb:body></rb:chapter></content></report>");
    MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint);
  }
  @Test public void testInvalidMessage() throws Exception {
    validEndpoint.expectedMessageCount(0);
    invalidEndpoint.expectedMessageCount(1);
    finallyEndpoint.expectedMessageCount(1);
    template.sendBody("direct:start","<report xmlns='http://foo.com/report' xmlns:rb='http://foo.com/report-base'><author><rb:name>Knuth</rb:name></author></report>");
    MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint);
  }
  @Override @Before public void setUp() throws Exception {
    super.setUp();
    validEndpoint=resolveMandatoryEndpoint("mock:valid",MockEndpoint.class);
    invalidEndpoint=resolveMandatoryEndpoint("mock:invalid",MockEndpoint.class);
    finallyEndpoint=resolveMandatoryEndpoint("mock:finally",MockEndpoint.class);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    CatalogManager.getStaticManager().setIgnoreMissingProperties(true);
    CatalogResolver catalogResolver=new CatalogResolver(true);
    URL catalogUrl=ResourceHelper.resolveMandatoryResourceAsUrl(context.getClassResolver(),"org/apache/camel/component/validator/catalog.cat");
    catalogResolver.getCatalog().parseCatalog(catalogUrl);
    LSResourceResolver resourceResolver=new CatalogLSResourceResolver(catalogResolver);
    JndiRegistry registry=(JndiRegistry)((PropertyPlaceholderDelegateRegistry)context.getRegistry()).getRegistry();
    registry.bind("resourceResolver",resourceResolver);
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:start").doTry().to("validator:org/apache/camel/component/validator/report.xsd?resourceResolver=#resourceResolver").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doFinally().to("mock:finally").end();
      }
    }
;
  }
}
