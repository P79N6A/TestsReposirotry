/** 
 * Test class for  {@link com.braintreegateway.ReportGateway} APIs.
 */
public class ReportGatewayIntegrationTest extends AbstractBraintreeTestSupport {
  private static final Logger LOG=LoggerFactory.getLogger(ReportGatewayIntegrationTest.class);
  private static final String PATH_PREFIX=BraintreeApiCollection.getCollection().getApiName(ReportGatewayApiMethod.class).getName();
  @Test public void testTransactionLevelFees() throws Exception {
    String merchantAccountId=System.getenv("CAMEL_BRAINTREE_MERCHANT_ACCOUNT_ID");
    String reportDateString=System.getenv("CAMEL_BRAINTREE_REPORT_DATE");
    SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
    Calendar reportDate=Calendar.getInstance();
    reportDate.setTime(sdf.parse(reportDateString));
    TransactionLevelFeeReportRequest request=new TransactionLevelFeeReportRequest().date(reportDate).merchantAccountId(merchantAccountId);
    final com.braintreegateway.Result<TransactionLevelFeeReport> result=requestBody("direct://TRANSACTIONLEVELFEES",request);
    assertNotNull("transactionLevelFees result",result);
    assertTrue("transactionLevelFees success",result.isSuccess());
    List<TransactionLevelFeeReportRow> rows=result.getTarget().getRows();
    assertTrue("transactionLevelFeeRows found",rows.size() > 0);
    LOG.debug("transactionLevelFees: " + result);
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      public void configure(){
        from("direct://TRANSACTIONLEVELFEES").to("braintree://" + PATH_PREFIX + "/transactionLevelFees?inBody=request");
      }
    }
;
  }
}
