public class JacksonJAXBAnnotationTest extends CamelTestSupport {
  @Test public void testMarshalJAXBObject() throws Exception {
    TestJAXBPojo in=new TestJAXBPojo();
    in.setName("Camel");
    MockEndpoint mock=getMockEndpoint("mock:reversePojo");
    mock.expectedMessageCount(1);
    mock.message(0).body().isInstanceOf(TestJAXBPojo.class);
    mock.message(0).body().isEqualTo(in);
    Object marshalled=template.requestBody("direct:inPojo",in);
    String marshalledAsString=context.getTypeConverter().convertTo(String.class,marshalled);
    assertEquals("{\"PojoName\":\"Camel\"}",marshalledAsString);
    template.sendBody("direct:backPojo",marshalled);
    mock.assertIsSatisfied();
  }
  @Override protected RouteBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        JacksonDataFormat format=new JacksonDataFormat();
        from("direct:in").marshal(format);
        from("direct:back").unmarshal(format).to("mock:reverse");
        JacksonDataFormat formatPojo=new JacksonDataFormat(TestJAXBPojo.class);
        from("direct:inPojo").marshal(formatPojo);
        from("direct:backPojo").unmarshal(formatPojo).to("mock:reversePojo");
      }
    }
;
  }
}
