@RunWith(Theories.class) public abstract class AbstractBulkApiTestBase extends AbstractSalesforceTestBase {
  protected JobInfo createJob(  JobInfo jobInfo){
    jobInfo=template().requestBody("direct:createJob",jobInfo,JobInfo.class);
    assertNotNull("Missing JobId",jobInfo.getId());
    return jobInfo;
  }
  @Override protected RouteBuilder doCreateRouteBuilder() throws Exception {
    return new RouteBuilder(){
      @Override public void configure() throws Exception {
        from("direct:createJob").to("salesforce://createJob");
        from("direct:getJob").to("salesforce:getJob");
        from("direct:closeJob").to("salesforce:closeJob");
        from("direct:abortJob").to("salesforce:abortJob");
        from("direct:createBatch").to("salesforce:createBatch");
        from("direct:getBatch").to("salesforce:getBatch");
        from("direct:getAllBatches").to("salesforce:getAllBatches");
        from("direct:getRequest").to("salesforce:getRequest");
        from("direct:getResults").to("salesforce:getResults");
        from("direct:createBatchQuery").to("salesforce:createBatchQuery?sObjectQuery=SELECT Name, Description__c, Price__c, Total_Inventory__c FROM Merchandise__c WHERE Name LIKE '%25Bulk API%25'");
        from("direct:getQueryResultIds").to("salesforce:getQueryResultIds");
        from("direct:getQueryResult").to("salesforce:getQueryResult");
      }
    }
;
  }
  protected boolean batchProcessed(  BatchInfo batchInfo){
    BatchStateEnum state=batchInfo.getState();
    return !(state == BatchStateEnum.QUEUED || state == BatchStateEnum.IN_PROGRESS);
  }
  protected BatchInfo getBatchInfo(  BatchInfo batchInfo){
    batchInfo=template().requestBody("direct:getBatch",batchInfo,BatchInfo.class);
    assertNotNull("Null batch",batchInfo);
    assertNotNull("Null batch id",batchInfo.getId());
    return batchInfo;
  }
}
