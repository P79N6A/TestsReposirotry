public class ConsoleSpammingMockitoJUnitRunnerTest extends TestBase {
  private ConsoleSpammingMockitoJUnitRunner runner;
  private MockitoLoggerStub loggerStub;
  private RunNotifier notifier;
  @Before public void setup() throws InitializationError {
    loggerStub=new MockitoLoggerStub();
    notifier=new RunNotifier();
  }
  @Test public void shouldDelegateToGetDescription() throws Exception {
    final Description expectedDescription=Description.createSuiteDescription(this.getClass());
    runner=new ConsoleSpammingMockitoJUnitRunner(loggerStub,new InternalRunnerStub(){
      public Description getDescription(){
        return expectedDescription;
      }
    }
);
    Description description=runner.getDescription();
    assertEquals(expectedDescription,description);
  }
public class MockitoLoggerStub extends ConsoleMockitoLogger {
    StringBuilder loggedInfo=new StringBuilder();
    public void log(    Object what){
      super.log(what);
      loggedInfo.append(what);
    }
    public String getLoggedInfo(){
      return loggedInfo.toString();
    }
  }
static class InternalRunnerStub implements InternalRunner {
    public Description getDescription(){
      return null;
    }
    public void run(    RunNotifier notifier){
    }
    public void filter(    Filter filter) throws NoTestsRemainException {
    }
  }
}
