/** 
 * by Szczepan Faber, created at: 5/22/12
 */
public class MockHandlerFactoryTest extends TestBase {
  private final IMethods mock=Mockito.mock(IMethods.class);
  @Test public void handle_result_must_not_be_null_for_primitives() throws Throwable {
    MockCreationSettings<?> settings=(MockCreationSettings<?>)new MockSettingsImpl().defaultAnswer(new Returns(null));
    MockHandler<?> handler=createMockHandler(settings);
    mock.intReturningMethod();
    Invocation invocation=super.getLastInvocation();
    Object result=handler.handle(invocation);
    assertNotNull(result);
    assertEquals(0,result);
  }
  @Test public void valid_handle_result_is_permitted() throws Throwable {
    MockCreationSettings<?> settings=(MockCreationSettings<?>)new MockSettingsImpl().defaultAnswer(new Returns(123));
    MockHandler<?> handler=createMockHandler(settings);
    mock.intReturningMethod();
    Invocation invocation=super.getLastInvocation();
    Object result=handler.handle(invocation);
    assertEquals(123,result);
  }
}
