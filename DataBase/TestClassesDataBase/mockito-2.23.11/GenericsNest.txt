interface GenericsNest<K extends Comparable<K> & Cloneable> extends Map<K,Set<Number>> {
  Set<Number> remove(  Object key);
  List<? super Number> returningWildcard();
  Map<String,K> returningNonMockableNestedGeneric();
  K returningK();
  <O extends K>List<O> paramTypeWithTypeParams();
  <S extends Appendable,T extends S>T twoTypeParams(  S s);
  <O extends K>O typeVarWithTypeParams();
  Number returnsNormalType();
}
