public class TimerTest extends TestBase {
  @Rule public ExpectedException expectedException=ExpectedException.none();
  @Test public void should_return_true_if_task_is_in_acceptable_time_bounds(){
    long duration=10000L;
    Timer timer=new Timer(duration);
    timer.start();
    Assertions.assertThat(timer.isCounting()).isTrue();
  }
  @Test public void should_return_false_when_time_run_out() throws Exception {
    Timer timer=new Timer(0);
    timer.start();
    oneMillisecondPasses();
    Assertions.assertThat(timer.isCounting()).isFalse();
  }
  @Test public void should_throw_friendly_reminder_exception_when_duration_is_negative(){
    expectedException.expect(FriendlyReminderException.class);
    expectedException.expectMessage("Don't panic! I'm just a friendly reminder!");
    new Timer(-1);
  }
  private void oneMillisecondPasses() throws InterruptedException {
    Thread.sleep(1);
  }
}
