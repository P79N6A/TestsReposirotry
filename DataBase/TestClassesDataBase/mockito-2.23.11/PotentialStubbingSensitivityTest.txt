public class PotentialStubbingSensitivityTest {
  @Rule public MockitoRule mockito=MockitoJUnit.rule().strictness(Strictness.STRICT_STUBS);
  @Mock IMethods mock;
  @Before public void setup(){
    when(mock.simpleMethod("1")).thenReturn("1");
  }
  @Test public void allows_stubbing_with_different_arg_in_test_code(){
    when(mock.simpleMethod("2")).thenReturn("2");
    new Runnable(){
      public void run(){
        when(mock.simpleMethod("3")).thenReturn("3");
      }
    }
.run();
    mock.simpleMethod("1");
    mock.simpleMethod("2");
    mock.simpleMethod("3");
  }
  @Test public void reports_potential_stubbing_problem_in_production_code(){
    Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){
      public void call() throws Throwable {
        ProductionCode.simpleMethod(mock,"2");
      }
    }
).isInstanceOf(PotentialStubbingProblem.class);
  }
}
