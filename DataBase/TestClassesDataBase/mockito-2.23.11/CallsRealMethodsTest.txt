public class CallsRealMethodsTest {
  @Test public void should_delegate_to_returns_default_when_abstract_method() throws Throwable {
    Invocation abstractMethod=new InvocationBuilder().method("booleanReturningMethod").toInvocation();
    assertThat(new CallsRealMethods().answer(abstractMethod)).isEqualTo(RETURNS_DEFAULTS.answer(abstractMethod));
  }
  @Test public void should_fail_when_calling_real_method_on_interface() throws Throwable {
    Invocation invocationOnInterface=new InvocationBuilder().method("simpleMethod").toInvocation();
    try {
      new CallsRealMethods().validateFor(invocationOnInterface);
      Assertions.fail("can not invoke interface");
    }
 catch (    MockitoException expected) {
    }
  }
  @Test public void should_be_OK_when_calling_real_method_on_concrete_class() throws Throwable {
    ArrayList<?> mock=mock(ArrayList.class);
    mock.clear();
    Invocation invocationOnClass=new MockitoCore().getLastInvocation();
    new CallsRealMethods().validateFor(invocationOnClass);
  }
}
