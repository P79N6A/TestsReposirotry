public class PluginStackTraceFilteringTest extends TestBase {
  @Mock private IMethods mock;
  @After public void resetState(){
    super.resetState();
  }
  @Before public void setup(){
    super.makeStackTracesClean();
  }
  @Test public void pluginFiltersOutStackTraceElement(){
    try {
      MyStackTraceCleanerProvider.ENABLED=true;
      verifyMock_x();
      fail();
    }
 catch (    WantedButNotInvoked e) {
      String trace=getStackTrace(e);
      assertThat(trace).contains("verifyMock_x").doesNotContain("verify_excludeMe_x");
    }
  }
  @Test public void pluginDoesNotFilterOutStackTraceElement(){
    try {
      MyStackTraceCleanerProvider.ENABLED=false;
      verifyMock_x();
      fail();
    }
 catch (    WantedButNotInvoked e) {
      String trace=getStackTrace(e);
      assertThat(trace).contains("verifyMock_x").contains("verify_excludeMe_x");
    }
  }
  private void verify_excludeMe_x(){
    verify(mock).simpleMethod();
  }
  private void verifyMock_x(){
    verify_excludeMe_x();
  }
}
