public class StrictnessWithRulesTest {
  @Mock IMethods mock;
  @Rule public MockitoRule rule=MockitoJUnit.rule().strictness(Strictness.STRICT_STUBS);
  @Test public void potential_stubbing_problem(){
    when(mock.simpleMethod("1")).thenReturn("1");
    lenient().when(mock.differentMethod("2")).thenReturn("2");
    mock.differentMethod("200");
    assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){
      public void call(){
        ProductionCode.simpleMethod(mock,"100");
      }
    }
).isInstanceOf(PotentialStubbingProblem.class);
    mock.simpleMethod("1");
  }
  @Test public void unnecessary_stubbing(){
    lenient().when(mock.differentMethod("2")).thenReturn("2");
  }
}
