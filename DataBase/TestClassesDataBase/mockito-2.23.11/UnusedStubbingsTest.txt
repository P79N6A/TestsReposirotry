public class UnusedStubbingsTest extends TestBase {
  private SimpleMockitoLogger logger=new SimpleMockitoLogger();
  @Test public void no_unused_stubbings() throws Exception {
    UnusedStubbings stubbings=new UnusedStubbings(Collections.<Stubbing>emptyList());
    stubbings.format("MyTest.myTestMethod",logger);
    assertEquals("",logger.getLoggedInfo());
  }
  @Test public void unused_stubbings() throws Exception {
    UnusedStubbings stubbings=new UnusedStubbings(Arrays.asList(new StubbedInvocationMatcher(doesNothing(),new InvocationBuilder().toInvocationMatcher(),null),new StubbedInvocationMatcher(doesNothing(),new InvocationBuilder().toInvocationMatcher(),null)));
    stubbings.format("MyTest.myTestMethod",logger);
    assertThat(filterLineNo(logger.getLoggedInfo())).isIn("[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\n" + "[MockitoHint] 1. Unused -> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n" + "[MockitoHint] 2. Unused -> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n","[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\n" + "[MockitoHint] 1. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n" + "[MockitoHint] 2. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n");
  }
}
