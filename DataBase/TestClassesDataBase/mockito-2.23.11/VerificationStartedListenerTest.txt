/** 
 * This test demonstrates how verification started listeners work. The test cases are contrived but they provide necessary coverage. For rationale, see https://github.com/mockito/mockito/issues/1191
 */
public class VerificationStartedListenerTest extends TestBase {
  @Test public void verified_mock_can_be_replaced() throws Exception {
    final List mock1=mock(List.class);
    mock1.clear();
    List mock2=mock(List.class,Mockito.withSettings().verificationStartedListeners(new VerificationStartedListener(){
      public void onVerificationStarted(      VerificationStartedEvent event){
        event.setMock(mock1);
      }
    }
));
    List verifiedMock=verify(mock2);
    assertEquals(mock1,verifiedMock);
    verifiedMock.clear();
  }
  @Test public void verification_started_event_contains_correct_mock() throws Exception {
    final List<Object> container=new ArrayList<Object>();
    List mock=mock(List.class,Mockito.withSettings().verificationStartedListeners(new VerificationStartedListener(){
      public void onVerificationStarted(      VerificationStartedEvent event){
        container.add(event.getMock());
      }
    }
));
    verify(mock,never()).clear();
    Assertions.assertThat(container).containsExactly(mock);
  }
  @Test public void listeners_are_executed_in_sequence() throws Exception {
    final List<Object> container=new ArrayList<Object>();
    final List mock1=mock(List.class);
    List mock2=mock(List.class,Mockito.withSettings().verificationStartedListeners(new VerificationStartedListener(){
      public void onVerificationStarted(      VerificationStartedEvent event){
        container.add(event.getMock());
        event.setMock(mock1);
      }
    }
,new VerificationStartedListener(){
      @Override public void onVerificationStarted(      VerificationStartedEvent event){
        container.add(event.getMock());
      }
    }
));
    verify(mock2,never()).clear();
    Assertions.assertThat(container).containsExactly(mock2,mock1);
  }
  @Test public void shows_clean_exception_when_null_array_passed() throws Exception {
    try {
      Mockito.withSettings().verificationStartedListeners(null);
      fail();
    }
 catch (    MockitoException e) {
      assertEquals("verificationStartedListeners() does not accept null vararg array. See the Javadoc.",e.getMessage());
    }
  }
  @Test public void shows_clean_exception_when_null_listener_passed() throws Exception {
    try {
      Mockito.withSettings().verificationStartedListeners(mock(VerificationStartedListener.class),null);
      fail();
    }
 catch (    MockitoException e) {
      assertEquals("verificationStartedListeners() does not accept null listeners. See the Javadoc.",e.getMessage());
    }
  }
}
