public class DeprecatedAnnotationEngineApiTest extends TestBase {
  @After public void goBackToDefaultConfiguration(){
    ConfigurationAccess.getConfig().overrideAnnotationEngine(null);
  }
class SimpleTestCase {
    @InjectMocks Tested tested=new Tested();
    @Mock Dependency mock;
  }
class Tested {
    Dependency dependency;
    public void setDependency(    Dependency dependency){
      this.dependency=dependency;
    }
  }
class Dependency {
  }
  @Test public void shouldInjectMocksIfThereIsNoUserDefinedEngine() throws Exception {
    AnnotationEngine defaultEngine=new DefaultMockitoConfiguration().getAnnotationEngine();
    ConfigurationAccess.getConfig().overrideAnnotationEngine(defaultEngine);
    SimpleTestCase test=new SimpleTestCase();
    MockitoAnnotations.initMocks(test);
    assertNotNull(test.mock);
    assertNotNull(test.tested.dependency);
    assertSame(test.mock,test.tested.dependency);
  }
  @Test public void shouldRespectUsersEngine() throws Exception {
    AnnotationEngine customizedEngine=new IndependentAnnotationEngine(){
    }
;
    ConfigurationAccess.getConfig().overrideAnnotationEngine(customizedEngine);
    SimpleTestCase test=new SimpleTestCase();
    MockitoAnnotations.initMocks(test);
    assertNotNull(test.mock);
    assertNull(test.tested.dependency);
  }
}
