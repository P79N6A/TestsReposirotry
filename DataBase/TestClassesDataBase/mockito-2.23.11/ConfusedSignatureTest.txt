public class ConfusedSignatureTest {
  @Test public void should_mock_method_which_has_generic_return_type_in_superclass_and_concrete_one_in_interface(){
    Sub mock=mock(Sub.class);
    when(mock.getFoo()).thenReturn("Hello");
    assertThat(mock.getFoo()).isEqualTo("Hello");
  }
public class Super<T> {
    private T value;
    public Super(    T value){
      this.value=value;
    }
    public T getFoo(){
      return value;
    }
  }
public class Sub extends Super<String> implements iInterface {
    public Sub(    String s){
      super(s);
    }
  }
public interface iInterface {
    String getFoo();
  }
}
