private static class TestPlaybackRunnable implements Player.EventListener, Runnable {
  private final Context context;
  private final Uri uri;
  private ExoPlayer player;
  private ExoPlaybackException playbackException;
  public TestPlaybackRunnable(  Uri uri,  Context context){
    this.uri=uri;
    this.context=context;
  }
  @Override public void run(){
    Looper.prepare();
    LibflacAudioRenderer audioRenderer=new LibflacAudioRenderer();
    DefaultTrackSelector trackSelector=new DefaultTrackSelector();
    player=ExoPlayerFactory.newInstance(new Renderer[]{audioRenderer},trackSelector);
    player.addListener(this);
    MediaSource mediaSource=new ExtractorMediaSource.Factory(new DefaultDataSourceFactory(context,"ExoPlayerExtFlacTest")).setExtractorsFactory(MatroskaExtractor.FACTORY).createMediaSource(uri);
    player.prepare(mediaSource);
    player.setPlayWhenReady(true);
    Looper.loop();
  }
  @Override public void onPlayerError(  ExoPlaybackException error){
    playbackException=error;
  }
  @Override public void onPlayerStateChanged(  boolean playWhenReady,  int playbackState){
    if (playbackState == Player.STATE_ENDED || (playbackState == Player.STATE_IDLE && playbackException != null)) {
      player.release();
      Looper.myLooper().quit();
    }
  }
}
