private static final class FakeVideoRenderer extends FakeRenderer {
  private final VideoRendererEventListener.EventDispatcher eventDispatcher;
  private final DecoderCounters decoderCounters;
  private Format format;
  private boolean renderedFirstFrame;
  public FakeVideoRenderer(  Handler handler,  VideoRendererEventListener eventListener){
    super(Builder.VIDEO_FORMAT);
    eventDispatcher=new VideoRendererEventListener.EventDispatcher(handler,eventListener);
    decoderCounters=new DecoderCounters();
  }
  @Override protected void onEnabled(  boolean joining) throws ExoPlaybackException {
    super.onEnabled(joining);
    eventDispatcher.enabled(decoderCounters);
    renderedFirstFrame=false;
  }
  @Override protected void onStopped() throws ExoPlaybackException {
    super.onStopped();
    eventDispatcher.droppedFrames(0,0);
  }
  @Override protected void onDisabled(){
    super.onDisabled();
    eventDispatcher.disabled(decoderCounters);
  }
  @Override protected void onPositionReset(  long positionUs,  boolean joining) throws ExoPlaybackException {
    super.onPositionReset(positionUs,joining);
    renderedFirstFrame=false;
  }
  @Override protected void onFormatChanged(  Format format){
    eventDispatcher.inputFormatChanged(format);
    eventDispatcher.decoderInitialized("fake.video.decoder",SystemClock.elapsedRealtime(),0);
    this.format=format;
  }
  @Override protected void onBufferRead(){
    if (!renderedFirstFrame) {
      eventDispatcher.videoSizeChanged(format.width,format.height,format.rotationDegrees,format.pixelWidthHeightRatio);
      eventDispatcher.renderedFirstFrame(null);
      renderedFirstFrame=true;
    }
  }
}
