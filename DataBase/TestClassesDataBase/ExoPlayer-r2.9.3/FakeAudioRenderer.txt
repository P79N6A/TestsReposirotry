private static final class FakeAudioRenderer extends FakeRenderer {
  private final AudioRendererEventListener.EventDispatcher eventDispatcher;
  private final DecoderCounters decoderCounters;
  private boolean notifiedAudioSessionId;
  public FakeAudioRenderer(  Handler handler,  AudioRendererEventListener eventListener){
    super(Builder.AUDIO_FORMAT);
    eventDispatcher=new AudioRendererEventListener.EventDispatcher(handler,eventListener);
    decoderCounters=new DecoderCounters();
  }
  @Override protected void onEnabled(  boolean joining) throws ExoPlaybackException {
    super.onEnabled(joining);
    eventDispatcher.enabled(decoderCounters);
    notifiedAudioSessionId=false;
  }
  @Override protected void onDisabled(){
    super.onDisabled();
    eventDispatcher.disabled(decoderCounters);
  }
  @Override protected void onPositionReset(  long positionUs,  boolean joining) throws ExoPlaybackException {
    super.onPositionReset(positionUs,joining);
  }
  @Override protected void onFormatChanged(  Format format){
    eventDispatcher.inputFormatChanged(format);
    eventDispatcher.decoderInitialized("fake.audio.decoder",SystemClock.elapsedRealtime(),0);
  }
  @Override protected void onBufferRead(){
    if (!notifiedAudioSessionId) {
      eventDispatcher.audioSessionId(1);
      notifiedAudioSessionId=true;
    }
  }
}
