/** 
 * Unit test for  {@link SonicAudioProcessor}.
 */
@RunWith(RobolectricTestRunner.class) public final class SonicAudioProcessorTest {
  private SonicAudioProcessor sonicAudioProcessor;
  @Before public void setUp(){
    sonicAudioProcessor=new SonicAudioProcessor();
  }
  @Test public void testReconfigureWithSameSampleRate() throws Exception {
    sonicAudioProcessor.setOutputSampleRateHz(48000);
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(48000);
    assertThat(sonicAudioProcessor.isActive()).isTrue();
    sonicAudioProcessor.configure(48000,2,C.ENCODING_PCM_16BIT);
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(48000);
    assertThat(sonicAudioProcessor.isActive()).isFalse();
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(48000);
    assertThat(sonicAudioProcessor.isActive()).isTrue();
  }
  @Test public void testNoSampleRateChange() throws Exception {
    sonicAudioProcessor.setOutputSampleRateHz(48000);
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    sonicAudioProcessor.setOutputSampleRateHz(SonicAudioProcessor.SAMPLE_RATE_NO_CHANGE);
    sonicAudioProcessor.configure(22050,2,C.ENCODING_PCM_16BIT);
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(22050);
    assertThat(sonicAudioProcessor.isActive()).isFalse();
  }
  @Test public void testBecomesActiveAfterConfigure() throws Exception {
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    sonicAudioProcessor.setOutputSampleRateHz(22050);
    assertThat(sonicAudioProcessor.isActive()).isFalse();
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(44100);
  }
  @Test public void testSampleRateChangeBecomesActiveAfterConfigure() throws Exception {
    sonicAudioProcessor.setOutputSampleRateHz(48000);
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    sonicAudioProcessor.setOutputSampleRateHz(22050);
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(48000);
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    assertThat(sonicAudioProcessor.getOutputSampleRateHz()).isEqualTo(22050);
  }
  @Test public void testIsActiveWithSpeedChange() throws Exception {
    sonicAudioProcessor.setSpeed(1.5f);
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    sonicAudioProcessor.flush();
    assertThat(sonicAudioProcessor.isActive()).isTrue();
  }
  @Test public void testIsActiveWithPitchChange() throws Exception {
    sonicAudioProcessor.setPitch(1.5f);
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    sonicAudioProcessor.flush();
    assertThat(sonicAudioProcessor.isActive()).isTrue();
  }
  @Test public void testIsNotActiveWithNoChange() throws Exception {
    sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_16BIT);
    assertThat(sonicAudioProcessor.isActive()).isFalse();
  }
  @Test public void testDoesNotSupportNon16BitInput() throws Exception {
    try {
      sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_8BIT);
      fail();
    }
 catch (    AudioProcessor.UnhandledFormatException e) {
    }
    try {
      sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_24BIT);
      fail();
    }
 catch (    AudioProcessor.UnhandledFormatException e) {
    }
    try {
      sonicAudioProcessor.configure(44100,2,C.ENCODING_PCM_32BIT);
      fail();
    }
 catch (    AudioProcessor.UnhandledFormatException e) {
    }
  }
}
