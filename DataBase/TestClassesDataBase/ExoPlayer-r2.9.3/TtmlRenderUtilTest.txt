/** 
 * Unit test for  {@link TtmlRenderUtil}.
 */
@RunWith(RobolectricTestRunner.class) public final class TtmlRenderUtilTest {
  @Test public void testResolveStyleNoStyleAtAll(){
    assertThat(resolveStyle(null,null,null)).isNull();
  }
  @Test public void testResolveStyleSingleReferentialStyle(){
    Map<String,TtmlStyle> globalStyles=getGlobalStyles();
    String[] styleIds={"s0"};
    assertThat(TtmlRenderUtil.resolveStyle(null,styleIds,globalStyles)).isSameAs(globalStyles.get("s0"));
  }
  @Test public void testResolveStyleMultipleReferentialStyles(){
    Map<String,TtmlStyle> globalStyles=getGlobalStyles();
    String[] styleIds={"s0","s1"};
    TtmlStyle resolved=TtmlRenderUtil.resolveStyle(null,styleIds,globalStyles);
    assertThat(resolved).isNotSameAs(globalStyles.get("s0"));
    assertThat(resolved).isNotSameAs(globalStyles.get("s1"));
    assertThat(resolved.getId()).isNull();
    assertThat(resolved.getBackgroundColor()).isEqualTo(BLACK);
    assertThat(resolved.getFontColor()).isEqualTo(RED);
    assertThat(resolved.getStyle()).isEqualTo(STYLE_BOLD_ITALIC);
  }
  @Test public void testResolveMergeSingleReferentialStyleIntoInlineStyle(){
    Map<String,TtmlStyle> globalStyles=getGlobalStyles();
    String[] styleIds={"s0"};
    TtmlStyle style=new TtmlStyle();
    style.setBackgroundColor(Color.YELLOW);
    TtmlStyle resolved=TtmlRenderUtil.resolveStyle(style,styleIds,globalStyles);
    assertThat(resolved).isSameAs(style);
    assertThat(resolved.getBackgroundColor()).isEqualTo(YELLOW);
    assertThat(resolved.getStyle()).isEqualTo(STYLE_BOLD);
  }
  @Test public void testResolveMergeMultipleReferentialStylesIntoInlineStyle(){
    Map<String,TtmlStyle> globalStyles=getGlobalStyles();
    String[] styleIds={"s0","s1"};
    TtmlStyle style=new TtmlStyle();
    style.setBackgroundColor(Color.YELLOW);
    TtmlStyle resolved=TtmlRenderUtil.resolveStyle(style,styleIds,globalStyles);
    assertThat(resolved).isSameAs(style);
    assertThat(resolved.getBackgroundColor()).isEqualTo(YELLOW);
    assertThat(resolved.getStyle()).isEqualTo(STYLE_BOLD_ITALIC);
  }
  @Test public void testResolveStyleOnlyInlineStyle(){
    TtmlStyle inlineStyle=new TtmlStyle();
    assertThat(TtmlRenderUtil.resolveStyle(inlineStyle,null,null)).isSameAs(inlineStyle);
  }
  private static Map<String,TtmlStyle> getGlobalStyles(){
    Map<String,TtmlStyle> globalStyles=new HashMap<>();
    TtmlStyle s0=new TtmlStyle();
    s0.setId("s0");
    s0.setBackgroundColor(Color.BLACK);
    s0.setBold(true);
    globalStyles.put(s0.getId(),s0);
    TtmlStyle s1=new TtmlStyle();
    s1.setId("s1");
    s1.setBackgroundColor(Color.RED);
    s1.setFontColor(Color.RED);
    s1.setItalic(true);
    globalStyles.put(s1.getId(),s1);
    return globalStyles;
  }
}
