private static class FakeSequenceableLoader implements SequenceableLoader {
  private long bufferedPositionUs;
  private long nextLoadPositionUs;
  private int numInvocations;
  private int nextChunkDurationUs;
  private FakeSequenceableLoader(  long bufferedPositionUs,  long nextLoadPositionUs){
    this.bufferedPositionUs=bufferedPositionUs;
    this.nextLoadPositionUs=nextLoadPositionUs;
  }
  @Override public long getBufferedPositionUs(){
    return bufferedPositionUs;
  }
  @Override public long getNextLoadPositionUs(){
    return nextLoadPositionUs;
  }
  @Override public boolean continueLoading(  long positionUs){
    numInvocations++;
    boolean loaded=nextChunkDurationUs != 0;
    bufferedPositionUs=nextLoadPositionUs;
    nextLoadPositionUs+=nextChunkDurationUs;
    nextChunkDurationUs=0;
    return loaded;
  }
  @Override public void reevaluateBuffer(  long positionUs){
  }
  private void setNextChunkDurationUs(  int nextChunkDurationUs){
    this.nextChunkDurationUs=nextChunkDurationUs;
  }
}
