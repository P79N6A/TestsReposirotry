/** 
 * Unit tests for  {@link DashUtil}. 
 */
@RunWith(RobolectricTestRunner.class) public final class DashUtilTest {
  @Test public void testLoadDrmInitDataFromManifest() throws Exception {
    Period period=newPeriod(newAdaptationSets(newRepresentations(newDrmInitData())));
    DrmInitData drmInitData=DashUtil.loadDrmInitData(DummyDataSource.INSTANCE,period);
    assertThat(drmInitData).isEqualTo(newDrmInitData());
  }
  @Test public void testLoadDrmInitDataMissing() throws Exception {
    Period period=newPeriod(newAdaptationSets(newRepresentations(null)));
    DrmInitData drmInitData=DashUtil.loadDrmInitData(DummyDataSource.INSTANCE,period);
    assertThat(drmInitData).isNull();
  }
  @Test public void testLoadDrmInitDataNoRepresentations() throws Exception {
    Period period=newPeriod(newAdaptationSets());
    DrmInitData drmInitData=DashUtil.loadDrmInitData(DummyDataSource.INSTANCE,period);
    assertThat(drmInitData).isNull();
  }
  @Test public void testLoadDrmInitDataNoAdaptationSets() throws Exception {
    Period period=newPeriod();
    DrmInitData drmInitData=DashUtil.loadDrmInitData(DummyDataSource.INSTANCE,period);
    assertThat(drmInitData).isNull();
  }
  private static Period newPeriod(  AdaptationSet... adaptationSets){
    return new Period("",0,Arrays.asList(adaptationSets));
  }
  private static AdaptationSet newAdaptationSets(  Representation... representations){
    return new AdaptationSet(0,C.TRACK_TYPE_VIDEO,Arrays.asList(representations),null,null);
  }
  private static Representation newRepresentations(  DrmInitData drmInitData){
    Format format=Format.createVideoContainerFormat("id","label",MimeTypes.VIDEO_MP4,MimeTypes.VIDEO_H264,"",Format.NO_VALUE,1024,768,Format.NO_VALUE,null,0);
    if (drmInitData != null) {
      format=format.copyWithDrmInitData(drmInitData);
    }
    return Representation.newInstance("",0,format,"",new SingleSegmentBase());
  }
  private static DrmInitData newDrmInitData(){
    return new DrmInitData(new SchemeData(C.WIDEVINE_UUID,"mimeType",new byte[]{1,4,7,0,3,6}));
  }
}
