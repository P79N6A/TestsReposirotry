/** 
 * Ad loader event listener that forwards ad playback state to a fake player. 
 */
private static final class TestAdsLoaderListener implements AdsLoader.EventListener {
  private final FakePlayer fakeExoPlayer;
  private final Timeline contentTimeline;
  private final long[][] adDurationsUs;
  public AdPlaybackState adPlaybackState;
  public TestAdsLoaderListener(  FakePlayer fakeExoPlayer,  Timeline contentTimeline,  long[][] adDurationsUs){
    this.fakeExoPlayer=fakeExoPlayer;
    this.contentTimeline=contentTimeline;
    this.adDurationsUs=adDurationsUs;
  }
  @Override public void onAdPlaybackState(  AdPlaybackState adPlaybackState){
    adPlaybackState=adPlaybackState.withAdDurationsUs(adDurationsUs);
    this.adPlaybackState=adPlaybackState;
    fakeExoPlayer.updateTimeline(new SinglePeriodAdTimeline(contentTimeline,adPlaybackState));
  }
  @Override public void onAdLoadError(  AdLoadException error,  DataSpec dataSpec){
    assertThat(error.type).isNotEqualTo(AdLoadException.TYPE_UNEXPECTED);
  }
  @Override public void onAdClicked(){
  }
  @Override public void onAdTapped(){
  }
}
