/** 
 * Tests for  {@link PsshAtomUtil}.
 */
@RunWith(RobolectricTestRunner.class) public final class PsshAtomUtilTest {
  @Test public void testBuildPsshAtom(){
    byte[] schemeData=new byte[]{0,1,2,3,4,5};
    byte[] psshAtom=PsshAtomUtil.buildPsshAtom(C.WIDEVINE_UUID,schemeData);
    ParsableByteArray parsablePsshAtom=new ParsableByteArray(psshAtom);
    assertThat(parsablePsshAtom.readUnsignedIntToInt()).isEqualTo(psshAtom.length);
    assertThat(parsablePsshAtom.readInt()).isEqualTo(TYPE_pssh);
    int fullAtomInt=parsablePsshAtom.readInt();
    assertThat(parseFullAtomVersion(fullAtomInt)).isEqualTo(0);
    assertThat(parseFullAtomFlags(fullAtomInt)).isEqualTo(0);
    UUID systemId=new UUID(parsablePsshAtom.readLong(),parsablePsshAtom.readLong());
    assertThat(systemId).isEqualTo(WIDEVINE_UUID);
    assertThat(parsablePsshAtom.readUnsignedIntToInt()).isEqualTo(schemeData.length);
    byte[] psshSchemeData=new byte[schemeData.length];
    parsablePsshAtom.readBytes(psshSchemeData,0,schemeData.length);
    assertThat(psshSchemeData).isEqualTo(schemeData);
  }
}
