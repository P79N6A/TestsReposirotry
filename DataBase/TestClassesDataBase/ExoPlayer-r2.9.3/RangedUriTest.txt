/** 
 * Unit test for  {@link RangedUri}. 
 */
@RunWith(RobolectricTestRunner.class) public class RangedUriTest {
  private static final String BASE_URI="http://www.test.com/";
  private static final String PARTIAL_URI="path/file.ext";
  private static final String FULL_URI=BASE_URI + PARTIAL_URI;
  @Test public void testMerge(){
    RangedUri rangeA=new RangedUri(FULL_URI,0,10);
    RangedUri rangeB=new RangedUri(FULL_URI,10,10);
    RangedUri expected=new RangedUri(FULL_URI,0,20);
    assertMerge(rangeA,rangeB,expected,null);
  }
  @Test public void testMergeUnbounded(){
    RangedUri rangeA=new RangedUri(FULL_URI,0,10);
    RangedUri rangeB=new RangedUri(FULL_URI,10,C.LENGTH_UNSET);
    RangedUri expected=new RangedUri(FULL_URI,0,C.LENGTH_UNSET);
    assertMerge(rangeA,rangeB,expected,null);
  }
  @Test public void testNonMerge(){
    RangedUri rangeA=new RangedUri(FULL_URI,0,10);
    RangedUri rangeB=new RangedUri(FULL_URI,11,10);
    assertNonMerge(rangeA,rangeB,null);
    rangeA=new RangedUri(FULL_URI,0,10);
    rangeB=new RangedUri(FULL_URI,11,C.LENGTH_UNSET);
    assertNonMerge(rangeA,rangeB,null);
    rangeA=new RangedUri(FULL_URI,0,11);
    rangeB=new RangedUri(FULL_URI,10,10);
    assertNonMerge(rangeA,rangeB,null);
    rangeA=new RangedUri(FULL_URI,0,C.LENGTH_UNSET);
    rangeB=new RangedUri(FULL_URI,10,C.LENGTH_UNSET);
    assertNonMerge(rangeA,rangeB,null);
  }
  @Test public void testMergeWithBaseUri(){
    RangedUri rangeA=new RangedUri(PARTIAL_URI,0,10);
    RangedUri rangeB=new RangedUri(FULL_URI,10,10);
    RangedUri expected=new RangedUri(FULL_URI,0,20);
    assertMerge(rangeA,rangeB,expected,BASE_URI);
  }
  private void assertMerge(  RangedUri rangeA,  RangedUri rangeB,  RangedUri expected,  String baseUrl){
    RangedUri merged=rangeA.attemptMerge(rangeB,baseUrl);
    assertThat(merged).isEqualTo(expected);
    merged=rangeB.attemptMerge(rangeA,baseUrl);
    assertThat(merged).isEqualTo(expected);
  }
  private void assertNonMerge(  RangedUri rangeA,  RangedUri rangeB,  String baseUrl){
    RangedUri merged=rangeA.attemptMerge(rangeB,baseUrl);
    assertThat(merged).isNull();
    merged=rangeB.attemptMerge(rangeA,baseUrl);
    assertThat(merged).isNull();
  }
}
