/** 
 * Unit test for  {@link TsDurationReader}. 
 */
@RunWith(RobolectricTestRunner.class) public final class TsDurationReaderTest {
  private TsDurationReader tsDurationReader;
  private PositionHolder seekPositionHolder;
  @Before public void setUp(){
    tsDurationReader=new TsDurationReader();
    seekPositionHolder=new PositionHolder();
  }
  @Test public void testIsDurationReadPending_returnFalseByDefault(){
    assertThat(tsDurationReader.isDurationReadFinished()).isFalse();
  }
  @Test public void testReadDuration_returnsCorrectDuration() throws IOException, InterruptedException {
    FakeExtractorInput input=new FakeExtractorInput.Builder().setData(TestUtil.getByteArray(RuntimeEnvironment.application,"ts/bbb_2500ms.ts")).setSimulateIOErrors(false).setSimulateUnknownLength(false).setSimulatePartialReads(false).build();
    while (!tsDurationReader.isDurationReadFinished()) {
      int result=tsDurationReader.readDuration(input,seekPositionHolder,256);
      if (result == Extractor.RESULT_END_OF_INPUT) {
        break;
      }
      if (result == Extractor.RESULT_SEEK) {
        input.setPosition((int)seekPositionHolder.position);
      }
    }
    assertThat(tsDurationReader.getDurationUs() / 1000).isEqualTo(2500);
  }
  @Test public void testReadDuration_midStream_returnsCorrectDuration() throws IOException, InterruptedException {
    FakeExtractorInput input=new FakeExtractorInput.Builder().setData(TestUtil.getByteArray(RuntimeEnvironment.application,"ts/bbb_2500ms.ts")).setSimulateIOErrors(false).setSimulateUnknownLength(false).setSimulatePartialReads(false).build();
    input.setPosition(1234);
    while (!tsDurationReader.isDurationReadFinished()) {
      int result=tsDurationReader.readDuration(input,seekPositionHolder,256);
      if (result == Extractor.RESULT_END_OF_INPUT) {
        break;
      }
      if (result == Extractor.RESULT_SEEK) {
        input.setPosition((int)seekPositionHolder.position);
      }
    }
    assertThat(tsDurationReader.getDurationUs() / 1000).isEqualTo(2500);
  }
}
