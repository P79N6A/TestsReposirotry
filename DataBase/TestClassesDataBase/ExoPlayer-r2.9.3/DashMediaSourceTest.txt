/** 
 * Unit test for  {@link DashMediaSource}. 
 */
@RunWith(RobolectricTestRunner.class) public final class DashMediaSourceTest {
  @Test public void testIso8601ParserParse() throws IOException {
    DashMediaSource.Iso8601Parser parser=new DashMediaSource.Iso8601Parser();
    assertParseStringToLong(1512381697000L,parser,"2017-12-04T10:01:37Z");
    assertParseStringToLong(1512381697000L,parser,"2017-12-04T10:01:37+00:00");
    assertParseStringToLong(1512381697000L,parser,"2017-12-04T10:01:37+0000");
    assertParseStringToLong(1512381697000L,parser,"2017-12-04T10:01:37+00");
    assertParseStringToLong(1512381697000L - 4980000L,parser,"2017-12-04T10:01:37+01:23");
    assertParseStringToLong(1512381697000L - 4980000L,parser,"2017-12-04T10:01:37+0123");
    assertParseStringToLong(1512381697000L - 3600000L,parser,"2017-12-04T10:01:37+01");
    assertParseStringToLong(1512381697000L + 4980000L,parser,"2017-12-04T10:01:37-01:23");
    assertParseStringToLong(1512381697000L + 4980000L,parser,"2017-12-04T10:01:37-0123");
    assertParseStringToLong(1512381697000L + 3600000L,parser,"2017-12-04T10:01:37-01:00");
    assertParseStringToLong(1512381697000L + 3600000L,parser,"2017-12-04T10:01:37-0100");
    assertParseStringToLong(1512381697000L + 3600000L,parser,"2017-12-04T10:01:37-01");
    assertParseStringToLong(1512381697000L + 4980000L,parser,"2017-12-04T10:01:37−01:23");
    assertParseStringToLong(1512381697000L + 4980000L,parser,"2017-12-04T10:01:37−0123");
    assertParseStringToLong(1512381697000L + 3600000L,parser,"2017-12-04T10:01:37−01:00");
    assertParseStringToLong(1512381697000L + 3600000L,parser,"2017-12-04T10:01:37−0100");
    assertParseStringToLong(1512381697000L + 3600000L,parser,"2017-12-04T10:01:37−01");
  }
  @Test public void testIso8601ParserParseMissingTimezone() throws IOException {
    DashMediaSource.Iso8601Parser parser=new DashMediaSource.Iso8601Parser();
    try {
      assertParseStringToLong(0,parser,"2017-12-04T10:01:37");
      fail();
    }
 catch (    ParserException e) {
    }
  }
  private static void assertParseStringToLong(  long expected,  ParsingLoadable.Parser<Long> parser,  String data) throws IOException {
    long actual=parser.parse(null,new ByteArrayInputStream(Util.getUtf8Bytes(data)));
    assertThat(actual).isEqualTo(expected);
  }
}
