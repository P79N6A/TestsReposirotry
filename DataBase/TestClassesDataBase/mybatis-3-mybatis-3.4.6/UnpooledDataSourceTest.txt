public class UnpooledDataSourceTest {
  @Test public void shouldNotRegisterTheSameDriverMultipleTimes() throws Exception {
    UnpooledDataSource dataSource=null;
    dataSource=new UnpooledDataSource("org.hsqldb.jdbcDriver","jdbc:hsqldb:mem:multipledrivers","sa","");
    dataSource.getConnection();
    int before=countRegisteredDrivers();
    dataSource=new UnpooledDataSource("org.hsqldb.jdbcDriver","jdbc:hsqldb:mem:multipledrivers","sa","");
    dataSource.getConnection();
    assertEquals(before,countRegisteredDrivers());
  }
  @Ignore("Requires MySQL server and a driver.") @Test public void shouldRegisterDynamicallyLoadedDriver() throws Exception {
    int before=countRegisteredDrivers();
    ClassLoader driverClassLoader=null;
    UnpooledDataSource dataSource=null;
    driverClassLoader=new URLClassLoader(new URL[]{new URL("jar:file:/PATH_TO/mysql-connector-java-5.1.25.jar!/")});
    dataSource=new UnpooledDataSource(driverClassLoader,"com.mysql.jdbc.Driver","jdbc:mysql://127.0.0.1/test","root","");
    dataSource.getConnection();
    assertEquals(before + 1,countRegisteredDrivers());
    driverClassLoader=new URLClassLoader(new URL[]{new URL("jar:file:/PATH_TO/mysql-connector-java-5.1.25.jar!/")});
    dataSource=new UnpooledDataSource(driverClassLoader,"com.mysql.jdbc.Driver","jdbc:mysql://127.0.0.1/test","root","");
    dataSource.getConnection();
    assertEquals(before + 1,countRegisteredDrivers());
  }
  protected int countRegisteredDrivers(){
    Enumeration<Driver> drivers=DriverManager.getDrivers();
    int count=0;
    while (drivers.hasMoreElements()) {
      drivers.nextElement();
      count++;
    }
    return count;
  }
}
