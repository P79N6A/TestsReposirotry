public class MultipleResultSetTest {
  private static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void setUp() throws Exception {
    Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/multipleresultsetswithassociation/mybatis-config.xml");
    sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
    reader.close();
    SqlSession session=sqlSessionFactory.openSession();
    Connection conn=session.getConnection();
    reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/multipleresultsetswithassociation/CreateDB1.sql");
    runReaderScript(conn,session,reader);
    reader.close();
    reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/multipleresultsetswithassociation/CreateDB2.sql");
    runReaderScript(conn,session,reader);
    reader.close();
    reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/multipleresultsetswithassociation/CreateDB3.sql");
    runReaderScript(conn,session,reader);
    reader.close();
    conn.close();
    session.close();
  }
  private static void runReaderScript(  Connection conn,  SqlSession session,  Reader reader) throws Exception {
    ScriptRunner runner=new ScriptRunner(conn);
    runner.setLogWriter(null);
    runner.setSendFullScript(true);
    runner.setAutoCommit(true);
    runner.setStopOnError(false);
    runner.runScript(reader);
  }
  @Test public void shouldGetOrderDetailsEachHavingAnOrderHeader() throws IOException {
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      Mapper mapper=sqlSession.getMapper(Mapper.class);
      List<OrderDetail> orderDetails=mapper.getOrderDetailsWithHeaders();
      Assert.assertEquals(6,orderDetails.size());
      for (      OrderDetail orderDetail : orderDetails) {
        Assert.assertNotNull(orderDetail.getOrderHeader());
      }
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void shouldGetOrderDetailsEachHavingAnOrderHeaderAnnotationBased() throws IOException {
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      Mapper mapper=sqlSession.getMapper(Mapper.class);
      List<OrderDetail> orderDetails=mapper.getOrderDetailsWithHeadersAnnotationBased();
      Assert.assertEquals(6,orderDetails.size());
      for (      OrderDetail orderDetail : orderDetails) {
        Assert.assertNotNull(orderDetail.getOrderHeader());
      }
    }
  finally {
      sqlSession.close();
    }
  }
}
