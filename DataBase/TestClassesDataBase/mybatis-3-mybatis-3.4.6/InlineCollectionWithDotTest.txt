public class InlineCollectionWithDotTest {
  private SqlSession sqlSession;
  public void openSession(  String aConfig) throws Exception {
    final String resource="org/apache/ibatis/submitted/inline_association_with_dot/ibatis-" + aConfig + ".xml";
    Reader batisConfigReader=Resources.getResourceAsReader(resource);
    SqlSessionFactory sqlSessionFactory;
    try {
      sqlSessionFactory=new SqlSessionFactoryBuilder().build(batisConfigReader);
    }
 catch (    Exception anException) {
      batisConfigReader.close();
      throw new RuntimeException("Mapper configuration failed, expected this to work: " + anException.getMessage(),anException);
    }
    batisConfigReader.close();
    SqlSession session=sqlSessionFactory.openSession();
    Connection conn=session.getConnection();
    ScriptRunner runner=new ScriptRunner(conn);
    runner.setLogWriter(null);
    runner.setErrorLogWriter(null);
    Reader createScriptReader=Resources.getResourceAsReader("org/apache/ibatis/submitted/inline_association_with_dot/create.sql");
    runner.runScript(createScriptReader);
    createScriptReader.close();
    conn.close();
    session.close();
    sqlSession=sqlSessionFactory.openSession();
  }
  @After public void closeSession(){
    if (sqlSession != null) {
      sqlSession.close();
    }
  }
  @Test public void selectElementValueInContainerUsingInline() throws Exception {
    openSession("inline");
    Element myElement=sqlSession.getMapper(ElementMapperUsingInline.class).selectElement();
    assertEquals("value",myElement.getElement().getElement().getValue());
  }
  @Test public void selectElementValueInContainerUsingSubMap() throws Exception {
    openSession("submap");
    Element myElement=sqlSession.getMapper(ElementMapperUsingSubMap.class).selectElement();
    assertEquals("value",myElement.getElement().getElement().getValue());
  }
}
