public class NStringTypeHandlerTest extends BaseTypeHandlerTest {
  private static final TypeHandler<String> TYPE_HANDLER=new NStringTypeHandler();
  @Override @Test public void shouldSetParameter() throws Exception {
    TYPE_HANDLER.setParameter(ps,1,"Hello",null);
    verify(ps).setNString(1,"Hello");
  }
  @Override @Test public void shouldGetResultFromResultSetByName() throws Exception {
    when(rs.getNString("column")).thenReturn("Hello");
    when(rs.wasNull()).thenReturn(false);
    assertEquals("Hello",TYPE_HANDLER.getResult(rs,"column"));
  }
  @Override public void shouldGetResultNullFromResultSetByName() throws Exception {
  }
  @Override @Test public void shouldGetResultFromResultSetByPosition() throws Exception {
    when(rs.getNString(1)).thenReturn("Hello");
    when(rs.wasNull()).thenReturn(false);
    assertEquals("Hello",TYPE_HANDLER.getResult(rs,1));
  }
  @Override public void shouldGetResultNullFromResultSetByPosition() throws Exception {
  }
  @Override @Test public void shouldGetResultFromCallableStatement() throws Exception {
    when(cs.getNString(1)).thenReturn("Hello");
    when(cs.wasNull()).thenReturn(false);
    assertEquals("Hello",TYPE_HANDLER.getResult(cs,1));
  }
  @Override public void shouldGetResultNullFromCallableStatement() throws Exception {
  }
}
