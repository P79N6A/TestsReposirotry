public class NestedResultHandlerMultipleAssociationTest {
  private static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void setUp() throws Exception {
    Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/nestedresulthandler_multiple_association/mybatis-config.xml");
    sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
    reader.close();
    SqlSession session=sqlSessionFactory.openSession();
    Connection conn=session.getConnection();
    reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/nestedresulthandler_multiple_association/CreateDB.sql");
    ScriptRunner runner=new ScriptRunner(conn);
    runner.setLogWriter(null);
    runner.runScript(reader);
    conn.close();
    reader.close();
    session.close();
  }
  @Test public void failure() throws Exception {
    SqlSession sqlSession=sqlSessionFactory.openSession();
    List<ParentBean> list=sqlSession.selectList("selectParentBeans");
    for (    ParentBean pb : list) {
      for (      Binome<ChildBean,ChildBean> childs : pb.getChilds()) {
        Assert.assertNotNull(childs);
        Assert.assertNotNull(childs.getOne());
        Assert.assertNotNull(childs.getTwo());
      }
    }
    sqlSession.close();
  }
  @Test public void success() throws Exception {
    SqlSession sqlSession=sqlSessionFactory.openSession();
    ParentBean parent=sqlSession.selectOne("selectParentBeanById",2);
    for (    Binome<ChildBean,ChildBean> childs : parent.getChilds()) {
      Assert.assertNotNull(childs);
      Assert.assertNotNull(childs.getOne());
      Assert.assertNotNull(childs.getTwo());
    }
    sqlSession.close();
  }
}
