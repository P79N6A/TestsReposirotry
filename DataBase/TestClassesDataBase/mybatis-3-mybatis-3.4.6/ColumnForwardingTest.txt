public class ColumnForwardingTest {
  private static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void setUp() throws Exception {
    Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/column_forwarding/mybatis-config.xml");
    sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
    reader.close();
    SqlSession session=sqlSessionFactory.openSession();
    Connection conn=session.getConnection();
    reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/column_forwarding/CreateDB.sql");
    ScriptRunner runner=new ScriptRunner(conn);
    runner.setLogWriter(null);
    runner.runScript(reader);
    conn.close();
    reader.close();
    session.close();
  }
  @Test public void shouldGetUserWithGroup(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      Mapper mapper=sqlSession.getMapper(Mapper.class);
      User user=mapper.getUser(1);
      Assert.assertNotNull(user);
      Assert.assertNotNull(user.getId());
      Assert.assertEquals("active",user.getState());
      Assert.assertNotNull(user.getGroup());
      Assert.assertNotNull(user.getGroup().getId());
      Assert.assertEquals("active",user.getGroup().getState());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void shouldGetUserWithoutGroup(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      Mapper mapper=sqlSession.getMapper(Mapper.class);
      User user=mapper.getUser(2);
      Assert.assertNotNull(user);
      Assert.assertNotNull(user.getId());
      Assert.assertNull(user.getState());
      Assert.assertNull(user.getGroup());
    }
  finally {
      sqlSession.close();
    }
  }
}
