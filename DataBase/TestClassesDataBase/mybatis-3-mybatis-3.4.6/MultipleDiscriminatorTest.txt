public class MultipleDiscriminatorTest {
  private static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void initDatabase() throws Exception {
    Connection conn=null;
    try {
      Class.forName("org.hsqldb.jdbcDriver");
      conn=DriverManager.getConnection("jdbc:hsqldb:mem:multiple_discriminator","sa","");
      Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/multiple_discriminator/CreateDB.sql");
      ScriptRunner runner=new ScriptRunner(conn);
      runner.setLogWriter(null);
      runner.setErrorLogWriter(null);
      runner.runScript(reader);
      conn.commit();
      reader.close();
      reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/multiple_discriminator/ibatisConfig.xml");
      sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
      reader.close();
    }
  finally {
      if (conn != null) {
        conn.close();
      }
    }
  }
  @Test public void testMultipleDiscriminator(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    PersonMapper personMapper=sqlSession.getMapper(PersonMapper.class);
    Person person=personMapper.get(1L);
    Assert.assertNotNull("Person must not be null",person);
    Assert.assertEquals("Person must be a director",Director.class,person.getClass());
    sqlSession.close();
  }
  @Test public void testMultipleDiscriminator2(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    PersonMapper personMapper=sqlSession.getMapper(PersonMapper.class);
    Person person=personMapper.get2(1L);
    Assert.assertNotNull("Person must not be null",person);
    Assert.assertEquals("Person must be a director",Director.class,person.getClass());
    sqlSession.close();
  }
  @Test(timeout=20000) public void testMultipleDiscriminatorLoop(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    PersonMapper personMapper=sqlSession.getMapper(PersonMapper.class);
    personMapper.getLoop();
    sqlSession.close();
  }
}
