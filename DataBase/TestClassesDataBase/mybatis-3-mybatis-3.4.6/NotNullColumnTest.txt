public class NotNullColumnTest {
  private static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void initDatabase() throws Exception {
    Connection conn=null;
    try {
      Class.forName("org.hsqldb.jdbcDriver");
      conn=DriverManager.getConnection("jdbc:hsqldb:mem:not_null_column","sa","");
      Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/not_null_column/CreateDB.sql");
      ScriptRunner runner=new ScriptRunner(conn);
      runner.setLogWriter(null);
      runner.setErrorLogWriter(null);
      runner.runScript(reader);
      conn.commit();
      reader.close();
      reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/not_null_column/ibatisConfig.xml");
      sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
      reader.close();
    }
  finally {
      if (conn != null) {
        conn.close();
      }
    }
  }
  @Test public void testNotNullColumnWithChildrenNoFid(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdNoFid(1);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertEquals(2,test.getChildren().size());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenNoFid(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdNoFid(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenFid(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdFid(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenWithInternalResultMap(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdWithInternalResultMap(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenWithRefResultMap(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdWithRefResultMap(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenFidMultipleNullColumns(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdFidMultipleNullColumns(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenFidMultipleNullColumnsAndBrackets(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdFidMultipleNullColumnsAndBrackets(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testNotNullColumnWithoutChildrenFidWorkaround(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      FatherMapper fatherMapper=sqlSession.getMapper(FatherMapper.class);
      Father test=fatherMapper.selectByIdFidWorkaround(2);
      assertNotNull(test);
      assertNotNull(test.getChildren());
      assertTrue(test.getChildren().isEmpty());
    }
  finally {
      sqlSession.close();
    }
  }
}
