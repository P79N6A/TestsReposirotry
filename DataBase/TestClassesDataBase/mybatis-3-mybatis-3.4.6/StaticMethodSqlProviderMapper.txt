public interface StaticMethodSqlProviderMapper {
  @SelectProvider(type=SqlProvider.class,method="noArgument") int noArgument();
  @SelectProvider(type=SqlProvider.class,method="oneArgument") int oneArgument(  Integer value);
  @SelectProvider(type=SqlProvider.class,method="multipleArgument") int multipleArgument(  @Param("value1") Integer value1,  @Param("value2") Integer value2);
  @SelectProvider(type=SqlProvider.class,method="onlyProviderContext") String onlyProviderContext();
  @SelectProvider(type=SqlProvider.class,method="oneArgumentAndProviderContext") String oneArgumentAndProviderContext(  Integer value);
class SqlProvider {
    public static String noArgument(){
      return "SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS";
    }
    public static StringBuilder oneArgument(    Integer value){
      return new StringBuilder().append("SELECT ").append(value).append(" FROM INFORMATION_SCHEMA.SYSTEM_USERS");
    }
    public static CharSequence multipleArgument(    @Param("value1") Integer value1,    @Param("value2") Integer value2){
      return "SELECT " + (value1 + value2) + " FROM INFORMATION_SCHEMA.SYSTEM_USERS";
    }
    public static CharSequence onlyProviderContext(    ProviderContext context){
      return new StringBuilder().append("SELECT '").append(context.getMapperMethod().getName()).append("' FROM INFORMATION_SCHEMA.SYSTEM_USERS");
    }
    public static String oneArgumentAndProviderContext(    Integer value,    ProviderContext context){
      return "SELECT '" + context.getMapperMethod().getName() + " "+ value+ "' FROM INFORMATION_SCHEMA.SYSTEM_USERS";
    }
  }
}
