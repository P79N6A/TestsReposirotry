public class QuotedColumnNamesTest {
  protected static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void setUp() throws Exception {
    Connection conn=null;
    try {
      Class.forName("org.hsqldb.jdbcDriver");
      conn=DriverManager.getConnection("jdbc:hsqldb:mem:gname","sa","");
      Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/quotedcolumnnames/CreateDB.sql");
      ScriptRunner runner=new ScriptRunner(conn);
      runner.setLogWriter(null);
      runner.setErrorLogWriter(null);
      runner.runScript(reader);
      conn.commit();
      reader.close();
      reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/quotedcolumnnames/MapperConfig.xml");
      sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
      reader.close();
    }
  finally {
      if (conn != null) {
        conn.close();
      }
    }
  }
  @Test public void testIt(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      List<Map<String,Object>> list=sqlSession.selectList("org.apache.ibatis.submitted.quotedcolumnnames.Map.doSelect");
      printList(list);
      assertColumnNames(list);
    }
  finally {
      sqlSession.close();
    }
  }
  @Test public void testItWithResultMap(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      List<Map<String,Object>> list=sqlSession.selectList("org.apache.ibatis.submitted.quotedcolumnnames.Map.doSelectWithResultMap");
      printList(list);
      assertColumnNames(list);
    }
  finally {
      sqlSession.close();
    }
  }
  private void assertColumnNames(  List<Map<String,Object>> list){
    Map<String,Object> record=list.get(0);
    Assert.assertTrue(record.containsKey("firstName"));
    Assert.assertTrue(record.containsKey("lastName"));
    Assert.assertFalse(record.containsKey("FIRST_NAME"));
    Assert.assertFalse(record.containsKey("LAST_NAME"));
  }
  private void printList(  List<Map<String,Object>> list){
    for (    Map<String,Object> map : list) {
      Assert.assertNotNull(map);
    }
  }
}
