public class CursorNestedTest {
  private static SqlSessionFactory sqlSessionFactory;
  @BeforeClass public static void setUp() throws Exception {
    Reader reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/cursor_nested/mybatis-config.xml");
    sqlSessionFactory=new SqlSessionFactoryBuilder().build(reader);
    reader.close();
    SqlSession session=sqlSessionFactory.openSession();
    Connection conn=session.getConnection();
    reader=Resources.getResourceAsReader("org/apache/ibatis/submitted/cursor_nested/CreateDB.sql");
    ScriptRunner runner=new ScriptRunner(conn);
    runner.setLogWriter(null);
    runner.runScript(reader);
    conn.close();
    reader.close();
    session.close();
  }
  @Test public void shouldGetAllUser(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    Mapper mapper=sqlSession.getMapper(Mapper.class);
    Cursor<User> usersCursor=mapper.getAllUsers();
    try {
      Assert.assertFalse(usersCursor.isOpen());
      Iterator<User> iterator=usersCursor.iterator();
      Assert.assertTrue(iterator.hasNext());
      Assert.assertTrue(usersCursor.isOpen());
      Assert.assertFalse(usersCursor.isConsumed());
      User user=iterator.next();
      Assert.assertEquals(2,user.getGroups().size());
      Assert.assertEquals(3,user.getRoles().size());
      user=iterator.next();
      Assert.assertEquals(1,user.getGroups().size());
      Assert.assertEquals(3,user.getRoles().size());
      user=iterator.next();
      Assert.assertEquals(3,user.getGroups().size());
      Assert.assertEquals(1,user.getRoles().size());
      user=iterator.next();
      Assert.assertEquals(2,user.getGroups().size());
      Assert.assertEquals(2,user.getRoles().size());
      Assert.assertFalse(iterator.hasNext());
      Assert.assertFalse(usersCursor.isOpen());
      Assert.assertTrue(usersCursor.isConsumed());
    }
  finally {
      sqlSession.close();
    }
    Assert.assertFalse(usersCursor.isOpen());
  }
  @Test public void testCursorWithRowBound(){
    SqlSession sqlSession=sqlSessionFactory.openSession();
    try {
      Cursor<User> usersCursor=sqlSession.selectCursor("getAllUsers",null,new RowBounds(2,1));
      Iterator<User> iterator=usersCursor.iterator();
      Assert.assertTrue(iterator.hasNext());
      User user=iterator.next();
      Assert.assertEquals("User3",user.getName());
      Assert.assertEquals(2,usersCursor.getCurrentIndex());
      Assert.assertFalse(iterator.hasNext());
      Assert.assertFalse(usersCursor.isOpen());
      Assert.assertTrue(usersCursor.isConsumed());
    }
  finally {
      sqlSession.close();
    }
  }
}
