private static class TestSCM extends NullSCM {
  private volatile int myRev=1;
  private final OneShotEvent checkoutStarted;
  public TestSCM(  OneShotEvent checkoutStarted){
    this.checkoutStarted=checkoutStarted;
  }
  @Override synchronized public boolean pollChanges(  AbstractProject project,  Launcher launcher,  FilePath dir,  TaskListener listener) throws IOException {
    return myRev < 2;
  }
  @Override public boolean checkout(  AbstractBuild<?,?> build,  Launcher launcher,  FilePath remoteDir,  BuildListener listener,  File changeLogFile) throws IOException, InterruptedException {
    checkoutStarted.signal();
    Thread.sleep(400);
synchronized (this) {
      if (myRev < 2)       myRev=2;
    }
    return super.checkout(build,launcher,remoteDir,listener,changeLogFile);
  }
}
