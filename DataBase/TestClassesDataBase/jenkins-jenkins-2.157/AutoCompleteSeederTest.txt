/** 
 * @author dty
 */
@RunWith(Parameterized.class) public class AutoCompleteSeederTest {
public static class TestData {
    private String seed;
    private List<String> expected;
    public TestData(    String seed,    String... expected){
      this.seed=seed;
      this.expected=Arrays.asList(expected);
    }
  }
  @Parameterized.Parameters public static Collection<Object[]> data(){
    return Arrays.asList(new Object[][]{{new TestData("","")},{new TestData("\"","")},{new TestData("\"\"","")},{new TestData("freebsd","freebsd")},{new TestData(" freebsd","freebsd")},{new TestData("freebsd ","")},{new TestData("freebsd 6","6")},{new TestData("\"freebsd","freebsd")},{new TestData("\"freebsd ","freebsd ")},{new TestData("\"freebsd\"","")},{new TestData("\"freebsd\" ","")},{new TestData("\"freebsd 6","freebsd 6")},{new TestData("\"freebsd 6\"","")}});
  }
  private String seed;
  private List<String> expected;
  public AutoCompleteSeederTest(  TestData dataSet){
    this.seed=dataSet.seed;
    this.expected=dataSet.expected;
  }
  @Test public void testAutoCompleteSeeds() throws Exception {
    AutoCompleteSeeder seeder=new AbstractProject.AbstractProjectDescriptor.AutoCompleteSeeder(seed);
    assertEquals(expected,seeder.getSeeds());
  }
}
