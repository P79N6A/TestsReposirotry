public static class CompositeView extends View implements ViewGroup {
  private View[] views;
  private TopLevelItem[] jobs;
  protected CompositeView(  final String name,  View... views){
    super(name);
    this.views=views;
  }
  private CompositeView withJobs(  TopLevelItem... jobs){
    this.jobs=jobs;
    return this;
  }
  @Override public Collection<TopLevelItem> getItems(){
    return Arrays.asList(this.jobs);
  }
  @Override public Collection<View> getViews(){
    return Arrays.asList(this.views);
  }
  @Override public boolean canDelete(  View view){
    return false;
  }
  @Override public void deleteView(  View view) throws IOException {
  }
  @Override public View getView(  String name){
    return null;
  }
  @Override public void onViewRenamed(  View view,  String oldName,  String newName){
  }
  @Override public ViewsTabBar getViewsTabBar(){
    return null;
  }
  @Override public ItemGroup<? extends TopLevelItem> getItemGroup(){
    return null;
  }
  @Override public List<Action> getViewActions(){
    return null;
  }
  @Override public boolean contains(  TopLevelItem item){
    return false;
  }
  @Override protected void submit(  StaplerRequest req) throws IOException, ServletException, FormException {
  }
  @Override public Item doCreateItem(  StaplerRequest req,  StaplerResponse rsp) throws IOException, ServletException {
    return null;
  }
}
