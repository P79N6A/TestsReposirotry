/** 
 * @author Kohsuke Kawaguchi
 */
public class FormFieldValidatorTest {
  @Rule public JenkinsRule j=new JenkinsRule();
  @Test @Issue("JENKINS-2771") @WithPlugin("tasks.jpi") public void configure() throws Exception {
    FreeStyleProject p=j.createFreeStyleProject();
    j.createWebClient().getPage(p,"configure");
  }
public static class BrokenFormValidatorBuilder extends Publisher {
public static final class DescriptorImpl extends BuildStepDescriptor {
      public boolean isApplicable(      Class jobType){
        return true;
      }
      public FormValidation doCheckXyz(){
        throw new Error("doCheckXyz is broken");
      }
    }
    public BuildStepMonitor getRequiredMonitorService(){
      return BuildStepMonitor.BUILD;
    }
  }
  /** 
 * Make sure that the validation methods are really called by testing a negative case.
 */
  @Test @Issue("JENKINS-3382") public void negative() throws Exception {
    DescriptorImpl d=new DescriptorImpl();
    Publisher.all().add(d);
    try {
      FreeStyleProject p=j.createFreeStyleProject();
      p.getPublishersList().add(new BrokenFormValidatorBuilder());
      JenkinsRule.WebClient webclient=j.createWebClient();
      WebResponseListener.StatusListener statusListener=new WebResponseListener.StatusListener(500);
      webclient.addWebResponseListener(statusListener);
      webclient.getPage(p,"configure");
      statusListener.assertHasResponses();
      String contentAsString=statusListener.getResponses().get(0).getContentAsString();
      Assert.assertTrue(contentAsString.contains("doCheckXyz is broken"));
    }
  finally {
      Publisher.all().remove(d);
    }
  }
}
