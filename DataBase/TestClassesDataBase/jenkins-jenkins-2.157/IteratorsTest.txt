/** 
 * @author Kohsuke Kawaguchi
 */
public class IteratorsTest {
  @Test public void reverseSequence(){
    List<Integer> lst=Iterators.reverseSequence(1,4);
    assertEquals(3,(int)lst.get(0));
    assertEquals(2,(int)lst.get(1));
    assertEquals(1,(int)lst.get(2));
    assertEquals(3,lst.size());
  }
  @Test public void sequence(){
    List<Integer> lst=Iterators.sequence(1,4);
    assertEquals(1,(int)lst.get(0));
    assertEquals(2,(int)lst.get(1));
    assertEquals(3,(int)lst.get(2));
    assertEquals(3,lst.size());
  }
  @Test public void wrap(){
    List<Integer> lst=Iterators.sequence(1,4);
    Iterable<Integer> wrapped=Iterators.wrap(lst);
    assertFalse(wrapped instanceof List);
    Iterator<Integer> iter=wrapped.iterator();
    assertTrue(iter.hasNext());
    assertEquals(1,(int)iter.next());
    assertTrue(iter.hasNext());
    assertEquals(2,(int)iter.next());
    assertTrue(iter.hasNext());
    assertEquals(3,(int)iter.next());
    assertFalse(iter.hasNext());
  }
  @Test public void limit(){
    assertEquals("[0]",com.google.common.collect.Iterators.toString(Iterators.limit(asList(0,1,2,3,4).iterator(),EVEN)));
    assertEquals("[]",com.google.common.collect.Iterators.toString(Iterators.limit(asList(1,2,4,6).iterator(),EVEN)));
  }
  public static final CountingPredicate<Integer> EVEN=(index,input) -> input % 2 == 0;
  @Issue("JENKINS-51779") @Test public void skip(){
    List<Integer> lst=Iterators.sequence(1,4);
    Iterator<Integer> it=lst.iterator();
    Iterators.skip(it,0);
    assertEquals("[1, 2, 3]",com.google.common.collect.Iterators.toString(it));
    it=lst.iterator();
    Iterators.skip(it,1);
    assertEquals("[2, 3]",com.google.common.collect.Iterators.toString(it));
    it=lst.iterator();
    Iterators.skip(it,2);
    assertEquals("[3]",com.google.common.collect.Iterators.toString(it));
    it=lst.iterator();
    Iterators.skip(it,3);
    assertEquals("[]",com.google.common.collect.Iterators.toString(it));
    it=lst.iterator();
    Iterators.skip(it,4);
    assertEquals("[]",com.google.common.collect.Iterators.toString(it));
  }
}
