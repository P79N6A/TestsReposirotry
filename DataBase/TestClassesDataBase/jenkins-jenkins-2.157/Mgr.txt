private static final class Mgr extends ArtifactManager {
  static final AtomicBoolean deleted=new AtomicBoolean();
  @Override public boolean delete() throws IOException, InterruptedException {
    return !deleted.getAndSet(true);
  }
  @Override public void onLoad(  Run<?,?> build){
  }
  @Override public void archive(  FilePath workspace,  Launcher launcher,  BuildListener listener,  Map<String,String> artifacts) throws IOException, InterruptedException {
  }
  @Override public VirtualFile root(){
    return VirtualFile.forFile(Jenkins.get().getRootDir());
  }
public static final class Factory extends ArtifactManagerFactory {
    @DataBoundConstructor public Factory(){
    }
    @Override public ArtifactManager managerFor(    Run<?,?> build){
      return new Mgr();
    }
@TestExtension("deleteArtifactsCustom") public static final class DescriptorImpl extends ArtifactManagerFactoryDescriptor {
    }
  }
}
