@TestExtension public static class TestNewRulesOk extends AbstractUnprotectedRootAction {
  public static void doStaticWithRequest(  StaplerRequest request){
    replyOk();
  }
  public void doWithRequest(  StaplerRequest request){
    replyOk();
  }
  public void doWithHttpRequest(  HttpServletRequest request){
    replyOk();
  }
  public String doWithRequestAndReturnString(  StaplerRequest request){
    return "ok";
  }
  public void doWithResponse(  StaplerResponse response){
    replyOk();
  }
  public void doWithHttpResponse(  HttpServletResponse response){
    replyOk();
  }
  public void doWithThrowHttpResponseException() throws HttpResponses.HttpResponseException {
    replyOk();
  }
  public void doWithThrowHttpResponseExceptionChild() throws HttpResponseExceptionChild {
    replyOk();
  }
  public void doWithThrowExceptionImplementingOnlyHttpResponse() throws ExceptionImplementingOnlyHttpResponse {
    replyOk();
  }
  public void doWithThrowOtherException() throws IOException {
    replyOk();
  }
  public HttpResponse doWithReturnHttpResponse(){
    return HttpResponses.plainText("ok");
  }
  public HttpResponseChild doWithReturnHttpResponseChild(){
    return new HttpResponseChild();
  }
  @WebMethod(name="webMethodUrl") public void doWebMethod(){
    replyOk();
  }
  @WebMethod(name="webMethodUrl2") public void webMethod(){
    replyOk();
  }
  @GET public void doAnnotatedGet(){
    replyOk();
  }
  @POST public void doAnnotatedPost(){
    replyOk();
  }
  @PUT public void doAnnotatedPut(){
    replyOk();
  }
  @DELETE public void doAnnotatedDelete(){
    replyOk();
  }
  @RequirePOST public void doAnnotatedRequirePost(){
    replyOk();
  }
  @JavaScriptMethod public void annotatedJavascriptScriptMethod(){
    replyOk();
  }
  @RespondSuccess public void doAnnotatedResponseSuccess(){
    replyOk();
  }
  @JsonResponse public Map<String,Object> doAnnotatedJsonResponse(){
    return new HashMap<String,Object>(){
{
        put("a","b");
      }
    }
;
  }
  @LimitedTo("admin") public void doAnnotatedLimitedTo(){
    replyOk();
  }
  public void doAnnotatedParamQueryParameter(  @QueryParameter String value){
    replyOk();
  }
  public void doAnnotatedParamAncestorInPath(  @AncestorInPath DoActionFilterTest parent){
    replyOk();
  }
  public void doAnnotatedParamHeader(  @Header("test-header") String testHeader){
    replyOk();
  }
  public void doAnnotatedParamJsonBody(  @JsonBody Map<String,String> names){
    replyOk();
  }
  public void doAnnotatedParamSubmittedForm(  @SubmittedForm JSONObject form){
    replyOk();
  }
  public void do_CallMeBecauseOfMyUnderscore(  StaplerRequest request){
    replyOk();
  }
  public void do$CallMeBecauseOfMyDollar(  StaplerRequest request){
    replyOk();
  }
}
