/** 
 * SecurityRealm that cannot load information about other users, such Active Directory.
 */
private static class TestSecurityRealm extends AbstractPasswordBasedSecurityRealm {
  @Override protected UserDetails authenticate(  String username,  String password) throws AuthenticationException {
    if (password.equals("error"))     throw new BadCredentialsException(username);
    String[] desiredAuthorities=password.split(":");
    List<GrantedAuthority> authorities=Arrays.stream(desiredAuthorities).map(GrantedAuthorityImpl::new).collect(Collectors.toList());
    return new User(username,"",true,authorities.toArray(new GrantedAuthority[0]));
  }
  @Override public GroupDetails loadGroupByGroupname(  String groupname) throws UsernameNotFoundException, DataAccessException {
    throw new UnsupportedOperationException();
  }
  @Override public UserDetails loadUserByUsername(  String username) throws UsernameNotFoundException, DataAccessException {
    throw new UserMayOrMayNotExistException("fallback");
  }
}
