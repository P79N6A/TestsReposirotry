public class UserAvatarResolverTest {
  @Rule public JenkinsRule j=new JenkinsRule();
  private static User expUser;
  @Test public void defaultImageIsReturnedIfRegexFails(){
    String avatar=UserAvatarResolver.resolve(User.get("USER"),"meh");
    assertTrue(avatar.endsWith("/images/meh/user.png"));
  }
  @Test public void resolverIsUsed(){
    expUser=User.get("unique-user-not-used-in-anyother-test",true);
    String avatar=UserAvatarResolver.resolve(expUser,"20x20");
    assertEquals(avatar,"http://myown.image");
  }
  @Test public void noResolverCanFindAvatar(){
    String avatar=UserAvatarResolver.resolve(User.get("USER"),"20x20");
    assertTrue(avatar.endsWith("/images/20x20/user.png"));
  }
  @Test @WithoutJenkins public void iconSizeRegex(){
    Matcher matcher=UserAvatarResolver.iconSizeRegex.matcher("12x15");
    assertTrue(matcher.matches());
    assertEquals("12",matcher.group(1));
    assertEquals("15",matcher.group(2));
  }
@Extension public static final class UserAvatarResolverImpl extends UserAvatarResolver {
    @Override public String findAvatarFor(    User u,    int width,    int height){
      if ((u != null) && (u == expUser)) {
        return "http://myown.image";
      }
      return null;
    }
  }
}
