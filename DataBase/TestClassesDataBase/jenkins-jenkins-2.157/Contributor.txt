@TestExtension public static class Contributor extends SubTaskContributor {
  public Collection<? extends SubTask> forProject(  final AbstractProject<?,?> p){
    return Collections.singleton(new SubTask(){
      private final SubTask outer=this;
      public Executable createExecutable() throws IOException {
        return new Executable(){
          public SubTask getParent(){
            return outer;
          }
          public void run(){
            WorkUnitContext wuc=Executor.currentExecutor().getCurrentWorkUnit().context;
            AbstractBuild b=(AbstractBuild)wuc.getPrimaryWorkUnit().getExecutable();
            try {
              b.setDescription("I was here");
            }
 catch (            IOException e) {
              e.printStackTrace();
            }
          }
          public long getEstimatedDuration(){
            return 0;
          }
        }
;
      }
      public Task getOwnerTask(){
        return p;
      }
      public String getDisplayName(){
        return "Company of " + p.getDisplayName();
      }
    }
);
  }
}
