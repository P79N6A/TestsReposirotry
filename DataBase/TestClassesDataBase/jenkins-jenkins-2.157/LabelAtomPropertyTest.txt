/** 
 * @author Kohsuke Kawaguchi
 */
public class LabelAtomPropertyTest {
  @Rule public JenkinsRule j=new JenkinsRule();
public static class LabelAtomPropertyImpl extends LabelAtomProperty {
    public final String abc;
    @DataBoundConstructor public LabelAtomPropertyImpl(    String abc){
      this.abc=abc;
    }
@TestExtension public static class DescriptorImpl extends LabelAtomPropertyDescriptor {
    }
  }
  /** 
 * Tests the configuration persistence between disk, memory, and UI.
 */
  @Test public void configRoundtrip() throws Exception {
    LabelAtom foo=j.jenkins.getLabelAtom("foo");
    LabelAtomPropertyImpl old=new LabelAtomPropertyImpl("value");
    foo.getProperties().add(old);
    assertTrue(foo.getConfigFile().exists());
    foo.load();
    j.submit(j.createWebClient().goTo("label/foo/configure").getFormByName("config"));
    assertEquals(1,foo.getProperties().size());
    j.assertEqualDataBoundBeans(old,foo.getProperties().get(LabelAtomPropertyImpl.class));
  }
}
