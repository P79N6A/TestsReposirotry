/** 
 * @author <a href="mailto:tom.fennelly@gmail.com">tom.fennelly@gmail.com</a>
 */
public class I18nTest {
  @Rule public JenkinsRule jenkinsRule=new JenkinsRule();
  @Test public void test_baseName_unspecified() throws IOException, SAXException {
    JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle").getJSONObject();
    Assert.assertEquals("error",response.getString("status"));
    Assert.assertEquals("Mandatory parameter 'baseName' not specified.",response.getString("message"));
  }
  @Test public void test_baseName_unknown() throws IOException, SAXException {
    try {
      JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle?baseName=com.acme.XyzWhatever").getJSONObject();
    }
 catch (    FailingHttpStatusCodeException e) {
      Assert.assertNotNull(e);
      Assert.assertTrue(e.getMessage().contains("com.acme.XyzWhatever"));
    }
  }
  @Issue("JENKINS-35270") @Test public void test_baseName_plugin() throws Exception {
    ((TestPluginManager)jenkinsRule.jenkins.pluginManager).installDetachedPlugin("credentials");
    ((TestPluginManager)jenkinsRule.jenkins.pluginManager).installDetachedPlugin("ssh-credentials");
    ((TestPluginManager)jenkinsRule.jenkins.pluginManager).installDetachedPlugin("ssh-slaves");
    JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle?baseName=hudson.plugins.sshslaves.Messages").getJSONObject();
    Assert.assertEquals(response.toString(),"ok",response.getString("status"));
    JSONObject data=response.getJSONObject("data");
    Assert.assertEquals("The launch timeout must be a number.",data.getString("SSHConnector.LaunchTimeoutMustBeANumber"));
  }
  @Test public void test_valid() throws IOException, SAXException {
    JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle?baseName=hudson.logging.Messages&language=de").getJSONObject();
    Assert.assertEquals("ok",response.getString("status"));
    JSONObject data=response.getJSONObject("data");
    Assert.assertEquals("Initialisiere Log-Rekorder",data.getString("LogRecorderManager.init"));
  }
  @Issue("JENKINS-39034") @Test public void test_valid_region_variant() throws IOException, SAXException {
    JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle?baseName=jenkins.i18n.Messages&language=en_AU_variant").getJSONObject();
    Assert.assertEquals("ok",response.getString("status"));
    JSONObject data=response.getJSONObject("data");
    Assert.assertEquals("value_au_variant",data.getString("Key"));
  }
  @Issue("JENKINS-39034") @Test public void test_valid_region() throws IOException, SAXException {
    JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle?baseName=jenkins.i18n.Messages&language=en-AU").getJSONObject();
    Assert.assertEquals("ok",response.getString("status"));
    JSONObject data=response.getJSONObject("data");
    Assert.assertEquals("value_au",data.getString("Key"));
  }
  @Issue("JENKINS-39034") @Test public void test_valid_fallback() throws IOException, SAXException {
    JSONObject response=jenkinsRule.getJSON("i18n/resourceBundle?baseName=jenkins.i18n.Messages&language=en_NZ_variant").getJSONObject();
    Assert.assertEquals("ok",response.getString("status"));
    JSONObject data=response.getJSONObject("data");
    Assert.assertEquals("value",data.getString("Key"));
  }
}
