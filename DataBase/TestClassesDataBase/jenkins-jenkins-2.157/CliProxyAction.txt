@TestExtension("redirectToEndpointShouldBeFollowed") public static final class CliProxyAction extends CrumbExclusion implements UnprotectedRootAction, StaplerProxy {
  @Override public String getIconFileName(){
    return "cli-proxy";
  }
  @Override public String getDisplayName(){
    return "cli-proxy";
  }
  @Override public String getUrlName(){
    return "cli-proxy";
  }
  @Override public Object getTarget(){
    throw doDynamic(Stapler.getCurrentRequest(),Stapler.getCurrentResponse());
  }
  public HttpResponses.HttpResponseException doDynamic(  StaplerRequest req,  StaplerResponse rsp){
    final String url=req.getRequestURIWithQueryString().replaceFirst("/cli-proxy","");
    return new HttpResponses.HttpResponseException(){
      @Override public void generateResponse(      StaplerRequest req,      StaplerResponse rsp,      Object node) throws IOException, ServletException {
        rsp.setHeader("Location",url);
        rsp.setContentType("text/html");
        rsp.setStatus(302);
        PrintWriter w=rsp.getWriter();
        w.append("Redirect to ").append(url);
      }
    }
;
  }
  @Override public boolean process(  HttpServletRequest request,  HttpServletResponse response,  FilterChain chain) throws IOException, ServletException {
    chain.doFilter(request,response);
    return true;
  }
}
