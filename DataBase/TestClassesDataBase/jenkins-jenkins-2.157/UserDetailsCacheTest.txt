/** 
 * Tests for  {@link UserDetailsCache}.
 */
public class UserDetailsCacheTest {
  @Rule public JenkinsRule j=new JenkinsRule();
  @Before public void before() throws IOException {
    HudsonPrivateSecurityRealm realm=new HudsonPrivateSecurityRealm(false,false,null);
    j.jenkins.setSecurityRealm(realm);
    realm.createAccount("alice","veeerysecret");
  }
  @Test public void getCachedTrue() throws Exception {
    UserDetailsCache cache=UserDetailsCache.get();
    assertNotNull(cache);
    UserDetails alice=cache.loadUserByUsername("alice");
    assertNotNull(alice);
    UserDetails alice1=cache.getCached("alice");
    assertNotNull(alice1);
  }
  @Test public void getCachedFalse() throws Exception {
    UserDetailsCache cache=UserDetailsCache.get();
    assertNotNull(cache);
    UserDetails alice1=cache.getCached("alice");
    assertNull(alice1);
  }
  @Test(expected=UsernameNotFoundException.class) public void getCachedTrueNotFound() throws Exception {
    UserDetailsCache cache=UserDetailsCache.get();
    assertNotNull(cache);
    try {
      cache.loadUserByUsername("bob");
      fail("Bob should not be found");
    }
 catch (    UsernameNotFoundException e) {
    }
    cache.getCached("bob");
  }
  @Test public void getCachedFalseNotFound() throws Exception {
    UserDetailsCache cache=UserDetailsCache.get();
    assertNotNull(cache);
    UserDetails bob=cache.getCached("bob");
    assertNull(bob);
  }
}
