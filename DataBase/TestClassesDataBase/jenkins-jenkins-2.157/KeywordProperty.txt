public static class KeywordProperty extends JobProperty<Job<?,?>> {
  private final AcceptOnlySpecificKeyword nonCriticalField;
  private final AcceptOnlySpecificKeyword criticalField;
  public KeywordProperty(  AcceptOnlySpecificKeyword nonCriticalField,  AcceptOnlySpecificKeyword criticalField){
    this.nonCriticalField=nonCriticalField;
    this.criticalField=criticalField;
  }
  public AcceptOnlySpecificKeyword getNonCriticalField(){
    return nonCriticalField;
  }
  public AcceptOnlySpecificKeyword getCriticalField(){
    return criticalField;
  }
@TestExtension public static class DescriptorImpl extends JobPropertyDescriptor {
    @Override public String getDisplayName(){
      return "KeywordProperty";
    }
    @Override public JobProperty<?> newInstance(    StaplerRequest req,    JSONObject formData) throws FormException {
      formData=formData.getJSONObject("keywordProperty");
      @SuppressWarnings("unchecked") Descriptor<AcceptOnlySpecificKeyword> d=Jenkins.getInstance().getDescriptor(AcceptOnlySpecificKeyword.class);
      return new KeywordProperty(d.newInstance(req,formData.getJSONObject("nonCriticalField")),d.newInstance(req,formData.getJSONObject("criticalField")));
    }
  }
}
