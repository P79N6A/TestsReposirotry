public class CreateJobCommandTest {
  @Rule public JenkinsRule r=new JenkinsRule();
  @Issue("JENKINS-22262") @Test public void folderPermissions() throws Exception {
    CLICommand cmd=new CreateJobCommand();
    CLICommandInvoker invoker=new CLICommandInvoker(r,cmd);
    final MockFolder d=r.createFolder("d");
    r.jenkins.setSecurityRealm(r.createDummySecurityRealm());
    r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().toAuthenticated().grant(Item.READ).onItems(d).toAuthenticated().grant(Item.CREATE).onItems(d).to("bob"));
    cmd.setTransportAuth(User.get("alice").impersonate());
    assertThat(invoker.withStdin(new ByteArrayInputStream("<project/>".getBytes("US-ASCII"))).invokeWithArgs("d/p"),failedWith(6));
    cmd.setTransportAuth(User.get("bob").impersonate());
    assertThat(invoker.withStdin(new ByteArrayInputStream("<project/>".getBytes("US-ASCII"))).invokeWithArgs("d/p"),succeededSilently());
    assertNotNull(d.getItem("p"));
  }
}
