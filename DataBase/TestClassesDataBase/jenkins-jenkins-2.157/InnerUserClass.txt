/** 
 * Class that should get setUser(User) object reference update.
 */
public static class InnerUserClass extends AbstractDescribableImpl<InnerUserClass> {
  private transient User user;
  private transient File userFile;
  @DataBoundConstructor public InnerUserClass(){
  }
  public User getUser(){
    return user;
  }
  /** 
 * Should be initialised separately.
 */
  public void setUser(  User user){
    this.user=user;
    try {
      File userFile=getUserFile();
      writeStringToFile(userFile,String.valueOf(currentTimeMillis()),true);
    }
 catch (    IOException e) {
      Throwables.propagate(e);
    }
  }
  private File getUserFile() throws IOException {
    userFile=File.createTempFile("user",".txt");
    userFile.deleteOnExit();
    if (!userFile.exists()) {
      userFile.createNewFile();
    }
    return userFile;
  }
  @Override public DescriptorImpl getDescriptor(){
    return (DescriptorImpl)super.getDescriptor();
  }
@TestExtension public static class DescriptorImpl extends Descriptor<InnerUserClass> {
  }
}
