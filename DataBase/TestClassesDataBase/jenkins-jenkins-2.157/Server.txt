class Server extends PlainCLIProtocol.ServerSide {
  String arg;
  boolean started;
  final ByteArrayOutputStream stdin=new ByteArrayOutputStream();
  Server() throws IOException {
    super(new PipedInputStream(upload),download);
  }
  @Override protected void onArg(  String text){
    arg=text;
  }
  @Override protected void onLocale(  String text){
  }
  @Override protected void onEncoding(  String text){
  }
  @Override protected synchronized void onStart(){
    started=true;
    notifyAll();
  }
  @Override protected void onStdin(  byte[] chunk) throws IOException {
    stdin.write(chunk);
  }
  @Override protected void onEndStdin() throws IOException {
  }
  @Override protected void handleClose(){
  }
  void send() throws IOException {
    streamStdout().write("goodbye".getBytes());
    sendExit(2);
  }
  void newop() throws IOException {
    dos.writeInt(0);
    dos.writeByte(99);
    dos.flush();
  }
}
