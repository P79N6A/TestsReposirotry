private static final class BlockingAndFinishingBuilder extends Builder {
  private final OneShotEvent block;
  private final OneShotEvent finish;
  private BlockingAndFinishingBuilder(  OneShotEvent block,  OneShotEvent finish){
    this.block=block;
    this.finish=finish;
  }
  @Override public boolean perform(  AbstractBuild<?,?> build,  Launcher launcher,  BuildListener listener) throws InterruptedException, IOException {
    VirtualChannel channel=launcher.getChannel();
    Node node=build.getBuiltOn();
    block.signal();
    for (; ; ) {
      if (finish.isSignaled())       break;
      channel.call(node.getClockDifferenceCallable());
      Thread.sleep(100);
    }
    return true;
  }
@TestExtension("disconnectCause") public static class DescriptorImpl extends Descriptor<Builder> {
  }
}
