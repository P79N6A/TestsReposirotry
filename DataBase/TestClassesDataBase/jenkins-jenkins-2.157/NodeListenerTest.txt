public class NodeListenerTest {
  @Rule public JenkinsRule j=new JenkinsRule();
  private NodeListener mock;
  @Before public void setUp(){
    mock=mock(NodeListener.class);
    ExtensionList.lookup(NodeListener.class).add(mock);
  }
  @Test public void crud() throws Exception {
    DumbSlave slave=j.createSlave();
    String xml=cli(new GetNodeCommand()).invokeWithArgs(slave.getNodeName()).stdout();
    cli(new UpdateNodeCommand()).withStdin(new StringInputStream(xml)).invokeWithArgs(slave.getNodeName());
    cli(new DeleteNodeCommand()).invokeWithArgs(slave.getNodeName());
    cli(new CreateNodeCommand()).withStdin(new StringInputStream(xml)).invokeWithArgs("replica");
    j.jenkins.getComputer("replica").doDoDelete();
    verify(mock,times(2)).onCreated(any(Node.class));
    verify(mock,times(1)).onUpdated(any(Node.class),any(Node.class));
    verify(mock,times(2)).onDeleted(any(Node.class));
    verifyNoMoreInteractions(mock);
  }
  private CLICommandInvoker cli(  CLICommand cmd){
    return new CLICommandInvoker(j,cmd);
  }
}
