private static class NodeMonitorAssert extends NodeMonitor {
  static void assertMonitors(  Collection<NodeMonitor> toCheck,  Computer c) throws AssertionError {
    for (    NodeMonitor monitor : toCheck) {
      assertMonitor(monitor,c);
    }
  }
  static void assertMonitor(  NodeMonitor monitor,  Computer c) throws AssertionError {
    AbstractNodeMonitorDescriptor<?> descriptor=monitor.getDescriptor();
    final Method monitorMethod;
    try {
      monitorMethod=AbstractAsyncNodeMonitorDescriptor.class.getDeclaredMethod("monitor",Computer.class);
    }
 catch (    NoSuchMethodException ex) {
      throw new AssertionError("Cannot invoke monitor " + monitor + ", no monitor(Computer.class) method in the Descriptor. It will be ignored. ",ex);
    }
    try {
      monitorMethod.setAccessible(true);
      Object res=monitorMethod.invoke(descriptor,c);
      System.out.println("Successfully executed monitor " + monitor);
    }
 catch (    Exception ex) {
      throw new AssertionError("Failed to run monitor " + monitor + " for computer "+ c,ex);
    }
 finally {
      monitorMethod.setAccessible(false);
    }
  }
}
