public class RunActionTest {
  @Rule public RestartableJenkinsRule rr=new RestartableJenkinsRule();
  @Issue("JENKINS-45892") @Test public void badSerialization(){
    rr.addStep(new Statement(){
      @Override public void evaluate() throws Throwable {
        FreeStyleProject p=rr.j.createFreeStyleProject("p");
        FreeStyleBuild b1=rr.j.buildAndAssertSuccess(p);
        FreeStyleBuild b2=rr.j.buildAndAssertSuccess(p);
        b2.addAction(new BadAction(b1));
        b2.save();
        String text=new XmlFile(new File(b2.getRootDir(),"build.xml")).asString();
        assertThat(text,not(containsString("<owner class=\"build\">")));
        assertThat(text,containsString("<id>p#1</id>"));
      }
    }
);
    rr.addStep(new Statement(){
      @Override public void evaluate() throws Throwable {
        FreeStyleProject p=rr.j.jenkins.getItemByFullName("p",FreeStyleProject.class);
        assertEquals(p.getBuildByNumber(1),p.getBuildByNumber(2).getAction(BadAction.class).owner);
      }
    }
);
  }
static class BadAction extends InvisibleAction {
    final Run<?,?> owner;
    BadAction(    Run<?,?> owner){
      this.owner=owner;
    }
  }
}
