/** 
 * Tests of  {@link SystemProperties}.
 * @author Oleg Nenashev
 */
public class SystemPropertiesTest {
  @Rule public JenkinsRule j=new JenkinsRule();
  @Before public void setUp(){
    new SystemProperties.Listener().contextInitialized(new ServletContextEvent(j.jenkins.servletContext));
  }
  @Test public void shouldReturnNullIfUndefined() throws Exception {
    assertThat("Properties should be null by default",SystemProperties.getString("foo.bar"),nullValue());
  }
  @Test public void shouldInitializeFromSystemProperty() throws Exception {
    System.setProperty("foo.bar","myVal");
    assertThat("System property should assign the value",SystemProperties.getString("foo.bar"),equalTo("myVal"));
  }
  @Test public void shouldInitializeFromWebAppProperty() throws Exception {
    assertThat("Property is undefined before test",SystemProperties.getString("foo.bar"),equalTo(null));
    setWebAppInitParameter("foo.bar","myVal");
    assertThat("Web App property should assign the value",SystemProperties.getString("foo.bar"),equalTo("myVal"));
  }
  @Test public void shouldUseSystemPropertyAsAHighPriority() throws Exception {
    setWebAppInitParameter("install-wizard-path","myVal1");
    System.setProperty("install-wizard-path","myVal2");
    assertThat("System property should take system property with a high priority",SystemProperties.getString("install-wizard-path"),equalTo("myVal2"));
  }
  /** 
 * Hack to set a web app initial parameter afterwards. Only works with Jetty.
 * @param property property to set
 * @param value value of the property
 */
  protected void setWebAppInitParameter(  String property,  String value){
    Assume.assumeThat(j.jenkins.servletContext,Matchers.instanceOf(ContextHandler.Context.class));
    ((ContextHandler.Context)j.jenkins.servletContext).getContextHandler().getInitParams().put(property,value);
  }
}
