public static class Foo extends Builder {
  public String getAlpha(){
    return "alpha";
  }
  public String getBravo(){
    return "2";
  }
  @Override public boolean perform(  AbstractBuild<?,?> build,  Launcher launcher,  BuildListener listener) throws InterruptedException, IOException {
    return true;
  }
@TestExtension public static class DescriptorImpl extends BuildStepDescriptor<Builder> {
    String alpha, bravo;
    public FormValidation doCheckAlpha(    @QueryParameter String value,    @QueryParameter String bravo){
      this.alpha=value;
      this.bravo=bravo;
      return FormValidation.ok();
    }
    public ListBoxModel doFillBravoItems(){
      return new ListBoxModel().add("1").add("2").add("3");
    }
    @Override public boolean isApplicable(    Class<? extends AbstractProject> jobType){
      return true;
    }
  }
}
