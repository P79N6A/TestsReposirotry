public class PasswordParameterDefinitionTest {
  @Rule public JenkinsRule j=new JenkinsRule();
  @Test public void defaultValueKeptSecret() throws Exception {
    FreeStyleProject p=j.createFreeStyleProject();
    p.addProperty(new ParametersDefinitionProperty(new PasswordParameterDefinition("p","s3cr3t","")));
    j.configRoundtrip(p);
    assertEquals("s3cr3t",((PasswordParameterDefinition)p.getProperty(ParametersDefinitionProperty.class).getParameterDefinition("p")).getDefaultValue());
  }
  @Issue("JENKINS-36476") @Test public void defaultValueAlwaysAvailable() throws Exception {
    ApiTokenTestHelper.enableLegacyBehavior();
    j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
    j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to("admin").grant(Jenkins.READ,Item.READ,Item.BUILD).everywhere().to("dev"));
    FreeStyleProject p=j.createFreeStyleProject();
    p.addProperty(new ParametersDefinitionProperty(new PasswordParameterDefinition("secret","s3cr3t","")));
    p.getBuildersList().add(new TestBuilder(){
      @Override public boolean perform(      AbstractBuild<?,?> build,      Launcher launcher,      BuildListener listener) throws InterruptedException, IOException {
        listener.getLogger().println("I heard about a " + build.getEnvironment(listener).get("secret") + "!");
        return true;
      }
    }
);
    User admin=User.getById("admin",true);
    User dev=User.getById("dev",true);
    JenkinsRule.WebClient wc=j.createWebClient();
    wc.getOptions().setThrowExceptionOnFailingStatusCode(false);
    j.submit(wc.withBasicApiToken(admin).getPage(p,"build?delay=0sec").getFormByName("parameters"));
    j.waitUntilNoActivity();
    FreeStyleBuild b1=p.getLastBuild();
    assertEquals(1,b1.getNumber());
    j.assertLogContains("I heard about a s3cr3t!",j.assertBuildStatusSuccess(b1));
    HtmlForm form=wc.withBasicApiToken(dev).getPage(p,"build?delay=0sec").getFormByName("parameters");
    HtmlPasswordInput input=form.getInputByName("value");
    input.setText("rumor");
    j.submit(form);
    j.waitUntilNoActivity();
    FreeStyleBuild b2=p.getLastBuild();
    assertEquals(2,b2.getNumber());
    j.assertLogContains("I heard about a rumor!",j.assertBuildStatusSuccess(b2));
    j.submit(wc.withBasicApiToken(dev).getPage(p,"build?delay=0sec").getFormByName("parameters"));
    j.waitUntilNoActivity();
    FreeStyleBuild b3=p.getLastBuild();
    assertEquals(3,b3.getNumber());
    j.assertLogContains("I heard about a s3cr3t!",j.assertBuildStatusSuccess(b3));
    form=wc.withBasicApiToken(dev).getPage(p,"build?delay=0sec").getFormByName("parameters");
    input=form.getInputByName("value");
    input.setText("");
    j.submit(form);
    j.waitUntilNoActivity();
    FreeStyleBuild b4=p.getLastBuild();
    assertEquals(4,b4.getNumber());
    j.assertLogContains("I heard about a !",j.assertBuildStatusSuccess(b4));
  }
}
