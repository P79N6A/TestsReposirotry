public static class WrapperWithDisposer extends SimpleBuildWrapper {
  @Override public void setUp(  Context context,  Run<?,?> build,  FilePath workspace,  Launcher launcher,  TaskListener listener,  EnvVars initialEnvironment) throws IOException, InterruptedException {
    context.setDisposer(new DisposerImpl());
  }
private static final class DisposerImpl extends Disposer {
    private static final long serialVersionUID=1;
    @Override public void tearDown(    Run<?,?> build,    FilePath workspace,    Launcher launcher,    TaskListener listener) throws IOException, InterruptedException {
      listener.getLogger().println("ran DisposerImpl");
    }
  }
@TestExtension("disposer") public static class DescriptorImpl extends BuildWrapperDescriptor {
    @Override public boolean isApplicable(    AbstractProject<?,?> item){
      return true;
    }
  }
}
