public class ACLTest {
  @Rule public JenkinsRule r=new JenkinsRule();
  @Issue("JENKINS-20474") @Test public void bypassStrategyOnSystem() throws Exception {
    FreeStyleProject p=r.createFreeStyleProject();
    r.jenkins.setSecurityRealm(r.createDummySecurityRealm());
    r.jenkins.setAuthorizationStrategy(new DoNotBotherMe());
    assertTrue(p.hasPermission(Item.CONFIGURE));
    assertTrue(p.hasPermission(ACL.SYSTEM,Item.CONFIGURE));
    p.checkPermission(Item.CONFIGURE);
    p.checkAbortPermission();
    assertEquals(Collections.singletonList(p),r.jenkins.getAllItems());
  }
private static class DoNotBotherMe extends AuthorizationStrategy {
    @Override public ACL getRootACL(){
      return new ACL(){
        @Override public boolean hasPermission(        Authentication a,        Permission permission){
          throw new AssertionError("should not have needed to check " + permission + " for "+ a);
        }
      }
;
    }
    @Override public Collection<String> getGroups(){
      return Collections.emptySet();
    }
  }
}
