/** 
 * @author <a href="mailto:tom.fennelly@gmail.com">tom.fennelly@gmail.com</a>
 */
public class ClassicPluginStrategyTest {
  @Test public void test_getDetachedPlugins(){
    List<DetachedPlugin> list=ClassicPluginStrategy.getDetachedPlugins(new VersionNumber("1.296"));
    Assert.assertTrue(list.size() >= 14);
    Assert.assertNotNull(findPlugin("maven-plugin",list));
    Assert.assertNotNull(findPlugin("subversion",list));
    list=ClassicPluginStrategy.getDetachedPlugins(new VersionNumber("1.310"));
    Assert.assertNull(findPlugin("maven-plugin",list));
    Assert.assertNotNull(findPlugin("subversion",list));
    list=ClassicPluginStrategy.getDetachedPlugins(new VersionNumber("1.311"));
    Assert.assertNull(findPlugin("maven-plugin",list));
    Assert.assertNull(findPlugin("subversion",list));
  }
  private DetachedPlugin findPlugin(  String shortName,  List<DetachedPlugin> list){
    for (    DetachedPlugin detachedPlugin : list) {
      if (detachedPlugin.getShortName().equals(shortName)) {
        return detachedPlugin;
      }
    }
    return null;
  }
}
