private static final class Stack extends Throwable {
  private static final Pattern LINE=Pattern.compile("(.+)[.](.+)[.](.+):(\\d+)");
  private final String toString;
  Stack(  String toString,  String... stack){
    this.toString=toString;
    StackTraceElement[] lines=new StackTraceElement[stack.length];
    for (int i=0; i < stack.length; i++) {
      Matcher m=LINE.matcher(stack[i]);
      assertTrue(m.matches());
      lines[i]=new StackTraceElement(m.group(1) + "." + m.group(2),m.group(3),m.group(2) + ".java",Integer.parseInt(m.group(4)));
    }
    setStackTrace(lines);
  }
  @Override public String toString(){
    return toString;
  }
  synchronized Stack cause(  Throwable cause){
    return (Stack)initCause(cause);
  }
  synchronized Stack suppressed(  Throwable... suppressed){
    for (    Throwable t : suppressed) {
      addSuppressed(t);
    }
    return this;
  }
}
