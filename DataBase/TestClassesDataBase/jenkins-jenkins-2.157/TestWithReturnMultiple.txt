@TestExtension public static class TestWithReturnMultiple extends AbstractUnprotectedRootAction {
  public List<Renderable> getList(){
    return Arrays.asList(new Renderable(),new Renderable());
  }
  public List<? extends Point> getListOfPoint(){
    return Collections.singletonList(new RenderablePoint());
  }
  public List<List<Renderable>> getListOfList(){
    return Collections.singletonList(Arrays.asList(new Renderable(),new Renderable()));
  }
  public Renderable[] getArray(){
    return new Renderable[]{new Renderable(),new Renderable()};
  }
  public Point[] getArrayOfPoint(){
    return new Point[]{new Point(){
      public void doIndex(){
        replyOk();
      }
    }
};
  }
  public Renderable[][] getArrayOfArray(){
    return new Renderable[][]{new Renderable[]{new Renderable(),new Renderable()}};
  }
  @SuppressWarnings("unchecked") public List<Renderable>[] getArrayOfList(){
    List<Renderable> list=Arrays.asList(new Renderable(),new Renderable());
    return (List<Renderable>[])Collections.singletonList(list).toArray(new List[0]);
  }
  public List<Renderable[]> getListOfArray(){
    return Collections.singletonList(new Renderable[]{new Renderable(),new Renderable()});
  }
  public Map<String,Renderable> getMap(){
    return new HashMap<String,Renderable>(){
{
        put("a",new Renderable());
      }
    }
;
  }
}
