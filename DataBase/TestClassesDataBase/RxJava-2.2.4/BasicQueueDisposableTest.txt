public class BasicQueueDisposableTest {
  BasicQueueDisposable<Integer> q=new BasicQueueDisposable<Integer>(){
    @Override public boolean isDisposed(){
      return false;
    }
    @Override public void dispose(){
    }
    @Nullable @Override public Integer poll() throws Exception {
      return null;
    }
    @Override public boolean isEmpty(){
      return false;
    }
    @Override public void clear(){
    }
    @Override public int requestFusion(    int mode){
      return 0;
    }
  }
;
  @Test(expected=UnsupportedOperationException.class) public void offer(){
    q.offer(1);
  }
  @Test(expected=UnsupportedOperationException.class) public void offer2(){
    q.offer(1,2);
  }
}
