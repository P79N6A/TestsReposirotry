public class SingleHideTest {
  @Test public void error(){
    Single.error(new TestException()).hide().test().assertFailure(TestException.class);
  }
  @Test public void dispose(){
    TestHelper.checkDisposed(PublishSubject.create().singleOrError().hide());
  }
  @Test public void doubleOnSubscribe(){
    TestHelper.checkDoubleOnSubscribeSingle(new Function<Single<Object>,SingleSource<Object>>(){
      @Override public SingleSource<Object> apply(      Single<Object> s) throws Exception {
        return s.hide();
      }
    }
);
  }
}
