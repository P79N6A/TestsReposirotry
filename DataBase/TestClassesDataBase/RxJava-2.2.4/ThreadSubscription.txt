private static class ThreadSubscription extends AtomicBoolean implements Disposable {
  private static final long serialVersionUID=-5011338112974328771L;
  private volatile Thread thread;
  private final CountDownLatch latch=new CountDownLatch(1);
  @Override public void dispose(){
    set(true);
    System.out.println("unsubscribe invoked: " + Thread.currentThread());
    thread=Thread.currentThread();
    latch.countDown();
  }
  @Override public boolean isDisposed(){
    return get();
  }
  public Thread getThread() throws InterruptedException {
    latch.await();
    return thread;
  }
}
