public class FlowableCastTest {
  @Test public void testCast(){
    Flowable<?> source=Flowable.just(1,2);
    Flowable<Integer> flowable=source.cast(Integer.class);
    Subscriber<Integer> subscriber=TestHelper.mockSubscriber();
    flowable.subscribe(subscriber);
    verify(subscriber,times(1)).onNext(1);
    verify(subscriber,times(1)).onNext(1);
    verify(subscriber,never()).onError(any(Throwable.class));
    verify(subscriber,times(1)).onComplete();
  }
  @Test public void testCastWithWrongType(){
    Flowable<?> source=Flowable.just(1,2);
    Flowable<Boolean> flowable=source.cast(Boolean.class);
    Subscriber<Boolean> subscriber=TestHelper.mockSubscriber();
    flowable.subscribe(subscriber);
    verify(subscriber,times(1)).onError(any(ClassCastException.class));
  }
  @Test public void castCrashUnsubscribes(){
    PublishProcessor<Integer> pp=PublishProcessor.create();
    TestSubscriber<String> ts=TestSubscriber.create();
    pp.cast(String.class).subscribe(ts);
    Assert.assertTrue("Not subscribed?",pp.hasSubscribers());
    pp.onNext(1);
    Assert.assertFalse("Subscribed?",pp.hasSubscribers());
    ts.assertError(ClassCastException.class);
  }
}
