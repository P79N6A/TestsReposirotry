public class SingleLiftTest {
  @Test public void normal(){
    Single.just(1).lift(new SingleOperator<Integer,Integer>(){
      @Override public SingleObserver<Integer> apply(      final SingleObserver<? super Integer> observer) throws Exception {
        return new SingleObserver<Integer>(){
          @Override public void onSubscribe(          Disposable d){
            observer.onSubscribe(d);
          }
          @Override public void onSuccess(          Integer value){
            observer.onSuccess(value + 1);
          }
          @Override public void onError(          Throwable e){
            observer.onError(e);
          }
        }
;
      }
    }
).test().assertResult(2);
  }
}
