public class SingleToObservableTest {
  @Test public void dispose(){
    TestHelper.checkDisposed(PublishSubject.create().singleOrError().toObservable());
  }
  @Test public void doubleOnSubscribe(){
    TestHelper.checkDoubleOnSubscribeSingleToObservable(new Function<Single<Object>,ObservableSource<Object>>(){
      @Override public ObservableSource<Object> apply(      Single<Object> s) throws Exception {
        return s.toObservable();
      }
    }
);
  }
}
