/** 
 * A thread that will call onError or onNext.
 */
public static class CompletionThread implements Runnable {
  private final Observer<String> observer;
  private final TestConcurrencySubscriberEvent event;
  private final Future<?>[] waitOnThese;
  CompletionThread(  Observer<String> Observer,  TestConcurrencySubscriberEvent event,  Future<?>... waitOnThese){
    this.observer=Observer;
    this.event=event;
    this.waitOnThese=waitOnThese;
  }
  @Override public void run(){
    if (waitOnThese != null) {
      for (      Future<?> f : waitOnThese) {
        try {
          f.get();
        }
 catch (        Throwable e) {
          System.err.println("Error while waiting on future in CompletionThread");
        }
      }
    }
    if (event == TestConcurrencySubscriberEvent.onError) {
      observer.onError(new RuntimeException("mocked exception"));
    }
 else     if (event == TestConcurrencySubscriberEvent.onComplete) {
      observer.onComplete();
    }
 else {
      throw new IllegalArgumentException("Expecting either onError or onComplete");
    }
  }
}
