static final class FirehoseNoBackpressure extends AtomicBoolean implements Subscription {
  private static final long serialVersionUID=-669931580197884015L;
  final Subscriber<? super Integer> downstream;
  final AtomicInteger counter;
  volatile boolean cancelled;
  private FirehoseNoBackpressure(  AtomicInteger counter,  Subscriber<? super Integer> s){
    this.counter=counter;
    this.downstream=s;
  }
  @Override public void request(  long n){
    if (!SubscriptionHelper.validate(n)) {
      return;
    }
    if (compareAndSet(false,true)) {
      int i=0;
      final Subscriber<? super Integer> a=downstream;
      final AtomicInteger c=counter;
      while (!cancelled) {
        a.onNext(i++);
        c.incrementAndGet();
      }
      System.out.println("unsubscribed after: " + i);
    }
  }
  @Override public void cancel(){
    cancelled=true;
  }
}
