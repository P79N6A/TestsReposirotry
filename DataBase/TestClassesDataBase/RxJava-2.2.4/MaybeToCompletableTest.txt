public class MaybeToCompletableTest {
  @SuppressWarnings("unchecked") @Test public void source(){
    Maybe<Integer> source=Maybe.just(1);
    assertSame(source,((HasUpstreamMaybeSource<Integer>)source.ignoreElement().toMaybe()).source());
  }
  @Test public void dispose(){
    TestHelper.checkDisposed(Maybe.never().ignoreElement().toMaybe());
  }
  @Test public void successToComplete(){
    Maybe.just(1).ignoreElement().test().assertResult();
  }
  @Test public void doubleSubscribe(){
    TestHelper.checkDoubleOnSubscribeMaybeToCompletable(new Function<Maybe<Object>,CompletableSource>(){
      @Override public CompletableSource apply(      Maybe<Object> m) throws Exception {
        return m.ignoreElement();
      }
    }
);
  }
}
