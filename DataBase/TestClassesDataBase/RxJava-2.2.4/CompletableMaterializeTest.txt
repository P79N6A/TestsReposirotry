public class CompletableMaterializeTest {
  @Test @SuppressWarnings("unchecked") public void error(){
    TestException ex=new TestException();
    Completable.error(ex).materialize().test().assertResult(Notification.createOnError(ex));
  }
  @Test @SuppressWarnings("unchecked") public void empty(){
    Completable.complete().materialize().test().assertResult(Notification.createOnComplete());
  }
  @Test public void doubleOnSubscribe(){
    TestHelper.checkDoubleOnSubscribeCompletableToSingle(new Function<Completable,SingleSource<Notification<Object>>>(){
      @Override public SingleSource<Notification<Object>> apply(      Completable v) throws Exception {
        return v.materialize();
      }
    }
);
  }
  @Test public void dispose(){
    TestHelper.checkDisposed(CompletableSubject.create().materialize());
  }
}
