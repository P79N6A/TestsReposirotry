static final class BadObservableSubscribe2 extends ConnectableObservable<Object> {
  int count;
  @Override public void connect(  Consumer<? super Disposable> connection){
    try {
      connection.accept(Disposables.empty());
    }
 catch (    Throwable ex) {
      throw ExceptionHelper.wrapOrThrow(ex);
    }
  }
  @Override protected void subscribeActual(  Observer<? super Object> observer){
    if (++count == 1) {
      observer.onSubscribe(Disposables.empty());
    }
 else {
      throw new TestException("subscribeActual");
    }
  }
}
