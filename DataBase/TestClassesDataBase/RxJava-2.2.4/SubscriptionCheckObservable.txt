private static class SubscriptionCheckObservable implements ObservableSource<String> {
  private final AtomicInteger subscriptionCount;
  private final int maxConcurrent;
  volatile boolean failed;
  SubscriptionCheckObservable(  AtomicInteger subscriptionCount,  int maxConcurrent){
    this.subscriptionCount=subscriptionCount;
    this.maxConcurrent=maxConcurrent;
  }
  @Override public void subscribe(  final Observer<? super String> t1){
    t1.onSubscribe(Disposables.empty());
    new Thread(new Runnable(){
      @Override public void run(){
        if (subscriptionCount.incrementAndGet() > maxConcurrent) {
          failed=true;
        }
        t1.onNext("one");
        t1.onNext("two");
        t1.onNext("three");
        t1.onNext("four");
        t1.onNext("five");
        subscriptionCount.decrementAndGet();
        t1.onComplete();
      }
    }
).start();
  }
}
