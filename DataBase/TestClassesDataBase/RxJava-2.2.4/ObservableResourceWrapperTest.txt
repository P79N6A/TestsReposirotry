public class ObservableResourceWrapperTest {
  @Test public void disposed(){
    TestObserver<Object> to=new TestObserver<Object>();
    ObserverResourceWrapper<Object> orw=new ObserverResourceWrapper<Object>(to);
    Disposable d=Disposables.empty();
    orw.onSubscribe(d);
    assertFalse(orw.isDisposed());
    orw.dispose();
    assertTrue(orw.isDisposed());
  }
  @Test public void doubleOnSubscribe(){
    TestObserver<Object> to=new TestObserver<Object>();
    ObserverResourceWrapper<Object> orw=new ObserverResourceWrapper<Object>(to);
    TestHelper.doubleOnSubscribe(orw);
  }
  @Test public void onErrorDisposes(){
    TestObserver<Object> to=new TestObserver<Object>();
    ObserverResourceWrapper<Object> orw=new ObserverResourceWrapper<Object>(to);
    Disposable d=Disposables.empty();
    Disposable d1=Disposables.empty();
    orw.setResource(d1);
    orw.onSubscribe(d);
    orw.onError(new TestException());
    assertTrue(d1.isDisposed());
    to.assertFailure(TestException.class);
  }
}
