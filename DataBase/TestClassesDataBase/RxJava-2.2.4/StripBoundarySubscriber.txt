static final class StripBoundarySubscriber<T> extends BasicFuseableSubscriber<T,T> {
  StripBoundarySubscriber(  Subscriber<? super T> downstream){
    super(downstream);
  }
  @Override public void onNext(  T t){
    downstream.onNext(t);
  }
  @Override public int requestFusion(  int mode){
    QueueSubscription<T> fs=qs;
    if (fs != null) {
      int m=fs.requestFusion(mode & ~QueueFuseable.BOUNDARY);
      this.sourceMode=m;
      return m;
    }
    return QueueFuseable.NONE;
  }
  @Override public T poll() throws Exception {
    return qs.poll();
  }
}
