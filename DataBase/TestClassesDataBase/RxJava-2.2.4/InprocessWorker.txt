static class InprocessWorker extends Worker {
  private final Disposable mockDisposable;
  public boolean unsubscribed;
  InprocessWorker(  Disposable mockDisposable){
    this.mockDisposable=mockDisposable;
  }
  @NonNull @Override public Disposable schedule(  @NonNull Runnable action){
    action.run();
    return mockDisposable;
  }
  @NonNull @Override public Disposable schedule(  @NonNull Runnable action,  long delayTime,  @NonNull TimeUnit unit){
    action.run();
    return mockDisposable;
  }
  @Override public void dispose(){
    unsubscribed=true;
  }
  @Override public boolean isDisposed(){
    return unsubscribed;
  }
}
