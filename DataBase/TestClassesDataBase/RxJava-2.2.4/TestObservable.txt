/** 
 * An Observable that doesn't do the right thing on UnSubscribe/Error/etc in that it will keep sending events down the pipe regardless of what happens.
 */
private static class TestObservable implements Publisher<String> {
  Subscriber<? super String> subscriber;
  public void sendOnCompleted(){
    subscriber.onComplete();
  }
  public void sendOnNext(  String value){
    subscriber.onNext(value);
  }
  public void sendOnError(  Throwable e){
    subscriber.onError(e);
  }
  @Override public void subscribe(  Subscriber<? super String> subscriber){
    this.subscriber=subscriber;
    subscriber.onSubscribe(new Subscription(){
      @Override public void cancel(){
        System.out.println("==> SynchronizeTest unsubscribe that does nothing!");
      }
      @Override public void request(      long n){
      }
    }
);
  }
}
