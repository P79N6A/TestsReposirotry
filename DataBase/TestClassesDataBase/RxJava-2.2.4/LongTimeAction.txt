private static class LongTimeAction implements Consumer<List<Integer>> {
  CountDownLatch latch;
  boolean fail;
  LongTimeAction(  CountDownLatch latch){
    this.latch=latch;
  }
  @Override public void accept(  List<Integer> t1){
    try {
      if (fail) {
        return;
      }
      Thread.sleep(200);
    }
 catch (    InterruptedException e) {
      fail=true;
    }
 finally {
      latch.countDown();
    }
  }
}
