public class MaybeIgnoreElementTest {
  @Test public void dispose(){
    PublishProcessor<Integer> pp=PublishProcessor.create();
    TestHelper.checkDisposed(pp.singleElement().ignoreElement().toMaybe());
  }
  @Test public void dispose2(){
    PublishProcessor<Integer> pp=PublishProcessor.create();
    TestHelper.checkDisposed(pp.singleElement().ignoreElement());
  }
  @Test public void doubleOnSubscribe(){
    TestHelper.checkDoubleOnSubscribeMaybe(new Function<Maybe<Object>,MaybeSource<Object>>(){
      @Override public MaybeSource<Object> apply(      Maybe<Object> v) throws Exception {
        return v.ignoreElement().toMaybe();
      }
    }
);
  }
}
