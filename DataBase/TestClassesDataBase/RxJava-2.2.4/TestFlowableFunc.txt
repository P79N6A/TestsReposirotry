static class TestFlowableFunc implements Publisher<String> {
  final String[] values;
  Thread t;
  TestFlowableFunc(  String... values){
    this.values=values;
  }
  @Override public void subscribe(  final Subscriber<? super String> subscriber){
    subscriber.onSubscribe(new BooleanSubscription());
    System.out.println("TestFlowable subscribed to ...");
    t=new Thread(new Runnable(){
      @Override public void run(){
        try {
          System.out.println("running TestFlowable thread");
          for (          String s : values) {
            System.out.println("TestFlowable onNext: " + s);
            subscriber.onNext(s);
          }
          subscriber.onComplete();
        }
 catch (        Throwable e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    System.out.println("starting TestFlowable thread");
    t.start();
    System.out.println("done starting TestFlowable thread");
  }
}
