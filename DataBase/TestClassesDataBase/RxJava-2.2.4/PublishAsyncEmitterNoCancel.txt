static final class PublishAsyncEmitterNoCancel implements FlowableOnSubscribe<Integer>, FlowableSubscriber<Integer> {
  final PublishProcessor<Integer> processor;
  PublishAsyncEmitterNoCancel(){
    this.processor=PublishProcessor.create();
  }
  @Override public void subscribe(  final FlowableEmitter<Integer> t){
    processor.subscribe(new FlowableSubscriber<Integer>(){
      @Override public void onSubscribe(      Subscription s){
        s.request(Long.MAX_VALUE);
      }
      @Override public void onComplete(){
        t.onComplete();
      }
      @Override public void onError(      Throwable e){
        t.onError(e);
      }
      @Override public void onNext(      Integer v){
        t.onNext(v);
      }
    }
);
  }
  @Override public void onSubscribe(  Subscription s){
    s.request(Long.MAX_VALUE);
  }
  @Override public void onNext(  Integer t){
    processor.onNext(t);
  }
  @Override public void onError(  Throwable e){
    processor.onError(e);
  }
  @Override public void onComplete(){
    processor.onComplete();
  }
}
