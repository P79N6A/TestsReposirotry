public class MaybeFlatMapCompletableTest {
  @Test public void dispose(){
    TestHelper.checkDisposed(Maybe.just(1).flatMapCompletable(new Function<Integer,Completable>(){
      @Override public Completable apply(      Integer v) throws Exception {
        return Completable.complete();
      }
    }
));
  }
  @Test public void mapperThrows(){
    Maybe.just(1).flatMapCompletable(new Function<Integer,Completable>(){
      @Override public Completable apply(      Integer v) throws Exception {
        throw new TestException();
      }
    }
).test().assertFailure(TestException.class);
  }
  @Test public void mapperReturnsNull(){
    Maybe.just(1).flatMapCompletable(new Function<Integer,Completable>(){
      @Override public Completable apply(      Integer v) throws Exception {
        return null;
      }
    }
).test().assertFailure(NullPointerException.class);
  }
}
