public class ObservableFinallyTest {
  private Action aAction0;
  private Observer<String> observer;
  @Before public void before(){
    aAction0=mock(Action.class);
    observer=TestHelper.mockObserver();
  }
  private void checkActionCalled(  Observable<String> input){
    input.doAfterTerminate(aAction0).subscribe(observer);
    try {
      verify(aAction0,times(1)).run();
    }
 catch (    Throwable e) {
      throw ExceptionHelper.wrapOrThrow(e);
    }
  }
  @Test public void testFinallyCalledOnComplete(){
    checkActionCalled(Observable.fromArray("1","2","3"));
  }
  @Test public void testFinallyCalledOnError(){
    checkActionCalled(Observable.<String>error(new RuntimeException("expected")));
  }
}
