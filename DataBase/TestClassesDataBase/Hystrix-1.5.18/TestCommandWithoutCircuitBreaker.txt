/** 
 * Successful execution - no fallback implementation, circuit-breaker disabled.
 */
private static class TestCommandWithoutCircuitBreaker extends TestHystrixObservableCommand<Boolean> {
  private TestCommandWithoutCircuitBreaker(){
    super(testPropsBuilder().setCommandPropertiesDefaults(HystrixCommandPropertiesTest.getUnitTestPropertiesSetter().withExecutionIsolationStrategy(ExecutionIsolationStrategy.SEMAPHORE).withCircuitBreakerEnabled(false)));
  }
  @Override protected Observable<Boolean> construct(){
    System.out.println("successfully executed");
    return Observable.just(true).subscribeOn(Schedulers.computation());
  }
}
