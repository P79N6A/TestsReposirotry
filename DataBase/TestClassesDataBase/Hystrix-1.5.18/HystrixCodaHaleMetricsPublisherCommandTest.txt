public class HystrixCodaHaleMetricsPublisherCommandTest {
  private final MetricRegistry metricRegistry=new MetricRegistry();
  @Before public void setup(){
    HystrixPlugins.getInstance().registerMetricsPublisher(new HystrixCodaHaleMetricsPublisher(metricRegistry));
  }
  @After public void teardown(){
    HystrixPlugins.reset();
  }
  @Test public void commandMaxActiveGauge(){
    final HystrixCommandKey hystrixCommandKey=HystrixCommandKey.Factory.asKey("test");
    final HystrixCommandGroupKey hystrixCommandGroupKey=HystrixCommandGroupKey.Factory.asKey("test");
    new HystrixCommand<Void>(HystrixCommand.Setter.withGroupKey(hystrixCommandGroupKey).andCommandKey(hystrixCommandKey)){
      @Override protected Void run() throws Exception {
        return null;
      }
    }
.execute();
    for (    Map.Entry<String,Gauge> entry : metricRegistry.getGauges().entrySet()) {
      entry.getValue().getValue();
    }
  }
}
