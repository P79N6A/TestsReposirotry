/** 
 * Failed execution with  {@link HystrixBadRequestException}
 */
private static class KnownHystrixBadRequestFailureTestCommand extends TestHystrixObservableCommand<Boolean> {
  public final static boolean ASYNC_EXCEPTION=true;
  public final static boolean SYNC_EXCEPTION=false;
  private final boolean asyncException;
  public KnownHystrixBadRequestFailureTestCommand(  TestCircuitBreaker circuitBreaker,  ExecutionIsolationStrategy isolationStrategy,  boolean asyncException){
    super(testPropsBuilder(isolationStrategy,circuitBreaker).setMetrics(circuitBreaker.metrics));
    this.asyncException=asyncException;
  }
  @Override protected Observable<Boolean> construct(){
    System.out.println("*** simulated failed with HystrixBadRequestException  ***");
    RuntimeException ex=new HystrixBadRequestException("we failed with a simulated issue");
    if (asyncException) {
      return Observable.error(ex);
    }
 else {
      throw ex;
    }
  }
}
