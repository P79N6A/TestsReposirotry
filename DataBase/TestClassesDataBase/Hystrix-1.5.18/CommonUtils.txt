public class CommonUtils {
  public HystrixCommandMetrics getMetrics(  String commandKey){
    return HystrixCommandMetrics.getInstance(HystrixCommandKey.Factory.asKey(commandKey));
  }
  public static HystrixInvokableInfo<?> getLastExecutedCommand(){
    Collection<HystrixInvokableInfo<?>> executedCommands=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands();
    return Iterables.getLast(executedCommands);
  }
  public static void assertExecutedCommands(  String... commands){
    Collection<HystrixInvokableInfo<?>> executedCommands=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands();
    List<String> executedCommandsKeys=getExecutedCommandsKeys(Lists.newArrayList(executedCommands));
    for (    String cmd : commands) {
      assertTrue("command: '" + cmd + "' wasn't executed",executedCommandsKeys.contains(cmd));
    }
  }
  public static List<String> getExecutedCommandsKeys(){
    Collection<HystrixInvokableInfo<?>> executedCommands=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands();
    return getExecutedCommandsKeys(Lists.newArrayList(executedCommands));
  }
  public static List<String> getExecutedCommandsKeys(  List<HystrixInvokableInfo<?>> executedCommands){
    return Lists.transform(executedCommands,new Function<HystrixInvokableInfo<?>,String>(){
      @Nullable @Override public String apply(      @Nullable HystrixInvokableInfo<?> input){
        return input.getCommandKey().name();
      }
    }
);
  }
  public static HystrixInvokableInfo getHystrixCommandByKey(  String key){
    HystrixInvokableInfo hystrixCommand=null;
    Collection<HystrixInvokableInfo<?>> executedCommands=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands();
    for (    HystrixInvokableInfo command : executedCommands) {
      if (command.getCommandKey().name().equals(key)) {
        hystrixCommand=command;
        break;
      }
    }
    return hystrixCommand;
  }
}
