static class WrappedClassLoader extends ClassLoader {
  final ClassLoader delegate;
  public WrappedClassLoader(  ClassLoader delegate){
    super();
    this.delegate=delegate;
  }
  public Class<?> loadClass(  String name) throws ClassNotFoundException {
    return delegate.loadClass(name);
  }
  public URL getResource(  String name){
    return delegate.getResource(name);
  }
  public Enumeration<URL> getResources(  String name) throws IOException {
    return delegate.getResources(name);
  }
  public InputStream getResourceAsStream(  String name){
    return delegate.getResourceAsStream(name);
  }
  public void setDefaultAssertionStatus(  boolean enabled){
    delegate.setDefaultAssertionStatus(enabled);
  }
  public void setPackageAssertionStatus(  String packageName,  boolean enabled){
    delegate.setPackageAssertionStatus(packageName,enabled);
  }
  public void setClassAssertionStatus(  String className,  boolean enabled){
    delegate.setClassAssertionStatus(className,enabled);
  }
  public void clearAssertionStatus(){
    delegate.clearAssertionStatus();
  }
}
