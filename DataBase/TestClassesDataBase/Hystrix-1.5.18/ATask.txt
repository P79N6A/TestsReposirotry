private static class ATask {
  final TestTimerListener task;
  final int delay=10;
  volatile int time=0;
  volatile int executionCount=0;
  private ATask(  TestTimerListener task){
    this.task=task;
  }
  public synchronized void incrementTime(  int timeInMilliseconds){
    time+=timeInMilliseconds;
    if (task != null) {
      if (executionCount == 0) {
        System.out.println("ExecutionCount 0 => Time: " + time + " Delay: "+ delay);
        if (time >= delay) {
          executeTask();
        }
      }
 else {
        System.out.println("ExecutionCount 1+ => Time: " + time + " Delay: "+ delay);
        if (time >= delay) {
          executeTask();
        }
      }
    }
  }
  private synchronized void executeTask(){
    System.out.println("Executing task ...");
    task.tick();
    this.time=0;
    this.executionCount++;
    System.out.println("executionCount: " + executionCount);
  }
}
