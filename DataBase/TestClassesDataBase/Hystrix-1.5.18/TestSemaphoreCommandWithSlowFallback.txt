/** 
 * The run() will fail and getFallback() take a long time.
 */
private static class TestSemaphoreCommandWithSlowFallback extends TestHystrixCommand<Boolean> {
  private final long fallbackSleep;
  private TestSemaphoreCommandWithSlowFallback(  TestCircuitBreaker circuitBreaker,  int fallbackSemaphoreExecutionCount,  long fallbackSleep){
    super(testPropsBuilder().setCircuitBreaker(circuitBreaker).setMetrics(circuitBreaker.metrics).setCommandPropertiesDefaults(HystrixCommandPropertiesTest.getUnitTestPropertiesSetter().withFallbackIsolationSemaphoreMaxConcurrentRequests(fallbackSemaphoreExecutionCount).withExecutionIsolationThreadInterruptOnTimeout(false)));
    this.fallbackSleep=fallbackSleep;
  }
  @Override protected Boolean run(){
    throw new RuntimeException("run fails");
  }
  @Override protected Boolean getFallback(){
    try {
      Thread.sleep(fallbackSleep);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
    return true;
  }
}
