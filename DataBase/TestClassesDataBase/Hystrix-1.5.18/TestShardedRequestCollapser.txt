/** 
 * Shard on the artificially provided 'type' variable.
 */
private static class TestShardedRequestCollapser extends TestRequestCollapser {
  public TestShardedRequestCollapser(  TestCollapserTimer timer,  String value){
    super(timer,value);
  }
  @Override protected Collection<Collection<CollapsedRequest<String,String>>> shardRequests(  Collection<CollapsedRequest<String,String>> requests){
    Collection<CollapsedRequest<String,String>> typeA=new ArrayList<CollapsedRequest<String,String>>();
    Collection<CollapsedRequest<String,String>> typeB=new ArrayList<CollapsedRequest<String,String>>();
    for (    CollapsedRequest<String,String> request : requests) {
      if (request.getArgument().endsWith("a")) {
        typeA.add(request);
      }
 else       if (request.getArgument().endsWith("b")) {
        typeB.add(request);
      }
    }
    ArrayList<Collection<CollapsedRequest<String,String>>> shards=new ArrayList<Collection<CollapsedRequest<String,String>>>();
    shards.add(typeA);
    shards.add(typeB);
    return shards;
  }
}
