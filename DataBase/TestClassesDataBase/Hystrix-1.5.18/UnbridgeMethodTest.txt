/** 
 * Created by dmgcodevil
 */
public class UnbridgeMethodTest {
  @Test public void testUnbridgeFoo() throws NoSuchMethodException, IOException, ClassNotFoundException {
    Method bridgeMethod=getBridgeMethod(GenericInterfaceImpl.class,"foo");
    assertNotNull(bridgeMethod);
    Method genMethod=MethodProvider.getInstance().unbride(bridgeMethod,GenericInterfaceImpl.class);
    assertNotNull(bridgeMethod);
    assertReturnType(Child.class,genMethod);
    assertParamsTypes(genMethod,Child.class);
  }
  private static Method getBridgeMethod(  Class<?> type,  String methodName){
    for (    Method method : type.getDeclaredMethods()) {
      if (method.isBridge() && method.getName().equals(methodName)) {
        return method;
      }
    }
    return null;
  }
  private static void assertReturnType(  Class<?> expected,  Method method){
    assertEquals(expected,method.getReturnType());
  }
  private static void assertParamsTypes(  Method method,  Class<?>... expected){
    assertEquals(expected.length,method.getParameterTypes().length);
    Class<?>[] actual=method.getParameterTypes();
    assertArrayEquals(expected,actual);
  }
}
