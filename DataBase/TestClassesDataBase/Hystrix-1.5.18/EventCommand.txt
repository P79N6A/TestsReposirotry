static class EventCommand extends HystrixCommand {
  public EventCommand(){
    super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("eventGroup")).andCommandPropertiesDefaults(new HystrixCommandProperties.Setter().withFallbackIsolationSemaphoreMaxConcurrentRequests(3)));
  }
  @Override protected String run() throws Exception {
    System.out.println(Thread.currentThread().getName() + " : In run()");
    throw new RuntimeException("run_exception");
  }
  @Override public String getFallback(){
    try {
      System.out.println(Thread.currentThread().getName() + " : In fallback => " + getExecutionEvents());
      Thread.sleep(30000L);
    }
 catch (    InterruptedException e) {
      System.out.println(Thread.currentThread().getName() + " : Interruption occurred");
    }
    System.out.println(Thread.currentThread().getName() + " : CMD Success Result");
    return "fallback";
  }
}
