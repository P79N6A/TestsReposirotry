/** 
 * Command that receives a custom thread-pool, sleepTime, timeout
 */
private static class CommandWithCustomThreadPool extends TestHystrixCommand<Boolean> {
  public boolean didExecute=false;
  private final int sleepTime;
  private CommandWithCustomThreadPool(  TestCircuitBreaker circuitBreaker,  HystrixThreadPool threadPool,  int sleepTime,  HystrixCommandProperties.Setter properties){
    super(testPropsBuilder().setThreadPool(threadPool).setCircuitBreaker(circuitBreaker).setMetrics(circuitBreaker.metrics).setCommandPropertiesDefaults(properties));
    this.sleepTime=sleepTime;
  }
  @Override protected Boolean run(){
    System.out.println("**** Executing CommandWithCustomThreadPool. Execution => " + sleepTime);
    didExecute=true;
    try {
      Thread.sleep(sleepTime);
      System.out.println("Woke up");
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
    return true;
  }
}
