/** 
 * @author Rob Winch
 * @since 5.1
 */
public class FormLoginConfigurerTests {
  @Rule public final SpringTestRule spring=new SpringTestRule();
  @Autowired private MockMvc mockMvc;
  @Test public void requestCache() throws Exception {
    this.spring.register(RequestCacheConfig.class,AuthenticationTestConfiguration.class).autowire();
    RequestCacheConfig config=this.spring.getContext().getBean(RequestCacheConfig.class);
    this.mockMvc.perform(formLogin()).andExpect(authenticated());
    verify(config.requestCache).getRequest(any(),any());
  }
@EnableWebSecurity static class RequestCacheConfig extends WebSecurityConfigurerAdapter {
    private RequestCache requestCache=mock(RequestCache.class);
    @Override protected void configure(    HttpSecurity http) throws Exception {
      http.formLogin().and().requestCache().requestCache(this.requestCache);
    }
  }
  @Test public void requestCacheAsBean() throws Exception {
    this.spring.register(RequestCacheBeanConfig.class,AuthenticationTestConfiguration.class).autowire();
    RequestCache requestCache=this.spring.getContext().getBean(RequestCache.class);
    this.mockMvc.perform(formLogin()).andExpect(authenticated());
    verify(requestCache).getRequest(any(),any());
  }
@EnableWebSecurity static class RequestCacheBeanConfig {
    @Bean RequestCache requestCache(){
      return mock(RequestCache.class);
    }
  }
}
