/** 
 * @author Luke Taylor
 */
public class SubjectDnX509PrincipalExtractorTests {
  SubjectDnX509PrincipalExtractor extractor;
  @Before public void setUp(){
    extractor=new SubjectDnX509PrincipalExtractor();
    extractor.setMessageSource(new SpringSecurityMessageSource());
  }
  @Test(expected=IllegalArgumentException.class) public void invalidRegexFails() throws Exception {
    extractor.setSubjectDnRegex("CN=(.*?,");
  }
  @Test public void defaultCNPatternReturnsExcpectedPrincipal() throws Exception {
    Object principal=extractor.extractPrincipal(X509TestUtils.buildTestCertificate());
    assertThat(principal).isEqualTo("Luke Taylor");
  }
  @Test public void matchOnEmailReturnsExpectedPrincipal() throws Exception {
    extractor.setSubjectDnRegex("emailAddress=(.*?),");
    Object principal=extractor.extractPrincipal(X509TestUtils.buildTestCertificate());
    assertThat(principal).isEqualTo("luke@monkeymachine");
  }
  @Test(expected=BadCredentialsException.class) public void matchOnShoeSizeThrowsBadCredentials() throws Exception {
    extractor.setSubjectDnRegex("shoeSize=(.*?),");
    extractor.extractPrincipal(X509TestUtils.buildTestCertificate());
  }
  @Test public void defaultCNPatternReturnsPrincipalAtEndOfDNString() throws Exception {
    Object principal=extractor.extractPrincipal(X509TestUtils.buildTestCertificateWithCnAtEnd());
    assertThat(principal).isEqualTo("Duke");
  }
}
