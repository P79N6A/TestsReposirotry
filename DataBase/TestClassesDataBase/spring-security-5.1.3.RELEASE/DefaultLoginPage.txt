public static class DefaultLoginPage {
  private WebDriver driver;
  @FindBy(css="div[role=alert]") private WebElement alert;
  private LoginForm loginForm;
  private OAuth2Login oauth2Login=new OAuth2Login();
  public DefaultLoginPage(  WebDriver webDriver){
    this.driver=webDriver;
  }
  static DefaultLoginPage create(  WebDriver driver){
    return PageFactory.initElements(driver,DefaultLoginPage.class);
  }
  public DefaultLoginPage assertAt(){
    assertThat(this.driver.getTitle()).isEqualTo("Please sign in");
    return this;
  }
  public DefaultLoginPage assertError(){
    assertThat(this.alert.getText()).isEqualTo("Invalid credentials");
    return this;
  }
  public DefaultLoginPage assertLogout(){
    assertThat(this.alert.getText()).isEqualTo("You have been signed out");
    return this;
  }
  public DefaultLoginPage assertLoginFormNotPresent(){
    assertThatThrownBy(() -> loginForm().username("")).isInstanceOf(NoSuchElementException.class);
    return this;
  }
  public LoginForm loginForm(){
    if (this.loginForm == null) {
      this.loginForm=PageFactory.initElements(this.driver,LoginForm.class);
    }
    return this.loginForm;
  }
  public OAuth2Login oauth2Login(){
    return this.oauth2Login;
  }
  static DefaultLoginPage to(  WebDriver driver){
    driver.get("http://localhost/login");
    return PageFactory.initElements(driver,DefaultLoginPage.class);
  }
public static class LoginForm {
    private WebDriver driver;
    private WebElement username;
    private WebElement password;
    @FindBy(css="button[type=submit]") private WebElement submit;
    public LoginForm(    WebDriver driver){
      this.driver=driver;
    }
    public LoginForm username(    String username){
      this.username.sendKeys(username);
      return this;
    }
    public LoginForm password(    String password){
      this.password.sendKeys(password);
      return this;
    }
    public <T>T submit(    Class<T> page){
      this.submit.click();
      return PageFactory.initElements(this.driver,page);
    }
  }
public class OAuth2Login {
    public WebElement findClientRegistrationByName(    String clientName){
      return DefaultLoginPage.this.driver.findElement(By.linkText(clientName));
    }
    public OAuth2Login assertClientRegistrationByName(    String clientName){
      assertThatCode(() -> findClientRegistrationByName(clientName)).doesNotThrowAnyException();
      return this;
    }
    public DefaultLoginPage and(){
      return DefaultLoginPage.this;
    }
  }
}
