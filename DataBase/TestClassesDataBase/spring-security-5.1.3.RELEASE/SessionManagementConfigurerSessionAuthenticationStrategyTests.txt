/** 
 * @author Joe Grandja
 */
public class SessionManagementConfigurerSessionAuthenticationStrategyTests {
  @Autowired private MockMvc mvc;
  @Rule public final SpringTestRule spring=new SpringTestRule();
  @Test public void requestWhenCustomSessionAuthenticationStrategyProvidedThenCalled() throws Exception {
    this.spring.register(CustomSessionAuthenticationStrategyConfig.class).autowire();
    this.mvc.perform(formLogin().user("user").password("password"));
    verify(CustomSessionAuthenticationStrategyConfig.customSessionAuthenticationStrategy).onAuthentication(any(Authentication.class),any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
@EnableWebSecurity static class CustomSessionAuthenticationStrategyConfig extends WebSecurityConfigurerAdapter {
    static SessionAuthenticationStrategy customSessionAuthenticationStrategy=mock(SessionAuthenticationStrategy.class);
    @Override public void configure(    HttpSecurity http) throws Exception {
      http.formLogin().and().sessionManagement().sessionAuthenticationStrategy(customSessionAuthenticationStrategy);
    }
    @Override protected void configure(    AuthenticationManagerBuilder auth) throws Exception {
      auth.inMemoryAuthentication().withUser(PasswordEncodedUser.user());
    }
  }
}
