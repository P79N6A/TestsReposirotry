/** 
 * @author Luke Taylor
 * @since 3.0
 */
public class AclPermissionEvaluatorTests {
  @Test public void hasPermissionReturnsTrueIfAclGrantsPermission() throws Exception {
    AclService service=mock(AclService.class);
    AclPermissionEvaluator pe=new AclPermissionEvaluator(service);
    ObjectIdentity oid=mock(ObjectIdentity.class);
    ObjectIdentityRetrievalStrategy oidStrategy=mock(ObjectIdentityRetrievalStrategy.class);
    when(oidStrategy.getObjectIdentity(anyObject())).thenReturn(oid);
    pe.setObjectIdentityRetrievalStrategy(oidStrategy);
    pe.setSidRetrievalStrategy(mock(SidRetrievalStrategy.class));
    Acl acl=mock(Acl.class);
    when(service.readAclById(any(ObjectIdentity.class),anyListOf(Sid.class))).thenReturn(acl);
    when(acl.isGranted(anyListOf(Permission.class),anyListOf(Sid.class),eq(false))).thenReturn(true);
    assertThat(pe.hasPermission(mock(Authentication.class),new Object(),"READ")).isTrue();
  }
  @Test public void resolvePermissionNonEnglishLocale(){
    Locale systemLocale=Locale.getDefault();
    Locale.setDefault(new Locale("tr"));
    AclService service=mock(AclService.class);
    AclPermissionEvaluator pe=new AclPermissionEvaluator(service);
    ObjectIdentity oid=mock(ObjectIdentity.class);
    ObjectIdentityRetrievalStrategy oidStrategy=mock(ObjectIdentityRetrievalStrategy.class);
    when(oidStrategy.getObjectIdentity(anyObject())).thenReturn(oid);
    pe.setObjectIdentityRetrievalStrategy(oidStrategy);
    pe.setSidRetrievalStrategy(mock(SidRetrievalStrategy.class));
    Acl acl=mock(Acl.class);
    when(service.readAclById(any(ObjectIdentity.class),anyListOf(Sid.class))).thenReturn(acl);
    when(acl.isGranted(anyListOf(Permission.class),anyListOf(Sid.class),eq(false))).thenReturn(true);
    assertThat(pe.hasPermission(mock(Authentication.class),new Object(),"write")).isTrue();
    Locale.setDefault(systemLocale);
  }
}
