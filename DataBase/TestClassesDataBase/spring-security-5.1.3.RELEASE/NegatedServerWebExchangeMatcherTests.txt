/** 
 * @author Tao Qian
 * @since 5.0
 */
@RunWith(MockitoJUnitRunner.class) public class NegatedServerWebExchangeMatcherTests {
  @Mock ServerWebExchange exchange;
  @Mock ServerWebExchangeMatcher matcher1;
  NegatedServerWebExchangeMatcher matcher;
  @Before public void setUp() throws Exception {
    matcher=new NegatedServerWebExchangeMatcher(matcher1);
  }
  @Test public void matchesWhenFalseThenTrue() throws Exception {
    when(matcher1.matches(exchange)).thenReturn(ServerWebExchangeMatcher.MatchResult.notMatch());
    ServerWebExchangeMatcher.MatchResult matches=matcher.matches(exchange).block();
    assertThat(matches.isMatch()).isTrue();
    assertThat(matches.getVariables()).isEmpty();
    verify(matcher1).matches(exchange);
  }
  @Test public void matchesWhenTrueThenFalse() throws Exception {
    when(matcher1.matches(exchange)).thenReturn(ServerWebExchangeMatcher.MatchResult.match());
    ServerWebExchangeMatcher.MatchResult matches=matcher.matches(exchange).block();
    assertThat(matches.isMatch()).isFalse();
    assertThat(matches.getVariables()).isEmpty();
    verify(matcher1).matches(exchange);
  }
}
