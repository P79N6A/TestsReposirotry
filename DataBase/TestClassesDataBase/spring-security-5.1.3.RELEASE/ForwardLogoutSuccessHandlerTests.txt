/** 
 * Tests for  {@link ForwardLogoutSuccessHandler}.
 * @author Vedran Pavic
 */
public class ForwardLogoutSuccessHandlerTests {
  @Rule public ExpectedException thrown=ExpectedException.none();
  @Test public void invalidTargetUrl(){
    String targetUrl="not.valid";
    this.thrown.expect(IllegalArgumentException.class);
    this.thrown.expectMessage("'" + targetUrl + "' is not a valid target URL");
    new ForwardLogoutSuccessHandler(targetUrl);
  }
  @Test public void emptyTargetUrl(){
    String targetUrl=" ";
    this.thrown.expect(IllegalArgumentException.class);
    this.thrown.expectMessage("'" + targetUrl + "' is not a valid target URL");
    new ForwardLogoutSuccessHandler(targetUrl);
  }
  @Test public void logoutSuccessIsHandled() throws Exception {
    String targetUrl="/login?logout";
    ForwardLogoutSuccessHandler handler=new ForwardLogoutSuccessHandler(targetUrl);
    MockHttpServletRequest request=new MockHttpServletRequest();
    MockHttpServletResponse response=new MockHttpServletResponse();
    Authentication authentication=mock(Authentication.class);
    handler.onLogoutSuccess(request,response,authentication);
    assertThat(response.getForwardedUrl()).isEqualTo(targetUrl);
  }
}
