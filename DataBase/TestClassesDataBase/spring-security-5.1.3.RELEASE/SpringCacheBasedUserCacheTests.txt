/** 
 * Tests {@link org.springframework.security.core.userdetails.cache.SpringCacheBasedUserCache}.
 * @author Marten Deinum
 * @since 3.2
 */
public class SpringCacheBasedUserCacheTests {
  private static CacheManager cacheManager;
  @BeforeClass public static void initCacheManaer(){
    cacheManager=new ConcurrentMapCacheManager();
    cacheManager.getCache("springbasedusercachetests");
  }
  @AfterClass public static void shutdownCacheManager(){
  }
  private Cache getCache(){
    Cache cache=cacheManager.getCache("springbasedusercachetests");
    cache.clear();
    return cache;
  }
  private User getUser(){
    return new User("john","password",true,true,true,true,AuthorityUtils.createAuthorityList("ROLE_ONE","ROLE_TWO"));
  }
  @Test public void cacheOperationsAreSuccessful() throws Exception {
    SpringCacheBasedUserCache cache=new SpringCacheBasedUserCache(getCache());
    cache.putUserInCache(getUser());
    assertThat(getUser().getPassword()).isEqualTo(cache.getUserFromCache(getUser().getUsername()).getPassword());
    cache.removeUserFromCache(getUser());
    assertThat(cache.getUserFromCache(getUser().getUsername())).isNull();
    assertThat(cache.getUserFromCache(null)).isNull();
    assertThat(cache.getUserFromCache("UNKNOWN_USER")).isNull();
  }
  @Test(expected=IllegalArgumentException.class) public void startupDetectsMissingCache() throws Exception {
    new SpringCacheBasedUserCache(null);
  }
}
