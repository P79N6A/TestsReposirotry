/** 
 * Always returns the constructor-defined <code>forceReturnObject</code>, provided the same configuration attribute was provided. Also stores the secure object it supports.
 */
private class MockAfterInvocationProvider implements AfterInvocationProvider {
  private Class secureObject;
  private ConfigAttribute configAttribute;
  private Object forceReturnObject;
  public MockAfterInvocationProvider(  Object forceReturnObject,  Class secureObject,  ConfigAttribute configAttribute){
    this.forceReturnObject=forceReturnObject;
    this.secureObject=secureObject;
    this.configAttribute=configAttribute;
  }
  public Object decide(  Authentication authentication,  Object object,  Collection<ConfigAttribute> config,  Object returnedObject) throws AccessDeniedException {
    if (config.contains(configAttribute)) {
      return forceReturnObject;
    }
    return returnedObject;
  }
  public boolean supports(  Class<?> clazz){
    return secureObject.isAssignableFrom(clazz);
  }
  public boolean supports(  ConfigAttribute attribute){
    return attribute.equals(configAttribute);
  }
}
