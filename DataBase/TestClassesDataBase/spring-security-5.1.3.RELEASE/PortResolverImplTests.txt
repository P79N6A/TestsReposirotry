/** 
 * Tests  {@link PortResolverImpl}.
 * @author Ben Alex
 */
public class PortResolverImplTests {
  @Test public void testDetectsBuggyIeHttpRequest() throws Exception {
    PortResolverImpl pr=new PortResolverImpl();
    MockHttpServletRequest request=new MockHttpServletRequest();
    request.setServerPort(8443);
    request.setScheme("HTtP");
    assertThat(pr.getServerPort(request)).isEqualTo(8080);
  }
  @Test public void testDetectsBuggyIeHttpsRequest() throws Exception {
    PortResolverImpl pr=new PortResolverImpl();
    MockHttpServletRequest request=new MockHttpServletRequest();
    request.setServerPort(8080);
    request.setScheme("HTtPs");
    assertThat(pr.getServerPort(request)).isEqualTo(8443);
  }
  @Test public void testDetectsEmptyPortMapper() throws Exception {
    PortResolverImpl pr=new PortResolverImpl();
    try {
      pr.setPortMapper(null);
      fail("Should have thrown IllegalArgumentException");
    }
 catch (    IllegalArgumentException expected) {
    }
  }
  @Test public void testGettersSetters() throws Exception {
    PortResolverImpl pr=new PortResolverImpl();
    assertThat(pr.getPortMapper() != null).isTrue();
    pr.setPortMapper(new PortMapperImpl());
    assertThat(pr.getPortMapper() != null).isTrue();
  }
  @Test public void testNormalOperation() throws Exception {
    PortResolverImpl pr=new PortResolverImpl();
    MockHttpServletRequest request=new MockHttpServletRequest();
    request.setScheme("http");
    request.setServerPort(1021);
    assertThat(pr.getServerPort(request)).isEqualTo(1021);
  }
}
