/** 
 * Tests for  {@link ClaimAccessor}.
 * @author Joe Grandja
 */
public class ClaimAccessorTests {
  private Map<String,Object> claims=new HashMap<>();
  private ClaimAccessor claimAccessor=(() -> this.claims);
  @Before public void setup(){
    this.claims.clear();
  }
  @Test public void getClaimAsInstantWhenDateTypeThenReturnInstant(){
    Instant expectedClaimValue=Instant.now();
    String claimName="date";
    this.claims.put(claimName,Date.from(expectedClaimValue));
    assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1));
  }
  @Test public void getClaimAsInstantWhenLongTypeSecondsThenReturnInstant(){
    Instant expectedClaimValue=Instant.now();
    String claimName="longSeconds";
    this.claims.put(claimName,expectedClaimValue.getEpochSecond());
    assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1));
  }
  @Test public void getClaimAsInstantWhenInstantTypeThenReturnInstant(){
    Instant expectedClaimValue=Instant.now();
    String claimName="instant";
    this.claims.put(claimName,expectedClaimValue);
    assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1));
  }
  @Test public void getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant(){
    Instant expectedClaimValue=Instant.now();
    String claimName="integerSeconds";
    this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).intValue());
    assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1));
  }
  @Test public void getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant(){
    Instant expectedClaimValue=Instant.now();
    String claimName="doubleSeconds";
    this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue());
    assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1));
  }
  @Test public void getClaimAsStringWhenValueIsNullThenReturnNull(){
    String claimName="claim-with-null-value";
    this.claims.put(claimName,null);
    assertThat(this.claimAccessor.getClaimAsString(claimName)).isNull();
  }
}
