/** 
 * @author Rob Winch
 */
public class SecurityContextLogoutHandlerTests {
  private MockHttpServletRequest request;
  private MockHttpServletResponse response;
  private SecurityContextLogoutHandler handler;
  @Before public void setUp(){
    request=new MockHttpServletRequest();
    response=new MockHttpServletResponse();
    handler=new SecurityContextLogoutHandler();
    SecurityContext context=SecurityContextHolder.createEmptyContext();
    context.setAuthentication(new TestingAuthenticationToken("user","password",AuthorityUtils.createAuthorityList("ROLE_USER")));
    SecurityContextHolder.setContext(context);
  }
  @After public void tearDown(){
    SecurityContextHolder.clearContext();
  }
  @Test public void clearsAuthentication(){
    SecurityContext beforeContext=SecurityContextHolder.getContext();
    handler.logout(request,response,SecurityContextHolder.getContext().getAuthentication());
    assertThat(beforeContext.getAuthentication()).isNull();
  }
  @Test public void disableClearsAuthentication(){
    handler.setClearAuthentication(false);
    SecurityContext beforeContext=SecurityContextHolder.getContext();
    Authentication beforeAuthentication=beforeContext.getAuthentication();
    handler.logout(request,response,SecurityContextHolder.getContext().getAuthentication());
    assertThat(beforeContext.getAuthentication()).isNotNull();
    assertThat(beforeContext.getAuthentication()).isSameAs(beforeAuthentication);
  }
}
