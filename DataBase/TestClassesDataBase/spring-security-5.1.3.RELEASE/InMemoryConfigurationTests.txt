/** 
 * Tests  {@link InMemoryConfiguration}.
 * @author Rob Winch
 */
public class InMemoryConfigurationTests {
  private AppConfigurationEntry[] defaultEntries;
  private Map<String,AppConfigurationEntry[]> mappedEntries;
  @Before public void setUp(){
    this.defaultEntries=new AppConfigurationEntry[]{new AppConfigurationEntry(TestLoginModule.class.getName(),LoginModuleControlFlag.REQUIRED,Collections.<String,Object>emptyMap())};
    this.mappedEntries=Collections.<String,AppConfigurationEntry[]>singletonMap("name",new AppConfigurationEntry[]{new AppConfigurationEntry(TestLoginModule.class.getName(),LoginModuleControlFlag.OPTIONAL,Collections.<String,Object>emptyMap())});
  }
  @Test public void constructorNullDefault(){
    assertThat(new InMemoryConfiguration((AppConfigurationEntry[])null).getAppConfigurationEntry("name")).isNull();
  }
  @Test(expected=IllegalArgumentException.class) public void constructorNullMapped(){
    new InMemoryConfiguration((Map<String,AppConfigurationEntry[]>)null);
  }
  @Test public void constructorEmptyMap(){
    assertThat(new InMemoryConfiguration(Collections.<String,AppConfigurationEntry[]>emptyMap()).getAppConfigurationEntry("name")).isNull();
  }
  @Test public void constructorEmptyMapNullDefault(){
    assertThat(new InMemoryConfiguration(Collections.<String,AppConfigurationEntry[]>emptyMap(),null).getAppConfigurationEntry("name")).isNull();
  }
  @Test(expected=IllegalArgumentException.class) public void constructorNullMapNullDefault(){
    new InMemoryConfiguration(null,null);
  }
  @Test public void nonnullDefault(){
    InMemoryConfiguration configuration=new InMemoryConfiguration(this.defaultEntries);
    assertThat(configuration.getAppConfigurationEntry("name")).isEqualTo(this.defaultEntries);
  }
  @Test public void mappedNonnullDefault(){
    InMemoryConfiguration configuration=new InMemoryConfiguration(this.mappedEntries,this.defaultEntries);
    assertThat(this.defaultEntries).isEqualTo(configuration.getAppConfigurationEntry("missing"));
    assertThat(this.mappedEntries.get("name")).isEqualTo(configuration.getAppConfigurationEntry("name"));
  }
  @Test public void jdk5Compatable() throws Exception {
    Method method=InMemoryConfiguration.class.getDeclaredMethod("refresh");
    assertThat(method.getDeclaringClass()).isEqualTo(InMemoryConfiguration.class);
  }
}
