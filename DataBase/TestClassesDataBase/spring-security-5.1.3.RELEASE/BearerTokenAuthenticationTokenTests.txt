/** 
 * Tests for  {@link BearerTokenAuthenticationToken}
 * @author Josh Cummings
 */
public class BearerTokenAuthenticationTokenTests {
  @Test public void constructorWhenTokenIsNullThenThrowsException(){
    assertThatCode(() -> new BearerTokenAuthenticationToken(null)).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("token cannot be empty");
  }
  @Test public void constructorWhenTokenIsEmptyThenThrowsException(){
    assertThatCode(() -> new BearerTokenAuthenticationToken("")).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("token cannot be empty");
  }
  @Test public void constructorWhenTokenHasValueThenConstructedCorrectly(){
    BearerTokenAuthenticationToken token=new BearerTokenAuthenticationToken("token");
    assertThat(token.getToken()).isEqualTo("token");
    assertThat(token.getPrincipal()).isEqualTo("token");
    assertThat(token.getCredentials()).isEqualTo("token");
  }
}
