/** 
 * @author Rob Winch
 * @since 4.1
 */
@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration @WebAppConfiguration public class Gh3409Tests {
  @Autowired private WebApplicationContext context;
  private MockMvc mockMvc;
  @Before public void setup(){
    this.mockMvc=MockMvcBuilders.webAppContextSetup(this.context).apply(springSecurity()).build();
  }
  @Test public void unauthenticatedAnonymousUser() throws Exception {
    this.mockMvc.perform(get("/public/").with(securityContext(new SecurityContextImpl())));
    this.mockMvc.perform(get("/public/")).andExpect(unauthenticated());
  }
  @Test public void unauthenticatedNullAuthenitcation() throws Exception {
    this.mockMvc.perform(get("/").with(securityContext(new SecurityContextImpl())));
    this.mockMvc.perform(get("/")).andExpect(unauthenticated());
  }
@EnableWebSecurity @EnableWebMvc static class Config extends WebSecurityConfigurerAdapter {
    @Override protected void configure(    HttpSecurity http) throws Exception {
      http.authorizeRequests().antMatchers("/public/**").permitAll().anyRequest().authenticated().and().formLogin().and().httpBasic();
    }
  }
}
