/** 
 * @author Rob Winch
 */
@RunWith(PowerMockRunner.class) @PrepareForTest({ReflectionUtils.class,Method.class}) public class ChangeSessionIdAuthenticationStrategyTests {
  @Mock private Method method;
  @Test(expected=IllegalStateException.class) public void constructChangeIdMethodNotFound(){
    spy(ReflectionUtils.class);
    MockHttpServletRequest request=new MockHttpServletRequest();
    request.getSession();
    when(ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId")).thenReturn(null);
    new ChangeSessionIdAuthenticationStrategy();
  }
  @Test public void applySessionFixation() throws Exception {
    spy(ReflectionUtils.class);
    Method method=mock(Method.class);
    MockHttpServletRequest request=new MockHttpServletRequest();
    request.getSession();
    when(ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId")).thenReturn(method);
    new ChangeSessionIdAuthenticationStrategy().applySessionFixation(request);
    verifyStatic(ReflectionUtils.class);
    ReflectionUtils.invokeMethod(same(method),eq(request));
  }
}
