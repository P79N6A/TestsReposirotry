@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration(classes=SecurityMockMvcRequestPostProcessorsAuthenticationStatelessTests.Config.class) @WebAppConfiguration public class SecurityMockMvcRequestPostProcessorsAuthenticationStatelessTests {
  @Autowired private WebApplicationContext context;
  private MockMvc mvc;
  @Before public void setup(){
    mvc=MockMvcBuilders.webAppContextSetup(context).apply(springSecurity()).build();
  }
  @Test public void userRequestPostProcessorWorksWithStateless() throws Exception {
    mvc.perform(get("/").with(user("user"))).andExpect(status().is2xxSuccessful());
  }
  @WithMockUser @Test public void withMockUserWorksWithStateless() throws Exception {
    mvc.perform(get("/")).andExpect(status().is2xxSuccessful());
  }
@EnableWebSecurity @EnableWebMvc static class Config extends WebSecurityConfigurerAdapter {
    @Override protected void configure(    HttpSecurity http) throws Exception {
      super.configure(http);
      http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);
    }
    @Autowired public void configureGlobal(    AuthenticationManagerBuilder auth) throws Exception {
      auth.inMemoryAuthentication();
    }
@RestController static class Controller {
      @RequestMapping public String hello(){
        return "Hello";
      }
    }
  }
}
