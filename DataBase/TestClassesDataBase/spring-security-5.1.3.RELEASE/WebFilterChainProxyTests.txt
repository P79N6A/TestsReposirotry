/** 
 * @author Rob Winch
 * @since 5.0
 */
public class WebFilterChainProxyTests {
  @Test public void filterWhenNoMatchThenContinuesChainAnd404(){
    List<WebFilter> filters=Arrays.asList(new Http200WebFilter());
    ServerWebExchangeMatcher notMatch=exchange -> MatchResult.notMatch();
    MatcherSecurityWebFilterChain chain=new MatcherSecurityWebFilterChain(notMatch,filters);
    WebFilterChainProxy filter=new WebFilterChainProxy(chain);
    WebTestClient.bindToController(new Object()).webFilter(filter).build().get().exchange().expectStatus().isNotFound();
  }
static class Http200WebFilter implements WebFilter {
    @Override public Mono<Void> filter(    ServerWebExchange exchange,    WebFilterChain chain){
      return Mono.fromRunnable(() -> exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN));
    }
  }
}
