@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration(classes=SecurityRequestsTests.Config.class) @WebAppConfiguration public class SecurityRequestsTests {
  @Autowired private WebApplicationContext context;
  @Autowired private UserDetailsService userDetailsService;
  private MockMvc mvc;
  @Before public void setup(){
    mvc=MockMvcBuilders.webAppContextSetup(context).apply(springSecurity()).build();
  }
  @Test public void requestProtectedUrlWithUser() throws Exception {
    mvc.perform(get("/").with(user("user"))).andExpect(status().isNotFound()).andExpect(authenticated().withUsername("user"));
  }
  @Test public void requestProtectedUrlWithAdmin() throws Exception {
    mvc.perform(get("/admin").with(user("admin").roles("ADMIN"))).andExpect(status().isNotFound()).andExpect(authenticated().withUsername("admin"));
  }
  @Test public void requestProtectedUrlWithUserDetails() throws Exception {
    UserDetails user=userDetailsService.loadUserByUsername("user");
    mvc.perform(get("/").with(user(user))).andExpect(status().isNotFound()).andExpect(authenticated().withAuthenticationPrincipal(user));
  }
  @Test public void requestProtectedUrlWithAuthentication() throws Exception {
    Authentication authentication=new TestingAuthenticationToken("test","notused","ROLE_USER");
    mvc.perform(get("/").with(authentication(authentication))).andExpect(status().isNotFound()).andExpect(authenticated().withAuthentication(authentication));
  }
@EnableWebSecurity @EnableWebMvc static class Config extends WebSecurityConfigurerAdapter {
    @Override protected void configure(    HttpSecurity http) throws Exception {
      http.authorizeRequests().antMatchers("/admin/**").hasRole("ADMIN").anyRequest().authenticated().and().formLogin();
    }
    @Autowired public void configureGlobal(    AuthenticationManagerBuilder auth) throws Exception {
      auth.inMemoryAuthentication().withUser("user").password("password").roles("USER");
    }
    @Override @Bean public UserDetailsService userDetailsServiceBean() throws Exception {
      return super.userDetailsServiceBean();
    }
  }
}
