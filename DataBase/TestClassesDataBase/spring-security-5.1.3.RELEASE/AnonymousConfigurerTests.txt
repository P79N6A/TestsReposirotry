/** 
 * @author Rob Winch
 * @author Josh Cummings
 */
public class AnonymousConfigurerTests {
  @Rule public final SpringTestRule spring=new SpringTestRule();
  @Autowired private MockMvc mockMvc;
  @Test public void requestWhenAnonymousTwiceInvokedThenDoesNotOverride() throws Exception {
    this.spring.register(InvokeTwiceDoesNotOverride.class).autowire();
    this.mockMvc.perform(get("/")).andExpect(content().string("principal"));
  }
@EnableWebSecurity @EnableWebMvc static class InvokeTwiceDoesNotOverride extends WebSecurityConfigurerAdapter {
    @Override protected void configure(    HttpSecurity http) throws Exception {
      http.anonymous().key("key").principal("principal").and().anonymous();
    }
@RestController static class PrincipalController {
      @GetMapping("/") String principal(      @AuthenticationPrincipal String principal){
        return principal;
      }
    }
  }
}
