/** 
 * Tests  {@link AuthorizationFailureEvent}.
 * @author Ben Alex
 */
public class AuthorizationFailureEventTests {
  private final UsernamePasswordAuthenticationToken foo=new UsernamePasswordAuthenticationToken("foo","bar");
  private List<ConfigAttribute> attributes=SecurityConfig.createList("TEST");
  private AccessDeniedException exception=new AuthorizationServiceException("error",new Throwable());
  @Test(expected=IllegalArgumentException.class) public void rejectsNullSecureObject(){
    new AuthorizationFailureEvent(null,attributes,foo,exception);
  }
  @Test(expected=IllegalArgumentException.class) public void rejectsNullAttributesList(){
    new AuthorizationFailureEvent(new SimpleMethodInvocation(),null,foo,exception);
  }
  @Test(expected=IllegalArgumentException.class) public void rejectsNullAuthentication(){
    new AuthorizationFailureEvent(new SimpleMethodInvocation(),attributes,null,exception);
  }
  @Test(expected=IllegalArgumentException.class) public void rejectsNullException(){
    new AuthorizationFailureEvent(new SimpleMethodInvocation(),attributes,foo,null);
  }
  @Test public void gettersReturnCtorSuppliedData() throws Exception {
    AuthorizationFailureEvent event=new AuthorizationFailureEvent(new Object(),attributes,foo,exception);
    assertThat(event.getConfigAttributes()).isSameAs(attributes);
    assertThat(event.getAccessDeniedException()).isSameAs(exception);
    assertThat(event.getAuthentication()).isSameAs(foo);
  }
}
