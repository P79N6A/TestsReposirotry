/** 
 * @author Rob Winch
 */
@RunWith(SpringJUnit4ClassRunner.class) public class AuthenticationConfigurationPublishTests {
  @Autowired MockEventListener<AuthenticationSuccessEvent> listener;
  AuthenticationManager authenticationManager;
  @Test public void authenticationEventPublisherBeanUsedByDefault(){
    this.authenticationManager.authenticate(new UsernamePasswordAuthenticationToken("user","password"));
    assertThat(this.listener.getEvents()).hasSize(1);
  }
  @Autowired public void setAuthenticationManager(  AuthenticationConfiguration authenticationConfiguration) throws Exception {
    this.authenticationManager=authenticationConfiguration.getAuthenticationManager();
  }
@EnableGlobalAuthentication @Import(AuthenticationTestConfiguration.class) static class Config {
    @Bean AuthenticationEventPublisher publisher(){
      return new DefaultAuthenticationEventPublisher();
    }
    @Bean MockEventListener<AuthenticationSuccessEvent> eventListener(){
      return new MockEventListener<AuthenticationSuccessEvent>(){
      }
;
    }
  }
}
