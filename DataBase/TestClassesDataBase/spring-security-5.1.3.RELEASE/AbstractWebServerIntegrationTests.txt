/** 
 * Base class which allows the application to be started with a particular Spring application context. Subclasses override the <tt>getContextConfigLocations</tt> method to return a list of context file names which is passed to the <tt>ContextLoaderListener</tt> when starting up the webapp.
 * @author Luke Taylor
 */
public abstract class AbstractWebServerIntegrationTests {
  protected ConfigurableApplicationContext context;
  @After public void close(){
    if (context != null) {
      context.close();
    }
  }
  protected final MockMvc createMockMvc(  String... configLocations) throws Exception {
    if (this.context != null) {
      throw new IllegalStateException("context is already loaded");
    }
    XmlWebApplicationContext context=new XmlWebApplicationContext();
    context.setConfigLocations(configLocations);
    context.setServletContext(new MockServletContext());
    context.refresh();
    this.context=context;
    return MockMvcBuilders.webAppContextSetup(context).apply(springSecurity()).build();
  }
}
