/** 
 * @author Rob Winch
 * @since 5.0
 */
@RunWith(MockitoJUnitRunner.class) public class ServerAuthenticationEntryPointFailureHandlerTests {
  @Mock private ServerAuthenticationEntryPoint authenticationEntryPoint;
  @Mock private ServerWebExchange exchange;
  @Mock private WebFilterChain chain;
  @InjectMocks private WebFilterExchange filterExchange;
  @InjectMocks private ServerAuthenticationEntryPointFailureHandler handler;
  @Test(expected=IllegalArgumentException.class) public void constructorWhenNullEntryPointThenException(){
    this.authenticationEntryPoint=null;
    new ServerAuthenticationEntryPointFailureHandler(this.authenticationEntryPoint);
  }
  @Test public void onAuthenticationFailureWhenInvokedThenDelegatesToEntryPoint(){
    Mono<Void> result=Mono.empty();
    BadCredentialsException e=new BadCredentialsException("Failed");
    when(this.authenticationEntryPoint.commence(this.exchange,e)).thenReturn(result);
    assertThat(this.handler.onAuthenticationFailure(this.filterExchange,e)).isEqualTo(result);
  }
}
