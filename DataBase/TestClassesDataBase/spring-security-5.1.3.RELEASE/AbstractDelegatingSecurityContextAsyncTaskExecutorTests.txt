/** 
 * Abstract class for testing  {@link DelegatingSecurityContextAsyncTaskExecutor} whichallows customization of how  {@link DelegatingSecurityContextAsyncTaskExecutor} and itsmocks are created.
 * @author Rob Winch
 * @since 3.2
 * @see CurrentDelegatingSecurityContextAsyncTaskExecutorTests
 * @see ExplicitDelegatingSecurityContextAsyncTaskExecutorTests
 */
public abstract class AbstractDelegatingSecurityContextAsyncTaskExecutorTests extends AbstractDelegatingSecurityContextExecutorTests {
  @Mock protected AsyncTaskExecutor taskExecutorDelegate;
  private DelegatingSecurityContextAsyncTaskExecutor executor;
  @Before public final void setUpExecutor(){
    executor=create();
  }
  @Test public void executeStartTimeout(){
    executor.execute(runnable,1);
    verify(getExecutor()).execute(wrappedRunnable,1);
  }
  @Test public void submit(){
    executor.submit(runnable);
    verify(getExecutor()).submit(wrappedRunnable);
  }
  @Test public void submitCallable(){
    executor.submit(callable);
    verify(getExecutor()).submit(wrappedCallable);
  }
  protected AsyncTaskExecutor getExecutor(){
    return taskExecutorDelegate;
  }
  protected abstract DelegatingSecurityContextAsyncTaskExecutor create();
}
