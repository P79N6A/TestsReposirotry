/** 
 * Tests for  {@link OAuth2ErrorResponseErrorHandler}.
 * @author Joe Grandja
 */
public class OAuth2ErrorResponseErrorHandlerTests {
  private OAuth2ErrorResponseErrorHandler errorHandler=new OAuth2ErrorResponseErrorHandler();
  @Test public void handleErrorWhenErrorResponseBodyThenHandled(){
    String errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\"\n"+ "}\n";
    MockClientHttpResponse response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST);
    assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[unauthorized_client] The client is not authorized");
  }
  @Test public void handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled(){
    String wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\"";
    MockClientHttpResponse response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST);
    response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader);
    assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[insufficient_scope] The access token expired");
  }
}
