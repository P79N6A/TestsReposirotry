/** 
 * Test useragent of abfs client.
 */
public final class TestAbfsClient {
  private final String accountName="bogusAccountName";
  private void validateUserAgent(  String expectedPattern,  URL baseUrl,  AbfsConfiguration config,  boolean includeSSLProvider){
    AbfsClient client=new AbfsClient(baseUrl,null,config,null,null);
    String sslProviderName=null;
    if (includeSSLProvider) {
      sslProviderName=SSLSocketFactoryEx.getDefaultFactory().getProviderName();
    }
    String userAgent=client.initializeUserAgent(config,sslProviderName);
    Pattern pattern=Pattern.compile(expectedPattern);
    Assert.assertTrue(pattern.matcher(userAgent).matches());
  }
  @Test public void verifyUnknownUserAgent() throws Exception {
    String expectedUserAgentPattern="Azure Blob FS\\/1.0 \\(JavaJRE ([^\\)]+)\\)";
    final Configuration configuration=new Configuration();
    configuration.unset(ConfigurationKeys.FS_AZURE_USER_AGENT_PREFIX_KEY);
    AbfsConfiguration abfsConfiguration=new AbfsConfiguration(configuration,accountName);
    validateUserAgent(expectedUserAgentPattern,new URL("http://azure.com"),abfsConfiguration,false);
  }
  @Test public void verifyUserAgent() throws Exception {
    String expectedUserAgentPattern="Azure Blob FS\\/1.0 \\(JavaJRE ([^\\)]+)\\) Partner Service";
    final Configuration configuration=new Configuration();
    configuration.set(ConfigurationKeys.FS_AZURE_USER_AGENT_PREFIX_KEY,"Partner Service");
    AbfsConfiguration abfsConfiguration=new AbfsConfiguration(configuration,accountName);
    validateUserAgent(expectedUserAgentPattern,new URL("http://azure.com"),abfsConfiguration,false);
  }
  @Test public void verifyUserAgentWithSSLProvider() throws Exception {
    String expectedUserAgentPattern="Azure Blob FS\\/1.0 \\(JavaJRE ([^\\)]+) SunJSSE-1.8\\) Partner Service";
    final Configuration configuration=new Configuration();
    configuration.set(ConfigurationKeys.FS_AZURE_USER_AGENT_PREFIX_KEY,"Partner Service");
    configuration.set(ConfigurationKeys.FS_AZURE_SSL_CHANNEL_MODE_KEY,SSLSocketFactoryEx.SSLChannelMode.Default_JSSE.name());
    AbfsConfiguration abfsConfiguration=new AbfsConfiguration(configuration,accountName);
    validateUserAgent(expectedUserAgentPattern,new URL("https://azure.com"),abfsConfiguration,true);
  }
}
