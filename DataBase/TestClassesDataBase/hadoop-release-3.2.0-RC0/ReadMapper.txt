/** 
 * Read mapper class.
 */
public static class ReadMapper extends IOStatMapper {
  public ReadMapper(){
  }
  @Override public Closeable getIOStream(  String name) throws IOException {
    InputStream in=fs.open(new Path(getDataDir(getConf()),name));
    if (compressionCodec != null)     in=compressionCodec.createInputStream(in);
    LOG.info("in = " + in.getClass().getName());
    return in;
  }
  @Override public Long doIO(  Reporter reporter,  String name,  long totalSize) throws IOException {
    InputStream in=(InputStream)this.stream;
    long actualSize=0;
    while (actualSize < totalSize) {
      int curSize=in.read(buffer,0,bufferSize);
      if (curSize < 0)       break;
      actualSize+=curSize;
      reporter.setStatus("reading " + name + "@"+ actualSize+ "/"+ totalSize+ " ::host = "+ hostName);
    }
    return Long.valueOf(actualSize);
  }
}
