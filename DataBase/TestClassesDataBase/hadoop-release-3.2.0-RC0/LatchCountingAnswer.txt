/** 
 * Counts on a  {@link CountDownLatch} after each call through to the method.
 */
private final class LatchCountingAnswer<T> implements Answer<T> {
  private final CountDownLatch latch;
  public LatchCountingAnswer(  CountDownLatch latch){
    this.latch=latch;
  }
  @Override @SuppressWarnings("unchecked") public T answer(  InvocationOnMock invocation) throws Throwable {
    T result=(T)invocation.callRealMethod();
    latch.countDown();
    LOG.info("Countdown, remaining latch count is {}.",latch.getCount());
    return result;
  }
}
