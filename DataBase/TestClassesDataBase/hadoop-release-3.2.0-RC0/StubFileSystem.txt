/** 
 * Stub FileSystem implementation used for testing the case of attempting distcp with XAttrs preserved on a file system that does not support XAttrs.  The base class implementation throws UnsupportedOperationException for  the XAttr methods, so we don't need to override them.
 */
public static class StubFileSystem extends FileSystem {
  @Override public FSDataOutputStream append(  Path f,  int bufferSize,  Progressable progress) throws IOException {
    return null;
  }
  @Override public FSDataOutputStream create(  Path f,  FsPermission permission,  boolean overwrite,  int bufferSize,  short replication,  long blockSize,  Progressable progress) throws IOException {
    return null;
  }
  @Override public boolean delete(  Path f,  boolean recursive) throws IOException {
    return false;
  }
  @Override public FileStatus getFileStatus(  Path f) throws IOException {
    return null;
  }
  @Override public URI getUri(){
    return URI.create("stubfs:///");
  }
  @Override public Path getWorkingDirectory(){
    return new Path(Path.SEPARATOR);
  }
  @Override public FileStatus[] listStatus(  Path f) throws IOException {
    return new FileStatus[0];
  }
  @Override public boolean mkdirs(  Path f,  FsPermission permission) throws IOException {
    return false;
  }
  @Override public FSDataInputStream open(  Path f,  int bufferSize) throws IOException {
    return null;
  }
  @Override public boolean rename(  Path src,  Path dst) throws IOException {
    return false;
  }
  @Override public void setWorkingDirectory(  Path dir){
  }
}
