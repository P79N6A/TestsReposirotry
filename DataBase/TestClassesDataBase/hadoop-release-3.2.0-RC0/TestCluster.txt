/** 
 * Testing the Cluster initialization.
 */
public class TestCluster {
  @Test @SuppressWarnings("unchecked") public void testProtocolProviderCreation() throws Exception {
    Iterator iterator=mock(Iterator.class);
    when(iterator.hasNext()).thenReturn(true,true,true,true);
    when(iterator.next()).thenReturn(getClientProtocolProvider()).thenThrow(new ServiceConfigurationError("Test error")).thenReturn(getClientProtocolProvider());
    Iterable frameworkLoader=mock(Iterable.class);
    when(frameworkLoader.iterator()).thenReturn(iterator);
    Cluster.frameworkLoader=frameworkLoader;
    Cluster testCluster=new Cluster(new Configuration());
    assertNotNull("ClientProtocol is expected",testCluster.getClient());
    verify(iterator,times(2)).next();
  }
  public ClientProtocolProvider getClientProtocolProvider(){
    return new ClientProtocolProvider(){
      @Override public ClientProtocol create(      Configuration conf) throws IOException {
        return mock(ClientProtocol.class);
      }
      @Override public ClientProtocol create(      InetSocketAddress addr,      Configuration conf) throws IOException {
        return mock(ClientProtocol.class);
      }
      @Override public void close(      ClientProtocol clientProtocol) throws IOException {
      }
    }
;
  }
}
