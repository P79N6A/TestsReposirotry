private class MyFileUploader extends JobResourceUploader {
  private SharedCacheClient mockscClient=mock(SharedCacheClient.class);
  private SharedCacheClient scClient=SharedCacheClient.createSharedCacheClient();
  MyFileUploader(  FileSystem submitFs,  Configuration conf) throws IOException {
    super(submitFs,false);
    scClient.init(conf);
    when(mockscClient.getFileChecksum(any(Path.class))).thenAnswer(new Answer<String>(){
      @Override public String answer(      InvocationOnMock invocation) throws Throwable {
        Path file=(Path)invocation.getArguments()[0];
        return scClient.getFileChecksum(file);
      }
    }
);
  }
  public void mockFileInSharedCache(  Path localFile,  URL remoteFile) throws YarnException, IOException {
    when(mockscClient.use(any(ApplicationId.class),eq(scClient.getFileChecksum(localFile)))).thenReturn(remoteFile);
  }
  @Override protected SharedCacheClient createSharedCacheClient(  Configuration c){
    return mockscClient;
  }
}
