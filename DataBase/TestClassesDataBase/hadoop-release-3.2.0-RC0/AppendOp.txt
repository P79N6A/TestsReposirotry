/** 
 * append operation 
 */
class AppendOp extends AtMostOnceOp {
  private final String fileName;
  private LastBlockWithStatus lbk;
  AppendOp(  DFSClient client,  String fileName){
    super("append",client);
    this.fileName=fileName;
  }
  @Override void prepare() throws Exception {
    final Path filePath=new Path(fileName);
    if (!dfs.exists(filePath)) {
      DFSTestUtil.createFile(dfs,filePath,BlockSize / 2,DataNodes,0);
    }
  }
  @Override void invoke() throws Exception {
    lbk=client.getNamenode().append(fileName,client.getClientName(),new EnumSetWritable<>(EnumSet.of(CreateFlag.APPEND)));
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    INodeFile fileNode=cluster.getNameNode(0).getNamesystem().getFSDirectory().getINode4Write(fileName).asFile();
    boolean fileIsUC=fileNode.isUnderConstruction();
    for (int i=0; i < CHECKTIMES && !fileIsUC; i++) {
      Thread.sleep(1000);
      fileNode=cluster.getNameNode(0).getNamesystem().getFSDirectory().getINode4Write(fileName).asFile();
      fileIsUC=fileNode.isUnderConstruction();
    }
    return fileIsUC;
  }
  @Override Object getResult(){
    return lbk;
  }
}
