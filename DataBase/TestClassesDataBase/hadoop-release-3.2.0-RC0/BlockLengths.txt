private static class BlockLengths {
  private final int[] blockLengths;
  private final long safeLength;
  BlockLengths(  ErasureCodingPolicy policy,  int[] blockLengths){
    this.blockLengths=blockLengths;
    long[] longArray=Arrays.stream(blockLengths).asLongStream().toArray();
    this.safeLength=StripedBlockUtil.getSafeLength(policy,longArray);
  }
  @Override public String toString(){
    return new ToStringBuilder(this).append("blockLengths",getBlockLengths()).append("safeLength",getSafeLength()).toString();
  }
  /** 
 * Length of each block in a block group.
 */
  public int[] getBlockLengths(){
    return blockLengths;
  }
  /** 
 * Safe length, calculated by the block lengths.
 */
  public long getSafeLength(){
    return safeLength;
  }
}
