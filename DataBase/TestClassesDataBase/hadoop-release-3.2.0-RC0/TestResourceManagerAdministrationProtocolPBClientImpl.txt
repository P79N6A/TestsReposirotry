/** 
 * Test ResourceManagerAdministrationProtocolPBClientImpl. Test a methods and the proxy without  logic.
 */
public class TestResourceManagerAdministrationProtocolPBClientImpl {
  private static ResourceManager resourceManager;
  private static final Logger LOG=LoggerFactory.getLogger(TestResourceManagerAdministrationProtocolPBClientImpl.class);
  private final RecordFactory recordFactory=RecordFactoryProvider.getRecordFactory(null);
  private static ResourceManagerAdministrationProtocol client;
  /** 
 * Start resource manager server
 */
  @BeforeClass public static void setUpResourceManager() throws IOException, InterruptedException {
    Configuration.addDefaultResource("config-with-security.xml");
    Configuration configuration=new YarnConfiguration();
    resourceManager=new ResourceManager(){
      @Override protected void doSecureLogin() throws IOException {
      }
    }
;
    final CountDownLatch rmStartedSignal=new CountDownLatch(1);
    ServiceStateChangeListener rmStateChangeListener=new ServiceStateChangeListener(){
      @Override public void stateChanged(      Service service){
        if (service.getServiceState() == STATE.STARTED) {
          rmStartedSignal.countDown();
        }
      }
    }
;
    resourceManager.registerServiceListener(rmStateChangeListener);
    resourceManager.init(configuration);
    new Thread(){
      public void run(){
        resourceManager.start();
      }
    }
.start();
    boolean rmStarted=rmStartedSignal.await(60000L,TimeUnit.MILLISECONDS);
    Assert.assertTrue("ResourceManager failed to start up.",rmStarted);
    LOG.info("ResourceManager RMAdmin address: " + configuration.get(YarnConfiguration.RM_ADMIN_ADDRESS));
    client=new ResourceManagerAdministrationProtocolPBClientImpl(1L,getProtocolAddress(configuration),configuration);
  }
  /** 
 * Test method refreshQueues. This method is present and it works.
 */
  @Test public void testRefreshQueues() throws Exception {
    RefreshQueuesRequest request=recordFactory.newRecordInstance(RefreshQueuesRequest.class);
    RefreshQueuesResponse response=client.refreshQueues(request);
    assertNotNull(response);
  }
  /** 
 * Test method refreshNodes. This method is present and it works.
 */
  @Test public void testRefreshNodes() throws Exception {
    resourceManager.getClientRMService();
    RefreshNodesRequest request=RefreshNodesRequest.newInstance(DecommissionType.NORMAL);
    RefreshNodesResponse response=client.refreshNodes(request);
    assertNotNull(response);
  }
  /** 
 * Test method refreshSuperUserGroupsConfiguration. This method present and it works.
 */
  @Test public void testRefreshSuperUserGroupsConfiguration() throws Exception {
    RefreshSuperUserGroupsConfigurationRequest request=recordFactory.newRecordInstance(RefreshSuperUserGroupsConfigurationRequest.class);
    RefreshSuperUserGroupsConfigurationResponse response=client.refreshSuperUserGroupsConfiguration(request);
    assertNotNull(response);
  }
  /** 
 * Test method refreshUserToGroupsMappings. This method is present and it works.
 */
  @Test public void testRefreshUserToGroupsMappings() throws Exception {
    RefreshUserToGroupsMappingsRequest request=recordFactory.newRecordInstance(RefreshUserToGroupsMappingsRequest.class);
    RefreshUserToGroupsMappingsResponse response=client.refreshUserToGroupsMappings(request);
    assertNotNull(response);
  }
  /** 
 * Test method refreshAdminAcls. This method is present and it works.
 */
  @Test public void testRefreshAdminAcls() throws Exception {
    RefreshAdminAclsRequest request=recordFactory.newRecordInstance(RefreshAdminAclsRequest.class);
    RefreshAdminAclsResponse response=client.refreshAdminAcls(request);
    assertNotNull(response);
  }
  @Test public void testUpdateNodeResource() throws Exception {
    UpdateNodeResourceRequest request=recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);
    UpdateNodeResourceResponse response=client.updateNodeResource(request);
    assertNotNull(response);
  }
  @Test public void testRefreshServiceAcls() throws Exception {
    RefreshServiceAclsRequest request=recordFactory.newRecordInstance(RefreshServiceAclsRequest.class);
    RefreshServiceAclsResponse response=client.refreshServiceAcls(request);
    assertNotNull(response);
  }
  /** 
 * Stop server
 */
  @AfterClass public static void tearDownResourceManager() throws InterruptedException {
    if (resourceManager != null) {
      LOG.info("Stopping ResourceManager...");
      resourceManager.stop();
    }
  }
  private static InetSocketAddress getProtocolAddress(  Configuration conf) throws IOException {
    return conf.getSocketAddr(YarnConfiguration.RM_ADMIN_ADDRESS,YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,YarnConfiguration.DEFAULT_RM_ADMIN_PORT);
  }
}
