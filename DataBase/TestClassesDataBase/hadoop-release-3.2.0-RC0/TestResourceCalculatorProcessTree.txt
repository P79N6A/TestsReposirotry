/** 
 * A JUnit test to test  {@link ResourceCalculatorPlugin}
 */
public class TestResourceCalculatorProcessTree {
public static class EmptyProcessTree extends ResourceCalculatorProcessTree {
    public EmptyProcessTree(    String pid){
      super(pid);
    }
    public void updateProcessTree(){
    }
    public String getProcessTreeDump(){
      return "Empty tree for testing";
    }
    public long getRssMemorySize(    int age){
      return 0;
    }
    @SuppressWarnings("deprecation") public long getCumulativeRssmem(    int age){
      return 0;
    }
    public long getVirtualMemorySize(    int age){
      return 0;
    }
    @SuppressWarnings("deprecation") public long getCumulativeVmem(    int age){
      return 0;
    }
    public long getCumulativeCpuTime(){
      return 0;
    }
    @Override public float getCpuUsagePercent(){
      return UNAVAILABLE;
    }
    public boolean checkPidPgrpidForMatch(){
      return false;
    }
  }
  @Test public void testCreateInstance(){
    ResourceCalculatorProcessTree tree;
    tree=ResourceCalculatorProcessTree.getResourceCalculatorProcessTree("1",EmptyProcessTree.class,new Configuration());
    assertNotNull(tree);
    assertThat(tree,instanceOf(EmptyProcessTree.class));
  }
  @Test public void testCreatedInstanceConfigured(){
    ResourceCalculatorProcessTree tree;
    Configuration conf=new Configuration();
    tree=ResourceCalculatorProcessTree.getResourceCalculatorProcessTree("1",EmptyProcessTree.class,conf);
    assertNotNull(tree);
    assertThat(tree.getConf(),sameInstance(conf));
  }
}
