/** 
 * Basic Contract test for Azure BlobFileSystem.
 */
public class ITestAzureBlobFileSystemBasics extends FileSystemContractBaseTest {
  private final ABFSContractTestBinding binding;
  public ITestAzureBlobFileSystemBasics() throws Exception {
    binding=new ABFSContractTestBinding(false);
  }
  @Before public void setUp() throws Exception {
    binding.setup();
    fs=binding.getFileSystem();
  }
  @Override public void tearDown() throws Exception {
    try {
      super.tearDown();
    }
  finally {
      binding.teardown();
    }
  }
  @Test public void testListOnFolderWithNoChildren() throws IOException {
    assertTrue(fs.mkdirs(path("testListStatus/c/1")));
    FileStatus[] paths;
    paths=fs.listStatus(path("testListStatus"));
    assertEquals(1,paths.length);
    paths=fs.listStatus(path("testListStatus/c"));
    assertEquals(1,paths.length);
    fs.delete(path("testListStatus/c/1"),true);
    paths=fs.listStatus(path("testListStatus/c"));
    assertEquals(0,paths.length);
    assertTrue(fs.delete(path("testListStatus"),true));
  }
  @Test public void testListOnfileAndFolder() throws IOException {
    Path folderPath=path("testListStatus/folder");
    Path filePath=path("testListStatus/file");
    assertTrue(fs.mkdirs(folderPath));
    ContractTestUtils.touch(fs,filePath);
    FileStatus[] listFolderStatus;
    listFolderStatus=fs.listStatus(path("testListStatus"));
    assertEquals(filePath,listFolderStatus[0].getPath());
    FileStatus[] listFileStatus=fs.listStatus(filePath);
    assertEquals(filePath,listFileStatus[0].getPath());
  }
  @Override @Ignore("Not implemented in ABFS yet") public void testMkdirsWithUmask() throws Exception {
  }
}
