/** 
 * Test copy operation.
 */
public class ITestAzureBlobFileSystemCopy extends AbstractAbfsIntegrationTest {
  public ITestAzureBlobFileSystemCopy() throws Exception {
    super();
  }
  @Test public void testCopyFromLocalFileSystem() throws Exception {
    final AzureBlobFileSystem fs=getFileSystem();
    Path localFilePath=new Path(System.getProperty("test.build.data","azure_test"));
    FileSystem localFs=FileSystem.getLocal(new Configuration());
    localFs.delete(localFilePath,true);
    try {
      writeString(localFs,localFilePath,"Testing");
      Path dstPath=new Path("copiedFromLocal");
      assertTrue(FileUtil.copy(localFs,localFilePath,fs,dstPath,false,fs.getConf()));
      assertIsFile(fs,dstPath);
      assertEquals("Testing",readString(fs,dstPath));
      fs.delete(dstPath,true);
    }
  finally {
      localFs.delete(localFilePath,true);
    }
  }
  private String readString(  FileSystem fs,  Path testFile) throws IOException {
    return readString(fs.open(testFile));
  }
  private String readString(  FSDataInputStream inputStream) throws IOException {
    try (BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream))){
      final int bufferSize=1024;
      char[] buffer=new char[bufferSize];
      int count=reader.read(buffer,0,bufferSize);
      if (count > bufferSize) {
        throw new IOException("Exceeded buffer size");
      }
      return new String(buffer,0,count);
    }
   }
  private void writeString(  FileSystem fs,  Path path,  String value) throws IOException {
    writeString(fs.create(path,true),value);
  }
  private void writeString(  FSDataOutputStream outputStream,  String value) throws IOException {
    try (BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(outputStream))){
      writer.write(value);
    }
   }
}
