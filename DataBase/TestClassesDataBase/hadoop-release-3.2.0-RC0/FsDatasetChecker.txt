static class FsDatasetChecker extends SimulatedFSDataset {
static class Factory extends FsDatasetSpi.Factory<SimulatedFSDataset> {
    @Override public SimulatedFSDataset newInstance(    DataNode datanode,    DataStorage storage,    Configuration conf) throws IOException {
      return new FsDatasetChecker(storage,conf);
    }
    @Override public boolean isSimulated(){
      return true;
    }
  }
  public static void setFactory(  Configuration conf){
    conf.set(DFSConfigKeys.DFS_DATANODE_FSDATASET_FACTORY_KEY,Factory.class.getName());
  }
  public FsDatasetChecker(  DataStorage storage,  Configuration conf){
    super(storage,conf);
  }
  /** 
 * Override createRbw to verify that the block length that is passed is correct. This requires both DFSOutputStream and BlockReceiver to correctly propagate the hint to FsDatasetSpi.
 */
  @Override public synchronized ReplicaHandler createRbw(  StorageType storageType,  String storageId,  ExtendedBlock b,  boolean allowLazyPersist) throws IOException {
    assertThat(b.getLocalBlock().getNumBytes(),is(EXPECTED_BLOCK_LENGTH));
    return super.createRbw(storageType,storageId,b,allowLazyPersist);
  }
}
