/** 
 * Test the behavior when disabling the Router quota.
 */
public class TestDisableRouterQuota {
  private static Router router;
  @BeforeClass public static void setUp() throws Exception {
    router=new Router();
    Configuration routerConf=new RouterConfigBuilder().quota(false).rpc().build();
    router.init(routerConf);
    router.setRouterId("TestRouterId");
    router.start();
  }
  @AfterClass public static void tearDown() throws IOException {
    if (router != null) {
      router.stop();
      router.close();
    }
  }
  @Before public void checkDisableQuota(){
    assertFalse(router.isQuotaEnabled());
  }
  @Test public void testSetQuota() throws Exception {
    long nsQuota=1024;
    long ssQuota=1024;
    try {
      Quota quotaModule=router.getRpcServer().getQuotaModule();
      quotaModule.setQuota("/test",nsQuota,ssQuota,null);
      fail("The setQuota call should fail.");
    }
 catch (    IOException ioe) {
      GenericTestUtils.assertExceptionContains("The quota system is disabled in Router.",ioe);
    }
  }
  @Test public void testGetQuotaUsage() throws Exception {
    try {
      Quota quotaModule=router.getRpcServer().getQuotaModule();
      quotaModule.getQuotaUsage("/test");
      fail("The getQuotaUsage call should fail.");
    }
 catch (    IOException ioe) {
      GenericTestUtils.assertExceptionContains("The quota system is disabled in Router.",ioe);
    }
  }
}
