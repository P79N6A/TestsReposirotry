/** 
 * Test multipart upload support methods and classes.
 */
public class TestS3AMultipartUploaderSupport extends HadoopTestBase {
  @Test public void testRoundTrip() throws Throwable {
    Pair<Long,String> result=roundTrip("tag",1);
    assertEquals("tag",result.getRight());
    assertEquals(1,result.getLeft().longValue());
  }
  @Test public void testRoundTrip2() throws Throwable {
    long len=1L + Integer.MAX_VALUE;
    Pair<Long,String> result=roundTrip("11223344",len);
    assertEquals("11223344",result.getRight());
    assertEquals(len,result.getLeft().longValue());
  }
  @Test public void testNoEtag() throws Throwable {
    intercept(IllegalArgumentException.class,() -> buildPartHandlePayload("",1));
  }
  @Test public void testNoLen() throws Throwable {
    intercept(IllegalArgumentException.class,() -> buildPartHandlePayload("tag",0));
  }
  @Test public void testBadPayload() throws Throwable {
    intercept(EOFException.class,() -> parsePartHandlePayload(new byte[0]));
  }
  @Test public void testBadHeader() throws Throwable {
    byte[] bytes=buildPartHandlePayload("tag",1);
    bytes[2]='f';
    intercept(IOException.class,"header",() -> parsePartHandlePayload(bytes));
  }
  private Pair<Long,String> roundTrip(  final String tag,  final long len) throws IOException {
    byte[] bytes=buildPartHandlePayload(tag,len);
    return parsePartHandlePayload(bytes);
  }
}
