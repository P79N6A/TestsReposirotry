public class DummyContainerManager implements ContainerManagementProtocol {
  private ContainerStatus status=null;
  @Override public GetContainerStatusesResponse getContainerStatuses(  GetContainerStatusesRequest request) throws IOException {
    List<ContainerStatus> statuses=new ArrayList<ContainerStatus>();
    statuses.add(status);
    return GetContainerStatusesResponse.newInstance(statuses,null);
  }
  @Override public StartContainersResponse startContainers(  StartContainersRequest requests) throws IOException {
    StartContainerRequest request=requests.getStartContainerRequests().get(0);
    ContainerTokenIdentifier containerTokenIdentifier=MRApp.newContainerTokenIdentifier(request.getContainerToken());
    Assert.assertEquals(MRApp.NM_HOST + ":" + MRApp.NM_PORT,containerTokenIdentifier.getNmHostAddress());
    StartContainersResponse response=recordFactory.newRecordInstance(StartContainersResponse.class);
    status=recordFactory.newRecordInstance(ContainerStatus.class);
    try {
      Thread.sleep(15000);
    }
 catch (    Exception e) {
      LOG.error("Setup thread sleep interrupted: ",e);
      throw new UndeclaredThrowableException(e);
    }
    status.setState(ContainerState.RUNNING);
    status.setContainerId(containerTokenIdentifier.getContainerID());
    status.setExitStatus(0);
    return response;
  }
  @Override public StopContainersResponse stopContainers(  StopContainersRequest request) throws IOException {
    Exception e=new Exception("Dummy function",new Exception("Dummy function cause"));
    throw new IOException(e);
  }
  @Override @Deprecated public IncreaseContainersResourceResponse increaseContainersResource(  IncreaseContainersResourceRequest request) throws IOException, IOException {
    Exception e=new Exception("Dummy function",new Exception("Dummy function cause"));
    throw new IOException(e);
  }
  @Override public SignalContainerResponse signalToContainer(  SignalContainerRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public ResourceLocalizationResponse localize(  ResourceLocalizationRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public ReInitializeContainerResponse reInitializeContainer(  ReInitializeContainerRequest request) throws YarnException, IOException {
    return null;
  }
  @Override public RestartContainerResponse restartContainer(  ContainerId containerId) throws YarnException, IOException {
    return null;
  }
  @Override public RollbackResponse rollbackLastReInitialization(  ContainerId containerId) throws YarnException, IOException {
    return null;
  }
  @Override public CommitResponse commitLastReInitialization(  ContainerId containerId) throws YarnException, IOException {
    return null;
  }
  @Override public ContainerUpdateResponse updateContainer(  ContainerUpdateRequest request) throws YarnException, IOException {
    return null;
  }
}
