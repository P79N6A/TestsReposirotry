/** 
 * renameSnapshot 
 */
class RenameSnapshotOp extends AtMostOnceOp {
  private final String dir;
  private final String oldName;
  private final String newName;
  RenameSnapshotOp(  DFSClient client,  String dir,  String oldName,  String newName){
    super("renameSnapshot",client);
    this.dir=dir;
    this.oldName=oldName;
    this.newName=newName;
  }
  @Override void prepare() throws Exception {
    final Path dirPath=new Path(dir);
    if (!dfs.exists(dirPath)) {
      dfs.mkdirs(dirPath);
    }
    Path sPath=SnapshotTestHelper.getSnapshotRoot(dirPath,oldName);
    if (!dfs.exists(sPath)) {
      dfs.allowSnapshot(dirPath);
      dfs.createSnapshot(dirPath,oldName);
    }
  }
  @Override void invoke() throws Exception {
    client.renameSnapshot(dir,oldName,newName);
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    final Path sPath=SnapshotTestHelper.getSnapshotRoot(new Path(dir),newName);
    boolean snapshotRenamed=dfs.exists(sPath);
    for (int i=0; i < CHECKTIMES && !snapshotRenamed; i++) {
      Thread.sleep(1000);
      snapshotRenamed=dfs.exists(sPath);
    }
    return snapshotRenamed;
  }
  @Override Object getResult(){
    return null;
  }
}
