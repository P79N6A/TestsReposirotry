/** 
 * Directory creation or deletion.
 */
class DirRename extends Modification {
  private final TestDirectoryTree.Node srcParent;
  private final TestDirectoryTree.Node dstParent;
  private final Path srcPath;
  private final Path dstPath;
  private final HashMap<Path,FileStatus> statusMap;
  DirRename(  Path file,  FileSystem fs,  TestDirectoryTree.Node src,  TestDirectoryTree.Node dst) throws Exception {
    super(file,fs,"dirrename");
    this.srcParent=src;
    this.dstParent=dst;
    dstPath=new Path(dstParent.nodePath,"sub" + dstParent.nonSnapshotChildren.size());
    if (srcParent.nonSnapshotChildren.isEmpty()) {
      srcPath=new Path(srcParent.nodePath,"sub" + srcParent.nonSnapshotChildren.size());
      TestDirectoryTree.Node newChild=new TestDirectoryTree.Node(srcPath,srcParent.level + 1,srcParent,hdfs);
      newChild.initFileList(hdfs,srcParent.nodePath.getName(),BLOCKSIZE,REPLICATION,seed,2);
      srcParent.nonSnapshotChildren.add(newChild);
    }
 else {
      srcPath=new Path(srcParent.nodePath,"sub" + (srcParent.nonSnapshotChildren.size() - 1));
    }
    this.statusMap=new HashMap<Path,FileStatus>();
  }
  @Override void loadSnapshots() throws Exception {
    for (    Path snapshotRoot : snapshotList) {
      Path snapshotDir=SnapshotTestHelper.getSnapshotFile(snapshotRoot,srcPath);
      if (snapshotDir != null) {
        FileStatus status=fs.exists(snapshotDir) ? fs.getFileStatus(snapshotDir) : null;
        statusMap.put(snapshotDir,status);
        Path snapshotFile=new Path(snapshotDir,"file0");
        status=fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile) : null;
        statusMap.put(snapshotFile,status);
      }
    }
  }
  @Override void modify() throws Exception {
    hdfs.rename(srcPath,dstPath);
    TestDirectoryTree.Node newDstChild=new TestDirectoryTree.Node(dstPath,dstParent.level + 1,dstParent,hdfs);
    dstParent.nonSnapshotChildren.add(newDstChild);
  }
  @Override void checkSnapshots() throws Exception {
    for (    Path snapshot : statusMap.keySet()) {
      FileStatus currentStatus=fs.exists(snapshot) ? fs.getFileStatus(snapshot) : null;
      FileStatus originalStatus=statusMap.get(snapshot);
      assertEquals(currentStatus,originalStatus);
      if (currentStatus != null) {
        assertEquals(currentStatus.toString(),originalStatus.toString());
      }
    }
  }
}
