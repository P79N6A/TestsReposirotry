private class MyResourceTracker5 implements ResourceTracker {
  public NodeAction registerNodeAction=NodeAction.NORMAL;
  @Override public RegisterNodeManagerResponse registerNodeManager(  RegisterNodeManagerRequest request) throws YarnException, IOException {
    RegisterNodeManagerResponse response=recordFactory.newRecordInstance(RegisterNodeManagerResponse.class);
    response.setNodeAction(registerNodeAction);
    response.setContainerTokenMasterKey(createMasterKey());
    response.setNMTokenMasterKey(createMasterKey());
    return response;
  }
  @Override public NodeHeartbeatResponse nodeHeartbeat(  NodeHeartbeatRequest request) throws YarnException, IOException {
    heartBeatID++;
    if (heartBeatID == 1) {
      throw new EOFException("NodeHeartbeat exception");
    }
 else {
      throw new java.net.ConnectException("NodeHeartbeat exception");
    }
  }
  @Override public UnRegisterNodeManagerResponse unRegisterNodeManager(  UnRegisterNodeManagerRequest request) throws YarnException, IOException {
    return recordFactory.newRecordInstance(UnRegisterNodeManagerResponse.class);
  }
}
