public class TestRunnableCallable extends HTestCase {
public static class R implements Runnable {
    boolean RUN;
    @Override public void run(){
      RUN=true;
    }
  }
public static class C implements Callable {
    boolean RUN;
    @Override public Object call() throws Exception {
      RUN=true;
      return null;
    }
  }
public static class CEx implements Callable {
    @Override public Object call() throws Exception {
      throw new Exception();
    }
  }
  @Test public void runnable() throws Exception {
    R r=new R();
    RunnableCallable rc=new RunnableCallable(r);
    rc.run();
    assertTrue(r.RUN);
    r=new R();
    rc=new RunnableCallable(r);
    rc.call();
    assertTrue(r.RUN);
    assertEquals(rc.toString(),"R");
  }
  @Test public void callable() throws Exception {
    C c=new C();
    RunnableCallable rc=new RunnableCallable(c);
    rc.run();
    assertTrue(c.RUN);
    c=new C();
    rc=new RunnableCallable(c);
    rc.call();
    assertTrue(c.RUN);
    assertEquals(rc.toString(),"C");
  }
  @Test(expected=RuntimeException.class) public void callableExRun() throws Exception {
    CEx c=new CEx();
    RunnableCallable rc=new RunnableCallable(c);
    rc.run();
  }
}
