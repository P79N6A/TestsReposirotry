private static class TestBlockReaderLocalReadCorrupt extends BlockReaderLocalTest {
  boolean usingChecksums=false;
  @Override public void setup(  File blockFile,  boolean usingChecksums) throws IOException {
    RandomAccessFile bf=null;
    this.usingChecksums=usingChecksums;
    try {
      bf=new RandomAccessFile(blockFile,"rw");
      bf.seek(1539);
      bf.write(new byte[]{0,0,0,0,0,0,0,0,0,0,0,0,0,0});
    }
  finally {
      if (bf != null)       bf.close();
    }
  }
  public void doTest(  BlockReaderLocal reader,  byte original[]) throws IOException {
    byte buf[]=new byte[TEST_LENGTH];
    try {
      reader.readFully(buf,0,10);
      assertArrayRegionsEqual(original,0,buf,0,10);
      reader.readFully(buf,10,100);
      assertArrayRegionsEqual(original,10,buf,10,100);
      reader.readFully(buf,110,700);
      assertArrayRegionsEqual(original,110,buf,110,700);
      reader.skip(1);
      reader.readFully(buf,811,5);
      assertArrayRegionsEqual(original,811,buf,811,5);
      reader.readFully(buf,816,900);
      if (usingChecksums) {
        Assert.fail("did not detect corruption");
      }
    }
 catch (    ChecksumException e) {
      if (!usingChecksums) {
        Assert.fail("didn't expect to get ChecksumException: not " + "using checksums.");
      }
    }
  }
}
