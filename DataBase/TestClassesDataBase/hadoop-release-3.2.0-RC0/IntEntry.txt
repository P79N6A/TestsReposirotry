/** 
 * Entries of  {@link LightWeightCache} in this test 
 */
private static class IntEntry implements LightWeightCache.Entry, Comparable<IntEntry> {
  private LightWeightGSet.LinkedElement next;
  final int id;
  final int value;
  private long expirationTime=0;
  IntEntry(  int id,  int value){
    this.id=id;
    this.value=value;
  }
  @Override public boolean equals(  Object obj){
    return obj != null && obj instanceof IntEntry && value == ((IntEntry)obj).value;
  }
  @Override public int hashCode(){
    return value;
  }
  @Override public int compareTo(  IntEntry that){
    return value - that.value;
  }
  @Override public String toString(){
    return id + "#" + value+ ",expirationTime="+ expirationTime;
  }
  @Override public LightWeightGSet.LinkedElement getNext(){
    return next;
  }
  @Override public void setNext(  LightWeightGSet.LinkedElement e){
    next=e;
  }
  @Override public void setExpirationTime(  long timeNano){
    this.expirationTime=timeNano;
  }
  @Override public long getExpirationTime(){
    return expirationTime;
  }
}
