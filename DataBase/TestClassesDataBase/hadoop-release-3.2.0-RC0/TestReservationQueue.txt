/** 
 * Test class for dynamic auto created leaf queues.
 * @see ReservationQueue
 */
public class TestReservationQueue {
  private CapacitySchedulerConfiguration csConf;
  private CapacitySchedulerContext csContext;
  final static int DEF_MAX_APPS=10000;
  final static int GB=1024;
  private final ResourceCalculator resourceCalculator=new DefaultResourceCalculator();
  private ReservationQueue autoCreatedLeafQueue;
  @Before public void setup() throws IOException {
    csConf=new CapacitySchedulerConfiguration();
    YarnConfiguration conf=new YarnConfiguration();
    csContext=mock(CapacitySchedulerContext.class);
    when(csContext.getConfiguration()).thenReturn(csConf);
    when(csContext.getConf()).thenReturn(conf);
    when(csContext.getMinimumResourceCapability()).thenReturn(Resources.createResource(GB,1));
    when(csContext.getMaximumResourceCapability()).thenReturn(Resources.createResource(16 * GB,32));
    when(csContext.getClusterResource()).thenReturn(Resources.createResource(100 * 16 * GB,100 * 32));
    when(csContext.getResourceCalculator()).thenReturn(resourceCalculator);
    RMContext mockRMContext=TestUtils.getMockRMContext();
    when(csContext.getRMContext()).thenReturn(mockRMContext);
    PlanQueue pq=new PlanQueue(csContext,"root",null,null);
    autoCreatedLeafQueue=new ReservationQueue(csContext,"a",pq);
  }
  private void validateAutoCreatedLeafQueue(  double capacity){
    assertTrue(" actual capacity: " + autoCreatedLeafQueue.getCapacity(),autoCreatedLeafQueue.getCapacity() - capacity < CSQueueUtils.EPSILON);
    assertEquals(autoCreatedLeafQueue.maxApplications,DEF_MAX_APPS);
    assertEquals(autoCreatedLeafQueue.maxApplicationsPerUser,DEF_MAX_APPS);
  }
  @Test public void testAddSubtractCapacity() throws Exception {
    autoCreatedLeafQueue.setCapacity(1.0F);
    validateAutoCreatedLeafQueue(1);
    autoCreatedLeafQueue.setEntitlement(new QueueEntitlement(0.9f,1f));
    validateAutoCreatedLeafQueue(0.9);
    autoCreatedLeafQueue.setEntitlement(new QueueEntitlement(1f,1f));
    validateAutoCreatedLeafQueue(1);
    autoCreatedLeafQueue.setEntitlement(new QueueEntitlement(0f,1f));
    validateAutoCreatedLeafQueue(0);
    try {
      autoCreatedLeafQueue.setEntitlement(new QueueEntitlement(1.1f,1f));
      fail();
    }
 catch (    SchedulerDynamicEditException iae) {
      validateAutoCreatedLeafQueue(1);
    }
    try {
      autoCreatedLeafQueue.setEntitlement(new QueueEntitlement(-0.1f,1f));
      fail();
    }
 catch (    SchedulerDynamicEditException iae) {
      validateAutoCreatedLeafQueue(1);
    }
  }
}
