/** 
 * Make sure that ViewFileSystem works when the root of an FS is mounted to a ViewFileSystem mount point.
 */
public class TestViewFileSystemAtHdfsRoot extends ViewFileSystemBaseTest {
  private static MiniDFSCluster cluster;
  private static final Configuration CONF=new Configuration();
  private static FileSystem fHdfs;
  @Override protected FileSystemTestHelper createFileSystemHelper(){
    return new FileSystemTestHelper("/tmp/TestViewFileSystemAtHdfsRoot");
  }
  @BeforeClass public static void clusterSetupAtBegining() throws IOException, LoginException, URISyntaxException {
    SupportsBlocks=true;
    CONF.setBoolean(DFSConfigKeys.DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY,true);
    cluster=new MiniDFSCluster.Builder(CONF).numDataNodes(2).build();
    cluster.waitClusterUp();
    fHdfs=cluster.getFileSystem();
  }
  @AfterClass public static void clusterShutdownAtEnd() throws Exception {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
  @Override @Before public void setUp() throws Exception {
    fsTarget=fHdfs;
    super.setUp();
  }
  /** 
 * Override this so that we don't set the targetTestRoot to any path under the root of the FS, and so that we don't try to delete the test dir, but rather only its contents.
 */
  @Override void initializeTargetTestRoot() throws IOException {
    targetTestRoot=fHdfs.makeQualified(new Path("/"));
    for (    FileStatus status : fHdfs.listStatus(targetTestRoot)) {
      fHdfs.delete(status.getPath(),true);
    }
  }
  @Override int getExpectedDelegationTokenCount(){
    return 1;
  }
  @Override int getExpectedDelegationTokenCountWithCredentials(){
    return 1;
  }
}
