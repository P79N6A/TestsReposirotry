/** 
 * Test class to validate FederationStateStoreFacade retry policy.
 */
public class TestFederationStateStoreFacadeRetry {
  private int maxRetries=4;
  private Configuration conf;
  @Before public void setup(){
    conf=new Configuration();
    conf.setInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES,maxRetries);
  }
  @Test public void testFacadeRetriableException() throws Exception {
    RetryPolicy policy=FederationStateStoreFacade.createRetryPolicy(conf);
    RetryAction action=policy.shouldRetry(new FederationStateStoreRetriableException(""),0,0,false);
    Assert.assertEquals(RetryAction.RETRY.action,action.action);
    action=policy.shouldRetry(new FederationStateStoreRetriableException(""),maxRetries,0,false);
    Assert.assertEquals(RetryAction.FAIL.action,action.action);
  }
  @Test public void testFacadeYarnException() throws Exception {
    RetryPolicy policy=FederationStateStoreFacade.createRetryPolicy(conf);
    RetryAction action=policy.shouldRetry(new YarnException(),0,0,false);
    Assert.assertEquals(RetryAction.FAIL.action,action.action);
  }
  @Test public void testFacadeStateStoreException() throws Exception {
    RetryPolicy policy=FederationStateStoreFacade.createRetryPolicy(conf);
    RetryAction action=policy.shouldRetry(new FederationStateStoreException("Error"),0,0,false);
    Assert.assertEquals(RetryAction.FAIL.action,action.action);
  }
  @Test public void testFacadeInvalidInputException() throws Exception {
    RetryPolicy policy=FederationStateStoreFacade.createRetryPolicy(conf);
    RetryAction action=policy.shouldRetry(new FederationStateStoreInvalidInputException(""),0,0,false);
    Assert.assertEquals(RetryAction.FAIL.action,action.action);
  }
  @Test public void testFacadeCacheRetriableException() throws Exception {
    RetryPolicy policy=FederationStateStoreFacade.createRetryPolicy(conf);
    RetryAction action=policy.shouldRetry(new CacheLoaderException(""),0,0,false);
    Assert.assertEquals(RetryAction.RETRY.action,action.action);
    action=policy.shouldRetry(new CacheLoaderException(""),maxRetries,0,false);
    Assert.assertEquals(RetryAction.FAIL.action,action.action);
  }
  @Test public void testFacadePoolInitRetriableException() throws Exception {
    RetryPolicy policy=FederationStateStoreFacade.createRetryPolicy(conf);
    RetryAction action=policy.shouldRetry(new PoolInitializationException(new YarnException()),0,0,false);
    Assert.assertEquals(RetryAction.RETRY.action,action.action);
    action=policy.shouldRetry(new PoolInitializationException(new YarnException()),maxRetries,0,false);
    Assert.assertEquals(RetryAction.FAIL.action,action.action);
  }
}
