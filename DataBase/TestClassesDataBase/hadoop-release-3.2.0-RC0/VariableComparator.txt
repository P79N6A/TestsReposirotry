public static class VariableComparator implements RawComparator<KeyWritable>, Configurable {
  private boolean readLen;
  public VariableComparator(){
  }
  @Override public void setConf(  Configuration conf){
    readLen=!conf.getBoolean("test.disable.key.read",false);
  }
  @Override public Configuration getConf(){
    return null;
  }
  public int compare(  KeyWritable k1,  KeyWritable k2){
    return k1.compareTo(k2);
  }
  @Override public int compare(  byte[] b1,  int s1,  int l1,  byte[] b2,  int s2,  int l2){
    final int n1;
    final int n2;
    if (readLen) {
      n1=WritableUtils.decodeVIntSize(b1[s1]);
      n2=WritableUtils.decodeVIntSize(b2[s2]);
    }
 else {
      n1=0;
      n2=0;
    }
    for (int i=s1 + n1; i < l1 - n1; ++i) {
      assertEquals("Invalid key at " + s1,(int)KeyWritable.keyFill,b1[i]);
    }
    for (int i=s2 + n2; i < l2 - n2; ++i) {
      assertEquals("Invalid key at " + s2,(int)KeyWritable.keyFill,b2[i]);
    }
    return l1 - l2;
  }
}
