private static class ResourcesRequestedMatcher extends ArgumentMatcher<LocalizationEvent> {
  final HashSet<LocalResourceRequest> resources=new HashSet<LocalResourceRequest>();
  ResourcesRequestedMatcher(  Map<String,LocalResource> allResources,  EnumSet<LocalResourceVisibility> vis) throws URISyntaxException {
    for (    Entry<String,LocalResource> e : allResources.entrySet()) {
      if (vis.contains(e.getValue().getVisibility())) {
        resources.add(new LocalResourceRequest(e.getValue()));
      }
    }
  }
  @Override public boolean matches(  Object o){
    ContainerLocalizationRequestEvent evt=(ContainerLocalizationRequestEvent)o;
    final HashSet<LocalResourceRequest> expected=new HashSet<LocalResourceRequest>(resources);
    for (    Collection<LocalResourceRequest> rc : evt.getRequestedResources().values()) {
      for (      LocalResourceRequest rsrc : rc) {
        if (!expected.remove(rsrc)) {
          return false;
        }
      }
    }
    return expected.isEmpty();
  }
}
