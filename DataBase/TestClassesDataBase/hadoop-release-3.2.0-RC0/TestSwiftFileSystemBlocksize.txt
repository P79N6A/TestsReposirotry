/** 
 * Tests that blocksize is never zero for a file, either in the FS default or the FileStatus value of a queried file 
 */
public class TestSwiftFileSystemBlocksize extends SwiftFileSystemBaseTest {
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testDefaultBlocksizeNonZero() throws Throwable {
    assertTrue("Zero default blocksize",0L != getFs().getDefaultBlockSize());
  }
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testDefaultBlocksizeRootPathNonZero() throws Throwable {
    assertTrue("Zero default blocksize",0L != getFs().getDefaultBlockSize(new Path("/")));
  }
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testDefaultBlocksizeOtherPathNonZero() throws Throwable {
    assertTrue("Zero default blocksize",0L != getFs().getDefaultBlockSize(new Path("/test")));
  }
  @Test(timeout=SWIFT_TEST_TIMEOUT) public void testBlocksizeNonZeroForFile() throws Throwable {
    Path smallfile=new Path("/test/smallfile");
    SwiftTestUtils.writeTextFile(fs,smallfile,"blocksize",true);
    createFile(smallfile);
    FileStatus status=getFs().getFileStatus(smallfile);
    assertTrue("Zero blocksize in " + status,status.getBlockSize() != 0L);
    assertTrue("Zero replication in " + status,status.getReplication() != 0L);
  }
}
