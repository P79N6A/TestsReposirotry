/** 
 * Test AzureBlobFileSystem back compatibility with WASB.
 */
public class ITestAzureBlobFileSystemBackCompat extends AbstractAbfsIntegrationTest {
  public ITestAzureBlobFileSystemBackCompat() throws Exception {
    super();
    Assume.assumeTrue(this.getAuthType() == AuthType.SharedKey);
  }
  @Test public void testBlobBackCompat() throws Exception {
    final AzureBlobFileSystem fs=this.getFileSystem();
    Assume.assumeFalse(fs.getIsNamespaceEnabled());
    String storageConnectionString=getBlobConnectionString();
    CloudStorageAccount storageAccount=CloudStorageAccount.parse(storageConnectionString);
    CloudBlobClient blobClient=storageAccount.createCloudBlobClient();
    CloudBlobContainer container=blobClient.getContainerReference(this.getFileSystemName());
    container.createIfNotExists();
    CloudBlockBlob blockBlob=container.getBlockBlobReference("test/10/10/10");
    blockBlob.uploadText("");
    blockBlob=container.getBlockBlobReference("test/10/123/3/2/1/3");
    blockBlob.uploadText("");
    FileStatus[] fileStatuses=fs.listStatus(new Path("/test/10/"));
    assertEquals(2,fileStatuses.length);
    assertEquals("10",fileStatuses[0].getPath().getName());
    assertTrue(fileStatuses[0].isDirectory());
    assertEquals(0,fileStatuses[0].getLen());
    assertEquals("123",fileStatuses[1].getPath().getName());
    assertTrue(fileStatuses[1].isDirectory());
    assertEquals(0,fileStatuses[1].getLen());
  }
  private String getBlobConnectionString(){
    String connectionString;
    if (isIPAddress()) {
      connectionString="DefaultEndpointsProtocol=http;BlobEndpoint=http://" + this.getHostName() + ":8880/"+ this.getAccountName().split("\\.")[0]+ ";AccountName="+ this.getAccountName().split("\\.")[0]+ ";AccountKey="+ this.getAccountKey();
    }
 else {
      connectionString="DefaultEndpointsProtocol=http;BlobEndpoint=http://" + this.getAccountName().replaceFirst("\\.dfs\\.",".blob.") + ";AccountName="+ this.getAccountName().split("\\.")[0]+ ";AccountKey="+ this.getAccountKey();
    }
    return connectionString;
  }
}
