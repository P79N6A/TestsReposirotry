public class DummyNMCollectorService implements CollectorNodemanagerProtocol {
  @Override public ReportNewCollectorInfoResponse reportNewCollectorInfo(  ReportNewCollectorInfoRequest request) throws YarnException, IOException {
    List<AppCollectorData> appCollectors=request.getAppCollectorsList();
    if (appCollectors.size() == 1) {
      AppCollectorData appCollector=appCollectors.get(0);
      Assert.assertEquals(appCollector.getApplicationId(),DEFAULT_APP_ID);
      Assert.assertEquals(appCollector.getCollectorAddr(),DEFAULT_COLLECTOR_ADDR);
      Assert.assertTrue(appCollector.getCollectorToken() == null || appCollector.getCollectorToken().equals(DEFAULT_COLLECTOR_TOKEN));
    }
 else {
      throw new YarnException(ILLEGAL_NUMBER_MESSAGE);
    }
    ReportNewCollectorInfoResponse response=RECORD_FACTORY.newRecordInstance(ReportNewCollectorInfoResponse.class);
    return response;
  }
  @Override public GetTimelineCollectorContextResponse getTimelineCollectorContext(  GetTimelineCollectorContextRequest request) throws YarnException, IOException {
    if (request.getApplicationId().getId() == 1) {
      return GetTimelineCollectorContextResponse.newInstance("test_user_id","test_flow_name","test_flow_version",12345678L);
    }
 else {
      throw new YarnException("The application is not found.");
    }
  }
}
