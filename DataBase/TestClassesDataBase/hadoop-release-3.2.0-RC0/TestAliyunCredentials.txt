/** 
 * Tests use of temporary credentials (for example, Aliyun STS & Aliyun OSS). This test extends a class that "does things to the root directory", and should only be used against transient filesystems where you don't care about the data.
 */
public class TestAliyunCredentials extends AbstractFSContractTestBase {
  @Override protected AbstractFSContract createContract(  Configuration conf){
    return new AliyunOSSContract(conf);
  }
  @Test public void testCredentialMissingAccessKeyId() throws Throwable {
    Configuration conf=new Configuration();
    conf.set(ACCESS_KEY_ID,"");
    conf.set(ACCESS_KEY_SECRET,"accessKeySecret");
    conf.set(SECURITY_TOKEN,"token");
    validateCredential(conf);
  }
  @Test public void testCredentialMissingAccessKeySecret() throws Throwable {
    Configuration conf=new Configuration();
    conf.set(ACCESS_KEY_ID,"accessKeyId");
    conf.set(ACCESS_KEY_SECRET,"");
    conf.set(SECURITY_TOKEN,"token");
    validateCredential(conf);
  }
  @Test public void testCredentialMissingRoleArn() throws Throwable {
    Configuration conf=new Configuration();
    conf.set(CREDENTIALS_PROVIDER_KEY,AssumedRoleCredentialProvider.NAME);
    conf.set(ROLE_ARN,"");
    validateCredential(conf);
  }
  @Test public void testCredentialMissingStsEndpoint() throws Throwable {
    Configuration conf=new Configuration();
    conf.set(CREDENTIALS_PROVIDER_KEY,AssumedRoleCredentialProvider.NAME);
    conf.set(ASSUMED_ROLE_STS_ENDPOINT,"");
    validateCredential(conf);
  }
  @Test public void testCredentialInvalidSessionName() throws Throwable {
    Configuration conf=new Configuration();
    conf.set(CREDENTIALS_PROVIDER_KEY,AssumedRoleCredentialProvider.NAME);
    conf.set(ASSUMED_ROLE_SESSION_NAME,"hadoop oss");
    validateCredential(conf);
  }
  private void validateCredential(  URI uri,  Configuration conf){
    try {
      CredentialsProvider provider=AliyunOSSUtils.getCredentialsProvider(uri,conf);
      Credentials credentials=provider.getCredentials();
      fail("Expected a CredentialInitializationException, got " + credentials);
    }
 catch (    InvalidCredentialsException expected) {
    }
catch (    IOException e) {
      Throwable cause=e.getCause();
      if (cause instanceof InvocationTargetException) {
        boolean isInstance=((InvocationTargetException)cause).getTargetException() instanceof InvalidCredentialsException;
        if (!isInstance) {
          fail("Unexpected exception.");
        }
      }
 else {
        fail("Unexpected exception.");
      }
    }
  }
  private void validateCredential(  Configuration conf){
    validateCredential(null,conf);
  }
}
