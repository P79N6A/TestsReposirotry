public static class MyAccessControlEnforcer implements AccessControlEnforcer {
  AccessControlEnforcer ace;
  public MyAccessControlEnforcer(  AccessControlEnforcer defaultEnforcer){
    this.ace=defaultEnforcer;
  }
  @Override public void checkPermission(  String fsOwner,  String supergroup,  UserGroupInformation ugi,  INodeAttributes[] inodeAttrs,  INode[] inodes,  byte[][] pathByNameArr,  int snapshotId,  String path,  int ancestorIndex,  boolean doCheckOwner,  FsAction ancestorAccess,  FsAction parentAccess,  FsAction access,  FsAction subAccess,  boolean ignoreEmptyDir) throws AccessControlException {
    if (ancestorIndex > 1 && inodes[1].getLocalName().equals("user") && inodes[2].getLocalName().equals("acl")) {
      this.ace.checkPermission(fsOwner,supergroup,ugi,inodeAttrs,inodes,pathByNameArr,snapshotId,path,ancestorIndex,doCheckOwner,ancestorAccess,parentAccess,access,subAccess,ignoreEmptyDir);
    }
    CALLED.add("checkPermission|" + ancestorAccess + "|"+ parentAccess+ "|"+ access);
  }
}
