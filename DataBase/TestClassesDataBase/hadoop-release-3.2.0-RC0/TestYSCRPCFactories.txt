public class TestYSCRPCFactories {
  @Test public void test(){
    testPbServerFactory();
    testPbClientFactory();
  }
  private void testPbServerFactory(){
    InetSocketAddress addr=new InetSocketAddress(0);
    Configuration conf=new Configuration();
    ResourceTracker instance=new ResourceTrackerTestImpl();
    Server server=null;
    try {
      server=RpcServerFactoryPBImpl.get().getServer(ResourceTracker.class,instance,addr,conf,null,1);
      server.start();
    }
 catch (    YarnRuntimeException e) {
      e.printStackTrace();
      Assert.fail("Failed to create server");
    }
 finally {
      server.stop();
    }
  }
  private void testPbClientFactory(){
    InetSocketAddress addr=new InetSocketAddress(0);
    System.err.println(addr.getHostName() + addr.getPort());
    Configuration conf=new Configuration();
    ResourceTracker instance=new ResourceTrackerTestImpl();
    Server server=null;
    try {
      server=RpcServerFactoryPBImpl.get().getServer(ResourceTracker.class,instance,addr,conf,null,1);
      server.start();
      System.err.println(server.getListenerAddress());
      System.err.println(NetUtils.getConnectAddress(server));
      ResourceTracker client=null;
      try {
        client=(ResourceTracker)RpcClientFactoryPBImpl.get().getClient(ResourceTracker.class,1,NetUtils.getConnectAddress(server),conf);
      }
 catch (      YarnRuntimeException e) {
        e.printStackTrace();
        Assert.fail("Failed to create client");
      }
    }
 catch (    YarnRuntimeException e) {
      e.printStackTrace();
      Assert.fail("Failed to create server");
    }
 finally {
      server.stop();
    }
  }
public class ResourceTrackerTestImpl implements ResourceTracker {
    @Override public RegisterNodeManagerResponse registerNodeManager(    RegisterNodeManagerRequest request) throws YarnException, IOException {
      return null;
    }
    @Override public NodeHeartbeatResponse nodeHeartbeat(    NodeHeartbeatRequest request) throws YarnException, IOException {
      return null;
    }
    @Override public UnRegisterNodeManagerResponse unRegisterNodeManager(    UnRegisterNodeManagerRequest request) throws YarnException, IOException {
      return null;
    }
  }
}
