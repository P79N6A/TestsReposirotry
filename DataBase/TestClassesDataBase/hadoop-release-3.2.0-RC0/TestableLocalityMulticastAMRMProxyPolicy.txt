/** 
 * A testable version of LocalityMulticastAMRMProxyPolicy that deterministically falls back to home sub-cluster for unresolved requests.
 */
private class TestableLocalityMulticastAMRMProxyPolicy extends LocalityMulticastAMRMProxyPolicy {
  @Override protected SubClusterId getSubClusterForUnResolvedRequest(  AllocationBookkeeper bookkeeper,  long allocationId){
    SubClusterId originalResult=super.getSubClusterForUnResolvedRequest(bookkeeper,allocationId);
    Map<SubClusterId,SubClusterInfo> activeClusters=null;
    try {
      activeClusters=getActiveSubclusters();
    }
 catch (    YarnException e) {
      throw new RuntimeException(e);
    }
    Assert.assertTrue(activeClusters.containsKey(originalResult));
    return getHomeSubCluster();
  }
}
