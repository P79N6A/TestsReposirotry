/** 
 * Metrics related RM HA testing. Metrics are mostly static singletons. To avoid interference with other RM HA tests, separating metric tests for RM HA into a separate file temporarily.
 */
public class TestRMHAMetrics {
  private Configuration configuration;
  private static final String RM1_ADDRESS="1.1.1.1:1";
  private static final String RM1_NODE_ID="rm1";
  private static final String RM2_ADDRESS="0.0.0.0:0";
  private static final String RM2_NODE_ID="rm2";
  @Before public void setUp() throws Exception {
    configuration=new Configuration();
    UserGroupInformation.setConfiguration(configuration);
    configuration.setBoolean(YarnConfiguration.RM_HA_ENABLED,true);
    configuration.set(YarnConfiguration.RM_HA_IDS,RM1_NODE_ID + "," + RM2_NODE_ID);
    for (    String confKey : YarnConfiguration.getServiceAddressConfKeys(configuration)) {
      configuration.set(HAUtil.addSuffix(confKey,RM1_NODE_ID),RM1_ADDRESS);
      configuration.set(HAUtil.addSuffix(confKey,RM2_NODE_ID),RM2_ADDRESS);
    }
    ClusterMetrics.destroy();
    QueueMetrics.clearQueueMetrics();
    DefaultMetricsSystem.shutdown();
  }
  @Test(timeout=300000) public void testMetricsAfterTransitionToStandby() throws Exception {
    configuration.setBoolean(YarnConfiguration.AUTO_FAILOVER_ENABLED,false);
    Configuration conf=new YarnConfiguration(configuration);
    MockRM rm=new MockRM(conf);
    rm.init(conf);
    rm.start();
    rm.transitionToActive();
    rm.transitionToStandby(true);
    assertNotNull(DefaultMetricsSystem.instance().getSource("JvmMetrics"));
    assertNotNull(DefaultMetricsSystem.instance().getSource("UgiMetrics"));
    rm.stop();
  }
}
