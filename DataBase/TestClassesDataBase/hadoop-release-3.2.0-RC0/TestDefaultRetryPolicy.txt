/** 
 * Test the behavior of the default retry policy.
 */
public class TestDefaultRetryPolicy {
  @Rule public Timeout timeout=new Timeout(30000);
  /** 
 * Verify FAIL < RETRY < FAILOVER_AND_RETRY. 
 */
  @Test public void testRetryDecisionOrdering() throws Exception {
    Assert.assertTrue(RetryPolicy.RetryAction.RetryDecision.FAIL.compareTo(RetryPolicy.RetryAction.RetryDecision.RETRY) < 0);
    Assert.assertTrue(RetryPolicy.RetryAction.RetryDecision.RETRY.compareTo(RetryPolicy.RetryAction.RetryDecision.FAILOVER_AND_RETRY) < 0);
    Assert.assertTrue(RetryPolicy.RetryAction.RetryDecision.FAIL.compareTo(RetryPolicy.RetryAction.RetryDecision.FAILOVER_AND_RETRY) < 0);
  }
  /** 
 * Verify that the default retry policy correctly retries RetriableException when defaultRetryPolicyEnabled is enabled.
 * @throws IOException
 */
  @Test public void testWithRetriable() throws Exception {
    Configuration conf=new Configuration();
    RetryPolicy policy=RetryUtils.getDefaultRetryPolicy(conf,"Test.No.Such.Key",true,"Test.No.Such.Key","10000,6",null);
    RetryPolicy.RetryAction action=policy.shouldRetry(new RetriableException("Dummy exception"),0,0,true);
    assertThat(action.action,is(RetryPolicy.RetryAction.RetryDecision.RETRY));
  }
  /** 
 * Verify that the default retry policy correctly retries a RetriableException wrapped in a RemoteException when defaultRetryPolicyEnabled is enabled.
 * @throws IOException
 */
  @Test public void testWithWrappedRetriable() throws Exception {
    Configuration conf=new Configuration();
    RetryPolicy policy=RetryUtils.getDefaultRetryPolicy(conf,"Test.No.Such.Key",true,"Test.No.Such.Key","10000,6",null);
    RetryPolicy.RetryAction action=policy.shouldRetry(new RemoteException(RetriableException.class.getName(),"Dummy exception"),0,0,true);
    assertThat(action.action,is(RetryPolicy.RetryAction.RetryDecision.RETRY));
  }
  /** 
 * Verify that the default retry policy does *not* retry RetriableException when defaultRetryPolicyEnabled is disabled.
 * @throws IOException
 */
  @Test public void testWithRetriableAndRetryDisabled() throws Exception {
    Configuration conf=new Configuration();
    RetryPolicy policy=RetryUtils.getDefaultRetryPolicy(conf,"Test.No.Such.Key",false,"Test.No.Such.Key","10000,6",null);
    RetryPolicy.RetryAction action=policy.shouldRetry(new RetriableException("Dummy exception"),0,0,true);
    assertThat(action.action,is(RetryPolicy.RetryAction.RetryDecision.FAIL));
  }
}
