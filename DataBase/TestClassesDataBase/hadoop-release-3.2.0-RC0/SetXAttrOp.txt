/** 
 * setXAttr 
 */
class SetXAttrOp extends AtMostOnceOp {
  private final String src;
  SetXAttrOp(  DFSClient client,  String src){
    super("setXAttr",client);
    this.src=src;
  }
  @Override void prepare() throws Exception {
    Path p=new Path(src);
    if (!dfs.exists(p)) {
      expectedUpdateCount++;
      DFSTestUtil.createFile(dfs,p,BlockSize,DataNodes,0);
    }
  }
  @Override void invoke() throws Exception {
    expectedUpdateCount++;
    client.setXAttr(src,"user.key","value".getBytes(),EnumSet.of(XAttrSetFlag.CREATE));
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    for (int i=0; i < CHECKTIMES; i++) {
      Map<String,byte[]> iter=dfs.getXAttrs(new Path(src));
      Set<String> keySet=iter.keySet();
      if (keySet.contains("user.key")) {
        return true;
      }
      Thread.sleep(1000);
    }
    return false;
  }
  @Override Object getResult(){
    return null;
  }
}
