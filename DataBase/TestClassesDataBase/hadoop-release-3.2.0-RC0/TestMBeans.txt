/** 
 * Test MXBean addition of key/value pairs to registered MBeans.
 */
public class TestMBeans implements DummyMXBean {
  private int counter=1;
  @Test public void testRegister() throws Exception {
    ObjectName objectName=null;
    try {
      counter=23;
      objectName=MBeans.register("UnitTest","RegisterTest",this);
      MBeanServer platformMBeanServer=ManagementFactory.getPlatformMBeanServer();
      int jmxCounter=(int)platformMBeanServer.getAttribute(objectName,"Counter");
      Assert.assertEquals(counter,jmxCounter);
    }
  finally {
      if (objectName != null) {
        MBeans.unregister(objectName);
      }
    }
  }
  @Test public void testRegisterWithAdditionalProperties() throws Exception {
    ObjectName objectName=null;
    try {
      counter=42;
      Map<String,String> properties=new HashMap<String,String>();
      properties.put("flavour","server");
      objectName=MBeans.register("UnitTest","RegisterTest",properties,this);
      MBeanServer platformMBeanServer=ManagementFactory.getPlatformMBeanServer();
      int jmxCounter=(int)platformMBeanServer.getAttribute(objectName,"Counter");
      Assert.assertEquals(counter,jmxCounter);
    }
  finally {
      if (objectName != null) {
        MBeans.unregister(objectName);
      }
    }
  }
  @Test public void testGetMbeanNameName(){
    HashMap<String,String> properties=new HashMap<>();
    ObjectName mBeanName=MBeans.getMBeanName("Service","Name",properties);
    Assert.assertEquals("Service",MBeans.getMbeanNameService(mBeanName));
    properties.put("key","value");
    mBeanName=MBeans.getMBeanName("Service","Name",properties);
    Assert.assertEquals("Service",MBeans.getMbeanNameService(mBeanName));
  }
  @Override public int getCounter(){
    return counter;
  }
}
