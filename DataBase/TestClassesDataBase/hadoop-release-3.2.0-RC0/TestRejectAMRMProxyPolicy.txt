/** 
 * Simple test class for the  {@link RejectAMRMProxyPolicy}.
 */
public class TestRejectAMRMProxyPolicy extends BaseFederationPoliciesTest {
  @Before public void setUp() throws Exception {
    setPolicy(new RejectAMRMProxyPolicy());
    setPolicyInfo(mock(WeightedPolicyInfo.class));
    for (int i=1; i <= 2; i++) {
      SubClusterIdInfo sc=new SubClusterIdInfo("sc" + i);
      SubClusterInfo sci=mock(SubClusterInfo.class);
      when(sci.getState()).thenReturn(SubClusterState.SC_RUNNING);
      when(sci.getSubClusterId()).thenReturn(sc.toId());
      getActiveSubclusters().put(sc.toId(),sci);
    }
    FederationPoliciesTestUtil.initializePolicyContext(getPolicy(),mock(WeightedPolicyInfo.class),getActiveSubclusters());
  }
  @Test(expected=FederationPolicyException.class) public void testSplitAllocateRequest() throws Exception {
    String[] hosts=new String[]{"host1","host2"};
    List<ResourceRequest> resourceRequests=FederationPoliciesTestUtil.createResourceRequests(hosts,2 * 1024,2,1,3,null,false);
    Map<SubClusterId,List<ResourceRequest>> response=((FederationAMRMProxyPolicy)getPolicy()).splitResourceRequests(resourceRequests);
  }
}
