public class TestApplicationMasterServiceProtocolOnHA extends ApplicationMasterServiceProtoTestBase {
  @Before public void initialize() throws Exception {
    startHACluster(0,false,false,true);
    super.startupHAAndSetupClient();
  }
  @Test(timeout=15000) public void testRegisterApplicationMasterOnHA() throws YarnException, IOException {
    RegisterApplicationMasterRequest request=RegisterApplicationMasterRequest.newInstance("localhost",0,"");
    RegisterApplicationMasterResponse response=getAMClient().registerApplicationMaster(request);
    Assert.assertEquals(response,this.cluster.createFakeRegisterApplicationMasterResponse());
  }
  @Test(timeout=15000) public void testFinishApplicationMasterOnHA() throws YarnException, IOException {
    FinishApplicationMasterRequest request=FinishApplicationMasterRequest.newInstance(FinalApplicationStatus.SUCCEEDED,"","");
    FinishApplicationMasterResponse response=getAMClient().finishApplicationMaster(request);
    Assert.assertEquals(response,this.cluster.createFakeFinishApplicationMasterResponse());
  }
  @Test(timeout=15000) public void testAllocateOnHA() throws YarnException, IOException {
    AllocateRequest request=AllocateRequest.newInstance(0,50f,new ArrayList<ResourceRequest>(),new ArrayList<ContainerId>(),ResourceBlacklistRequest.newInstance(new ArrayList<String>(),new ArrayList<String>()));
    AllocateResponse response=getAMClient().allocate(request);
    Assert.assertEquals(response,this.cluster.createFakeAllocateResponse());
  }
}
