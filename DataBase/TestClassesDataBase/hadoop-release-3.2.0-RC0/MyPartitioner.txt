/** 
 * Partitioner implementation to make sure that output is in total sorted order.  We basically route key ranges to different reducers such that key values monotonically increase with the partition number.  For example, in this test, the keys are numbers from 1 to 1000 in the form "000000001" to "000001000" in each input file.  The keys "000000001" to "000000250" are routed to partition 0, "000000251" to "000000500" are routed to partition 1 and so on since we have 4 reducers.
 */
static class MyPartitioner implements Partitioner<Text,Text> {
  private JobConf job;
  public MyPartitioner(){
  }
  public void configure(  JobConf job){
    this.job=job;
  }
  public int getPartition(  Text key,  Text value,  int numPartitions){
    int keyValue=0;
    try {
      keyValue=Integer.parseInt(key.toString());
    }
 catch (    NumberFormatException nfe) {
      keyValue=0;
    }
    int partitionNumber=(numPartitions * (Math.max(0,keyValue - 1))) / job.getInt("mapred.test.num_lines",10000);
    return partitionNumber;
  }
}
