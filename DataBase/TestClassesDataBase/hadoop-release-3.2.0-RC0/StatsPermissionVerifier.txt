private class StatsPermissionVerifier extends PermissionVerifier {
  OpType opType;
  void set(  Path path,  OpType opType,  short ancestorPermission,  short parentPermission){
    super.set(path,ancestorPermission,parentPermission,NULL_MASK);
    setOpType(opType);
  }
  void setOpType(  OpType opType){
    this.opType=opType;
  }
  @Override void setOpPermission(){
    this.opParentPermission=SEARCH_MASK;
  }
  @Override void call() throws IOException {
switch (opType) {
case GET_FILEINFO:
      fs.getFileStatus(path);
    break;
case IS_DIR:
  fs.isDirectory(path);
break;
case EXISTS:
fs.exists(path);
break;
case GET_CONTENT_LENGTH:
fs.getContentSummary(path).getLength();
break;
default :
throw new IllegalArgumentException("Unexpected operation type: " + opType);
}
}
}
