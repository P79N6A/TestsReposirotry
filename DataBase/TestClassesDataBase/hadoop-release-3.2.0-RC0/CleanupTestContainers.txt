/** 
 * This looks like a test, but it is really a command to invoke to clean up containers created in other test runs.
 */
public class CleanupTestContainers extends AbstractWasbTestBase {
  private static final String CONTAINER_PREFIX="wasbtests-";
  @Override protected AzureBlobStorageTestAccount createTestAccount() throws Exception {
    return AzureBlobStorageTestAccount.create("CleanupTestContainers",EnumSet.noneOf(AzureBlobStorageTestAccount.CreateOptions.class),createConfiguration(),true);
  }
  @Test public void testEnumContainers() throws Throwable {
    describe("Enumerating all the WASB test containers");
    int count=0;
    CloudStorageAccount storageAccount=getTestAccount().getRealAccount();
    CloudBlobClient blobClient=storageAccount.createCloudBlobClient();
    Iterable<CloudBlobContainer> containers=blobClient.listContainers(CONTAINER_PREFIX);
    for (    CloudBlobContainer container : containers) {
      count++;
      LOG.info("Container {} URI {}",container.getName(),container.getUri());
    }
    LOG.info("Found {} test containers",count);
  }
  @Test public void testDeleteContainers() throws Throwable {
    describe("Delete all the WASB test containers");
    int count=0;
    CloudStorageAccount storageAccount=getTestAccount().getRealAccount();
    CloudBlobClient blobClient=storageAccount.createCloudBlobClient();
    Iterable<CloudBlobContainer> containers=blobClient.listContainers(CONTAINER_PREFIX);
    for (    CloudBlobContainer container : containers) {
      LOG.info("Container {} URI {}",container.getName(),container.getUri());
      if (container.deleteIfExists()) {
        count++;
      }
    }
    LOG.info("Deleted {} test containers",count);
  }
}
