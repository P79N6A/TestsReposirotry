/** 
 * Unit tests for  {@link S3ABlockOutputStream}.
 */
public class TestS3ABlockOutputStream extends AbstractS3AMockTest {
  private S3ABlockOutputStream stream;
  @Before public void setUp() throws Exception {
    ExecutorService executorService=mock(ExecutorService.class);
    Progressable progressable=mock(Progressable.class);
    S3ADataBlocks.BlockFactory blockFactory=mock(S3ADataBlocks.BlockFactory.class);
    long blockSize=Constants.DEFAULT_MULTIPART_SIZE;
    S3AInstrumentation.OutputStreamStatistics statistics=null;
    WriteOperationHelper oHelper=mock(WriteOperationHelper.class);
    PutTracker putTracker=mock(PutTracker.class);
    stream=spy(new S3ABlockOutputStream(fs,"",executorService,progressable,blockSize,blockFactory,statistics,oHelper,putTracker));
  }
  @Test public void testFlushNoOpWhenStreamClosed() throws Exception {
    doThrow(new IOException()).when(stream).checkOpen();
    try {
      stream.flush();
    }
 catch (    Exception e) {
      fail("Should not have any exception.");
    }
  }
}
