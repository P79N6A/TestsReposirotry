public class TestResourceHandlerModule {
  private static final Logger LOG=LoggerFactory.getLogger(TestResourceHandlerModule.class);
  private Configuration emptyConf;
  private Configuration networkEnabledConf;
  @Before public void setup() throws Exception {
    emptyConf=new YarnConfiguration();
    networkEnabledConf=new YarnConfiguration();
    networkEnabledConf.setBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,true);
    ResourceHandlerModule.nullifyResourceHandlerChain();
  }
  @Test public void testOutboundBandwidthHandler(){
    try {
      OutboundBandwidthResourceHandler resourceHandler=ResourceHandlerModule.initOutboundBandwidthResourceHandler(emptyConf);
      Assert.assertNull(resourceHandler);
      resourceHandler=ResourceHandlerModule.initOutboundBandwidthResourceHandler(networkEnabledConf);
      Assert.assertNotNull(resourceHandler);
      ResourceHandlerChain resourceHandlerChain=ResourceHandlerModule.getConfiguredResourceHandlerChain(networkEnabledConf,mock(Context.class));
      if (resourceHandlerChain != null) {
        List<ResourceHandler> resourceHandlers=resourceHandlerChain.getResourceHandlerList();
        Assert.assertEquals(resourceHandlers.size(),1);
        Assert.assertTrue(resourceHandlers.get(0) == resourceHandler);
      }
 else {
        Assert.fail("Null returned");
      }
    }
 catch (    ResourceHandlerException e) {
      Assert.fail("Unexpected ResourceHandlerException: " + e);
    }
  }
  @Test public void testDiskResourceHandler() throws Exception {
    DiskResourceHandler handler=ResourceHandlerModule.initDiskResourceHandler(emptyConf);
    Assert.assertNull(handler);
    Configuration diskConf=new YarnConfiguration();
    diskConf.setBoolean(YarnConfiguration.NM_DISK_RESOURCE_ENABLED,true);
    handler=ResourceHandlerModule.initDiskResourceHandler(diskConf);
    Assert.assertNotNull(handler);
    ResourceHandlerChain resourceHandlerChain=ResourceHandlerModule.getConfiguredResourceHandlerChain(diskConf,mock(Context.class));
    if (resourceHandlerChain != null) {
      List<ResourceHandler> resourceHandlers=resourceHandlerChain.getResourceHandlerList();
      Assert.assertEquals(resourceHandlers.size(),1);
      Assert.assertTrue(resourceHandlers.get(0) == handler);
    }
 else {
      Assert.fail("Null returned");
    }
  }
}
