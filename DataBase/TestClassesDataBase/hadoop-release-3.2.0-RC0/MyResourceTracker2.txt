private class MyResourceTracker2 implements ResourceTracker {
  public NodeAction heartBeatNodeAction=NodeAction.NORMAL;
  public NodeAction registerNodeAction=NodeAction.NORMAL;
  public String shutDownMessage="";
  public String rmVersion="3.0.1";
  @Override public RegisterNodeManagerResponse registerNodeManager(  RegisterNodeManagerRequest request) throws YarnException, IOException {
    RegisterNodeManagerResponse response=recordFactory.newRecordInstance(RegisterNodeManagerResponse.class);
    response.setNodeAction(registerNodeAction);
    response.setContainerTokenMasterKey(createMasterKey());
    response.setNMTokenMasterKey(createMasterKey());
    response.setDiagnosticsMessage(shutDownMessage);
    response.setRMVersion(rmVersion);
    return response;
  }
  @Override public NodeHeartbeatResponse nodeHeartbeat(  NodeHeartbeatRequest request) throws YarnException, IOException {
    NodeStatus nodeStatus=request.getNodeStatus();
    nodeStatus.setResponseId(heartBeatID++);
    NodeHeartbeatResponse nhResponse=YarnServerBuilderUtils.newNodeHeartbeatResponse(heartBeatID,heartBeatNodeAction,null,null,null,null,1000L);
    nhResponse.setDiagnosticsMessage(shutDownMessage);
    return nhResponse;
  }
  @Override public UnRegisterNodeManagerResponse unRegisterNodeManager(  UnRegisterNodeManagerRequest request) throws YarnException, IOException {
    return recordFactory.newRecordInstance(UnRegisterNodeManagerResponse.class);
  }
}
