private static final class FsWithPreExistingContainer implements Closeable {
  private final MockStorageInterface mockStorage;
  private final NativeAzureFileSystem fs;
  private FsWithPreExistingContainer(  MockStorageInterface mockStorage,  NativeAzureFileSystem fs){
    this.mockStorage=mockStorage;
    this.fs=fs;
  }
  public NativeAzureFileSystem getFs(){
    return fs;
  }
  public HashMap<String,String> getContainerMetadata(){
    return mockStorage.getBackingStore().getContainerMetadata();
  }
  public static FsWithPreExistingContainer create() throws Exception {
    return create(null);
  }
  public static FsWithPreExistingContainer create(  HashMap<String,String> containerMetadata) throws Exception {
    AzureNativeFileSystemStore store=new AzureNativeFileSystemStore();
    MockStorageInterface mockStorage=new MockStorageInterface();
    store.setAzureStorageInteractionLayer(mockStorage);
    NativeAzureFileSystem fs=new NativeAzureFileSystem(store);
    Configuration conf=new Configuration();
    AzureBlobStorageTestAccount.setMockAccountKey(conf);
    mockStorage.addPreExistingContainer(AzureBlobStorageTestAccount.getMockContainerUri(),containerMetadata);
    fs.initialize(new URI(AzureBlobStorageTestAccount.MOCK_WASB_URI),conf);
    return new FsWithPreExistingContainer(mockStorage,fs);
  }
  @Override public void close() throws IOException {
    fs.close();
  }
}
