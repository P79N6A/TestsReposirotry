/** 
 * A mock intercepter implementation that uses the same mockRM instance across restart.
 */
public static class MockRequestInterceptorAcrossRestart extends AbstractRequestInterceptor {
  public MockRequestInterceptorAcrossRestart(){
  }
  @Override public void init(  AMRMProxyApplicationContext appContext){
    super.init(appContext);
    if (mockRM == null) {
      throw new RuntimeException("mockRM not initialized yet");
    }
  }
  @Override public RegisterApplicationMasterResponse registerApplicationMaster(  RegisterApplicationMasterRequest request) throws YarnException, IOException {
    return mockRM.registerApplicationMaster(request);
  }
  @Override public FinishApplicationMasterResponse finishApplicationMaster(  FinishApplicationMasterRequest request) throws YarnException, IOException {
    return mockRM.finishApplicationMaster(request);
  }
  @Override public AllocateResponse allocate(  AllocateRequest request) throws YarnException, IOException {
    return mockRM.allocate(request);
  }
}
