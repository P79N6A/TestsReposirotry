static private class PassedFile {
  private final int idx;
  private final byte[] contents;
  private FileInputStream fis;
  public PassedFile(  int idx) throws IOException {
    this.idx=idx;
    this.contents=new byte[]{(byte)(idx % 127)};
    Files.write(contents,new File(getPath()));
    this.fis=new FileInputStream(getPath());
  }
  public String getPath(){
    return new File(sockDir.getDir(),"passed_file" + idx).getAbsolutePath();
  }
  public FileInputStream getInputStream() throws IOException {
    return fis;
  }
  public void cleanup() throws IOException {
    new File(getPath()).delete();
    fis.close();
  }
  public void checkInputStream(  FileInputStream fis) throws IOException {
    byte buf[]=new byte[contents.length];
    IOUtils.readFully(fis,buf,0,buf.length);
    Arrays.equals(contents,buf);
  }
  protected void finalize(){
    try {
      cleanup();
    }
 catch (    Throwable t) {
    }
  }
}
