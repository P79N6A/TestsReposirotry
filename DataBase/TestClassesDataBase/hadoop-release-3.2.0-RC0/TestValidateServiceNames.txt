/** 
 * Test cluster name validation.
 */
public class TestValidateServiceNames {
  void assertValidName(  String name){
    ServiceApiUtil.validateNameFormat(name,new Configuration());
  }
  void assertInvalidName(  String name){
    try {
      ServiceApiUtil.validateNameFormat(name,new Configuration());
      Assert.fail();
    }
 catch (    IllegalArgumentException e) {
    }
  }
  void assertInvalid(  List<String> names){
    for (    String name : names) {
      assertInvalidName(name);
    }
  }
  void assertValid(  List<String> names){
    for (    String name : names) {
      assertValidName(name);
    }
  }
  @Test public void testEmptyName() throws Throwable {
    assertInvalidName("");
  }
  @Test public void testSpaceName() throws Throwable {
    assertInvalidName(" ");
  }
  @Test public void testLeadingHyphen() throws Throwable {
    assertInvalidName("-hyphen");
  }
  @Test public void testTitleLetters() throws Throwable {
    assertInvalidName("Title");
  }
  @Test public void testCapitalLetters() throws Throwable {
    assertInvalidName("UPPER-CASE-CLUSTER");
  }
  @Test public void testInnerBraced() throws Throwable {
    assertInvalidName("a[a");
  }
  @Test public void testLeadingBrace() throws Throwable {
    assertInvalidName("[");
  }
  @Test public void testNonalphaLeadingChars() throws Throwable {
    assertInvalid(Arrays.asList("[a","#","@","=","*","."));
  }
  @Test public void testNonalphaInnerChars() throws Throwable {
    assertInvalid(Arrays.asList("a[a","b#","c@","d=","e*","f.","g ","h i"));
  }
  @Test public void testClusterValid() throws Throwable {
    assertValidName("cluster");
  }
  @Test public void testValidNames() throws Throwable {
    assertValid(Arrays.asList("cluster","cluster1","very-very-very-long-cluster-name","c1234567890"));
  }
}
