/** 
 * createSymlink 
 */
class CreateSymlinkOp extends AtMostOnceOp {
  private final String target;
  private final String link;
  public CreateSymlinkOp(  DFSClient client,  String target,  String link){
    super("createSymlink",client);
    this.target=target;
    this.link=link;
  }
  @Override void prepare() throws Exception {
    Path p=new Path(target);
    if (!dfs.exists(p)) {
      expectedUpdateCount++;
      DFSTestUtil.createFile(dfs,p,BlockSize,DataNodes,0);
    }
  }
  @Override void invoke() throws Exception {
    expectedUpdateCount++;
    client.createSymlink(target,link,false);
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    Path linkPath=new Path(link);
    FileStatus linkStatus=null;
    for (int i=0; i < CHECKTIMES && linkStatus == null; i++) {
      try {
        linkStatus=dfs.getFileLinkStatus(linkPath);
      }
 catch (      FileNotFoundException fnf) {
        Thread.sleep(1000);
      }
    }
    return linkStatus != null;
  }
  @Override Object getResult(){
    return null;
  }
}
