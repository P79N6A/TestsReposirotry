/** 
 * Created 21-Jan-2009 13:42:36
 */
public class TestConfigurationSubclass {
  private static final String EMPTY_CONFIGURATION_XML="/org/apache/hadoop/conf/empty-configuration.xml";
  @Test public void testGetProps(){
    SubConf conf=new SubConf(true);
    Properties properties=conf.getProperties();
    assertNotNull("hadoop.tmp.dir is not set",properties.getProperty("hadoop.tmp.dir"));
  }
  @Test public void testReload() throws Throwable {
    SubConf conf=new SubConf(true);
    assertFalse(conf.isReloaded());
    Configuration.addDefaultResource(EMPTY_CONFIGURATION_XML);
    assertTrue(conf.isReloaded());
    Properties properties=conf.getProperties();
  }
  @Test public void testReloadNotQuiet() throws Throwable {
    SubConf conf=new SubConf(true);
    conf.setQuietMode(false);
    assertFalse(conf.isReloaded());
    conf.addResource("not-a-valid-resource");
    assertTrue(conf.isReloaded());
    try {
      Properties properties=conf.getProperties();
      fail("Should not have got here");
    }
 catch (    RuntimeException e) {
      assertTrue(e.toString(),e.getMessage().contains("not found"));
    }
  }
private static class SubConf extends Configuration {
    private boolean reloaded;
    /** 
 * A new configuration where the behavior of reading from the default resources can be turned off. If the parameter  {@code loadDefaults} is false, the new instance will notload resources from the default files.
 * @param loadDefaults specifies whether to load from the default files
 */
    private SubConf(    boolean loadDefaults){
      super(loadDefaults);
    }
    public Properties getProperties(){
      return super.getProps();
    }
    /** 
 * {@inheritDoc}. Sets the reloaded flag.
 */
    @Override public void reloadConfiguration(){
      super.reloadConfiguration();
      reloaded=true;
    }
    public boolean isReloaded(){
      return reloaded;
    }
    public void setReloaded(    boolean reloaded){
      this.reloaded=reloaded;
    }
  }
}
