private class StatOutput {
  final String doesNotExist;
  final String directory;
  final String file;
  final String[] symlinks;
  final String stickydir;
  StatOutput(  String doesNotExist,  String directory,  String file,  String[] symlinks,  String stickydir){
    this.doesNotExist=doesNotExist;
    this.directory=directory;
    this.file=file;
    this.symlinks=symlinks;
    this.stickydir=stickydir;
  }
  void test() throws Exception {
    BufferedReader br;
    FileStatus status;
    try {
      br=new BufferedReader(new StringReader(doesNotExist));
      stat.parseExecResult(br);
    }
 catch (    FileNotFoundException e) {
    }
    br=new BufferedReader(new StringReader(directory));
    stat.parseExecResult(br);
    status=stat.getFileStatusForTesting();
    assertTrue(status.isDirectory());
    br=new BufferedReader(new StringReader(file));
    stat.parseExecResult(br);
    status=stat.getFileStatusForTesting();
    assertTrue(status.isFile());
    for (    String symlink : symlinks) {
      br=new BufferedReader(new StringReader(symlink));
      stat.parseExecResult(br);
      status=stat.getFileStatusForTesting();
      assertTrue(status.isSymlink());
    }
    br=new BufferedReader(new StringReader(stickydir));
    stat.parseExecResult(br);
    status=stat.getFileStatusForTesting();
    assertTrue(status.isDirectory());
    assertTrue(status.getPermission().getStickyBit());
  }
}
