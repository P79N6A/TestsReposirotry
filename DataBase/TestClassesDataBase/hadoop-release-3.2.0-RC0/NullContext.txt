protected class NullContext implements Context {
  @Override public NodeId getNodeId(){
    return null;
  }
  @Override public int getHttpPort(){
    return 0;
  }
  @Override public ConcurrentMap<ApplicationId,Application> getApplications(){
    return null;
  }
  @Override public Map<ApplicationId,Credentials> getSystemCredentialsForApps(){
    return null;
  }
  @Override public ConcurrentMap<ApplicationId,AppCollectorData> getRegisteringCollectors(){
    return null;
  }
  @Override public ConcurrentMap<ApplicationId,AppCollectorData> getKnownCollectors(){
    return null;
  }
  @Override public ConcurrentMap<ContainerId,Container> getContainers(){
    return null;
  }
  @Override public ConcurrentMap<ContainerId,org.apache.hadoop.yarn.api.records.Container> getIncreasedContainers(){
    return null;
  }
  @Override public NMContainerTokenSecretManager getContainerTokenSecretManager(){
    return null;
  }
  @Override public NMTokenSecretManagerInNM getNMTokenSecretManager(){
    return null;
  }
  @Override public NodeHealthStatus getNodeHealthStatus(){
    return null;
  }
  @Override public ContainerManager getContainerManager(){
    return null;
  }
  @Override public LocalDirsHandlerService getLocalDirsHandler(){
    return null;
  }
  @Override public ApplicationACLsManager getApplicationACLsManager(){
    return null;
  }
  @Override public NMStateStoreService getNMStateStore(){
    return null;
  }
  @Override public boolean getDecommissioned(){
    return false;
  }
  @Override public Configuration getConf(){
    return null;
  }
  @Override public void setDecommissioned(  boolean isDecommissioned){
  }
  @Override public ConcurrentLinkedQueue<LogAggregationReport> getLogAggregationStatusForApps(){
    return null;
  }
  @Override public NodeResourceMonitor getNodeResourceMonitor(){
    return null;
  }
  @Override public NodeStatusUpdater getNodeStatusUpdater(){
    return null;
  }
  public boolean isDistributedSchedulingEnabled(){
    return false;
  }
  @Override public OpportunisticContainerAllocator getContainerAllocator(){
    return null;
  }
  public void setNMTimelinePublisher(  NMTimelinePublisher nmMetricsPublisher){
  }
  @Override public NMTimelinePublisher getNMTimelinePublisher(){
    return null;
  }
  @Override public ContainerExecutor getContainerExecutor(){
    return null;
  }
  @Override public ContainerStateTransitionListener getContainerStateTransitionListener(){
    return null;
  }
  public ResourcePluginManager getResourcePluginManager(){
    return null;
  }
  @Override public NodeManagerMetrics getNodeManagerMetrics(){
    return null;
  }
  @Override public DeletionService getDeletionService(){
    return null;
  }
  @Override public NMLogAggregationStatusTracker getNMLogAggregationStatusTracker(){
    return null;
  }
}
