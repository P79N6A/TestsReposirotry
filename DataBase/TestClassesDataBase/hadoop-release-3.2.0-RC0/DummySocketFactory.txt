/** 
 * Dummy socket factory which shift TPC ports by subtracting 10 when establishing a connection
 */
class DummySocketFactory extends StandardSocketFactory {
  /** 
 * Default empty constructor (for use with the reflection API).
 */
  public DummySocketFactory(){
  }
  @Override public Socket createSocket() throws IOException {
    return new Socket(){
      @Override public void connect(      SocketAddress addr,      int timeout) throws IOException {
        assert (addr instanceof InetSocketAddress);
        InetSocketAddress iaddr=(InetSocketAddress)addr;
        SocketAddress newAddr=null;
        if (iaddr.isUnresolved())         newAddr=new InetSocketAddress(iaddr.getHostName(),iaddr.getPort() - 10);
 else         newAddr=new InetSocketAddress(iaddr.getAddress(),iaddr.getPort() - 10);
        System.out.printf("Test socket: rerouting %s to %s\n",iaddr,newAddr);
        super.connect(newAddr,timeout);
      }
    }
;
  }
  @Override public boolean equals(  Object obj){
    if (this == obj)     return true;
    if (obj == null)     return false;
    if (!(obj instanceof DummySocketFactory))     return false;
    return true;
  }
}
