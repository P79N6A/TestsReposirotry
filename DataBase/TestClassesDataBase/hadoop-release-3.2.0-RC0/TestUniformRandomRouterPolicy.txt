/** 
 * Simple test class for the  {@link UniformRandomRouterPolicy}. Tests that one of the active subcluster is chosen.
 */
public class TestUniformRandomRouterPolicy extends BaseRouterPoliciesTest {
  @Before public void setUp() throws Exception {
    setPolicy(new UniformRandomRouterPolicy());
    setPolicyInfo(mock(WeightedPolicyInfo.class));
    for (int i=1; i <= 2; i++) {
      SubClusterIdInfo sc=new SubClusterIdInfo("sc" + i);
      SubClusterInfo sci=mock(SubClusterInfo.class);
      when(sci.getState()).thenReturn(SubClusterState.SC_RUNNING);
      when(sci.getSubClusterId()).thenReturn(sc.toId());
      getActiveSubclusters().put(sc.toId(),sci);
    }
    FederationPoliciesTestUtil.initializePolicyContext(getPolicy(),mock(WeightedPolicyInfo.class),getActiveSubclusters());
  }
  @Test public void testOneSubclusterIsChosen() throws YarnException {
    SubClusterId chosen=((FederationRouterPolicy)getPolicy()).getHomeSubcluster(getApplicationSubmissionContext(),null);
    Assert.assertTrue(getActiveSubclusters().keySet().contains(chosen));
  }
}
