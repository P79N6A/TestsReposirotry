static class FailingAttemptsDuringAssignedMRApp extends MRApp {
  FailingAttemptsDuringAssignedMRApp(  int maps,  int reduces,  TaskAttemptEventType event){
    super(maps,reduces,true,"FailingAttemptsMRApp",true);
    sendFailEvent=event;
  }
  TaskAttemptEventType sendFailEvent;
  @Override protected void containerLaunched(  TaskAttemptId attemptID,  int shufflePort){
  }
  @Override protected void attemptLaunched(  TaskAttemptId attemptID){
    getContext().getEventHandler().handle(new TaskAttemptEvent(attemptID,sendFailEvent));
  }
  private boolean receiveTaStartJHEvent=false;
  private boolean receiveTaFailedJHEvent=false;
  private boolean receiveTaKilledJHEvent=false;
  public boolean getTaStartJHEvent(){
    return receiveTaStartJHEvent;
  }
  public boolean getTaFailedJHEvent(){
    return receiveTaFailedJHEvent;
  }
  public boolean getTaKilledJHEvent(){
    return receiveTaKilledJHEvent;
  }
  protected EventHandler<JobHistoryEvent> createJobHistoryHandler(  AppContext context){
    return new EventHandler<JobHistoryEvent>(){
      @Override public void handle(      JobHistoryEvent event){
        if (event.getType() == org.apache.hadoop.mapreduce.jobhistory.EventType.MAP_ATTEMPT_FAILED) {
          receiveTaFailedJHEvent=true;
        }
 else         if (event.getType() == org.apache.hadoop.mapreduce.jobhistory.EventType.MAP_ATTEMPT_KILLED) {
          receiveTaKilledJHEvent=true;
        }
 else         if (event.getType() == org.apache.hadoop.mapreduce.jobhistory.EventType.MAP_ATTEMPT_STARTED) {
          receiveTaStartJHEvent=true;
        }
 else         if (event.getType() == org.apache.hadoop.mapreduce.jobhistory.EventType.REDUCE_ATTEMPT_FAILED) {
          receiveTaFailedJHEvent=true;
        }
 else         if (event.getType() == org.apache.hadoop.mapreduce.jobhistory.EventType.REDUCE_ATTEMPT_KILLED) {
          receiveTaKilledJHEvent=true;
        }
 else         if (event.getType() == org.apache.hadoop.mapreduce.jobhistory.EventType.REDUCE_ATTEMPT_STARTED) {
          receiveTaStartJHEvent=true;
        }
      }
    }
;
  }
}
