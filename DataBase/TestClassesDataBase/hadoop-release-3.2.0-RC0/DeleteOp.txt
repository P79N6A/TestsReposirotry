/** 
 * delete 
 */
class DeleteOp extends AtMostOnceOp {
  private final String target;
  private boolean deleted;
  DeleteOp(  DFSClient client,  String target){
    super("delete",client);
    this.target=target;
  }
  @Override void prepare() throws Exception {
    Path p=new Path(target);
    if (!dfs.exists(p)) {
      expectedUpdateCount++;
      DFSTestUtil.createFile(dfs,p,BlockSize,DataNodes,0);
    }
  }
  @Override void invoke() throws Exception {
    expectedUpdateCount++;
    deleted=client.delete(target,true);
  }
  @Override boolean checkNamenodeBeforeReturn() throws Exception {
    Path targetPath=new Path(target);
    boolean del=!dfs.exists(targetPath);
    for (int i=0; i < CHECKTIMES && !del; i++) {
      Thread.sleep(1000);
      del=!dfs.exists(targetPath);
    }
    return del;
  }
  @Override Object getResult(){
    return new Boolean(deleted);
  }
}
