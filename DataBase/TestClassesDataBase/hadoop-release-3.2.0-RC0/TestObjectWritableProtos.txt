/** 
 * Test case for the use of Protocol Buffers within ObjectWritable.
 */
public class TestObjectWritableProtos {
  @Test public void testProtoBufs() throws IOException {
    doTest(1);
  }
  @Test public void testProtoBufs2() throws IOException {
    doTest(2);
  }
  @Test public void testProtoBufs3() throws IOException {
    doTest(3);
  }
  /** 
 * Write a protobuf to a buffer 'numProtos' times, and then read them back, making sure all data comes through correctly.
 */
  private void doTest(  int numProtos) throws IOException {
    Configuration conf=new Configuration();
    DataOutputBuffer out=new DataOutputBuffer();
    Message[] sent=new Message[numProtos];
    for (int i=0; i < numProtos; i++) {
      Message testProto=DescriptorProtos.EnumValueDescriptorProto.newBuilder().setName("test" + i).setNumber(i).build();
      ObjectWritable.writeObject(out,testProto,DescriptorProtos.EnumValueDescriptorProto.class,conf);
      sent[i]=testProto;
    }
    DataInputBuffer in=new DataInputBuffer();
    in.reset(out.getData(),out.getLength());
    for (int i=0; i < numProtos; i++) {
      Message received=(Message)ObjectWritable.readObject(in,conf);
      assertEquals(sent[i],received);
    }
  }
}
