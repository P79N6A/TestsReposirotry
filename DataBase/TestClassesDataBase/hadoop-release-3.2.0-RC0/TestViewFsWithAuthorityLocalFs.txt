/** 
 * Test the ViewFsBaseTest using a viewfs with authority:  viewfs://mountTableName/ ie the authority is used to load a mount table. The authority name used is "default"
 */
public class TestViewFsWithAuthorityLocalFs extends ViewFsBaseTest {
  URI schemeWithAuthority;
  @Override @Before public void setUp() throws Exception {
    fcTarget=FileContext.getLocalFSFileContext();
    super.setUp();
    schemeWithAuthority=new URI(FsConstants.VIEWFS_SCHEME,"default","/",null,null);
    fcView=FileContext.getFileContext(schemeWithAuthority,conf);
  }
  @Override @After public void tearDown() throws Exception {
    super.tearDown();
  }
  @Override @Test public void testBasicPaths(){
    Assert.assertEquals(schemeWithAuthority,fcView.getDefaultFileSystem().getUri());
    Assert.assertEquals(fcView.makeQualified(new Path("/user/" + System.getProperty("user.name"))),fcView.getWorkingDirectory());
    Assert.assertEquals(fcView.makeQualified(new Path("/user/" + System.getProperty("user.name"))),fcView.getHomeDirectory());
    Assert.assertEquals(new Path("/foo/bar").makeQualified(schemeWithAuthority,null),fcView.makeQualified(new Path("/foo/bar")));
  }
}
