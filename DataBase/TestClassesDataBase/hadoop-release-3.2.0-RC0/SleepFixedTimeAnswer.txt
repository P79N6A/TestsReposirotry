private static class SleepFixedTimeAnswer implements Answer<Object> {
  private final int sleepTime;
  private final CountDownLatch testLatch;
  SleepFixedTimeAnswer(  int sleepTime,  CountDownLatch latch){
    this.sleepTime=sleepTime;
    this.testLatch=latch;
  }
  @Override public Object answer(  InvocationOnMock invocation) throws Throwable {
    boolean interrupted=false;
    try {
      Thread.sleep(sleepTime);
    }
 catch (    InterruptedException ie) {
      interrupted=true;
    }
    try {
      return invocation.callRealMethod();
    }
  finally {
      testLatch.countDown();
      if (interrupted) {
        Thread.currentThread().interrupt();
      }
    }
  }
}
