/** 
 * Builder class that allows controlling RAM disk-specific properties for a MiniDFSCluster.
 */
class ClusterWithRamDiskBuilder {
  public ClusterWithRamDiskBuilder setNumDatanodes(  int numDatanodes){
    this.numDatanodes=numDatanodes;
    return this;
  }
  public ClusterWithRamDiskBuilder setStorageTypes(  StorageType[] storageTypes){
    this.storageTypes=storageTypes;
    return this;
  }
  public ClusterWithRamDiskBuilder setRamDiskReplicaCapacity(  int ramDiskReplicaCapacity){
    this.ramDiskReplicaCapacity=ramDiskReplicaCapacity;
    return this;
  }
  public ClusterWithRamDiskBuilder setRamDiskStorageLimit(  long ramDiskStorageLimit){
    this.ramDiskStorageLimit=ramDiskStorageLimit;
    return this;
  }
  public ClusterWithRamDiskBuilder setMaxLockedMemory(  long maxLockedMemory){
    this.maxLockedMemory=maxLockedMemory;
    return this;
  }
  public ClusterWithRamDiskBuilder setUseScr(  boolean useScr){
    this.useScr=useScr;
    return this;
  }
  public ClusterWithRamDiskBuilder setHasTransientStorage(  boolean hasTransientStorage){
    this.hasTransientStorage=hasTransientStorage;
    return this;
  }
  public ClusterWithRamDiskBuilder setUseLegacyBlockReaderLocal(  boolean useLegacyBlockReaderLocal){
    this.useLegacyBlockReaderLocal=useLegacyBlockReaderLocal;
    return this;
  }
  public ClusterWithRamDiskBuilder disableScrubber(){
    this.disableScrubber=true;
    return this;
  }
  public void build() throws IOException {
    LazyPersistTestCase.this.startUpCluster(numDatanodes,hasTransientStorage,storageTypes,ramDiskReplicaCapacity,ramDiskStorageLimit,maxLockedMemory,useScr,useLegacyBlockReaderLocal,disableScrubber);
  }
  private int numDatanodes=REPL_FACTOR;
  private StorageType[] storageTypes=null;
  private int ramDiskReplicaCapacity=-1;
  private long ramDiskStorageLimit=-1;
  private long maxLockedMemory=getMemlockLimit(Long.MAX_VALUE);
  private boolean hasTransientStorage=true;
  private boolean useScr=false;
  private boolean useLegacyBlockReaderLocal=false;
  private boolean disableScrubber=false;
}
