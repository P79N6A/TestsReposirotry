/** 
 * Test the SafeMode.
 */
public class TestSafeMode {
  /** 
 * Federated HDFS cluster. 
 */
  private MiniRouterDFSCluster cluster;
  @Before public void setup() throws Exception {
    cluster=new MiniRouterDFSCluster(true,2);
    cluster.startCluster();
    cluster.startRouters();
    cluster.registerNamenodes();
    cluster.waitNamenodeRegistration();
    cluster.installMockLocations();
    if (cluster.isHighAvailability()) {
      for (      String ns : cluster.getNameservices()) {
        cluster.switchToActive(ns,NAMENODES[0]);
        cluster.switchToStandby(ns,NAMENODES[1]);
      }
    }
    cluster.waitActiveNamespaces();
  }
  @After public void teardown() throws IOException {
    if (cluster != null) {
      cluster.shutdown();
      cluster=null;
    }
  }
  @Test public void testProxySetSafemode() throws Exception {
    RouterContext routerContext=cluster.getRandomRouter();
    ClientProtocol routerProtocol=routerContext.getClient().getNamenode();
    routerProtocol.setSafeMode(SafeModeAction.SAFEMODE_GET,true);
    routerProtocol.setSafeMode(SafeModeAction.SAFEMODE_GET,false);
  }
}
