public static class AdvancedVersionedWritable extends SimpleVersionedWritable {
  String shortTestString="Now is the time for all good men to come to the aid of the Party";
  String longTestString="Four score and twenty years ago. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah.";
  String compressableTestString="Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. " + "Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. " + "Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. Blah. ";
  SimpleVersionedWritable containedObject=new SimpleVersionedWritable();
  String[] testStringArray={"The","Quick","Brown","Fox","Jumped","Over","The","Lazy","Dog"};
  @Override public void write(  DataOutput out) throws IOException {
    super.write(out);
    out.writeUTF(shortTestString);
    WritableUtils.writeString(out,longTestString);
    int comp=WritableUtils.writeCompressedString(out,compressableTestString);
    System.out.println("Compression is " + comp + "%");
    containedObject.write(out);
    WritableUtils.writeStringArray(out,testStringArray);
  }
  @Override public void readFields(  DataInput in) throws IOException {
    super.readFields(in);
    shortTestString=in.readUTF();
    longTestString=WritableUtils.readString(in);
    compressableTestString=WritableUtils.readCompressedString(in);
    containedObject.readFields(in);
    testStringArray=WritableUtils.readStringArray(in);
  }
  @Override public boolean equals(  Object o){
    super.equals(o);
    if (!shortTestString.equals(((AdvancedVersionedWritable)o).shortTestString)) {
      return false;
    }
    if (!longTestString.equals(((AdvancedVersionedWritable)o).longTestString)) {
      return false;
    }
    if (!compressableTestString.equals(((AdvancedVersionedWritable)o).compressableTestString)) {
      return false;
    }
    if (testStringArray.length != ((AdvancedVersionedWritable)o).testStringArray.length) {
      return false;
    }
    for (int i=0; i < testStringArray.length; i++) {
      if (!testStringArray[i].equals(((AdvancedVersionedWritable)o).testStringArray[i])) {
        return false;
      }
    }
    if (!containedObject.equals(((AdvancedVersionedWritable)o).containedObject)) {
      return false;
    }
    return true;
  }
}
