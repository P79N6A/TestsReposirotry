/** 
 * Bind ABFS contract tests to the Azure test setup/teardown.
 */
public class ABFSContractTestBinding extends AbstractAbfsIntegrationTest {
  private final URI testUri;
  public ABFSContractTestBinding() throws Exception {
    this(true);
  }
  public ABFSContractTestBinding(  final boolean useExistingFileSystem) throws Exception {
    if (useExistingFileSystem) {
      AbfsConfiguration configuration=getConfiguration();
      String testUrl=configuration.get(TestConfigurationKeys.FS_AZURE_CONTRACT_TEST_URI);
      Assume.assumeTrue("Contract tests are skipped because of missing config property :" + TestConfigurationKeys.FS_AZURE_CONTRACT_TEST_URI,testUrl != null);
      if (getAuthType() != AuthType.SharedKey) {
        testUrl=testUrl.replaceFirst(FileSystemUriSchemes.ABFS_SCHEME,FileSystemUriSchemes.ABFS_SECURE_SCHEME);
      }
      setTestUrl(testUrl);
      this.testUri=new URI(testUrl);
      configuration.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY,this.testUri.toString());
      String[] splitAuthority=this.testUri.getAuthority().split("\\@");
      setFileSystemName(splitAuthority[0]);
    }
 else {
      this.testUri=new URI(super.getTestUrl());
    }
  }
  public boolean isSecureMode(){
    return this.getAuthType() == AuthType.SharedKey ? false : true;
  }
}
