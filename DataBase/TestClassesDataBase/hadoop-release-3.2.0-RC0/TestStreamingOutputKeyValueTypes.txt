/** 
 * Tests stream job with java tasks, commands in MapReduce local mode. Validates if user-set config properties {@link MRJobConfig#MAP_OUTPUT_KEY_CLASS} and{@link MRJobConfig#OUTPUT_KEY_CLASS} are honored by streaming jobs.
 */
public class TestStreamingOutputKeyValueTypes extends TestStreaming {
  public TestStreamingOutputKeyValueTypes() throws IOException {
    super();
    input="one line dummy input\n";
  }
  @Before @Override public void setUp() throws IOException {
    args.clear();
    super.setUp();
  }
  @Override protected String[] genArgs(){
    args.add("-jobconf");
    args.add(MRJobConfig.MAP_OUTPUT_KEY_CLASS + "=org.apache.hadoop.io.LongWritable");
    args.add("-jobconf");
    args.add(MRJobConfig.OUTPUT_KEY_CLASS + "=org.apache.hadoop.io.LongWritable");
    args.add("-outputformat");
    args.add("org.apache.hadoop.mapred.SequenceFileOutputFormat");
    return super.genArgs();
  }
  @Override protected void checkOutput() throws IOException {
  }
public static class MyReducer<K,V> extends MapReduceBase implements Reducer<K,V,LongWritable,Text> {
    public void reduce(    K key,    Iterator<V> values,    OutputCollector<LongWritable,Text> output,    Reporter reporter) throws IOException {
      LongWritable l=new LongWritable();
      while (values.hasNext()) {
        output.collect(l,new Text(values.next().toString()));
      }
    }
  }
  @Test public void testJavaMapperAndJavaReducer() throws Exception {
    map="org.apache.hadoop.mapred.lib.IdentityMapper";
    reduce="org.apache.hadoop.mapred.lib.IdentityReducer";
    super.testCommandLine();
  }
  @Test public void testJavaMapperAndJavaReducerAndZeroReduces() throws Exception {
    map="org.apache.hadoop.mapred.lib.IdentityMapper";
    reduce="org.apache.hadoop.mapred.lib.IdentityReducer";
    args.add("-numReduceTasks");
    args.add("0");
    super.testCommandLine();
  }
  @Test public void testJavaMapperWithReduceNone() throws Exception {
    map="org.apache.hadoop.mapred.lib.IdentityMapper";
    reduce="NONE";
    super.testCommandLine();
  }
  @Test public void testJavaMapperAndCommandReducer() throws Exception {
    map="org.apache.hadoop.mapred.lib.IdentityMapper";
    reduce=CAT;
    super.testCommandLine();
  }
  @Test public void testJavaMapperAndCommandReducerAndZeroReduces() throws Exception {
    map="org.apache.hadoop.mapred.lib.IdentityMapper";
    reduce=CAT;
    args.add("-numReduceTasks");
    args.add("0");
    super.testCommandLine();
  }
  @Test public void testCommandMapperAndJavaReducer() throws Exception {
    map=CAT;
    reduce=MyReducer.class.getName();
    super.testCommandLine();
  }
  @Test public void testCommandMapperAndJavaReducerAndZeroReduces() throws Exception {
    map=CAT;
    reduce=MyReducer.class.getName();
    args.add("-numReduceTasks");
    args.add("0");
    super.testCommandLine();
  }
  @Test public void testCommandMapperWithReduceNone() throws Exception {
    map=CAT;
    reduce="NONE";
    super.testCommandLine();
  }
  @Test public void testCommandMapperAndCommandReducer() throws Exception {
    map=CAT;
    reduce=CAT;
    super.testCommandLine();
  }
  @Test public void testCommandMapperAndCommandReducerAndZeroReduces() throws Exception {
    map=CAT;
    reduce=CAT;
    args.add("-numReduceTasks");
    args.add("0");
    super.testCommandLine();
  }
  @Test public void testDefaultToIdentityReducer() throws Exception {
    args.add("-mapper");
    args.add(map);
    args.add("-jobconf");
    args.add("mapreduce.task.files.preserve.failedtasks=true");
    args.add("-jobconf");
    args.add("stream.tmpdir=" + System.getProperty("test.build.data","/tmp"));
    args.add("-inputformat");
    args.add(TextInputFormat.class.getName());
    super.testCommandLine();
  }
  @Override @Test public void testCommandLine(){
  }
}
