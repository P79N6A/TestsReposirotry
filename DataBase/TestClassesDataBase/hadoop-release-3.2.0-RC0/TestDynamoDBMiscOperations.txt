/** 
 * Unit test suite for misc dynamoDB metastore operations.
 */
public class TestDynamoDBMiscOperations extends HadoopTestBase {
  private static final String TIMEOUT_ERROR_MESSAGE="Table table-name did not transition into ACTIVE state.";
  @Test public void testUnwrapTableWaitTimeout() throws Throwable {
    final Exception waiterTimedOut=new WaiterTimedOutException("waiter timed out");
    final AWSClientIOException ex=intercept(AWSClientIOException.class,TIMEOUT_ERROR_MESSAGE,() -> {
      throw translateTableWaitFailure("example",new IllegalArgumentException(TIMEOUT_ERROR_MESSAGE,waiterTimedOut));
    }
);
    assertEquals(waiterTimedOut,ex.getCause());
  }
  @Test public void testTranslateIllegalArgumentException() throws Throwable {
    final IllegalArgumentException e=new IllegalArgumentException(TIMEOUT_ERROR_MESSAGE);
    final IOException ex=intercept(IOException.class,TIMEOUT_ERROR_MESSAGE,() -> {
      throw translateTableWaitFailure("example",e);
    }
);
    assertEquals(e,ex.getCause());
  }
  @Test public void testTranslateWrappedDDBException() throws Throwable {
    final Exception inner=new ResourceNotFoundException("ddb");
    final IllegalArgumentException e=new IllegalArgumentException("outer",inner);
    final FileNotFoundException ex=intercept(FileNotFoundException.class,"outer",() -> {
      throw translateTableWaitFailure("example",e);
    }
);
    assertEquals(inner,ex.getCause());
  }
  @Test public void testTranslateWrappedOtherException() throws Throwable {
    final Exception inner=new NullPointerException("npe");
    final IllegalArgumentException e=new IllegalArgumentException("outer",inner);
    final IOException ex=intercept(IOException.class,"outer",() -> {
      throw translateTableWaitFailure("example",e);
    }
);
    assertEquals(e,ex.getCause());
  }
}
