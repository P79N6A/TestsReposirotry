public class TestApplicationACLsManager {
  private static final String ADMIN_USER="adminuser";
  private static final String APP_OWNER="appuser";
  private static final String TESTUSER1="testuser1";
  private static final String TESTUSER2="testuser2";
  private static final String TESTUSER3="testuser3";
  @Test public void testCheckAccess(){
    Configuration conf=new Configuration();
    conf.setBoolean(YarnConfiguration.YARN_ACL_ENABLE,true);
    conf.set(YarnConfiguration.YARN_ADMIN_ACL,ADMIN_USER);
    ApplicationACLsManager aclManager=new ApplicationACLsManager(conf);
    Map<ApplicationAccessType,String> aclMap=new HashMap<ApplicationAccessType,String>();
    aclMap.put(ApplicationAccessType.VIEW_APP,TESTUSER1 + "," + TESTUSER3);
    aclMap.put(ApplicationAccessType.MODIFY_APP,TESTUSER1);
    ApplicationId appId=ApplicationId.newInstance(1,1);
    aclManager.addApplication(appId,aclMap);
    UserGroupInformation testUser1=UserGroupInformation.createRemoteUser(TESTUSER1);
    assertTrue(aclManager.checkAccess(testUser1,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(testUser1,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation testUser2=UserGroupInformation.createRemoteUser(TESTUSER2);
    assertFalse(aclManager.checkAccess(testUser2,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertFalse(aclManager.checkAccess(testUser2,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation testUser3=UserGroupInformation.createRemoteUser(TESTUSER3);
    assertTrue(aclManager.checkAccess(testUser3,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertFalse(aclManager.checkAccess(testUser3,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation appOwner=UserGroupInformation.createRemoteUser(APP_OWNER);
    assertTrue(aclManager.checkAccess(appOwner,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(appOwner,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation adminUser=UserGroupInformation.createRemoteUser(ADMIN_USER);
    assertTrue(aclManager.checkAccess(adminUser,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(adminUser,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
  }
  @Test public void testCheckAccessWithNullACLS(){
    Configuration conf=new Configuration();
    conf.setBoolean(YarnConfiguration.YARN_ACL_ENABLE,true);
    conf.set(YarnConfiguration.YARN_ADMIN_ACL,ADMIN_USER);
    ApplicationACLsManager aclManager=new ApplicationACLsManager(conf);
    UserGroupInformation appOwner=UserGroupInformation.createRemoteUser(APP_OWNER);
    ApplicationId appId=ApplicationId.newInstance(1,1);
    assertTrue(aclManager.checkAccess(appOwner,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(appOwner,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    UserGroupInformation adminUser=UserGroupInformation.createRemoteUser(ADMIN_USER);
    assertTrue(aclManager.checkAccess(adminUser,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(adminUser,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation testUser1=UserGroupInformation.createRemoteUser(TESTUSER1);
    assertFalse(aclManager.checkAccess(testUser1,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertFalse(aclManager.checkAccess(testUser1,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
  }
  @Test public void testCheckAccessWithPartialACLS(){
    Configuration conf=new Configuration();
    conf.setBoolean(YarnConfiguration.YARN_ACL_ENABLE,true);
    conf.set(YarnConfiguration.YARN_ADMIN_ACL,ADMIN_USER);
    ApplicationACLsManager aclManager=new ApplicationACLsManager(conf);
    UserGroupInformation appOwner=UserGroupInformation.createRemoteUser(APP_OWNER);
    Map<ApplicationAccessType,String> aclMap=new HashMap<ApplicationAccessType,String>();
    aclMap.put(ApplicationAccessType.VIEW_APP,TESTUSER1);
    ApplicationId appId=ApplicationId.newInstance(1,1);
    aclManager.addApplication(appId,aclMap);
    assertTrue(aclManager.checkAccess(appOwner,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(appOwner,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    UserGroupInformation adminUser=UserGroupInformation.createRemoteUser(ADMIN_USER);
    assertTrue(aclManager.checkAccess(adminUser,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertTrue(aclManager.checkAccess(adminUser,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation testUser1=UserGroupInformation.createRemoteUser(TESTUSER1);
    assertTrue(aclManager.checkAccess(testUser1,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertFalse(aclManager.checkAccess(testUser1,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
    UserGroupInformation testUser2=UserGroupInformation.createRemoteUser(TESTUSER2);
    assertFalse(aclManager.checkAccess(testUser2,ApplicationAccessType.VIEW_APP,APP_OWNER,appId));
    assertFalse(aclManager.checkAccess(testUser2,ApplicationAccessType.MODIFY_APP,APP_OWNER,appId));
  }
}
