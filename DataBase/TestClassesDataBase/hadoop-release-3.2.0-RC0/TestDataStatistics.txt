public class TestDataStatistics {
  private static final double TOL=0.001;
  @Test public void testEmptyDataStatistics() throws Exception {
    DataStatistics statistics=new DataStatistics();
    Assert.assertEquals(0,statistics.count(),TOL);
    Assert.assertEquals(0,statistics.mean(),TOL);
    Assert.assertEquals(0,statistics.var(),TOL);
    Assert.assertEquals(0,statistics.std(),TOL);
    Assert.assertEquals(0,statistics.outlier(1.0f),TOL);
  }
  @Test public void testSingleEntryDataStatistics() throws Exception {
    DataStatistics statistics=new DataStatistics(17.29);
    Assert.assertEquals(1,statistics.count(),TOL);
    Assert.assertEquals(17.29,statistics.mean(),TOL);
    Assert.assertEquals(0,statistics.var(),TOL);
    Assert.assertEquals(0,statistics.std(),TOL);
    Assert.assertEquals(17.29,statistics.outlier(1.0f),TOL);
  }
  @Test public void testMutiEntryDataStatistics() throws Exception {
    DataStatistics statistics=new DataStatistics();
    statistics.add(17);
    statistics.add(29);
    Assert.assertEquals(2,statistics.count(),TOL);
    Assert.assertEquals(23.0,statistics.mean(),TOL);
    Assert.assertEquals(36.0,statistics.var(),TOL);
    Assert.assertEquals(6.0,statistics.std(),TOL);
    Assert.assertEquals(29.0,statistics.outlier(1.0f),TOL);
  }
  @Test public void testUpdateStatistics() throws Exception {
    DataStatistics statistics=new DataStatistics(17);
    statistics.add(29);
    Assert.assertEquals(2,statistics.count(),TOL);
    Assert.assertEquals(23.0,statistics.mean(),TOL);
    Assert.assertEquals(36.0,statistics.var(),TOL);
    statistics.updateStatistics(17,29);
    Assert.assertEquals(2,statistics.count(),TOL);
    Assert.assertEquals(29.0,statistics.mean(),TOL);
    Assert.assertEquals(0.0,statistics.var(),TOL);
  }
}
