public class TestDataNodeTransferSocketSize {
  @Test public void testSpecifiedDataSocketSize() throws Exception {
    Configuration conf=new HdfsConfiguration();
    conf.setInt(DFSConfigKeys.DFS_DATANODE_TRANSFER_SOCKET_RECV_BUFFER_SIZE_KEY,4 * 1024);
    SimulatedFSDataset.setFactory(conf);
    MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
    try {
      List<DataNode> datanodes=cluster.getDataNodes();
      DataNode datanode=datanodes.get(0);
      assertEquals("Receive buffer size should be 4K",4 * 1024,datanode.getXferServer().getPeerServer().getReceiveBufferSize());
    }
  finally {
      if (cluster != null) {
        cluster.shutdown();
      }
    }
  }
  @Test public void testAutoTuningDataSocketSize() throws Exception {
    Configuration conf=new HdfsConfiguration();
    conf.setInt(DFSConfigKeys.DFS_DATANODE_TRANSFER_SOCKET_RECV_BUFFER_SIZE_KEY,0);
    SimulatedFSDataset.setFactory(conf);
    MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
    try {
      List<DataNode> datanodes=cluster.getDataNodes();
      DataNode datanode=datanodes.get(0);
      assertTrue("Receive buffer size should be a default value (determined by kernel)",datanode.getXferServer().getPeerServer().getReceiveBufferSize() > 0);
    }
  finally {
      if (cluster != null) {
        cluster.shutdown();
      }
    }
  }
}
