public class TestUserGroupMappingPlacementRule {
  YarnConfiguration conf=new YarnConfiguration();
  @Before public void setup(){
    conf.setClass(CommonConfigurationKeys.HADOOP_SECURITY_GROUP_MAPPING,SimpleGroupsMapping.class,GroupMappingServiceProvider.class);
  }
  private void verifyQueueMapping(  QueueMapping queueMapping,  String inputUser,  String expectedQueue) throws YarnException {
    verifyQueueMapping(queueMapping,inputUser,YarnConfiguration.DEFAULT_QUEUE_NAME,expectedQueue,false);
  }
  private void verifyQueueMapping(  QueueMapping queueMapping,  String inputUser,  String inputQueue,  String expectedQueue,  boolean overwrite) throws YarnException {
    Groups groups=new Groups(conf);
    UserGroupMappingPlacementRule rule=new UserGroupMappingPlacementRule(overwrite,Arrays.asList(queueMapping),groups);
    ApplicationSubmissionContext asc=Records.newRecord(ApplicationSubmissionContext.class);
    asc.setQueue(inputQueue);
    ApplicationPlacementContext ctx=rule.getPlacementForApp(asc,inputUser);
    Assert.assertEquals(expectedQueue,ctx != null ? ctx.getQueue() : inputQueue);
  }
  @Test public void testMapping() throws YarnException {
    verifyQueueMapping(new QueueMapping(MappingType.USER,"a","q1"),"a","q1");
    verifyQueueMapping(new QueueMapping(MappingType.GROUP,"agroup","q1"),"a","q1");
    verifyQueueMapping(new QueueMapping(MappingType.USER,"%user","q2"),"a","q2");
    verifyQueueMapping(new QueueMapping(MappingType.USER,"%user","%user"),"a","a");
    verifyQueueMapping(new QueueMapping(MappingType.USER,"%user","%primary_group"),"a","agroup");
    verifyQueueMapping(new QueueMapping(MappingType.GROUP,"asubgroup1","q1"),"a","q1");
    verifyQueueMapping(new QueueMapping(MappingType.USER,"user","q1"),"user","q2","q1",true);
    verifyQueueMapping(new QueueMapping(MappingType.USER,"user","q1"),"user","q2","q2",false);
    verifyQueueMapping(new QueueMapping(MappingType.GROUP,"usergroup","%user","usergroup"),"user","default","user",false);
    verifyQueueMapping(new QueueMapping(MappingType.GROUP,"usergroup","%user","usergroup"),"user","agroup","user",true);
    verifyQueueMapping(new QueueMapping(MappingType.GROUP,"agroup","%user","parent1"),"a","a");
    verifyQueueMapping(new QueueMapping(MappingType.GROUP,"agroup","%user"),"a","a");
  }
}
