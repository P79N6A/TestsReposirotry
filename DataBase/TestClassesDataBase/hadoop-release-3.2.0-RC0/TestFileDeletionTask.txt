/** 
 * Test the attributes of the  {@link FileDeletionTask} class.
 */
public class TestFileDeletionTask {
  private static final int ID=0;
  private static final String USER="user";
  private static final Path SUBDIR=new Path("subdir");
  private static final Path BASEDIR=new Path("basedir");
  private List<Path> baseDirs=new ArrayList<>();
  private DeletionService deletionService;
  private FileDeletionTask deletionTask;
  @Before public void setUp() throws Exception {
    deletionService=mock(DeletionService.class);
    baseDirs.add(BASEDIR);
    deletionTask=new FileDeletionTask(ID,deletionService,USER,SUBDIR,baseDirs);
  }
  @After public void tearDown() throws Exception {
    baseDirs.clear();
  }
  @Test public void testGetUser() throws Exception {
    assertEquals(USER,deletionTask.getUser());
  }
  @Test public void testGetSubDir() throws Exception {
    assertEquals(SUBDIR,deletionTask.getSubDir());
  }
  @Test public void testGetBaseDirs() throws Exception {
    assertEquals(1,deletionTask.getBaseDirs().size());
    assertEquals(baseDirs,deletionTask.getBaseDirs());
  }
  @Test public void testConvertDeletionTaskToProto() throws Exception {
    DeletionServiceDeleteTaskProto proto=deletionTask.convertDeletionTaskToProto();
    assertEquals(ID,proto.getId());
    assertEquals(USER,proto.getUser());
    assertEquals(SUBDIR,new Path(proto.getSubdir()));
    assertEquals(BASEDIR,new Path(proto.getBasedirs(0)));
    assertEquals(1,proto.getBasedirsCount());
  }
}
