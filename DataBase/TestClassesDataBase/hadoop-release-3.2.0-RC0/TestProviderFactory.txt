/** 
 * Test provider factories.
 */
public class TestProviderFactory {
  @Test public void testDockerFactory() throws Throwable {
    ProviderFactory factory=ProviderFactory.createServiceProviderFactory(new Artifact().type(TypeEnum.DOCKER));
    assertTrue(factory instanceof DockerProviderFactory);
    assertTrue(factory.createClientProvider() instanceof DockerClientProvider);
    assertTrue(factory.createServerProvider() instanceof DockerProviderService);
    assertTrue(ProviderFactory.getProviderService(new Artifact().type(TypeEnum.DOCKER)) instanceof DockerProviderService);
  }
  @Test public void testTarballFactory() throws Throwable {
    ProviderFactory factory=ProviderFactory.createServiceProviderFactory(new Artifact().type(TypeEnum.TARBALL));
    assertTrue(factory instanceof TarballProviderFactory);
    assertTrue(factory.createClientProvider() instanceof TarballClientProvider);
    assertTrue(factory.createServerProvider() instanceof TarballProviderService);
    assertTrue(ProviderFactory.getProviderService(new Artifact().type(TypeEnum.TARBALL)) instanceof TarballProviderService);
  }
  @Test public void testDefaultFactory() throws Throwable {
    ProviderFactory factory=ProviderFactory.createServiceProviderFactory(null);
    assertTrue(factory instanceof DefaultProviderFactory);
    assertTrue(factory.createClientProvider() instanceof DefaultClientProvider);
    assertTrue(factory.createServerProvider() instanceof DefaultProviderService);
    assertTrue(ProviderFactory.getProviderService(null) instanceof DefaultProviderService);
  }
}
