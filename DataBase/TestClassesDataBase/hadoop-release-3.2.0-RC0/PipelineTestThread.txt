/** 
 * Test thread which creates a file, has another fake user recover the lease on the file, and then ensures that the file's contents are properly readable. If any of these steps fails, propagates an exception back to the test context, causing the test case to fail.
 */
private static class PipelineTestThread extends RepeatingTestThread {
  private final FileSystem fs;
  private final FileSystem fsOtherUser;
  private final Path path;
  public PipelineTestThread(  TestContext ctx,  FileSystem fs,  FileSystem fsOtherUser,  Path p){
    super(ctx);
    this.fs=fs;
    this.fsOtherUser=fsOtherUser;
    this.path=p;
  }
  @Override public void doAnAction() throws Exception {
    FSDataOutputStream stm=fs.create(path,true);
    try {
      AppendTestUtil.write(stm,0,100);
      stm.hflush();
      loopRecoverLease(fsOtherUser,path);
      AppendTestUtil.check(fs,path,100);
    }
  finally {
      try {
        stm.close();
      }
 catch (      IOException e) {
      }
    }
  }
  @Override public String toString(){
    return "Pipeline test thread for " + path;
  }
}
