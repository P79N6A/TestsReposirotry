private class TestV2TimelineClient extends TestV2TimelineClientForExceptionHandling {
  private boolean sleepBeforeReturn;
  private List<TimelineEntities> publishedEntities;
  public TimelineEntities getPublishedEntities(  int putIndex){
    Assert.assertTrue("Not So many entities Published",putIndex < publishedEntities.size());
    return publishedEntities.get(putIndex);
  }
  public void setSleepBeforeReturn(  boolean sleepBeforeReturn){
    this.sleepBeforeReturn=sleepBeforeReturn;
  }
  public int getNumOfTimelineEntitiesPublished(){
    return publishedEntities.size();
  }
  public TestV2TimelineClient(  ApplicationId id){
    super(id);
    publishedEntities=new ArrayList<TimelineEntities>();
  }
  protected void putObjects(  String path,  MultivaluedMap<String,String> params,  Object obj) throws IOException, YarnException {
    if (isThrowYarnException()) {
      throw new YarnException("ActualException");
    }
    publishedEntities.add((TimelineEntities)obj);
    if (sleepBeforeReturn) {
      try {
        Thread.sleep(TIME_TO_SLEEP);
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
      }
    }
  }
}
