/** 
 * Unit tests for TimelineCollectorManager.
 */
public class TestTimelineCollectorManager {
  @Test(timeout=60000,expected=YarnRuntimeException.class) public void testTimelineCollectorManagerWithInvalidTimelineWriter(){
    Configuration conf=new YarnConfiguration();
    conf.set(YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,Object.class.getName());
    runTimelineCollectorManagerWithConfig(conf);
  }
  @Test(timeout=60000,expected=YarnRuntimeException.class) public void testTimelineCollectorManagerWithNonexistentTimelineWriter(){
    String nonexistentTimelineWriterClass="org.apache.org.yarn.server." + "timelineservice.storage.XXXXXXXX";
    Configuration conf=new YarnConfiguration();
    conf.set(YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,nonexistentTimelineWriterClass);
    runTimelineCollectorManagerWithConfig(conf);
  }
  @Test(timeout=60000) public void testTimelineCollectorManagerWithFileSystemWriter(){
    Configuration conf=new YarnConfiguration();
    conf.setClass(YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,FileSystemTimelineWriterImpl.class,TimelineWriter.class);
    runTimelineCollectorManagerWithConfig(conf);
  }
  /** 
 * Run a TimelineCollectorManager with a given configuration.
 * @param conf configuration to run TimelineCollectorManager with
 */
  private static void runTimelineCollectorManagerWithConfig(  final Configuration conf){
    TimelineCollectorManager collectorManager=new TimelineCollectorManager("testTimelineCollectorManager");
    try {
      collectorManager.init(conf);
      collectorManager.start();
    }
  finally {
      collectorManager.stop();
    }
  }
}
