public class TestAddStripedBlockInFBR {
  private final ErasureCodingPolicy ecPolicy=StripedFileTestUtil.getDefaultECPolicy();
  private final int cellSize=ecPolicy.getCellSize();
  private final short dataBlocks=(short)ecPolicy.getNumDataUnits();
  private final short parityBlocks=(short)ecPolicy.getNumParityUnits();
  private final short groupSize=(short)(dataBlocks + parityBlocks);
  private MiniDFSCluster cluster;
  private DistributedFileSystem dfs;
  @Rule public Timeout globalTimeout=new Timeout(300000);
  @Before public void setup() throws IOException {
    Configuration conf=new HdfsConfiguration();
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(groupSize).build();
    cluster.waitActive();
    dfs=cluster.getFileSystem();
    dfs.enableErasureCodingPolicy(StripedFileTestUtil.getDefaultECPolicy().getName());
  }
  @After public void tearDown(){
    if (cluster != null) {
      cluster.shutdown();
      cluster=null;
    }
  }
  @Test public void testAddBlockInFullBlockReport() throws Exception {
    BlockManager spy=Mockito.spy(cluster.getNamesystem().getBlockManager());
    final DataNode dn=cluster.getDataNodes().get(0);
    final DatanodeID datanodeID=dn.getDatanodeId();
    Mockito.doNothing().when(spy).processIncrementalBlockReport(Mockito.eq(datanodeID),Mockito.any());
    Whitebox.setInternalState(cluster.getNamesystem(),"blockManager",spy);
    final Path ecDir=new Path("/ec");
    final Path repDir=new Path("/rep");
    dfs.mkdirs(ecDir);
    dfs.mkdirs(repDir);
    dfs.getClient().setErasureCodingPolicy(ecDir.toString(),StripedFileTestUtil.getDefaultECPolicy().getName());
    final Path[] repFiles=new Path[groupSize];
    for (int i=0; i < groupSize; i++) {
      repFiles[i]=new Path(repDir,"f" + i);
      DFSTestUtil.createFile(dfs,repFiles[i],1L,(short)3,0L);
    }
    final Path ecFile=new Path(ecDir,"f");
    DFSTestUtil.createFile(dfs,ecFile,cellSize * dataBlocks,(short)1,0L);
    GenericTestUtils.waitFor(new Supplier<Boolean>(){
      @Override public Boolean get(){
        try {
          cluster.triggerBlockReports();
          BlockInfoStriped blockInfo=(BlockInfoStriped)cluster.getNamesystem().getFSDirectory().getINode(ecFile.toString()).asFile().getLastBlock();
          NumberReplicas nr=spy.countNodes(blockInfo);
          return nr.excessReplicas() == 0 && nr.liveReplicas() == groupSize;
        }
 catch (        Exception ignored) {
        }
        return false;
      }
    }
,3000,60000);
  }
}
