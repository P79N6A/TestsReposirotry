/** 
 * A fake shared resource, for use in automatic failover testing. This simulates a real shared resource like a shared edit log. When the  {@link DummyHAService} instances change state or getfenced, they notify the shared resource, which asserts that we never have two HA services who think they're holding the resource at the same time.
 */
public class DummySharedResource {
  private DummyHAService holder=null;
  private int violations=0;
  public synchronized void take(  DummyHAService newHolder){
    if (holder == null || holder == newHolder) {
      holder=newHolder;
    }
 else {
      violations++;
      throw new IllegalStateException("already held by: " + holder);
    }
  }
  public synchronized void release(  DummyHAService oldHolder){
    if (holder == oldHolder) {
      holder=null;
    }
  }
  public synchronized void assertNoViolations(){
    Assert.assertEquals(0,violations);
  }
}
