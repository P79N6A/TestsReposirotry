import "copyright.stg"

targetPath() ::= "com/gs/collections/api/factory/set/primitive"

fileName(primitive) ::= "Immutable<primitive.name>SetFactory"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyright()>

package com.gs.collections.api.factory.set.primitive;

import com.gs.collections.api.<name>Iterable;
import com.gs.collections.api.set.primitive.Immutable<name>Set;

/**
 * A factory which creates instances of type {@link Immutable<name>Set}.
 * This file was automatically generated from template file immutablePrimitiveSetFactory.stg.
 *
 * @since 4.0.
 */
public interface Immutable<name>SetFactory
{
    /**
     * @since 6.0
     */
    Immutable<name>Set empty();

    /**
     * Same as {@link #empty()}.
     */
    Immutable<name>Set of();

    /**
     * Same as {@link #empty()}.
     */
    Immutable<name>Set with();

    /**
     * Same as {@link #with(<type>)}.
     */
    Immutable<name>Set of(<type> one);

    Immutable<name>Set with(<type> one);

    /**
     * Same as {@link #with(<type>[])}.
     */
    Immutable<name>Set of(<type>... items);

    Immutable<name>Set with(<type>... items);

    /**
     * Same as {@link #withAll(<name>Iterable)}.
     */
    Immutable<name>Set ofAll(<name>Iterable items);

    Immutable<name>Set withAll(<name>Iterable items);
}

>>
